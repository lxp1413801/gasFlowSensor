Version 3.2 HI-TECH Software Intermediate Code
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 38: typedef signed long int int32_t;
[; ;stdint.h: 45: typedef unsigned char uint8_t;
[; ;stdint.h: 51: typedef unsigned int uint16_t;
[; ;stdint.h: 67: typedef unsigned long int uint32_t;
[; ;stdint.h: 75: typedef signed char int_least8_t;
[; ;stdint.h: 82: typedef signed int int_least16_t;
[; ;stdint.h: 104: typedef signed long int int_least32_t;
[; ;stdint.h: 111: typedef unsigned char uint_least8_t;
[; ;stdint.h: 117: typedef unsigned int uint_least16_t;
[; ;stdint.h: 136: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 145: typedef signed char int_fast8_t;
[; ;stdint.h: 152: typedef signed int int_fast16_t;
[; ;stdint.h: 174: typedef signed long int int_fast32_t;
[; ;stdint.h: 181: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 187: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 206: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 212: typedef int32_t intmax_t;
[; ;stdint.h: 217: typedef uint32_t uintmax_t;
[; ;stdint.h: 222: typedef int16_t intptr_t;
[; ;stdint.h: 227: typedef uint16_t uintptr_t;
[; ;m_string.h: 7: extern void m_mem_set(uint8_t* buf,uint8_t x,uint16_t len);
[; ;m_string.h: 8: extern void m_mem_cpy(uint8_t* d,uint8_t* s);
[; ;m_string.h: 9: extern void m_mem_cpy_len(uint8_t* d,uint8_t* s,uint16_t len);
[; ;m_string.h: 10: extern uint16_t m_str_match(uint8_t* b,uint8_t* c);
[; ;m_string.h: 11: extern int32_t m_math_pow(int32_t x,int32_t y);
[; ;m_string.h: 12: extern uint8_t m_str_cmp(uint8_t* d,uint8_t* s);
[; ;m_string.h: 13: extern uint8_t m_str_cmp_len(uint8_t* d,uint8_t* s,uint16_t len);
[; ;m_string.h: 14: extern uint16_t HEX8(uint8_t* hex,uint8_t x);
[; ;m_string.h: 15: extern uint16_t m_str_b2h(uint8_t* h,uint8_t* b,uint16_t len);
[; ;m_string.h: 16: extern uint16_t m_str_h2b(uint8_t* b,uint8_t* h,uint16_t len);
[; ;m_string.h: 19: extern void m_int_2_str(uint8_t* buf,int32_t x,uint16_t len);
[; ;m_string.h: 20: extern void m_int_2_str_ex(uint8_t* buf,int32_t x,uint16_t ssize);
[; ;m_string.h: 21: extern uint16_t m_str_head_hide(uint8_t* str,uint16_t loc);
[; ;m_string.h: 23: extern const uint8_t Bcd2HexTable[];
[; ;m_string.h: 24: extern const uint8_t Hex2BcdTable[];
[; ;m_string.h: 30: extern uint32_t swap_uint32(uint32_t x);
[; ;m_string.h: 31: extern uint16_t swap_uint16(uint16_t x);
[; ;m_string.h: 36: extern void int32_array_shift_right(int32_t *p32,uint16_t eoc);
"3 src/depend/m_string.c
[v _HexTable `Cuc ~T0 @X0 -> 0 `x e ]
[i _HexTable
:U ..
-> 48 `c
-> 49 `c
-> 50 `c
-> 51 `c
-> 52 `c
-> 53 `c
-> 54 `c
-> 55 `c
-> 56 `c
-> 57 `c
-> 65 `c
-> 66 `c
-> 67 `c
-> 68 `c
-> 69 `c
-> 70 `c
-> 0 `c
..
]
[; ;m_string.c: 3: const uint8_t HexTable[]="0123456789ABCDEF";
"32
[v _m_mem_set `(v ~T0 @X0 1 ef3`*uc`uc`ui ]
"33
{
[; ;m_string.c: 32: void m_mem_set(uint8_t* buf,uint8_t x,uint16_t len)
[; ;m_string.c: 33: {
[e :U _m_mem_set ]
"32
[v _buf `*uc ~T0 @X0 1 r1 ]
[v _x `uc ~T0 @X0 1 r2 ]
[v _len `ui ~T0 @X0 1 r3 ]
"33
[f ]
[; ;m_string.c: 34: while(len--)
"34
[e $U 2  ]
[e :U 3 ]
[; ;m_string.c: 35: {
"35
{
[; ;m_string.c: 36: *buf++=x;
"36
[e = *U ++ _buf * -> -> 1 `i `x -> -> # *U _buf `i `x _x ]
"37
}
[e :U 2 ]
"34
[e $ != -- _len -> -> 1 `i `ui -> -> 0 `i `ui 3  ]
[e :U 4 ]
[; ;m_string.c: 37: }
[; ;m_string.c: 38: }
"38
[e :UE 1 ]
}
"39
[v _m_mem_cpy `(v ~T0 @X0 1 ef2`*uc`*uc ]
"40
{
[; ;m_string.c: 39: void m_mem_cpy(uint8_t* d,uint8_t* s)
[; ;m_string.c: 40: {
[e :U _m_mem_cpy ]
"39
[v _d `*uc ~T0 @X0 1 r1 ]
[v _s `*uc ~T0 @X0 1 r2 ]
"40
[f ]
[; ;m_string.c: 41: while(*s!='\0')
"41
[e $U 6  ]
[e :U 7 ]
[; ;m_string.c: 42: {
"42
{
[; ;m_string.c: 43: *d++=*s++;
"43
[e = *U ++ _d * -> -> 1 `i `x -> -> # *U _d `i `x *U ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x ]
"44
}
[e :U 6 ]
"41
[e $ != -> *U _s `ui -> 0 `ui 7  ]
[e :U 8 ]
[; ;m_string.c: 44: }
[; ;m_string.c: 45: *d='\0';
"45
[e = *U _d -> -> 0 `ui `uc ]
[; ;m_string.c: 46: }
"46
[e :UE 5 ]
}
"47
[v _m_mem_cpy_len `(v ~T0 @X0 1 ef3`*uc`*uc`ui ]
"48
{
[; ;m_string.c: 47: void m_mem_cpy_len(uint8_t* d,uint8_t* s,uint16_t len)
[; ;m_string.c: 48: {
[e :U _m_mem_cpy_len ]
"47
[v _d `*uc ~T0 @X0 1 r1 ]
[v _s `*uc ~T0 @X0 1 r2 ]
[v _len `ui ~T0 @X0 1 r3 ]
"48
[f ]
[; ;m_string.c: 50: while(len)
"50
[e $U 10  ]
[e :U 11 ]
[; ;m_string.c: 51: {
"51
{
[; ;m_string.c: 52: *d++=*s++;
"52
[e = *U ++ _d * -> -> 1 `i `x -> -> # *U _d `i `x *U ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x ]
[; ;m_string.c: 53: len--;
"53
[e -- _len -> -> 1 `i `ui ]
"54
}
[e :U 10 ]
"50
[e $ != _len -> -> 0 `i `ui 11  ]
[e :U 12 ]
[; ;m_string.c: 54: }
[; ;m_string.c: 55: }
"55
[e :UE 9 ]
}
"56
[v _m_str_cmp `(uc ~T0 @X0 1 ef2`*uc`*uc ]
"57
{
[; ;m_string.c: 56: uint8_t m_str_cmp(uint8_t* d,uint8_t* s)
[; ;m_string.c: 57: {
[e :U _m_str_cmp ]
"56
[v _d `*uc ~T0 @X0 1 r1 ]
[v _s `*uc ~T0 @X0 1 r2 ]
"57
[f ]
"58
[v _ret `ui ~T0 @X0 1 a ]
[; ;m_string.c: 58: uint16_t ret=1;
[e = _ret -> -> 1 `i `ui ]
[; ;m_string.c: 59: while(*d!='\0' && *s!='\0')
"59
[e $U 14  ]
[e :U 15 ]
[; ;m_string.c: 60: {
"60
{
[; ;m_string.c: 61: if(*d != *s)
"61
[e $ ! != -> *U _d `i -> *U _s `i 17  ]
[; ;m_string.c: 62: {
"62
{
[; ;m_string.c: 63: ret=0;
"63
[e = _ret -> -> 0 `i `ui ]
[; ;m_string.c: 64: break;
"64
[e $U 16  ]
"65
}
[e :U 17 ]
[; ;m_string.c: 65: }
[; ;m_string.c: 66: s++;d++;
"66
[e ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x ]
[e ++ _d * -> -> 1 `i `x -> -> # *U _d `i `x ]
"67
}
[e :U 14 ]
"59
[e $ && != -> *U _d `ui -> 0 `ui != -> *U _s `ui -> 0 `ui 15  ]
[e :U 16 ]
[; ;m_string.c: 67: }
[; ;m_string.c: 68: return ret;
"68
[e ) -> _ret `uc ]
[e $UE 13  ]
[; ;m_string.c: 69: }
"69
[e :UE 13 ]
}
"70
[v _m_str_cmp_len `(uc ~T0 @X0 1 ef3`*uc`*uc`ui ]
"71
{
[; ;m_string.c: 70: uint8_t m_str_cmp_len(uint8_t* d,uint8_t* s,uint16_t len)
[; ;m_string.c: 71: {
[e :U _m_str_cmp_len ]
"70
[v _d `*uc ~T0 @X0 1 r1 ]
[v _s `*uc ~T0 @X0 1 r2 ]
[v _len `ui ~T0 @X0 1 r3 ]
"71
[f ]
"72
[v _ret `ui ~T0 @X0 1 a ]
[; ;m_string.c: 72: uint16_t ret=1;
[e = _ret -> -> 1 `i `ui ]
[; ;m_string.c: 73: while(len--){
"73
[e $U 19  ]
[e :U 20 ]
{
[; ;m_string.c: 74: if(*d != *s){
"74
[e $ ! != -> *U _d `i -> *U _s `i 22  ]
{
[; ;m_string.c: 75: ret=0;
"75
[e = _ret -> -> 0 `i `ui ]
[; ;m_string.c: 76: break;
"76
[e $U 21  ]
"77
}
[e :U 22 ]
[; ;m_string.c: 77: }
[; ;m_string.c: 78: s++;d++;
"78
[e ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x ]
[e ++ _d * -> -> 1 `i `x -> -> # *U _d `i `x ]
"79
}
[e :U 19 ]
"73
[e $ != -- _len -> -> 1 `i `ui -> -> 0 `i `ui 20  ]
[e :U 21 ]
[; ;m_string.c: 79: }
[; ;m_string.c: 80: return ret;
"80
[e ) -> _ret `uc ]
[e $UE 18  ]
[; ;m_string.c: 81: }
"81
[e :UE 18 ]
}
"82
[v _m_str_match `(ui ~T0 @X0 1 ef2`*uc`*uc ]
"83
{
[; ;m_string.c: 82: uint16_t m_str_match(uint8_t* b,uint8_t* c)
[; ;m_string.c: 83: {
[e :U _m_str_match ]
"82
[v _b `*uc ~T0 @X0 1 r1 ]
[v _c `*uc ~T0 @X0 1 r2 ]
"83
[f ]
"84
[v _bb `*uc ~T0 @X0 1 a ]
[v _cc `*uc ~T0 @X0 1 a ]
"85
[v _ret `ui ~T0 @X0 1 a ]
[; ;m_string.c: 84: uint8_t *bb,*cc;
[; ;m_string.c: 85: uint16_t ret=0;
[e = _ret -> -> 0 `i `ui ]
[; ;m_string.c: 86: while(*b!='\0' )
"86
[e $U 24  ]
[e :U 25 ]
[; ;m_string.c: 87: {
"87
{
[; ;m_string.c: 88: cc=c;
"88
[e = _cc _c ]
[; ;m_string.c: 89: bb=b++;
"89
[e = _bb ++ _b * -> -> 1 `i `x -> -> # *U _b `i `x ]
[; ;m_string.c: 90: ret=0;
"90
[e = _ret -> -> 0 `i `ui ]
[; ;m_string.c: 91: while(*bb!='\0' && *cc!='\0')
"91
[e $U 27  ]
[e :U 28 ]
[; ;m_string.c: 92: {
"92
{
[; ;m_string.c: 93: if(*bb!=*cc)
"93
[e $ ! != -> *U _bb `i -> *U _cc `i 30  ]
[; ;m_string.c: 94: {
"94
{
[; ;m_string.c: 95: ret=0;
"95
[e = _ret -> -> 0 `i `ui ]
[; ;m_string.c: 96: break;
"96
[e $U 29  ]
"97
}
[e :U 30 ]
[; ;m_string.c: 97: }
[; ;m_string.c: 98: bb++;
"98
[e ++ _bb * -> -> 1 `i `x -> -> # *U _bb `i `x ]
[; ;m_string.c: 99: cc++;
"99
[e ++ _cc * -> -> 1 `i `x -> -> # *U _cc `i `x ]
"100
}
[e :U 27 ]
"91
[e $ && != -> *U _bb `ui -> 0 `ui != -> *U _cc `ui -> 0 `ui 28  ]
[e :U 29 ]
[; ;m_string.c: 100: }
[; ;m_string.c: 101: if(*cc=='\0')
"101
[e $ ! == -> *U _cc `ui -> 0 `ui 31  ]
[; ;m_string.c: 102: {
"102
{
[; ;m_string.c: 105: return 1;
"105
[e ) -> -> 1 `i `ui ]
[e $UE 23  ]
"106
}
[e :U 31 ]
"107
}
[e :U 24 ]
"86
[e $ != -> *U _b `ui -> 0 `ui 25  ]
[e :U 26 ]
[; ;m_string.c: 106: }
[; ;m_string.c: 107: }
[; ;m_string.c: 108: return ret;
"108
[e ) _ret ]
[e $UE 23  ]
[; ;m_string.c: 109: }
"109
[e :UE 23 ]
}
"113
[v _m_math_pow `(l ~T0 @X0 1 ef2`l`l ]
"114
{
[; ;m_string.c: 113: int32_t m_math_pow(int32_t x,int32_t y)
[; ;m_string.c: 114: {
[e :U _m_math_pow ]
"113
[v _x `l ~T0 @X0 1 r1 ]
[v _y `l ~T0 @X0 1 r2 ]
"114
[f ]
"115
[v _ret `l ~T0 @X0 1 a ]
[; ;m_string.c: 115: int32_t ret=1;
[e = _ret -> -> 1 `i `l ]
[; ;m_string.c: 116: if(y==0)return 1;
"116
[e $ ! == _y -> -> 0 `i `l 33  ]
[e ) -> -> 1 `i `l ]
[e $UE 32  ]
[e :U 33 ]
[; ;m_string.c: 117: while(y--)
"117
[e $U 34  ]
[e :U 35 ]
[; ;m_string.c: 118: {
"118
{
[; ;m_string.c: 119: ret*=x;
"119
[e =* _ret _x ]
"120
}
[e :U 34 ]
"117
[e $ != -- _y -> -> 1 `i `l -> -> 0 `i `l 35  ]
[e :U 36 ]
[; ;m_string.c: 120: }
[; ;m_string.c: 121: return ret;
"121
[e ) _ret ]
[e $UE 32  ]
[; ;m_string.c: 122: }
"122
[e :UE 32 ]
}
"126
[v _m_int_2_str `(v ~T0 @X0 1 ef3`*uc`l`ui ]
"127
{
[; ;m_string.c: 126: void m_int_2_str(uint8_t* buf,int32_t x,uint16_t len)
[; ;m_string.c: 127: {
[e :U _m_int_2_str ]
"126
[v _buf `*uc ~T0 @X0 1 r1 ]
[v _x `l ~T0 @X0 1 r2 ]
[v _len `ui ~T0 @X0 1 r3 ]
"127
[f ]
"128
[v _t `l ~T0 @X0 1 a ]
[; ;m_string.c: 128: int32_t t;
[; ;m_string.c: 129: if(!len)return;
"129
[e $ ! ! != _len -> -> 0 `i `ui 38  ]
[e $UE 37  ]
[e :U 38 ]
[; ;m_string.c: 131: t=m_math_pow(10,len);
"131
[e = _t ( _m_math_pow (2 , -> -> 10 `i `l -> _len `l ]
[; ;m_string.c: 132: if(x>=t-1)x=t-1;
"132
[e $ ! >= _x - _t -> -> 1 `i `l 39  ]
[e = _x - _t -> -> 1 `i `l ]
[e :U 39 ]
[; ;m_string.c: 133: while(len--)
"133
[e $U 40  ]
[e :U 41 ]
[; ;m_string.c: 134: {
"134
{
[; ;m_string.c: 135: t=x%10;
"135
[e = _t % _x -> -> 10 `i `l ]
[; ;m_string.c: 136: *buf--=HexTable[t];
"136
[e = *U -- _buf * -> -> 1 `i `x -> -> # *U _buf `i `x *U + &U _HexTable * -> _t `ux -> -> # *U &U _HexTable `ui `ux ]
[; ;m_string.c: 137: x/=10;
"137
[e =/ _x -> -> 10 `uc `l ]
"138
}
[e :U 40 ]
"133
[e $ != -- _len -> -> 1 `i `ui -> -> 0 `i `ui 41  ]
[e :U 42 ]
[; ;m_string.c: 138: }
[; ;m_string.c: 139: }
"139
[e :UE 37 ]
}
"140
[v _m_int_2_str_ex `(v ~T0 @X0 1 ef3`*uc`l`ui ]
"141
{
[; ;m_string.c: 140: void m_int_2_str_ex(uint8_t* buf,int32_t x,uint16_t ssize)
[; ;m_string.c: 141: {
[e :U _m_int_2_str_ex ]
"140
[v _buf `*uc ~T0 @X0 1 r1 ]
[v _x `l ~T0 @X0 1 r2 ]
[v _ssize `ui ~T0 @X0 1 r3 ]
"141
[f ]
"142
[v _t `l ~T0 @X0 1 a ]
"143
[v _len `uc ~T0 @X0 1 a ]
[v _i `uc ~T0 @X0 1 a ]
"144
[v _sig `uc ~T0 @X0 1 a ]
[; ;m_string.c: 142: int32_t t;
[; ;m_string.c: 143: uint8_t len,i;
[; ;m_string.c: 144: uint8_t sig=0;
[e = _sig -> -> 0 `i `uc ]
[; ;m_string.c: 145: if(x<0){
"145
[e $ ! < _x -> -> 0 `i `l 44  ]
{
[; ;m_string.c: 146: sig=1;
"146
[e = _sig -> -> 1 `i `uc ]
[; ;m_string.c: 147: x=0-x;
"147
[e = _x - -> -> 0 `i `l _x ]
"148
}
[e :U 44 ]
[; ;m_string.c: 148: }
[; ;m_string.c: 149: m_mem_set(buf,0,ssize);
"149
[e ( _m_mem_set (3 , , _buf -> -> 0 `i `uc _ssize ]
[; ;m_string.c: 150: for(i=ssize-2;i>=1;i--){
"150
{
[e = _i -> - _ssize -> -> 2 `i `ui `uc ]
[e $ >= -> _i `i -> 1 `i 45  ]
[e $U 46  ]
[e :U 45 ]
{
[; ;m_string.c: 151: t=x%10;
"151
[e = _t % _x -> -> 10 `i `l ]
[; ;m_string.c: 152: buf[i]=(uint8_t)t+'0';
"152
[e = *U + _buf * -> _i `ux -> -> # *U _buf `ui `ux -> + -> -> _t `uc `ui -> 48 `ui `uc ]
[; ;m_string.c: 153: x/=10;
"153
[e =/ _x -> -> 10 `uc `l ]
[; ;m_string.c: 154: if(x==0)break;
"154
[e $ ! == _x -> -> 0 `i `l 48  ]
[e $U 46  ]
[e :U 48 ]
"155
}
"150
[e -- _i -> -> 1 `i `uc ]
[e $ >= -> _i `i -> 1 `i 45  ]
[e :U 46 ]
"155
}
[; ;m_string.c: 155: }
[; ;m_string.c: 156: if(sig){
"156
[e $ ! != -> _sig `i -> -> -> 0 `i `uc `i 49  ]
{
[; ;m_string.c: 157: if(i>0)buf[i]='-';
"157
[e $ ! > -> _i `i -> 0 `i 50  ]
[e = *U + _buf * -> _i `ux -> -> # *U _buf `ui `ux -> -> 45 `ui `uc ]
[e :U 50 ]
[; ;m_string.c: 158: i--;
"158
[e -- _i -> -> 1 `i `uc ]
"159
}
[e :U 49 ]
[; ;m_string.c: 159: }
[; ;m_string.c: 160: m_mem_cpy(buf,buf+i);
"160
[e ( _m_mem_cpy (2 , _buf + _buf * -> _i `ux -> -> # *U _buf `ui `ux ]
[; ;m_string.c: 161: }
"161
[e :UE 43 ]
}
"165
[v _m_str_head_hide `(ui ~T0 @X0 1 ef2`*uc`ui ]
"166
{
[; ;m_string.c: 165: uint16_t m_str_head_hide(uint8_t* str,uint16_t loc)
[; ;m_string.c: 166: {
[e :U _m_str_head_hide ]
"165
[v _str `*uc ~T0 @X0 1 r1 ]
[v _loc `ui ~T0 @X0 1 r2 ]
"166
[f ]
"167
[v _ret `ui ~T0 @X0 1 a ]
[; ;m_string.c: 167: uint16_t ret=0;
[e = _ret -> -> 0 `i `ui ]
[; ;m_string.c: 168: while(loc--)
"168
[e $U 52  ]
[e :U 53 ]
[; ;m_string.c: 169: {
"169
{
[; ;m_string.c: 170: if(*str=='0')
"170
[e $ ! == -> *U _str `ui -> 48 `ui 55  ]
[; ;m_string.c: 171: {
"171
{
[; ;m_string.c: 172: *str++=' ';
"172
[e = *U ++ _str * -> -> 1 `i `x -> -> # *U _str `i `x -> -> 32 `ui `uc ]
[; ;m_string.c: 173: ret++;
"173
[e ++ _ret -> -> 1 `i `ui ]
"174
}
[; ;m_string.c: 174: }
[e $U 56  ]
"175
[e :U 55 ]
[; ;m_string.c: 175: else
[; ;m_string.c: 176: {
"176
{
[; ;m_string.c: 177: break;
"177
[e $U 54  ]
"178
}
[e :U 56 ]
"179
}
[e :U 52 ]
"168
[e $ != -- _loc -> -> 1 `i `ui -> -> 0 `i `ui 53  ]
[e :U 54 ]
[; ;m_string.c: 178: }
[; ;m_string.c: 179: }
[; ;m_string.c: 180: return ret;
"180
[e ) _ret ]
[e $UE 51  ]
[; ;m_string.c: 181: }
"181
[e :UE 51 ]
}
"185
[v _HEX8 `(ui ~T0 @X0 1 ef2`*uc`uc ]
"186
{
[; ;m_string.c: 185: uint16_t HEX8(uint8_t* hex,uint8_t x)
[; ;m_string.c: 186: {
[e :U _HEX8 ]
"185
[v _hex `*uc ~T0 @X0 1 r1 ]
[v _x `uc ~T0 @X0 1 r2 ]
"186
[f ]
[; ;m_string.c: 187: *hex++=HexTable[(x&0xf0)>>4];
"187
[e = *U ++ _hex * -> -> 1 `i `x -> -> # *U _hex `i `x *U + &U _HexTable * -> -> >> & -> _x `i -> 240 `i -> 4 `i `ui `ux -> -> # *U &U _HexTable `ui `ux ]
[; ;m_string.c: 188: *hex++=HexTable[(x&0x0f)];
"188
[e = *U ++ _hex * -> -> 1 `i `x -> -> # *U _hex `i `x *U + &U _HexTable * -> -> & -> _x `i -> 15 `i `ui `ux -> -> # *U &U _HexTable `ui `ux ]
[; ;m_string.c: 189: hex='\0';
"189
[e = _hex -> -> 0 `ui `*uc ]
[; ;m_string.c: 190: return 3;
"190
[e ) -> -> 3 `i `ui ]
[e $UE 57  ]
[; ;m_string.c: 191: }
"191
[e :UE 57 ]
}
"196
[v _m_str_b2h `(ui ~T0 @X0 1 ef3`*uc`*uc`ui ]
"197
{
[; ;m_string.c: 196: uint16_t m_str_b2h(uint8_t* h,uint8_t* b,uint16_t len)
[; ;m_string.c: 197: {
[e :U _m_str_b2h ]
"196
[v _h `*uc ~T0 @X0 1 r1 ]
[v _b `*uc ~T0 @X0 1 r2 ]
[v _len `ui ~T0 @X0 1 r3 ]
"197
[f ]
"198
[v _i `ui ~T0 @X0 1 a ]
[; ;m_string.c: 198: uint16_t i=0;
[e = _i -> -> 0 `i `ui ]
"199
[v _t8 `uc ~T0 @X0 1 a ]
[; ;m_string.c: 199: uint8_t t8;
[; ;m_string.c: 200: for(i=0;i<len;i++)
"200
{
[e = _i -> -> 0 `i `ui ]
[e $U 62  ]
"201
[e :U 59 ]
[; ;m_string.c: 201: {
{
[; ;m_string.c: 202: t8=*b++;
"202
[e = _t8 *U ++ _b * -> -> 1 `i `x -> -> # *U _b `i `x ]
[; ;m_string.c: 203: *h++=HexTable[(t8&0xf0)>>4];
"203
[e = *U ++ _h * -> -> 1 `i `x -> -> # *U _h `i `x *U + &U _HexTable * -> -> >> & -> _t8 `i -> 240 `i -> 4 `i `ui `ux -> -> # *U &U _HexTable `ui `ux ]
[; ;m_string.c: 204: *h++=HexTable[(t8&0x0f)];
"204
[e = *U ++ _h * -> -> 1 `i `x -> -> # *U _h `i `x *U + &U _HexTable * -> -> & -> _t8 `i -> 15 `i `ui `ux -> -> # *U &U _HexTable `ui `ux ]
"205
}
"200
[e ++ _i -> -> 1 `i `ui ]
[e :U 62 ]
[e $ < _i _len 59  ]
[e :U 60 ]
"205
}
[; ;m_string.c: 205: }
[; ;m_string.c: 206: return (len<<1);
"206
[e ) << _len -> 1 `i ]
[e $UE 58  ]
[; ;m_string.c: 207: }
"207
[e :UE 58 ]
}
"219
[v _m_str_h2b `(ui ~T0 @X0 1 ef3`*uc`*uc`ui ]
"220
{
[; ;m_string.c: 219: uint16_t m_str_h2b(uint8_t* b,uint8_t* h,uint16_t len)
[; ;m_string.c: 220: {
[e :U _m_str_h2b ]
"219
[v _b `*uc ~T0 @X0 1 r1 ]
[v _h `*uc ~T0 @X0 1 r2 ]
[v _len `ui ~T0 @X0 1 r3 ]
"220
[f ]
"221
[v _i `ui ~T0 @X0 1 a ]
[; ;m_string.c: 221: uint16_t i=len;
[e = _i _len ]
"222
[v _bb `uc ~T0 @X0 1 a ]
[v _s `uc ~T0 @X0 1 a ]
[; ;m_string.c: 222: uint8_t bb,s;
[; ;m_string.c: 223: while(i>=2)
"223
[e $U 64  ]
[e :U 65 ]
[; ;m_string.c: 224: {
"224
{
[; ;m_string.c: 225: bb=0;
"225
[e = _bb -> -> 0 `i `uc ]
[; ;m_string.c: 226: s=*h++;
"226
[e = _s *U ++ _h * -> -> 1 `i `x -> -> # *U _h `i `x ]
[; ;m_string.c: 227: do{ if(s>='0' && s <='9')bb|=(s-'0'); else if(s>='A' && s<='F')bb|=(s-'A'+0x0a); else if(s>='a' && s<='f')bb|=(s-'a'+0x0a); else bb|=0; }while(0);;
"227
[e :U 69 ]
{
[e $ ! && >= -> _s `ui -> 48 `ui <= -> _s `ui -> 57 `ui 70  ]
[e =| _bb -> - -> _s `ui -> 48 `ui `uc ]
[e $U 71  ]
[e :U 70 ]
[e $ ! && >= -> _s `ui -> 65 `ui <= -> _s `ui -> 70 `ui 72  ]
[e =| _bb -> + - -> _s `ui -> 65 `ui -> -> 10 `i `ui `uc ]
[e $U 73  ]
[e :U 72 ]
[e $ ! && >= -> _s `ui -> 97 `ui <= -> _s `ui -> 102 `ui 74  ]
[e =| _bb -> + - -> _s `ui -> 97 `ui -> -> 10 `i `ui `uc ]
[e $U 75  ]
[e :U 74 ]
[e =| _bb -> -> 0 `i `uc ]
[e :U 75 ]
[e :U 73 ]
[e :U 71 ]
}
[e :U 68 ]
[; ;m_string.c: 228: bb<<=4;
"228
[e =<< _bb -> 4 `i ]
[; ;m_string.c: 229: s=*h++;
"229
[e = _s *U ++ _h * -> -> 1 `i `x -> -> # *U _h `i `x ]
[; ;m_string.c: 230: do{ if(s>='0' && s <='9')bb|=(s-'0'); else if(s>='A' && s<='F')bb|=(s-'A'+0x0a); else if(s>='a' && s<='f')bb|=(s-'a'+0x0a); else bb|=0; }while(0);;
"230
[e :U 78 ]
{
[e $ ! && >= -> _s `ui -> 48 `ui <= -> _s `ui -> 57 `ui 79  ]
[e =| _bb -> - -> _s `ui -> 48 `ui `uc ]
[e $U 80  ]
[e :U 79 ]
[e $ ! && >= -> _s `ui -> 65 `ui <= -> _s `ui -> 70 `ui 81  ]
[e =| _bb -> + - -> _s `ui -> 65 `ui -> -> 10 `i `ui `uc ]
[e $U 82  ]
[e :U 81 ]
[e $ ! && >= -> _s `ui -> 97 `ui <= -> _s `ui -> 102 `ui 83  ]
[e =| _bb -> + - -> _s `ui -> 97 `ui -> -> 10 `i `ui `uc ]
[e $U 84  ]
[e :U 83 ]
[e =| _bb -> -> 0 `i `uc ]
[e :U 84 ]
[e :U 82 ]
[e :U 80 ]
}
[e :U 77 ]
[; ;m_string.c: 231: *b++=bb;
"231
[e = *U ++ _b * -> -> 1 `i `x -> -> # *U _b `i `x _bb ]
[; ;m_string.c: 232: i-=2;
"232
[e =- _i -> -> 2 `i `ui ]
"233
}
[e :U 64 ]
"223
[e $ >= _i -> -> 2 `i `ui 65  ]
[e :U 66 ]
[; ;m_string.c: 233: }
[; ;m_string.c: 234: return (len>>1);
"234
[e ) >> _len -> 1 `i ]
[e $UE 63  ]
[; ;m_string.c: 235: }
"235
[e :UE 63 ]
}
"237
[v _swap_uint32 `(ul ~T0 @X0 1 ef1`ul ]
"238
{
[; ;m_string.c: 237: uint32_t swap_uint32(uint32_t x)
[; ;m_string.c: 238: {
[e :U _swap_uint32 ]
"237
[v _x `ul ~T0 @X0 1 r1 ]
"238
[f ]
"239
[v _ret `ul ~T0 @X0 1 a ]
"240
[v _d `*uc ~T0 @X0 1 a ]
[v _s `*uc ~T0 @X0 1 a ]
[; ;m_string.c: 239: uint32_t ret;
[; ;m_string.c: 240: uint8_t *d,*s;
[; ;m_string.c: 241: s=(uint8_t*)&x;
"241
[e = _s -> &U _x `*uc ]
[; ;m_string.c: 242: d=(uint8_t*)&ret;
"242
[e = _d -> &U _ret `*uc ]
[; ;m_string.c: 243: d[0]=s[3];
"243
[e = *U + _d * -> -> 0 `i `x -> -> # *U _d `i `x *U + _s * -> -> 3 `i `x -> -> # *U _s `i `x ]
[; ;m_string.c: 244: d[1]=s[2];
"244
[e = *U + _d * -> -> 1 `i `x -> -> # *U _d `i `x *U + _s * -> -> 2 `i `x -> -> # *U _s `i `x ]
[; ;m_string.c: 245: d[2]=s[1];
"245
[e = *U + _d * -> -> 2 `i `x -> -> # *U _d `i `x *U + _s * -> -> 1 `i `x -> -> # *U _s `i `x ]
[; ;m_string.c: 246: d[3]=s[0];
"246
[e = *U + _d * -> -> 3 `i `x -> -> # *U _d `i `x *U + _s * -> -> 0 `i `x -> -> # *U _s `i `x ]
[; ;m_string.c: 247: return ret;
"247
[e ) _ret ]
[e $UE 85  ]
[; ;m_string.c: 248: }
"248
[e :UE 85 ]
}
"249
[v _swap_uint16 `(ui ~T0 @X0 1 ef1`ui ]
"250
{
[; ;m_string.c: 249: uint16_t swap_uint16(uint16_t x)
[; ;m_string.c: 250: {
[e :U _swap_uint16 ]
"249
[v _x `ui ~T0 @X0 1 r1 ]
"250
[f ]
"251
[v _ret `ui ~T0 @X0 1 a ]
"252
[v _d `*uc ~T0 @X0 1 a ]
[v _s `*uc ~T0 @X0 1 a ]
[; ;m_string.c: 251: uint16_t ret;
[; ;m_string.c: 252: uint8_t *d,*s;
[; ;m_string.c: 253: s=(uint8_t*)&x;
"253
[e = _s -> &U _x `*uc ]
[; ;m_string.c: 254: d=(uint8_t*)&ret;
"254
[e = _d -> &U _ret `*uc ]
[; ;m_string.c: 255: d[0]=s[1];
"255
[e = *U + _d * -> -> 0 `i `x -> -> # *U _d `i `x *U + _s * -> -> 1 `i `x -> -> # *U _s `i `x ]
[; ;m_string.c: 256: d[1]=s[0];
"256
[e = *U + _d * -> -> 1 `i `x -> -> # *U _d `i `x *U + _s * -> -> 0 `i `x -> -> # *U _s `i `x ]
[; ;m_string.c: 257: return ret;
"257
[e ) _ret ]
[e $UE 86  ]
[; ;m_string.c: 258: }
"258
[e :UE 86 ]
}
"260
[v _int32_array_shift_right `(v ~T0 @X0 1 ef2`*l`ui ]
"261
{
[; ;m_string.c: 260: void int32_array_shift_right(int32_t *p32,uint16_t eoc)
[; ;m_string.c: 261: {
[e :U _int32_array_shift_right ]
"260
[v _p32 `*l ~T0 @X0 1 r1 ]
[v _eoc `ui ~T0 @X0 1 r2 ]
"261
[f ]
[; ;m_string.c: 262: while(eoc>=1){
"262
[e $U 88  ]
[e :U 89 ]
{
[; ;m_string.c: 263: p32[eoc]=p32[eoc-1];
"263
[e = *U + _p32 * -> _eoc `ux -> -> # *U _p32 `ui `ux *U + _p32 * -> - _eoc -> -> 1 `i `ui `ux -> -> # *U _p32 `ui `ux ]
[; ;m_string.c: 264: eoc--;
"264
[e -- _eoc -> -> 1 `i `ui ]
"265
}
[e :U 88 ]
"262
[e $ >= _eoc -> -> 1 `i `ui 89  ]
[e :U 90 ]
[; ;m_string.c: 265: }
[; ;m_string.c: 266: }
"266
[e :UE 87 ]
}
