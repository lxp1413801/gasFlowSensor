

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Nov 25 22:52:27 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1575
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	swtext1,local,class=CONST,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	swtext2,local,class=CONST,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2
    75                           	psect	text52,local,class=CODE,merge=1,delta=2
    76                           	psect	intentry,global,class=CODE,delta=2
    77                           	dabs	1,0x620,32
    78                           	dabs	1,0x5A0,80
    79                           	dabs	1,0x55C,20
    80                           	dabs	1,0xFFF,1,_isRunInBoot
    81                           	dabs	1,0x235C,0,_sysData
    82                           	dabs	1,0x7E,2
    83  0000                     
    84                           ; Version 1.42
    85                           ; Generated 13/04/2017 GMT
    86                           ; 
    87                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC16F1575 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118  0000                     	;# 
   119  0001                     	;# 
   120  0002                     	;# 
   121  0003                     	;# 
   122  0004                     	;# 
   123  0005                     	;# 
   124  0006                     	;# 
   125  0007                     	;# 
   126  0008                     	;# 
   127  0009                     	;# 
   128  000A                     	;# 
   129  000B                     	;# 
   130  000C                     	;# 
   131  000E                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0015                     	;# 
   136  0016                     	;# 
   137  0016                     	;# 
   138  0017                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  001A                     	;# 
   142  001B                     	;# 
   143  001C                     	;# 
   144  008C                     	;# 
   145  008E                     	;# 
   146  0091                     	;# 
   147  0092                     	;# 
   148  0093                     	;# 
   149  0095                     	;# 
   150  0096                     	;# 
   151  0097                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009A                     	;# 
   155  009B                     	;# 
   156  009B                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010E                     	;# 
   163  0111                     	;# 
   164  0112                     	;# 
   165  0113                     	;# 
   166  0114                     	;# 
   167  0115                     	;# 
   168  0116                     	;# 
   169  0117                     	;# 
   170  0118                     	;# 
   171  0119                     	;# 
   172  018C                     	;# 
   173  018E                     	;# 
   174  0191                     	;# 
   175  0191                     	;# 
   176  0192                     	;# 
   177  0193                     	;# 
   178  0193                     	;# 
   179  0194                     	;# 
   180  0195                     	;# 
   181  0196                     	;# 
   182  0197                     	;# 
   183  0199                     	;# 
   184  019A                     	;# 
   185  019B                     	;# 
   186  019B                     	;# 
   187  019C                     	;# 
   188  019D                     	;# 
   189  019E                     	;# 
   190  019F                     	;# 
   191  020C                     	;# 
   192  020E                     	;# 
   193  028C                     	;# 
   194  028E                     	;# 
   195  030C                     	;# 
   196  030E                     	;# 
   197  038C                     	;# 
   198  038E                     	;# 
   199  0391                     	;# 
   200  0392                     	;# 
   201  0393                     	;# 
   202  0397                     	;# 
   203  0398                     	;# 
   204  0399                     	;# 
   205  0691                     	;# 
   206  0692                     	;# 
   207  0693                     	;# 
   208  0694                     	;# 
   209  0695                     	;# 
   210  0D8E                     	;# 
   211  0D8F                     	;# 
   212  0D90                     	;# 
   213  0D91                     	;# 
   214  0D91                     	;# 
   215  0D92                     	;# 
   216  0D93                     	;# 
   217  0D93                     	;# 
   218  0D94                     	;# 
   219  0D95                     	;# 
   220  0D95                     	;# 
   221  0D96                     	;# 
   222  0D97                     	;# 
   223  0D97                     	;# 
   224  0D98                     	;# 
   225  0D99                     	;# 
   226  0D99                     	;# 
   227  0D9A                     	;# 
   228  0D9B                     	;# 
   229  0D9C                     	;# 
   230  0D9C                     	;# 
   231  0D9D                     	;# 
   232  0D9D                     	;# 
   233  0D9E                     	;# 
   234  0D9F                     	;# 
   235  0DA0                     	;# 
   236  0DA1                     	;# 
   237  0DA1                     	;# 
   238  0DA2                     	;# 
   239  0DA3                     	;# 
   240  0DA3                     	;# 
   241  0DA4                     	;# 
   242  0DA5                     	;# 
   243  0DA5                     	;# 
   244  0DA6                     	;# 
   245  0DA7                     	;# 
   246  0DA7                     	;# 
   247  0DA8                     	;# 
   248  0DA9                     	;# 
   249  0DA9                     	;# 
   250  0DAA                     	;# 
   251  0DAB                     	;# 
   252  0DAC                     	;# 
   253  0DAC                     	;# 
   254  0DAD                     	;# 
   255  0DAD                     	;# 
   256  0DAE                     	;# 
   257  0DAF                     	;# 
   258  0DB0                     	;# 
   259  0DB1                     	;# 
   260  0DB1                     	;# 
   261  0DB2                     	;# 
   262  0DB3                     	;# 
   263  0DB3                     	;# 
   264  0DB4                     	;# 
   265  0DB5                     	;# 
   266  0DB5                     	;# 
   267  0DB6                     	;# 
   268  0DB7                     	;# 
   269  0DB7                     	;# 
   270  0DB8                     	;# 
   271  0DB9                     	;# 
   272  0DB9                     	;# 
   273  0DBA                     	;# 
   274  0DBB                     	;# 
   275  0DBC                     	;# 
   276  0DBC                     	;# 
   277  0DBD                     	;# 
   278  0DBD                     	;# 
   279  0DBE                     	;# 
   280  0DBF                     	;# 
   281  0DC0                     	;# 
   282  0DC1                     	;# 
   283  0DC1                     	;# 
   284  0DC2                     	;# 
   285  0DC3                     	;# 
   286  0DC3                     	;# 
   287  0DC4                     	;# 
   288  0DC5                     	;# 
   289  0DC5                     	;# 
   290  0DC6                     	;# 
   291  0DC7                     	;# 
   292  0DC7                     	;# 
   293  0DC8                     	;# 
   294  0DC9                     	;# 
   295  0DC9                     	;# 
   296  0DCA                     	;# 
   297  0DCB                     	;# 
   298  0DCC                     	;# 
   299  0DCC                     	;# 
   300  0DCD                     	;# 
   301  0DCD                     	;# 
   302  0DCE                     	;# 
   303  0DCF                     	;# 
   304  0DD0                     	;# 
   305  0E0F                     	;# 
   306  0E10                     	;# 
   307  0E11                     	;# 
   308  0E12                     	;# 
   309  0E13                     	;# 
   310  0E14                     	;# 
   311  0E15                     	;# 
   312  0E16                     	;# 
   313  0E17                     	;# 
   314  0E90                     	;# 
   315  0E91                     	;# 
   316  0E92                     	;# 
   317  0E94                     	;# 
   318  0E95                     	;# 
   319  0EA0                     	;# 
   320  0EA1                     	;# 
   321  0EA2                     	;# 
   322  0EA3                     	;# 
   323  0EA4                     	;# 
   324  0EA5                     	;# 
   325  0FE4                     	;# 
   326  0FE5                     	;# 
   327  0FE6                     	;# 
   328  0FE7                     	;# 
   329  0FE8                     	;# 
   330  0FE8                     	;# 
   331  0FE9                     	;# 
   332  0FEA                     	;# 
   333  0FEA                     	;# 
   334  0FEB                     	;# 
   335  0FED                     	;# 
   336  0FEE                     	;# 
   337  0FEE                     	;# 
   338  0FEF                     	;# 
   339  0000                     	;# 
   340  0001                     	;# 
   341  0002                     	;# 
   342  0003                     	;# 
   343  0004                     	;# 
   344  0005                     	;# 
   345  0006                     	;# 
   346  0007                     	;# 
   347  0008                     	;# 
   348  0009                     	;# 
   349  000A                     	;# 
   350  000B                     	;# 
   351  000C                     	;# 
   352  000E                     	;# 
   353  0011                     	;# 
   354  0012                     	;# 
   355  0013                     	;# 
   356  0015                     	;# 
   357  0016                     	;# 
   358  0016                     	;# 
   359  0017                     	;# 
   360  0018                     	;# 
   361  0019                     	;# 
   362  001A                     	;# 
   363  001B                     	;# 
   364  001C                     	;# 
   365  008C                     	;# 
   366  008E                     	;# 
   367  0091                     	;# 
   368  0092                     	;# 
   369  0093                     	;# 
   370  0095                     	;# 
   371  0096                     	;# 
   372  0097                     	;# 
   373  0098                     	;# 
   374  0099                     	;# 
   375  009A                     	;# 
   376  009B                     	;# 
   377  009B                     	;# 
   378  009C                     	;# 
   379  009D                     	;# 
   380  009E                     	;# 
   381  009F                     	;# 
   382  010C                     	;# 
   383  010E                     	;# 
   384  0111                     	;# 
   385  0112                     	;# 
   386  0113                     	;# 
   387  0114                     	;# 
   388  0115                     	;# 
   389  0116                     	;# 
   390  0117                     	;# 
   391  0118                     	;# 
   392  0119                     	;# 
   393  018C                     	;# 
   394  018E                     	;# 
   395  0191                     	;# 
   396  0191                     	;# 
   397  0192                     	;# 
   398  0193                     	;# 
   399  0193                     	;# 
   400  0194                     	;# 
   401  0195                     	;# 
   402  0196                     	;# 
   403  0197                     	;# 
   404  0199                     	;# 
   405  019A                     	;# 
   406  019B                     	;# 
   407  019B                     	;# 
   408  019C                     	;# 
   409  019D                     	;# 
   410  019E                     	;# 
   411  019F                     	;# 
   412  020C                     	;# 
   413  020E                     	;# 
   414  028C                     	;# 
   415  028E                     	;# 
   416  030C                     	;# 
   417  030E                     	;# 
   418  038C                     	;# 
   419  038E                     	;# 
   420  0391                     	;# 
   421  0392                     	;# 
   422  0393                     	;# 
   423  0397                     	;# 
   424  0398                     	;# 
   425  0399                     	;# 
   426  0691                     	;# 
   427  0692                     	;# 
   428  0693                     	;# 
   429  0694                     	;# 
   430  0695                     	;# 
   431  0D8E                     	;# 
   432  0D8F                     	;# 
   433  0D90                     	;# 
   434  0D91                     	;# 
   435  0D91                     	;# 
   436  0D92                     	;# 
   437  0D93                     	;# 
   438  0D93                     	;# 
   439  0D94                     	;# 
   440  0D95                     	;# 
   441  0D95                     	;# 
   442  0D96                     	;# 
   443  0D97                     	;# 
   444  0D97                     	;# 
   445  0D98                     	;# 
   446  0D99                     	;# 
   447  0D99                     	;# 
   448  0D9A                     	;# 
   449  0D9B                     	;# 
   450  0D9C                     	;# 
   451  0D9C                     	;# 
   452  0D9D                     	;# 
   453  0D9D                     	;# 
   454  0D9E                     	;# 
   455  0D9F                     	;# 
   456  0DA0                     	;# 
   457  0DA1                     	;# 
   458  0DA1                     	;# 
   459  0DA2                     	;# 
   460  0DA3                     	;# 
   461  0DA3                     	;# 
   462  0DA4                     	;# 
   463  0DA5                     	;# 
   464  0DA5                     	;# 
   465  0DA6                     	;# 
   466  0DA7                     	;# 
   467  0DA7                     	;# 
   468  0DA8                     	;# 
   469  0DA9                     	;# 
   470  0DA9                     	;# 
   471  0DAA                     	;# 
   472  0DAB                     	;# 
   473  0DAC                     	;# 
   474  0DAC                     	;# 
   475  0DAD                     	;# 
   476  0DAD                     	;# 
   477  0DAE                     	;# 
   478  0DAF                     	;# 
   479  0DB0                     	;# 
   480  0DB1                     	;# 
   481  0DB1                     	;# 
   482  0DB2                     	;# 
   483  0DB3                     	;# 
   484  0DB3                     	;# 
   485  0DB4                     	;# 
   486  0DB5                     	;# 
   487  0DB5                     	;# 
   488  0DB6                     	;# 
   489  0DB7                     	;# 
   490  0DB7                     	;# 
   491  0DB8                     	;# 
   492  0DB9                     	;# 
   493  0DB9                     	;# 
   494  0DBA                     	;# 
   495  0DBB                     	;# 
   496  0DBC                     	;# 
   497  0DBC                     	;# 
   498  0DBD                     	;# 
   499  0DBD                     	;# 
   500  0DBE                     	;# 
   501  0DBF                     	;# 
   502  0DC0                     	;# 
   503  0DC1                     	;# 
   504  0DC1                     	;# 
   505  0DC2                     	;# 
   506  0DC3                     	;# 
   507  0DC3                     	;# 
   508  0DC4                     	;# 
   509  0DC5                     	;# 
   510  0DC5                     	;# 
   511  0DC6                     	;# 
   512  0DC7                     	;# 
   513  0DC7                     	;# 
   514  0DC8                     	;# 
   515  0DC9                     	;# 
   516  0DC9                     	;# 
   517  0DCA                     	;# 
   518  0DCB                     	;# 
   519  0DCC                     	;# 
   520  0DCC                     	;# 
   521  0DCD                     	;# 
   522  0DCD                     	;# 
   523  0DCE                     	;# 
   524  0DCF                     	;# 
   525  0DD0                     	;# 
   526  0E0F                     	;# 
   527  0E10                     	;# 
   528  0E11                     	;# 
   529  0E12                     	;# 
   530  0E13                     	;# 
   531  0E14                     	;# 
   532  0E15                     	;# 
   533  0E16                     	;# 
   534  0E17                     	;# 
   535  0E90                     	;# 
   536  0E91                     	;# 
   537  0E92                     	;# 
   538  0E94                     	;# 
   539  0E95                     	;# 
   540  0EA0                     	;# 
   541  0EA1                     	;# 
   542  0EA2                     	;# 
   543  0EA3                     	;# 
   544  0EA4                     	;# 
   545  0EA5                     	;# 
   546  0FE4                     	;# 
   547  0FE5                     	;# 
   548  0FE6                     	;# 
   549  0FE7                     	;# 
   550  0FE8                     	;# 
   551  0FE8                     	;# 
   552  0FE9                     	;# 
   553  0FEA                     	;# 
   554  0FEA                     	;# 
   555  0FEB                     	;# 
   556  0FED                     	;# 
   557  0FEE                     	;# 
   558  0FEE                     	;# 
   559  0FEF                     	;# 
   560  0000                     	;# 
   561  0001                     	;# 
   562  0002                     	;# 
   563  0003                     	;# 
   564  0004                     	;# 
   565  0005                     	;# 
   566  0006                     	;# 
   567  0007                     	;# 
   568  0008                     	;# 
   569  0009                     	;# 
   570  000A                     	;# 
   571  000B                     	;# 
   572  000C                     	;# 
   573  000E                     	;# 
   574  0011                     	;# 
   575  0012                     	;# 
   576  0013                     	;# 
   577  0015                     	;# 
   578  0016                     	;# 
   579  0016                     	;# 
   580  0017                     	;# 
   581  0018                     	;# 
   582  0019                     	;# 
   583  001A                     	;# 
   584  001B                     	;# 
   585  001C                     	;# 
   586  008C                     	;# 
   587  008E                     	;# 
   588  0091                     	;# 
   589  0092                     	;# 
   590  0093                     	;# 
   591  0095                     	;# 
   592  0096                     	;# 
   593  0097                     	;# 
   594  0098                     	;# 
   595  0099                     	;# 
   596  009A                     	;# 
   597  009B                     	;# 
   598  009B                     	;# 
   599  009C                     	;# 
   600  009D                     	;# 
   601  009E                     	;# 
   602  009F                     	;# 
   603  010C                     	;# 
   604  010E                     	;# 
   605  0111                     	;# 
   606  0112                     	;# 
   607  0113                     	;# 
   608  0114                     	;# 
   609  0115                     	;# 
   610  0116                     	;# 
   611  0117                     	;# 
   612  0118                     	;# 
   613  0119                     	;# 
   614  018C                     	;# 
   615  018E                     	;# 
   616  0191                     	;# 
   617  0191                     	;# 
   618  0192                     	;# 
   619  0193                     	;# 
   620  0193                     	;# 
   621  0194                     	;# 
   622  0195                     	;# 
   623  0196                     	;# 
   624  0197                     	;# 
   625  0199                     	;# 
   626  019A                     	;# 
   627  019B                     	;# 
   628  019B                     	;# 
   629  019C                     	;# 
   630  019D                     	;# 
   631  019E                     	;# 
   632  019F                     	;# 
   633  020C                     	;# 
   634  020E                     	;# 
   635  028C                     	;# 
   636  028E                     	;# 
   637  030C                     	;# 
   638  030E                     	;# 
   639  038C                     	;# 
   640  038E                     	;# 
   641  0391                     	;# 
   642  0392                     	;# 
   643  0393                     	;# 
   644  0397                     	;# 
   645  0398                     	;# 
   646  0399                     	;# 
   647  0691                     	;# 
   648  0692                     	;# 
   649  0693                     	;# 
   650  0694                     	;# 
   651  0695                     	;# 
   652  0D8E                     	;# 
   653  0D8F                     	;# 
   654  0D90                     	;# 
   655  0D91                     	;# 
   656  0D91                     	;# 
   657  0D92                     	;# 
   658  0D93                     	;# 
   659  0D93                     	;# 
   660  0D94                     	;# 
   661  0D95                     	;# 
   662  0D95                     	;# 
   663  0D96                     	;# 
   664  0D97                     	;# 
   665  0D97                     	;# 
   666  0D98                     	;# 
   667  0D99                     	;# 
   668  0D99                     	;# 
   669  0D9A                     	;# 
   670  0D9B                     	;# 
   671  0D9C                     	;# 
   672  0D9C                     	;# 
   673  0D9D                     	;# 
   674  0D9D                     	;# 
   675  0D9E                     	;# 
   676  0D9F                     	;# 
   677  0DA0                     	;# 
   678  0DA1                     	;# 
   679  0DA1                     	;# 
   680  0DA2                     	;# 
   681  0DA3                     	;# 
   682  0DA3                     	;# 
   683  0DA4                     	;# 
   684  0DA5                     	;# 
   685  0DA5                     	;# 
   686  0DA6                     	;# 
   687  0DA7                     	;# 
   688  0DA7                     	;# 
   689  0DA8                     	;# 
   690  0DA9                     	;# 
   691  0DA9                     	;# 
   692  0DAA                     	;# 
   693  0DAB                     	;# 
   694  0DAC                     	;# 
   695  0DAC                     	;# 
   696  0DAD                     	;# 
   697  0DAD                     	;# 
   698  0DAE                     	;# 
   699  0DAF                     	;# 
   700  0DB0                     	;# 
   701  0DB1                     	;# 
   702  0DB1                     	;# 
   703  0DB2                     	;# 
   704  0DB3                     	;# 
   705  0DB3                     	;# 
   706  0DB4                     	;# 
   707  0DB5                     	;# 
   708  0DB5                     	;# 
   709  0DB6                     	;# 
   710  0DB7                     	;# 
   711  0DB7                     	;# 
   712  0DB8                     	;# 
   713  0DB9                     	;# 
   714  0DB9                     	;# 
   715  0DBA                     	;# 
   716  0DBB                     	;# 
   717  0DBC                     	;# 
   718  0DBC                     	;# 
   719  0DBD                     	;# 
   720  0DBD                     	;# 
   721  0DBE                     	;# 
   722  0DBF                     	;# 
   723  0DC0                     	;# 
   724  0DC1                     	;# 
   725  0DC1                     	;# 
   726  0DC2                     	;# 
   727  0DC3                     	;# 
   728  0DC3                     	;# 
   729  0DC4                     	;# 
   730  0DC5                     	;# 
   731  0DC5                     	;# 
   732  0DC6                     	;# 
   733  0DC7                     	;# 
   734  0DC7                     	;# 
   735  0DC8                     	;# 
   736  0DC9                     	;# 
   737  0DC9                     	;# 
   738  0DCA                     	;# 
   739  0DCB                     	;# 
   740  0DCC                     	;# 
   741  0DCC                     	;# 
   742  0DCD                     	;# 
   743  0DCD                     	;# 
   744  0DCE                     	;# 
   745  0DCF                     	;# 
   746  0DD0                     	;# 
   747  0E0F                     	;# 
   748  0E10                     	;# 
   749  0E11                     	;# 
   750  0E12                     	;# 
   751  0E13                     	;# 
   752  0E14                     	;# 
   753  0E15                     	;# 
   754  0E16                     	;# 
   755  0E17                     	;# 
   756  0E90                     	;# 
   757  0E91                     	;# 
   758  0E92                     	;# 
   759  0E94                     	;# 
   760  0E95                     	;# 
   761  0EA0                     	;# 
   762  0EA1                     	;# 
   763  0EA2                     	;# 
   764  0EA3                     	;# 
   765  0EA4                     	;# 
   766  0EA5                     	;# 
   767  0FE4                     	;# 
   768  0FE5                     	;# 
   769  0FE6                     	;# 
   770  0FE7                     	;# 
   771  0FE8                     	;# 
   772  0FE8                     	;# 
   773  0FE9                     	;# 
   774  0FEA                     	;# 
   775  0FEA                     	;# 
   776  0FEB                     	;# 
   777  0FED                     	;# 
   778  0FEE                     	;# 
   779  0FEE                     	;# 
   780  0FEF                     	;# 
   781  0000                     	;# 
   782  0001                     	;# 
   783  0002                     	;# 
   784  0003                     	;# 
   785  0004                     	;# 
   786  0005                     	;# 
   787  0006                     	;# 
   788  0007                     	;# 
   789  0008                     	;# 
   790  0009                     	;# 
   791  000A                     	;# 
   792  000B                     	;# 
   793  000C                     	;# 
   794  000E                     	;# 
   795  0011                     	;# 
   796  0012                     	;# 
   797  0013                     	;# 
   798  0015                     	;# 
   799  0016                     	;# 
   800  0016                     	;# 
   801  0017                     	;# 
   802  0018                     	;# 
   803  0019                     	;# 
   804  001A                     	;# 
   805  001B                     	;# 
   806  001C                     	;# 
   807  008C                     	;# 
   808  008E                     	;# 
   809  0091                     	;# 
   810  0092                     	;# 
   811  0093                     	;# 
   812  0095                     	;# 
   813  0096                     	;# 
   814  0097                     	;# 
   815  0098                     	;# 
   816  0099                     	;# 
   817  009A                     	;# 
   818  009B                     	;# 
   819  009B                     	;# 
   820  009C                     	;# 
   821  009D                     	;# 
   822  009E                     	;# 
   823  009F                     	;# 
   824  010C                     	;# 
   825  010E                     	;# 
   826  0111                     	;# 
   827  0112                     	;# 
   828  0113                     	;# 
   829  0114                     	;# 
   830  0115                     	;# 
   831  0116                     	;# 
   832  0117                     	;# 
   833  0118                     	;# 
   834  0119                     	;# 
   835  018C                     	;# 
   836  018E                     	;# 
   837  0191                     	;# 
   838  0191                     	;# 
   839  0192                     	;# 
   840  0193                     	;# 
   841  0193                     	;# 
   842  0194                     	;# 
   843  0195                     	;# 
   844  0196                     	;# 
   845  0197                     	;# 
   846  0199                     	;# 
   847  019A                     	;# 
   848  019B                     	;# 
   849  019B                     	;# 
   850  019C                     	;# 
   851  019D                     	;# 
   852  019E                     	;# 
   853  019F                     	;# 
   854  020C                     	;# 
   855  020E                     	;# 
   856  028C                     	;# 
   857  028E                     	;# 
   858  030C                     	;# 
   859  030E                     	;# 
   860  038C                     	;# 
   861  038E                     	;# 
   862  0391                     	;# 
   863  0392                     	;# 
   864  0393                     	;# 
   865  0397                     	;# 
   866  0398                     	;# 
   867  0399                     	;# 
   868  0691                     	;# 
   869  0692                     	;# 
   870  0693                     	;# 
   871  0694                     	;# 
   872  0695                     	;# 
   873  0D8E                     	;# 
   874  0D8F                     	;# 
   875  0D90                     	;# 
   876  0D91                     	;# 
   877  0D91                     	;# 
   878  0D92                     	;# 
   879  0D93                     	;# 
   880  0D93                     	;# 
   881  0D94                     	;# 
   882  0D95                     	;# 
   883  0D95                     	;# 
   884  0D96                     	;# 
   885  0D97                     	;# 
   886  0D97                     	;# 
   887  0D98                     	;# 
   888  0D99                     	;# 
   889  0D99                     	;# 
   890  0D9A                     	;# 
   891  0D9B                     	;# 
   892  0D9C                     	;# 
   893  0D9C                     	;# 
   894  0D9D                     	;# 
   895  0D9D                     	;# 
   896  0D9E                     	;# 
   897  0D9F                     	;# 
   898  0DA0                     	;# 
   899  0DA1                     	;# 
   900  0DA1                     	;# 
   901  0DA2                     	;# 
   902  0DA3                     	;# 
   903  0DA3                     	;# 
   904  0DA4                     	;# 
   905  0DA5                     	;# 
   906  0DA5                     	;# 
   907  0DA6                     	;# 
   908  0DA7                     	;# 
   909  0DA7                     	;# 
   910  0DA8                     	;# 
   911  0DA9                     	;# 
   912  0DA9                     	;# 
   913  0DAA                     	;# 
   914  0DAB                     	;# 
   915  0DAC                     	;# 
   916  0DAC                     	;# 
   917  0DAD                     	;# 
   918  0DAD                     	;# 
   919  0DAE                     	;# 
   920  0DAF                     	;# 
   921  0DB0                     	;# 
   922  0DB1                     	;# 
   923  0DB1                     	;# 
   924  0DB2                     	;# 
   925  0DB3                     	;# 
   926  0DB3                     	;# 
   927  0DB4                     	;# 
   928  0DB5                     	;# 
   929  0DB5                     	;# 
   930  0DB6                     	;# 
   931  0DB7                     	;# 
   932  0DB7                     	;# 
   933  0DB8                     	;# 
   934  0DB9                     	;# 
   935  0DB9                     	;# 
   936  0DBA                     	;# 
   937  0DBB                     	;# 
   938  0DBC                     	;# 
   939  0DBC                     	;# 
   940  0DBD                     	;# 
   941  0DBD                     	;# 
   942  0DBE                     	;# 
   943  0DBF                     	;# 
   944  0DC0                     	;# 
   945  0DC1                     	;# 
   946  0DC1                     	;# 
   947  0DC2                     	;# 
   948  0DC3                     	;# 
   949  0DC3                     	;# 
   950  0DC4                     	;# 
   951  0DC5                     	;# 
   952  0DC5                     	;# 
   953  0DC6                     	;# 
   954  0DC7                     	;# 
   955  0DC7                     	;# 
   956  0DC8                     	;# 
   957  0DC9                     	;# 
   958  0DC9                     	;# 
   959  0DCA                     	;# 
   960  0DCB                     	;# 
   961  0DCC                     	;# 
   962  0DCC                     	;# 
   963  0DCD                     	;# 
   964  0DCD                     	;# 
   965  0DCE                     	;# 
   966  0DCF                     	;# 
   967  0DD0                     	;# 
   968  0E0F                     	;# 
   969  0E10                     	;# 
   970  0E11                     	;# 
   971  0E12                     	;# 
   972  0E13                     	;# 
   973  0E14                     	;# 
   974  0E15                     	;# 
   975  0E16                     	;# 
   976  0E17                     	;# 
   977  0E90                     	;# 
   978  0E91                     	;# 
   979  0E92                     	;# 
   980  0E94                     	;# 
   981  0E95                     	;# 
   982  0EA0                     	;# 
   983  0EA1                     	;# 
   984  0EA2                     	;# 
   985  0EA3                     	;# 
   986  0EA4                     	;# 
   987  0EA5                     	;# 
   988  0FE4                     	;# 
   989  0FE5                     	;# 
   990  0FE6                     	;# 
   991  0FE7                     	;# 
   992  0FE8                     	;# 
   993  0FE8                     	;# 
   994  0FE9                     	;# 
   995  0FEA                     	;# 
   996  0FEA                     	;# 
   997  0FEB                     	;# 
   998  0FED                     	;# 
   999  0FEE                     	;# 
  1000  0FEE                     	;# 
  1001  0FEF                     	;# 
  1002  0000                     	;# 
  1003  0001                     	;# 
  1004  0002                     	;# 
  1005  0003                     	;# 
  1006  0004                     	;# 
  1007  0005                     	;# 
  1008  0006                     	;# 
  1009  0007                     	;# 
  1010  0008                     	;# 
  1011  0009                     	;# 
  1012  000A                     	;# 
  1013  000B                     	;# 
  1014  000C                     	;# 
  1015  000E                     	;# 
  1016  0011                     	;# 
  1017  0012                     	;# 
  1018  0013                     	;# 
  1019  0015                     	;# 
  1020  0016                     	;# 
  1021  0016                     	;# 
  1022  0017                     	;# 
  1023  0018                     	;# 
  1024  0019                     	;# 
  1025  001A                     	;# 
  1026  001B                     	;# 
  1027  001C                     	;# 
  1028  008C                     	;# 
  1029  008E                     	;# 
  1030  0091                     	;# 
  1031  0092                     	;# 
  1032  0093                     	;# 
  1033  0095                     	;# 
  1034  0096                     	;# 
  1035  0097                     	;# 
  1036  0098                     	;# 
  1037  0099                     	;# 
  1038  009A                     	;# 
  1039  009B                     	;# 
  1040  009B                     	;# 
  1041  009C                     	;# 
  1042  009D                     	;# 
  1043  009E                     	;# 
  1044  009F                     	;# 
  1045  010C                     	;# 
  1046  010E                     	;# 
  1047  0111                     	;# 
  1048  0112                     	;# 
  1049  0113                     	;# 
  1050  0114                     	;# 
  1051  0115                     	;# 
  1052  0116                     	;# 
  1053  0117                     	;# 
  1054  0118                     	;# 
  1055  0119                     	;# 
  1056  018C                     	;# 
  1057  018E                     	;# 
  1058  0191                     	;# 
  1059  0191                     	;# 
  1060  0192                     	;# 
  1061  0193                     	;# 
  1062  0193                     	;# 
  1063  0194                     	;# 
  1064  0195                     	;# 
  1065  0196                     	;# 
  1066  0197                     	;# 
  1067  0199                     	;# 
  1068  019A                     	;# 
  1069  019B                     	;# 
  1070  019B                     	;# 
  1071  019C                     	;# 
  1072  019D                     	;# 
  1073  019E                     	;# 
  1074  019F                     	;# 
  1075  020C                     	;# 
  1076  020E                     	;# 
  1077  028C                     	;# 
  1078  028E                     	;# 
  1079  030C                     	;# 
  1080  030E                     	;# 
  1081  038C                     	;# 
  1082  038E                     	;# 
  1083  0391                     	;# 
  1084  0392                     	;# 
  1085  0393                     	;# 
  1086  0397                     	;# 
  1087  0398                     	;# 
  1088  0399                     	;# 
  1089  0691                     	;# 
  1090  0692                     	;# 
  1091  0693                     	;# 
  1092  0694                     	;# 
  1093  0695                     	;# 
  1094  0D8E                     	;# 
  1095  0D8F                     	;# 
  1096  0D90                     	;# 
  1097  0D91                     	;# 
  1098  0D91                     	;# 
  1099  0D92                     	;# 
  1100  0D93                     	;# 
  1101  0D93                     	;# 
  1102  0D94                     	;# 
  1103  0D95                     	;# 
  1104  0D95                     	;# 
  1105  0D96                     	;# 
  1106  0D97                     	;# 
  1107  0D97                     	;# 
  1108  0D98                     	;# 
  1109  0D99                     	;# 
  1110  0D99                     	;# 
  1111  0D9A                     	;# 
  1112  0D9B                     	;# 
  1113  0D9C                     	;# 
  1114  0D9C                     	;# 
  1115  0D9D                     	;# 
  1116  0D9D                     	;# 
  1117  0D9E                     	;# 
  1118  0D9F                     	;# 
  1119  0DA0                     	;# 
  1120  0DA1                     	;# 
  1121  0DA1                     	;# 
  1122  0DA2                     	;# 
  1123  0DA3                     	;# 
  1124  0DA3                     	;# 
  1125  0DA4                     	;# 
  1126  0DA5                     	;# 
  1127  0DA5                     	;# 
  1128  0DA6                     	;# 
  1129  0DA7                     	;# 
  1130  0DA7                     	;# 
  1131  0DA8                     	;# 
  1132  0DA9                     	;# 
  1133  0DA9                     	;# 
  1134  0DAA                     	;# 
  1135  0DAB                     	;# 
  1136  0DAC                     	;# 
  1137  0DAC                     	;# 
  1138  0DAD                     	;# 
  1139  0DAD                     	;# 
  1140  0DAE                     	;# 
  1141  0DAF                     	;# 
  1142  0DB0                     	;# 
  1143  0DB1                     	;# 
  1144  0DB1                     	;# 
  1145  0DB2                     	;# 
  1146  0DB3                     	;# 
  1147  0DB3                     	;# 
  1148  0DB4                     	;# 
  1149  0DB5                     	;# 
  1150  0DB5                     	;# 
  1151  0DB6                     	;# 
  1152  0DB7                     	;# 
  1153  0DB7                     	;# 
  1154  0DB8                     	;# 
  1155  0DB9                     	;# 
  1156  0DB9                     	;# 
  1157  0DBA                     	;# 
  1158  0DBB                     	;# 
  1159  0DBC                     	;# 
  1160  0DBC                     	;# 
  1161  0DBD                     	;# 
  1162  0DBD                     	;# 
  1163  0DBE                     	;# 
  1164  0DBF                     	;# 
  1165  0DC0                     	;# 
  1166  0DC1                     	;# 
  1167  0DC1                     	;# 
  1168  0DC2                     	;# 
  1169  0DC3                     	;# 
  1170  0DC3                     	;# 
  1171  0DC4                     	;# 
  1172  0DC5                     	;# 
  1173  0DC5                     	;# 
  1174  0DC6                     	;# 
  1175  0DC7                     	;# 
  1176  0DC7                     	;# 
  1177  0DC8                     	;# 
  1178  0DC9                     	;# 
  1179  0DC9                     	;# 
  1180  0DCA                     	;# 
  1181  0DCB                     	;# 
  1182  0DCC                     	;# 
  1183  0DCC                     	;# 
  1184  0DCD                     	;# 
  1185  0DCD                     	;# 
  1186  0DCE                     	;# 
  1187  0DCF                     	;# 
  1188  0DD0                     	;# 
  1189  0E0F                     	;# 
  1190  0E10                     	;# 
  1191  0E11                     	;# 
  1192  0E12                     	;# 
  1193  0E13                     	;# 
  1194  0E14                     	;# 
  1195  0E15                     	;# 
  1196  0E16                     	;# 
  1197  0E17                     	;# 
  1198  0E90                     	;# 
  1199  0E91                     	;# 
  1200  0E92                     	;# 
  1201  0E94                     	;# 
  1202  0E95                     	;# 
  1203  0EA0                     	;# 
  1204  0EA1                     	;# 
  1205  0EA2                     	;# 
  1206  0EA3                     	;# 
  1207  0EA4                     	;# 
  1208  0EA5                     	;# 
  1209  0FE4                     	;# 
  1210  0FE5                     	;# 
  1211  0FE6                     	;# 
  1212  0FE7                     	;# 
  1213  0FE8                     	;# 
  1214  0FE8                     	;# 
  1215  0FE9                     	;# 
  1216  0FEA                     	;# 
  1217  0FEA                     	;# 
  1218  0FEB                     	;# 
  1219  0FED                     	;# 
  1220  0FEE                     	;# 
  1221  0FEE                     	;# 
  1222  0FEF                     	;# 
  1223  0FFF                     	;# 
  1224  0000                     	;# 
  1225  0001                     	;# 
  1226  0002                     	;# 
  1227  0003                     	;# 
  1228  0004                     	;# 
  1229  0005                     	;# 
  1230  0006                     	;# 
  1231  0007                     	;# 
  1232  0008                     	;# 
  1233  0009                     	;# 
  1234  000A                     	;# 
  1235  000B                     	;# 
  1236  000C                     	;# 
  1237  000E                     	;# 
  1238  0011                     	;# 
  1239  0012                     	;# 
  1240  0013                     	;# 
  1241  0015                     	;# 
  1242  0016                     	;# 
  1243  0016                     	;# 
  1244  0017                     	;# 
  1245  0018                     	;# 
  1246  0019                     	;# 
  1247  001A                     	;# 
  1248  001B                     	;# 
  1249  001C                     	;# 
  1250  008C                     	;# 
  1251  008E                     	;# 
  1252  0091                     	;# 
  1253  0092                     	;# 
  1254  0093                     	;# 
  1255  0095                     	;# 
  1256  0096                     	;# 
  1257  0097                     	;# 
  1258  0098                     	;# 
  1259  0099                     	;# 
  1260  009A                     	;# 
  1261  009B                     	;# 
  1262  009B                     	;# 
  1263  009C                     	;# 
  1264  009D                     	;# 
  1265  009E                     	;# 
  1266  009F                     	;# 
  1267  010C                     	;# 
  1268  010E                     	;# 
  1269  0111                     	;# 
  1270  0112                     	;# 
  1271  0113                     	;# 
  1272  0114                     	;# 
  1273  0115                     	;# 
  1274  0116                     	;# 
  1275  0117                     	;# 
  1276  0118                     	;# 
  1277  0119                     	;# 
  1278  018C                     	;# 
  1279  018E                     	;# 
  1280  0191                     	;# 
  1281  0191                     	;# 
  1282  0192                     	;# 
  1283  0193                     	;# 
  1284  0193                     	;# 
  1285  0194                     	;# 
  1286  0195                     	;# 
  1287  0196                     	;# 
  1288  0197                     	;# 
  1289  0199                     	;# 
  1290  019A                     	;# 
  1291  019B                     	;# 
  1292  019B                     	;# 
  1293  019C                     	;# 
  1294  019D                     	;# 
  1295  019E                     	;# 
  1296  019F                     	;# 
  1297  020C                     	;# 
  1298  020E                     	;# 
  1299  028C                     	;# 
  1300  028E                     	;# 
  1301  030C                     	;# 
  1302  030E                     	;# 
  1303  038C                     	;# 
  1304  038E                     	;# 
  1305  0391                     	;# 
  1306  0392                     	;# 
  1307  0393                     	;# 
  1308  0397                     	;# 
  1309  0398                     	;# 
  1310  0399                     	;# 
  1311  0691                     	;# 
  1312  0692                     	;# 
  1313  0693                     	;# 
  1314  0694                     	;# 
  1315  0695                     	;# 
  1316  0D8E                     	;# 
  1317  0D8F                     	;# 
  1318  0D90                     	;# 
  1319  0D91                     	;# 
  1320  0D91                     	;# 
  1321  0D92                     	;# 
  1322  0D93                     	;# 
  1323  0D93                     	;# 
  1324  0D94                     	;# 
  1325  0D95                     	;# 
  1326  0D95                     	;# 
  1327  0D96                     	;# 
  1328  0D97                     	;# 
  1329  0D97                     	;# 
  1330  0D98                     	;# 
  1331  0D99                     	;# 
  1332  0D99                     	;# 
  1333  0D9A                     	;# 
  1334  0D9B                     	;# 
  1335  0D9C                     	;# 
  1336  0D9C                     	;# 
  1337  0D9D                     	;# 
  1338  0D9D                     	;# 
  1339  0D9E                     	;# 
  1340  0D9F                     	;# 
  1341  0DA0                     	;# 
  1342  0DA1                     	;# 
  1343  0DA1                     	;# 
  1344  0DA2                     	;# 
  1345  0DA3                     	;# 
  1346  0DA3                     	;# 
  1347  0DA4                     	;# 
  1348  0DA5                     	;# 
  1349  0DA5                     	;# 
  1350  0DA6                     	;# 
  1351  0DA7                     	;# 
  1352  0DA7                     	;# 
  1353  0DA8                     	;# 
  1354  0DA9                     	;# 
  1355  0DA9                     	;# 
  1356  0DAA                     	;# 
  1357  0DAB                     	;# 
  1358  0DAC                     	;# 
  1359  0DAC                     	;# 
  1360  0DAD                     	;# 
  1361  0DAD                     	;# 
  1362  0DAE                     	;# 
  1363  0DAF                     	;# 
  1364  0DB0                     	;# 
  1365  0DB1                     	;# 
  1366  0DB1                     	;# 
  1367  0DB2                     	;# 
  1368  0DB3                     	;# 
  1369  0DB3                     	;# 
  1370  0DB4                     	;# 
  1371  0DB5                     	;# 
  1372  0DB5                     	;# 
  1373  0DB6                     	;# 
  1374  0DB7                     	;# 
  1375  0DB7                     	;# 
  1376  0DB8                     	;# 
  1377  0DB9                     	;# 
  1378  0DB9                     	;# 
  1379  0DBA                     	;# 
  1380  0DBB                     	;# 
  1381  0DBC                     	;# 
  1382  0DBC                     	;# 
  1383  0DBD                     	;# 
  1384  0DBD                     	;# 
  1385  0DBE                     	;# 
  1386  0DBF                     	;# 
  1387  0DC0                     	;# 
  1388  0DC1                     	;# 
  1389  0DC1                     	;# 
  1390  0DC2                     	;# 
  1391  0DC3                     	;# 
  1392  0DC3                     	;# 
  1393  0DC4                     	;# 
  1394  0DC5                     	;# 
  1395  0DC5                     	;# 
  1396  0DC6                     	;# 
  1397  0DC7                     	;# 
  1398  0DC7                     	;# 
  1399  0DC8                     	;# 
  1400  0DC9                     	;# 
  1401  0DC9                     	;# 
  1402  0DCA                     	;# 
  1403  0DCB                     	;# 
  1404  0DCC                     	;# 
  1405  0DCC                     	;# 
  1406  0DCD                     	;# 
  1407  0DCD                     	;# 
  1408  0DCE                     	;# 
  1409  0DCF                     	;# 
  1410  0DD0                     	;# 
  1411  0E0F                     	;# 
  1412  0E10                     	;# 
  1413  0E11                     	;# 
  1414  0E12                     	;# 
  1415  0E13                     	;# 
  1416  0E14                     	;# 
  1417  0E15                     	;# 
  1418  0E16                     	;# 
  1419  0E17                     	;# 
  1420  0E90                     	;# 
  1421  0E91                     	;# 
  1422  0E92                     	;# 
  1423  0E94                     	;# 
  1424  0E95                     	;# 
  1425  0EA0                     	;# 
  1426  0EA1                     	;# 
  1427  0EA2                     	;# 
  1428  0EA3                     	;# 
  1429  0EA4                     	;# 
  1430  0EA5                     	;# 
  1431  0FE4                     	;# 
  1432  0FE5                     	;# 
  1433  0FE6                     	;# 
  1434  0FE7                     	;# 
  1435  0FE8                     	;# 
  1436  0FE8                     	;# 
  1437  0FE9                     	;# 
  1438  0FEA                     	;# 
  1439  0FEA                     	;# 
  1440  0FEB                     	;# 
  1441  0FED                     	;# 
  1442  0FEE                     	;# 
  1443  0FEE                     	;# 
  1444  0FEF                     	;# 
  1445  0000                     	;# 
  1446  0001                     	;# 
  1447  0002                     	;# 
  1448  0003                     	;# 
  1449  0004                     	;# 
  1450  0005                     	;# 
  1451  0006                     	;# 
  1452  0007                     	;# 
  1453  0008                     	;# 
  1454  0009                     	;# 
  1455  000A                     	;# 
  1456  000B                     	;# 
  1457  000C                     	;# 
  1458  000E                     	;# 
  1459  0011                     	;# 
  1460  0012                     	;# 
  1461  0013                     	;# 
  1462  0015                     	;# 
  1463  0016                     	;# 
  1464  0016                     	;# 
  1465  0017                     	;# 
  1466  0018                     	;# 
  1467  0019                     	;# 
  1468  001A                     	;# 
  1469  001B                     	;# 
  1470  001C                     	;# 
  1471  008C                     	;# 
  1472  008E                     	;# 
  1473  0091                     	;# 
  1474  0092                     	;# 
  1475  0093                     	;# 
  1476  0095                     	;# 
  1477  0096                     	;# 
  1478  0097                     	;# 
  1479  0098                     	;# 
  1480  0099                     	;# 
  1481  009A                     	;# 
  1482  009B                     	;# 
  1483  009B                     	;# 
  1484  009C                     	;# 
  1485  009D                     	;# 
  1486  009E                     	;# 
  1487  009F                     	;# 
  1488  010C                     	;# 
  1489  010E                     	;# 
  1490  0111                     	;# 
  1491  0112                     	;# 
  1492  0113                     	;# 
  1493  0114                     	;# 
  1494  0115                     	;# 
  1495  0116                     	;# 
  1496  0117                     	;# 
  1497  0118                     	;# 
  1498  0119                     	;# 
  1499  018C                     	;# 
  1500  018E                     	;# 
  1501  0191                     	;# 
  1502  0191                     	;# 
  1503  0192                     	;# 
  1504  0193                     	;# 
  1505  0193                     	;# 
  1506  0194                     	;# 
  1507  0195                     	;# 
  1508  0196                     	;# 
  1509  0197                     	;# 
  1510  0199                     	;# 
  1511  019A                     	;# 
  1512  019B                     	;# 
  1513  019B                     	;# 
  1514  019C                     	;# 
  1515  019D                     	;# 
  1516  019E                     	;# 
  1517  019F                     	;# 
  1518  020C                     	;# 
  1519  020E                     	;# 
  1520  028C                     	;# 
  1521  028E                     	;# 
  1522  030C                     	;# 
  1523  030E                     	;# 
  1524  038C                     	;# 
  1525  038E                     	;# 
  1526  0391                     	;# 
  1527  0392                     	;# 
  1528  0393                     	;# 
  1529  0397                     	;# 
  1530  0398                     	;# 
  1531  0399                     	;# 
  1532  0691                     	;# 
  1533  0692                     	;# 
  1534  0693                     	;# 
  1535  0694                     	;# 
  1536  0695                     	;# 
  1537  0D8E                     	;# 
  1538  0D8F                     	;# 
  1539  0D90                     	;# 
  1540  0D91                     	;# 
  1541  0D91                     	;# 
  1542  0D92                     	;# 
  1543  0D93                     	;# 
  1544  0D93                     	;# 
  1545  0D94                     	;# 
  1546  0D95                     	;# 
  1547  0D95                     	;# 
  1548  0D96                     	;# 
  1549  0D97                     	;# 
  1550  0D97                     	;# 
  1551  0D98                     	;# 
  1552  0D99                     	;# 
  1553  0D99                     	;# 
  1554  0D9A                     	;# 
  1555  0D9B                     	;# 
  1556  0D9C                     	;# 
  1557  0D9C                     	;# 
  1558  0D9D                     	;# 
  1559  0D9D                     	;# 
  1560  0D9E                     	;# 
  1561  0D9F                     	;# 
  1562  0DA0                     	;# 
  1563  0DA1                     	;# 
  1564  0DA1                     	;# 
  1565  0DA2                     	;# 
  1566  0DA3                     	;# 
  1567  0DA3                     	;# 
  1568  0DA4                     	;# 
  1569  0DA5                     	;# 
  1570  0DA5                     	;# 
  1571  0DA6                     	;# 
  1572  0DA7                     	;# 
  1573  0DA7                     	;# 
  1574  0DA8                     	;# 
  1575  0DA9                     	;# 
  1576  0DA9                     	;# 
  1577  0DAA                     	;# 
  1578  0DAB                     	;# 
  1579  0DAC                     	;# 
  1580  0DAC                     	;# 
  1581  0DAD                     	;# 
  1582  0DAD                     	;# 
  1583  0DAE                     	;# 
  1584  0DAF                     	;# 
  1585  0DB0                     	;# 
  1586  0DB1                     	;# 
  1587  0DB1                     	;# 
  1588  0DB2                     	;# 
  1589  0DB3                     	;# 
  1590  0DB3                     	;# 
  1591  0DB4                     	;# 
  1592  0DB5                     	;# 
  1593  0DB5                     	;# 
  1594  0DB6                     	;# 
  1595  0DB7                     	;# 
  1596  0DB7                     	;# 
  1597  0DB8                     	;# 
  1598  0DB9                     	;# 
  1599  0DB9                     	;# 
  1600  0DBA                     	;# 
  1601  0DBB                     	;# 
  1602  0DBC                     	;# 
  1603  0DBC                     	;# 
  1604  0DBD                     	;# 
  1605  0DBD                     	;# 
  1606  0DBE                     	;# 
  1607  0DBF                     	;# 
  1608  0DC0                     	;# 
  1609  0DC1                     	;# 
  1610  0DC1                     	;# 
  1611  0DC2                     	;# 
  1612  0DC3                     	;# 
  1613  0DC3                     	;# 
  1614  0DC4                     	;# 
  1615  0DC5                     	;# 
  1616  0DC5                     	;# 
  1617  0DC6                     	;# 
  1618  0DC7                     	;# 
  1619  0DC7                     	;# 
  1620  0DC8                     	;# 
  1621  0DC9                     	;# 
  1622  0DC9                     	;# 
  1623  0DCA                     	;# 
  1624  0DCB                     	;# 
  1625  0DCC                     	;# 
  1626  0DCC                     	;# 
  1627  0DCD                     	;# 
  1628  0DCD                     	;# 
  1629  0DCE                     	;# 
  1630  0DCF                     	;# 
  1631  0DD0                     	;# 
  1632  0E0F                     	;# 
  1633  0E10                     	;# 
  1634  0E11                     	;# 
  1635  0E12                     	;# 
  1636  0E13                     	;# 
  1637  0E14                     	;# 
  1638  0E15                     	;# 
  1639  0E16                     	;# 
  1640  0E17                     	;# 
  1641  0E90                     	;# 
  1642  0E91                     	;# 
  1643  0E92                     	;# 
  1644  0E94                     	;# 
  1645  0E95                     	;# 
  1646  0EA0                     	;# 
  1647  0EA1                     	;# 
  1648  0EA2                     	;# 
  1649  0EA3                     	;# 
  1650  0EA4                     	;# 
  1651  0EA5                     	;# 
  1652  0FE4                     	;# 
  1653  0FE5                     	;# 
  1654  0FE6                     	;# 
  1655  0FE7                     	;# 
  1656  0FE8                     	;# 
  1657  0FE8                     	;# 
  1658  0FE9                     	;# 
  1659  0FEA                     	;# 
  1660  0FEA                     	;# 
  1661  0FEB                     	;# 
  1662  0FED                     	;# 
  1663  0FEE                     	;# 
  1664  0FEE                     	;# 
  1665  0FEF                     	;# 
  1666  0000                     	;# 
  1667  0001                     	;# 
  1668  0002                     	;# 
  1669  0003                     	;# 
  1670  0004                     	;# 
  1671  0005                     	;# 
  1672  0006                     	;# 
  1673  0007                     	;# 
  1674  0008                     	;# 
  1675  0009                     	;# 
  1676  000A                     	;# 
  1677  000B                     	;# 
  1678  000C                     	;# 
  1679  000E                     	;# 
  1680  0011                     	;# 
  1681  0012                     	;# 
  1682  0013                     	;# 
  1683  0015                     	;# 
  1684  0016                     	;# 
  1685  0016                     	;# 
  1686  0017                     	;# 
  1687  0018                     	;# 
  1688  0019                     	;# 
  1689  001A                     	;# 
  1690  001B                     	;# 
  1691  001C                     	;# 
  1692  008C                     	;# 
  1693  008E                     	;# 
  1694  0091                     	;# 
  1695  0092                     	;# 
  1696  0093                     	;# 
  1697  0095                     	;# 
  1698  0096                     	;# 
  1699  0097                     	;# 
  1700  0098                     	;# 
  1701  0099                     	;# 
  1702  009A                     	;# 
  1703  009B                     	;# 
  1704  009B                     	;# 
  1705  009C                     	;# 
  1706  009D                     	;# 
  1707  009E                     	;# 
  1708  009F                     	;# 
  1709  010C                     	;# 
  1710  010E                     	;# 
  1711  0111                     	;# 
  1712  0112                     	;# 
  1713  0113                     	;# 
  1714  0114                     	;# 
  1715  0115                     	;# 
  1716  0116                     	;# 
  1717  0117                     	;# 
  1718  0118                     	;# 
  1719  0119                     	;# 
  1720  018C                     	;# 
  1721  018E                     	;# 
  1722  0191                     	;# 
  1723  0191                     	;# 
  1724  0192                     	;# 
  1725  0193                     	;# 
  1726  0193                     	;# 
  1727  0194                     	;# 
  1728  0195                     	;# 
  1729  0196                     	;# 
  1730  0197                     	;# 
  1731  0199                     	;# 
  1732  019A                     	;# 
  1733  019B                     	;# 
  1734  019B                     	;# 
  1735  019C                     	;# 
  1736  019D                     	;# 
  1737  019E                     	;# 
  1738  019F                     	;# 
  1739  020C                     	;# 
  1740  020E                     	;# 
  1741  028C                     	;# 
  1742  028E                     	;# 
  1743  030C                     	;# 
  1744  030E                     	;# 
  1745  038C                     	;# 
  1746  038E                     	;# 
  1747  0391                     	;# 
  1748  0392                     	;# 
  1749  0393                     	;# 
  1750  0397                     	;# 
  1751  0398                     	;# 
  1752  0399                     	;# 
  1753  0691                     	;# 
  1754  0692                     	;# 
  1755  0693                     	;# 
  1756  0694                     	;# 
  1757  0695                     	;# 
  1758  0D8E                     	;# 
  1759  0D8F                     	;# 
  1760  0D90                     	;# 
  1761  0D91                     	;# 
  1762  0D91                     	;# 
  1763  0D92                     	;# 
  1764  0D93                     	;# 
  1765  0D93                     	;# 
  1766  0D94                     	;# 
  1767  0D95                     	;# 
  1768  0D95                     	;# 
  1769  0D96                     	;# 
  1770  0D97                     	;# 
  1771  0D97                     	;# 
  1772  0D98                     	;# 
  1773  0D99                     	;# 
  1774  0D99                     	;# 
  1775  0D9A                     	;# 
  1776  0D9B                     	;# 
  1777  0D9C                     	;# 
  1778  0D9C                     	;# 
  1779  0D9D                     	;# 
  1780  0D9D                     	;# 
  1781  0D9E                     	;# 
  1782  0D9F                     	;# 
  1783  0DA0                     	;# 
  1784  0DA1                     	;# 
  1785  0DA1                     	;# 
  1786  0DA2                     	;# 
  1787  0DA3                     	;# 
  1788  0DA3                     	;# 
  1789  0DA4                     	;# 
  1790  0DA5                     	;# 
  1791  0DA5                     	;# 
  1792  0DA6                     	;# 
  1793  0DA7                     	;# 
  1794  0DA7                     	;# 
  1795  0DA8                     	;# 
  1796  0DA9                     	;# 
  1797  0DA9                     	;# 
  1798  0DAA                     	;# 
  1799  0DAB                     	;# 
  1800  0DAC                     	;# 
  1801  0DAC                     	;# 
  1802  0DAD                     	;# 
  1803  0DAD                     	;# 
  1804  0DAE                     	;# 
  1805  0DAF                     	;# 
  1806  0DB0                     	;# 
  1807  0DB1                     	;# 
  1808  0DB1                     	;# 
  1809  0DB2                     	;# 
  1810  0DB3                     	;# 
  1811  0DB3                     	;# 
  1812  0DB4                     	;# 
  1813  0DB5                     	;# 
  1814  0DB5                     	;# 
  1815  0DB6                     	;# 
  1816  0DB7                     	;# 
  1817  0DB7                     	;# 
  1818  0DB8                     	;# 
  1819  0DB9                     	;# 
  1820  0DB9                     	;# 
  1821  0DBA                     	;# 
  1822  0DBB                     	;# 
  1823  0DBC                     	;# 
  1824  0DBC                     	;# 
  1825  0DBD                     	;# 
  1826  0DBD                     	;# 
  1827  0DBE                     	;# 
  1828  0DBF                     	;# 
  1829  0DC0                     	;# 
  1830  0DC1                     	;# 
  1831  0DC1                     	;# 
  1832  0DC2                     	;# 
  1833  0DC3                     	;# 
  1834  0DC3                     	;# 
  1835  0DC4                     	;# 
  1836  0DC5                     	;# 
  1837  0DC5                     	;# 
  1838  0DC6                     	;# 
  1839  0DC7                     	;# 
  1840  0DC7                     	;# 
  1841  0DC8                     	;# 
  1842  0DC9                     	;# 
  1843  0DC9                     	;# 
  1844  0DCA                     	;# 
  1845  0DCB                     	;# 
  1846  0DCC                     	;# 
  1847  0DCC                     	;# 
  1848  0DCD                     	;# 
  1849  0DCD                     	;# 
  1850  0DCE                     	;# 
  1851  0DCF                     	;# 
  1852  0DD0                     	;# 
  1853  0E0F                     	;# 
  1854  0E10                     	;# 
  1855  0E11                     	;# 
  1856  0E12                     	;# 
  1857  0E13                     	;# 
  1858  0E14                     	;# 
  1859  0E15                     	;# 
  1860  0E16                     	;# 
  1861  0E17                     	;# 
  1862  0E90                     	;# 
  1863  0E91                     	;# 
  1864  0E92                     	;# 
  1865  0E94                     	;# 
  1866  0E95                     	;# 
  1867  0EA0                     	;# 
  1868  0EA1                     	;# 
  1869  0EA2                     	;# 
  1870  0EA3                     	;# 
  1871  0EA4                     	;# 
  1872  0EA5                     	;# 
  1873  0FE4                     	;# 
  1874  0FE5                     	;# 
  1875  0FE6                     	;# 
  1876  0FE7                     	;# 
  1877  0FE8                     	;# 
  1878  0FE8                     	;# 
  1879  0FE9                     	;# 
  1880  0FEA                     	;# 
  1881  0FEA                     	;# 
  1882  0FEB                     	;# 
  1883  0FED                     	;# 
  1884  0FEE                     	;# 
  1885  0FEE                     	;# 
  1886  0FEF                     	;# 
  1887  0000                     	;# 
  1888  0001                     	;# 
  1889  0002                     	;# 
  1890  0003                     	;# 
  1891  0004                     	;# 
  1892  0005                     	;# 
  1893  0006                     	;# 
  1894  0007                     	;# 
  1895  0008                     	;# 
  1896  0009                     	;# 
  1897  000A                     	;# 
  1898  000B                     	;# 
  1899  000C                     	;# 
  1900  000E                     	;# 
  1901  0011                     	;# 
  1902  0012                     	;# 
  1903  0013                     	;# 
  1904  0015                     	;# 
  1905  0016                     	;# 
  1906  0016                     	;# 
  1907  0017                     	;# 
  1908  0018                     	;# 
  1909  0019                     	;# 
  1910  001A                     	;# 
  1911  001B                     	;# 
  1912  001C                     	;# 
  1913  008C                     	;# 
  1914  008E                     	;# 
  1915  0091                     	;# 
  1916  0092                     	;# 
  1917  0093                     	;# 
  1918  0095                     	;# 
  1919  0096                     	;# 
  1920  0097                     	;# 
  1921  0098                     	;# 
  1922  0099                     	;# 
  1923  009A                     	;# 
  1924  009B                     	;# 
  1925  009B                     	;# 
  1926  009C                     	;# 
  1927  009D                     	;# 
  1928  009E                     	;# 
  1929  009F                     	;# 
  1930  010C                     	;# 
  1931  010E                     	;# 
  1932  0111                     	;# 
  1933  0112                     	;# 
  1934  0113                     	;# 
  1935  0114                     	;# 
  1936  0115                     	;# 
  1937  0116                     	;# 
  1938  0117                     	;# 
  1939  0118                     	;# 
  1940  0119                     	;# 
  1941  018C                     	;# 
  1942  018E                     	;# 
  1943  0191                     	;# 
  1944  0191                     	;# 
  1945  0192                     	;# 
  1946  0193                     	;# 
  1947  0193                     	;# 
  1948  0194                     	;# 
  1949  0195                     	;# 
  1950  0196                     	;# 
  1951  0197                     	;# 
  1952  0199                     	;# 
  1953  019A                     	;# 
  1954  019B                     	;# 
  1955  019B                     	;# 
  1956  019C                     	;# 
  1957  019D                     	;# 
  1958  019E                     	;# 
  1959  019F                     	;# 
  1960  020C                     	;# 
  1961  020E                     	;# 
  1962  028C                     	;# 
  1963  028E                     	;# 
  1964  030C                     	;# 
  1965  030E                     	;# 
  1966  038C                     	;# 
  1967  038E                     	;# 
  1968  0391                     	;# 
  1969  0392                     	;# 
  1970  0393                     	;# 
  1971  0397                     	;# 
  1972  0398                     	;# 
  1973  0399                     	;# 
  1974  0691                     	;# 
  1975  0692                     	;# 
  1976  0693                     	;# 
  1977  0694                     	;# 
  1978  0695                     	;# 
  1979  0D8E                     	;# 
  1980  0D8F                     	;# 
  1981  0D90                     	;# 
  1982  0D91                     	;# 
  1983  0D91                     	;# 
  1984  0D92                     	;# 
  1985  0D93                     	;# 
  1986  0D93                     	;# 
  1987  0D94                     	;# 
  1988  0D95                     	;# 
  1989  0D95                     	;# 
  1990  0D96                     	;# 
  1991  0D97                     	;# 
  1992  0D97                     	;# 
  1993  0D98                     	;# 
  1994  0D99                     	;# 
  1995  0D99                     	;# 
  1996  0D9A                     	;# 
  1997  0D9B                     	;# 
  1998  0D9C                     	;# 
  1999  0D9C                     	;# 
  2000  0D9D                     	;# 
  2001  0D9D                     	;# 
  2002  0D9E                     	;# 
  2003  0D9F                     	;# 
  2004  0DA0                     	;# 
  2005  0DA1                     	;# 
  2006  0DA1                     	;# 
  2007  0DA2                     	;# 
  2008  0DA3                     	;# 
  2009  0DA3                     	;# 
  2010  0DA4                     	;# 
  2011  0DA5                     	;# 
  2012  0DA5                     	;# 
  2013  0DA6                     	;# 
  2014  0DA7                     	;# 
  2015  0DA7                     	;# 
  2016  0DA8                     	;# 
  2017  0DA9                     	;# 
  2018  0DA9                     	;# 
  2019  0DAA                     	;# 
  2020  0DAB                     	;# 
  2021  0DAC                     	;# 
  2022  0DAC                     	;# 
  2023  0DAD                     	;# 
  2024  0DAD                     	;# 
  2025  0DAE                     	;# 
  2026  0DAF                     	;# 
  2027  0DB0                     	;# 
  2028  0DB1                     	;# 
  2029  0DB1                     	;# 
  2030  0DB2                     	;# 
  2031  0DB3                     	;# 
  2032  0DB3                     	;# 
  2033  0DB4                     	;# 
  2034  0DB5                     	;# 
  2035  0DB5                     	;# 
  2036  0DB6                     	;# 
  2037  0DB7                     	;# 
  2038  0DB7                     	;# 
  2039  0DB8                     	;# 
  2040  0DB9                     	;# 
  2041  0DB9                     	;# 
  2042  0DBA                     	;# 
  2043  0DBB                     	;# 
  2044  0DBC                     	;# 
  2045  0DBC                     	;# 
  2046  0DBD                     	;# 
  2047  0DBD                     	;# 
  2048  0DBE                     	;# 
  2049  0DBF                     	;# 
  2050  0DC0                     	;# 
  2051  0DC1                     	;# 
  2052  0DC1                     	;# 
  2053  0DC2                     	;# 
  2054  0DC3                     	;# 
  2055  0DC3                     	;# 
  2056  0DC4                     	;# 
  2057  0DC5                     	;# 
  2058  0DC5                     	;# 
  2059  0DC6                     	;# 
  2060  0DC7                     	;# 
  2061  0DC7                     	;# 
  2062  0DC8                     	;# 
  2063  0DC9                     	;# 
  2064  0DC9                     	;# 
  2065  0DCA                     	;# 
  2066  0DCB                     	;# 
  2067  0DCC                     	;# 
  2068  0DCC                     	;# 
  2069  0DCD                     	;# 
  2070  0DCD                     	;# 
  2071  0DCE                     	;# 
  2072  0DCF                     	;# 
  2073  0DD0                     	;# 
  2074  0E0F                     	;# 
  2075  0E10                     	;# 
  2076  0E11                     	;# 
  2077  0E12                     	;# 
  2078  0E13                     	;# 
  2079  0E14                     	;# 
  2080  0E15                     	;# 
  2081  0E16                     	;# 
  2082  0E17                     	;# 
  2083  0E90                     	;# 
  2084  0E91                     	;# 
  2085  0E92                     	;# 
  2086  0E94                     	;# 
  2087  0E95                     	;# 
  2088  0EA0                     	;# 
  2089  0EA1                     	;# 
  2090  0EA2                     	;# 
  2091  0EA3                     	;# 
  2092  0EA4                     	;# 
  2093  0EA5                     	;# 
  2094  0FE4                     	;# 
  2095  0FE5                     	;# 
  2096  0FE6                     	;# 
  2097  0FE7                     	;# 
  2098  0FE8                     	;# 
  2099  0FE8                     	;# 
  2100  0FE9                     	;# 
  2101  0FEA                     	;# 
  2102  0FEA                     	;# 
  2103  0FEB                     	;# 
  2104  0FED                     	;# 
  2105  0FEE                     	;# 
  2106  0FEE                     	;# 
  2107  0FEF                     	;# 
  2108  0000                     	;# 
  2109  0001                     	;# 
  2110  0002                     	;# 
  2111  0003                     	;# 
  2112  0004                     	;# 
  2113  0005                     	;# 
  2114  0006                     	;# 
  2115  0007                     	;# 
  2116  0008                     	;# 
  2117  0009                     	;# 
  2118  000A                     	;# 
  2119  000B                     	;# 
  2120  000C                     	;# 
  2121  000E                     	;# 
  2122  0011                     	;# 
  2123  0012                     	;# 
  2124  0013                     	;# 
  2125  0015                     	;# 
  2126  0016                     	;# 
  2127  0016                     	;# 
  2128  0017                     	;# 
  2129  0018                     	;# 
  2130  0019                     	;# 
  2131  001A                     	;# 
  2132  001B                     	;# 
  2133  001C                     	;# 
  2134  008C                     	;# 
  2135  008E                     	;# 
  2136  0091                     	;# 
  2137  0092                     	;# 
  2138  0093                     	;# 
  2139  0095                     	;# 
  2140  0096                     	;# 
  2141  0097                     	;# 
  2142  0098                     	;# 
  2143  0099                     	;# 
  2144  009A                     	;# 
  2145  009B                     	;# 
  2146  009B                     	;# 
  2147  009C                     	;# 
  2148  009D                     	;# 
  2149  009E                     	;# 
  2150  009F                     	;# 
  2151  010C                     	;# 
  2152  010E                     	;# 
  2153  0111                     	;# 
  2154  0112                     	;# 
  2155  0113                     	;# 
  2156  0114                     	;# 
  2157  0115                     	;# 
  2158  0116                     	;# 
  2159  0117                     	;# 
  2160  0118                     	;# 
  2161  0119                     	;# 
  2162  018C                     	;# 
  2163  018E                     	;# 
  2164  0191                     	;# 
  2165  0191                     	;# 
  2166  0192                     	;# 
  2167  0193                     	;# 
  2168  0193                     	;# 
  2169  0194                     	;# 
  2170  0195                     	;# 
  2171  0196                     	;# 
  2172  0197                     	;# 
  2173  0199                     	;# 
  2174  019A                     	;# 
  2175  019B                     	;# 
  2176  019B                     	;# 
  2177  019C                     	;# 
  2178  019D                     	;# 
  2179  019E                     	;# 
  2180  019F                     	;# 
  2181  020C                     	;# 
  2182  020E                     	;# 
  2183  028C                     	;# 
  2184  028E                     	;# 
  2185  030C                     	;# 
  2186  030E                     	;# 
  2187  038C                     	;# 
  2188  038E                     	;# 
  2189  0391                     	;# 
  2190  0392                     	;# 
  2191  0393                     	;# 
  2192  0397                     	;# 
  2193  0398                     	;# 
  2194  0399                     	;# 
  2195  0691                     	;# 
  2196  0692                     	;# 
  2197  0693                     	;# 
  2198  0694                     	;# 
  2199  0695                     	;# 
  2200  0D8E                     	;# 
  2201  0D8F                     	;# 
  2202  0D90                     	;# 
  2203  0D91                     	;# 
  2204  0D91                     	;# 
  2205  0D92                     	;# 
  2206  0D93                     	;# 
  2207  0D93                     	;# 
  2208  0D94                     	;# 
  2209  0D95                     	;# 
  2210  0D95                     	;# 
  2211  0D96                     	;# 
  2212  0D97                     	;# 
  2213  0D97                     	;# 
  2214  0D98                     	;# 
  2215  0D99                     	;# 
  2216  0D99                     	;# 
  2217  0D9A                     	;# 
  2218  0D9B                     	;# 
  2219  0D9C                     	;# 
  2220  0D9C                     	;# 
  2221  0D9D                     	;# 
  2222  0D9D                     	;# 
  2223  0D9E                     	;# 
  2224  0D9F                     	;# 
  2225  0DA0                     	;# 
  2226  0DA1                     	;# 
  2227  0DA1                     	;# 
  2228  0DA2                     	;# 
  2229  0DA3                     	;# 
  2230  0DA3                     	;# 
  2231  0DA4                     	;# 
  2232  0DA5                     	;# 
  2233  0DA5                     	;# 
  2234  0DA6                     	;# 
  2235  0DA7                     	;# 
  2236  0DA7                     	;# 
  2237  0DA8                     	;# 
  2238  0DA9                     	;# 
  2239  0DA9                     	;# 
  2240  0DAA                     	;# 
  2241  0DAB                     	;# 
  2242  0DAC                     	;# 
  2243  0DAC                     	;# 
  2244  0DAD                     	;# 
  2245  0DAD                     	;# 
  2246  0DAE                     	;# 
  2247  0DAF                     	;# 
  2248  0DB0                     	;# 
  2249  0DB1                     	;# 
  2250  0DB1                     	;# 
  2251  0DB2                     	;# 
  2252  0DB3                     	;# 
  2253  0DB3                     	;# 
  2254  0DB4                     	;# 
  2255  0DB5                     	;# 
  2256  0DB5                     	;# 
  2257  0DB6                     	;# 
  2258  0DB7                     	;# 
  2259  0DB7                     	;# 
  2260  0DB8                     	;# 
  2261  0DB9                     	;# 
  2262  0DB9                     	;# 
  2263  0DBA                     	;# 
  2264  0DBB                     	;# 
  2265  0DBC                     	;# 
  2266  0DBC                     	;# 
  2267  0DBD                     	;# 
  2268  0DBD                     	;# 
  2269  0DBE                     	;# 
  2270  0DBF                     	;# 
  2271  0DC0                     	;# 
  2272  0DC1                     	;# 
  2273  0DC1                     	;# 
  2274  0DC2                     	;# 
  2275  0DC3                     	;# 
  2276  0DC3                     	;# 
  2277  0DC4                     	;# 
  2278  0DC5                     	;# 
  2279  0DC5                     	;# 
  2280  0DC6                     	;# 
  2281  0DC7                     	;# 
  2282  0DC7                     	;# 
  2283  0DC8                     	;# 
  2284  0DC9                     	;# 
  2285  0DC9                     	;# 
  2286  0DCA                     	;# 
  2287  0DCB                     	;# 
  2288  0DCC                     	;# 
  2289  0DCC                     	;# 
  2290  0DCD                     	;# 
  2291  0DCD                     	;# 
  2292  0DCE                     	;# 
  2293  0DCF                     	;# 
  2294  0DD0                     	;# 
  2295  0E0F                     	;# 
  2296  0E10                     	;# 
  2297  0E11                     	;# 
  2298  0E12                     	;# 
  2299  0E13                     	;# 
  2300  0E14                     	;# 
  2301  0E15                     	;# 
  2302  0E16                     	;# 
  2303  0E17                     	;# 
  2304  0E90                     	;# 
  2305  0E91                     	;# 
  2306  0E92                     	;# 
  2307  0E94                     	;# 
  2308  0E95                     	;# 
  2309  0EA0                     	;# 
  2310  0EA1                     	;# 
  2311  0EA2                     	;# 
  2312  0EA3                     	;# 
  2313  0EA4                     	;# 
  2314  0EA5                     	;# 
  2315  0FE4                     	;# 
  2316  0FE5                     	;# 
  2317  0FE6                     	;# 
  2318  0FE7                     	;# 
  2319  0FE8                     	;# 
  2320  0FE8                     	;# 
  2321  0FE9                     	;# 
  2322  0FEA                     	;# 
  2323  0FEA                     	;# 
  2324  0FEB                     	;# 
  2325  0FED                     	;# 
  2326  0FEE                     	;# 
  2327  0FEE                     	;# 
  2328  0FEF                     	;# 
  2329  0000                     	;# 
  2330  0001                     	;# 
  2331  0002                     	;# 
  2332  0003                     	;# 
  2333  0004                     	;# 
  2334  0005                     	;# 
  2335  0006                     	;# 
  2336  0007                     	;# 
  2337  0008                     	;# 
  2338  0009                     	;# 
  2339  000A                     	;# 
  2340  000B                     	;# 
  2341  000C                     	;# 
  2342  000E                     	;# 
  2343  0011                     	;# 
  2344  0012                     	;# 
  2345  0013                     	;# 
  2346  0015                     	;# 
  2347  0016                     	;# 
  2348  0016                     	;# 
  2349  0017                     	;# 
  2350  0018                     	;# 
  2351  0019                     	;# 
  2352  001A                     	;# 
  2353  001B                     	;# 
  2354  001C                     	;# 
  2355  008C                     	;# 
  2356  008E                     	;# 
  2357  0091                     	;# 
  2358  0092                     	;# 
  2359  0093                     	;# 
  2360  0095                     	;# 
  2361  0096                     	;# 
  2362  0097                     	;# 
  2363  0098                     	;# 
  2364  0099                     	;# 
  2365  009A                     	;# 
  2366  009B                     	;# 
  2367  009B                     	;# 
  2368  009C                     	;# 
  2369  009D                     	;# 
  2370  009E                     	;# 
  2371  009F                     	;# 
  2372  010C                     	;# 
  2373  010E                     	;# 
  2374  0111                     	;# 
  2375  0112                     	;# 
  2376  0113                     	;# 
  2377  0114                     	;# 
  2378  0115                     	;# 
  2379  0116                     	;# 
  2380  0117                     	;# 
  2381  0118                     	;# 
  2382  0119                     	;# 
  2383  018C                     	;# 
  2384  018E                     	;# 
  2385  0191                     	;# 
  2386  0191                     	;# 
  2387  0192                     	;# 
  2388  0193                     	;# 
  2389  0193                     	;# 
  2390  0194                     	;# 
  2391  0195                     	;# 
  2392  0196                     	;# 
  2393  0197                     	;# 
  2394  0199                     	;# 
  2395  019A                     	;# 
  2396  019B                     	;# 
  2397  019B                     	;# 
  2398  019C                     	;# 
  2399  019D                     	;# 
  2400  019E                     	;# 
  2401  019F                     	;# 
  2402  020C                     	;# 
  2403  020E                     	;# 
  2404  028C                     	;# 
  2405  028E                     	;# 
  2406  030C                     	;# 
  2407  030E                     	;# 
  2408  038C                     	;# 
  2409  038E                     	;# 
  2410  0391                     	;# 
  2411  0392                     	;# 
  2412  0393                     	;# 
  2413  0397                     	;# 
  2414  0398                     	;# 
  2415  0399                     	;# 
  2416  0691                     	;# 
  2417  0692                     	;# 
  2418  0693                     	;# 
  2419  0694                     	;# 
  2420  0695                     	;# 
  2421  0D8E                     	;# 
  2422  0D8F                     	;# 
  2423  0D90                     	;# 
  2424  0D91                     	;# 
  2425  0D91                     	;# 
  2426  0D92                     	;# 
  2427  0D93                     	;# 
  2428  0D93                     	;# 
  2429  0D94                     	;# 
  2430  0D95                     	;# 
  2431  0D95                     	;# 
  2432  0D96                     	;# 
  2433  0D97                     	;# 
  2434  0D97                     	;# 
  2435  0D98                     	;# 
  2436  0D99                     	;# 
  2437  0D99                     	;# 
  2438  0D9A                     	;# 
  2439  0D9B                     	;# 
  2440  0D9C                     	;# 
  2441  0D9C                     	;# 
  2442  0D9D                     	;# 
  2443  0D9D                     	;# 
  2444  0D9E                     	;# 
  2445  0D9F                     	;# 
  2446  0DA0                     	;# 
  2447  0DA1                     	;# 
  2448  0DA1                     	;# 
  2449  0DA2                     	;# 
  2450  0DA3                     	;# 
  2451  0DA3                     	;# 
  2452  0DA4                     	;# 
  2453  0DA5                     	;# 
  2454  0DA5                     	;# 
  2455  0DA6                     	;# 
  2456  0DA7                     	;# 
  2457  0DA7                     	;# 
  2458  0DA8                     	;# 
  2459  0DA9                     	;# 
  2460  0DA9                     	;# 
  2461  0DAA                     	;# 
  2462  0DAB                     	;# 
  2463  0DAC                     	;# 
  2464  0DAC                     	;# 
  2465  0DAD                     	;# 
  2466  0DAD                     	;# 
  2467  0DAE                     	;# 
  2468  0DAF                     	;# 
  2469  0DB0                     	;# 
  2470  0DB1                     	;# 
  2471  0DB1                     	;# 
  2472  0DB2                     	;# 
  2473  0DB3                     	;# 
  2474  0DB3                     	;# 
  2475  0DB4                     	;# 
  2476  0DB5                     	;# 
  2477  0DB5                     	;# 
  2478  0DB6                     	;# 
  2479  0DB7                     	;# 
  2480  0DB7                     	;# 
  2481  0DB8                     	;# 
  2482  0DB9                     	;# 
  2483  0DB9                     	;# 
  2484  0DBA                     	;# 
  2485  0DBB                     	;# 
  2486  0DBC                     	;# 
  2487  0DBC                     	;# 
  2488  0DBD                     	;# 
  2489  0DBD                     	;# 
  2490  0DBE                     	;# 
  2491  0DBF                     	;# 
  2492  0DC0                     	;# 
  2493  0DC1                     	;# 
  2494  0DC1                     	;# 
  2495  0DC2                     	;# 
  2496  0DC3                     	;# 
  2497  0DC3                     	;# 
  2498  0DC4                     	;# 
  2499  0DC5                     	;# 
  2500  0DC5                     	;# 
  2501  0DC6                     	;# 
  2502  0DC7                     	;# 
  2503  0DC7                     	;# 
  2504  0DC8                     	;# 
  2505  0DC9                     	;# 
  2506  0DC9                     	;# 
  2507  0DCA                     	;# 
  2508  0DCB                     	;# 
  2509  0DCC                     	;# 
  2510  0DCC                     	;# 
  2511  0DCD                     	;# 
  2512  0DCD                     	;# 
  2513  0DCE                     	;# 
  2514  0DCF                     	;# 
  2515  0DD0                     	;# 
  2516  0E0F                     	;# 
  2517  0E10                     	;# 
  2518  0E11                     	;# 
  2519  0E12                     	;# 
  2520  0E13                     	;# 
  2521  0E14                     	;# 
  2522  0E15                     	;# 
  2523  0E16                     	;# 
  2524  0E17                     	;# 
  2525  0E90                     	;# 
  2526  0E91                     	;# 
  2527  0E92                     	;# 
  2528  0E94                     	;# 
  2529  0E95                     	;# 
  2530  0EA0                     	;# 
  2531  0EA1                     	;# 
  2532  0EA2                     	;# 
  2533  0EA3                     	;# 
  2534  0EA4                     	;# 
  2535  0EA5                     	;# 
  2536  0FE4                     	;# 
  2537  0FE5                     	;# 
  2538  0FE6                     	;# 
  2539  0FE7                     	;# 
  2540  0FE8                     	;# 
  2541  0FE8                     	;# 
  2542  0FE9                     	;# 
  2543  0FEA                     	;# 
  2544  0FEA                     	;# 
  2545  0FEB                     	;# 
  2546  0FED                     	;# 
  2547  0FEE                     	;# 
  2548  0FEE                     	;# 
  2549  0FEF                     	;# 
  2550  0FFF                     	;# 
  2551  0000                     	;# 
  2552  0001                     	;# 
  2553  0002                     	;# 
  2554  0003                     	;# 
  2555  0004                     	;# 
  2556  0005                     	;# 
  2557  0006                     	;# 
  2558  0007                     	;# 
  2559  0008                     	;# 
  2560  0009                     	;# 
  2561  000A                     	;# 
  2562  000B                     	;# 
  2563  000C                     	;# 
  2564  000E                     	;# 
  2565  0011                     	;# 
  2566  0012                     	;# 
  2567  0013                     	;# 
  2568  0015                     	;# 
  2569  0016                     	;# 
  2570  0016                     	;# 
  2571  0017                     	;# 
  2572  0018                     	;# 
  2573  0019                     	;# 
  2574  001A                     	;# 
  2575  001B                     	;# 
  2576  001C                     	;# 
  2577  008C                     	;# 
  2578  008E                     	;# 
  2579  0091                     	;# 
  2580  0092                     	;# 
  2581  0093                     	;# 
  2582  0095                     	;# 
  2583  0096                     	;# 
  2584  0097                     	;# 
  2585  0098                     	;# 
  2586  0099                     	;# 
  2587  009A                     	;# 
  2588  009B                     	;# 
  2589  009B                     	;# 
  2590  009C                     	;# 
  2591  009D                     	;# 
  2592  009E                     	;# 
  2593  009F                     	;# 
  2594  010C                     	;# 
  2595  010E                     	;# 
  2596  0111                     	;# 
  2597  0112                     	;# 
  2598  0113                     	;# 
  2599  0114                     	;# 
  2600  0115                     	;# 
  2601  0116                     	;# 
  2602  0117                     	;# 
  2603  0118                     	;# 
  2604  0119                     	;# 
  2605  018C                     	;# 
  2606  018E                     	;# 
  2607  0191                     	;# 
  2608  0191                     	;# 
  2609  0192                     	;# 
  2610  0193                     	;# 
  2611  0193                     	;# 
  2612  0194                     	;# 
  2613  0195                     	;# 
  2614  0196                     	;# 
  2615  0197                     	;# 
  2616  0199                     	;# 
  2617  019A                     	;# 
  2618  019B                     	;# 
  2619  019B                     	;# 
  2620  019C                     	;# 
  2621  019D                     	;# 
  2622  019E                     	;# 
  2623  019F                     	;# 
  2624  020C                     	;# 
  2625  020E                     	;# 
  2626  028C                     	;# 
  2627  028E                     	;# 
  2628  030C                     	;# 
  2629  030E                     	;# 
  2630  038C                     	;# 
  2631  038E                     	;# 
  2632  0391                     	;# 
  2633  0392                     	;# 
  2634  0393                     	;# 
  2635  0397                     	;# 
  2636  0398                     	;# 
  2637  0399                     	;# 
  2638  0691                     	;# 
  2639  0692                     	;# 
  2640  0693                     	;# 
  2641  0694                     	;# 
  2642  0695                     	;# 
  2643  0D8E                     	;# 
  2644  0D8F                     	;# 
  2645  0D90                     	;# 
  2646  0D91                     	;# 
  2647  0D91                     	;# 
  2648  0D92                     	;# 
  2649  0D93                     	;# 
  2650  0D93                     	;# 
  2651  0D94                     	;# 
  2652  0D95                     	;# 
  2653  0D95                     	;# 
  2654  0D96                     	;# 
  2655  0D97                     	;# 
  2656  0D97                     	;# 
  2657  0D98                     	;# 
  2658  0D99                     	;# 
  2659  0D99                     	;# 
  2660  0D9A                     	;# 
  2661  0D9B                     	;# 
  2662  0D9C                     	;# 
  2663  0D9C                     	;# 
  2664  0D9D                     	;# 
  2665  0D9D                     	;# 
  2666  0D9E                     	;# 
  2667  0D9F                     	;# 
  2668  0DA0                     	;# 
  2669  0DA1                     	;# 
  2670  0DA1                     	;# 
  2671  0DA2                     	;# 
  2672  0DA3                     	;# 
  2673  0DA3                     	;# 
  2674  0DA4                     	;# 
  2675  0DA5                     	;# 
  2676  0DA5                     	;# 
  2677  0DA6                     	;# 
  2678  0DA7                     	;# 
  2679  0DA7                     	;# 
  2680  0DA8                     	;# 
  2681  0DA9                     	;# 
  2682  0DA9                     	;# 
  2683  0DAA                     	;# 
  2684  0DAB                     	;# 
  2685  0DAC                     	;# 
  2686  0DAC                     	;# 
  2687  0DAD                     	;# 
  2688  0DAD                     	;# 
  2689  0DAE                     	;# 
  2690  0DAF                     	;# 
  2691  0DB0                     	;# 
  2692  0DB1                     	;# 
  2693  0DB1                     	;# 
  2694  0DB2                     	;# 
  2695  0DB3                     	;# 
  2696  0DB3                     	;# 
  2697  0DB4                     	;# 
  2698  0DB5                     	;# 
  2699  0DB5                     	;# 
  2700  0DB6                     	;# 
  2701  0DB7                     	;# 
  2702  0DB7                     	;# 
  2703  0DB8                     	;# 
  2704  0DB9                     	;# 
  2705  0DB9                     	;# 
  2706  0DBA                     	;# 
  2707  0DBB                     	;# 
  2708  0DBC                     	;# 
  2709  0DBC                     	;# 
  2710  0DBD                     	;# 
  2711  0DBD                     	;# 
  2712  0DBE                     	;# 
  2713  0DBF                     	;# 
  2714  0DC0                     	;# 
  2715  0DC1                     	;# 
  2716  0DC1                     	;# 
  2717  0DC2                     	;# 
  2718  0DC3                     	;# 
  2719  0DC3                     	;# 
  2720  0DC4                     	;# 
  2721  0DC5                     	;# 
  2722  0DC5                     	;# 
  2723  0DC6                     	;# 
  2724  0DC7                     	;# 
  2725  0DC7                     	;# 
  2726  0DC8                     	;# 
  2727  0DC9                     	;# 
  2728  0DC9                     	;# 
  2729  0DCA                     	;# 
  2730  0DCB                     	;# 
  2731  0DCC                     	;# 
  2732  0DCC                     	;# 
  2733  0DCD                     	;# 
  2734  0DCD                     	;# 
  2735  0DCE                     	;# 
  2736  0DCF                     	;# 
  2737  0DD0                     	;# 
  2738  0E0F                     	;# 
  2739  0E10                     	;# 
  2740  0E11                     	;# 
  2741  0E12                     	;# 
  2742  0E13                     	;# 
  2743  0E14                     	;# 
  2744  0E15                     	;# 
  2745  0E16                     	;# 
  2746  0E17                     	;# 
  2747  0E90                     	;# 
  2748  0E91                     	;# 
  2749  0E92                     	;# 
  2750  0E94                     	;# 
  2751  0E95                     	;# 
  2752  0EA0                     	;# 
  2753  0EA1                     	;# 
  2754  0EA2                     	;# 
  2755  0EA3                     	;# 
  2756  0EA4                     	;# 
  2757  0EA5                     	;# 
  2758  0FE4                     	;# 
  2759  0FE5                     	;# 
  2760  0FE6                     	;# 
  2761  0FE7                     	;# 
  2762  0FE8                     	;# 
  2763  0FE8                     	;# 
  2764  0FE9                     	;# 
  2765  0FEA                     	;# 
  2766  0FEA                     	;# 
  2767  0FEB                     	;# 
  2768  0FED                     	;# 
  2769  0FEE                     	;# 
  2770  0FEE                     	;# 
  2771  0FEF                     	;# 
  2772  0FFF                     	;# 
  2773  0000                     	;# 
  2774  0001                     	;# 
  2775  0002                     	;# 
  2776  0003                     	;# 
  2777  0004                     	;# 
  2778  0005                     	;# 
  2779  0006                     	;# 
  2780  0007                     	;# 
  2781  0008                     	;# 
  2782  0009                     	;# 
  2783  000A                     	;# 
  2784  000B                     	;# 
  2785  000C                     	;# 
  2786  000E                     	;# 
  2787  0011                     	;# 
  2788  0012                     	;# 
  2789  0013                     	;# 
  2790  0015                     	;# 
  2791  0016                     	;# 
  2792  0016                     	;# 
  2793  0017                     	;# 
  2794  0018                     	;# 
  2795  0019                     	;# 
  2796  001A                     	;# 
  2797  001B                     	;# 
  2798  001C                     	;# 
  2799  008C                     	;# 
  2800  008E                     	;# 
  2801  0091                     	;# 
  2802  0092                     	;# 
  2803  0093                     	;# 
  2804  0095                     	;# 
  2805  0096                     	;# 
  2806  0097                     	;# 
  2807  0098                     	;# 
  2808  0099                     	;# 
  2809  009A                     	;# 
  2810  009B                     	;# 
  2811  009B                     	;# 
  2812  009C                     	;# 
  2813  009D                     	;# 
  2814  009E                     	;# 
  2815  009F                     	;# 
  2816  010C                     	;# 
  2817  010E                     	;# 
  2818  0111                     	;# 
  2819  0112                     	;# 
  2820  0113                     	;# 
  2821  0114                     	;# 
  2822  0115                     	;# 
  2823  0116                     	;# 
  2824  0117                     	;# 
  2825  0118                     	;# 
  2826  0119                     	;# 
  2827  018C                     	;# 
  2828  018E                     	;# 
  2829  0191                     	;# 
  2830  0191                     	;# 
  2831  0192                     	;# 
  2832  0193                     	;# 
  2833  0193                     	;# 
  2834  0194                     	;# 
  2835  0195                     	;# 
  2836  0196                     	;# 
  2837  0197                     	;# 
  2838  0199                     	;# 
  2839  019A                     	;# 
  2840  019B                     	;# 
  2841  019B                     	;# 
  2842  019C                     	;# 
  2843  019D                     	;# 
  2844  019E                     	;# 
  2845  019F                     	;# 
  2846  020C                     	;# 
  2847  020E                     	;# 
  2848  028C                     	;# 
  2849  028E                     	;# 
  2850  030C                     	;# 
  2851  030E                     	;# 
  2852  038C                     	;# 
  2853  038E                     	;# 
  2854  0391                     	;# 
  2855  0392                     	;# 
  2856  0393                     	;# 
  2857  0397                     	;# 
  2858  0398                     	;# 
  2859  0399                     	;# 
  2860  0691                     	;# 
  2861  0692                     	;# 
  2862  0693                     	;# 
  2863  0694                     	;# 
  2864  0695                     	;# 
  2865  0D8E                     	;# 
  2866  0D8F                     	;# 
  2867  0D90                     	;# 
  2868  0D91                     	;# 
  2869  0D91                     	;# 
  2870  0D92                     	;# 
  2871  0D93                     	;# 
  2872  0D93                     	;# 
  2873  0D94                     	;# 
  2874  0D95                     	;# 
  2875  0D95                     	;# 
  2876  0D96                     	;# 
  2877  0D97                     	;# 
  2878  0D97                     	;# 
  2879  0D98                     	;# 
  2880  0D99                     	;# 
  2881  0D99                     	;# 
  2882  0D9A                     	;# 
  2883  0D9B                     	;# 
  2884  0D9C                     	;# 
  2885  0D9C                     	;# 
  2886  0D9D                     	;# 
  2887  0D9D                     	;# 
  2888  0D9E                     	;# 
  2889  0D9F                     	;# 
  2890  0DA0                     	;# 
  2891  0DA1                     	;# 
  2892  0DA1                     	;# 
  2893  0DA2                     	;# 
  2894  0DA3                     	;# 
  2895  0DA3                     	;# 
  2896  0DA4                     	;# 
  2897  0DA5                     	;# 
  2898  0DA5                     	;# 
  2899  0DA6                     	;# 
  2900  0DA7                     	;# 
  2901  0DA7                     	;# 
  2902  0DA8                     	;# 
  2903  0DA9                     	;# 
  2904  0DA9                     	;# 
  2905  0DAA                     	;# 
  2906  0DAB                     	;# 
  2907  0DAC                     	;# 
  2908  0DAC                     	;# 
  2909  0DAD                     	;# 
  2910  0DAD                     	;# 
  2911  0DAE                     	;# 
  2912  0DAF                     	;# 
  2913  0DB0                     	;# 
  2914  0DB1                     	;# 
  2915  0DB1                     	;# 
  2916  0DB2                     	;# 
  2917  0DB3                     	;# 
  2918  0DB3                     	;# 
  2919  0DB4                     	;# 
  2920  0DB5                     	;# 
  2921  0DB5                     	;# 
  2922  0DB6                     	;# 
  2923  0DB7                     	;# 
  2924  0DB7                     	;# 
  2925  0DB8                     	;# 
  2926  0DB9                     	;# 
  2927  0DB9                     	;# 
  2928  0DBA                     	;# 
  2929  0DBB                     	;# 
  2930  0DBC                     	;# 
  2931  0DBC                     	;# 
  2932  0DBD                     	;# 
  2933  0DBD                     	;# 
  2934  0DBE                     	;# 
  2935  0DBF                     	;# 
  2936  0DC0                     	;# 
  2937  0DC1                     	;# 
  2938  0DC1                     	;# 
  2939  0DC2                     	;# 
  2940  0DC3                     	;# 
  2941  0DC3                     	;# 
  2942  0DC4                     	;# 
  2943  0DC5                     	;# 
  2944  0DC5                     	;# 
  2945  0DC6                     	;# 
  2946  0DC7                     	;# 
  2947  0DC7                     	;# 
  2948  0DC8                     	;# 
  2949  0DC9                     	;# 
  2950  0DC9                     	;# 
  2951  0DCA                     	;# 
  2952  0DCB                     	;# 
  2953  0DCC                     	;# 
  2954  0DCC                     	;# 
  2955  0DCD                     	;# 
  2956  0DCD                     	;# 
  2957  0DCE                     	;# 
  2958  0DCF                     	;# 
  2959  0DD0                     	;# 
  2960  0E0F                     	;# 
  2961  0E10                     	;# 
  2962  0E11                     	;# 
  2963  0E12                     	;# 
  2964  0E13                     	;# 
  2965  0E14                     	;# 
  2966  0E15                     	;# 
  2967  0E16                     	;# 
  2968  0E17                     	;# 
  2969  0E90                     	;# 
  2970  0E91                     	;# 
  2971  0E92                     	;# 
  2972  0E94                     	;# 
  2973  0E95                     	;# 
  2974  0EA0                     	;# 
  2975  0EA1                     	;# 
  2976  0EA2                     	;# 
  2977  0EA3                     	;# 
  2978  0EA4                     	;# 
  2979  0EA5                     	;# 
  2980  0FE4                     	;# 
  2981  0FE5                     	;# 
  2982  0FE6                     	;# 
  2983  0FE7                     	;# 
  2984  0FE8                     	;# 
  2985  0FE8                     	;# 
  2986  0FE9                     	;# 
  2987  0FEA                     	;# 
  2988  0FEA                     	;# 
  2989  0FEB                     	;# 
  2990  0FED                     	;# 
  2991  0FEE                     	;# 
  2992  0FEE                     	;# 
  2993  0FEF                     	;# 
  2994  0FFF                     	;# 
  2995  0000                     	;# 
  2996  0001                     	;# 
  2997  0002                     	;# 
  2998  0003                     	;# 
  2999  0004                     	;# 
  3000  0005                     	;# 
  3001  0006                     	;# 
  3002  0007                     	;# 
  3003  0008                     	;# 
  3004  0009                     	;# 
  3005  000A                     	;# 
  3006  000B                     	;# 
  3007  000C                     	;# 
  3008  000E                     	;# 
  3009  0011                     	;# 
  3010  0012                     	;# 
  3011  0013                     	;# 
  3012  0015                     	;# 
  3013  0016                     	;# 
  3014  0016                     	;# 
  3015  0017                     	;# 
  3016  0018                     	;# 
  3017  0019                     	;# 
  3018  001A                     	;# 
  3019  001B                     	;# 
  3020  001C                     	;# 
  3021  008C                     	;# 
  3022  008E                     	;# 
  3023  0091                     	;# 
  3024  0092                     	;# 
  3025  0093                     	;# 
  3026  0095                     	;# 
  3027  0096                     	;# 
  3028  0097                     	;# 
  3029  0098                     	;# 
  3030  0099                     	;# 
  3031  009A                     	;# 
  3032  009B                     	;# 
  3033  009B                     	;# 
  3034  009C                     	;# 
  3035  009D                     	;# 
  3036  009E                     	;# 
  3037  009F                     	;# 
  3038  010C                     	;# 
  3039  010E                     	;# 
  3040  0111                     	;# 
  3041  0112                     	;# 
  3042  0113                     	;# 
  3043  0114                     	;# 
  3044  0115                     	;# 
  3045  0116                     	;# 
  3046  0117                     	;# 
  3047  0118                     	;# 
  3048  0119                     	;# 
  3049  018C                     	;# 
  3050  018E                     	;# 
  3051  0191                     	;# 
  3052  0191                     	;# 
  3053  0192                     	;# 
  3054  0193                     	;# 
  3055  0193                     	;# 
  3056  0194                     	;# 
  3057  0195                     	;# 
  3058  0196                     	;# 
  3059  0197                     	;# 
  3060  0199                     	;# 
  3061  019A                     	;# 
  3062  019B                     	;# 
  3063  019B                     	;# 
  3064  019C                     	;# 
  3065  019D                     	;# 
  3066  019E                     	;# 
  3067  019F                     	;# 
  3068  020C                     	;# 
  3069  020E                     	;# 
  3070  028C                     	;# 
  3071  028E                     	;# 
  3072  030C                     	;# 
  3073  030E                     	;# 
  3074  038C                     	;# 
  3075  038E                     	;# 
  3076  0391                     	;# 
  3077  0392                     	;# 
  3078  0393                     	;# 
  3079  0397                     	;# 
  3080  0398                     	;# 
  3081  0399                     	;# 
  3082  0691                     	;# 
  3083  0692                     	;# 
  3084  0693                     	;# 
  3085  0694                     	;# 
  3086  0695                     	;# 
  3087  0D8E                     	;# 
  3088  0D8F                     	;# 
  3089  0D90                     	;# 
  3090  0D91                     	;# 
  3091  0D91                     	;# 
  3092  0D92                     	;# 
  3093  0D93                     	;# 
  3094  0D93                     	;# 
  3095  0D94                     	;# 
  3096  0D95                     	;# 
  3097  0D95                     	;# 
  3098  0D96                     	;# 
  3099  0D97                     	;# 
  3100  0D97                     	;# 
  3101  0D98                     	;# 
  3102  0D99                     	;# 
  3103  0D99                     	;# 
  3104  0D9A                     	;# 
  3105  0D9B                     	;# 
  3106  0D9C                     	;# 
  3107  0D9C                     	;# 
  3108  0D9D                     	;# 
  3109  0D9D                     	;# 
  3110  0D9E                     	;# 
  3111  0D9F                     	;# 
  3112  0DA0                     	;# 
  3113  0DA1                     	;# 
  3114  0DA1                     	;# 
  3115  0DA2                     	;# 
  3116  0DA3                     	;# 
  3117  0DA3                     	;# 
  3118  0DA4                     	;# 
  3119  0DA5                     	;# 
  3120  0DA5                     	;# 
  3121  0DA6                     	;# 
  3122  0DA7                     	;# 
  3123  0DA7                     	;# 
  3124  0DA8                     	;# 
  3125  0DA9                     	;# 
  3126  0DA9                     	;# 
  3127  0DAA                     	;# 
  3128  0DAB                     	;# 
  3129  0DAC                     	;# 
  3130  0DAC                     	;# 
  3131  0DAD                     	;# 
  3132  0DAD                     	;# 
  3133  0DAE                     	;# 
  3134  0DAF                     	;# 
  3135  0DB0                     	;# 
  3136  0DB1                     	;# 
  3137  0DB1                     	;# 
  3138  0DB2                     	;# 
  3139  0DB3                     	;# 
  3140  0DB3                     	;# 
  3141  0DB4                     	;# 
  3142  0DB5                     	;# 
  3143  0DB5                     	;# 
  3144  0DB6                     	;# 
  3145  0DB7                     	;# 
  3146  0DB7                     	;# 
  3147  0DB8                     	;# 
  3148  0DB9                     	;# 
  3149  0DB9                     	;# 
  3150  0DBA                     	;# 
  3151  0DBB                     	;# 
  3152  0DBC                     	;# 
  3153  0DBC                     	;# 
  3154  0DBD                     	;# 
  3155  0DBD                     	;# 
  3156  0DBE                     	;# 
  3157  0DBF                     	;# 
  3158  0DC0                     	;# 
  3159  0DC1                     	;# 
  3160  0DC1                     	;# 
  3161  0DC2                     	;# 
  3162  0DC3                     	;# 
  3163  0DC3                     	;# 
  3164  0DC4                     	;# 
  3165  0DC5                     	;# 
  3166  0DC5                     	;# 
  3167  0DC6                     	;# 
  3168  0DC7                     	;# 
  3169  0DC7                     	;# 
  3170  0DC8                     	;# 
  3171  0DC9                     	;# 
  3172  0DC9                     	;# 
  3173  0DCA                     	;# 
  3174  0DCB                     	;# 
  3175  0DCC                     	;# 
  3176  0DCC                     	;# 
  3177  0DCD                     	;# 
  3178  0DCD                     	;# 
  3179  0DCE                     	;# 
  3180  0DCF                     	;# 
  3181  0DD0                     	;# 
  3182  0E0F                     	;# 
  3183  0E10                     	;# 
  3184  0E11                     	;# 
  3185  0E12                     	;# 
  3186  0E13                     	;# 
  3187  0E14                     	;# 
  3188  0E15                     	;# 
  3189  0E16                     	;# 
  3190  0E17                     	;# 
  3191  0E90                     	;# 
  3192  0E91                     	;# 
  3193  0E92                     	;# 
  3194  0E94                     	;# 
  3195  0E95                     	;# 
  3196  0EA0                     	;# 
  3197  0EA1                     	;# 
  3198  0EA2                     	;# 
  3199  0EA3                     	;# 
  3200  0EA4                     	;# 
  3201  0EA5                     	;# 
  3202  0FE4                     	;# 
  3203  0FE5                     	;# 
  3204  0FE6                     	;# 
  3205  0FE7                     	;# 
  3206  0FE8                     	;# 
  3207  0FE8                     	;# 
  3208  0FE9                     	;# 
  3209  0FEA                     	;# 
  3210  0FEA                     	;# 
  3211  0FEB                     	;# 
  3212  0FED                     	;# 
  3213  0FEE                     	;# 
  3214  0FEE                     	;# 
  3215  0FEF                     	;# 
  3216  0FFF                     	;# 
  3217  0000                     	;# 
  3218  0001                     	;# 
  3219  0002                     	;# 
  3220  0003                     	;# 
  3221  0004                     	;# 
  3222  0005                     	;# 
  3223  0006                     	;# 
  3224  0007                     	;# 
  3225  0008                     	;# 
  3226  0009                     	;# 
  3227  000A                     	;# 
  3228  000B                     	;# 
  3229  000C                     	;# 
  3230  000E                     	;# 
  3231  0011                     	;# 
  3232  0012                     	;# 
  3233  0013                     	;# 
  3234  0015                     	;# 
  3235  0016                     	;# 
  3236  0016                     	;# 
  3237  0017                     	;# 
  3238  0018                     	;# 
  3239  0019                     	;# 
  3240  001A                     	;# 
  3241  001B                     	;# 
  3242  001C                     	;# 
  3243  008C                     	;# 
  3244  008E                     	;# 
  3245  0091                     	;# 
  3246  0092                     	;# 
  3247  0093                     	;# 
  3248  0095                     	;# 
  3249  0096                     	;# 
  3250  0097                     	;# 
  3251  0098                     	;# 
  3252  0099                     	;# 
  3253  009A                     	;# 
  3254  009B                     	;# 
  3255  009B                     	;# 
  3256  009C                     	;# 
  3257  009D                     	;# 
  3258  009E                     	;# 
  3259  009F                     	;# 
  3260  010C                     	;# 
  3261  010E                     	;# 
  3262  0111                     	;# 
  3263  0112                     	;# 
  3264  0113                     	;# 
  3265  0114                     	;# 
  3266  0115                     	;# 
  3267  0116                     	;# 
  3268  0117                     	;# 
  3269  0118                     	;# 
  3270  0119                     	;# 
  3271  018C                     	;# 
  3272  018E                     	;# 
  3273  0191                     	;# 
  3274  0191                     	;# 
  3275  0192                     	;# 
  3276  0193                     	;# 
  3277  0193                     	;# 
  3278  0194                     	;# 
  3279  0195                     	;# 
  3280  0196                     	;# 
  3281  0197                     	;# 
  3282  0199                     	;# 
  3283  019A                     	;# 
  3284  019B                     	;# 
  3285  019B                     	;# 
  3286  019C                     	;# 
  3287  019D                     	;# 
  3288  019E                     	;# 
  3289  019F                     	;# 
  3290  020C                     	;# 
  3291  020E                     	;# 
  3292  028C                     	;# 
  3293  028E                     	;# 
  3294  030C                     	;# 
  3295  030E                     	;# 
  3296  038C                     	;# 
  3297  038E                     	;# 
  3298  0391                     	;# 
  3299  0392                     	;# 
  3300  0393                     	;# 
  3301  0397                     	;# 
  3302  0398                     	;# 
  3303  0399                     	;# 
  3304  0691                     	;# 
  3305  0692                     	;# 
  3306  0693                     	;# 
  3307  0694                     	;# 
  3308  0695                     	;# 
  3309  0D8E                     	;# 
  3310  0D8F                     	;# 
  3311  0D90                     	;# 
  3312  0D91                     	;# 
  3313  0D91                     	;# 
  3314  0D92                     	;# 
  3315  0D93                     	;# 
  3316  0D93                     	;# 
  3317  0D94                     	;# 
  3318  0D95                     	;# 
  3319  0D95                     	;# 
  3320  0D96                     	;# 
  3321  0D97                     	;# 
  3322  0D97                     	;# 
  3323  0D98                     	;# 
  3324  0D99                     	;# 
  3325  0D99                     	;# 
  3326  0D9A                     	;# 
  3327  0D9B                     	;# 
  3328  0D9C                     	;# 
  3329  0D9C                     	;# 
  3330  0D9D                     	;# 
  3331  0D9D                     	;# 
  3332  0D9E                     	;# 
  3333  0D9F                     	;# 
  3334  0DA0                     	;# 
  3335  0DA1                     	;# 
  3336  0DA1                     	;# 
  3337  0DA2                     	;# 
  3338  0DA3                     	;# 
  3339  0DA3                     	;# 
  3340  0DA4                     	;# 
  3341  0DA5                     	;# 
  3342  0DA5                     	;# 
  3343  0DA6                     	;# 
  3344  0DA7                     	;# 
  3345  0DA7                     	;# 
  3346  0DA8                     	;# 
  3347  0DA9                     	;# 
  3348  0DA9                     	;# 
  3349  0DAA                     	;# 
  3350  0DAB                     	;# 
  3351  0DAC                     	;# 
  3352  0DAC                     	;# 
  3353  0DAD                     	;# 
  3354  0DAD                     	;# 
  3355  0DAE                     	;# 
  3356  0DAF                     	;# 
  3357  0DB0                     	;# 
  3358  0DB1                     	;# 
  3359  0DB1                     	;# 
  3360  0DB2                     	;# 
  3361  0DB3                     	;# 
  3362  0DB3                     	;# 
  3363  0DB4                     	;# 
  3364  0DB5                     	;# 
  3365  0DB5                     	;# 
  3366  0DB6                     	;# 
  3367  0DB7                     	;# 
  3368  0DB7                     	;# 
  3369  0DB8                     	;# 
  3370  0DB9                     	;# 
  3371  0DB9                     	;# 
  3372  0DBA                     	;# 
  3373  0DBB                     	;# 
  3374  0DBC                     	;# 
  3375  0DBC                     	;# 
  3376  0DBD                     	;# 
  3377  0DBD                     	;# 
  3378  0DBE                     	;# 
  3379  0DBF                     	;# 
  3380  0DC0                     	;# 
  3381  0DC1                     	;# 
  3382  0DC1                     	;# 
  3383  0DC2                     	;# 
  3384  0DC3                     	;# 
  3385  0DC3                     	;# 
  3386  0DC4                     	;# 
  3387  0DC5                     	;# 
  3388  0DC5                     	;# 
  3389  0DC6                     	;# 
  3390  0DC7                     	;# 
  3391  0DC7                     	;# 
  3392  0DC8                     	;# 
  3393  0DC9                     	;# 
  3394  0DC9                     	;# 
  3395  0DCA                     	;# 
  3396  0DCB                     	;# 
  3397  0DCC                     	;# 
  3398  0DCC                     	;# 
  3399  0DCD                     	;# 
  3400  0DCD                     	;# 
  3401  0DCE                     	;# 
  3402  0DCF                     	;# 
  3403  0DD0                     	;# 
  3404  0E0F                     	;# 
  3405  0E10                     	;# 
  3406  0E11                     	;# 
  3407  0E12                     	;# 
  3408  0E13                     	;# 
  3409  0E14                     	;# 
  3410  0E15                     	;# 
  3411  0E16                     	;# 
  3412  0E17                     	;# 
  3413  0E90                     	;# 
  3414  0E91                     	;# 
  3415  0E92                     	;# 
  3416  0E94                     	;# 
  3417  0E95                     	;# 
  3418  0EA0                     	;# 
  3419  0EA1                     	;# 
  3420  0EA2                     	;# 
  3421  0EA3                     	;# 
  3422  0EA4                     	;# 
  3423  0EA5                     	;# 
  3424  0FE4                     	;# 
  3425  0FE5                     	;# 
  3426  0FE6                     	;# 
  3427  0FE7                     	;# 
  3428  0FE8                     	;# 
  3429  0FE8                     	;# 
  3430  0FE9                     	;# 
  3431  0FEA                     	;# 
  3432  0FEA                     	;# 
  3433  0FEB                     	;# 
  3434  0FED                     	;# 
  3435  0FEE                     	;# 
  3436  0FEE                     	;# 
  3437  0FEF                     	;# 
  3438  0FFF                     	;# 
  3439  0000                     	;# 
  3440  0001                     	;# 
  3441  0002                     	;# 
  3442  0003                     	;# 
  3443  0004                     	;# 
  3444  0005                     	;# 
  3445  0006                     	;# 
  3446  0007                     	;# 
  3447  0008                     	;# 
  3448  0009                     	;# 
  3449  000A                     	;# 
  3450  000B                     	;# 
  3451  000C                     	;# 
  3452  000E                     	;# 
  3453  0011                     	;# 
  3454  0012                     	;# 
  3455  0013                     	;# 
  3456  0015                     	;# 
  3457  0016                     	;# 
  3458  0016                     	;# 
  3459  0017                     	;# 
  3460  0018                     	;# 
  3461  0019                     	;# 
  3462  001A                     	;# 
  3463  001B                     	;# 
  3464  001C                     	;# 
  3465  008C                     	;# 
  3466  008E                     	;# 
  3467  0091                     	;# 
  3468  0092                     	;# 
  3469  0093                     	;# 
  3470  0095                     	;# 
  3471  0096                     	;# 
  3472  0097                     	;# 
  3473  0098                     	;# 
  3474  0099                     	;# 
  3475  009A                     	;# 
  3476  009B                     	;# 
  3477  009B                     	;# 
  3478  009C                     	;# 
  3479  009D                     	;# 
  3480  009E                     	;# 
  3481  009F                     	;# 
  3482  010C                     	;# 
  3483  010E                     	;# 
  3484  0111                     	;# 
  3485  0112                     	;# 
  3486  0113                     	;# 
  3487  0114                     	;# 
  3488  0115                     	;# 
  3489  0116                     	;# 
  3490  0117                     	;# 
  3491  0118                     	;# 
  3492  0119                     	;# 
  3493  018C                     	;# 
  3494  018E                     	;# 
  3495  0191                     	;# 
  3496  0191                     	;# 
  3497  0192                     	;# 
  3498  0193                     	;# 
  3499  0193                     	;# 
  3500  0194                     	;# 
  3501  0195                     	;# 
  3502  0196                     	;# 
  3503  0197                     	;# 
  3504  0199                     	;# 
  3505  019A                     	;# 
  3506  019B                     	;# 
  3507  019B                     	;# 
  3508  019C                     	;# 
  3509  019D                     	;# 
  3510  019E                     	;# 
  3511  019F                     	;# 
  3512  020C                     	;# 
  3513  020E                     	;# 
  3514  028C                     	;# 
  3515  028E                     	;# 
  3516  030C                     	;# 
  3517  030E                     	;# 
  3518  038C                     	;# 
  3519  038E                     	;# 
  3520  0391                     	;# 
  3521  0392                     	;# 
  3522  0393                     	;# 
  3523  0397                     	;# 
  3524  0398                     	;# 
  3525  0399                     	;# 
  3526  0691                     	;# 
  3527  0692                     	;# 
  3528  0693                     	;# 
  3529  0694                     	;# 
  3530  0695                     	;# 
  3531  0D8E                     	;# 
  3532  0D8F                     	;# 
  3533  0D90                     	;# 
  3534  0D91                     	;# 
  3535  0D91                     	;# 
  3536  0D92                     	;# 
  3537  0D93                     	;# 
  3538  0D93                     	;# 
  3539  0D94                     	;# 
  3540  0D95                     	;# 
  3541  0D95                     	;# 
  3542  0D96                     	;# 
  3543  0D97                     	;# 
  3544  0D97                     	;# 
  3545  0D98                     	;# 
  3546  0D99                     	;# 
  3547  0D99                     	;# 
  3548  0D9A                     	;# 
  3549  0D9B                     	;# 
  3550  0D9C                     	;# 
  3551  0D9C                     	;# 
  3552  0D9D                     	;# 
  3553  0D9D                     	;# 
  3554  0D9E                     	;# 
  3555  0D9F                     	;# 
  3556  0DA0                     	;# 
  3557  0DA1                     	;# 
  3558  0DA1                     	;# 
  3559  0DA2                     	;# 
  3560  0DA3                     	;# 
  3561  0DA3                     	;# 
  3562  0DA4                     	;# 
  3563  0DA5                     	;# 
  3564  0DA5                     	;# 
  3565  0DA6                     	;# 
  3566  0DA7                     	;# 
  3567  0DA7                     	;# 
  3568  0DA8                     	;# 
  3569  0DA9                     	;# 
  3570  0DA9                     	;# 
  3571  0DAA                     	;# 
  3572  0DAB                     	;# 
  3573  0DAC                     	;# 
  3574  0DAC                     	;# 
  3575  0DAD                     	;# 
  3576  0DAD                     	;# 
  3577  0DAE                     	;# 
  3578  0DAF                     	;# 
  3579  0DB0                     	;# 
  3580  0DB1                     	;# 
  3581  0DB1                     	;# 
  3582  0DB2                     	;# 
  3583  0DB3                     	;# 
  3584  0DB3                     	;# 
  3585  0DB4                     	;# 
  3586  0DB5                     	;# 
  3587  0DB5                     	;# 
  3588  0DB6                     	;# 
  3589  0DB7                     	;# 
  3590  0DB7                     	;# 
  3591  0DB8                     	;# 
  3592  0DB9                     	;# 
  3593  0DB9                     	;# 
  3594  0DBA                     	;# 
  3595  0DBB                     	;# 
  3596  0DBC                     	;# 
  3597  0DBC                     	;# 
  3598  0DBD                     	;# 
  3599  0DBD                     	;# 
  3600  0DBE                     	;# 
  3601  0DBF                     	;# 
  3602  0DC0                     	;# 
  3603  0DC1                     	;# 
  3604  0DC1                     	;# 
  3605  0DC2                     	;# 
  3606  0DC3                     	;# 
  3607  0DC3                     	;# 
  3608  0DC4                     	;# 
  3609  0DC5                     	;# 
  3610  0DC5                     	;# 
  3611  0DC6                     	;# 
  3612  0DC7                     	;# 
  3613  0DC7                     	;# 
  3614  0DC8                     	;# 
  3615  0DC9                     	;# 
  3616  0DC9                     	;# 
  3617  0DCA                     	;# 
  3618  0DCB                     	;# 
  3619  0DCC                     	;# 
  3620  0DCC                     	;# 
  3621  0DCD                     	;# 
  3622  0DCD                     	;# 
  3623  0DCE                     	;# 
  3624  0DCF                     	;# 
  3625  0DD0                     	;# 
  3626  0E0F                     	;# 
  3627  0E10                     	;# 
  3628  0E11                     	;# 
  3629  0E12                     	;# 
  3630  0E13                     	;# 
  3631  0E14                     	;# 
  3632  0E15                     	;# 
  3633  0E16                     	;# 
  3634  0E17                     	;# 
  3635  0E90                     	;# 
  3636  0E91                     	;# 
  3637  0E92                     	;# 
  3638  0E94                     	;# 
  3639  0E95                     	;# 
  3640  0EA0                     	;# 
  3641  0EA1                     	;# 
  3642  0EA2                     	;# 
  3643  0EA3                     	;# 
  3644  0EA4                     	;# 
  3645  0EA5                     	;# 
  3646  0FE4                     	;# 
  3647  0FE5                     	;# 
  3648  0FE6                     	;# 
  3649  0FE7                     	;# 
  3650  0FE8                     	;# 
  3651  0FE8                     	;# 
  3652  0FE9                     	;# 
  3653  0FEA                     	;# 
  3654  0FEA                     	;# 
  3655  0FEB                     	;# 
  3656  0FED                     	;# 
  3657  0FEE                     	;# 
  3658  0FEE                     	;# 
  3659  0FEF                     	;# 
  3660  0FFF                     	;# 
  3661  0000                     	;# 
  3662  0001                     	;# 
  3663  0002                     	;# 
  3664  0003                     	;# 
  3665  0004                     	;# 
  3666  0005                     	;# 
  3667  0006                     	;# 
  3668  0007                     	;# 
  3669  0008                     	;# 
  3670  0009                     	;# 
  3671  000A                     	;# 
  3672  000B                     	;# 
  3673  000C                     	;# 
  3674  000E                     	;# 
  3675  0011                     	;# 
  3676  0012                     	;# 
  3677  0013                     	;# 
  3678  0015                     	;# 
  3679  0016                     	;# 
  3680  0016                     	;# 
  3681  0017                     	;# 
  3682  0018                     	;# 
  3683  0019                     	;# 
  3684  001A                     	;# 
  3685  001B                     	;# 
  3686  001C                     	;# 
  3687  008C                     	;# 
  3688  008E                     	;# 
  3689  0091                     	;# 
  3690  0092                     	;# 
  3691  0093                     	;# 
  3692  0095                     	;# 
  3693  0096                     	;# 
  3694  0097                     	;# 
  3695  0098                     	;# 
  3696  0099                     	;# 
  3697  009A                     	;# 
  3698  009B                     	;# 
  3699  009B                     	;# 
  3700  009C                     	;# 
  3701  009D                     	;# 
  3702  009E                     	;# 
  3703  009F                     	;# 
  3704  010C                     	;# 
  3705  010E                     	;# 
  3706  0111                     	;# 
  3707  0112                     	;# 
  3708  0113                     	;# 
  3709  0114                     	;# 
  3710  0115                     	;# 
  3711  0116                     	;# 
  3712  0117                     	;# 
  3713  0118                     	;# 
  3714  0119                     	;# 
  3715  018C                     	;# 
  3716  018E                     	;# 
  3717  0191                     	;# 
  3718  0191                     	;# 
  3719  0192                     	;# 
  3720  0193                     	;# 
  3721  0193                     	;# 
  3722  0194                     	;# 
  3723  0195                     	;# 
  3724  0196                     	;# 
  3725  0197                     	;# 
  3726  0199                     	;# 
  3727  019A                     	;# 
  3728  019B                     	;# 
  3729  019B                     	;# 
  3730  019C                     	;# 
  3731  019D                     	;# 
  3732  019E                     	;# 
  3733  019F                     	;# 
  3734  020C                     	;# 
  3735  020E                     	;# 
  3736  028C                     	;# 
  3737  028E                     	;# 
  3738  030C                     	;# 
  3739  030E                     	;# 
  3740  038C                     	;# 
  3741  038E                     	;# 
  3742  0391                     	;# 
  3743  0392                     	;# 
  3744  0393                     	;# 
  3745  0397                     	;# 
  3746  0398                     	;# 
  3747  0399                     	;# 
  3748  0691                     	;# 
  3749  0692                     	;# 
  3750  0693                     	;# 
  3751  0694                     	;# 
  3752  0695                     	;# 
  3753  0D8E                     	;# 
  3754  0D8F                     	;# 
  3755  0D90                     	;# 
  3756  0D91                     	;# 
  3757  0D91                     	;# 
  3758  0D92                     	;# 
  3759  0D93                     	;# 
  3760  0D93                     	;# 
  3761  0D94                     	;# 
  3762  0D95                     	;# 
  3763  0D95                     	;# 
  3764  0D96                     	;# 
  3765  0D97                     	;# 
  3766  0D97                     	;# 
  3767  0D98                     	;# 
  3768  0D99                     	;# 
  3769  0D99                     	;# 
  3770  0D9A                     	;# 
  3771  0D9B                     	;# 
  3772  0D9C                     	;# 
  3773  0D9C                     	;# 
  3774  0D9D                     	;# 
  3775  0D9D                     	;# 
  3776  0D9E                     	;# 
  3777  0D9F                     	;# 
  3778  0DA0                     	;# 
  3779  0DA1                     	;# 
  3780  0DA1                     	;# 
  3781  0DA2                     	;# 
  3782  0DA3                     	;# 
  3783  0DA3                     	;# 
  3784  0DA4                     	;# 
  3785  0DA5                     	;# 
  3786  0DA5                     	;# 
  3787  0DA6                     	;# 
  3788  0DA7                     	;# 
  3789  0DA7                     	;# 
  3790  0DA8                     	;# 
  3791  0DA9                     	;# 
  3792  0DA9                     	;# 
  3793  0DAA                     	;# 
  3794  0DAB                     	;# 
  3795  0DAC                     	;# 
  3796  0DAC                     	;# 
  3797  0DAD                     	;# 
  3798  0DAD                     	;# 
  3799  0DAE                     	;# 
  3800  0DAF                     	;# 
  3801  0DB0                     	;# 
  3802  0DB1                     	;# 
  3803  0DB1                     	;# 
  3804  0DB2                     	;# 
  3805  0DB3                     	;# 
  3806  0DB3                     	;# 
  3807  0DB4                     	;# 
  3808  0DB5                     	;# 
  3809  0DB5                     	;# 
  3810  0DB6                     	;# 
  3811  0DB7                     	;# 
  3812  0DB7                     	;# 
  3813  0DB8                     	;# 
  3814  0DB9                     	;# 
  3815  0DB9                     	;# 
  3816  0DBA                     	;# 
  3817  0DBB                     	;# 
  3818  0DBC                     	;# 
  3819  0DBC                     	;# 
  3820  0DBD                     	;# 
  3821  0DBD                     	;# 
  3822  0DBE                     	;# 
  3823  0DBF                     	;# 
  3824  0DC0                     	;# 
  3825  0DC1                     	;# 
  3826  0DC1                     	;# 
  3827  0DC2                     	;# 
  3828  0DC3                     	;# 
  3829  0DC3                     	;# 
  3830  0DC4                     	;# 
  3831  0DC5                     	;# 
  3832  0DC5                     	;# 
  3833  0DC6                     	;# 
  3834  0DC7                     	;# 
  3835  0DC7                     	;# 
  3836  0DC8                     	;# 
  3837  0DC9                     	;# 
  3838  0DC9                     	;# 
  3839  0DCA                     	;# 
  3840  0DCB                     	;# 
  3841  0DCC                     	;# 
  3842  0DCC                     	;# 
  3843  0DCD                     	;# 
  3844  0DCD                     	;# 
  3845  0DCE                     	;# 
  3846  0DCF                     	;# 
  3847  0DD0                     	;# 
  3848  0E0F                     	;# 
  3849  0E10                     	;# 
  3850  0E11                     	;# 
  3851  0E12                     	;# 
  3852  0E13                     	;# 
  3853  0E14                     	;# 
  3854  0E15                     	;# 
  3855  0E16                     	;# 
  3856  0E17                     	;# 
  3857  0E90                     	;# 
  3858  0E91                     	;# 
  3859  0E92                     	;# 
  3860  0E94                     	;# 
  3861  0E95                     	;# 
  3862  0EA0                     	;# 
  3863  0EA1                     	;# 
  3864  0EA2                     	;# 
  3865  0EA3                     	;# 
  3866  0EA4                     	;# 
  3867  0EA5                     	;# 
  3868  0FE4                     	;# 
  3869  0FE5                     	;# 
  3870  0FE6                     	;# 
  3871  0FE7                     	;# 
  3872  0FE8                     	;# 
  3873  0FE8                     	;# 
  3874  0FE9                     	;# 
  3875  0FEA                     	;# 
  3876  0FEA                     	;# 
  3877  0FEB                     	;# 
  3878  0FED                     	;# 
  3879  0FEE                     	;# 
  3880  0FEE                     	;# 
  3881  0FEF                     	;# 
  3882  0FFF                     	;_sysData
  3883                           
  3884 ;; Function _TMR2_DefaultInterruptHandler is unused but had its address taken
  3885  0000                     
  3886                           	psect	idataBANK0
  3887  1988                     __pidataBANK0:	
  3888                           
  3889                           ;initializer for _resRs
  3890  1988  3410               	retlw	16
  3891  1989  3427               	retlw	39
  3892                           
  3893                           ;initializer for _resRc
  3894  198A  3410               	retlw	16
  3895  198B  3427               	retlw	39
  3896                           
  3897                           	psect	idataBANK1
  3898  19B4                     __pidataBANK1:	
  3899                           
  3900                           ;initializer for _bbmin
  3901  19B4  3440               	retlw	64
  3902  19B5  340D               	retlw	13
  3903  19B6  3403               	retlw	3
  3904  19B7  3400               	retlw	0
  3905                           
  3906                           ;initializer for _bbmax
  3907  19B8  34C0               	retlw	192
  3908  19B9  34F2               	retlw	242
  3909  19BA  34FC               	retlw	252
  3910  19BB  34FF               	retlw	255
  3911                           
  3912                           ;initializer for _pidU
  3913  19BC  3414               	retlw	20
  3914  19BD  3400               	retlw	0
  3915                           
  3916                           ;initializer for _pidpwm2_U
  3917  19BE  3414               	retlw	20
  3918  19BF  3400               	retlw	0
  3919                           
  3920                           ;initializer for _pwm1DutyForIdrv
  3921  19C0  3405               	retlw	5
  3922  19C1  3400               	retlw	0
  3923                           
  3924                           ;initializer for _pwm2DutyForVout
  3925  19C2  3405               	retlw	5
  3926  19C3  3400               	retlw	0
  3927                           
  3928                           	psect	stringtext1
  3929  181E                     __pstringtext1:	
  3930  181E                     _HexTable:	
  3931  181E  3430               	retlw	48
  3932  181F  3431               	retlw	49
  3933  1820  3432               	retlw	50
  3934  1821  3433               	retlw	51
  3935  1822  3434               	retlw	52
  3936  1823  3435               	retlw	53
  3937  1824  3436               	retlw	54
  3938  1825  3437               	retlw	55
  3939  1826  3438               	retlw	56
  3940  1827  3439               	retlw	57
  3941  1828  3441               	retlw	65
  3942  1829  3442               	retlw	66
  3943  182A  3443               	retlw	67
  3944  182B  3444               	retlw	68
  3945  182C  3445               	retlw	69
  3946  182D  3446               	retlw	70
  3947  182E  3400               	retlw	0
  3948  182F                     __end_of_HexTable:	
  3949  0013                     _PIR3bits	set	19
  3950  001C                     _T2CONbits	set	28
  3951  0011                     _PIR1bits	set	17
  3952  001A                     _TMR2	set	26
  3953  001B                     _PR2	set	27
  3954  001C                     _T2CON	set	28
  3955  000B                     _INTCONbits	set	11
  3956  005F                     _GIE	set	95
  3957  0095                     _OPTION_REGbits	set	149
  3958  008E                     _TRISC	set	142
  3959  008C                     _TRISA	set	140
  3960  009D                     _ADCON0bits	set	157
  3961  009C                     _ADRESH	set	156
  3962  009B                     _ADRESL	set	155
  3963  009F                     _ADCON2	set	159
  3964  009E                     _ADCON1	set	158
  3965  009D                     _ADCON0	set	157
  3966  0097                     _WDTCON	set	151
  3967  0093                     _PIE3bits	set	147
  3968  0091                     _PIE1bits	set	145
  3969  010E                     _LATC	set	270
  3970  010C                     _LATA	set	268
  3971  0117                     _FVRCONbits	set	279
  3972  0117                     _FVRCON	set	279
  3973  019E                     _TXSTAbits	set	414
  3974  018C                     _ANSELA	set	396
  3975  018E                     _ANSELC	set	398
  3976  019A                     _TXREG	set	410
  3977  019C                     _SPBRGH	set	412
  3978  019B                     _SPBRGL	set	411
  3979  019E                     _TXSTA	set	414
  3980  019D                     _RCSTA	set	413
  3981  019F                     _BAUDCON	set	415
  3982  0199                     _RCREG	set	409
  3983  019D                     _RCSTAbits	set	413
  3984  0196                     _PMCON2	set	406
  3985  0193                     _PMDATL	set	403
  3986  0194                     _PMDATH	set	404
  3987  0195                     _PMCON1bits	set	405
  3988  0192                     _PMADRH	set	402
  3989  0191                     _PMADRL	set	401
  3990  020E                     _WPUC	set	526
  3991  020C                     _WPUA	set	524
  3992  028E                     _ODCONC	set	654
  3993  028C                     _ODCONA	set	652
  3994  0D9D                     _PWM1INTFbits	set	3485
  3995  0D9F                     _PWM1LDCONbits	set	3487
  3996  0D9B                     _PWM1CONbits	set	3483
  3997  0D9B                     _PWM1CON	set	3483
  3998  0D99                     _PWM1TMRL	set	3481
  3999  0D9A                     _PWM1TMRH	set	3482
  4000  0D97                     _PWM1OFL	set	3479
  4001  0D98                     _PWM1OFH	set	3480
  4002  0D95                     _PWM1PRL	set	3477
  4003  0D96                     _PWM1PRH	set	3478
  4004  0D93                     _PWM1DCL	set	3475
  4005  0D94                     _PWM1DCH	set	3476
  4006  0D91                     _PWM1PHL	set	3473
  4007  0D92                     _PWM1PHH	set	3474
  4008  0DA0                     _PWM1OFCON	set	3488
  4009  0D9F                     _PWM1LDCON	set	3487
  4010  0D9E                     _PWM1CLKCON	set	3486
  4011  0D9D                     _PWM1INTF	set	3485
  4012  0D9C                     _PWM1INTE	set	3484
  4013  0DAD                     _PWM2INTFbits	set	3501
  4014  0DAF                     _PWM2LDCONbits	set	3503
  4015  0DAB                     _PWM2CONbits	set	3499
  4016  0DAB                     _PWM2CON	set	3499
  4017  0DA9                     _PWM2TMRL	set	3497
  4018  0DAA                     _PWM2TMRH	set	3498
  4019  0DA7                     _PWM2OFL	set	3495
  4020  0DA8                     _PWM2OFH	set	3496
  4021  0DA5                     _PWM2PRL	set	3493
  4022  0DA6                     _PWM2PRH	set	3494
  4023  0DA3                     _PWM2DCL	set	3491
  4024  0DA4                     _PWM2DCH	set	3492
  4025  0DA1                     _PWM2PHL	set	3489
  4026  0DA2                     _PWM2PHH	set	3490
  4027  0DB0                     _PWM2OFCON	set	3504
  4028  0DAF                     _PWM2LDCON	set	3503
  4029  0DAE                     _PWM2CLKCON	set	3502
  4030  0DAD                     _PWM2INTF	set	3501
  4031  0DAC                     _PWM2INTE	set	3500
  4032  0E15                     _RXPPSbits	set	3605
  4033  0E0F                     _PPSLOCKbits	set	3599
  4034  0E0F                     _PPSLOCK	set	3599
  4035  0EA5                     _RC5PPSbits	set	3749
  4036  0E95                     _RA5PPSbits	set	3733
  4037  0E94                     _RA4PPSbits	set	3732
  4038  182F                     STR_1:	
  4039  182F  3456               	retlw	86	;'V'
  4040  1830  3445               	retlw	69	;'E'
  4041  1831  3452               	retlw	82	;'R'
  4042  1832  3431               	retlw	49	;'1'
  4043  1833  342E               	retlw	46	;'.'
  4044  1834  3430               	retlw	48	;'0'
  4045  1835  3430               	retlw	48	;'0'
  4046  1836  340D               	retlw	13
  4047  1837  340A               	retlw	10
  4048  1838  3400               	retlw	0
  4049                           
  4050                           	psect	stringtext2
  4051  0000                     __pstringtext2:	
  4052                           
  4053                           	psect	cinit
  4054  0894                     start_initialization:	
  4055                           ; #config settings
  4056                           
  4057  0894                     __initialization:		;BIGRAM
  4058                           
  4059                           ; Initialize objects allocated to BANK0
  4060  0894  3088               	movlw	low __pidataBANK0
  4061  0895  0084               	movwf	4
  4062  0896  3099               	movlw	(high __pidataBANK0)| (0+128)
  4063  0897  0085               	movwf	5
  4064  0898  306C               	movlw	low __pdataBANK0
  4065  0899  0086               	movwf	6
  4066  089A  3000               	movlw	high __pdataBANK0
  4067  089B  0087               	movwf	7
  4068  089C  3000               	movlw	0
  4069  089D  00FF               	movwf	btemp+1
  4070  089E  3004               	movlw	4
  4071  089F  318F  27F4  3188   	fcall	init_ram
  4072                           
  4073                           ; Initialize objects allocated to BANK1
  4074  08A2  30B4               	movlw	low __pidataBANK1
  4075  08A3  0084               	movwf	4
  4076  08A4  3099               	movlw	(high __pidataBANK1)| (0+128)
  4077  08A5  0085               	movwf	5
  4078  08A6  30DA               	movlw	low __pdataBANK1
  4079  08A7  0086               	movwf	6
  4080  08A8  3000               	movlw	high __pdataBANK1
  4081  08A9  0087               	movwf	7
  4082  08AA  3000               	movlw	0
  4083  08AB  00FF               	movwf	btemp+1
  4084  08AC  3010               	movlw	16
  4085  08AD  318F  27F4  3188   	fcall	init_ram
  4086                           
  4087                           ; Clear objects allocated to BIGRAM
  4088  08B0  305C               	movlw	low (0+9052)
  4089  08B1  0084               	movwf	4
  4090  08B2  3023               	movlw	high (0+9052)
  4091  08B3  0085               	movwf	5
  4092  08B4  3084               	movlw	132
  4093  08B5  00FE               	movwf	btemp
  4094  08B6  3000               	movlw	0
  4095  08B7  00FF               	movwf	btemp+1
  4096  08B8  3199  219B  3188   	fcall	clear_ram0
  4097                           
  4098                           ; Clear objects allocated to COMMON
  4099  08BB  01F8               	clrf	__pbssCOMMON& (0+127)
  4100  08BC  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  4101  08BD  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  4102                           
  4103                           ; Clear objects allocated to BANK0
  4104  08BE  305C               	movlw	low __pbssBANK0
  4105  08BF  0084               	movwf	4
  4106  08C0  3000               	movlw	high __pbssBANK0
  4107  08C1  0085               	movwf	5
  4108  08C2  3010               	movlw	16
  4109  08C3  00FE               	movwf	btemp
  4110  08C4  3000               	movlw	0
  4111  08C5  00FF               	movwf	btemp+1
  4112  08C6  3199  219B  3188   	fcall	clear_ram0
  4113                           
  4114                           ; Clear objects allocated to BANK1
  4115  08C9  30A0               	movlw	low __pbssBANK1
  4116  08CA  0084               	movwf	4
  4117  08CB  3000               	movlw	high __pbssBANK1
  4118  08CC  0085               	movwf	5
  4119  08CD  303A               	movlw	58
  4120  08CE  00FE               	movwf	btemp
  4121  08CF  3000               	movlw	0
  4122  08D0  00FF               	movwf	btemp+1
  4123  08D1  3199  219B  3188   	fcall	clear_ram0
  4124                           
  4125                           ; Clear objects allocated to BANK2
  4126  08D4  3020               	movlw	low __pbssBANK2
  4127  08D5  0084               	movwf	4
  4128  08D6  3001               	movlw	high __pbssBANK2
  4129  08D7  0085               	movwf	5
  4130  08D8  304C               	movlw	76
  4131  08D9  00FE               	movwf	btemp
  4132  08DA  3000               	movlw	0
  4133  08DB  00FF               	movwf	btemp+1
  4134  08DC  3199  219B  3188   	fcall	clear_ram0
  4135                           
  4136                           ; Clear objects allocated to BANK3
  4137  08DF  30A0               	movlw	low __pbssBANK3
  4138  08E0  0084               	movwf	4
  4139  08E1  3001               	movlw	high __pbssBANK3
  4140  08E2  0085               	movwf	5
  4141  08E3  303C               	movlw	60
  4142  08E4  00FE               	movwf	btemp
  4143  08E5  3000               	movlw	0
  4144  08E6  00FF               	movwf	btemp+1
  4145  08E7  3199  219B         	fcall	clear_ram0
  4146  08E9                     end_of_initialization:	
  4147                           ;End of C runtime variable initialization code
  4148                           
  4149  08E9                     __end_of__initialization:	
  4150  08E9  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4151  08EA  0020               	movlb	0
  4152  08EB  318D  2D0A         	ljmp	_main	;jump to C main() function
  4153                           
  4154                           	psect	bssCOMMON
  4155  0078                     __pbssCOMMON:	
  4156  0078                     _subTickerX:	
  4157  0078                     	ds	1
  4158  0079                     _eusartRxCount:	
  4159  0079                     	ds	1
  4160  007A                     _eusartRxIdleTime_ms:	
  4161  007A                     	ds	1
  4162                           
  4163                           	psect	bssBANK0
  4164  005C                     __pbssBANK0:	
  4165  005C                     _bbtu:	
  4166  005C                     	ds	2
  4167  005E                     _rsLoAvg:	
  4168  005E                     	ds	2
  4169  0060                     _voExpectAdcValue:	
  4170  0060                     	ds	2
  4171  0062                     _PidKp:	
  4172  0062                     	ds	2
  4173  0064                     _rtAdcValueRcLo:	
  4174  0064                     	ds	2
  4175  0066                     _rtAdcValueRsLo:	
  4176  0066                     	ds	2
  4177  0068                     _pidTestNum:	
  4178  0068                     	ds	1
  4179  0069                     _pidBbSm:	
  4180  0069                     	ds	1
  4181  006A                     _subTickerX_1s:	
  4182  006A                     	ds	1
  4183  006B                     _Event:	
  4184  006B                     	ds	1
  4185                           
  4186                           	psect	dataBANK0
  4187  006C                     __pdataBANK0:	
  4188  006C                     _resRs:	
  4189  006C                     	ds	2
  4190  006E                     _resRc:	
  4191  006E                     	ds	2
  4192                           
  4193                           	psect	bssBANK1
  4194  00A0                     __pbssBANK1:	
  4195  00A0                     _err:	
  4196  00A0                     	ds	12
  4197  00AC                     _rsLoAvgBuf:	
  4198  00AC                     	ds	12
  4199  00B8                     _bbku:	
  4200  00B8                     	ds	4
  4201  00BC                     _bbu:	
  4202  00BC                     	ds	4
  4203  00C0                     _bbta:	
  4204  00C0                     	ds	4
  4205  00C4                     _pwm2Ei:	
  4206  00C4                     	ds	2
  4207  00C6                     _bbt1:	
  4208  00C6                     	ds	2
  4209  00C8                     _bbt0:	
  4210  00C8                     	ds	2
  4211  00CA                     _voExpectMv:	
  4212  00CA                     	ds	2
  4213  00CC                     _PidTd:	
  4214  00CC                     	ds	2
  4215  00CE                     _PidTi:	
  4216  00CE                     	ds	2
  4217  00D0                     _rtAdcValueVoFb:	
  4218  00D0                     	ds	2
  4219  00D2                     _rtAdcValueRcHi:	
  4220  00D2                     	ds	2
  4221  00D4                     _rtAdcValueRsHi:	
  4222  00D4                     	ds	2
  4223  00D6                     _globalTicker:	
  4224  00D6                     	ds	2
  4225  00D8                     _TMR2_InterruptHandler:	
  4226  00D8                     	ds	2
  4227                           
  4228                           	psect	dataBANK1
  4229  00DA                     __pdataBANK1:	
  4230  00DA                     _bbmin:	
  4231  00DA                     	ds	4
  4232  00DE                     _bbmax:	
  4233  00DE                     	ds	4
  4234  00E2                     _pidU:	
  4235  00E2                     	ds	2
  4236  00E4                     _pidpwm2_U:	
  4237  00E4                     	ds	2
  4238  00E6                     _pwm1DutyForIdrv:	
  4239  00E6                     	ds	2
  4240  00E8                     _pwm2DutyForVout:	
  4241  00E8                     	ds	2
  4242                           
  4243                           	psect	bssBANK2
  4244  0120                     __pbssBANK2:	
  4245  0120                     _eusartRxBuffer:	
  4246  0120                     	ds	60
  4247  015C                     _str:	
  4248  015C                     	ds	16
  4249                           
  4250                           	psect	bssBANK3
  4251  01A0                     __pbssBANK3:	
  4252  01A0                     _modbusBuf:	
  4253  01A0                     	ds	60
  4254                           
  4255                           	psect	inittext
  4256  0FF4                     init_ram:	
  4257  0FF4  00FE               	movwf	126
  4258  0FF5                     initloop:	
  4259  0FF5  0012               	moviw fsr0++
  4260  0FF6  001E               	movwi fsr1++
  4261  0FF7  3001               	movlw	1
  4262  0FF8  02FE               	subwf	126,f
  4263  0FF9  3000               	movlw	0
  4264  0FFA  3BFF               	subwfb	127,f
  4265  0FFB  087F               	movf	127,w
  4266  0FFC  047E               	iorwf	126,w
  4267  0FFD  1903               	btfsc	3,2
  4268  0FFE  3400               	retlw	0
  4269  0FFF  2FF5               	goto	initloop
  4270                           
  4271                           	psect	clrtext
  4272  199B                     clear_ram0:	
  4273                           ;	Called with FSR0 containing the base address, and
  4274                           ;	btemp/btemp+1 has the size to clear
  4275                           
  4276  199B  0064               	clrwdt	;clear the watchdog before getting into this loop
  4277  199C                     clrloop0:	
  4278  199C  0180               	clrf	0	;clear RAM location pointed to by FSR
  4279  199D  3101               	addfsr 0,1
  4280  199E  3001               	movlw	1
  4281  199F  02FE               	subwf	126,f
  4282  19A0  3000               	movlw	0
  4283  19A1  3BFF               	subwfb	127,f
  4284  19A2  087F               	movf	127,w
  4285  19A3  047E               	iorwf	126,w
  4286  19A4  1903               	btfsc	3,2
  4287  19A5  3400               	retlw	0	;all done for this memory range, return
  4288  19A6  299C               	goto	clrloop0	;have we reached the end yet?
  4289                           
  4290                           	psect	cstackBANK1
  4291  00EA                     __pcstackBANK1:	
  4292  00EA                     ??_main:	
  4293                           
  4294                           ; 1 bytes @ 0x0
  4295  00EA                     	ds	2
  4296                           
  4297                           	psect	cstackCOMMON
  4298  0070                     __pcstackCOMMON:	
  4299  0070                     ?_TMR2_StartTimer:	
  4300  0070                     ?_PIN_MANAGER_Initialize:	
  4301                           ; 1 bytes @ 0x0
  4302                           
  4303  0070                     ?_OSCILLATOR_Initialize:	
  4304                           ; 1 bytes @ 0x0
  4305                           
  4306  0070                     ?_WDT_Initialize:	
  4307                           ; 1 bytes @ 0x0
  4308                           
  4309  0070                     ?_ADC1_Initialize:	
  4310                           ; 1 bytes @ 0x0
  4311                           
  4312  0070                     ?_EUSART_Initialize:	
  4313                           ; 1 bytes @ 0x0
  4314                           
  4315  0070                     ?_PWM2_Initialize:	
  4316                           ; 1 bytes @ 0x0
  4317                           
  4318  0070                     ?_PWM1_Initialize:	
  4319                           ; 1 bytes @ 0x0
  4320                           
  4321  0070                     ?_TMR2_Initialize:	
  4322                           ; 1 bytes @ 0x0
  4323                           
  4324  0070                     ?_INTERRUPT_InterruptManager:	
  4325                           ; 1 bytes @ 0x0
  4326                           
  4327  0070                     ??_INTERRUPT_InterruptManager:	
  4328                           ; 1 bytes @ 0x0
  4329                           
  4330  0070                     ?_FVR_Initialize:	
  4331                           ; 1 bytes @ 0x0
  4332                           
  4333  0070                     ?_SYSTEM_Initialize:	
  4334                           ; 1 bytes @ 0x0
  4335                           
  4336  0070                     ?_uart_send_str:	
  4337                           ; 1 bytes @ 0x0
  4338                           
  4339  0070                     ?_uart_received_start:	
  4340                           ; 1 bytes @ 0x0
  4341                           
  4342  0070                     ?_fvr_set_gain:	
  4343                           ; 1 bytes @ 0x0
  4344                           
  4345  0070                     ?_adc_init:	
  4346                           ; 1 bytes @ 0x0
  4347                           
  4348  0070                     ?_pid_pwm1_idrv_b_b:	
  4349                           ; 1 bytes @ 0x0
  4350                           
  4351  0070                     ?_pid_pwm1_idrv_run:	
  4352                           ; 1 bytes @ 0x0
  4353                           
  4354  0070                     ?_pid_pwm2_vout_run:	
  4355                           ; 1 bytes @ 0x0
  4356                           
  4357  0070                     ?_my_flash_read_system_erase:	
  4358                           ; 1 bytes @ 0x0
  4359                           
  4360  0070                     ?_sys_data_save:	
  4361                           ; 1 bytes @ 0x0
  4362                           
  4363  0070                     ?_modbus_response_write_single_register:	
  4364                           ; 1 bytes @ 0x0
  4365                           
  4366  0070                     ?_modbus_response_write_mult_register:	
  4367                           ; 1 bytes @ 0x0
  4368                           
  4369  0070                     ?_modbus_response_command:	
  4370                           ; 1 bytes @ 0x0
  4371                           
  4372  0070                     ?_main:	
  4373                           ; 1 bytes @ 0x0
  4374                           
  4375  0070                     ?_sys_data_init:	
  4376                           ; 1 bytes @ 0x0
  4377                           
  4378                           
  4379                           ; 2 bytes @ 0x0
  4380  0070                     	ds	2
  4381  0072                     INTERRUPT_InterruptManager@t8:	
  4382                           
  4383                           ; 1 bytes @ 0x2
  4384  0072                     	ds	1
  4385  0073                     ?_FLASH_EraseBlock:	
  4386  0073                     ?_TMR2_SetInterruptHandler:	
  4387                           ; 1 bytes @ 0x3
  4388                           
  4389  0073                     ??_TMR2_StartTimer:	
  4390                           ; 1 bytes @ 0x3
  4391                           
  4392  0073                     ??_PIN_MANAGER_Initialize:	
  4393                           ; 1 bytes @ 0x3
  4394                           
  4395  0073                     ??_OSCILLATOR_Initialize:	
  4396                           ; 1 bytes @ 0x3
  4397                           
  4398  0073                     ??_WDT_Initialize:	
  4399                           ; 1 bytes @ 0x3
  4400                           
  4401  0073                     ??_ADC1_Initialize:	
  4402                           ; 1 bytes @ 0x3
  4403                           
  4404  0073                     ??_EUSART_Initialize:	
  4405                           ; 1 bytes @ 0x3
  4406                           
  4407  0073                     ?_m_mem_cpy:	
  4408                           ; 1 bytes @ 0x3
  4409                           
  4410  0073                     ??_m_mem_cpy_len:	
  4411                           ; 1 bytes @ 0x3
  4412                           
  4413  0073                     ??_PWM2_Initialize:	
  4414                           ; 1 bytes @ 0x3
  4415                           
  4416  0073                     ??_PWM1_Initialize:	
  4417                           ; 1 bytes @ 0x3
  4418                           
  4419  0073                     ??_FVR_Initialize:	
  4420                           ; 1 bytes @ 0x3
  4421                           
  4422  0073                     ??_uart_send_str:	
  4423                           ; 1 bytes @ 0x3
  4424                           
  4425  0073                     ?_uart_send_len:	
  4426                           ; 1 bytes @ 0x3
  4427                           
  4428  0073                     ??_uart_received_start:	
  4429                           ; 1 bytes @ 0x3
  4430                           
  4431  0073                     ??_fvr_set_gain:	
  4432                           ; 1 bytes @ 0x3
  4433                           
  4434  0073                     ??_adc_init:	
  4435                           ; 1 bytes @ 0x3
  4436                           
  4437  0073                     ?_my_flash_system_read:	
  4438                           ; 1 bytes @ 0x3
  4439                           
  4440  0073                     ??___lmul:	
  4441                           ; 1 bytes @ 0x3
  4442                           
  4443  0073                     ??___lldiv:	
  4444                           ; 1 bytes @ 0x3
  4445                           
  4446  0073                     ?_get_idrv_pwm1_duty:	
  4447                           ; 1 bytes @ 0x3
  4448                           
  4449  0073                     ?_get_vout_pwm2_duty:	
  4450                           ; 2 bytes @ 0x3
  4451                           
  4452  0073                     ?_my_flash_system_write:	
  4453                           ; 2 bytes @ 0x3
  4454                           
  4455  0073                     ?_getRegisterVal:	
  4456                           ; 2 bytes @ 0x3
  4457                           
  4458  0073                     ?_crc_sum:	
  4459                           ; 2 bytes @ 0x3
  4460                           
  4461  0073                     ?___wmul:	
  4462                           ; 2 bytes @ 0x3
  4463                           
  4464  0073                     ?___awdiv:	
  4465                           ; 2 bytes @ 0x3
  4466                           
  4467  0073                     PIN_MANAGER_Initialize@state:	
  4468                           ; 2 bytes @ 0x3
  4469                           
  4470  0073                     uart_send_len@len:	
  4471                           ; 1 bytes @ 0x3
  4472                           
  4473  0073                     FLASH_EraseBlock@startAddr:	
  4474                           ; 1 bytes @ 0x3
  4475                           
  4476  0073                     TMR2_SetInterruptHandler@InterruptHandler:	
  4477                           ; 2 bytes @ 0x3
  4478                           
  4479  0073                     my_flash_system_read@buf:	
  4480                           ; 2 bytes @ 0x3
  4481                           
  4482  0073                     my_flash_system_write@buf:	
  4483                           ; 2 bytes @ 0x3
  4484                           
  4485  0073                     getRegisterVal@addr:	
  4486                           ; 2 bytes @ 0x3
  4487                           
  4488  0073                     m_mem_cpy@s:	
  4489                           ; 2 bytes @ 0x3
  4490                           
  4491  0073                     crc_sum@buf:	
  4492                           ; 2 bytes @ 0x3
  4493                           
  4494  0073                     ___wmul@multiplier:	
  4495                           ; 2 bytes @ 0x3
  4496                           
  4497  0073                     ___awdiv@divisor:	
  4498                           ; 2 bytes @ 0x3
  4499                           
  4500  0073                     ___lmul@product:	
  4501                           ; 2 bytes @ 0x3
  4502                           
  4503                           
  4504                           ; 4 bytes @ 0x3
  4505  0073                     	ds	1
  4506  0074                     ??_uart_send_len:	
  4507  0074                     ??_calc_rs_lo_avg:	
  4508                           ; 1 bytes @ 0x4
  4509                           
  4510  0074                     uart_send_str@str:	
  4511                           ; 1 bytes @ 0x4
  4512                           
  4513  0074                     fvr_set_gain@t8:	
  4514                           ; 1 bytes @ 0x4
  4515                           
  4516  0074                     adc_init@ch:	
  4517                           ; 1 bytes @ 0x4
  4518                           
  4519                           
  4520                           ; 1 bytes @ 0x4
  4521  0074                     	ds	1
  4522  0075                     ??_FLASH_EraseBlock:	
  4523  0075                     ??_TMR2_SetInterruptHandler:	
  4524                           ; 1 bytes @ 0x5
  4525                           
  4526  0075                     ??_m_mem_cpy:	
  4527                           ; 1 bytes @ 0x5
  4528                           
  4529  0075                     ??_TMR2_Initialize:	
  4530                           ; 1 bytes @ 0x5
  4531                           
  4532  0075                     ??_SYSTEM_Initialize:	
  4533                           ; 1 bytes @ 0x5
  4534                           
  4535  0075                     ??_get_idrv_pwm1_duty:	
  4536                           ; 1 bytes @ 0x5
  4537                           
  4538  0075                     ??_get_vout_pwm2_duty:	
  4539                           ; 1 bytes @ 0x5
  4540                           
  4541  0075                     FLASH_EraseBlock@GIEBitValue:	
  4542                           ; 1 bytes @ 0x5
  4543                           
  4544  0075                     uart_send_len@i:	
  4545                           ; 1 bytes @ 0x5
  4546                           
  4547  0075                     fvr_set_gain@g:	
  4548                           ; 1 bytes @ 0x5
  4549                           
  4550  0075                     getRegisterVal@tempData:	
  4551                           ; 1 bytes @ 0x5
  4552                           
  4553  0075                     my_flash_system_read@len:	
  4554                           ; 1 bytes @ 0x5
  4555                           
  4556  0075                     my_flash_system_write@len:	
  4557                           ; 2 bytes @ 0x5
  4558                           
  4559  0075                     crc_sum@len:	
  4560                           ; 2 bytes @ 0x5
  4561                           
  4562  0075                     ___wmul@multiplicand:	
  4563                           ; 2 bytes @ 0x5
  4564                           
  4565  0075                     ___awdiv@dividend:	
  4566                           ; 2 bytes @ 0x5
  4567                           
  4568                           
  4569                           ; 2 bytes @ 0x5
  4570  0075                     	ds	1
  4571  0076                     ??_my_flash_read_system_erase:	
  4572  0076                     ?_adc_sample:	
  4573                           ; 1 bytes @ 0x6
  4574                           
  4575  0076                     uart_send_len@buf:	
  4576                           ; 2 bytes @ 0x6
  4577                           
  4578  0076                     adc_sample@gfvr:	
  4579                           ; 1 bytes @ 0x6
  4580                           
  4581  0076                     m_mem_cpy@d:	
  4582                           ; 1 bytes @ 0x6
  4583                           
  4584                           
  4585                           ; 1 bytes @ 0x6
  4586  0076                     	ds	1
  4587  0077                     ??_set_idrv_pwm1_duty:	
  4588  0077                     ??_set_vout_pwm2_duty:	
  4589                           ; 1 bytes @ 0x7
  4590                           
  4591  0077                     ??_sys_data_save:	
  4592                           ; 1 bytes @ 0x7
  4593                           
  4594  0077                     ??_modbus_response_illgeal_function:	
  4595                           ; 1 bytes @ 0x7
  4596                           
  4597  0077                     ??_modbus_response_write_mult_register:	
  4598                           ; 1 bytes @ 0x7
  4599                           
  4600  0077                     ??___wmul:	
  4601                           ; 1 bytes @ 0x7
  4602                           
  4603  0077                     ??___aldiv:	
  4604                           ; 1 bytes @ 0x7
  4605                           
  4606  0077                     ??___awdiv:	
  4607                           ; 1 bytes @ 0x7
  4608                           
  4609  0077                     ??___lwdiv:	
  4610                           ; 1 bytes @ 0x7
  4611                           
  4612  0077                     adc_sample@num:	
  4613                           ; 1 bytes @ 0x7
  4614                           
  4615                           
  4616                           ; 1 bytes @ 0x7
  4617  0077                     	ds	1
  4618                           
  4619                           	psect	cstackBANK0
  4620  0020                     __pcstackBANK0:	
  4621  0020                     ?_m_mem_cpy_len:	
  4622  0020                     ??_adc_sample:	
  4623                           ; 1 bytes @ 0x0
  4624                           
  4625  0020                     ??_my_flash_system_read:	
  4626                           ; 1 bytes @ 0x0
  4627                           
  4628  0020                     ??_my_flash_system_write:	
  4629                           ; 1 bytes @ 0x0
  4630                           
  4631  0020                     ??_getRegisterVal:	
  4632                           ; 1 bytes @ 0x0
  4633                           
  4634  0020                     ??_crc_sum:	
  4635                           ; 1 bytes @ 0x0
  4636                           
  4637  0020                     ?___lmul:	
  4638                           ; 1 bytes @ 0x0
  4639                           
  4640  0020                     ?___lldiv:	
  4641                           ; 4 bytes @ 0x0
  4642                           
  4643  0020                     ___awdiv@counter:	
  4644                           ; 4 bytes @ 0x0
  4645                           
  4646  0020                     get_idrv_pwm1_duty@t16:	
  4647                           ; 1 bytes @ 0x0
  4648                           
  4649  0020                     get_vout_pwm2_duty@t16:	
  4650                           ; 2 bytes @ 0x0
  4651                           
  4652  0020                     m_mem_cpy_len@d:	
  4653                           ; 2 bytes @ 0x0
  4654                           
  4655  0020                     ___wmul@product:	
  4656                           ; 2 bytes @ 0x0
  4657                           
  4658  0020                     ___lmul@multiplier:	
  4659                           ; 2 bytes @ 0x0
  4660                           
  4661  0020                     ___lldiv@divisor:	
  4662                           ; 4 bytes @ 0x0
  4663                           
  4664                           
  4665                           ; 4 bytes @ 0x0
  4666  0020                     	ds	1
  4667  0021                     ___awdiv@sign:	
  4668                           
  4669                           ; 1 bytes @ 0x1
  4670  0021                     	ds	1
  4671  0022                     ?_set_idrv_pwm1_duty:	
  4672  0022                     ?_set_vout_pwm2_duty:	
  4673                           ; 1 bytes @ 0x2
  4674                           
  4675  0022                     ?___lwdiv:	
  4676                           ; 1 bytes @ 0x2
  4677                           
  4678  0022                     my_flash_system_read@GIEBitValue:	
  4679                           ; 2 bytes @ 0x2
  4680                           
  4681  0022                     my_flash_system_write@GIEBitValue:	
  4682                           ; 1 bytes @ 0x2
  4683                           
  4684  0022                     set_idrv_pwm1_duty@duty:	
  4685                           ; 1 bytes @ 0x2
  4686                           
  4687  0022                     set_vout_pwm2_duty@duty:	
  4688                           ; 2 bytes @ 0x2
  4689                           
  4690  0022                     m_mem_cpy_len@s:	
  4691                           ; 2 bytes @ 0x2
  4692                           
  4693  0022                     crc_sum@j:	
  4694                           ; 2 bytes @ 0x2
  4695                           
  4696  0022                     ___awdiv@quotient:	
  4697                           ; 2 bytes @ 0x2
  4698                           
  4699  0022                     ___lwdiv@divisor:	
  4700                           ; 2 bytes @ 0x2
  4701                           
  4702                           
  4703                           ; 2 bytes @ 0x2
  4704  0022                     	ds	1
  4705  0023                     adc_sample@ch:	
  4706  0023                     my_flash_system_read@flashAddr:	
  4707                           ; 1 bytes @ 0x3
  4708                           
  4709  0023                     my_flash_system_write@j:	
  4710                           ; 2 bytes @ 0x3
  4711                           
  4712                           
  4713                           ; 2 bytes @ 0x3
  4714  0023                     	ds	1
  4715  0024                     set_idrv_pwm1_duty@t16:	
  4716  0024                     set_vout_pwm2_duty@t16:	
  4717                           ; 2 bytes @ 0x4
  4718                           
  4719  0024                     adc_sample@i:	
  4720                           ; 2 bytes @ 0x4
  4721                           
  4722  0024                     getRegisterVal@t16:	
  4723                           ; 2 bytes @ 0x4
  4724                           
  4725  0024                     m_mem_cpy_len@len:	
  4726                           ; 2 bytes @ 0x4
  4727                           
  4728  0024                     crc_sum@i:	
  4729                           ; 2 bytes @ 0x4
  4730                           
  4731  0024                     ___lwdiv@dividend:	
  4732                           ; 2 bytes @ 0x4
  4733                           
  4734  0024                     ___lmul@multiplicand:	
  4735                           ; 2 bytes @ 0x4
  4736                           
  4737  0024                     ___lldiv@dividend:	
  4738                           ; 4 bytes @ 0x4
  4739                           
  4740                           
  4741                           ; 4 bytes @ 0x4
  4742  0024                     	ds	1
  4743  0025                     my_flash_system_read@i:	
  4744  0025                     my_flash_system_write@blocNum:	
  4745                           ; 2 bytes @ 0x5
  4746                           
  4747                           
  4748                           ; 2 bytes @ 0x5
  4749  0025                     	ds	1
  4750  0026                     getRegisterVal@tempAddr:	
  4751  0026                     adc_sample@ret:	
  4752                           ; 1 bytes @ 0x6
  4753                           
  4754  0026                     crc_sum@crc:	
  4755                           ; 2 bytes @ 0x6
  4756                           
  4757  0026                     ___lwdiv@quotient:	
  4758                           ; 2 bytes @ 0x6
  4759                           
  4760                           
  4761                           ; 2 bytes @ 0x6
  4762  0026                     	ds	1
  4763  0027                     my_flash_system_write@loc:	
  4764                           
  4765                           ; 2 bytes @ 0x7
  4766  0027                     	ds	1
  4767  0028                     ?_crc_append:	
  4768  0028                     ?_crc_verify:	
  4769                           ; 1 bytes @ 0x8
  4770                           
  4771  0028                     ?___aldiv:	
  4772                           ; 1 bytes @ 0x8
  4773                           
  4774  0028                     ___lwdiv@counter:	
  4775                           ; 4 bytes @ 0x8
  4776                           
  4777  0028                     adc_sample@t16:	
  4778                           ; 1 bytes @ 0x8
  4779                           
  4780  0028                     crc_verify@message:	
  4781                           ; 2 bytes @ 0x8
  4782                           
  4783  0028                     crc_append@message:	
  4784                           ; 2 bytes @ 0x8
  4785                           
  4786  0028                     ___aldiv@divisor:	
  4787                           ; 2 bytes @ 0x8
  4788                           
  4789  0028                     ___lldiv@quotient:	
  4790                           ; 4 bytes @ 0x8
  4791                           
  4792                           
  4793                           ; 4 bytes @ 0x8
  4794  0028                     	ds	1
  4795  0029                     ??_pid_pwm2_vout_run:	
  4796  0029                     my_flash_system_write@flashAddr:	
  4797                           ; 1 bytes @ 0x9
  4798                           
  4799                           
  4800                           ; 2 bytes @ 0x9
  4801  0029                     	ds	1
  4802  002A                     crc_verify@n:	
  4803  002A                     crc_append@n:	
  4804                           ; 2 bytes @ 0xA
  4805                           
  4806                           
  4807                           ; 2 bytes @ 0xA
  4808  002A                     	ds	1
  4809  002B                     pid_pwm2_vout_run@ei:	
  4810  002B                     my_flash_system_write@i:	
  4811                           ; 2 bytes @ 0xB
  4812                           
  4813                           
  4814                           ; 2 bytes @ 0xB
  4815  002B                     	ds	1
  4816  002C                     ??_crc_append:	
  4817  002C                     ??_crc_verify:	
  4818                           ; 1 bytes @ 0xC
  4819                           
  4820  002C                     ___lldiv@counter:	
  4821                           ; 1 bytes @ 0xC
  4822                           
  4823  002C                     ___aldiv@dividend:	
  4824                           ; 1 bytes @ 0xC
  4825                           
  4826                           
  4827                           ; 4 bytes @ 0xC
  4828  002C                     	ds	1
  4829  002D                     ?_calc_rs_lo_avg:	
  4830  002D                     ?_calc_temp_rs:	
  4831                           ; 2 bytes @ 0xD
  4832                           
  4833  002D                     ?_calc_temp_rc:	
  4834                           ; 4 bytes @ 0xD
  4835                           
  4836  002D                     pid_pwm2_vout_run@t16:	
  4837                           ; 4 bytes @ 0xD
  4838                           
  4839  002D                     calc_rs_lo_avg@x:	
  4840                           ; 2 bytes @ 0xD
  4841                           
  4842                           
  4843                           ; 2 bytes @ 0xD
  4844  002D                     	ds	1
  4845  002E                     crc_verify@crccal:	
  4846                           
  4847                           ; 2 bytes @ 0xE
  4848  002E                     	ds	1
  4849  002F                     calc_rs_lo_avg@t32:	
  4850                           
  4851                           ; 4 bytes @ 0xF
  4852  002F                     	ds	1
  4853  0030                     ___aldiv@counter:	
  4854  0030                     crc_verify@expected:	
  4855                           ; 1 bytes @ 0x10
  4856                           
  4857                           
  4858                           ; 2 bytes @ 0x10
  4859  0030                     	ds	1
  4860  0031                     ??_calc_temp_rs:	
  4861  0031                     ??_calc_temp_rc:	
  4862                           ; 1 bytes @ 0x11
  4863                           
  4864  0031                     ___aldiv@sign:	
  4865                           ; 1 bytes @ 0x11
  4866                           
  4867  0031                     crc_append@crc:	
  4868                           ; 1 bytes @ 0x11
  4869                           
  4870                           
  4871                           ; 2 bytes @ 0x11
  4872  0031                     	ds	1
  4873  0032                     ___aldiv@quotient:	
  4874                           
  4875                           ; 4 bytes @ 0x12
  4876  0032                     	ds	1
  4877  0033                     ??_sys_data_init:	
  4878  0033                     ?_modbus_response_illgeal_function:	
  4879                           ; 1 bytes @ 0x13
  4880                           
  4881  0033                     ??_modbus_response_write_single_register:	
  4882                           ; 1 bytes @ 0x13
  4883                           
  4884  0033                     ??_modbus_response_command:	
  4885                           ; 1 bytes @ 0x13
  4886                           
  4887  0033                     calc_rs_lo_avg@i:	
  4888                           ; 1 bytes @ 0x13
  4889                           
  4890  0033                     modbus_response_illgeal_function@errcode:	
  4891                           ; 1 bytes @ 0x13
  4892                           
  4893  0033                     modbus_response_write_mult_register@startAddr:	
  4894                           ; 1 bytes @ 0x13
  4895                           
  4896                           
  4897                           ; 1 bytes @ 0x13
  4898  0033                     	ds	1
  4899  0034                     modbus_response_illgeal_function@buf:	
  4900  0034                     modbus_response_write_mult_register@len:	
  4901                           ; 1 bytes @ 0x14
  4902                           
  4903                           
  4904                           ; 1 bytes @ 0x14
  4905  0034                     	ds	1
  4906  0035                     modbus_response_illgeal_function@pmdbs:	
  4907  0035                     modbus_response_write_mult_register@rbuf:	
  4908                           ; 1 bytes @ 0x15
  4909                           
  4910  0035                     modbus_response_command@tmpAddr:	
  4911                           ; 1 bytes @ 0x15
  4912                           
  4913  0035                     calc_temp_rs@x:	
  4914                           ; 2 bytes @ 0x15
  4915                           
  4916                           
  4917                           ; 4 bytes @ 0x15
  4918  0035                     	ds	1
  4919  0036                     ??_pid_pwm1_idrv_b_b:	
  4920  0036                     ??_pid_pwm1_idrv_run:	
  4921                           ; 1 bytes @ 0x16
  4922                           
  4923  0036                     ?_calc_expect_vout_adc_value:	
  4924                           ; 1 bytes @ 0x16
  4925                           
  4926  0036                     modbus_response_write_mult_register@stb:	
  4927                           ; 2 bytes @ 0x16
  4928                           
  4929  0036                     calc_expect_vout_adc_value@x:	
  4930                           ; 1 bytes @ 0x16
  4931                           
  4932                           
  4933                           ; 2 bytes @ 0x16
  4934  0036                     	ds	1
  4935  0037                     modbus_response_write_single_register@fiSave:	
  4936  0037                     modbus_response_command@startAddr:	
  4937                           ; 1 bytes @ 0x17
  4938                           
  4939                           
  4940                           ; 2 bytes @ 0x17
  4941  0037                     	ds	1
  4942  0038                     ??_calc_expect_vout_adc_value:	
  4943  0038                     modbus_response_write_single_register@t16:	
  4944                           ; 1 bytes @ 0x18
  4945                           
  4946                           
  4947                           ; 2 bytes @ 0x18
  4948  0038                     	ds	1
  4949  0039                     sys_data_init@ret:	
  4950  0039                     modbus_response_command@i:	
  4951                           ; 2 bytes @ 0x19
  4952                           
  4953  0039                     calc_temp_rs@y:	
  4954                           ; 2 bytes @ 0x19
  4955                           
  4956  0039                     calc_temp_rc@x:	
  4957                           ; 4 bytes @ 0x19
  4958                           
  4959                           
  4960                           ; 4 bytes @ 0x19
  4961  0039                     	ds	1
  4962  003A                     modbus_response_write_single_register@i:	
  4963                           
  4964                           ; 2 bytes @ 0x1A
  4965  003A                     	ds	1
  4966  003B                     modbus_response_command@pmdbs:	
  4967  003B                     sys_data_init@i:	
  4968                           ; 1 bytes @ 0x1B
  4969                           
  4970                           
  4971                           ; 2 bytes @ 0x1B
  4972  003B                     	ds	1
  4973  003C                     modbus_response_write_single_register@pmdbs:	
  4974  003C                     modbus_response_command@len:	
  4975                           ; 1 bytes @ 0x1C
  4976                           
  4977                           
  4978                           ; 1 bytes @ 0x1C
  4979  003C                     	ds	1
  4980  003D                     modbus_response_write_single_register@rbuf:	
  4981  003D                     modbus_response_command@rbuf:	
  4982                           ; 1 bytes @ 0x1D
  4983                           
  4984  003D                     calc_temp_rc@y:	
  4985                           ; 1 bytes @ 0x1D
  4986                           
  4987                           
  4988                           ; 4 bytes @ 0x1D
  4989  003D                     	ds	1
  4990  003E                     modbus_response_write_single_register@startAddr:	
  4991  003E                     modbus_response_command@tempData:	
  4992                           ; 2 bytes @ 0x1E
  4993                           
  4994  003E                     pid_pwm1_idrv_b_b@t32:	
  4995                           ; 2 bytes @ 0x1E
  4996                           
  4997  003E                     pid_pwm1_idrv_run@ep:	
  4998                           ; 4 bytes @ 0x1E
  4999                           
  5000                           
  5001                           ; 4 bytes @ 0x1E
  5002  003E                     	ds	2
  5003  0040                     ?_modbus_response_process:	
  5004  0040                     modbus_response_process@rlen:	
  5005                           ; 1 bytes @ 0x20
  5006                           
  5007                           
  5008                           ; 2 bytes @ 0x20
  5009  0040                     	ds	2
  5010  0042                     ??_modbus_response_process:	
  5011  0042                     pid_pwm1_idrv_run@ei:	
  5012                           ; 1 bytes @ 0x22
  5013                           
  5014                           
  5015                           ; 4 bytes @ 0x22
  5016  0042                     	ds	1
  5017  0043                     modbus_response_process@resp:	
  5018                           
  5019                           ; 1 bytes @ 0x23
  5020  0043                     	ds	1
  5021  0044                     modbus_response_process@pmdbs:	
  5022                           
  5023                           ; 1 bytes @ 0x24
  5024  0044                     	ds	1
  5025  0045                     modbus_response_process@rbuf:	
  5026                           
  5027                           ; 1 bytes @ 0x25
  5028  0045                     	ds	1
  5029  0046                     pid_pwm1_idrv_run@t32:	
  5030  0046                     calc_expect_vout_adc_value@y1:	
  5031                           ; 4 bytes @ 0x26
  5032                           
  5033                           
  5034                           ; 4 bytes @ 0x26
  5035  0046                     	ds	4
  5036  004A                     calc_expect_vout_adc_value@x1:	
  5037                           
  5038                           ; 4 bytes @ 0x2A
  5039  004A                     	ds	4
  5040  004E                     calc_expect_vout_adc_value@y0:	
  5041                           
  5042                           ; 4 bytes @ 0x2E
  5043  004E                     	ds	4
  5044  0052                     calc_expect_vout_adc_value@x0:	
  5045                           
  5046                           ; 4 bytes @ 0x32
  5047  0052                     	ds	4
  5048  0056                     calc_expect_vout_adc_value@t32:	
  5049                           
  5050                           ; 4 bytes @ 0x36
  5051  0056                     	ds	4
  5052  005A                     calc_expect_vout_adc_value@i:	
  5053                           
  5054                           ; 2 bytes @ 0x3A
  5055  005A                     	ds	2
  5056                           
  5057                           	psect	maintext
  5058  0D0A                     __pmaintext:	
  5059 ;;
  5060 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5061 ;;
  5062 ;; *************** function _main *****************
  5063 ;; Defined at:
  5064 ;;		line 17 in file "src/app/main.c"
  5065 ;; Parameters:    Size  Location     Type
  5066 ;;		None
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;		None
  5069 ;; Return value:  Size  Location     Type
  5070 ;;                  1    wreg      void 
  5071 ;; Registers used:
  5072 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5073 ;; Tracked objects:
  5074 ;;		On entry : B1F/0
  5075 ;;		On exit  : 0/0
  5076 ;;		Unchanged: 0/0
  5077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5080 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5081 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5082 ;;Total ram usage:        2 bytes
  5083 ;; Hardware stack levels required when called:    6
  5084 ;; This function calls:
  5085 ;;		_SYSTEM_Initialize
  5086 ;;		_adc_sample
  5087 ;;		_calc_expect_vout_adc_value
  5088 ;;		_calc_rs_lo_avg
  5089 ;;		_calc_temp_rc
  5090 ;;		_calc_temp_rs
  5091 ;;		_m_mem_cpy
  5092 ;;		_m_mem_cpy_len
  5093 ;;		_modbus_response_process
  5094 ;;		_pid_pwm1_idrv_b_b
  5095 ;;		_pid_pwm1_idrv_run
  5096 ;;		_pid_pwm2_vout_run
  5097 ;;		_sys_data_init
  5098 ;;		_sys_data_save
  5099 ;;		_uart_received_start
  5100 ;;		_uart_send_len
  5101 ;;		_uart_send_str
  5102 ;; This function is called by:
  5103 ;;		Startup code after reset
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           
  5108                           ;psect for function _main
  5109  0D0A                     _main:	
  5110                           
  5111                           ;main.c: 19: __nop();
  5112                           
  5113                           ;incstack = 0
  5114                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5115  0D0A  0000               	nop
  5116                           
  5117                           ;main.c: 20: isRunInBoot=0xaa;
  5118  0D0B  30AA               	movlw	170
  5119  0D0C  0021               	movlb	1	; select bank1
  5120  0D0D  00EA               	movwf	??_main^(0+128)
  5121  0D0E  086A               	movf	??_main^(0+128),w
  5122  0D0F  003F               	movlb	31	; select bank31
  5123  0D10  00FF               	movwf	127	;volatile
  5124                           
  5125                           ;main.c: 21: isRunInBoot=isRunInBoot;
  5126  0D11  087F               	movf	127,w	;volatile
  5127  0D12  0021               	movlb	1	; select bank1
  5128  0D13  00EA               	movwf	??_main^(0+128)
  5129  0D14  086A               	movf	??_main^(0+128),w
  5130  0D15  003F               	movlb	31	; select bank31
  5131  0D16  00FF               	movwf	127	;volatile
  5132                           
  5133                           ;main.c: 22: SYSTEM_Initialize();
  5134  0D17  319A  2247  318D   	fcall	_SYSTEM_Initialize
  5135                           
  5136                           ;main.c: 23: do{ (INTCONbits.GIE = 1); (INTCONbits.PEIE = 1); }while(0);;
  5137  0D1A  178B               	bsf	11,7	;volatile
  5138  0D1B  170B               	bsf	11,6	;volatile
  5139                           
  5140                           ;main.c: 26: TXSTAbits.TXEN=0;
  5141  0D1C  0023               	movlb	3	; select bank3
  5142  0D1D  129E               	bcf	30,5	;volatile
  5143                           
  5144                           ;main.c: 27: sys_data_init();
  5145  0D1E  3192  2238  318D   	fcall	_sys_data_init
  5146                           
  5147                           ;main.c: 28: m_mem_cpy(str,(uint8_t*)"VER1.00\r\n");
  5148  0D21  302F               	movlw	low (STR_1| (0+32768))
  5149  0D22  00F3               	movwf	m_mem_cpy@s
  5150  0D23  3098               	movlw	high (STR_1| (0+32768))
  5151  0D24  00F4               	movwf	m_mem_cpy@s+1
  5152  0D25  305C               	movlw	(low (_str| (0+256)))& (0+255)
  5153  0D26  319A  22F3  318D   	fcall	_m_mem_cpy
  5154                           
  5155                           ;main.c: 29: uart_send_str(str);
  5156  0D29  305C               	movlw	(low (_str| (0+256)))& (0+255)
  5157  0D2A  319B  2381  318D   	fcall	_uart_send_str
  5158                           
  5159                           ;main.c: 31: if(sysData.pidSetFlg0 != 0x55 || sysData.pidSetFlg1 != 0xaa){
  5160  0D2D  305C               	movlw	92
  5161  0D2E  0086               	movwf	6
  5162  0D2F  3023               	movlw	35
  5163  0D30  0087               	movwf	7
  5164  0D31  3055               	movlw	85
  5165  0D32  0601               	xorwf	1,w
  5166  0D33  1D03               	btfss	3,2
  5167  0D34  2D3E               	goto	l5747
  5168  0D35  305C               	movlw	92
  5169  0D36  0086               	movwf	6
  5170  0D37  3023               	movlw	35
  5171  0D38  0087               	movwf	7
  5172  0D39  3141               	addfsr 1,1
  5173  0D3A  30AA               	movlw	170
  5174  0D3B  0601               	xorwf	1,w
  5175  0D3C  1903               	btfsc	3,2
  5176  0D3D  2D41               	goto	l5749
  5177  0D3E                     l5747:	
  5178                           
  5179                           ;main.c: 32: pidBbSm=0;
  5180  0D3E  0020               	movlb	0	; select bank0
  5181  0D3F  01E9               	clrf	_pidBbSm
  5182                           
  5183                           ;main.c: 33: }else{
  5184  0D40  2D63               	goto	l5757
  5185  0D41                     l5749:	
  5186                           
  5187                           ;main.c: 34: pidBbSm=5;
  5188  0D41  3005               	movlw	5
  5189  0D42  0021               	movlb	1	; select bank1
  5190  0D43  00EA               	movwf	??_main^(0+128)
  5191  0D44  086A               	movf	??_main^(0+128),w
  5192  0D45  0020               	movlb	0	; select bank0
  5193  0D46  00E9               	movwf	_pidBbSm
  5194                           
  5195                           ;main.c: 35: PidKp=sysData.pidKp;
  5196  0D47  305C               	movlw	92
  5197  0D48  0086               	movwf	6
  5198  0D49  3023               	movlw	35
  5199  0D4A  0087               	movwf	7
  5200  0D4B  3144               	addfsr 1,4
  5201  0D4C  3F40               	moviw [0]fsr1
  5202  0D4D  00E2               	movwf	_PidKp
  5203  0D4E  3F41               	moviw [1]fsr1
  5204  0D4F  00E3               	movwf	_PidKp+1
  5205                           
  5206                           ;main.c: 36: PidTd=sysData.pidTd;
  5207  0D50  305C               	movlw	92
  5208  0D51  0086               	movwf	6
  5209  0D52  3023               	movlw	35
  5210  0D53  0087               	movwf	7
  5211  0D54  3148               	addfsr 1,8
  5212  0D55  3F40               	moviw [0]fsr1
  5213  0D56  0021               	movlb	1	; select bank1
  5214  0D57  00CC               	movwf	_PidTd^(0+128)
  5215  0D58  3F41               	moviw [1]fsr1
  5216  0D59  00CD               	movwf	(_PidTd+1)^(0+128)
  5217                           
  5218                           ;main.c: 37: PidTi=sysData.pidTi;
  5219  0D5A  305C               	movlw	92
  5220  0D5B  0086               	movwf	6
  5221  0D5C  3023               	movlw	35
  5222  0D5D  0087               	movwf	7
  5223  0D5E  3146               	addfsr 1,6
  5224  0D5F  3F40               	moviw [0]fsr1
  5225  0D60  00CE               	movwf	_PidTi^(0+128)
  5226  0D61  3F41               	moviw [1]fsr1
  5227  0D62  00CF               	movwf	(_PidTi+1)^(0+128)
  5228  0D63                     l5757:	
  5229                           ;main.c: 38: }
  5230                           ;main.c: 40: while (1){
  5231                           
  5232                           
  5233                           ;main.c: 41: if(Event & (1<<2)){
  5234  0D63  0020               	movlb	0	; select bank0
  5235  0D64  1D6B               	btfss	_Event,2	;volatile
  5236  0D65  2E59               	goto	l5805
  5237                           
  5238                           ;main.c: 42: Event &= ~(1<<2);
  5239  0D66  30FB               	movlw	251
  5240  0D67  0021               	movlb	1	; select bank1
  5241  0D68  00EA               	movwf	??_main^(0+128)
  5242  0D69  086A               	movf	??_main^(0+128),w
  5243  0D6A  0020               	movlb	0	; select bank0
  5244  0D6B  05EB               	andwf	_Event,f	;volatile
  5245                           
  5246                           ;main.c: 44: rtAdcValueRsLo=adc_sample(channel_AN6,1,32);
  5247  0D6C  01F6               	clrf	adc_sample@gfvr
  5248  0D6D  0AF6               	incf	adc_sample@gfvr,f
  5249  0D6E  3020               	movlw	32
  5250  0D6F  0021               	movlb	1	; select bank1
  5251  0D70  00EA               	movwf	??_main^(0+128)
  5252  0D71  086A               	movf	??_main^(0+128),w
  5253  0D72  00F7               	movwf	adc_sample@num
  5254  0D73  3006               	movlw	6
  5255  0D74  319E  26A2  318D   	fcall	_adc_sample
  5256  0D77  0877               	movf	?_adc_sample+1,w
  5257  0D78  0020               	movlb	0	; select bank0
  5258  0D79  00E7               	movwf	_rtAdcValueRsLo+1
  5259  0D7A  0876               	movf	?_adc_sample,w
  5260  0D7B  00E6               	movwf	_rtAdcValueRsLo
  5261                           
  5262                           ;main.c: 46: rtAdcValueRsHi=adc_sample(channel_AN5,3,32);
  5263  0D7C  3003               	movlw	3
  5264  0D7D  0021               	movlb	1	; select bank1
  5265  0D7E  00EA               	movwf	??_main^(0+128)
  5266  0D7F  086A               	movf	??_main^(0+128),w
  5267  0D80  00F6               	movwf	adc_sample@gfvr
  5268  0D81  3020               	movlw	32
  5269  0D82  00EB               	movwf	(??_main+1)^(0+128)
  5270  0D83  086B               	movf	(??_main+1)^(0+128),w
  5271  0D84  00F7               	movwf	adc_sample@num
  5272  0D85  3005               	movlw	5
  5273  0D86  319E  26A2  318D   	fcall	_adc_sample
  5274  0D89  0877               	movf	?_adc_sample+1,w
  5275  0D8A  0021               	movlb	1	; select bank1
  5276  0D8B  00D5               	movwf	(_rtAdcValueRsHi+1)^(0+128)
  5277  0D8C  0876               	movf	?_adc_sample,w
  5278  0D8D  00D4               	movwf	_rtAdcValueRsHi^(0+128)
  5279                           
  5280                           ;main.c: 49: rtAdcValueRcLo=adc_sample(channel_AN4,3,32);
  5281  0D8E  3003               	movlw	3
  5282  0D8F  00EA               	movwf	??_main^(0+128)
  5283  0D90  086A               	movf	??_main^(0+128),w
  5284  0D91  00F6               	movwf	adc_sample@gfvr
  5285  0D92  3020               	movlw	32
  5286  0D93  00EB               	movwf	(??_main+1)^(0+128)
  5287  0D94  086B               	movf	(??_main+1)^(0+128),w
  5288  0D95  00F7               	movwf	adc_sample@num
  5289  0D96  3004               	movlw	4
  5290  0D97  319E  26A2  318D   	fcall	_adc_sample
  5291  0D9A  0877               	movf	?_adc_sample+1,w
  5292  0D9B  0020               	movlb	0	; select bank0
  5293  0D9C  00E5               	movwf	_rtAdcValueRcLo+1
  5294  0D9D  0876               	movf	?_adc_sample,w
  5295  0D9E  00E4               	movwf	_rtAdcValueRcLo
  5296                           
  5297                           ;main.c: 50: rtAdcValueRcLo>>=1;
  5298  0D9F  3001               	movlw	1
  5299  0DA0                     u5445:	
  5300  0DA0  36E5               	lsrf	_rtAdcValueRcLo+1,f
  5301  0DA1  0CE4               	rrf	_rtAdcValueRcLo,f
  5302  0DA2  0B89               	decfsz	9,f
  5303  0DA3  2DA0               	goto	u5445
  5304                           
  5305                           ;main.c: 51: rtAdcValueRcHi=adc_sample(channel_AN2,3,32);
  5306  0DA4  3003               	movlw	3
  5307  0DA5  0021               	movlb	1	; select bank1
  5308  0DA6  00EA               	movwf	??_main^(0+128)
  5309  0DA7  086A               	movf	??_main^(0+128),w
  5310  0DA8  00F6               	movwf	adc_sample@gfvr
  5311  0DA9  3020               	movlw	32
  5312  0DAA  00EB               	movwf	(??_main+1)^(0+128)
  5313  0DAB  086B               	movf	(??_main+1)^(0+128),w
  5314  0DAC  00F7               	movwf	adc_sample@num
  5315  0DAD  3002               	movlw	2
  5316  0DAE  319E  26A2  318D   	fcall	_adc_sample
  5317  0DB1  0877               	movf	?_adc_sample+1,w
  5318  0DB2  0021               	movlb	1	; select bank1
  5319  0DB3  00D3               	movwf	(_rtAdcValueRcHi+1)^(0+128)
  5320  0DB4  0876               	movf	?_adc_sample,w
  5321  0DB5  00D2               	movwf	_rtAdcValueRcHi^(0+128)
  5322                           
  5323                           ;main.c: 52: rtAdcValueRcHi>>=1;
  5324  0DB6  3001               	movlw	1
  5325  0DB7                     u5455:	
  5326  0DB7  36D3               	lsrf	(_rtAdcValueRcHi+1)^(0+128),f
  5327  0DB8  0CD2               	rrf	_rtAdcValueRcHi^(0+128),f
  5328  0DB9  0B89               	decfsz	9,f
  5329  0DBA  2DB7               	goto	u5455
  5330                           
  5331                           ;main.c: 54: rtAdcValueVoFb=adc_sample(channel_AN7,3,32);
  5332  0DBB  3003               	movlw	3
  5333  0DBC  00EA               	movwf	??_main^(0+128)
  5334  0DBD  086A               	movf	??_main^(0+128),w
  5335  0DBE  00F6               	movwf	adc_sample@gfvr
  5336  0DBF  3020               	movlw	32
  5337  0DC0  00EB               	movwf	(??_main+1)^(0+128)
  5338  0DC1  086B               	movf	(??_main+1)^(0+128),w
  5339  0DC2  00F7               	movwf	adc_sample@num
  5340  0DC3  3007               	movlw	7
  5341  0DC4  319E  26A2  318D   	fcall	_adc_sample
  5342  0DC7  0877               	movf	?_adc_sample+1,w
  5343  0DC8  0021               	movlb	1	; select bank1
  5344  0DC9  00D1               	movwf	(_rtAdcValueVoFb+1)^(0+128)
  5345  0DCA  0876               	movf	?_adc_sample,w
  5346  0DCB  00D0               	movwf	_rtAdcValueVoFb^(0+128)
  5347                           
  5348                           ;main.c: 55: rtAdcValueVoFb>>=1;
  5349  0DCC  3001               	movlw	1
  5350  0DCD                     u5465:	
  5351  0DCD  36D1               	lsrf	(_rtAdcValueVoFb+1)^(0+128),f
  5352  0DCE  0CD0               	rrf	_rtAdcValueVoFb^(0+128),f
  5353  0DCF  0B89               	decfsz	9,f
  5354  0DD0  2DCD               	goto	u5465
  5355                           
  5356                           ;main.c: 57: resRc=calc_temp_rc();
  5357  0DD1  3194  24BF  318D   	fcall	_calc_temp_rc
  5358  0DD4  0020               	movlb	0	; select bank0
  5359  0DD5  082E               	movf	?_calc_temp_rc+1,w
  5360  0DD6  00EF               	movwf	_resRc+1
  5361  0DD7  082D               	movf	?_calc_temp_rc,w
  5362  0DD8  00EE               	movwf	_resRc
  5363                           
  5364                           ;main.c: 58: resRs=calc_temp_rs();
  5365  0DD9  3191  21A8  318D   	fcall	_calc_temp_rs
  5366  0DDC  0020               	movlb	0	; select bank0
  5367  0DDD  082E               	movf	?_calc_temp_rs+1,w
  5368  0DDE  00ED               	movwf	_resRs+1
  5369  0DDF  082D               	movf	?_calc_temp_rs,w
  5370  0DE0  00EC               	movwf	_resRs
  5371                           
  5372                           ;main.c: 60: __nop();
  5373  0DE1  0000               	nop
  5374                           
  5375                           ;main.c: 61: if(pidBbSm>=5){
  5376  0DE2  3005               	movlw	5
  5377  0DE3  0020               	movlb	0	; select bank0
  5378  0DE4  0269               	subwf	_pidBbSm,w
  5379  0DE5  1C03               	skipc
  5380  0DE6  2E11               	goto	l5791
  5381                           
  5382                           ;main.c: 62: pid_pwm1_idrv_run();
  5383  0DE7  3196  2691  318D   	fcall	_pid_pwm1_idrv_run
  5384                           
  5385                           ;main.c: 65: rsLoAvg=calc_rs_lo_avg(rtAdcValueRsLo);
  5386  0DEA  0020               	movlb	0	; select bank0
  5387  0DEB  0867               	movf	_rtAdcValueRsLo+1,w
  5388  0DEC  00AE               	movwf	calc_rs_lo_avg@x+1
  5389  0DED  0866               	movf	_rtAdcValueRsLo,w
  5390  0DEE  00AD               	movwf	calc_rs_lo_avg@x
  5391  0DEF  3190  203E  318D   	fcall	_calc_rs_lo_avg
  5392  0DF2  0020               	movlb	0	; select bank0
  5393  0DF3  082E               	movf	?_calc_rs_lo_avg+1,w
  5394  0DF4  00DF               	movwf	_rsLoAvg+1
  5395  0DF5  082D               	movf	?_calc_rs_lo_avg,w
  5396  0DF6  00DE               	movwf	_rsLoAvg
  5397                           
  5398                           ;main.c: 66: voExpectMv=calc_expect_vout_adc_value(rsLoAvg);
  5399  0DF7  085F               	movf	_rsLoAvg+1,w
  5400  0DF8  00B7               	movwf	calc_expect_vout_adc_value@x+1
  5401  0DF9  085E               	movf	_rsLoAvg,w
  5402  0DFA  00B6               	movwf	calc_expect_vout_adc_value@x
  5403  0DFB  318B  2324  318D   	fcall	_calc_expect_vout_adc_value
  5404  0DFE  0020               	movlb	0	; select bank0
  5405  0DFF  0837               	movf	?_calc_expect_vout_adc_value+1,w
  5406  0E00  0021               	movlb	1	; select bank1
  5407  0E01  00CB               	movwf	(_voExpectMv+1)^(0+128)
  5408  0E02  0020               	movlb	0	; select bank0
  5409  0E03  0836               	movf	?_calc_expect_vout_adc_value,w
  5410  0E04  0021               	movlb	1	; select bank1
  5411  0E05  00CA               	movwf	_voExpectMv^(0+128)
  5412                           
  5413                           ;main.c: 67: voExpectAdcValue=(voExpectMv<<1);
  5414  0E06  354A               	lslf	_voExpectMv^(0+128),w
  5415  0E07  0020               	movlb	0	; select bank0
  5416  0E08  00E0               	movwf	_voExpectAdcValue
  5417  0E09  0021               	movlb	1	; select bank1
  5418  0E0A  0D4B               	rlf	(_voExpectMv+1)^(0+128),w
  5419  0E0B  0020               	movlb	0	; select bank0
  5420  0E0C  00E1               	movwf	_voExpectAdcValue+1
  5421                           
  5422                           ;main.c: 68: pid_pwm2_vout_run();
  5423  0E0D  3192  22C9  318D   	fcall	_pid_pwm2_vout_run
  5424                           
  5425                           ;main.c: 69: }else{
  5426  0E10  2E59               	goto	l5805
  5427  0E11                     l5791:	
  5428                           
  5429                           ;main.c: 70: pid_pwm1_idrv_b_b();
  5430  0E11  3188  20ED  318D   	fcall	_pid_pwm1_idrv_b_b
  5431                           
  5432                           ;main.c: 72: if(pidBbSm>=5){
  5433  0E14  3005               	movlw	5
  5434  0E15  0020               	movlb	0	; select bank0
  5435  0E16  0269               	subwf	_pidBbSm,w
  5436  0E17  1C03               	skipc
  5437  0E18  2E59               	goto	l5805
  5438                           
  5439                           ;main.c: 73: sysData.pidSetFlg0 = 0x55;
  5440  0E19  305C               	movlw	92
  5441  0E1A  0086               	movwf	6
  5442  0E1B  3023               	movlw	35
  5443  0E1C  0087               	movwf	7
  5444  0E1D  3055               	movlw	85
  5445  0E1E  3FC0               	movwi [0]fsr1
  5446                           
  5447                           ;main.c: 74: sysData.pidSetFlg1 = 0xaa;
  5448  0E1F  305D               	movlw	93
  5449  0E20  0086               	movwf	6
  5450  0E21  3023               	movlw	35
  5451  0E22  0087               	movwf	7
  5452  0E23  30AA               	movlw	170
  5453  0E24  0081               	movwf	1
  5454                           
  5455                           ;main.c: 75: sysData.pidKp=(uint16_t)PidKp;
  5456  0E25  305C               	movlw	92
  5457  0E26  0086               	movwf	6
  5458  0E27  3023               	movlw	35
  5459  0E28  0087               	movwf	7
  5460  0E29  3144               	addfsr 1,4
  5461  0E2A  0862               	movf	_PidKp,w
  5462  0E2B  3FC0               	movwi [0]fsr1
  5463  0E2C  0863               	movf	_PidKp+1,w
  5464  0E2D  3FC1               	movwi [1]fsr1
  5465                           
  5466                           ;main.c: 76: sysData.pidTd=(uint16_t)PidTd;
  5467  0E2E  305C               	movlw	92
  5468  0E2F  0086               	movwf	6
  5469  0E30  3023               	movlw	35
  5470  0E31  0087               	movwf	7
  5471  0E32  3148               	addfsr 1,8
  5472  0E33  0021               	movlb	1	; select bank1
  5473  0E34  084C               	movf	_PidTd^(0+128),w
  5474  0E35  3FC0               	movwi [0]fsr1
  5475  0E36  084D               	movf	(_PidTd+1)^(0+128),w
  5476  0E37  3FC1               	movwi [1]fsr1
  5477                           
  5478                           ;main.c: 77: sysData.pidTi=(uint16_t)PidTi;
  5479  0E38  305C               	movlw	92
  5480  0E39  0086               	movwf	6
  5481  0E3A  3023               	movlw	35
  5482  0E3B  0087               	movwf	7
  5483  0E3C  3146               	addfsr 1,6
  5484  0E3D  084E               	movf	_PidTi^(0+128),w
  5485  0E3E  3FC0               	movwi [0]fsr1
  5486  0E3F  084F               	movf	(_PidTi+1)^(0+128),w
  5487  0E40  3FC1               	movwi [1]fsr1
  5488                           
  5489                           ;main.c: 78: sys_data_save();
  5490  0E41  319C  249B  318D   	fcall	_sys_data_save
  5491                           
  5492                           ;main.c: 79: modbusBuf[0]=0x55;
  5493  0E44  3055               	movlw	85
  5494  0E45  0021               	movlb	1	; select bank1
  5495  0E46  00EA               	movwf	??_main^(0+128)
  5496  0E47  086A               	movf	??_main^(0+128),w
  5497  0E48  0023               	movlb	3	; select bank3
  5498  0E49  00A0               	movwf	_modbusBuf^(0+384)
  5499                           
  5500                           ;main.c: 80: modbusBuf[1]=0xaa;
  5501  0E4A  30AA               	movlw	170
  5502  0E4B  0021               	movlb	1	; select bank1
  5503  0E4C  00EA               	movwf	??_main^(0+128)
  5504  0E4D  086A               	movf	??_main^(0+128),w
  5505  0E4E  0023               	movlb	3	; select bank3
  5506  0E4F  00A1               	movwf	(_modbusBuf^(0+384)+1)
  5507                           
  5508                           ;main.c: 81: uart_send_len(modbusBuf,2);
  5509  0E50  3002               	movlw	2
  5510  0E51  0021               	movlb	1	; select bank1
  5511  0E52  00EA               	movwf	??_main^(0+128)
  5512  0E53  086A               	movf	??_main^(0+128),w
  5513  0E54  00F3               	movwf	uart_send_len@len
  5514  0E55  30A0               	movlw	(low (_modbusBuf| (0+256)))& (0+255)
  5515  0E56  319B  23A7  318D   	fcall	_uart_send_len
  5516  0E59                     l5805:	
  5517                           
  5518                           ;main.c: 82: }
  5519                           ;main.c: 83: }
  5520                           ;main.c: 85: }
  5521                           ;main.c: 87: if(Event & (1<<3)){
  5522  0E59  0020               	movlb	0	; select bank0
  5523  0E5A  1DEB               	btfss	_Event,3	;volatile
  5524  0E5B  2E62               	goto	l5809
  5525                           
  5526                           ;main.c: 88: Event &= ~(1<<3);
  5527  0E5C  30F7               	movlw	247
  5528  0E5D  0021               	movlb	1	; select bank1
  5529  0E5E  00EA               	movwf	??_main^(0+128)
  5530  0E5F  086A               	movf	??_main^(0+128),w
  5531  0E60  0020               	movlb	0	; select bank0
  5532  0E61  05EB               	andwf	_Event,f	;volatile
  5533  0E62                     l5809:	
  5534                           
  5535                           ;main.c: 130: }
  5536                           ;main.c: 132: if(Event & (1<<0)){
  5537  0E62  1C6B               	btfss	_Event,0	;volatile
  5538  0E63  2E95               	goto	l5819
  5539                           
  5540                           ;main.c: 133: Event &= ~ (1<<0);
  5541  0E64  30FE               	movlw	254
  5542  0E65  0021               	movlb	1	; select bank1
  5543  0E66  00EA               	movwf	??_main^(0+128)
  5544  0E67  086A               	movf	??_main^(0+128),w
  5545  0E68  0020               	movlb	0	; select bank0
  5546  0E69  05EB               	andwf	_Event,f	;volatile
  5547                           
  5548                           ;main.c: 134: if(eusartRxCount>0){
  5549  0E6A  0879               	movf	_eusartRxCount,w	;volatile
  5550  0E6B  1903               	btfsc	3,2
  5551  0E6C  2E92               	goto	l5817
  5552                           
  5553                           ;main.c: 135: m_mem_cpy_len(modbusBuf,eusartRxBuffer,eusartRxCount);
  5554  0E6D  30A0               	movlw	low _modbusBuf
  5555  0E6E  00A0               	movwf	m_mem_cpy_len@d
  5556  0E6F  3001               	movlw	high _modbusBuf
  5557  0E70  00A1               	movwf	m_mem_cpy_len@d+1
  5558  0E71  3020               	movlw	low _eusartRxBuffer
  5559  0E72  00A2               	movwf	m_mem_cpy_len@s
  5560  0E73  3001               	movlw	high _eusartRxBuffer
  5561  0E74  00A3               	movwf	m_mem_cpy_len@s+1
  5562  0E75  0879               	movf	_eusartRxCount,w	;volatile
  5563  0E76  0021               	movlb	1	; select bank1
  5564  0E77  00EA               	movwf	??_main^(0+128)
  5565  0E78  01EB               	clrf	(??_main^(0+128)+1)
  5566  0E79  086A               	movf	??_main^(0+128),w
  5567  0E7A  0020               	movlb	0	; select bank0
  5568  0E7B  00A4               	movwf	m_mem_cpy_len@len
  5569  0E7C  0021               	movlb	1	; select bank1
  5570  0E7D  086B               	movf	(??_main+1)^(0+128),w
  5571  0E7E  0020               	movlb	0	; select bank0
  5572  0E7F  00A5               	movwf	m_mem_cpy_len@len+1
  5573  0E80  319A  22D4  318D   	fcall	_m_mem_cpy_len
  5574                           
  5575                           ;main.c: 136: modbus_response_process(modbusBuf,eusartRxCount);
  5576  0E83  0879               	movf	_eusartRxCount,w	;volatile
  5577  0E84  0021               	movlb	1	; select bank1
  5578  0E85  00EA               	movwf	??_main^(0+128)
  5579  0E86  01EB               	clrf	(??_main^(0+128)+1)
  5580  0E87  086A               	movf	??_main^(0+128),w
  5581  0E88  0020               	movlb	0	; select bank0
  5582  0E89  00C0               	movwf	modbus_response_process@rlen
  5583  0E8A  0021               	movlb	1	; select bank1
  5584  0E8B  086B               	movf	(??_main+1)^(0+128),w
  5585  0E8C  0020               	movlb	0	; select bank0
  5586  0E8D  00C1               	movwf	modbus_response_process@rlen+1
  5587  0E8E  30A0               	movlw	(low (_modbusBuf| (0+256)))& (0+255)
  5588  0E8F  319D  25F8  318D   	fcall	_modbus_response_process
  5589  0E92                     l5817:	
  5590                           
  5591                           ;main.c: 138: }
  5592                           ;main.c: 140: uart_received_start();
  5593  0E92  3199  21A7  318D   	fcall	_uart_received_start
  5594  0E95                     l5819:	
  5595                           
  5596                           ;main.c: 141: }
  5597                           ;main.c: 143: __nop();
  5598  0E95  0000               	nop
  5599  0E96  2D63               	goto	l5757
  5600  0E97                     __end_of_main:	
  5601                           
  5602                           	psect	text1
  5603  1B81                     __ptext1:	
  5604 ;; *************** function _uart_send_str *****************
  5605 ;; Defined at:
  5606 ;;		line 21 in file "src/api/my_uart.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;  str             1    wreg     PTR unsigned char 
  5609 ;;		 -> str(16), 
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;  str             1    4[COMMON] PTR unsigned char 
  5612 ;;		 -> str(16), 
  5613 ;; Return value:  Size  Location     Type
  5614 ;;                  1    wreg      void 
  5615 ;; Registers used:
  5616 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/0
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5624 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5625 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5626 ;;Total ram usage:        2 bytes
  5627 ;; Hardware stack levels used:    1
  5628 ;; Hardware stack levels required when called:    1
  5629 ;; This function calls:
  5630 ;;		Nothing
  5631 ;; This function is called by:
  5632 ;;		_main
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           
  5637                           ;psect for function _uart_send_str
  5638  1B81                     _uart_send_str:	
  5639                           
  5640                           ;incstack = 0
  5641                           ; Regs used in _uart_send_str: [wreg+fsr1l+fsr1h+status,2+status,0]
  5642                           ;uart_send_str@str stored from wreg
  5643  1B81  00F4               	movwf	uart_send_str@str
  5644                           
  5645                           ;my_uart.c: 24: if(!TXSTAbits.TXEN)TXSTAbits.TXEN=1;
  5646  1B82  0023               	movlb	3	; select bank3
  5647  1B83  1E9E               	btfss	30,5	;volatile
  5648  1B84  169E               	bsf	30,5	;volatile
  5649  1B85                     l4151:	
  5650                           ;my_uart.c: 26: while(*str!='\0'){
  5651                           
  5652  1B85  0874               	movf	uart_send_str@str,w
  5653  1B86  0086               	movwf	6
  5654  1B87  3001               	movlw	1	; select bank2/3
  5655  1B88  0087               	movwf	7
  5656  1B89  0801               	movf	1,w
  5657  1B8A  1903               	btfsc	3,2
  5658  1B8B  2BA3               	goto	l507
  5659  1B8C                     l499:	
  5660                           ;my_uart.c: 27: while(0 == PIR1bits.TXIF);
  5661                           
  5662  1B8C  0020               	movlb	0	; select bank0
  5663  1B8D  1E11               	btfss	17,4	;volatile
  5664  1B8E  2B8C               	goto	l499
  5665                           
  5666                           ;my_uart.c: 28: do{__nop();__nop();__nop();__nop();}while(0);;
  5667  1B8F  0000               	nop
  5668  1B90  0000               	nop
  5669  1B91  0000               	nop
  5670  1B92  0000               	nop
  5671                           
  5672                           ;my_uart.c: 29: TXREG = *str;
  5673  1B93  0874               	movf	uart_send_str@str,w
  5674  1B94  0086               	movwf	6
  5675  1B95  3001               	movlw	1	; select bank2/3
  5676  1B96  0087               	movwf	7
  5677  1B97  0801               	movf	1,w
  5678  1B98  0023               	movlb	3	; select bank3
  5679  1B99  009A               	movwf	26	;volatile
  5680                           
  5681                           ;my_uart.c: 30: str++;
  5682  1B9A  3001               	movlw	1
  5683  1B9B  00F3               	movwf	??_uart_send_str
  5684  1B9C  0873               	movf	??_uart_send_str,w
  5685  1B9D  07F4               	addwf	uart_send_str@str,f
  5686                           
  5687                           ;my_uart.c: 31: do{__nop();__nop();__nop();__nop();}while(0);;
  5688  1B9E  0000               	nop
  5689  1B9F  0000               	nop
  5690  1BA0  0000               	nop
  5691  1BA1  0000               	nop
  5692  1BA2  2B85               	goto	l4151
  5693  1BA3                     l507:	
  5694                           ;my_uart.c: 32: }
  5695                           ;my_uart.c: 33: while(0 == PIR1bits.TXIF);
  5696                           
  5697  1BA3  0020               	movlb	0	; select bank0
  5698  1BA4  1A11               	btfsc	17,4	;volatile
  5699  1BA5  0008               	return
  5700  1BA6  2BA3               	goto	l507
  5701  1BA7                     __end_of_uart_send_str:	
  5702                           
  5703                           	psect	text2
  5704  19A7                     __ptext2:	
  5705 ;; *************** function _uart_received_start *****************
  5706 ;; Defined at:
  5707 ;;		line 50 in file "src/api/my_uart.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;		None
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;		None
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  1    wreg      void 
  5714 ;; Registers used:
  5715 ;;		status,2
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5725 ;;Total ram usage:        0 bytes
  5726 ;; Hardware stack levels used:    1
  5727 ;; Hardware stack levels required when called:    1
  5728 ;; This function calls:
  5729 ;;		Nothing
  5730 ;; This function is called by:
  5731 ;;		_main
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           
  5736                           ;psect for function _uart_received_start
  5737  19A7                     _uart_received_start:	
  5738                           
  5739                           ;my_uart.c: 52: eusartRxCount=0;
  5740                           
  5741                           ;incstack = 0
  5742                           ; Regs used in _uart_received_start: [status,2]
  5743  19A7  01F9               	clrf	_eusartRxCount	;volatile
  5744                           
  5745                           ;my_uart.c: 53: RCSTAbits.CREN=0;
  5746  19A8  0023               	movlb	3	; select bank3
  5747  19A9  121D               	bcf	29,4	;volatile
  5748                           
  5749                           ;my_uart.c: 54: PIE1bits.RCIE = 0;
  5750  19AA  0021               	movlb	1	; select bank1
  5751  19AB  1291               	bcf	17,5	;volatile
  5752                           
  5753                           ;my_uart.c: 55: PIR1bits.RCIF=0;
  5754  19AC  0020               	movlb	0	; select bank0
  5755  19AD  1291               	bcf	17,5	;volatile
  5756                           
  5757                           ;my_uart.c: 57: RCSTAbits.CREN=1;
  5758  19AE  0023               	movlb	3	; select bank3
  5759  19AF  161D               	bsf	29,4	;volatile
  5760                           
  5761                           ;my_uart.c: 58: PIE1bits.RCIE = 1;
  5762  19B0  0021               	movlb	1	; select bank1
  5763  19B1  1691               	bsf	17,5	;volatile
  5764                           
  5765                           ;my_uart.c: 60: eusartRxIdleTime_ms=0;
  5766  19B2  01FA               	clrf	_eusartRxIdleTime_ms	;volatile
  5767  19B3  0008               	return
  5768  19B4                     __end_of_uart_received_start:	
  5769                           
  5770                           	psect	text3
  5771  1238                     __ptext3:	
  5772 ;; *************** function _sys_data_init *****************
  5773 ;; Defined at:
  5774 ;;		line 104 in file "src/api/sysData.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;		None
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;  i               2   27[BANK0 ] unsigned int 
  5779 ;;  ret             2   25[BANK0 ] unsigned int 
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  2  783[None  ] unsigned int 
  5782 ;; Registers used:
  5783 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5790 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5791 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5792 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5793 ;;Total ram usage:       10 bytes
  5794 ;; Hardware stack levels used:    1
  5795 ;; Hardware stack levels required when called:    4
  5796 ;; This function calls:
  5797 ;;		___wmul
  5798 ;;		_crc_verify
  5799 ;;		_my_flash_system_read
  5800 ;;		_sys_data_save
  5801 ;; This function is called by:
  5802 ;;		_main
  5803 ;; This function uses a non-reentrant model
  5804 ;;
  5805                           
  5806                           
  5807                           ;psect for function _sys_data_init
  5808  1238                     _sys_data_init:	
  5809                           
  5810                           ;sysData.c: 106: uint16_t ret,i;
  5811                           ;sysData.c: 107: my_flash_system_read((uint8_t*)&sysData,sizeof(sysData_t));
  5812                           
  5813                           ;incstack = 0
  5814                           ; Regs used in _sys_data_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5815  1238  305C               	movlw	92
  5816  1239  00F3               	movwf	my_flash_system_read@buf
  5817  123A  3023               	movlw	35
  5818  123B  00F4               	movwf	my_flash_system_read@buf+1
  5819  123C  3084               	movlw	132
  5820  123D  00F5               	movwf	my_flash_system_read@len
  5821  123E  3000               	movlw	0
  5822  123F  00F6               	movwf	my_flash_system_read@len+1
  5823  1240  3190  2001  3192   	fcall	_my_flash_system_read
  5824                           
  5825                           ;sysData.c: 108: ret=crc_verify((uint8_t*)&sysData,sizeof(sysData_t));
  5826  1243  305C               	movlw	92
  5827  1244  0020               	movlb	0	; select bank0
  5828  1245  00A8               	movwf	crc_verify@message
  5829  1246  3023               	movlw	35
  5830  1247  00A9               	movwf	crc_verify@message+1
  5831  1248  3084               	movlw	132
  5832  1249  00AA               	movwf	crc_verify@n
  5833  124A  3000               	movlw	0
  5834  124B  00AB               	movwf	crc_verify@n+1
  5835  124C  319C  2464  3192   	fcall	_crc_verify
  5836  124F  0020               	movlb	0	; select bank0
  5837  1250  00B3               	movwf	??_sys_data_init
  5838  1251  01B4               	clrf	??_sys_data_init+1
  5839  1252  0833               	movf	??_sys_data_init,w
  5840  1253  00B9               	movwf	sys_data_init@ret
  5841  1254  0834               	movf	??_sys_data_init+1,w
  5842  1255  00BA               	movwf	sys_data_init@ret+1
  5843                           
  5844                           ;sysData.c: 109: if(!ret){
  5845  1256  0839               	movf	sys_data_init@ret,w
  5846  1257  043A               	iorwf	sys_data_init@ret+1,w
  5847  1258  1D03               	btfss	3,2
  5848  1259  0008               	return
  5849                           
  5850                           ;sysData.c: 110: sysData.pidSetFlg0=0xff;
  5851  125A  305C               	movlw	92
  5852  125B  0086               	movwf	6
  5853  125C  3023               	movlw	35
  5854  125D  0087               	movwf	7
  5855  125E  30FF               	movlw	255
  5856  125F  3FC0               	movwi [0]fsr1
  5857                           
  5858                           ;sysData.c: 111: sysData.pidSetFlg1=0xff;
  5859  1260  305D               	movlw	93
  5860  1261  0086               	movwf	6
  5861  1262  3023               	movlw	35
  5862  1263  0087               	movwf	7
  5863  1264  30FF               	movlw	255
  5864  1265  0081               	movwf	1
  5865                           
  5866                           ;sysData.c: 112: sysData.id=0xff;
  5867  1266  305E               	movlw	94
  5868  1267  0086               	movwf	6
  5869  1268  3023               	movlw	35
  5870  1269  0087               	movwf	7
  5871  126A  30FF               	movlw	255
  5872  126B  0081               	movwf	1
  5873                           
  5874                           ;sysData.c: 113: for(i=0;i<30;i++){
  5875  126C  01BB               	clrf	sys_data_init@i
  5876  126D  01BC               	clrf	sys_data_init@i+1
  5877  126E  3000               	movlw	0
  5878  126F  023C               	subwf	sys_data_init@i+1,w
  5879  1270  301E               	movlw	30
  5880  1271  1903               	skipnz
  5881  1272  023B               	subwf	sys_data_init@i,w
  5882  1273  1803               	btfsc	3,0
  5883  1274  2AC6               	goto	l5663
  5884  1275                     l5657:	
  5885                           
  5886                           ;sysData.c: 115: sysData.calibRsAdc[i]=6400+i*720;
  5887  1275  083C               	movf	sys_data_init@i+1,w
  5888  1276  00F4               	movwf	___wmul@multiplier+1
  5889  1277  083B               	movf	sys_data_init@i,w
  5890  1278  00F3               	movwf	___wmul@multiplier
  5891  1279  30D0               	movlw	208
  5892  127A  00F5               	movwf	___wmul@multiplicand
  5893  127B  3002               	movlw	2
  5894  127C  00F6               	movwf	___wmul@multiplicand+1
  5895  127D  319A  22B6  3192   	fcall	___wmul
  5896  1280  0873               	movf	?___wmul,w
  5897  1281  3E00               	addlw	0
  5898  1282  0020               	movlb	0	; select bank0
  5899  1283  00B3               	movwf	??_sys_data_init
  5900  1284  3019               	movlw	25
  5901  1285  3D74               	addwfc	?___wmul+1,w
  5902  1286  00B4               	movwf	??_sys_data_init+1
  5903  1287  083C               	movf	sys_data_init@i+1,w
  5904  1288  00B6               	movwf	??_sys_data_init+3
  5905  1289  083B               	movf	sys_data_init@i,w
  5906  128A  00B5               	movwf	??_sys_data_init+2
  5907  128B  35B5               	lslf	??_sys_data_init+2,f
  5908  128C  0DB6               	rlf	??_sys_data_init+3,f
  5909  128D  3066               	movlw	102
  5910  128E  00B7               	movwf	??_sys_data_init+4
  5911  128F  3023               	movlw	35
  5912  1290  00B8               	movwf	??_sys_data_init+5
  5913  1291  0835               	movf	??_sys_data_init+2,w
  5914  1292  0737               	addwf	??_sys_data_init+4,w
  5915  1293  0086               	movwf	6
  5916  1294  0836               	movf	??_sys_data_init+3,w
  5917  1295  3D38               	addwfc	??_sys_data_init+5,w
  5918  1296  0087               	movwf	7
  5919  1297  0833               	movf	??_sys_data_init,w
  5920  1298  3FC0               	movwi [0]fsr1
  5921  1299  0834               	movf	??_sys_data_init+1,w
  5922  129A  3FC1               	movwi [1]fsr1
  5923                           
  5924                           ;sysData.c: 116: sysData.calibVoMV[i]=i*333;
  5925  129B  083C               	movf	sys_data_init@i+1,w
  5926  129C  00F4               	movwf	___wmul@multiplier+1
  5927  129D  083B               	movf	sys_data_init@i,w
  5928  129E  00F3               	movwf	___wmul@multiplier
  5929  129F  304D               	movlw	77
  5930  12A0  00F5               	movwf	___wmul@multiplicand
  5931  12A1  3001               	movlw	1
  5932  12A2  00F6               	movwf	___wmul@multiplicand+1
  5933  12A3  319A  22B6  3192   	fcall	___wmul
  5934  12A6  0020               	movlb	0	; select bank0
  5935  12A7  083C               	movf	sys_data_init@i+1,w
  5936  12A8  00B4               	movwf	??_sys_data_init+1
  5937  12A9  083B               	movf	sys_data_init@i,w
  5938  12AA  00B3               	movwf	??_sys_data_init
  5939  12AB  35B3               	lslf	??_sys_data_init,f
  5940  12AC  0DB4               	rlf	??_sys_data_init+1,f
  5941  12AD  30A2               	movlw	162
  5942  12AE  00B5               	movwf	??_sys_data_init+2
  5943  12AF  3023               	movlw	35
  5944  12B0  00B6               	movwf	??_sys_data_init+3
  5945  12B1  0833               	movf	??_sys_data_init,w
  5946  12B2  0735               	addwf	??_sys_data_init+2,w
  5947  12B3  0086               	movwf	6
  5948  12B4  0834               	movf	??_sys_data_init+1,w
  5949  12B5  3D36               	addwfc	??_sys_data_init+3,w
  5950  12B6  0087               	movwf	7
  5951  12B7  0873               	movf	?___wmul,w
  5952  12B8  3FC0               	movwi [0]fsr1
  5953  12B9  0874               	movf	?___wmul+1,w
  5954  12BA  3FC1               	movwi [1]fsr1
  5955  12BB  3001               	movlw	1
  5956  12BC  07BB               	addwf	sys_data_init@i,f
  5957  12BD  3000               	movlw	0
  5958  12BE  3DBC               	addwfc	sys_data_init@i+1,f
  5959  12BF  3000               	movlw	0
  5960  12C0  023C               	subwf	sys_data_init@i+1,w
  5961  12C1  301E               	movlw	30
  5962  12C2  1903               	skipnz
  5963  12C3  023B               	subwf	sys_data_init@i,w
  5964  12C4  1C03               	skipc
  5965  12C5  2A75               	goto	l5657
  5966  12C6                     l5663:	
  5967                           
  5968                           ;sysData.c: 117: }
  5969                           ;sysData.c: 118: sys_data_save();
  5970  12C6  319C  249B         	fcall	_sys_data_save
  5971  12C8  0008               	return
  5972  12C9                     __end_of_sys_data_init:	
  5973                           ;sysData.c: 126: }
  5974                           ;sysData.c: 128: return ret;
  5975                           ;	Return value of _sys_data_init is never used
  5976                           
  5977                           
  5978                           	psect	text4
  5979  1001                     __ptext4:	
  5980 ;; *************** function _my_flash_system_read *****************
  5981 ;; Defined at:
  5982 ;;		line 23 in file "src/api/sysData.c"
  5983 ;; Parameters:    Size  Location     Type
  5984 ;;  buf             2    3[COMMON] PTR unsigned char 
  5985 ;;		 -> sysData(132), 
  5986 ;;  len             2    5[COMMON] unsigned int 
  5987 ;; Auto vars:     Size  Location     Type
  5988 ;;  i               2    5[BANK0 ] unsigned int 
  5989 ;;  flashAddr       2    3[BANK0 ] unsigned int 
  5990 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  1    wreg      void 
  5993 ;; Registers used:
  5994 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6000 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6001 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6002 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6003 ;;      Totals:         4       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6004 ;;Total ram usage:       11 bytes
  6005 ;; Hardware stack levels used:    1
  6006 ;; Hardware stack levels required when called:    1
  6007 ;; This function calls:
  6008 ;;		Nothing
  6009 ;; This function is called by:
  6010 ;;		_sys_data_init
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           
  6015                           ;psect for function _my_flash_system_read
  6016  1001                     _my_flash_system_read:	
  6017                           
  6018                           ;sysData.c: 25: uint16_t flashAddr=0x1f00;
  6019                           
  6020                           ;incstack = 0
  6021                           ; Regs used in _my_flash_system_read: [wreg+fsr1l+fsr1h+status,2+status,0]
  6022  1001  3000               	movlw	0
  6023  1002  0020               	movlb	0	; select bank0
  6024  1003  00A3               	movwf	my_flash_system_read@flashAddr
  6025  1004  301F               	movlw	31
  6026  1005  00A4               	movwf	my_flash_system_read@flashAddr+1
  6027                           
  6028                           ;sysData.c: 26: uint16_t i;
  6029                           ;sysData.c: 28: uint8_t GIEBitValue = INTCONbits.GIE;
  6030  1006  3000               	movlw	0
  6031  1007  1B8B               	btfsc	11,7	;volatile
  6032  1008  3001               	movlw	1
  6033  1009  00A2               	movwf	my_flash_system_read@GIEBitValue
  6034                           
  6035                           ;sysData.c: 30: INTCONbits.GIE = 0;
  6036  100A  138B               	bcf	11,7	;volatile
  6037                           
  6038                           ;sysData.c: 32: for(i=0;i<len;i++){
  6039  100B  01A5               	clrf	my_flash_system_read@i
  6040  100C  01A6               	clrf	my_flash_system_read@i+1
  6041  100D                     l5105:	
  6042  100D  0876               	movf	my_flash_system_read@len+1,w
  6043  100E  0226               	subwf	my_flash_system_read@i+1,w
  6044  100F  1D03               	skipz
  6045  1010  2813               	goto	u4415
  6046  1011  0875               	movf	my_flash_system_read@len,w
  6047  1012  0225               	subwf	my_flash_system_read@i,w
  6048  1013                     u4415:	
  6049  1013  1803               	btfsc	3,0
  6050  1014  2838               	goto	l5107
  6051                           
  6052                           ;sysData.c: 34: PMADRL = (flashAddr & 0x00FF);
  6053  1015  0823               	movf	my_flash_system_read@flashAddr,w
  6054  1016  0023               	movlb	3	; select bank3
  6055  1017  0091               	movwf	17	;volatile
  6056                           
  6057                           ;sysData.c: 35: PMADRH = ((flashAddr & 0xFF00) >> 8);
  6058  1018  0020               	movlb	0	; select bank0
  6059  1019  0824               	movf	my_flash_system_read@flashAddr+1,w
  6060  101A  0023               	movlb	3	; select bank3
  6061  101B  0092               	movwf	18	;volatile
  6062                           
  6063                           ;sysData.c: 37: PMCON1bits.CFGS = 0;
  6064  101C  1315               	bcf	21,6	;volatile
  6065                           
  6066                           ;sysData.c: 38: PMCON1bits.RD = 1;
  6067  101D  1415               	bsf	21,0	;volatile
  6068                           
  6069                           ;sysData.c: 39: __nop();
  6070  101E  0000               	nop
  6071                           
  6072                           ;sysData.c: 40: __nop();
  6073  101F  0000               	nop
  6074                           
  6075                           ;sysData.c: 41: buf[i]=PMDATL;
  6076  1020  0020               	movlb	0	; select bank0
  6077  1021  0825               	movf	my_flash_system_read@i,w
  6078  1022  0773               	addwf	my_flash_system_read@buf,w
  6079  1023  00A0               	movwf	??_my_flash_system_read
  6080  1024  0826               	movf	my_flash_system_read@i+1,w
  6081  1025  3D74               	addwfc	my_flash_system_read@buf+1,w
  6082  1026  00A1               	movwf	??_my_flash_system_read+1
  6083  1027  0820               	movf	??_my_flash_system_read,w
  6084  1028  0086               	movwf	6
  6085  1029  0821               	movf	??_my_flash_system_read+1,w
  6086  102A  0087               	movwf	7
  6087  102B  0023               	movlb	3	; select bank3
  6088  102C  0813               	movf	19,w	;volatile
  6089  102D  0081               	movwf	1
  6090                           
  6091                           ;sysData.c: 42: flashAddr++;
  6092  102E  3001               	movlw	1
  6093  102F  0020               	movlb	0	; select bank0
  6094  1030  07A3               	addwf	my_flash_system_read@flashAddr,f
  6095  1031  3000               	movlw	0
  6096  1032  3DA4               	addwfc	my_flash_system_read@flashAddr+1,f
  6097  1033  3001               	movlw	1
  6098  1034  07A5               	addwf	my_flash_system_read@i,f
  6099  1035  3000               	movlw	0
  6100  1036  3DA6               	addwfc	my_flash_system_read@i+1,f
  6101  1037  280D               	goto	l5105
  6102  1038                     l5107:	
  6103                           
  6104                           ;sysData.c: 43: }
  6105                           ;sysData.c: 44: INTCONbits.GIE = GIEBitValue;
  6106  1038  0C22               	rrf	my_flash_system_read@GIEBitValue,w
  6107  1039  1C03               	skipc
  6108  103A  138B               	bcf	11,7	;volatile
  6109  103B  1803               	skipnc
  6110  103C  178B               	bsf	11,7	;volatile
  6111  103D  0008               	return
  6112  103E                     __end_of_my_flash_system_read:	
  6113                           
  6114                           	psect	text5
  6115  12C9                     __ptext5:	
  6116 ;; *************** function _pid_pwm2_vout_run *****************
  6117 ;; Defined at:
  6118 ;;		line 351 in file "src/api/sample.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;		None
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;  t16             2   13[BANK0 ] int 
  6123 ;;  ei              2   11[BANK0 ] int 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  1    wreg      void 
  6126 ;; Registers used:
  6127 ;;		wreg, status,2, status,0, pclath, cstack
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6134 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6135 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6136 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6137 ;;Total ram usage:        6 bytes
  6138 ;; Hardware stack levels used:    1
  6139 ;; Hardware stack levels required when called:    3
  6140 ;; This function calls:
  6141 ;;		___awdiv
  6142 ;;		___lwdiv
  6143 ;;		_set_vout_pwm2_duty
  6144 ;; This function is called by:
  6145 ;;		_main
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           
  6150                           ;psect for function _pid_pwm2_vout_run
  6151  12C9                     _pid_pwm2_vout_run:	
  6152                           
  6153                           ;sample.c: 353: int16_t t16,ei;
  6154                           ;sample.c: 354: t16=voExpectAdcValue-rtAdcValueVoFb;
  6155                           
  6156                           ;incstack = 0
  6157                           ; Regs used in _pid_pwm2_vout_run: [wreg+status,2+status,0+pclath+cstack]
  6158  12C9  0021               	movlb	1	; select bank1
  6159  12CA  0950               	comf	_rtAdcValueVoFb^(0+128),w
  6160  12CB  0020               	movlb	0	; select bank0
  6161  12CC  00A9               	movwf	??_pid_pwm2_vout_run
  6162  12CD  0021               	movlb	1	; select bank1
  6163  12CE  0951               	comf	(_rtAdcValueVoFb+1)^(0+128),w
  6164  12CF  0020               	movlb	0	; select bank0
  6165  12D0  00AA               	movwf	??_pid_pwm2_vout_run+1
  6166  12D1  0AA9               	incf	??_pid_pwm2_vout_run,f
  6167  12D2  1903               	skipnz
  6168  12D3  0AAA               	incf	??_pid_pwm2_vout_run+1,f
  6169  12D4  0860               	movf	_voExpectAdcValue,w
  6170  12D5  0729               	addwf	??_pid_pwm2_vout_run,w
  6171  12D6  00AD               	movwf	pid_pwm2_vout_run@t16
  6172  12D7  0861               	movf	_voExpectAdcValue+1,w
  6173  12D8  3D2A               	addwfc	??_pid_pwm2_vout_run+1,w
  6174  12D9  00AE               	movwf	pid_pwm2_vout_run@t16+1
  6175                           
  6176                           ;sample.c: 355: ei=t16/150;
  6177  12DA  3096               	movlw	150
  6178  12DB  00F3               	movwf	___awdiv@divisor
  6179  12DC  3000               	movlw	0
  6180  12DD  00F4               	movwf	___awdiv@divisor+1
  6181  12DE  082E               	movf	pid_pwm2_vout_run@t16+1,w
  6182  12DF  00F6               	movwf	___awdiv@dividend+1
  6183  12E0  082D               	movf	pid_pwm2_vout_run@t16,w
  6184  12E1  00F5               	movwf	___awdiv@dividend
  6185  12E2  319D  2553  3192   	fcall	___awdiv
  6186  12E5  0874               	movf	?___awdiv+1,w
  6187  12E6  0020               	movlb	0	; select bank0
  6188  12E7  00AC               	movwf	pid_pwm2_vout_run@ei+1
  6189  12E8  0873               	movf	?___awdiv,w
  6190  12E9  00AB               	movwf	pid_pwm2_vout_run@ei
  6191                           
  6192                           ;sample.c: 356: if(ei==0){
  6193  12EA  082B               	movf	pid_pwm2_vout_run@ei,w
  6194  12EB  042C               	iorwf	pid_pwm2_vout_run@ei+1,w
  6195  12EC  1D03               	btfss	3,2
  6196  12ED  2B0F               	goto	l5553
  6197                           
  6198                           ;sample.c: 357: if(t16>16)ei=1;
  6199  12EE  082E               	movf	pid_pwm2_vout_run@t16+1,w
  6200  12EF  3A80               	xorlw	128
  6201  12F0  00A9               	movwf	??_pid_pwm2_vout_run
  6202  12F1  3080               	movlw	128
  6203  12F2  0229               	subwf	??_pid_pwm2_vout_run,w
  6204  12F3  1D03               	skipz
  6205  12F4  2AF7               	goto	u5145
  6206  12F5  3011               	movlw	17
  6207  12F6  022D               	subwf	pid_pwm2_vout_run@t16,w
  6208  12F7                     u5145:	
  6209  12F7  1C03               	skipc
  6210  12F8  2AFE               	goto	l700
  6211  12F9  3001               	movlw	1
  6212  12FA  0020               	movlb	0	; select bank0
  6213  12FB  00AB               	movwf	pid_pwm2_vout_run@ei
  6214  12FC  3000               	movlw	0
  6215  12FD  00AC               	movwf	pid_pwm2_vout_run@ei+1
  6216  12FE                     l700:	
  6217                           
  6218                           ;sample.c: 358: if(t16<-16)ei=-1;
  6219  12FE  0020               	movlb	0	; select bank0
  6220  12FF  082E               	movf	pid_pwm2_vout_run@t16+1,w
  6221  1300  3A80               	xorlw	128
  6222  1301  00A9               	movwf	??_pid_pwm2_vout_run
  6223  1302  307F               	movlw	127
  6224  1303  0229               	subwf	??_pid_pwm2_vout_run,w
  6225  1304  1D03               	skipz
  6226  1305  2B08               	goto	u5155
  6227  1306  30F0               	movlw	240
  6228  1307  022D               	subwf	pid_pwm2_vout_run@t16,w
  6229  1308                     u5155:	
  6230  1308  1803               	skipnc
  6231  1309  2B0F               	goto	l5553
  6232  130A  30FF               	movlw	255
  6233  130B  0020               	movlb	0	; select bank0
  6234  130C  00AB               	movwf	pid_pwm2_vout_run@ei
  6235  130D  30FF               	movlw	255
  6236  130E  00AC               	movwf	pid_pwm2_vout_run@ei+1
  6237  130F                     l5553:	
  6238                           
  6239                           ;sample.c: 359: }
  6240                           ;sample.c: 361: pwm2Ei=pwm2Ei+ei;
  6241  130F  0020               	movlb	0	; select bank0
  6242  1310  082B               	movf	pid_pwm2_vout_run@ei,w
  6243  1311  0021               	movlb	1	; select bank1
  6244  1312  0744               	addwf	_pwm2Ei^(0+128),w
  6245  1313  00C4               	movwf	_pwm2Ei^(0+128)
  6246  1314  0020               	movlb	0	; select bank0
  6247  1315  082C               	movf	pid_pwm2_vout_run@ei+1,w
  6248  1316  0021               	movlb	1	; select bank1
  6249  1317  3D45               	addwfc	(_pwm2Ei+1)^(0+128),w
  6250  1318  00C5               	movwf	(_pwm2Ei+1)^(0+128)
  6251                           
  6252                           ;sample.c: 365: t16=voExpectAdcValue/10;
  6253  1319  300A               	movlw	10
  6254  131A  0020               	movlb	0	; select bank0
  6255  131B  00A2               	movwf	___lwdiv@divisor
  6256  131C  3000               	movlw	0
  6257  131D  00A3               	movwf	___lwdiv@divisor+1
  6258  131E  0861               	movf	_voExpectAdcValue+1,w
  6259  131F  00A5               	movwf	___lwdiv@dividend+1
  6260  1320  0860               	movf	_voExpectAdcValue,w
  6261  1321  00A4               	movwf	___lwdiv@dividend
  6262  1322  319C  242F  3192   	fcall	___lwdiv
  6263  1325  0020               	movlb	0	; select bank0
  6264  1326  0823               	movf	?___lwdiv+1,w
  6265  1327  00AE               	movwf	pid_pwm2_vout_run@t16+1
  6266  1328  0822               	movf	?___lwdiv,w
  6267  1329  00AD               	movwf	pid_pwm2_vout_run@t16
  6268                           
  6269                           ;sample.c: 367: t16=t16+pwm2Ei;
  6270  132A  0021               	movlb	1	; select bank1
  6271  132B  0844               	movf	_pwm2Ei^(0+128),w
  6272  132C  0020               	movlb	0	; select bank0
  6273  132D  072D               	addwf	pid_pwm2_vout_run@t16,w
  6274  132E  00AD               	movwf	pid_pwm2_vout_run@t16
  6275  132F  0021               	movlb	1	; select bank1
  6276  1330  0845               	movf	(_pwm2Ei+1)^(0+128),w
  6277  1331  0020               	movlb	0	; select bank0
  6278  1332  3D2E               	addwfc	pid_pwm2_vout_run@t16+1,w
  6279  1333  00AE               	movwf	pid_pwm2_vout_run@t16+1
  6280                           
  6281                           ;sample.c: 368: if(t16>1580)t16=1580;
  6282  1334  082E               	movf	pid_pwm2_vout_run@t16+1,w
  6283  1335  3A80               	xorlw	128
  6284  1336  00A9               	movwf	??_pid_pwm2_vout_run
  6285  1337  3086               	movlw	134
  6286  1338  0229               	subwf	??_pid_pwm2_vout_run,w
  6287  1339  1D03               	skipz
  6288  133A  2B3D               	goto	u5165
  6289  133B  302D               	movlw	45
  6290  133C  022D               	subwf	pid_pwm2_vout_run@t16,w
  6291  133D                     u5165:	
  6292  133D  1C03               	skipc
  6293  133E  2B44               	goto	l702
  6294  133F  302C               	movlw	44
  6295  1340  0020               	movlb	0	; select bank0
  6296  1341  00AD               	movwf	pid_pwm2_vout_run@t16
  6297  1342  3006               	movlw	6
  6298  1343  00AE               	movwf	pid_pwm2_vout_run@t16+1
  6299  1344                     l702:	
  6300                           
  6301                           ;sample.c: 369: if(t16<5)t16=5;
  6302  1344  0020               	movlb	0	; select bank0
  6303  1345  082E               	movf	pid_pwm2_vout_run@t16+1,w
  6304  1346  3A80               	xorlw	128
  6305  1347  00A9               	movwf	??_pid_pwm2_vout_run
  6306  1348  3080               	movlw	128
  6307  1349  0229               	subwf	??_pid_pwm2_vout_run,w
  6308  134A  1D03               	skipz
  6309  134B  2B4E               	goto	u5175
  6310  134C  3005               	movlw	5
  6311  134D  022D               	subwf	pid_pwm2_vout_run@t16,w
  6312  134E                     u5175:	
  6313  134E  1803               	skipnc
  6314  134F  2B55               	goto	l5565
  6315  1350  3005               	movlw	5
  6316  1351  0020               	movlb	0	; select bank0
  6317  1352  00AD               	movwf	pid_pwm2_vout_run@t16
  6318  1353  3000               	movlw	0
  6319  1354  00AE               	movwf	pid_pwm2_vout_run@t16+1
  6320  1355                     l5565:	
  6321                           
  6322                           ;sample.c: 370: set_vout_pwm2_duty((uint16_t)t16);
  6323  1355  0020               	movlb	0	; select bank0
  6324  1356  082E               	movf	pid_pwm2_vout_run@t16+1,w
  6325  1357  00A3               	movwf	set_vout_pwm2_duty@duty+1
  6326  1358  082D               	movf	pid_pwm2_vout_run@t16,w
  6327  1359  00A2               	movwf	set_vout_pwm2_duty@duty
  6328  135A  319B  235D         	fcall	_set_vout_pwm2_duty
  6329  135C  0008               	return
  6330  135D                     __end_of_pid_pwm2_vout_run:	
  6331                           
  6332                           	psect	text6
  6333  1B5D                     __ptext6:	
  6334 ;; *************** function _set_vout_pwm2_duty *****************
  6335 ;; Defined at:
  6336 ;;		line 101 in file "src/api/sample.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  duty            2    2[BANK0 ] unsigned int 
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;  t16             2    4[BANK0 ] unsigned int 
  6341 ;; Return value:  Size  Location     Type
  6342 ;;                  1    wreg      void 
  6343 ;; Registers used:
  6344 ;;		wreg, status,2, pclath, cstack
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6350 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6351 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6353 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6354 ;;Total ram usage:        4 bytes
  6355 ;; Hardware stack levels used:    1
  6356 ;; Hardware stack levels required when called:    2
  6357 ;; This function calls:
  6358 ;;		_get_vout_pwm2_duty
  6359 ;; This function is called by:
  6360 ;;		_pid_pwm2_vout_run
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           
  6365                           ;psect for function _set_vout_pwm2_duty
  6366  1B5D                     _set_vout_pwm2_duty:	
  6367                           
  6368                           ;sample.c: 104: uint16_t t16;
  6369                           ;sample.c: 105: pwm2DutyForVout=duty;
  6370                           
  6371                           ;incstack = 0
  6372                           ; Regs used in _set_vout_pwm2_duty: [wreg+status,2+pclath+cstack]
  6373  1B5D  0020               	movlb	0	; select bank0
  6374  1B5E  0823               	movf	set_vout_pwm2_duty@duty+1,w
  6375  1B5F  0021               	movlb	1	; select bank1
  6376  1B60  00E9               	movwf	(_pwm2DutyForVout+1)^(0+128)
  6377  1B61  0020               	movlb	0	; select bank0
  6378  1B62  0822               	movf	set_vout_pwm2_duty@duty,w
  6379  1B63  0021               	movlb	1	; select bank1
  6380  1B64  00E8               	movwf	_pwm2DutyForVout^(0+128)
  6381                           
  6382                           ;sample.c: 106: t16=get_vout_pwm2_duty();
  6383  1B65  319A  229A  319B   	fcall	_get_vout_pwm2_duty
  6384  1B68  0874               	movf	?_get_vout_pwm2_duty+1,w
  6385  1B69  0020               	movlb	0	; select bank0
  6386  1B6A  00A5               	movwf	set_vout_pwm2_duty@t16+1
  6387  1B6B  0873               	movf	?_get_vout_pwm2_duty,w
  6388  1B6C  00A4               	movwf	set_vout_pwm2_duty@t16
  6389                           
  6390                           ;sample.c: 107: if(t16==duty)return;
  6391  1B6D  0823               	movf	set_vout_pwm2_duty@duty+1,w
  6392  1B6E  0625               	xorwf	set_vout_pwm2_duty@t16+1,w
  6393  1B6F  1D03               	skipz
  6394  1B70  2B73               	goto	u4405
  6395  1B71  0822               	movf	set_vout_pwm2_duty@duty,w
  6396  1B72  0624               	xorwf	set_vout_pwm2_duty@t16,w
  6397  1B73                     u4405:	
  6398  1B73  1903               	btfsc	3,2
  6399  1B74  0008               	return
  6400                           
  6401                           ;sample.c: 111: PWM2CONbits.EN = 0;
  6402  1B75  003B               	movlb	27	; select bank27
  6403  1B76  13AB               	bcf	43,7	;volatile
  6404                           
  6405                           ;sample.c: 112: PWM2DCL= (uint8_t)(duty&0xff);
  6406  1B77  0020               	movlb	0	; select bank0
  6407  1B78  0822               	movf	set_vout_pwm2_duty@duty,w
  6408  1B79  003B               	movlb	27	; select bank27
  6409  1B7A  00A3               	movwf	35	;volatile
  6410                           
  6411                           ;sample.c: 113: PWM2DCH=(uint8_t)(duty>>8);
  6412  1B7B  0020               	movlb	0	; select bank0
  6413  1B7C  0823               	movf	set_vout_pwm2_duty@duty+1,w
  6414  1B7D  003B               	movlb	27	; select bank27
  6415  1B7E  00A4               	movwf	36	;volatile
  6416                           
  6417                           ;sample.c: 114: PWM2CONbits.EN = 1;
  6418  1B7F  17AB               	bsf	43,7	;volatile
  6419  1B80  0008               	return
  6420  1B81                     __end_of_set_vout_pwm2_duty:	
  6421                           
  6422                           	psect	text7
  6423  1A9A                     __ptext7:	
  6424 ;; *************** function _get_vout_pwm2_duty *****************
  6425 ;; Defined at:
  6426 ;;		line 92 in file "src/api/sample.c"
  6427 ;; Parameters:    Size  Location     Type
  6428 ;;		None
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;  t16             2    0[BANK0 ] unsigned int 
  6431 ;; Return value:  Size  Location     Type
  6432 ;;                  2    3[COMMON] unsigned int 
  6433 ;; Registers used:
  6434 ;;		wreg
  6435 ;; Tracked objects:
  6436 ;;		On entry : 0/0
  6437 ;;		On exit  : 0/0
  6438 ;;		Unchanged: 0/0
  6439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6440 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6441 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6442 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6443 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6444 ;;Total ram usage:        6 bytes
  6445 ;; Hardware stack levels used:    1
  6446 ;; Hardware stack levels required when called:    1
  6447 ;; This function calls:
  6448 ;;		Nothing
  6449 ;; This function is called by:
  6450 ;;		_set_vout_pwm2_duty
  6451 ;; This function uses a non-reentrant model
  6452 ;;
  6453                           
  6454                           
  6455                           ;psect for function _get_vout_pwm2_duty
  6456  1A9A                     _get_vout_pwm2_duty:	
  6457                           
  6458                           ;sample.c: 95: uint16_t t16=PWM2DCH;
  6459                           
  6460                           ;incstack = 0
  6461                           ; Regs used in _get_vout_pwm2_duty: [wreg]
  6462  1A9A  003B               	movlb	27	; select bank27
  6463  1A9B  0824               	movf	36,w	;volatile
  6464  1A9C  00F5               	movwf	??_get_vout_pwm2_duty
  6465  1A9D  01F6               	clrf	??_get_vout_pwm2_duty+1
  6466  1A9E  0875               	movf	??_get_vout_pwm2_duty,w
  6467  1A9F  0020               	movlb	0	; select bank0
  6468  1AA0  00A0               	movwf	get_vout_pwm2_duty@t16
  6469  1AA1  0876               	movf	??_get_vout_pwm2_duty+1,w
  6470  1AA2  00A1               	movwf	get_vout_pwm2_duty@t16+1
  6471                           
  6472                           ;sample.c: 96: t16<<=8;
  6473  1AA3  3008               	movlw	8
  6474  1AA4                     u4345:	
  6475  1AA4  35A0               	lslf	get_vout_pwm2_duty@t16,f
  6476  1AA5  0DA1               	rlf	get_vout_pwm2_duty@t16+1,f
  6477  1AA6  0B89               	decfsz	9,f
  6478  1AA7  2AA4               	goto	u4345
  6479                           
  6480                           ;sample.c: 97: t16|=PWM2DCL;
  6481  1AA8  003B               	movlb	27	; select bank27
  6482  1AA9  0823               	movf	35,w	;volatile
  6483  1AAA  00F5               	movwf	??_get_vout_pwm2_duty
  6484  1AAB  01F6               	clrf	??_get_vout_pwm2_duty+1
  6485  1AAC  0875               	movf	??_get_vout_pwm2_duty,w
  6486  1AAD  0020               	movlb	0	; select bank0
  6487  1AAE  04A0               	iorwf	get_vout_pwm2_duty@t16,f
  6488  1AAF  0876               	movf	??_get_vout_pwm2_duty+1,w
  6489  1AB0  04A1               	iorwf	get_vout_pwm2_duty@t16+1,f
  6490                           
  6491                           ;sample.c: 98: return t16;
  6492  1AB1  0821               	movf	get_vout_pwm2_duty@t16+1,w
  6493  1AB2  00F4               	movwf	?_get_vout_pwm2_duty+1
  6494  1AB3  0820               	movf	get_vout_pwm2_duty@t16,w
  6495  1AB4  00F3               	movwf	?_get_vout_pwm2_duty
  6496  1AB5  0008               	return
  6497  1AB6                     __end_of_get_vout_pwm2_duty:	
  6498                           
  6499                           	psect	text8
  6500  1D53                     __ptext8:	
  6501 ;; *************** function ___awdiv *****************
  6502 ;; Defined at:
  6503 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;  divisor         2    3[COMMON] int 
  6506 ;;  dividend        2    5[COMMON] int 
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;  quotient        2    2[BANK0 ] int 
  6509 ;;  sign            1    1[BANK0 ] unsigned char 
  6510 ;;  counter         1    0[BANK0 ] unsigned char 
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  2    3[COMMON] int 
  6513 ;; Registers used:
  6514 ;;		wreg, status,2, status,0
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6520 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6521 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6522 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6523 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6524 ;;Total ram usage:        9 bytes
  6525 ;; Hardware stack levels used:    1
  6526 ;; Hardware stack levels required when called:    1
  6527 ;; This function calls:
  6528 ;;		Nothing
  6529 ;; This function is called by:
  6530 ;;		_pid_pwm2_vout_run
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534                           
  6535                           ;psect for function ___awdiv
  6536  1D53                     ___awdiv:	
  6537                           
  6538                           ;incstack = 0
  6539                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6540  1D53  0020               	movlb	0	; select bank0
  6541  1D54  01A1               	clrf	___awdiv@sign
  6542  1D55  1FF4               	btfss	___awdiv@divisor+1,7
  6543  1D56  2D5E               	goto	l4031
  6544  1D57  09F3               	comf	___awdiv@divisor,f
  6545  1D58  09F4               	comf	___awdiv@divisor+1,f
  6546  1D59  0AF3               	incf	___awdiv@divisor,f
  6547  1D5A  1903               	skipnz
  6548  1D5B  0AF4               	incf	___awdiv@divisor+1,f
  6549  1D5C  01A1               	clrf	___awdiv@sign
  6550  1D5D  0AA1               	incf	___awdiv@sign,f
  6551  1D5E                     l4031:	
  6552  1D5E  1FF6               	btfss	___awdiv@dividend+1,7
  6553  1D5F  2D69               	goto	l4037
  6554  1D60  09F5               	comf	___awdiv@dividend,f
  6555  1D61  09F6               	comf	___awdiv@dividend+1,f
  6556  1D62  0AF5               	incf	___awdiv@dividend,f
  6557  1D63  1903               	skipnz
  6558  1D64  0AF6               	incf	___awdiv@dividend+1,f
  6559  1D65  3001               	movlw	1
  6560  1D66  00F7               	movwf	??___awdiv
  6561  1D67  0877               	movf	??___awdiv,w
  6562  1D68  06A1               	xorwf	___awdiv@sign,f
  6563  1D69                     l4037:	
  6564  1D69  01A2               	clrf	___awdiv@quotient
  6565  1D6A  01A3               	clrf	___awdiv@quotient+1
  6566  1D6B  0873               	movf	___awdiv@divisor,w
  6567  1D6C  0474               	iorwf	___awdiv@divisor+1,w
  6568  1D6D  1903               	btfsc	3,2
  6569  1D6E  2D98               	goto	l4059
  6570  1D6F  01A0               	clrf	___awdiv@counter
  6571  1D70  0AA0               	incf	___awdiv@counter,f
  6572  1D71                     l4047:	
  6573  1D71  1BF4               	btfsc	___awdiv@divisor+1,7
  6574  1D72  2D7D               	goto	l4049
  6575  1D73  3001               	movlw	1
  6576  1D74                     u3035:	
  6577  1D74  35F3               	lslf	___awdiv@divisor,f
  6578  1D75  0DF4               	rlf	___awdiv@divisor+1,f
  6579  1D76  0B89               	decfsz	9,f
  6580  1D77  2D74               	goto	u3035
  6581  1D78  3001               	movlw	1
  6582  1D79  00F7               	movwf	??___awdiv
  6583  1D7A  0877               	movf	??___awdiv,w
  6584  1D7B  07A0               	addwf	___awdiv@counter,f
  6585  1D7C  2D71               	goto	l4047
  6586  1D7D                     l4049:	
  6587  1D7D  3001               	movlw	1
  6588  1D7E                     u3055:	
  6589  1D7E  35A2               	lslf	___awdiv@quotient,f
  6590  1D7F  0DA3               	rlf	___awdiv@quotient+1,f
  6591  1D80  0B89               	decfsz	9,f
  6592  1D81  2D7E               	goto	u3055
  6593  1D82  0874               	movf	___awdiv@divisor+1,w
  6594  1D83  0276               	subwf	___awdiv@dividend+1,w
  6595  1D84  1D03               	skipz
  6596  1D85  2D88               	goto	u3065
  6597  1D86  0873               	movf	___awdiv@divisor,w
  6598  1D87  0275               	subwf	___awdiv@dividend,w
  6599  1D88                     u3065:	
  6600  1D88  1C03               	skipc
  6601  1D89  2D8F               	goto	l4055
  6602  1D8A  0873               	movf	___awdiv@divisor,w
  6603  1D8B  02F5               	subwf	___awdiv@dividend,f
  6604  1D8C  0874               	movf	___awdiv@divisor+1,w
  6605  1D8D  3BF6               	subwfb	___awdiv@dividend+1,f
  6606  1D8E  1422               	bsf	___awdiv@quotient,0
  6607  1D8F                     l4055:	
  6608  1D8F  3001               	movlw	1
  6609  1D90                     u3075:	
  6610  1D90  36F4               	lsrf	___awdiv@divisor+1,f
  6611  1D91  0CF3               	rrf	___awdiv@divisor,f
  6612  1D92  0B89               	decfsz	9,f
  6613  1D93  2D90               	goto	u3075
  6614  1D94  3001               	movlw	1
  6615  1D95  02A0               	subwf	___awdiv@counter,f
  6616  1D96  1D03               	btfss	3,2
  6617  1D97  2D7D               	goto	l4049
  6618  1D98                     l4059:	
  6619  1D98  0821               	movf	___awdiv@sign,w
  6620  1D99  1903               	btfsc	3,2
  6621  1D9A  2DA0               	goto	l4063
  6622  1D9B  09A2               	comf	___awdiv@quotient,f
  6623  1D9C  09A3               	comf	___awdiv@quotient+1,f
  6624  1D9D  0AA2               	incf	___awdiv@quotient,f
  6625  1D9E  1903               	skipnz
  6626  1D9F  0AA3               	incf	___awdiv@quotient+1,f
  6627  1DA0                     l4063:	
  6628  1DA0  0823               	movf	___awdiv@quotient+1,w
  6629  1DA1  00F4               	movwf	?___awdiv+1
  6630  1DA2  0822               	movf	___awdiv@quotient,w
  6631  1DA3  00F3               	movwf	?___awdiv
  6632  1DA4  0008               	return
  6633  1DA5                     __end_of___awdiv:	
  6634                           
  6635                           	psect	text9
  6636  1691                     __ptext9:	
  6637 ;; *************** function _pid_pwm1_idrv_run *****************
  6638 ;; Defined at:
  6639 ;;		line 321 in file "src/api/sample.c"
  6640 ;; Parameters:    Size  Location     Type
  6641 ;;		None
  6642 ;; Auto vars:     Size  Location     Type
  6643 ;;  t32             4   38[BANK0 ] long 
  6644 ;;  ei              4   34[BANK0 ] long 
  6645 ;;  ep              4   30[BANK0 ] long 
  6646 ;;  ed              4    0        long 
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  1    wreg      void 
  6649 ;; Registers used:
  6650 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6657 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6658 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6659 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6660 ;;Total ram usage:       20 bytes
  6661 ;; Hardware stack levels used:    1
  6662 ;; Hardware stack levels required when called:    3
  6663 ;; This function calls:
  6664 ;;		___aldiv
  6665 ;;		___lmul
  6666 ;;		_set_idrv_pwm1_duty
  6667 ;; This function is called by:
  6668 ;;		_main
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           
  6673                           ;psect for function _pid_pwm1_idrv_run
  6674  1691                     _pid_pwm1_idrv_run:	
  6675                           
  6676                           ;sample.c: 324: int32_t ep,ei,ed;
  6677                           ;sample.c: 325: int32_t t32;
  6678                           ;sample.c: 326: t32=((int32_t)resRs-(int32_t)resRc);
  6679                           
  6680                           ;incstack = 0
  6681                           ; Regs used in _pid_pwm1_idrv_run: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6682  1691  0020               	movlb	0	; select bank0
  6683  1692  086E               	movf	_resRc,w
  6684  1693  00B6               	movwf	??_pid_pwm1_idrv_run
  6685  1694  086F               	movf	_resRc+1,w
  6686  1695  00B7               	movwf	??_pid_pwm1_idrv_run+1
  6687  1696  01B8               	clrf	??_pid_pwm1_idrv_run+2
  6688  1697  01B9               	clrf	??_pid_pwm1_idrv_run+3
  6689  1698  09B6               	comf	??_pid_pwm1_idrv_run,f
  6690  1699  09B7               	comf	??_pid_pwm1_idrv_run+1,f
  6691  169A  09B8               	comf	??_pid_pwm1_idrv_run+2,f
  6692  169B  09B9               	comf	??_pid_pwm1_idrv_run+3,f
  6693  169C  0AB6               	incf	??_pid_pwm1_idrv_run,f
  6694  169D  1903               	skipnz
  6695  169E  0AB7               	incf	??_pid_pwm1_idrv_run+1,f
  6696  169F  1903               	skipnz
  6697  16A0  0AB8               	incf	??_pid_pwm1_idrv_run+2,f
  6698  16A1  1903               	skipnz
  6699  16A2  0AB9               	incf	??_pid_pwm1_idrv_run+3,f
  6700  16A3  086C               	movf	_resRs,w
  6701  16A4  00BA               	movwf	??_pid_pwm1_idrv_run+4
  6702  16A5  086D               	movf	_resRs+1,w
  6703  16A6  00BB               	movwf	??_pid_pwm1_idrv_run+5
  6704  16A7  01BC               	clrf	??_pid_pwm1_idrv_run+6
  6705  16A8  01BD               	clrf	??_pid_pwm1_idrv_run+7
  6706  16A9  083A               	movf	??_pid_pwm1_idrv_run+4,w
  6707  16AA  07B6               	addwf	??_pid_pwm1_idrv_run,f
  6708  16AB  083B               	movf	??_pid_pwm1_idrv_run+5,w
  6709  16AC  3DB7               	addwfc	??_pid_pwm1_idrv_run+1,f
  6710  16AD  083C               	movf	??_pid_pwm1_idrv_run+6,w
  6711  16AE  3DB8               	addwfc	??_pid_pwm1_idrv_run+2,f
  6712  16AF  083D               	movf	??_pid_pwm1_idrv_run+7,w
  6713  16B0  3DB9               	addwfc	??_pid_pwm1_idrv_run+3,f
  6714  16B1  0839               	movf	??_pid_pwm1_idrv_run+3,w
  6715  16B2  00C9               	movwf	pid_pwm1_idrv_run@t32+3
  6716  16B3  0838               	movf	??_pid_pwm1_idrv_run+2,w
  6717  16B4  00C8               	movwf	pid_pwm1_idrv_run@t32+2
  6718  16B5  0837               	movf	??_pid_pwm1_idrv_run+1,w
  6719  16B6  00C7               	movwf	pid_pwm1_idrv_run@t32+1
  6720  16B7  0836               	movf	??_pid_pwm1_idrv_run,w
  6721  16B8  00C6               	movwf	pid_pwm1_idrv_run@t32
  6722                           
  6723                           ;sample.c: 327: t32=2000-t32;
  6724  16B9  30D0               	movlw	208
  6725  16BA  00B6               	movwf	??_pid_pwm1_idrv_run
  6726  16BB  3007               	movlw	7
  6727  16BC  00B7               	movwf	??_pid_pwm1_idrv_run+1
  6728  16BD  3000               	movlw	0
  6729  16BE  00B8               	movwf	??_pid_pwm1_idrv_run+2
  6730  16BF  3000               	movlw	0
  6731  16C0  00B9               	movwf	??_pid_pwm1_idrv_run+3
  6732  16C1  0946               	comf	pid_pwm1_idrv_run@t32,w
  6733  16C2  00BA               	movwf	??_pid_pwm1_idrv_run+4
  6734  16C3  0947               	comf	pid_pwm1_idrv_run@t32+1,w
  6735  16C4  00BB               	movwf	??_pid_pwm1_idrv_run+5
  6736  16C5  0948               	comf	pid_pwm1_idrv_run@t32+2,w
  6737  16C6  00BC               	movwf	??_pid_pwm1_idrv_run+6
  6738  16C7  0949               	comf	pid_pwm1_idrv_run@t32+3,w
  6739  16C8  00BD               	movwf	??_pid_pwm1_idrv_run+7
  6740  16C9  0ABA               	incf	??_pid_pwm1_idrv_run+4,f
  6741  16CA  1903               	skipnz
  6742  16CB  0ABB               	incf	??_pid_pwm1_idrv_run+5,f
  6743  16CC  1903               	skipnz
  6744  16CD  0ABC               	incf	??_pid_pwm1_idrv_run+6,f
  6745  16CE  1903               	skipnz
  6746  16CF  0ABD               	incf	??_pid_pwm1_idrv_run+7,f
  6747  16D0  083A               	movf	??_pid_pwm1_idrv_run+4,w
  6748  16D1  07B6               	addwf	??_pid_pwm1_idrv_run,f
  6749  16D2  083B               	movf	??_pid_pwm1_idrv_run+5,w
  6750  16D3  3DB7               	addwfc	??_pid_pwm1_idrv_run+1,f
  6751  16D4  083C               	movf	??_pid_pwm1_idrv_run+6,w
  6752  16D5  3DB8               	addwfc	??_pid_pwm1_idrv_run+2,f
  6753  16D6  083D               	movf	??_pid_pwm1_idrv_run+7,w
  6754  16D7  3DB9               	addwfc	??_pid_pwm1_idrv_run+3,f
  6755  16D8  0839               	movf	??_pid_pwm1_idrv_run+3,w
  6756  16D9  00C9               	movwf	pid_pwm1_idrv_run@t32+3
  6757  16DA  0838               	movf	??_pid_pwm1_idrv_run+2,w
  6758  16DB  00C8               	movwf	pid_pwm1_idrv_run@t32+2
  6759  16DC  0837               	movf	??_pid_pwm1_idrv_run+1,w
  6760  16DD  00C7               	movwf	pid_pwm1_idrv_run@t32+1
  6761  16DE  0836               	movf	??_pid_pwm1_idrv_run,w
  6762  16DF  00C6               	movwf	pid_pwm1_idrv_run@t32
  6763                           
  6764                           ;sample.c: 329: err[2]=err[1];
  6765  16E0  3004               	movlw	4
  6766  16E1  3EA0               	addlw	(low (_err| 0))& (0+255)
  6767  16E2  0086               	movwf	6
  6768  16E3  0187               	clrf	7
  6769  16E4  3F40               	moviw [0]fsr1
  6770  16E5  0021               	movlb	1	; select bank1
  6771  16E6  00A8               	movwf	(_err^(0+128)+8)
  6772  16E7  3F41               	moviw [1]fsr1
  6773  16E8  00A9               	movwf	((_err+1)^(0+128)+8)
  6774  16E9  3F42               	moviw [2]fsr1
  6775  16EA  00AA               	movwf	((_err+2)^(0+128)+8)
  6776  16EB  3F43               	moviw [3]fsr1
  6777  16EC  00AB               	movwf	((_err+3)^(0+128)+8)
  6778                           
  6779                           ;sample.c: 330: err[1]=err[0];
  6780  16ED  0823               	movf	(_err+3)^(0+128),w
  6781  16EE  00A7               	movwf	((_err+3)^(0+128)+4)
  6782  16EF  0822               	movf	(_err+2)^(0+128),w
  6783  16F0  00A6               	movwf	((_err+2)^(0+128)+4)
  6784  16F1  0821               	movf	(_err+1)^(0+128),w
  6785  16F2  00A5               	movwf	((_err+1)^(0+128)+4)
  6786  16F3  0820               	movf	_err^(0+128),w
  6787  16F4  00A4               	movwf	(_err^(0+128)+4)
  6788                           
  6789                           ;sample.c: 331: err[0]=t32;
  6790  16F5  0020               	movlb	0	; select bank0
  6791  16F6  0849               	movf	pid_pwm1_idrv_run@t32+3,w
  6792  16F7  0021               	movlb	1	; select bank1
  6793  16F8  00A3               	movwf	(_err+3)^(0+128)
  6794  16F9  0020               	movlb	0	; select bank0
  6795  16FA  0848               	movf	pid_pwm1_idrv_run@t32+2,w
  6796  16FB  0021               	movlb	1	; select bank1
  6797  16FC  00A2               	movwf	(_err+2)^(0+128)
  6798  16FD  0020               	movlb	0	; select bank0
  6799  16FE  0847               	movf	pid_pwm1_idrv_run@t32+1,w
  6800  16FF  0021               	movlb	1	; select bank1
  6801  1700  00A1               	movwf	(_err+1)^(0+128)
  6802  1701  0020               	movlb	0	; select bank0
  6803  1702  0846               	movf	pid_pwm1_idrv_run@t32,w
  6804  1703  0021               	movlb	1	; select bank1
  6805  1704  00A0               	movwf	_err^(0+128)
  6806                           
  6807                           ;sample.c: 334: ep=(err[0]-err[1])*PidKp;
  6808  1705  0820               	movf	_err^(0+128),w
  6809  1706  0020               	movlb	0	; select bank0
  6810  1707  00B6               	movwf	??_pid_pwm1_idrv_run
  6811  1708  0021               	movlb	1	; select bank1
  6812  1709  0821               	movf	(_err+1)^(0+128),w
  6813  170A  0020               	movlb	0	; select bank0
  6814  170B  00B7               	movwf	??_pid_pwm1_idrv_run+1
  6815  170C  0021               	movlb	1	; select bank1
  6816  170D  0822               	movf	(_err+2)^(0+128),w
  6817  170E  0020               	movlb	0	; select bank0
  6818  170F  00B8               	movwf	??_pid_pwm1_idrv_run+2
  6819  1710  0021               	movlb	1	; select bank1
  6820  1711  0823               	movf	(_err+3)^(0+128),w
  6821  1712  0020               	movlb	0	; select bank0
  6822  1713  00B9               	movwf	??_pid_pwm1_idrv_run+3
  6823  1714  0021               	movlb	1	; select bank1
  6824  1715  0924               	comf	(_err^(0+128)+4),w
  6825  1716  0020               	movlb	0	; select bank0
  6826  1717  00BA               	movwf	??_pid_pwm1_idrv_run+4
  6827  1718  0021               	movlb	1	; select bank1
  6828  1719  0925               	comf	((_err+1)^(0+128)+4),w
  6829  171A  0020               	movlb	0	; select bank0
  6830  171B  00BB               	movwf	??_pid_pwm1_idrv_run+5
  6831  171C  0021               	movlb	1	; select bank1
  6832  171D  0926               	comf	((_err+2)^(0+128)+4),w
  6833  171E  0020               	movlb	0	; select bank0
  6834  171F  00BC               	movwf	??_pid_pwm1_idrv_run+6
  6835  1720  0021               	movlb	1	; select bank1
  6836  1721  0927               	comf	((_err+3)^(0+128)+4),w
  6837  1722  0020               	movlb	0	; select bank0
  6838  1723  00BD               	movwf	??_pid_pwm1_idrv_run+7
  6839  1724  0ABA               	incf	??_pid_pwm1_idrv_run+4,f
  6840  1725  1903               	skipnz
  6841  1726  0ABB               	incf	??_pid_pwm1_idrv_run+5,f
  6842  1727  1903               	skipnz
  6843  1728  0ABC               	incf	??_pid_pwm1_idrv_run+6,f
  6844  1729  1903               	skipnz
  6845  172A  0ABD               	incf	??_pid_pwm1_idrv_run+7,f
  6846  172B  083A               	movf	??_pid_pwm1_idrv_run+4,w
  6847  172C  07B6               	addwf	??_pid_pwm1_idrv_run,f
  6848  172D  083B               	movf	??_pid_pwm1_idrv_run+5,w
  6849  172E  3DB7               	addwfc	??_pid_pwm1_idrv_run+1,f
  6850  172F  083C               	movf	??_pid_pwm1_idrv_run+6,w
  6851  1730  3DB8               	addwfc	??_pid_pwm1_idrv_run+2,f
  6852  1731  083D               	movf	??_pid_pwm1_idrv_run+7,w
  6853  1732  3DB9               	addwfc	??_pid_pwm1_idrv_run+3,f
  6854  1733  0839               	movf	??_pid_pwm1_idrv_run+3,w
  6855  1734  00A3               	movwf	___lmul@multiplier+3
  6856  1735  0838               	movf	??_pid_pwm1_idrv_run+2,w
  6857  1736  00A2               	movwf	___lmul@multiplier+2
  6858  1737  0837               	movf	??_pid_pwm1_idrv_run+1,w
  6859  1738  00A1               	movwf	___lmul@multiplier+1
  6860  1739  0836               	movf	??_pid_pwm1_idrv_run,w
  6861  173A  00A0               	movwf	___lmul@multiplier
  6862  173B  0862               	movf	_PidKp,w
  6863  173C  00A4               	movwf	___lmul@multiplicand
  6864  173D  0863               	movf	_PidKp+1,w
  6865  173E  00A5               	movwf	___lmul@multiplicand+1
  6866  173F  01A6               	clrf	___lmul@multiplicand+2
  6867  1740  01A7               	clrf	___lmul@multiplicand+3
  6868  1741  319B  23CE  3196   	fcall	___lmul
  6869  1744  0020               	movlb	0	; select bank0
  6870  1745  0823               	movf	?___lmul+3,w
  6871  1746  00C1               	movwf	pid_pwm1_idrv_run@ep+3
  6872  1747  0822               	movf	?___lmul+2,w
  6873  1748  00C0               	movwf	pid_pwm1_idrv_run@ep+2
  6874  1749  0821               	movf	?___lmul+1,w
  6875  174A  00BF               	movwf	pid_pwm1_idrv_run@ep+1
  6876  174B  0820               	movf	?___lmul,w
  6877  174C  00BE               	movwf	pid_pwm1_idrv_run@ep
  6878                           
  6879                           ;sample.c: 335: ei=PidKp*err[0]/PidTi;
  6880  174D  0021               	movlb	1	; select bank1
  6881  174E  084E               	movf	_PidTi^(0+128),w
  6882  174F  0020               	movlb	0	; select bank0
  6883  1750  00A8               	movwf	___aldiv@divisor
  6884  1751  0021               	movlb	1	; select bank1
  6885  1752  084F               	movf	(_PidTi+1)^(0+128),w
  6886  1753  0020               	movlb	0	; select bank0
  6887  1754  00A9               	movwf	___aldiv@divisor+1
  6888  1755  01AA               	clrf	___aldiv@divisor+2
  6889  1756  01AB               	clrf	___aldiv@divisor+3
  6890  1757  0862               	movf	_PidKp,w
  6891  1758  00A0               	movwf	___lmul@multiplier
  6892  1759  0863               	movf	_PidKp+1,w
  6893  175A  00A1               	movwf	___lmul@multiplier+1
  6894  175B  01A2               	clrf	___lmul@multiplier+2
  6895  175C  01A3               	clrf	___lmul@multiplier+3
  6896  175D  0021               	movlb	1	; select bank1
  6897  175E  0823               	movf	(_err+3)^(0+128),w
  6898  175F  0020               	movlb	0	; select bank0
  6899  1760  00A7               	movwf	___lmul@multiplicand+3
  6900  1761  0021               	movlb	1	; select bank1
  6901  1762  0822               	movf	(_err+2)^(0+128),w
  6902  1763  0020               	movlb	0	; select bank0
  6903  1764  00A6               	movwf	___lmul@multiplicand+2
  6904  1765  0021               	movlb	1	; select bank1
  6905  1766  0821               	movf	(_err+1)^(0+128),w
  6906  1767  0020               	movlb	0	; select bank0
  6907  1768  00A5               	movwf	___lmul@multiplicand+1
  6908  1769  0021               	movlb	1	; select bank1
  6909  176A  0820               	movf	_err^(0+128),w
  6910  176B  0020               	movlb	0	; select bank0
  6911  176C  00A4               	movwf	___lmul@multiplicand
  6912  176D  319B  23CE  3196   	fcall	___lmul
  6913  1770  0020               	movlb	0	; select bank0
  6914  1771  0823               	movf	?___lmul+3,w
  6915  1772  00AF               	movwf	___aldiv@dividend+3
  6916  1773  0822               	movf	?___lmul+2,w
  6917  1774  00AE               	movwf	___aldiv@dividend+2
  6918  1775  0821               	movf	?___lmul+1,w
  6919  1776  00AD               	movwf	___aldiv@dividend+1
  6920  1777  0820               	movf	?___lmul,w
  6921  1778  00AC               	movwf	___aldiv@dividend
  6922  1779  3190  209F  3196   	fcall	___aldiv
  6923  177C  0020               	movlb	0	; select bank0
  6924  177D  082B               	movf	?___aldiv+3,w
  6925  177E  00C5               	movwf	pid_pwm1_idrv_run@ei+3
  6926  177F  082A               	movf	?___aldiv+2,w
  6927  1780  00C4               	movwf	pid_pwm1_idrv_run@ei+2
  6928  1781  0829               	movf	?___aldiv+1,w
  6929  1782  00C3               	movwf	pid_pwm1_idrv_run@ei+1
  6930  1783  0828               	movf	?___aldiv,w
  6931  1784  00C2               	movwf	pid_pwm1_idrv_run@ei
  6932                           
  6933                           ;sample.c: 338: t32=ep+ei;
  6934  1785  083E               	movf	pid_pwm1_idrv_run@ep,w
  6935  1786  0742               	addwf	pid_pwm1_idrv_run@ei,w
  6936  1787  00B6               	movwf	??_pid_pwm1_idrv_run
  6937  1788  083F               	movf	pid_pwm1_idrv_run@ep+1,w
  6938  1789  3D43               	addwfc	pid_pwm1_idrv_run@ei+1,w
  6939  178A  00B7               	movwf	??_pid_pwm1_idrv_run+1
  6940  178B  0840               	movf	pid_pwm1_idrv_run@ep+2,w
  6941  178C  3D44               	addwfc	pid_pwm1_idrv_run@ei+2,w
  6942  178D  00B8               	movwf	??_pid_pwm1_idrv_run+2
  6943  178E  0841               	movf	pid_pwm1_idrv_run@ep+3,w
  6944  178F  3D45               	addwfc	pid_pwm1_idrv_run@ei+3,w
  6945  1790  00B9               	movwf	??_pid_pwm1_idrv_run+3
  6946  1791  0839               	movf	??_pid_pwm1_idrv_run+3,w
  6947  1792  00C9               	movwf	pid_pwm1_idrv_run@t32+3
  6948  1793  0838               	movf	??_pid_pwm1_idrv_run+2,w
  6949  1794  00C8               	movwf	pid_pwm1_idrv_run@t32+2
  6950  1795  0837               	movf	??_pid_pwm1_idrv_run+1,w
  6951  1796  00C7               	movwf	pid_pwm1_idrv_run@t32+1
  6952  1797  0836               	movf	??_pid_pwm1_idrv_run,w
  6953  1798  00C6               	movwf	pid_pwm1_idrv_run@t32
  6954                           
  6955                           ;sample.c: 339: t32/=10000;
  6956  1799  3000               	movlw	0
  6957  179A  00AB               	movwf	___aldiv@divisor+3
  6958  179B  3000               	movlw	0
  6959  179C  00AA               	movwf	___aldiv@divisor+2
  6960  179D  3027               	movlw	39
  6961  179E  00A9               	movwf	___aldiv@divisor+1
  6962  179F  3010               	movlw	16
  6963  17A0  00A8               	movwf	___aldiv@divisor
  6964  17A1  0849               	movf	pid_pwm1_idrv_run@t32+3,w
  6965  17A2  00AF               	movwf	___aldiv@dividend+3
  6966  17A3  0848               	movf	pid_pwm1_idrv_run@t32+2,w
  6967  17A4  00AE               	movwf	___aldiv@dividend+2
  6968  17A5  0847               	movf	pid_pwm1_idrv_run@t32+1,w
  6969  17A6  00AD               	movwf	___aldiv@dividend+1
  6970  17A7  0846               	movf	pid_pwm1_idrv_run@t32,w
  6971  17A8  00AC               	movwf	___aldiv@dividend
  6972  17A9  3190  209F  3196   	fcall	___aldiv
  6973  17AC  0020               	movlb	0	; select bank0
  6974  17AD  082B               	movf	?___aldiv+3,w
  6975  17AE  00C9               	movwf	pid_pwm1_idrv_run@t32+3
  6976  17AF  082A               	movf	?___aldiv+2,w
  6977  17B0  00C8               	movwf	pid_pwm1_idrv_run@t32+2
  6978  17B1  0829               	movf	?___aldiv+1,w
  6979  17B2  00C7               	movwf	pid_pwm1_idrv_run@t32+1
  6980  17B3  0828               	movf	?___aldiv,w
  6981  17B4  00C6               	movwf	pid_pwm1_idrv_run@t32
  6982                           
  6983                           ;sample.c: 340: t32+=pidU;
  6984  17B5  0021               	movlb	1	; select bank1
  6985  17B6  0862               	movf	_pidU^(0+128),w
  6986  17B7  0020               	movlb	0	; select bank0
  6987  17B8  07C6               	addwf	pid_pwm1_idrv_run@t32,f
  6988  17B9  0021               	movlb	1	; select bank1
  6989  17BA  0863               	movf	(_pidU+1)^(0+128),w
  6990  17BB  0020               	movlb	0	; select bank0
  6991  17BC  3DC7               	addwfc	pid_pwm1_idrv_run@t32+1,f
  6992  17BD  3000               	movlw	0
  6993  17BE  3DC8               	addwfc	pid_pwm1_idrv_run@t32+2,f
  6994  17BF  3DC9               	addwfc	pid_pwm1_idrv_run@t32+3,f
  6995                           
  6996                           ;sample.c: 342: __nop();
  6997  17C0  0000               	nop
  6998                           
  6999                           ;sample.c: 343: if(t32>1200)t32=1200;
  7000  17C1  0020               	movlb	0	; select bank0
  7001  17C2  1BC9               	btfsc	pid_pwm1_idrv_run@t32+3,7
  7002  17C3  2FD8               	goto	l5535
  7003  17C4  0849               	movf	pid_pwm1_idrv_run@t32+3,w
  7004  17C5  1D03               	btfss	3,2
  7005  17C6  2FD0               	goto	l5533
  7006  17C7  0848               	movf	pid_pwm1_idrv_run@t32+2,w
  7007  17C8  1D03               	btfss	3,2
  7008  17C9  2FD0               	goto	l5533
  7009  17CA  30B1               	movlw	177
  7010  17CB  0246               	subwf	pid_pwm1_idrv_run@t32,w
  7011  17CC  3004               	movlw	4
  7012  17CD  3B47               	subwfb	pid_pwm1_idrv_run@t32+1,w
  7013  17CE  1C03               	btfss	3,0
  7014  17CF  2FD8               	goto	l5535
  7015  17D0                     l5533:	
  7016  17D0  3000               	movlw	0
  7017  17D1  00C9               	movwf	pid_pwm1_idrv_run@t32+3
  7018  17D2  3000               	movlw	0
  7019  17D3  00C8               	movwf	pid_pwm1_idrv_run@t32+2
  7020  17D4  3004               	movlw	4
  7021  17D5  00C7               	movwf	pid_pwm1_idrv_run@t32+1
  7022  17D6  30B0               	movlw	176
  7023  17D7  00C6               	movwf	pid_pwm1_idrv_run@t32
  7024  17D8                     l5535:	
  7025                           
  7026                           ;sample.c: 344: if(t32<5)t32=5;
  7027  17D8  1BC9               	btfsc	pid_pwm1_idrv_run@t32+3,7
  7028  17D9  2FE7               	goto	l5537
  7029  17DA  0849               	movf	pid_pwm1_idrv_run@t32+3,w
  7030  17DB  1D03               	btfss	3,2
  7031  17DC  2FEF               	goto	l695
  7032  17DD  0848               	movf	pid_pwm1_idrv_run@t32+2,w
  7033  17DE  1D03               	btfss	3,2
  7034  17DF  2FEF               	goto	l695
  7035  17E0  0847               	movf	pid_pwm1_idrv_run@t32+1,w
  7036  17E1  1D03               	btfss	3,2
  7037  17E2  2FEF               	goto	l695
  7038  17E3  3005               	movlw	5
  7039  17E4  0246               	subwf	pid_pwm1_idrv_run@t32,w
  7040  17E5  1803               	btfsc	3,0
  7041  17E6  2FEF               	goto	l695
  7042  17E7                     l5537:	
  7043  17E7  3000               	movlw	0
  7044  17E8  00C9               	movwf	pid_pwm1_idrv_run@t32+3
  7045  17E9  3000               	movlw	0
  7046  17EA  00C8               	movwf	pid_pwm1_idrv_run@t32+2
  7047  17EB  3000               	movlw	0
  7048  17EC  00C7               	movwf	pid_pwm1_idrv_run@t32+1
  7049  17ED  3005               	movlw	5
  7050  17EE  00C6               	movwf	pid_pwm1_idrv_run@t32
  7051  17EF                     l695:	
  7052                           
  7053                           ;sample.c: 345: pidU=(uint16_t)t32;
  7054  17EF  0847               	movf	pid_pwm1_idrv_run@t32+1,w
  7055  17F0  0021               	movlb	1	; select bank1
  7056  17F1  00E3               	movwf	(_pidU+1)^(0+128)
  7057  17F2  0020               	movlb	0	; select bank0
  7058  17F3  0846               	movf	pid_pwm1_idrv_run@t32,w
  7059  17F4  0021               	movlb	1	; select bank1
  7060  17F5  00E2               	movwf	_pidU^(0+128)
  7061                           
  7062                           ;sample.c: 347: set_idrv_pwm1_duty(pidU);
  7063  17F6  0863               	movf	(_pidU+1)^(0+128),w
  7064  17F7  0020               	movlb	0	; select bank0
  7065  17F8  00A3               	movwf	set_idrv_pwm1_duty@duty+1
  7066  17F9  0021               	movlb	1	; select bank1
  7067  17FA  0862               	movf	_pidU^(0+128),w
  7068  17FB  0020               	movlb	0	; select bank0
  7069  17FC  00A2               	movwf	set_idrv_pwm1_duty@duty
  7070  17FD  319B  2339         	fcall	_set_idrv_pwm1_duty
  7071  17FF  0008               	return
  7072  1800                     __end_of_pid_pwm1_idrv_run:	
  7073                           
  7074                           	psect	text10
  7075  08ED                     __ptext10:	
  7076 ;; *************** function _pid_pwm1_idrv_b_b *****************
  7077 ;; Defined at:
  7078 ;;		line 265 in file "src/api/sample.c"
  7079 ;; Parameters:    Size  Location     Type
  7080 ;;		None
  7081 ;; Auto vars:     Size  Location     Type
  7082 ;;  t32             4   30[BANK0 ] long 
  7083 ;; Return value:  Size  Location     Type
  7084 ;;                  1    wreg      void 
  7085 ;; Registers used:
  7086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7087 ;; Tracked objects:
  7088 ;;		On entry : 0/0
  7089 ;;		On exit  : 0/0
  7090 ;;		Unchanged: 0/0
  7091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7093 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7094 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7095 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7096 ;;Total ram usage:       12 bytes
  7097 ;; Hardware stack levels used:    1
  7098 ;; Hardware stack levels required when called:    3
  7099 ;; This function calls:
  7100 ;;		___aldiv
  7101 ;;		___lmul
  7102 ;;		___lwdiv
  7103 ;;		___wmul
  7104 ;;		_set_idrv_pwm1_duty
  7105 ;; This function is called by:
  7106 ;;		_main
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           
  7111                           ;psect for function _pid_pwm1_idrv_b_b
  7112  08ED                     _pid_pwm1_idrv_b_b:	
  7113                           
  7114                           ;sample.c: 267: int32_t t32;
  7115                           ;sample.c: 268: t32=(resRs-resRc);
  7116                           
  7117                           ;incstack = 0
  7118                           ; Regs used in _pid_pwm1_idrv_b_b: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7119  08ED  0020               	movlb	0	; select bank0
  7120  08EE  096E               	comf	_resRc,w
  7121  08EF  00B6               	movwf	??_pid_pwm1_idrv_b_b
  7122  08F0  096F               	comf	_resRc+1,w
  7123  08F1  00B7               	movwf	??_pid_pwm1_idrv_b_b+1
  7124  08F2  0AB6               	incf	??_pid_pwm1_idrv_b_b,f
  7125  08F3  1903               	skipnz
  7126  08F4  0AB7               	incf	??_pid_pwm1_idrv_b_b+1,f
  7127  08F5  086C               	movf	_resRs,w
  7128  08F6  0736               	addwf	??_pid_pwm1_idrv_b_b,w
  7129  08F7  00BE               	movwf	pid_pwm1_idrv_b_b@t32
  7130  08F8  086D               	movf	_resRs+1,w
  7131  08F9  3D37               	addwfc	??_pid_pwm1_idrv_b_b+1,w
  7132  08FA  00BF               	movwf	pid_pwm1_idrv_b_b@t32+1
  7133  08FB  01C0               	clrf	pid_pwm1_idrv_b_b@t32+2
  7134  08FC  01C1               	clrf	pid_pwm1_idrv_b_b@t32+3
  7135                           
  7136                           ;sample.c: 269: switch(pidBbSm){
  7137  08FD  2ABB               	goto	l5497
  7138  08FE                     l5449:	
  7139                           ;sample.c: 271: case 0:
  7140                           
  7141                           ;sample.c: 270: case 5:return;
  7142                           
  7143                           
  7144                           ;sample.c: 272: case 1:
  7145                           ;sample.c: 273: pidTestNum=0;
  7146  08FE  01E8               	clrf	_pidTestNum
  7147  08FF  2939               	goto	l5471
  7148  0900                     l5455:	
  7149                           ;sample.c: 277: case 2:
  7150                           
  7151                           ;sample.c: 276: break;
  7152                           
  7153                           ;sample.c: 275: pidBbSm=2;
  7154                           
  7155                           ;sample.c: 274: set_idrv_pwm1_duty(1200);
  7156                           
  7157                           
  7158                           ;sample.c: 278: if(t32>4500){
  7159  0900  1BC1               	btfsc	pid_pwm1_idrv_b_b@t32+3,7
  7160  0901  2AC5               	goto	l5499
  7161  0902  0841               	movf	pid_pwm1_idrv_b_b@t32+3,w
  7162  0903  1D03               	btfss	3,2
  7163  0904  290E               	goto	l5457
  7164  0905  0840               	movf	pid_pwm1_idrv_b_b@t32+2,w
  7165  0906  1D03               	btfss	3,2
  7166  0907  290E               	goto	l5457
  7167  0908  3095               	movlw	149
  7168  0909  023E               	subwf	pid_pwm1_idrv_b_b@t32,w
  7169  090A  3011               	movlw	17
  7170  090B  3B3F               	subwfb	pid_pwm1_idrv_b_b@t32+1,w
  7171  090C  1C03               	btfss	3,0
  7172  090D  2AC5               	goto	l5499
  7173  090E                     l5457:	
  7174                           
  7175                           ;sample.c: 279: set_idrv_pwm1_duty(5);
  7176  090E  3005               	movlw	5
  7177  090F  00A2               	movwf	set_idrv_pwm1_duty@duty
  7178  0910  3000               	movlw	0
  7179  0911  00A3               	movwf	set_idrv_pwm1_duty@duty+1
  7180  0912  319B  2339  3188   	fcall	_set_idrv_pwm1_duty
  7181                           
  7182                           ;sample.c: 280: pidBbSm=3;
  7183  0915  3003               	movlw	3
  7184  0916  2AB6               	goto	L5
  7185  0917                     l5461:	
  7186                           ;sample.c: 284: case 3:
  7187                           
  7188                           ;sample.c: 282: }
  7189                           ;sample.c: 283: break;
  7190                           
  7191                           ;sample.c: 281: break;
  7192                           
  7193                           
  7194                           ;sample.c: 285: if(t32<1500){
  7195  0917  1BC1               	btfsc	pid_pwm1_idrv_b_b@t32+3,7
  7196  0918  2925               	goto	l5463
  7197  0919  0841               	movf	pid_pwm1_idrv_b_b@t32+3,w
  7198  091A  1D03               	btfss	3,2
  7199  091B  2AC5               	goto	l5499
  7200  091C  0840               	movf	pid_pwm1_idrv_b_b@t32+2,w
  7201  091D  1D03               	btfss	3,2
  7202  091E  2AC5               	goto	l5499
  7203  091F  30DC               	movlw	220
  7204  0920  023E               	subwf	pid_pwm1_idrv_b_b@t32,w
  7205  0921  3005               	movlw	5
  7206  0922  3B3F               	subwfb	pid_pwm1_idrv_b_b@t32+1,w
  7207  0923  1803               	btfsc	3,0
  7208  0924  2AC5               	goto	l5499
  7209  0925                     l5463:	
  7210                           
  7211                           ;sample.c: 286: bbt0=bbt1;
  7212  0925  0021               	movlb	1	; select bank1
  7213  0926  0847               	movf	(_bbt1+1)^(0+128),w
  7214  0927  00C9               	movwf	(_bbt0+1)^(0+128)
  7215  0928  0846               	movf	_bbt1^(0+128),w
  7216  0929  00C8               	movwf	_bbt0^(0+128)
  7217                           
  7218                           ;sample.c: 287: bbt1=globalTicker;
  7219  092A  0857               	movf	(_globalTicker+1)^(0+128),w	;volatile
  7220  092B  00C7               	movwf	(_bbt1+1)^(0+128)
  7221  092C  0856               	movf	_globalTicker^(0+128),w	;volatile
  7222  092D  00C6               	movwf	_bbt1^(0+128)
  7223                           
  7224                           ;sample.c: 288: pidTestNum++;
  7225  092E  3001               	movlw	1
  7226  092F  0020               	movlb	0	; select bank0
  7227  0930  00B6               	movwf	??_pid_pwm1_idrv_b_b
  7228  0931  0836               	movf	??_pid_pwm1_idrv_b_b,w
  7229  0932  07E8               	addwf	_pidTestNum,f
  7230                           
  7231                           ;sample.c: 289: if(pidTestNum>4){
  7232  0933  3005               	movlw	5
  7233  0934  0268               	subwf	_pidTestNum,w
  7234  0935  1C03               	skipc
  7235  0936  2939               	goto	l5471
  7236                           
  7237                           ;sample.c: 290: pidBbSm=4;
  7238  0937  3004               	movlw	4
  7239  0938  2AB7               	goto	L4
  7240  0939                     l5471:	
  7241                           ;sample.c: 291: break;
  7242                           
  7243                           
  7244                           ;sample.c: 292: }
  7245                           ;sample.c: 293: set_idrv_pwm1_duty(1200);
  7246  0939  30B0               	movlw	176
  7247  093A  00A2               	movwf	set_idrv_pwm1_duty@duty
  7248  093B  3004               	movlw	4
  7249  093C  00A3               	movwf	set_idrv_pwm1_duty@duty+1
  7250  093D  319B  2339  3188   	fcall	_set_idrv_pwm1_duty
  7251                           
  7252                           ;sample.c: 294: pidBbSm=2;
  7253  0940  3002               	movlw	2
  7254  0941  2AB6               	goto	L5
  7255  0942                     l5475:	
  7256                           ;sample.c: 298: case 4:
  7257                           
  7258                           ;sample.c: 296: }
  7259                           ;sample.c: 297: break;
  7260                           
  7261                           ;sample.c: 295: break;
  7262                           
  7263                           
  7264                           ;sample.c: 299: bbtu=bbt1-bbt0;
  7265  0942  0021               	movlb	1	; select bank1
  7266  0943  0948               	comf	_bbt0^(0+128),w
  7267  0944  0020               	movlb	0	; select bank0
  7268  0945  00B6               	movwf	??_pid_pwm1_idrv_b_b
  7269  0946  0021               	movlb	1	; select bank1
  7270  0947  0949               	comf	(_bbt0+1)^(0+128),w
  7271  0948  0020               	movlb	0	; select bank0
  7272  0949  00B7               	movwf	??_pid_pwm1_idrv_b_b+1
  7273  094A  0AB6               	incf	??_pid_pwm1_idrv_b_b,f
  7274  094B  1903               	skipnz
  7275  094C  0AB7               	incf	??_pid_pwm1_idrv_b_b+1,f
  7276  094D  0021               	movlb	1	; select bank1
  7277  094E  0846               	movf	_bbt1^(0+128),w
  7278  094F  0020               	movlb	0	; select bank0
  7279  0950  0736               	addwf	??_pid_pwm1_idrv_b_b,w
  7280  0951  00DC               	movwf	_bbtu
  7281  0952  0021               	movlb	1	; select bank1
  7282  0953  0847               	movf	(_bbt1+1)^(0+128),w
  7283  0954  0020               	movlb	0	; select bank0
  7284  0955  3D37               	addwfc	??_pid_pwm1_idrv_b_b+1,w
  7285  0956  00DD               	movwf	_bbtu+1
  7286                           
  7287                           ;sample.c: 300: bbtu=bbtu/5;
  7288  0957  3005               	movlw	5
  7289  0958  00A2               	movwf	___lwdiv@divisor
  7290  0959  3000               	movlw	0
  7291  095A  00A3               	movwf	___lwdiv@divisor+1
  7292  095B  085D               	movf	_bbtu+1,w
  7293  095C  00A5               	movwf	___lwdiv@dividend+1
  7294  095D  085C               	movf	_bbtu,w
  7295  095E  00A4               	movwf	___lwdiv@dividend
  7296  095F  319C  242F  3188   	fcall	___lwdiv
  7297  0962  0020               	movlb	0	; select bank0
  7298  0963  0823               	movf	?___lwdiv+1,w
  7299  0964  00DD               	movwf	_bbtu+1
  7300  0965  0822               	movf	?___lwdiv,w
  7301  0966  00DC               	movwf	_bbtu
  7302                           
  7303                           ;sample.c: 301: bbta=(bbmax-bbmin)/2;
  7304  0967  3000               	movlw	0
  7305  0968  00AB               	movwf	___aldiv@divisor+3
  7306  0969  3000               	movlw	0
  7307  096A  00AA               	movwf	___aldiv@divisor+2
  7308  096B  3000               	movlw	0
  7309  096C  00A9               	movwf	___aldiv@divisor+1
  7310  096D  3002               	movlw	2
  7311  096E  00A8               	movwf	___aldiv@divisor
  7312  096F  0021               	movlb	1	; select bank1
  7313  0970  085E               	movf	_bbmax^(0+128),w
  7314  0971  0020               	movlb	0	; select bank0
  7315  0972  00B6               	movwf	??_pid_pwm1_idrv_b_b
  7316  0973  0021               	movlb	1	; select bank1
  7317  0974  085F               	movf	(_bbmax+1)^(0+128),w
  7318  0975  0020               	movlb	0	; select bank0
  7319  0976  00B7               	movwf	??_pid_pwm1_idrv_b_b+1
  7320  0977  0021               	movlb	1	; select bank1
  7321  0978  0860               	movf	(_bbmax+2)^(0+128),w
  7322  0979  0020               	movlb	0	; select bank0
  7323  097A  00B8               	movwf	??_pid_pwm1_idrv_b_b+2
  7324  097B  0021               	movlb	1	; select bank1
  7325  097C  0861               	movf	(_bbmax+3)^(0+128),w
  7326  097D  0020               	movlb	0	; select bank0
  7327  097E  00B9               	movwf	??_pid_pwm1_idrv_b_b+3
  7328  097F  0021               	movlb	1	; select bank1
  7329  0980  095A               	comf	_bbmin^(0+128),w
  7330  0981  0020               	movlb	0	; select bank0
  7331  0982  00BA               	movwf	??_pid_pwm1_idrv_b_b+4
  7332  0983  0021               	movlb	1	; select bank1
  7333  0984  095B               	comf	(_bbmin+1)^(0+128),w
  7334  0985  0020               	movlb	0	; select bank0
  7335  0986  00BB               	movwf	??_pid_pwm1_idrv_b_b+5
  7336  0987  0021               	movlb	1	; select bank1
  7337  0988  095C               	comf	(_bbmin+2)^(0+128),w
  7338  0989  0020               	movlb	0	; select bank0
  7339  098A  00BC               	movwf	??_pid_pwm1_idrv_b_b+6
  7340  098B  0021               	movlb	1	; select bank1
  7341  098C  095D               	comf	(_bbmin+3)^(0+128),w
  7342  098D  0020               	movlb	0	; select bank0
  7343  098E  00BD               	movwf	??_pid_pwm1_idrv_b_b+7
  7344  098F  0ABA               	incf	??_pid_pwm1_idrv_b_b+4,f
  7345  0990  1903               	skipnz
  7346  0991  0ABB               	incf	??_pid_pwm1_idrv_b_b+5,f
  7347  0992  1903               	skipnz
  7348  0993  0ABC               	incf	??_pid_pwm1_idrv_b_b+6,f
  7349  0994  1903               	skipnz
  7350  0995  0ABD               	incf	??_pid_pwm1_idrv_b_b+7,f
  7351  0996  083A               	movf	??_pid_pwm1_idrv_b_b+4,w
  7352  0997  07B6               	addwf	??_pid_pwm1_idrv_b_b,f
  7353  0998  083B               	movf	??_pid_pwm1_idrv_b_b+5,w
  7354  0999  3DB7               	addwfc	??_pid_pwm1_idrv_b_b+1,f
  7355  099A  083C               	movf	??_pid_pwm1_idrv_b_b+6,w
  7356  099B  3DB8               	addwfc	??_pid_pwm1_idrv_b_b+2,f
  7357  099C  083D               	movf	??_pid_pwm1_idrv_b_b+7,w
  7358  099D  3DB9               	addwfc	??_pid_pwm1_idrv_b_b+3,f
  7359  099E  0839               	movf	??_pid_pwm1_idrv_b_b+3,w
  7360  099F  00AF               	movwf	___aldiv@dividend+3
  7361  09A0  0838               	movf	??_pid_pwm1_idrv_b_b+2,w
  7362  09A1  00AE               	movwf	___aldiv@dividend+2
  7363  09A2  0837               	movf	??_pid_pwm1_idrv_b_b+1,w
  7364  09A3  00AD               	movwf	___aldiv@dividend+1
  7365  09A4  0836               	movf	??_pid_pwm1_idrv_b_b,w
  7366  09A5  00AC               	movwf	___aldiv@dividend
  7367  09A6  3190  209F  3188   	fcall	___aldiv
  7368  09A9  0020               	movlb	0	; select bank0
  7369  09AA  082B               	movf	?___aldiv+3,w
  7370  09AB  0021               	movlb	1	; select bank1
  7371  09AC  00C3               	movwf	(_bbta+3)^(0+128)
  7372  09AD  0020               	movlb	0	; select bank0
  7373  09AE  082A               	movf	?___aldiv+2,w
  7374  09AF  0021               	movlb	1	; select bank1
  7375  09B0  00C2               	movwf	(_bbta+2)^(0+128)
  7376  09B1  0020               	movlb	0	; select bank0
  7377  09B2  0829               	movf	?___aldiv+1,w
  7378  09B3  0021               	movlb	1	; select bank1
  7379  09B4  00C1               	movwf	(_bbta+1)^(0+128)
  7380  09B5  0020               	movlb	0	; select bank0
  7381  09B6  0828               	movf	?___aldiv,w
  7382  09B7  0021               	movlb	1	; select bank1
  7383  09B8  00C0               	movwf	_bbta^(0+128)
  7384                           
  7385                           ;sample.c: 302: bbu=(1200-5)/2;
  7386  09B9  3000               	movlw	0
  7387  09BA  00BF               	movwf	(_bbu+3)^(0+128)
  7388  09BB  3000               	movlw	0
  7389  09BC  00BE               	movwf	(_bbu+2)^(0+128)
  7390  09BD  3002               	movlw	2
  7391  09BE  00BD               	movwf	(_bbu+1)^(0+128)
  7392  09BF  3055               	movlw	85
  7393  09C0  00BC               	movwf	_bbu^(0+128)
  7394                           
  7395                           ;sample.c: 304: bbku=(bbu*40000)/(bbta*314);
  7396  09C1  0843               	movf	(_bbta+3)^(0+128),w
  7397  09C2  0020               	movlb	0	; select bank0
  7398  09C3  00A3               	movwf	___lmul@multiplier+3
  7399  09C4  0021               	movlb	1	; select bank1
  7400  09C5  0842               	movf	(_bbta+2)^(0+128),w
  7401  09C6  0020               	movlb	0	; select bank0
  7402  09C7  00A2               	movwf	___lmul@multiplier+2
  7403  09C8  0021               	movlb	1	; select bank1
  7404  09C9  0841               	movf	(_bbta+1)^(0+128),w
  7405  09CA  0020               	movlb	0	; select bank0
  7406  09CB  00A1               	movwf	___lmul@multiplier+1
  7407  09CC  0021               	movlb	1	; select bank1
  7408  09CD  0840               	movf	_bbta^(0+128),w
  7409  09CE  0020               	movlb	0	; select bank0
  7410  09CF  00A0               	movwf	___lmul@multiplier
  7411  09D0  3000               	movlw	0
  7412  09D1  00A7               	movwf	___lmul@multiplicand+3
  7413  09D2  3000               	movlw	0
  7414  09D3  00A6               	movwf	___lmul@multiplicand+2
  7415  09D4  3001               	movlw	1
  7416  09D5  00A5               	movwf	___lmul@multiplicand+1
  7417  09D6  303A               	movlw	58
  7418  09D7  00A4               	movwf	___lmul@multiplicand
  7419  09D8  319B  23CE  3188   	fcall	___lmul
  7420  09DB  0020               	movlb	0	; select bank0
  7421  09DC  0823               	movf	?___lmul+3,w
  7422  09DD  00AB               	movwf	___aldiv@divisor+3
  7423  09DE  0822               	movf	?___lmul+2,w
  7424  09DF  00AA               	movwf	___aldiv@divisor+2
  7425  09E0  0821               	movf	?___lmul+1,w
  7426  09E1  00A9               	movwf	___aldiv@divisor+1
  7427  09E2  0820               	movf	?___lmul,w
  7428  09E3  00A8               	movwf	___aldiv@divisor
  7429  09E4  0021               	movlb	1	; select bank1
  7430  09E5  083F               	movf	(_bbu+3)^(0+128),w
  7431  09E6  0020               	movlb	0	; select bank0
  7432  09E7  00A3               	movwf	___lmul@multiplier+3
  7433  09E8  0021               	movlb	1	; select bank1
  7434  09E9  083E               	movf	(_bbu+2)^(0+128),w
  7435  09EA  0020               	movlb	0	; select bank0
  7436  09EB  00A2               	movwf	___lmul@multiplier+2
  7437  09EC  0021               	movlb	1	; select bank1
  7438  09ED  083D               	movf	(_bbu+1)^(0+128),w
  7439  09EE  0020               	movlb	0	; select bank0
  7440  09EF  00A1               	movwf	___lmul@multiplier+1
  7441  09F0  0021               	movlb	1	; select bank1
  7442  09F1  083C               	movf	_bbu^(0+128),w
  7443  09F2  0020               	movlb	0	; select bank0
  7444  09F3  00A0               	movwf	___lmul@multiplier
  7445  09F4  3000               	movlw	0
  7446  09F5  00A7               	movwf	___lmul@multiplicand+3
  7447  09F6  3000               	movlw	0
  7448  09F7  00A6               	movwf	___lmul@multiplicand+2
  7449  09F8  309C               	movlw	156
  7450  09F9  00A5               	movwf	___lmul@multiplicand+1
  7451  09FA  3040               	movlw	64
  7452  09FB  00A4               	movwf	___lmul@multiplicand
  7453  09FC  319B  23CE  3188   	fcall	___lmul
  7454  09FF  0020               	movlb	0	; select bank0
  7455  0A00  0823               	movf	?___lmul+3,w
  7456  0A01  00AF               	movwf	___aldiv@dividend+3
  7457  0A02  0822               	movf	?___lmul+2,w
  7458  0A03  00AE               	movwf	___aldiv@dividend+2
  7459  0A04  0821               	movf	?___lmul+1,w
  7460  0A05  00AD               	movwf	___aldiv@dividend+1
  7461  0A06  0820               	movf	?___lmul,w
  7462  0A07  00AC               	movwf	___aldiv@dividend
  7463  0A08  3190  209F  3188   	fcall	___aldiv
  7464  0A0B  0020               	movlb	0	; select bank0
  7465  0A0C  082B               	movf	?___aldiv+3,w
  7466  0A0D  0021               	movlb	1	; select bank1
  7467  0A0E  00BB               	movwf	(_bbku+3)^(0+128)
  7468  0A0F  0020               	movlb	0	; select bank0
  7469  0A10  082A               	movf	?___aldiv+2,w
  7470  0A11  0021               	movlb	1	; select bank1
  7471  0A12  00BA               	movwf	(_bbku+2)^(0+128)
  7472  0A13  0020               	movlb	0	; select bank0
  7473  0A14  0829               	movf	?___aldiv+1,w
  7474  0A15  0021               	movlb	1	; select bank1
  7475  0A16  00B9               	movwf	(_bbku+1)^(0+128)
  7476  0A17  0020               	movlb	0	; select bank0
  7477  0A18  0828               	movf	?___aldiv,w
  7478  0A19  0021               	movlb	1	; select bank1
  7479  0A1A  00B8               	movwf	_bbku^(0+128)
  7480                           
  7481                           ;sample.c: 305: bbku*=100;
  7482  0A1B  3000               	movlw	0
  7483  0A1C  0020               	movlb	0	; select bank0
  7484  0A1D  00A3               	movwf	___lmul@multiplier+3
  7485  0A1E  3000               	movlw	0
  7486  0A1F  00A2               	movwf	___lmul@multiplier+2
  7487  0A20  3000               	movlw	0
  7488  0A21  00A1               	movwf	___lmul@multiplier+1
  7489  0A22  3064               	movlw	100
  7490  0A23  00A0               	movwf	___lmul@multiplier
  7491  0A24  0021               	movlb	1	; select bank1
  7492  0A25  083B               	movf	(_bbku+3)^(0+128),w
  7493  0A26  0020               	movlb	0	; select bank0
  7494  0A27  00A7               	movwf	___lmul@multiplicand+3
  7495  0A28  0021               	movlb	1	; select bank1
  7496  0A29  083A               	movf	(_bbku+2)^(0+128),w
  7497  0A2A  0020               	movlb	0	; select bank0
  7498  0A2B  00A6               	movwf	___lmul@multiplicand+2
  7499  0A2C  0021               	movlb	1	; select bank1
  7500  0A2D  0839               	movf	(_bbku+1)^(0+128),w
  7501  0A2E  0020               	movlb	0	; select bank0
  7502  0A2F  00A5               	movwf	___lmul@multiplicand+1
  7503  0A30  0021               	movlb	1	; select bank1
  7504  0A31  0838               	movf	_bbku^(0+128),w
  7505  0A32  0020               	movlb	0	; select bank0
  7506  0A33  00A4               	movwf	___lmul@multiplicand
  7507  0A34  319B  23CE  3188   	fcall	___lmul
  7508  0A37  0020               	movlb	0	; select bank0
  7509  0A38  0823               	movf	?___lmul+3,w
  7510  0A39  0021               	movlb	1	; select bank1
  7511  0A3A  00BB               	movwf	(_bbku+3)^(0+128)
  7512  0A3B  0020               	movlb	0	; select bank0
  7513  0A3C  0822               	movf	?___lmul+2,w
  7514  0A3D  0021               	movlb	1	; select bank1
  7515  0A3E  00BA               	movwf	(_bbku+2)^(0+128)
  7516  0A3F  0020               	movlb	0	; select bank0
  7517  0A40  0821               	movf	?___lmul+1,w
  7518  0A41  0021               	movlb	1	; select bank1
  7519  0A42  00B9               	movwf	(_bbku+1)^(0+128)
  7520  0A43  0020               	movlb	0	; select bank0
  7521  0A44  0820               	movf	?___lmul,w
  7522  0A45  0021               	movlb	1	; select bank1
  7523  0A46  00B8               	movwf	_bbku^(0+128)
  7524                           
  7525                           ;sample.c: 307: t32=(bbku*10/14);
  7526  0A47  3000               	movlw	0
  7527  0A48  0020               	movlb	0	; select bank0
  7528  0A49  00AB               	movwf	___aldiv@divisor+3
  7529  0A4A  3000               	movlw	0
  7530  0A4B  00AA               	movwf	___aldiv@divisor+2
  7531  0A4C  3000               	movlw	0
  7532  0A4D  00A9               	movwf	___aldiv@divisor+1
  7533  0A4E  300E               	movlw	14
  7534  0A4F  00A8               	movwf	___aldiv@divisor
  7535  0A50  0021               	movlb	1	; select bank1
  7536  0A51  083B               	movf	(_bbku+3)^(0+128),w
  7537  0A52  0020               	movlb	0	; select bank0
  7538  0A53  00A3               	movwf	___lmul@multiplier+3
  7539  0A54  0021               	movlb	1	; select bank1
  7540  0A55  083A               	movf	(_bbku+2)^(0+128),w
  7541  0A56  0020               	movlb	0	; select bank0
  7542  0A57  00A2               	movwf	___lmul@multiplier+2
  7543  0A58  0021               	movlb	1	; select bank1
  7544  0A59  0839               	movf	(_bbku+1)^(0+128),w
  7545  0A5A  0020               	movlb	0	; select bank0
  7546  0A5B  00A1               	movwf	___lmul@multiplier+1
  7547  0A5C  0021               	movlb	1	; select bank1
  7548  0A5D  0838               	movf	_bbku^(0+128),w
  7549  0A5E  0020               	movlb	0	; select bank0
  7550  0A5F  00A0               	movwf	___lmul@multiplier
  7551  0A60  3000               	movlw	0
  7552  0A61  00A7               	movwf	___lmul@multiplicand+3
  7553  0A62  3000               	movlw	0
  7554  0A63  00A6               	movwf	___lmul@multiplicand+2
  7555  0A64  3000               	movlw	0
  7556  0A65  00A5               	movwf	___lmul@multiplicand+1
  7557  0A66  300A               	movlw	10
  7558  0A67  00A4               	movwf	___lmul@multiplicand
  7559  0A68  319B  23CE  3188   	fcall	___lmul
  7560  0A6B  0020               	movlb	0	; select bank0
  7561  0A6C  0823               	movf	?___lmul+3,w
  7562  0A6D  00AF               	movwf	___aldiv@dividend+3
  7563  0A6E  0822               	movf	?___lmul+2,w
  7564  0A6F  00AE               	movwf	___aldiv@dividend+2
  7565  0A70  0821               	movf	?___lmul+1,w
  7566  0A71  00AD               	movwf	___aldiv@dividend+1
  7567  0A72  0820               	movf	?___lmul,w
  7568  0A73  00AC               	movwf	___aldiv@dividend
  7569  0A74  3190  209F  3188   	fcall	___aldiv
  7570  0A77  0020               	movlb	0	; select bank0
  7571  0A78  082B               	movf	?___aldiv+3,w
  7572  0A79  00C1               	movwf	pid_pwm1_idrv_b_b@t32+3
  7573  0A7A  082A               	movf	?___aldiv+2,w
  7574  0A7B  00C0               	movwf	pid_pwm1_idrv_b_b@t32+2
  7575  0A7C  0829               	movf	?___aldiv+1,w
  7576  0A7D  00BF               	movwf	pid_pwm1_idrv_b_b@t32+1
  7577  0A7E  0828               	movf	?___aldiv,w
  7578  0A7F  00BE               	movwf	pid_pwm1_idrv_b_b@t32
  7579                           
  7580                           ;sample.c: 308: PidKp=(uint16_t)t32;
  7581  0A80  083F               	movf	pid_pwm1_idrv_b_b@t32+1,w
  7582  0A81  00E3               	movwf	_PidKp+1
  7583  0A82  083E               	movf	pid_pwm1_idrv_b_b@t32,w
  7584  0A83  00E2               	movwf	_PidKp
  7585                           
  7586                           ;sample.c: 309: PidTi=bbtu*10/20;
  7587  0A84  3014               	movlw	20
  7588  0A85  00A2               	movwf	___lwdiv@divisor
  7589  0A86  3000               	movlw	0
  7590  0A87  00A3               	movwf	___lwdiv@divisor+1
  7591  0A88  085D               	movf	_bbtu+1,w
  7592  0A89  00F4               	movwf	___wmul@multiplier+1
  7593  0A8A  085C               	movf	_bbtu,w
  7594  0A8B  00F3               	movwf	___wmul@multiplier
  7595  0A8C  300A               	movlw	10
  7596  0A8D  00F5               	movwf	___wmul@multiplicand
  7597  0A8E  3000               	movlw	0
  7598  0A8F  00F6               	movwf	___wmul@multiplicand+1
  7599  0A90  319A  22B6  3188   	fcall	___wmul
  7600  0A93  0874               	movf	?___wmul+1,w
  7601  0A94  0020               	movlb	0	; select bank0
  7602  0A95  00A5               	movwf	___lwdiv@dividend+1
  7603  0A96  0873               	movf	?___wmul,w
  7604  0A97  00A4               	movwf	___lwdiv@dividend
  7605  0A98  319C  242F  3188   	fcall	___lwdiv
  7606  0A9B  0020               	movlb	0	; select bank0
  7607  0A9C  0823               	movf	?___lwdiv+1,w
  7608  0A9D  0021               	movlb	1	; select bank1
  7609  0A9E  00CF               	movwf	(_PidTi+1)^(0+128)
  7610  0A9F  0020               	movlb	0	; select bank0
  7611  0AA0  0822               	movf	?___lwdiv,w
  7612  0AA1  0021               	movlb	1	; select bank1
  7613  0AA2  00CE               	movwf	_PidTi^(0+128)
  7614                           
  7615                           ;sample.c: 310: PidTd=bbtu/8;
  7616  0AA3  0020               	movlb	0	; select bank0
  7617  0AA4  085D               	movf	_bbtu+1,w
  7618  0AA5  00B7               	movwf	??_pid_pwm1_idrv_b_b+1
  7619  0AA6  085C               	movf	_bbtu,w
  7620  0AA7  00B6               	movwf	??_pid_pwm1_idrv_b_b
  7621  0AA8  36B7               	lsrf	??_pid_pwm1_idrv_b_b+1,f
  7622  0AA9  0CB6               	rrf	??_pid_pwm1_idrv_b_b,f
  7623  0AAA  36B7               	lsrf	??_pid_pwm1_idrv_b_b+1,f
  7624  0AAB  0CB6               	rrf	??_pid_pwm1_idrv_b_b,f
  7625  0AAC  36B7               	lsrf	??_pid_pwm1_idrv_b_b+1,f
  7626  0AAD  0CB6               	rrf	??_pid_pwm1_idrv_b_b,f
  7627  0AAE  0836               	movf	??_pid_pwm1_idrv_b_b,w
  7628  0AAF  0021               	movlb	1	; select bank1
  7629  0AB0  00CC               	movwf	_PidTd^(0+128)
  7630  0AB1  0020               	movlb	0	; select bank0
  7631  0AB2  0837               	movf	??_pid_pwm1_idrv_b_b+1,w
  7632  0AB3  0021               	movlb	1	; select bank1
  7633  0AB4  00CD               	movwf	(_PidTd+1)^(0+128)
  7634                           
  7635                           ;sample.c: 311: pidBbSm=5;
  7636  0AB5  3005               	movlw	5
  7637  0AB6                     L5:	
  7638  0AB6  0020               	movlb	0	; select bank0
  7639  0AB7                     L4:	
  7640  0AB7  00B6               	movwf	??_pid_pwm1_idrv_b_b
  7641  0AB8  0836               	movf	??_pid_pwm1_idrv_b_b,w
  7642  0AB9  00E9               	movwf	_pidBbSm
  7643                           
  7644                           ;sample.c: 313: }
  7645                           
  7646                           ;sample.c: 312: break;
  7647  0ABA  2AC5               	goto	l5499
  7648  0ABB                     l5497:	
  7649  0ABB  0869               	movf	_pidBbSm,w
  7650                           
  7651                           ; Switch size 1, requested type "space"
  7652                           ; Number of cases is 6, Range of values is 0 to 5
  7653                           ; switch strategies available:
  7654                           ; Name         Instructions Cycles
  7655                           ; direct_byte           18     6 (fixed)
  7656                           ; simple_byte           19    10 (average)
  7657                           ; jumptable            260     6 (fixed)
  7658                           ;	Chosen strategy is direct_byte
  7659  0ABC  0084               	movwf	4
  7660  0ABD  3006               	movlw	6
  7661  0ABE  0204               	subwf	4,w
  7662  0ABF  1803               	skipnc
  7663  0AC0  2AC5               	goto	l5499
  7664  0AC1  3198               	movlp	high S5921
  7665  0AC2  3504               	lslf	4,w
  7666  0AC3  3E39               	addlw	low S5921
  7667  0AC4  0082               	movwf	2
  7668  0AC5                     l5499:	
  7669                           
  7670                           ;sample.c: 314: if(pidTestNum>2){
  7671  0AC5  3003               	movlw	3
  7672  0AC6  0268               	subwf	_pidTestNum,w
  7673  0AC7  1C03               	skipc
  7674  0AC8  0008               	return
  7675                           
  7676                           ;sample.c: 315: if(bbmax<t32)bbmax=t32;
  7677  0AC9  0021               	movlb	1	; select bank1
  7678  0ACA  0861               	movf	(_bbmax+3)^(0+128),w
  7679  0ACB  3A80               	xorlw	128
  7680  0ACC  0020               	movlb	0	; select bank0
  7681  0ACD  00B6               	movwf	??_pid_pwm1_idrv_b_b
  7682  0ACE  0841               	movf	pid_pwm1_idrv_b_b@t32+3,w
  7683  0ACF  3A80               	xorlw	128
  7684  0AD0  0236               	subwf	??_pid_pwm1_idrv_b_b,w
  7685  0AD1  0021               	movlb	1	; select bank1
  7686  0AD2  1D03               	skipz
  7687  0AD3  2AE4               	goto	u5093
  7688  0AD4  0020               	movlb	0	; select bank0
  7689  0AD5  0840               	movf	pid_pwm1_idrv_b_b@t32+2,w
  7690  0AD6  0021               	movlb	1	; select bank1
  7691  0AD7  0260               	subwf	(_bbmax+2)^(0+128),w
  7692  0AD8  1D03               	skipz
  7693  0AD9  2AE4               	goto	u5093
  7694  0ADA  0020               	movlb	0	; select bank0
  7695  0ADB  083F               	movf	pid_pwm1_idrv_b_b@t32+1,w
  7696  0ADC  0021               	movlb	1	; select bank1
  7697  0ADD  025F               	subwf	(_bbmax+1)^(0+128),w
  7698  0ADE  1D03               	skipz
  7699  0ADF  2AE4               	goto	u5093
  7700  0AE0  0020               	movlb	0	; select bank0
  7701  0AE1  083E               	movf	pid_pwm1_idrv_b_b@t32,w
  7702  0AE2  0021               	movlb	1	; select bank1
  7703  0AE3  025E               	subwf	_bbmax^(0+128),w
  7704  0AE4                     u5093:	
  7705  0AE4  1803               	skipnc
  7706  0AE5  2AF6               	goto	l690
  7707  0AE6  0020               	movlb	0	; select bank0
  7708  0AE7  0841               	movf	pid_pwm1_idrv_b_b@t32+3,w
  7709  0AE8  0021               	movlb	1	; select bank1
  7710  0AE9  00E1               	movwf	(_bbmax+3)^(0+128)
  7711  0AEA  0020               	movlb	0	; select bank0
  7712  0AEB  0840               	movf	pid_pwm1_idrv_b_b@t32+2,w
  7713  0AEC  0021               	movlb	1	; select bank1
  7714  0AED  00E0               	movwf	(_bbmax+2)^(0+128)
  7715  0AEE  0020               	movlb	0	; select bank0
  7716  0AEF  083F               	movf	pid_pwm1_idrv_b_b@t32+1,w
  7717  0AF0  0021               	movlb	1	; select bank1
  7718  0AF1  00DF               	movwf	(_bbmax+1)^(0+128)
  7719  0AF2  0020               	movlb	0	; select bank0
  7720  0AF3  083E               	movf	pid_pwm1_idrv_b_b@t32,w
  7721  0AF4  0021               	movlb	1	; select bank1
  7722  0AF5  00DE               	movwf	_bbmax^(0+128)
  7723  0AF6                     l690:	
  7724                           
  7725                           ;sample.c: 316: if(bbmin>t32)bbmin=t32;
  7726  0AF6  0020               	movlb	0	; select bank0
  7727  0AF7  0841               	movf	pid_pwm1_idrv_b_b@t32+3,w
  7728  0AF8  3A80               	xorlw	128
  7729  0AF9  00B6               	movwf	??_pid_pwm1_idrv_b_b
  7730  0AFA  0021               	movlb	1	; select bank1
  7731  0AFB  085D               	movf	(_bbmin+3)^(0+128),w
  7732  0AFC  3A80               	xorlw	128
  7733  0AFD  0020               	movlb	0	; select bank0
  7734  0AFE  0236               	subwf	??_pid_pwm1_idrv_b_b,w
  7735  0AFF  1D03               	skipz
  7736  0B00  2B11               	goto	u5103
  7737  0B01  0021               	movlb	1	; select bank1
  7738  0B02  085C               	movf	(_bbmin+2)^(0+128),w
  7739  0B03  0020               	movlb	0	; select bank0
  7740  0B04  0240               	subwf	pid_pwm1_idrv_b_b@t32+2,w
  7741  0B05  1D03               	skipz
  7742  0B06  2B11               	goto	u5103
  7743  0B07  0021               	movlb	1	; select bank1
  7744  0B08  085B               	movf	(_bbmin+1)^(0+128),w
  7745  0B09  0020               	movlb	0	; select bank0
  7746  0B0A  023F               	subwf	pid_pwm1_idrv_b_b@t32+1,w
  7747  0B0B  1D03               	skipz
  7748  0B0C  2B11               	goto	u5103
  7749  0B0D  0021               	movlb	1	; select bank1
  7750  0B0E  085A               	movf	_bbmin^(0+128),w
  7751  0B0F  0020               	movlb	0	; select bank0
  7752  0B10  023E               	subwf	pid_pwm1_idrv_b_b@t32,w
  7753  0B11                     u5103:	
  7754  0B11  1803               	skipnc
  7755  0B12  0008               	return
  7756  0B13  0841               	movf	pid_pwm1_idrv_b_b@t32+3,w
  7757  0B14  0021               	movlb	1	; select bank1
  7758  0B15  00DD               	movwf	(_bbmin+3)^(0+128)
  7759  0B16  0020               	movlb	0	; select bank0
  7760  0B17  0840               	movf	pid_pwm1_idrv_b_b@t32+2,w
  7761  0B18  0021               	movlb	1	; select bank1
  7762  0B19  00DC               	movwf	(_bbmin+2)^(0+128)
  7763  0B1A  0020               	movlb	0	; select bank0
  7764  0B1B  083F               	movf	pid_pwm1_idrv_b_b@t32+1,w
  7765  0B1C  0021               	movlb	1	; select bank1
  7766  0B1D  00DB               	movwf	(_bbmin+1)^(0+128)
  7767  0B1E  0020               	movlb	0	; select bank0
  7768  0B1F  083E               	movf	pid_pwm1_idrv_b_b@t32,w
  7769  0B20  0021               	movlb	1	; select bank1
  7770  0B21  00DA               	movwf	_bbmin^(0+128)
  7771  0B22  0008               	return
  7772  0B23                     l679:	
  7773  0B23  0008               	return
  7774  0B24                     __end_of_pid_pwm1_idrv_b_b:	
  7775                           
  7776                           	psect	swtext1
  7777  1839                     __pswtext1:	
  7778  1839                     S5921:	
  7779  1839  3188  28FE         	ljmp	l5449
  7780  183B  3188  28FE         	ljmp	l5449
  7781  183D  3189  2900         	ljmp	l5455
  7782  183F  3189  2917         	ljmp	l5461
  7783  1841  3189  2942         	ljmp	l5475
  7784  1843  318B  2B23         	ljmp	l679
  7785                           
  7786                           	psect	text11
  7787  1B39                     __ptext11:	
  7788 ;; *************** function _set_idrv_pwm1_duty *****************
  7789 ;; Defined at:
  7790 ;;		line 72 in file "src/api/sample.c"
  7791 ;; Parameters:    Size  Location     Type
  7792 ;;  duty            2    2[BANK0 ] unsigned int 
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;  t16             2    4[BANK0 ] unsigned int 
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  1    wreg      void 
  7797 ;; Registers used:
  7798 ;;		wreg, status,2, pclath, cstack
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7804 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7805 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7807 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7808 ;;Total ram usage:        4 bytes
  7809 ;; Hardware stack levels used:    1
  7810 ;; Hardware stack levels required when called:    2
  7811 ;; This function calls:
  7812 ;;		_get_idrv_pwm1_duty
  7813 ;; This function is called by:
  7814 ;;		_pid_pwm1_idrv_b_b
  7815 ;;		_pid_pwm1_idrv_run
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819                           
  7820                           ;psect for function _set_idrv_pwm1_duty
  7821  1B39                     _set_idrv_pwm1_duty:	
  7822                           
  7823                           ;sample.c: 75: uint16_t t16;
  7824                           ;sample.c: 76: pwm1DutyForIdrv=duty;
  7825                           
  7826                           ;incstack = 0
  7827                           ; Regs used in _set_idrv_pwm1_duty: [wreg+status,2+pclath+cstack]
  7828  1B39  0020               	movlb	0	; select bank0
  7829  1B3A  0823               	movf	set_idrv_pwm1_duty@duty+1,w
  7830  1B3B  0021               	movlb	1	; select bank1
  7831  1B3C  00E7               	movwf	(_pwm1DutyForIdrv+1)^(0+128)
  7832  1B3D  0020               	movlb	0	; select bank0
  7833  1B3E  0822               	movf	set_idrv_pwm1_duty@duty,w
  7834  1B3F  0021               	movlb	1	; select bank1
  7835  1B40  00E6               	movwf	_pwm1DutyForIdrv^(0+128)
  7836                           
  7837                           ;sample.c: 77: t16=get_idrv_pwm1_duty();
  7838  1B41  319A  227E  319B   	fcall	_get_idrv_pwm1_duty
  7839  1B44  0874               	movf	?_get_idrv_pwm1_duty+1,w
  7840  1B45  0020               	movlb	0	; select bank0
  7841  1B46  00A5               	movwf	set_idrv_pwm1_duty@t16+1
  7842  1B47  0873               	movf	?_get_idrv_pwm1_duty,w
  7843  1B48  00A4               	movwf	set_idrv_pwm1_duty@t16
  7844                           
  7845                           ;sample.c: 78: if(t16==duty)return;
  7846  1B49  0823               	movf	set_idrv_pwm1_duty@duty+1,w
  7847  1B4A  0625               	xorwf	set_idrv_pwm1_duty@t16+1,w
  7848  1B4B  1D03               	skipz
  7849  1B4C  2B4F               	goto	u4395
  7850  1B4D  0822               	movf	set_idrv_pwm1_duty@duty,w
  7851  1B4E  0624               	xorwf	set_idrv_pwm1_duty@t16,w
  7852  1B4F                     u4395:	
  7853  1B4F  1903               	btfsc	3,2
  7854  1B50  0008               	return
  7855                           
  7856                           ;sample.c: 81: PWM1CONbits.EN = 0;
  7857  1B51  003B               	movlb	27	; select bank27
  7858  1B52  139B               	bcf	27,7	;volatile
  7859                           
  7860                           ;sample.c: 82: PWM1DCL= (uint8_t)(duty&0xff);
  7861  1B53  0020               	movlb	0	; select bank0
  7862  1B54  0822               	movf	set_idrv_pwm1_duty@duty,w
  7863  1B55  003B               	movlb	27	; select bank27
  7864  1B56  0093               	movwf	19	;volatile
  7865                           
  7866                           ;sample.c: 83: PWM1DCH=(uint8_t)(duty>>8);
  7867  1B57  0020               	movlb	0	; select bank0
  7868  1B58  0823               	movf	set_idrv_pwm1_duty@duty+1,w
  7869  1B59  003B               	movlb	27	; select bank27
  7870  1B5A  0094               	movwf	20	;volatile
  7871                           
  7872                           ;sample.c: 84: PWM1CONbits.EN = 1;
  7873  1B5B  179B               	bsf	27,7	;volatile
  7874  1B5C  0008               	return
  7875  1B5D                     __end_of_set_idrv_pwm1_duty:	
  7876                           
  7877                           	psect	text12
  7878  1A7E                     __ptext12:	
  7879 ;; *************** function _get_idrv_pwm1_duty *****************
  7880 ;; Defined at:
  7881 ;;		line 63 in file "src/api/sample.c"
  7882 ;; Parameters:    Size  Location     Type
  7883 ;;		None
  7884 ;; Auto vars:     Size  Location     Type
  7885 ;;  t16             2    0[BANK0 ] unsigned int 
  7886 ;; Return value:  Size  Location     Type
  7887 ;;                  2    3[COMMON] unsigned int 
  7888 ;; Registers used:
  7889 ;;		wreg
  7890 ;; Tracked objects:
  7891 ;;		On entry : 0/0
  7892 ;;		On exit  : 0/0
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7895 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7896 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7897 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7898 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7899 ;;Total ram usage:        6 bytes
  7900 ;; Hardware stack levels used:    1
  7901 ;; Hardware stack levels required when called:    1
  7902 ;; This function calls:
  7903 ;;		Nothing
  7904 ;; This function is called by:
  7905 ;;		_set_idrv_pwm1_duty
  7906 ;; This function uses a non-reentrant model
  7907 ;;
  7908                           
  7909                           
  7910                           ;psect for function _get_idrv_pwm1_duty
  7911  1A7E                     _get_idrv_pwm1_duty:	
  7912                           
  7913                           ;sample.c: 66: uint16_t t16=PWM1DCH;
  7914                           
  7915                           ;incstack = 0
  7916                           ; Regs used in _get_idrv_pwm1_duty: [wreg]
  7917  1A7E  003B               	movlb	27	; select bank27
  7918  1A7F  0814               	movf	20,w	;volatile
  7919  1A80  00F5               	movwf	??_get_idrv_pwm1_duty
  7920  1A81  01F6               	clrf	??_get_idrv_pwm1_duty+1
  7921  1A82  0875               	movf	??_get_idrv_pwm1_duty,w
  7922  1A83  0020               	movlb	0	; select bank0
  7923  1A84  00A0               	movwf	get_idrv_pwm1_duty@t16
  7924  1A85  0876               	movf	??_get_idrv_pwm1_duty+1,w
  7925  1A86  00A1               	movwf	get_idrv_pwm1_duty@t16+1
  7926                           
  7927                           ;sample.c: 67: t16<<=8;
  7928  1A87  3008               	movlw	8
  7929  1A88                     u4335:	
  7930  1A88  35A0               	lslf	get_idrv_pwm1_duty@t16,f
  7931  1A89  0DA1               	rlf	get_idrv_pwm1_duty@t16+1,f
  7932  1A8A  0B89               	decfsz	9,f
  7933  1A8B  2A88               	goto	u4335
  7934                           
  7935                           ;sample.c: 68: t16|=PWM1DCL;
  7936  1A8C  003B               	movlb	27	; select bank27
  7937  1A8D  0813               	movf	19,w	;volatile
  7938  1A8E  00F5               	movwf	??_get_idrv_pwm1_duty
  7939  1A8F  01F6               	clrf	??_get_idrv_pwm1_duty+1
  7940  1A90  0875               	movf	??_get_idrv_pwm1_duty,w
  7941  1A91  0020               	movlb	0	; select bank0
  7942  1A92  04A0               	iorwf	get_idrv_pwm1_duty@t16,f
  7943  1A93  0876               	movf	??_get_idrv_pwm1_duty+1,w
  7944  1A94  04A1               	iorwf	get_idrv_pwm1_duty@t16+1,f
  7945                           
  7946                           ;sample.c: 69: return t16;
  7947  1A95  0821               	movf	get_idrv_pwm1_duty@t16+1,w
  7948  1A96  00F4               	movwf	?_get_idrv_pwm1_duty+1
  7949  1A97  0820               	movf	get_idrv_pwm1_duty@t16,w
  7950  1A98  00F3               	movwf	?_get_idrv_pwm1_duty
  7951  1A99  0008               	return
  7952  1A9A                     __end_of_get_idrv_pwm1_duty:	
  7953                           
  7954                           	psect	text13
  7955  1AB6                     __ptext13:	
  7956 ;; *************** function ___wmul *****************
  7957 ;; Defined at:
  7958 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
  7959 ;; Parameters:    Size  Location     Type
  7960 ;;  multiplier      2    3[COMMON] unsigned int 
  7961 ;;  multiplicand    2    5[COMMON] unsigned int 
  7962 ;; Auto vars:     Size  Location     Type
  7963 ;;  product         2    0[BANK0 ] unsigned int 
  7964 ;; Return value:  Size  Location     Type
  7965 ;;                  2    3[COMMON] unsigned int 
  7966 ;; Registers used:
  7967 ;;		wreg, status,2, status,0
  7968 ;; Tracked objects:
  7969 ;;		On entry : 0/0
  7970 ;;		On exit  : 0/0
  7971 ;;		Unchanged: 0/0
  7972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7973 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7974 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7976 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7977 ;;Total ram usage:        6 bytes
  7978 ;; Hardware stack levels used:    1
  7979 ;; Hardware stack levels required when called:    1
  7980 ;; This function calls:
  7981 ;;		Nothing
  7982 ;; This function is called by:
  7983 ;;		_pid_pwm1_idrv_b_b
  7984 ;;		_sys_data_init
  7985 ;; This function uses a non-reentrant model
  7986 ;;
  7987                           
  7988                           
  7989                           ;psect for function ___wmul
  7990  1AB6                     ___wmul:	
  7991                           
  7992                           ;incstack = 0
  7993                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7994  1AB6  0020               	movlb	0	; select bank0
  7995  1AB7  01A0               	clrf	___wmul@product
  7996  1AB8  01A1               	clrf	___wmul@product+1
  7997  1AB9                     l5293:	
  7998  1AB9  1C73               	btfss	___wmul@multiplier,0
  7999  1ABA  2AC0               	goto	l1151
  8000  1ABB  0875               	movf	___wmul@multiplicand,w
  8001  1ABC  0020               	movlb	0	; select bank0
  8002  1ABD  07A0               	addwf	___wmul@product,f
  8003  1ABE  0876               	movf	___wmul@multiplicand+1,w
  8004  1ABF  3DA1               	addwfc	___wmul@product+1,f
  8005  1AC0                     l1151:	
  8006  1AC0  3001               	movlw	1
  8007  1AC1                     u4715:	
  8008  1AC1  35F5               	lslf	___wmul@multiplicand,f
  8009  1AC2  0DF6               	rlf	___wmul@multiplicand+1,f
  8010  1AC3  0B89               	decfsz	9,f
  8011  1AC4  2AC1               	goto	u4715
  8012  1AC5  3001               	movlw	1
  8013  1AC6                     u4725:	
  8014  1AC6  36F4               	lsrf	___wmul@multiplier+1,f
  8015  1AC7  0CF3               	rrf	___wmul@multiplier,f
  8016  1AC8  0B89               	decfsz	9,f
  8017  1AC9  2AC6               	goto	u4725
  8018  1ACA  0873               	movf	___wmul@multiplier,w
  8019  1ACB  0474               	iorwf	___wmul@multiplier+1,w
  8020  1ACC  1D03               	btfss	3,2
  8021  1ACD  2AB9               	goto	l5293
  8022  1ACE  0020               	movlb	0	; select bank0
  8023  1ACF  0821               	movf	___wmul@product+1,w
  8024  1AD0  00F4               	movwf	?___wmul+1
  8025  1AD1  0820               	movf	___wmul@product,w
  8026  1AD2  00F3               	movwf	?___wmul
  8027  1AD3  0008               	return
  8028  1AD4                     __end_of___wmul:	
  8029                           
  8030                           	psect	text14
  8031  1C2F                     __ptext14:	
  8032 ;; *************** function ___lwdiv *****************
  8033 ;; Defined at:
  8034 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;  divisor         2    2[BANK0 ] unsigned int 
  8037 ;;  dividend        2    4[BANK0 ] unsigned int 
  8038 ;; Auto vars:     Size  Location     Type
  8039 ;;  quotient        2    6[BANK0 ] unsigned int 
  8040 ;;  counter         1    8[BANK0 ] unsigned char 
  8041 ;; Return value:  Size  Location     Type
  8042 ;;                  2    2[BANK0 ] unsigned int 
  8043 ;; Registers used:
  8044 ;;		wreg, status,2, status,0
  8045 ;; Tracked objects:
  8046 ;;		On entry : 0/0
  8047 ;;		On exit  : 0/0
  8048 ;;		Unchanged: 0/0
  8049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8050 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8051 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8052 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8053 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8054 ;;Total ram usage:        8 bytes
  8055 ;; Hardware stack levels used:    1
  8056 ;; Hardware stack levels required when called:    1
  8057 ;; This function calls:
  8058 ;;		Nothing
  8059 ;; This function is called by:
  8060 ;;		_pid_pwm1_idrv_b_b
  8061 ;;		_pid_pwm2_vout_run
  8062 ;; This function uses a non-reentrant model
  8063 ;;
  8064                           
  8065                           
  8066                           ;psect for function ___lwdiv
  8067  1C2F                     ___lwdiv:	
  8068                           
  8069                           ;incstack = 0
  8070                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8071  1C2F  0020               	movlb	0	; select bank0
  8072  1C30  01A6               	clrf	___lwdiv@quotient
  8073  1C31  01A7               	clrf	___lwdiv@quotient+1
  8074  1C32  0822               	movf	___lwdiv@divisor,w
  8075  1C33  0423               	iorwf	___lwdiv@divisor+1,w
  8076  1C34  1903               	btfsc	3,2
  8077  1C35  2C5F               	goto	l4113
  8078  1C36  01A8               	clrf	___lwdiv@counter
  8079  1C37  0AA8               	incf	___lwdiv@counter,f
  8080  1C38                     l4101:	
  8081  1C38  1BA3               	btfsc	___lwdiv@divisor+1,7
  8082  1C39  2C44               	goto	l4103
  8083  1C3A  3001               	movlw	1
  8084  1C3B                     u3185:	
  8085  1C3B  35A2               	lslf	___lwdiv@divisor,f
  8086  1C3C  0DA3               	rlf	___lwdiv@divisor+1,f
  8087  1C3D  0B89               	decfsz	9,f
  8088  1C3E  2C3B               	goto	u3185
  8089  1C3F  3001               	movlw	1
  8090  1C40  00F7               	movwf	??___lwdiv
  8091  1C41  0877               	movf	??___lwdiv,w
  8092  1C42  07A8               	addwf	___lwdiv@counter,f
  8093  1C43  2C38               	goto	l4101
  8094  1C44                     l4103:	
  8095  1C44  3001               	movlw	1
  8096  1C45                     u3205:	
  8097  1C45  35A6               	lslf	___lwdiv@quotient,f
  8098  1C46  0DA7               	rlf	___lwdiv@quotient+1,f
  8099  1C47  0B89               	decfsz	9,f
  8100  1C48  2C45               	goto	u3205
  8101  1C49  0823               	movf	___lwdiv@divisor+1,w
  8102  1C4A  0225               	subwf	___lwdiv@dividend+1,w
  8103  1C4B  1D03               	skipz
  8104  1C4C  2C4F               	goto	u3215
  8105  1C4D  0822               	movf	___lwdiv@divisor,w
  8106  1C4E  0224               	subwf	___lwdiv@dividend,w
  8107  1C4F                     u3215:	
  8108  1C4F  1C03               	skipc
  8109  1C50  2C56               	goto	l4109
  8110  1C51  0822               	movf	___lwdiv@divisor,w
  8111  1C52  02A4               	subwf	___lwdiv@dividend,f
  8112  1C53  0823               	movf	___lwdiv@divisor+1,w
  8113  1C54  3BA5               	subwfb	___lwdiv@dividend+1,f
  8114  1C55  1426               	bsf	___lwdiv@quotient,0
  8115  1C56                     l4109:	
  8116  1C56  3001               	movlw	1
  8117  1C57                     u3225:	
  8118  1C57  36A3               	lsrf	___lwdiv@divisor+1,f
  8119  1C58  0CA2               	rrf	___lwdiv@divisor,f
  8120  1C59  0B89               	decfsz	9,f
  8121  1C5A  2C57               	goto	u3225
  8122  1C5B  3001               	movlw	1
  8123  1C5C  02A8               	subwf	___lwdiv@counter,f
  8124  1C5D  1D03               	btfss	3,2
  8125  1C5E  2C44               	goto	l4103
  8126  1C5F                     l4113:	
  8127  1C5F  0827               	movf	___lwdiv@quotient+1,w
  8128  1C60  00A3               	movwf	?___lwdiv+1
  8129  1C61  0826               	movf	___lwdiv@quotient,w
  8130  1C62  00A2               	movwf	?___lwdiv
  8131  1C63  0008               	return
  8132  1C64                     __end_of___lwdiv:	
  8133                           
  8134                           	psect	text15
  8135  1DF8                     __ptext15:	
  8136 ;; *************** function _modbus_response_process *****************
  8137 ;; Defined at:
  8138 ;;		line 208 in file "src/api/modbus.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;  rbuf            1    wreg     PTR unsigned char 
  8141 ;;		 -> modbusBuf(60), 
  8142 ;;  rlen            2   32[BANK0 ] unsigned int 
  8143 ;; Auto vars:     Size  Location     Type
  8144 ;;  rbuf            1   37[BANK0 ] PTR unsigned char 
  8145 ;;		 -> modbusBuf(60), 
  8146 ;;  pmdbs           1   36[BANK0 ] PTR struct .
  8147 ;;		 -> modbusBuf(60), 
  8148 ;;  resp            1   35[BANK0 ] unsigned char 
  8149 ;; Return value:  Size  Location     Type
  8150 ;;                  1    wreg      void 
  8151 ;; Registers used:
  8152 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8153 ;; Tracked objects:
  8154 ;;		On entry : 0/0
  8155 ;;		On exit  : 0/0
  8156 ;;		Unchanged: 0/0
  8157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8158 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8159 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8160 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8161 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8162 ;;Total ram usage:        6 bytes
  8163 ;; Hardware stack levels used:    1
  8164 ;; Hardware stack levels required when called:    5
  8165 ;; This function calls:
  8166 ;;		_crc_verify
  8167 ;;		_modbus_response_command
  8168 ;;		_modbus_response_illgeal_function
  8169 ;;		_modbus_response_write_mult_register
  8170 ;;		_modbus_response_write_single_register
  8171 ;; This function is called by:
  8172 ;;		_main
  8173 ;; This function uses a non-reentrant model
  8174 ;;
  8175                           
  8176                           
  8177                           ;psect for function _modbus_response_process
  8178  1DF8                     _modbus_response_process:	
  8179                           
  8180                           ;incstack = 0
  8181                           ; Regs used in _modbus_response_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8182                           ;modbus_response_process@rbuf stored from wreg
  8183  1DF8  0020               	movlb	0	; select bank0
  8184  1DF9  00C5               	movwf	modbus_response_process@rbuf
  8185                           
  8186                           ;modbus.c: 209: uint8_t resp=0;
  8187  1DFA  01C3               	clrf	modbus_response_process@resp
  8188                           
  8189                           ;modbus.c: 210: st_modbusComReqStructDef* pmdbs=(st_modbusComReqStructDef*)rbuf;
  8190  1DFB  0845               	movf	modbus_response_process@rbuf,w
  8191  1DFC  00C2               	movwf	??_modbus_response_process
  8192  1DFD  0842               	movf	??_modbus_response_process,w
  8193  1DFE  00C4               	movwf	modbus_response_process@pmdbs
  8194                           
  8195                           ;modbus.c: 213: if((pmdbs->addr!=sysData.id) && (pmdbs->addr!=0x00))return;
  8196  1DFF  305C               	movlw	92
  8197  1E00  0086               	movwf	6
  8198  1E01  3023               	movlw	35
  8199  1E02  0087               	movwf	7
  8200  1E03  3142               	addfsr 1,2
  8201  1E04  0844               	movf	modbus_response_process@pmdbs,w
  8202  1E05  0084               	movwf	4
  8203  1E06  3001               	movlw	1	; select bank2/3
  8204  1E07  0085               	movwf	5
  8205  1E08  0800               	movf	0,w
  8206  1E09  0601               	xorwf	1,w
  8207  1E0A  1903               	skipnz
  8208  1E0B  2E13               	goto	l5677
  8209  1E0C  0844               	movf	modbus_response_process@pmdbs,w
  8210  1E0D  0086               	movwf	6
  8211  1E0E  3001               	movlw	1	; select bank2/3
  8212  1E0F  0087               	movwf	7
  8213  1E10  0801               	movf	1,w
  8214  1E11  1D03               	btfss	3,2
  8215  1E12  0008               	return
  8216  1E13                     l5677:	
  8217                           
  8218                           ;modbus.c: 214: if(!(crc_verify(rbuf,rlen)))return ;
  8219  1E13  0845               	movf	modbus_response_process@rbuf,w
  8220  1E14  00A8               	movwf	crc_verify@message
  8221  1E15  3001               	movlw	1
  8222  1E16  00A9               	movwf	crc_verify@message+1
  8223  1E17  0841               	movf	modbus_response_process@rlen+1,w
  8224  1E18  00AB               	movwf	crc_verify@n+1
  8225  1E19  0840               	movf	modbus_response_process@rlen,w
  8226  1E1A  00AA               	movwf	crc_verify@n
  8227  1E1B  319C  2464  319D   	fcall	_crc_verify
  8228  1E1E  3A00               	xorlw	0
  8229  1E1F  1903               	btfsc	3,2
  8230  1E20  0008               	return
  8231  1E21  2E38               	goto	l5691
  8232  1E22                     l5681:	
  8233                           ;modbus.c: 217: case 0x03:
  8234                           
  8235                           ;modbus.c: 216: switch(pmdbs->func){
  8236                           
  8237                           
  8238                           ;modbus.c: 218: modbus_response_command(rbuf);
  8239  1E22  0020               	movlb	0	; select bank0
  8240  1E23  0845               	movf	modbus_response_process@rbuf,w
  8241  1E24  3193  23F7         	fcall	_modbus_response_command
  8242                           
  8243                           ;modbus.c: 219: break;
  8244  1E26  0008               	return
  8245  1E27                     l5683:	
  8246                           ;modbus.c: 220: case 0x06:
  8247                           
  8248                           
  8249                           ;modbus.c: 221: case 0x26:
  8250                           ;modbus.c: 222: modbus_response_write_single_register(rbuf);
  8251  1E27  0020               	movlb	0	; select bank0
  8252  1E28  0845               	movf	modbus_response_process@rbuf,w
  8253  1E29  318E  2697         	fcall	_modbus_response_write_single_register
  8254                           
  8255                           ;modbus.c: 223: break;
  8256  1E2B  0008               	return
  8257  1E2C                     l5685:	
  8258                           ;modbus.c: 224: case 0x10:
  8259                           
  8260                           
  8261                           ;modbus.c: 225: modbus_response_write_mult_register(rbuf);
  8262  1E2C  0020               	movlb	0	; select bank0
  8263  1E2D  0845               	movf	modbus_response_process@rbuf,w
  8264  1E2E  3191  2121         	fcall	_modbus_response_write_mult_register
  8265                           
  8266                           ;modbus.c: 226: break;
  8267  1E30  0008               	return
  8268  1E31                     l5687:	
  8269                           ;modbus.c: 249: default:
  8270                           
  8271                           
  8272                           ;modbus.c: 250: modbus_response_illgeal_function(rbuf,0x01);break;
  8273  1E31  0020               	movlb	0	; select bank0
  8274  1E32  01B3               	clrf	modbus_response_illgeal_function@errcode
  8275  1E33  0AB3               	incf	modbus_response_illgeal_function@errcode,f
  8276  1E34  0845               	movf	modbus_response_process@rbuf,w
  8277  1E35  319D  2511         	fcall	_modbus_response_illgeal_function
  8278                           
  8279                           ;modbus.c: 251: }
  8280  1E37  0008               	return
  8281  1E38                     l5691:	
  8282  1E38  0020               	movlb	0	; select bank0
  8283  1E39  0A44               	incf	modbus_response_process@pmdbs,w
  8284  1E3A  0086               	movwf	6
  8285  1E3B  3001               	movlw	1	; select bank2/3
  8286  1E3C  0087               	movwf	7
  8287  1E3D  0801               	movf	1,w
  8288                           
  8289                           ; Switch size 1, requested type "space"
  8290                           ; Number of cases is 4, Range of values is 3 to 38
  8291                           ; switch strategies available:
  8292                           ; Name         Instructions Cycles
  8293                           ; simple_byte           13     7 (average)
  8294                           ; direct_byte           81     9 (fixed)
  8295                           ; jumptable            263     9 (fixed)
  8296                           ;	Chosen strategy is simple_byte
  8297  1E3E  3A03               	xorlw	3	; case 3
  8298  1E3F  1903               	skipnz
  8299  1E40  2E22               	goto	l5681
  8300  1E41  3A05               	xorlw	5	; case 6
  8301  1E42  1903               	skipnz
  8302  1E43  2E27               	goto	l5683
  8303  1E44  3A16               	xorlw	22	; case 16
  8304  1E45  1903               	skipnz
  8305  1E46  2E2C               	goto	l5685
  8306  1E47  3A36               	xorlw	54	; case 38
  8307  1E48  1903               	skipnz
  8308  1E49  2E27               	goto	l5683
  8309  1E4A  2E31               	goto	l5687
  8310  1E4B  0008               	return
  8311  1E4C                     __end_of_modbus_response_process:	
  8312                           
  8313                           	psect	text16
  8314  0E97                     __ptext16:	
  8315 ;; *************** function _modbus_response_write_single_register *****************
  8316 ;; Defined at:
  8317 ;;		line 115 in file "src/api/modbus.c"
  8318 ;; Parameters:    Size  Location     Type
  8319 ;;  rbuf            1    wreg     PTR unsigned char 
  8320 ;;		 -> modbusBuf(60), 
  8321 ;; Auto vars:     Size  Location     Type
  8322 ;;  rbuf            1   29[BANK0 ] PTR unsigned char 
  8323 ;;		 -> modbusBuf(60), 
  8324 ;;  startAddr       2   30[BANK0 ] unsigned int 
  8325 ;;  i               2   26[BANK0 ] unsigned int 
  8326 ;;  t16             2   24[BANK0 ] unsigned int 
  8327 ;;  pmdbs           1   28[BANK0 ] PTR struct .
  8328 ;;		 -> modbusBuf(60), 
  8329 ;;  fiSave          1   23[BANK0 ] unsigned char 
  8330 ;; Return value:  Size  Location     Type
  8331 ;;                  1    wreg      void 
  8332 ;; Registers used:
  8333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8334 ;; Tracked objects:
  8335 ;;		On entry : 0/0
  8336 ;;		On exit  : 0/0
  8337 ;;		Unchanged: 0/0
  8338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8340 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8341 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8342 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8343 ;;Total ram usage:       13 bytes
  8344 ;; Hardware stack levels used:    1
  8345 ;; Hardware stack levels required when called:    4
  8346 ;; This function calls:
  8347 ;;		_crc_append
  8348 ;;		_sys_data_save
  8349 ;;		_uart_send_len
  8350 ;; This function is called by:
  8351 ;;		_modbus_response_process
  8352 ;; This function uses a non-reentrant model
  8353 ;;
  8354                           
  8355                           
  8356                           ;psect for function _modbus_response_write_single_register
  8357  0E97                     _modbus_response_write_single_register:	
  8358                           
  8359                           ;incstack = 0
  8360                           ; Regs used in _modbus_response_write_single_register: [wreg-fsr1h+status,2+status,0+pcl
      +                          ath+cstack]
  8361                           ;modbus_response_write_single_register@rbuf stored from wreg
  8362  0E97  0020               	movlb	0	; select bank0
  8363  0E98  00BD               	movwf	modbus_response_write_single_register@rbuf
  8364                           
  8365                           ;modbus.c: 117: uint16_t startAddr=0;
  8366  0E99  01BE               	clrf	modbus_response_write_single_register@startAddr
  8367  0E9A  01BF               	clrf	modbus_response_write_single_register@startAddr+1
  8368                           
  8369                           ;modbus.c: 118: uint16_t t16,i;
  8370                           ;modbus.c: 119: uint8_t fiSave=0;
  8371  0E9B  01B7               	clrf	modbus_response_write_single_register@fiSave
  8372                           
  8373                           ;modbus.c: 120: st_modbusComReqStructDef* pmdbs=(st_modbusComReqStructDef*)rbuf;
  8374  0E9C  083D               	movf	modbus_response_write_single_register@rbuf,w
  8375  0E9D  00B3               	movwf	??_modbus_response_write_single_register
  8376  0E9E  0833               	movf	??_modbus_response_write_single_register,w
  8377  0E9F  00BC               	movwf	modbus_response_write_single_register@pmdbs
  8378                           
  8379                           ;modbus.c: 121: if(pmdbs->addr!=sysData.id && pmdbs->addr!=0)return;
  8380  0EA0  305C               	movlw	92
  8381  0EA1  0086               	movwf	6
  8382  0EA2  3023               	movlw	35
  8383  0EA3  0087               	movwf	7
  8384  0EA4  3142               	addfsr 1,2
  8385  0EA5  083C               	movf	modbus_response_write_single_register@pmdbs,w
  8386  0EA6  0084               	movwf	4
  8387  0EA7  3001               	movlw	1	; select bank2/3
  8388  0EA8  0085               	movwf	5
  8389  0EA9  0800               	movf	0,w
  8390  0EAA  0601               	xorwf	1,w
  8391  0EAB  1903               	skipnz
  8392  0EAC  2EB4               	goto	l5147
  8393  0EAD  083C               	movf	modbus_response_write_single_register@pmdbs,w
  8394  0EAE  0086               	movwf	6
  8395  0EAF  3001               	movlw	1	; select bank2/3
  8396  0EB0  0087               	movwf	7
  8397  0EB1  0801               	movf	1,w
  8398  0EB2  1D03               	btfss	3,2
  8399  0EB3  0008               	return
  8400  0EB4                     l5147:	
  8401                           
  8402                           ;modbus.c: 122: if(sysData.id==253 && pmdbs->addr==0)return;
  8403  0EB4  305C               	movlw	92
  8404  0EB5  0086               	movwf	6
  8405  0EB6  3023               	movlw	35
  8406  0EB7  0087               	movwf	7
  8407  0EB8  3142               	addfsr 1,2
  8408  0EB9  30FD               	movlw	253
  8409  0EBA  0601               	xorwf	1,w
  8410  0EBB  1D03               	btfss	3,2
  8411  0EBC  2EC4               	goto	l5153
  8412  0EBD  083C               	movf	modbus_response_write_single_register@pmdbs,w
  8413  0EBE  0086               	movwf	6
  8414  0EBF  3001               	movlw	1	; select bank2/3
  8415  0EC0  0087               	movwf	7
  8416  0EC1  0801               	movf	1,w
  8417  0EC2  1903               	btfsc	3,2
  8418  0EC3  0008               	return
  8419  0EC4                     l5153:	
  8420                           
  8421                           ;modbus.c: 123: startAddr=pmdbs->addr_hi;
  8422  0EC4  083C               	movf	modbus_response_write_single_register@pmdbs,w
  8423  0EC5  3E02               	addlw	2
  8424  0EC6  0086               	movwf	6
  8425  0EC7  3001               	movlw	1	; select bank2/3
  8426  0EC8  0087               	movwf	7
  8427  0EC9  0801               	movf	1,w
  8428  0ECA  00B3               	movwf	??_modbus_response_write_single_register
  8429  0ECB  01B4               	clrf	??_modbus_response_write_single_register+1
  8430  0ECC  0833               	movf	??_modbus_response_write_single_register,w
  8431  0ECD  00BE               	movwf	modbus_response_write_single_register@startAddr
  8432  0ECE  0834               	movf	??_modbus_response_write_single_register+1,w
  8433  0ECF  00BF               	movwf	modbus_response_write_single_register@startAddr+1
  8434                           
  8435                           ;modbus.c: 124: startAddr<<=8;
  8436  0ED0  3008               	movlw	8
  8437  0ED1                     u4495:	
  8438  0ED1  35BE               	lslf	modbus_response_write_single_register@startAddr,f
  8439  0ED2  0DBF               	rlf	modbus_response_write_single_register@startAddr+1,f
  8440  0ED3  0B89               	decfsz	9,f
  8441  0ED4  2ED1               	goto	u4495
  8442                           
  8443                           ;modbus.c: 125: startAddr |= pmdbs->addr_lo;
  8444  0ED5  083C               	movf	modbus_response_write_single_register@pmdbs,w
  8445  0ED6  3E03               	addlw	3
  8446  0ED7  0086               	movwf	6
  8447  0ED8  3001               	movlw	1	; select bank2/3
  8448  0ED9  0087               	movwf	7
  8449  0EDA  0801               	movf	1,w
  8450  0EDB  00B3               	movwf	??_modbus_response_write_single_register
  8451  0EDC  01B4               	clrf	??_modbus_response_write_single_register+1
  8452  0EDD  0833               	movf	??_modbus_response_write_single_register,w
  8453  0EDE  04BE               	iorwf	modbus_response_write_single_register@startAddr,f
  8454  0EDF  0834               	movf	??_modbus_response_write_single_register+1,w
  8455  0EE0  04BF               	iorwf	modbus_response_write_single_register@startAddr+1,f
  8456                           
  8457                           ;modbus.c: 126: startAddr = startAddr & 0xff;
  8458  0EE1  30FF               	movlw	255
  8459  0EE2  053E               	andwf	modbus_response_write_single_register@startAddr,w
  8460  0EE3  00BE               	movwf	modbus_response_write_single_register@startAddr
  8461  0EE4  3000               	movlw	0
  8462  0EE5  053F               	andwf	modbus_response_write_single_register@startAddr+1,w
  8463  0EE6  00BF               	movwf	modbus_response_write_single_register@startAddr+1
  8464                           
  8465                           ;modbus.c: 127: if(startAddr==0x02){
  8466  0EE7  3002               	movlw	2
  8467  0EE8  063E               	xorwf	modbus_response_write_single_register@startAddr,w
  8468  0EE9  043F               	iorwf	modbus_response_write_single_register@startAddr+1,w
  8469  0EEA  1D03               	btfss	3,2
  8470  0EEB  2EFA               	goto	l5165
  8471                           
  8472                           ;modbus.c: 128: sysData.id=rbuf[5];
  8473  0EEC  083D               	movf	modbus_response_write_single_register@rbuf,w
  8474  0EED  3E05               	addlw	5
  8475  0EEE  0086               	movwf	6
  8476  0EEF  3001               	movlw	1	; select bank2/3
  8477  0EF0  0087               	movwf	7
  8478  0EF1  0801               	movf	1,w
  8479  0EF2  00B3               	movwf	??_modbus_response_write_single_register
  8480  0EF3  305E               	movlw	94
  8481  0EF4  0086               	movwf	6
  8482  0EF5  3023               	movlw	35
  8483  0EF6  0087               	movwf	7
  8484  0EF7  0833               	movf	??_modbus_response_write_single_register,w
  8485  0EF8  0081               	movwf	1
  8486  0EF9  2FC3               	goto	l860
  8487  0EFA                     l5165:	
  8488                           ;modbus.c: 130: }else if(startAddr==0x03){
  8489                           
  8490                           ;modbus.c: 129: fiSave=1;
  8491                           
  8492  0EFA  3003               	movlw	3
  8493  0EFB  063E               	xorwf	modbus_response_write_single_register@startAddr,w
  8494  0EFC  043F               	iorwf	modbus_response_write_single_register@startAddr+1,w
  8495  0EFD  1D03               	btfss	3,2
  8496  0EFE  2F18               	goto	l5173
  8497                           
  8498                           ;modbus.c: 131: sysData.pidSetFlg1=rbuf[4];
  8499  0EFF  083D               	movf	modbus_response_write_single_register@rbuf,w
  8500  0F00  3E04               	addlw	4
  8501  0F01  0086               	movwf	6
  8502  0F02  3001               	movlw	1	; select bank2/3
  8503  0F03  0087               	movwf	7
  8504  0F04  0801               	movf	1,w
  8505  0F05  00B3               	movwf	??_modbus_response_write_single_register
  8506  0F06  305D               	movlw	93
  8507  0F07  0086               	movwf	6
  8508  0F08  3023               	movlw	35
  8509  0F09  0087               	movwf	7
  8510  0F0A  0833               	movf	??_modbus_response_write_single_register,w
  8511  0F0B  0081               	movwf	1
  8512                           
  8513                           ;modbus.c: 132: sysData.pidSetFlg0=rbuf[5];
  8514  0F0C  305C               	movlw	92
  8515  0F0D  0086               	movwf	6
  8516  0F0E  3023               	movlw	35
  8517  0F0F  0087               	movwf	7
  8518  0F10  083D               	movf	modbus_response_write_single_register@rbuf,w
  8519  0F11  3E05               	addlw	5
  8520  0F12  0084               	movwf	4
  8521  0F13  3001               	movlw	1	; select bank2/3
  8522  0F14  0085               	movwf	5
  8523  0F15  0800               	movf	0,w
  8524  0F16  3FC0               	movwi [0]fsr1
  8525  0F17  2FC3               	goto	l860
  8526  0F18                     l5173:	
  8527                           ;modbus.c: 134: }else if(startAddr>0x0f && startAddr < 0x10+30*2){
  8528                           
  8529                           ;modbus.c: 133: fiSave=1;
  8530                           
  8531  0F18  3000               	movlw	0
  8532  0F19  023F               	subwf	modbus_response_write_single_register@startAddr+1,w
  8533  0F1A  3010               	movlw	16
  8534  0F1B  1903               	skipnz
  8535  0F1C  023E               	subwf	modbus_response_write_single_register@startAddr,w
  8536  0F1D  1C03               	skipc
  8537  0F1E  0008               	return
  8538  0F1F  3000               	movlw	0
  8539  0F20  023F               	subwf	modbus_response_write_single_register@startAddr+1,w
  8540  0F21  304C               	movlw	76
  8541  0F22  1903               	skipnz
  8542  0F23  023E               	subwf	modbus_response_write_single_register@startAddr,w
  8543  0F24  1803               	skipnc
  8544  0F25  0008               	return
  8545                           
  8546                           ;modbus.c: 135: startAddr-=0x10;
  8547  0F26  3010               	movlw	16
  8548  0F27  02BE               	subwf	modbus_response_write_single_register@startAddr,f
  8549  0F28  3000               	movlw	0
  8550  0F29  3BBF               	subwfb	modbus_response_write_single_register@startAddr+1,f
  8551                           
  8552                           ;modbus.c: 136: if(startAddr & 0x01){
  8553  0F2A  1C3E               	btfss	modbus_response_write_single_register@startAddr,0
  8554  0F2B  2FC5               	goto	l5205
  8555                           
  8556                           ;modbus.c: 137: t16=rbuf[4];
  8557  0F2C  083D               	movf	modbus_response_write_single_register@rbuf,w
  8558  0F2D  3E04               	addlw	4
  8559  0F2E  0086               	movwf	6
  8560  0F2F  3001               	movlw	1	; select bank2/3
  8561  0F30  0087               	movwf	7
  8562  0F31  0801               	movf	1,w
  8563  0F32  00B3               	movwf	??_modbus_response_write_single_register
  8564  0F33  01B4               	clrf	??_modbus_response_write_single_register+1
  8565  0F34  0833               	movf	??_modbus_response_write_single_register,w
  8566  0F35  00B8               	movwf	modbus_response_write_single_register@t16
  8567  0F36  0834               	movf	??_modbus_response_write_single_register+1,w
  8568  0F37  00B9               	movwf	modbus_response_write_single_register@t16+1
  8569                           
  8570                           ;modbus.c: 138: t16<<=8;
  8571  0F38  3008               	movlw	8
  8572  0F39                     u4555:	
  8573  0F39  35B8               	lslf	modbus_response_write_single_register@t16,f
  8574  0F3A  0DB9               	rlf	modbus_response_write_single_register@t16+1,f
  8575  0F3B  0B89               	decfsz	9,f
  8576  0F3C  2F39               	goto	u4555
  8577                           
  8578                           ;modbus.c: 139: t16 |= rbuf[5];
  8579  0F3D  083D               	movf	modbus_response_write_single_register@rbuf,w
  8580  0F3E  3E05               	addlw	5
  8581  0F3F  0086               	movwf	6
  8582  0F40  3001               	movlw	1	; select bank2/3
  8583  0F41  0087               	movwf	7
  8584  0F42  0801               	movf	1,w
  8585  0F43  00B3               	movwf	??_modbus_response_write_single_register
  8586  0F44  01B4               	clrf	??_modbus_response_write_single_register+1
  8587  0F45  0833               	movf	??_modbus_response_write_single_register,w
  8588  0F46  04B8               	iorwf	modbus_response_write_single_register@t16,f
  8589  0F47  0834               	movf	??_modbus_response_write_single_register+1,w
  8590  0F48  04B9               	iorwf	modbus_response_write_single_register@t16+1,f
  8591                           
  8592                           ;modbus.c: 140: sysData.calibVoMV[startAddr>>1]=t16;
  8593  0F49  083F               	movf	modbus_response_write_single_register@startAddr+1,w
  8594  0F4A  00B4               	movwf	??_modbus_response_write_single_register+1
  8595  0F4B  083E               	movf	modbus_response_write_single_register@startAddr,w
  8596  0F4C  00B3               	movwf	??_modbus_response_write_single_register
  8597  0F4D  36B4               	lsrf	??_modbus_response_write_single_register+1,f
  8598  0F4E  0CB3               	rrf	??_modbus_response_write_single_register,f
  8599  0F4F  35B3               	lslf	??_modbus_response_write_single_register,f
  8600  0F50  0DB4               	rlf	??_modbus_response_write_single_register+1,f
  8601  0F51  30A2               	movlw	162
  8602  0F52  00B5               	movwf	??_modbus_response_write_single_register+2
  8603  0F53  3023               	movlw	35
  8604  0F54  00B6               	movwf	??_modbus_response_write_single_register+3
  8605  0F55  0833               	movf	??_modbus_response_write_single_register,w
  8606  0F56  0735               	addwf	??_modbus_response_write_single_register+2,w
  8607  0F57  0086               	movwf	6
  8608  0F58  0834               	movf	??_modbus_response_write_single_register+1,w
  8609  0F59  3D36               	addwfc	??_modbus_response_write_single_register+3,w
  8610  0F5A  0087               	movwf	7
  8611  0F5B  0838               	movf	modbus_response_write_single_register@t16,w
  8612  0F5C  3FC0               	movwi [0]fsr1
  8613  0F5D  0839               	movf	modbus_response_write_single_register@t16+1,w
  8614  0F5E  3FC1               	movwi [1]fsr1
  8615                           
  8616                           ;modbus.c: 141: sysData.calibRsAdc[startAddr>>1]=rsLoAvg;
  8617  0F5F  083F               	movf	modbus_response_write_single_register@startAddr+1,w
  8618  0F60  00B4               	movwf	??_modbus_response_write_single_register+1
  8619  0F61  083E               	movf	modbus_response_write_single_register@startAddr,w
  8620  0F62  00B3               	movwf	??_modbus_response_write_single_register
  8621  0F63  36B4               	lsrf	??_modbus_response_write_single_register+1,f
  8622  0F64  0CB3               	rrf	??_modbus_response_write_single_register,f
  8623  0F65  35B3               	lslf	??_modbus_response_write_single_register,f
  8624  0F66  0DB4               	rlf	??_modbus_response_write_single_register+1,f
  8625  0F67  3066               	movlw	102
  8626  0F68  00B5               	movwf	??_modbus_response_write_single_register+2
  8627  0F69  3023               	movlw	35
  8628  0F6A  00B6               	movwf	??_modbus_response_write_single_register+3
  8629  0F6B  0833               	movf	??_modbus_response_write_single_register,w
  8630  0F6C  0735               	addwf	??_modbus_response_write_single_register+2,w
  8631  0F6D  0086               	movwf	6
  8632  0F6E  0834               	movf	??_modbus_response_write_single_register+1,w
  8633  0F6F  3D36               	addwfc	??_modbus_response_write_single_register+3,w
  8634  0F70  0087               	movwf	7
  8635  0F71  085E               	movf	_rsLoAvg,w
  8636  0F72  3FC0               	movwi [0]fsr1
  8637  0F73  085F               	movf	_rsLoAvg+1,w
  8638  0F74  3FC1               	movwi [1]fsr1
  8639                           
  8640                           ;modbus.c: 143: if(rbuf[1]==0x26){
  8641  0F75  0A3D               	incf	modbus_response_write_single_register@rbuf,w
  8642  0F76  0086               	movwf	6
  8643  0F77  3001               	movlw	1	; select bank2/3
  8644  0F78  0087               	movwf	7
  8645  0F79  3026               	movlw	38
  8646  0F7A  0601               	xorwf	1,w
  8647  0F7B  1D03               	btfss	3,2
  8648  0F7C  2FC3               	goto	l860
  8649                           
  8650                           ;modbus.c: 144: for(i=(startAddr>>1)+1;i<30;i++){
  8651  0F7D  083F               	movf	modbus_response_write_single_register@startAddr+1,w
  8652  0F7E  00B4               	movwf	??_modbus_response_write_single_register+1
  8653  0F7F  083E               	movf	modbus_response_write_single_register@startAddr,w
  8654  0F80  00B3               	movwf	??_modbus_response_write_single_register
  8655  0F81  36B4               	lsrf	??_modbus_response_write_single_register+1,f
  8656  0F82  0CB3               	rrf	??_modbus_response_write_single_register,f
  8657  0F83  0833               	movf	??_modbus_response_write_single_register,w
  8658  0F84  3E01               	addlw	1
  8659  0F85  00BA               	movwf	modbus_response_write_single_register@i
  8660  0F86  3000               	movlw	0
  8661  0F87  3D34               	addwfc	??_modbus_response_write_single_register+1,w
  8662  0F88  00BB               	movwf	modbus_response_write_single_register@i+1
  8663  0F89  3000               	movlw	0
  8664  0F8A  023B               	subwf	modbus_response_write_single_register@i+1,w
  8665  0F8B  301E               	movlw	30
  8666  0F8C  1903               	skipnz
  8667  0F8D  023A               	subwf	modbus_response_write_single_register@i,w
  8668  0F8E  1803               	btfsc	3,0
  8669  0F8F  2FC3               	goto	l860
  8670  0F90                     l5199:	
  8671                           
  8672                           ;modbus.c: 145: sysData.calibVoMV[i]=t16;
  8673  0F90  083B               	movf	modbus_response_write_single_register@i+1,w
  8674  0F91  00B4               	movwf	??_modbus_response_write_single_register+1
  8675  0F92  083A               	movf	modbus_response_write_single_register@i,w
  8676  0F93  00B3               	movwf	??_modbus_response_write_single_register
  8677  0F94  35B3               	lslf	??_modbus_response_write_single_register,f
  8678  0F95  0DB4               	rlf	??_modbus_response_write_single_register+1,f
  8679  0F96  30A2               	movlw	162
  8680  0F97  00B5               	movwf	??_modbus_response_write_single_register+2
  8681  0F98  3023               	movlw	35
  8682  0F99  00B6               	movwf	??_modbus_response_write_single_register+3
  8683  0F9A  0833               	movf	??_modbus_response_write_single_register,w
  8684  0F9B  0735               	addwf	??_modbus_response_write_single_register+2,w
  8685  0F9C  0086               	movwf	6
  8686  0F9D  0834               	movf	??_modbus_response_write_single_register+1,w
  8687  0F9E  3D36               	addwfc	??_modbus_response_write_single_register+3,w
  8688  0F9F  0087               	movwf	7
  8689  0FA0  0838               	movf	modbus_response_write_single_register@t16,w
  8690  0FA1  3FC0               	movwi [0]fsr1
  8691  0FA2  0839               	movf	modbus_response_write_single_register@t16+1,w
  8692  0FA3  3FC1               	movwi [1]fsr1
  8693                           
  8694                           ;modbus.c: 146: sysData.calibRsAdc[i]=rsLoAvg;
  8695  0FA4  083B               	movf	modbus_response_write_single_register@i+1,w
  8696  0FA5  00B4               	movwf	??_modbus_response_write_single_register+1
  8697  0FA6  083A               	movf	modbus_response_write_single_register@i,w
  8698  0FA7  00B3               	movwf	??_modbus_response_write_single_register
  8699  0FA8  35B3               	lslf	??_modbus_response_write_single_register,f
  8700  0FA9  0DB4               	rlf	??_modbus_response_write_single_register+1,f
  8701  0FAA  3066               	movlw	102
  8702  0FAB  00B5               	movwf	??_modbus_response_write_single_register+2
  8703  0FAC  3023               	movlw	35
  8704  0FAD  00B6               	movwf	??_modbus_response_write_single_register+3
  8705  0FAE  0833               	movf	??_modbus_response_write_single_register,w
  8706  0FAF  0735               	addwf	??_modbus_response_write_single_register+2,w
  8707  0FB0  0086               	movwf	6
  8708  0FB1  0834               	movf	??_modbus_response_write_single_register+1,w
  8709  0FB2  3D36               	addwfc	??_modbus_response_write_single_register+3,w
  8710  0FB3  0087               	movwf	7
  8711  0FB4  085E               	movf	_rsLoAvg,w
  8712  0FB5  3FC0               	movwi [0]fsr1
  8713  0FB6  085F               	movf	_rsLoAvg+1,w
  8714  0FB7  3FC1               	movwi [1]fsr1
  8715  0FB8  3001               	movlw	1
  8716  0FB9  07BA               	addwf	modbus_response_write_single_register@i,f
  8717  0FBA  3000               	movlw	0
  8718  0FBB  3DBB               	addwfc	modbus_response_write_single_register@i+1,f
  8719  0FBC  3000               	movlw	0
  8720  0FBD  023B               	subwf	modbus_response_write_single_register@i+1,w
  8721  0FBE  301E               	movlw	30
  8722  0FBF  1903               	skipnz
  8723  0FC0  023A               	subwf	modbus_response_write_single_register@i,w
  8724  0FC1  1C03               	skipc
  8725  0FC2  2F90               	goto	l5199
  8726  0FC3                     l860:	
  8727                           
  8728                           ;modbus.c: 147: }
  8729                           ;modbus.c: 148: }
  8730                           ;modbus.c: 149: fiSave=1;
  8731  0FC3  01B7               	clrf	modbus_response_write_single_register@fiSave
  8732  0FC4  0AB7               	incf	modbus_response_write_single_register@fiSave,f
  8733  0FC5                     l5205:	
  8734                           ;modbus.c: 153: return;
  8735                           
  8736                           ;modbus.c: 150: }
  8737                           ;modbus.c: 151: }else{
  8738                           
  8739                           
  8740                           ;modbus.c: 154: }
  8741                           ;modbus.c: 155: if(fiSave)sys_data_save();
  8742  0FC5  0837               	movf	modbus_response_write_single_register@fiSave,w
  8743  0FC6  1903               	btfsc	3,2
  8744  0FC7  2FCB               	goto	l5209
  8745  0FC8  319C  249B  318E   	fcall	_sys_data_save
  8746  0FCB                     l5209:	
  8747                           
  8748                           ;modbus.c: 156: if(pmdbs->addr==0)return;
  8749  0FCB  0020               	movlb	0	; select bank0
  8750  0FCC  083C               	movf	modbus_response_write_single_register@pmdbs,w
  8751  0FCD  0086               	movwf	6
  8752  0FCE  3001               	movlw	1	; select bank2/3
  8753  0FCF  0087               	movwf	7
  8754  0FD0  0801               	movf	1,w
  8755  0FD1  1903               	btfsc	3,2
  8756  0FD2  0008               	return
  8757                           
  8758                           ;modbus.c: 157: rbuf[0]=sysData.id;
  8759  0FD3  305C               	movlw	92
  8760  0FD4  0086               	movwf	6
  8761  0FD5  3023               	movlw	35
  8762  0FD6  0087               	movwf	7
  8763  0FD7  3142               	addfsr 1,2
  8764  0FD8  0801               	movf	1,w
  8765  0FD9  00B3               	movwf	??_modbus_response_write_single_register
  8766  0FDA  083D               	movf	modbus_response_write_single_register@rbuf,w
  8767  0FDB  0086               	movwf	6
  8768  0FDC  3001               	movlw	1	; select bank2/3
  8769  0FDD  0087               	movwf	7
  8770  0FDE  0833               	movf	??_modbus_response_write_single_register,w
  8771  0FDF  0081               	movwf	1
  8772                           
  8773                           ;modbus.c: 158: crc_append(rbuf,6);
  8774  0FE0  083D               	movf	modbus_response_write_single_register@rbuf,w
  8775  0FE1  00A8               	movwf	crc_append@message
  8776  0FE2  3001               	movlw	1
  8777  0FE3  00A9               	movwf	crc_append@message+1
  8778  0FE4  3006               	movlw	6
  8779  0FE5  00AA               	movwf	crc_append@n
  8780  0FE6  3000               	movlw	0
  8781  0FE7  00AB               	movwf	crc_append@n+1
  8782  0FE8  319B  23FE  318E   	fcall	_crc_append
  8783                           
  8784                           ;modbus.c: 159: uart_send_len(rbuf,8);
  8785  0FEB  3008               	movlw	8
  8786  0FEC  0020               	movlb	0	; select bank0
  8787  0FED  00B3               	movwf	??_modbus_response_write_single_register
  8788  0FEE  0833               	movf	??_modbus_response_write_single_register,w
  8789  0FEF  00F3               	movwf	uart_send_len@len
  8790  0FF0  083D               	movf	modbus_response_write_single_register@rbuf,w
  8791  0FF1  319B  23A7         	fcall	_uart_send_len
  8792  0FF3  0008               	return
  8793  0FF4                     __end_of_modbus_response_write_single_register:	
  8794                           
  8795                           	psect	text17
  8796  1121                     __ptext17:	
  8797 ;; *************** function _modbus_response_write_mult_register *****************
  8798 ;; Defined at:
  8799 ;;		line 162 in file "src/api/modbus.c"
  8800 ;; Parameters:    Size  Location     Type
  8801 ;;  rbuf            1    wreg     PTR unsigned char 
  8802 ;;		 -> modbusBuf(60), 
  8803 ;; Auto vars:     Size  Location     Type
  8804 ;;  rbuf            1   21[BANK0 ] PTR unsigned char 
  8805 ;;		 -> modbusBuf(60), 
  8806 ;;  stb             1   22[BANK0 ] PTR struct .
  8807 ;;		 -> modbusBuf(60), 
  8808 ;;  len             1   20[BANK0 ] unsigned char 
  8809 ;;  startAddr       1   19[BANK0 ] unsigned char 
  8810 ;; Return value:  Size  Location     Type
  8811 ;;                  1    wreg      void 
  8812 ;; Registers used:
  8813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8814 ;; Tracked objects:
  8815 ;;		On entry : 0/0
  8816 ;;		On exit  : 0/0
  8817 ;;		Unchanged: 0/0
  8818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8820 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8821 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8822 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8823 ;;Total ram usage:        5 bytes
  8824 ;; Hardware stack levels used:    1
  8825 ;; Hardware stack levels required when called:    4
  8826 ;; This function calls:
  8827 ;;		_crc_append
  8828 ;;		_sys_data_save
  8829 ;;		_uart_send_len
  8830 ;; This function is called by:
  8831 ;;		_modbus_response_process
  8832 ;; This function uses a non-reentrant model
  8833 ;;
  8834                           
  8835                           
  8836                           ;psect for function _modbus_response_write_mult_register
  8837  1121                     _modbus_response_write_mult_register:	
  8838                           
  8839                           ;incstack = 0
  8840                           ; Regs used in _modbus_response_write_mult_register: [wreg-fsr1h+status,2+status,0+pclat
      +                          h+cstack]
  8841                           ;modbus_response_write_mult_register@rbuf stored from wreg
  8842  1121  0020               	movlb	0	; select bank0
  8843  1122  00B5               	movwf	modbus_response_write_mult_register@rbuf
  8844                           
  8845                           ;modbus.c: 164: uint8_t startAddr,len;
  8846                           ;modbus.c: 165: st_modbusWriteMultReg_t* stb=(st_modbusWriteMultReg_t*)rbuf;
  8847  1123  0835               	movf	modbus_response_write_mult_register@rbuf,w
  8848  1124  00F7               	movwf	??_modbus_response_write_mult_register
  8849  1125  0877               	movf	??_modbus_response_write_mult_register,w
  8850  1126  00B6               	movwf	modbus_response_write_mult_register@stb
  8851                           
  8852                           ;modbus.c: 166: if(stb->addr!=sysData.id || stb->addr==0)return;
  8853  1127  305C               	movlw	92
  8854  1128  0086               	movwf	6
  8855  1129  3023               	movlw	35
  8856  112A  0087               	movwf	7
  8857  112B  3142               	addfsr 1,2
  8858  112C  0836               	movf	modbus_response_write_mult_register@stb,w
  8859  112D  0084               	movwf	4
  8860  112E  3001               	movlw	1	; select bank2/3
  8861  112F  0085               	movwf	5
  8862  1130  0800               	movf	0,w
  8863  1131  0601               	xorwf	1,w
  8864  1132  1D03               	skipz
  8865  1133  0008               	return
  8866  1134  0836               	movf	modbus_response_write_mult_register@stb,w
  8867  1135  0086               	movwf	6
  8868  1136  3001               	movlw	1	; select bank2/3
  8869  1137  0087               	movwf	7
  8870  1138  0801               	movf	1,w
  8871  1139  1903               	btfsc	3,2
  8872  113A  0008               	return
  8873                           
  8874                           ;modbus.c: 167: startAddr=stb->addr_lo;
  8875  113B  0836               	movf	modbus_response_write_mult_register@stb,w
  8876  113C  0086               	movwf	6
  8877  113D  3001               	movlw	1	; select bank2/3
  8878  113E  0087               	movwf	7
  8879  113F  3001               	movlw	1	; select bank2/3
  8880  1140  3F43               	moviw [3]fsr1
  8881  1141  00B3               	movwf	modbus_response_write_mult_register@startAddr
  8882                           
  8883                           ;modbus.c: 168: len=stb->len_lo;
  8884  1142  0836               	movf	modbus_response_write_mult_register@stb,w
  8885  1143  0086               	movwf	6
  8886  1144  3001               	movlw	1	; select bank2/3
  8887  1145  0087               	movwf	7
  8888  1146  3001               	movlw	1	; select bank2/3
  8889  1147  3F45               	moviw [5]fsr1
  8890  1148  00B4               	movwf	modbus_response_write_mult_register@len
  8891                           
  8892                           ;modbus.c: 169: if(len!=3)return ;
  8893  1149  3003               	movlw	3
  8894  114A  0634               	xorwf	modbus_response_write_mult_register@len,w
  8895  114B  1D03               	btfss	3,2
  8896  114C  0008               	return
  8897                           
  8898                           ;modbus.c: 170: if(startAddr!=4)return;
  8899  114D  3004               	movlw	4
  8900  114E  0633               	xorwf	modbus_response_write_mult_register@startAddr,w
  8901  114F  1D03               	btfss	3,2
  8902  1150  0008               	return
  8903                           
  8904                           ;modbus.c: 171: sysData.pidKp=(stb->data[0]<<8)|(stb->data[1]);
  8905  1151  0836               	movf	modbus_response_write_mult_register@stb,w
  8906  1152  3E06               	addlw	6
  8907  1153  0084               	movwf	4
  8908  1154  3001               	movlw	1	; select bank2/3
  8909  1155  0085               	movwf	5
  8910  1156  0800               	movf	0,w
  8911  1157  00F7               	movwf	??_modbus_response_write_mult_register
  8912  1158  0836               	movf	modbus_response_write_mult_register@stb,w
  8913  1159  3E07               	addlw	7
  8914  115A  0084               	movwf	4
  8915  115B  3001               	movlw	1	; select bank2/3
  8916  115C  0085               	movwf	5
  8917  115D  305C               	movlw	92
  8918  115E  0086               	movwf	6
  8919  115F  3023               	movlw	35
  8920  1160  0087               	movwf	7
  8921  1161  3144               	addfsr 1,4
  8922  1162  0800               	movf	0,w
  8923  1163  3FC0               	movwi [0]fsr1
  8924  1164  0877               	movf	??_modbus_response_write_mult_register,w
  8925  1165  3FC1               	movwi [1]fsr1
  8926                           
  8927                           ;modbus.c: 172: sysData.pidTi=(stb->data[2]<<8)|(stb->data[3]);
  8928  1166  0836               	movf	modbus_response_write_mult_register@stb,w
  8929  1167  3E08               	addlw	8
  8930  1168  0084               	movwf	4
  8931  1169  3001               	movlw	1	; select bank2/3
  8932  116A  0085               	movwf	5
  8933  116B  0800               	movf	0,w
  8934  116C  00F7               	movwf	??_modbus_response_write_mult_register
  8935  116D  0836               	movf	modbus_response_write_mult_register@stb,w
  8936  116E  3E09               	addlw	9
  8937  116F  0084               	movwf	4
  8938  1170  3001               	movlw	1	; select bank2/3
  8939  1171  0085               	movwf	5
  8940  1172  305C               	movlw	92
  8941  1173  0086               	movwf	6
  8942  1174  3023               	movlw	35
  8943  1175  0087               	movwf	7
  8944  1176  3146               	addfsr 1,6
  8945  1177  0800               	movf	0,w
  8946  1178  3FC0               	movwi [0]fsr1
  8947  1179  0877               	movf	??_modbus_response_write_mult_register,w
  8948  117A  3FC1               	movwi [1]fsr1
  8949                           
  8950                           ;modbus.c: 173: sysData.pidTd=(stb->data[4]<<8)|(stb->data[5]);
  8951  117B  0836               	movf	modbus_response_write_mult_register@stb,w
  8952  117C  3E0A               	addlw	10
  8953  117D  0084               	movwf	4
  8954  117E  3001               	movlw	1	; select bank2/3
  8955  117F  0085               	movwf	5
  8956  1180  0800               	movf	0,w
  8957  1181  00F7               	movwf	??_modbus_response_write_mult_register
  8958  1182  0836               	movf	modbus_response_write_mult_register@stb,w
  8959  1183  3E0B               	addlw	11
  8960  1184  0084               	movwf	4
  8961  1185  3001               	movlw	1	; select bank2/3
  8962  1186  0085               	movwf	5
  8963  1187  305C               	movlw	92
  8964  1188  0086               	movwf	6
  8965  1189  3023               	movlw	35
  8966  118A  0087               	movwf	7
  8967  118B  3148               	addfsr 1,8
  8968  118C  0800               	movf	0,w
  8969  118D  3FC0               	movwi [0]fsr1
  8970  118E  0877               	movf	??_modbus_response_write_mult_register,w
  8971  118F  3FC1               	movwi [1]fsr1
  8972                           
  8973                           ;modbus.c: 174: sys_data_save();
  8974  1190  319C  249B  3191   	fcall	_sys_data_save
  8975                           
  8976                           ;modbus.c: 175: crc_append(rbuf,sizeof(st_modbusWriteMultReg_t)-2);
  8977  1193  0020               	movlb	0	; select bank0
  8978  1194  0835               	movf	modbus_response_write_mult_register@rbuf,w
  8979  1195  00A8               	movwf	crc_append@message
  8980  1196  3001               	movlw	1
  8981  1197  00A9               	movwf	crc_append@message+1
  8982  1198  3006               	movlw	6
  8983  1199  00AA               	movwf	crc_append@n
  8984  119A  3000               	movlw	0
  8985  119B  00AB               	movwf	crc_append@n+1
  8986  119C  319B  23FE  3191   	fcall	_crc_append
  8987                           
  8988                           ;modbus.c: 176: uart_send_len(rbuf,sizeof(st_modbusWriteMultReg_t));
  8989  119F  3008               	movlw	8
  8990  11A0  00F7               	movwf	??_modbus_response_write_mult_register
  8991  11A1  0877               	movf	??_modbus_response_write_mult_register,w
  8992  11A2  00F3               	movwf	uart_send_len@len
  8993  11A3  0020               	movlb	0	; select bank0
  8994  11A4  0835               	movf	modbus_response_write_mult_register@rbuf,w
  8995  11A5  319B  23A7         	fcall	_uart_send_len
  8996  11A7  0008               	return
  8997  11A8                     __end_of_modbus_response_write_mult_register:	
  8998                           
  8999                           	psect	text18
  9000  1C9B                     __ptext18:	
  9001 ;; *************** function _sys_data_save *****************
  9002 ;; Defined at:
  9003 ;;		line 95 in file "src/api/sysData.c"
  9004 ;; Parameters:    Size  Location     Type
  9005 ;;		None
  9006 ;; Auto vars:     Size  Location     Type
  9007 ;;		None
  9008 ;; Return value:  Size  Location     Type
  9009 ;;                  1    wreg      void 
  9010 ;; Registers used:
  9011 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9012 ;; Tracked objects:
  9013 ;;		On entry : 0/0
  9014 ;;		On exit  : 0/0
  9015 ;;		Unchanged: 0/0
  9016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9021 ;;Total ram usage:        0 bytes
  9022 ;; Hardware stack levels used:    1
  9023 ;; Hardware stack levels required when called:    3
  9024 ;; This function calls:
  9025 ;;		_crc_append
  9026 ;;		_my_flash_read_system_erase
  9027 ;;		_my_flash_system_write
  9028 ;; This function is called by:
  9029 ;;		_sys_data_init
  9030 ;;		_modbus_response_write_single_register
  9031 ;;		_modbus_response_write_mult_register
  9032 ;;		_main
  9033 ;; This function uses a non-reentrant model
  9034 ;;
  9035                           
  9036                           
  9037                           ;psect for function _sys_data_save
  9038  1C9B                     _sys_data_save:	
  9039                           
  9040                           ;sysData.c: 97: crc_append((uint8_t*)&sysData,sizeof(sysData_t)-2);
  9041                           
  9042                           ;incstack = 0
  9043                           ; Regs used in _sys_data_save: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9044  1C9B  305C               	movlw	92
  9045  1C9C  0020               	movlb	0	; select bank0
  9046  1C9D  00A8               	movwf	crc_append@message
  9047  1C9E  3023               	movlw	35
  9048  1C9F  00A9               	movwf	crc_append@message+1
  9049  1CA0  3082               	movlw	130
  9050  1CA1  00AA               	movwf	crc_append@n
  9051  1CA2  3000               	movlw	0
  9052  1CA3  00AB               	movwf	crc_append@n+1
  9053  1CA4  319B  23FE  319C   	fcall	_crc_append
  9054                           
  9055                           ;sysData.c: 98: my_flash_read_system_erase();
  9056  1CA7  319B  2316  319C   	fcall	_my_flash_read_system_erase
  9057                           
  9058                           ;sysData.c: 99: my_flash_system_write((uint8_t*)&sysData,sizeof(sysData_t));
  9059  1CAA  305C               	movlw	92
  9060  1CAB  00F3               	movwf	my_flash_system_write@buf
  9061  1CAC  3023               	movlw	35
  9062  1CAD  00F4               	movwf	my_flash_system_write@buf+1
  9063  1CAE  3084               	movlw	132
  9064  1CAF  00F5               	movwf	my_flash_system_write@len
  9065  1CB0  3000               	movlw	0
  9066  1CB1  00F6               	movwf	my_flash_system_write@len+1
  9067  1CB2  3193  235D         	fcall	_my_flash_system_write
  9068                           
  9069                           ;sysData.c: 100: PidKp=sysData.pidKp;
  9070  1CB4  305C               	movlw	92
  9071  1CB5  0086               	movwf	6
  9072  1CB6  3023               	movlw	35
  9073  1CB7  0087               	movwf	7
  9074  1CB8  3144               	addfsr 1,4
  9075  1CB9  3F40               	moviw [0]fsr1
  9076  1CBA  0020               	movlb	0	; select bank0
  9077  1CBB  00E2               	movwf	_PidKp
  9078  1CBC  3F41               	moviw [1]fsr1
  9079  1CBD  00E3               	movwf	_PidKp+1
  9080                           
  9081                           ;sysData.c: 101: PidTi=sysData.pidTi;
  9082  1CBE  305C               	movlw	92
  9083  1CBF  0086               	movwf	6
  9084  1CC0  3023               	movlw	35
  9085  1CC1  0087               	movwf	7
  9086  1CC2  3146               	addfsr 1,6
  9087  1CC3  3F40               	moviw [0]fsr1
  9088  1CC4  0021               	movlb	1	; select bank1
  9089  1CC5  00CE               	movwf	_PidTi^(0+128)
  9090  1CC6  3F41               	moviw [1]fsr1
  9091  1CC7  00CF               	movwf	(_PidTi+1)^(0+128)
  9092                           
  9093                           ;sysData.c: 102: PidTd=sysData.pidTd;;
  9094  1CC8  305C               	movlw	92
  9095  1CC9  0086               	movwf	6
  9096  1CCA  3023               	movlw	35
  9097  1CCB  0087               	movwf	7
  9098  1CCC  3148               	addfsr 1,8
  9099  1CCD  3F40               	moviw [0]fsr1
  9100  1CCE  00CC               	movwf	_PidTd^(0+128)
  9101  1CCF  3F41               	moviw [1]fsr1
  9102  1CD0  00CD               	movwf	(_PidTd+1)^(0+128)
  9103  1CD1  0008               	return
  9104  1CD2                     __end_of_sys_data_save:	
  9105                           
  9106                           	psect	text19
  9107  135D                     __ptext19:	
  9108 ;; *************** function _my_flash_system_write *****************
  9109 ;; Defined at:
  9110 ;;		line 47 in file "src/api/sysData.c"
  9111 ;; Parameters:    Size  Location     Type
  9112 ;;  buf             2    3[COMMON] PTR unsigned char 
  9113 ;;		 -> sysData(132), 
  9114 ;;  len             2    5[COMMON] unsigned int 
  9115 ;; Auto vars:     Size  Location     Type
  9116 ;;  i               2   11[BANK0 ] unsigned int 
  9117 ;;  flashAddr       2    9[BANK0 ] unsigned int 
  9118 ;;  loc             2    7[BANK0 ] unsigned int 
  9119 ;;  blocNum         2    5[BANK0 ] unsigned int 
  9120 ;;  j               2    3[BANK0 ] unsigned int 
  9121 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
  9122 ;; Return value:  Size  Location     Type
  9123 ;;                  2    3[COMMON] unsigned int 
  9124 ;; Registers used:
  9125 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9126 ;; Tracked objects:
  9127 ;;		On entry : 0/0
  9128 ;;		On exit  : 0/0
  9129 ;;		Unchanged: 0/0
  9130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9131 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9132 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9133 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9134 ;;      Totals:         4      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9135 ;;Total ram usage:       17 bytes
  9136 ;; Hardware stack levels used:    1
  9137 ;; Hardware stack levels required when called:    1
  9138 ;; This function calls:
  9139 ;;		Nothing
  9140 ;; This function is called by:
  9141 ;;		_sys_data_save
  9142 ;; This function uses a non-reentrant model
  9143 ;;
  9144                           
  9145                           
  9146                           ;psect for function _my_flash_system_write
  9147  135D                     _my_flash_system_write:	
  9148                           
  9149                           ;sysData.c: 49: uint16_t blocNum=0;
  9150                           
  9151                           ;incstack = 0
  9152                           ; Regs used in _my_flash_system_write: [wreg+fsr1l+fsr1h+status,2+status,0]
  9153  135D  0020               	movlb	0	; select bank0
  9154  135E  01A5               	clrf	my_flash_system_write@blocNum
  9155  135F  01A6               	clrf	my_flash_system_write@blocNum+1
  9156                           
  9157                           ;sysData.c: 50: uint16_t loc,j,i=0;
  9158  1360  01AB               	clrf	my_flash_system_write@i
  9159  1361  01AC               	clrf	my_flash_system_write@i+1
  9160                           
  9161                           ;sysData.c: 51: uint16_t flashAddr=0x1f00;
  9162  1362  3000               	movlw	0
  9163  1363  00A9               	movwf	my_flash_system_write@flashAddr
  9164  1364  301F               	movlw	31
  9165  1365  00AA               	movwf	my_flash_system_write@flashAddr+1
  9166                           
  9167                           ;sysData.c: 52: uint8_t GIEBitValue=INTCONbits.GIE;
  9168  1366  3000               	movlw	0
  9169  1367  1B8B               	btfsc	11,7	;volatile
  9170  1368  3001               	movlw	1
  9171  1369  00A2               	movwf	my_flash_system_write@GIEBitValue
  9172                           
  9173                           ;sysData.c: 54: blocNum=len/32;
  9174  136A  0876               	movf	my_flash_system_write@len+1,w
  9175  136B  00A1               	movwf	??_my_flash_system_write+1
  9176  136C  0875               	movf	my_flash_system_write@len,w
  9177  136D  00A0               	movwf	??_my_flash_system_write
  9178  136E  3005               	movlw	5
  9179  136F                     u4265:	
  9180  136F  36A1               	lsrf	??_my_flash_system_write+1,f
  9181  1370  0CA0               	rrf	??_my_flash_system_write,f
  9182  1371  0B89               	decfsz	9,f
  9183  1372  2B6F               	goto	u4265
  9184  1373  0820               	movf	??_my_flash_system_write,w
  9185  1374  00A5               	movwf	my_flash_system_write@blocNum
  9186  1375  0821               	movf	??_my_flash_system_write+1,w
  9187  1376  00A6               	movwf	my_flash_system_write@blocNum+1
  9188                           
  9189                           ;sysData.c: 55: if(len%32)blocNum++;
  9190  1377  301F               	movlw	31
  9191  1378  0575               	andwf	my_flash_system_write@len,w
  9192  1379  00A0               	movwf	??_my_flash_system_write
  9193  137A  3000               	movlw	0
  9194  137B  0576               	andwf	my_flash_system_write@len+1,w
  9195  137C  00A1               	movwf	??_my_flash_system_write+1
  9196  137D  0820               	movf	??_my_flash_system_write,w
  9197  137E  0421               	iorwf	??_my_flash_system_write+1,w
  9198  137F  1903               	btfsc	3,2
  9199  1380  2B85               	goto	l4911
  9200  1381  3001               	movlw	1
  9201  1382  07A5               	addwf	my_flash_system_write@blocNum,f
  9202  1383  3000               	movlw	0
  9203  1384  3DA6               	addwfc	my_flash_system_write@blocNum+1,f
  9204  1385                     l4911:	
  9205                           
  9206                           ;sysData.c: 57: INTCONbits.GIE = 0;
  9207  1385  138B               	bcf	11,7	;volatile
  9208                           
  9209                           ;sysData.c: 58: loc=0;
  9210  1386  01A7               	clrf	my_flash_system_write@loc
  9211  1387  01A8               	clrf	my_flash_system_write@loc+1
  9212                           
  9213                           ;sysData.c: 59: for(j=0;j<blocNum;j++){
  9214  1388  01A3               	clrf	my_flash_system_write@j
  9215  1389  01A4               	clrf	my_flash_system_write@j+1
  9216  138A                     l770:	
  9217  138A  0826               	movf	my_flash_system_write@blocNum+1,w
  9218  138B  0224               	subwf	my_flash_system_write@j+1,w
  9219  138C  1D03               	skipz
  9220  138D  2B90               	goto	u4325
  9221  138E  0825               	movf	my_flash_system_write@blocNum,w
  9222  138F  0223               	subwf	my_flash_system_write@j,w
  9223  1390                     u4325:	
  9224  1390  1803               	btfsc	3,0
  9225  1391  2BF1               	goto	l4951
  9226                           
  9227                           ;sysData.c: 60: PMCON1bits.CFGS = 0;
  9228  1392  0023               	movlb	3	; select bank3
  9229  1393  1315               	bcf	21,6	;volatile
  9230                           
  9231                           ;sysData.c: 61: PMCON1bits.WREN = 1;
  9232  1394  1515               	bsf	21,2	;volatile
  9233                           
  9234                           ;sysData.c: 62: PMCON1bits.LWLO = 1;
  9235  1395  1695               	bsf	21,5	;volatile
  9236                           
  9237                           ;sysData.c: 64: for(i=0;i<32;i++){
  9238  1396  0020               	movlb	0	; select bank0
  9239  1397  01AB               	clrf	my_flash_system_write@i
  9240  1398  01AC               	clrf	my_flash_system_write@i+1
  9241  1399  3000               	movlw	0
  9242  139A  022C               	subwf	my_flash_system_write@i+1,w
  9243  139B  3020               	movlw	32
  9244  139C  1903               	skipnz
  9245  139D  022B               	subwf	my_flash_system_write@i,w
  9246  139E  1803               	btfsc	3,0
  9247  139F  2BE9               	goto	l773
  9248  13A0                     l4923:	
  9249                           
  9250                           ;sysData.c: 66: PMADRL = (flashAddr & 0xFF);
  9251  13A0  0829               	movf	my_flash_system_write@flashAddr,w
  9252  13A1  0023               	movlb	3	; select bank3
  9253  13A2  0091               	movwf	17	;volatile
  9254                           
  9255                           ;sysData.c: 68: PMADRH = ((flashAddr & 0xFF00) >> 8);
  9256  13A3  0020               	movlb	0	; select bank0
  9257  13A4  082A               	movf	my_flash_system_write@flashAddr+1,w
  9258  13A5  0023               	movlb	3	; select bank3
  9259  13A6  0092               	movwf	18	;volatile
  9260                           
  9261                           ;sysData.c: 71: if(loc<len){
  9262  13A7  0876               	movf	my_flash_system_write@len+1,w
  9263  13A8  0020               	movlb	0	; select bank0
  9264  13A9  0228               	subwf	my_flash_system_write@loc+1,w
  9265  13AA  1D03               	skipz
  9266  13AB  2BAE               	goto	u4295
  9267  13AC  0875               	movf	my_flash_system_write@len,w
  9268  13AD  0227               	subwf	my_flash_system_write@loc,w
  9269  13AE                     u4295:	
  9270  13AE  1803               	skipnc
  9271  13AF  2BBA               	goto	l4931
  9272                           
  9273                           ;sysData.c: 72: PMDATL = buf[loc];
  9274  13B0  0827               	movf	my_flash_system_write@loc,w
  9275  13B1  0773               	addwf	my_flash_system_write@buf,w
  9276  13B2  0086               	movwf	6
  9277  13B3  0828               	movf	my_flash_system_write@loc+1,w
  9278  13B4  3D74               	addwfc	my_flash_system_write@buf+1,w
  9279  13B5  0087               	movwf	7
  9280  13B6  0801               	movf	1,w
  9281  13B7  0023               	movlb	3	; select bank3
  9282  13B8  0093               	movwf	19	;volatile
  9283                           
  9284                           ;sysData.c: 73: }else{
  9285  13B9  2BBC               	goto	l4933
  9286  13BA                     l4931:	
  9287                           
  9288                           ;sysData.c: 74: PMDATL = 0x00;
  9289  13BA  0023               	movlb	3	; select bank3
  9290  13BB  0193               	clrf	19	;volatile
  9291  13BC                     l4933:	
  9292                           
  9293                           ;sysData.c: 75: }
  9294                           ;sysData.c: 76: loc++;
  9295  13BC  3001               	movlw	1
  9296  13BD  0020               	movlb	0	; select bank0
  9297  13BE  07A7               	addwf	my_flash_system_write@loc,f
  9298  13BF  3000               	movlw	0
  9299  13C0  3DA8               	addwfc	my_flash_system_write@loc+1,f
  9300                           
  9301                           ;sysData.c: 77: PMDATH = 0x00;
  9302  13C1  0023               	movlb	3	; select bank3
  9303  13C2  0194               	clrf	20	;volatile
  9304                           
  9305                           ;sysData.c: 78: if((i%32) == 32 -1 ){
  9306  13C3  301F               	movlw	31
  9307  13C4  0020               	movlb	0	; select bank0
  9308  13C5  052B               	andwf	my_flash_system_write@i,w
  9309  13C6  00A0               	movwf	??_my_flash_system_write
  9310  13C7  3000               	movlw	0
  9311  13C8  052C               	andwf	my_flash_system_write@i+1,w
  9312  13C9  00A1               	movwf	??_my_flash_system_write+1
  9313  13CA  301F               	movlw	31
  9314  13CB  0620               	xorwf	??_my_flash_system_write,w
  9315  13CC  0421               	iorwf	??_my_flash_system_write+1,w
  9316  13CD  1D03               	btfss	3,2
  9317  13CE  2BD1               	goto	l4941
  9318                           
  9319                           ;sysData.c: 79: PMCON1bits.LWLO = 0;
  9320  13CF  0023               	movlb	3	; select bank3
  9321  13D0  1295               	bcf	21,5	;volatile
  9322  13D1                     l4941:	
  9323                           
  9324                           ;sysData.c: 80: }
  9325                           ;sysData.c: 82: PMCON2 = 0x55;
  9326  13D1  3055               	movlw	85
  9327  13D2  0023               	movlb	3	; select bank3
  9328  13D3  0096               	movwf	22	;volsfr
  9329                           
  9330                           ;sysData.c: 83: PMCON2 = 0xAA;
  9331  13D4  30AA               	movlw	170
  9332  13D5  0096               	movwf	22	;volsfr
  9333                           
  9334                           ;sysData.c: 84: PMCON1bits.WR = 1;
  9335  13D6  1495               	bsf	21,1	;volatile
  9336                           
  9337                           ;sysData.c: 85: __nop();
  9338  13D7  0000               	nop
  9339                           
  9340                           ;sysData.c: 86: __nop();
  9341  13D8  0000               	nop
  9342                           
  9343                           ;sysData.c: 87: flashAddr++;
  9344  13D9  3001               	movlw	1
  9345  13DA  0020               	movlb	0	; select bank0
  9346  13DB  07A9               	addwf	my_flash_system_write@flashAddr,f
  9347  13DC  3000               	movlw	0
  9348  13DD  3DAA               	addwfc	my_flash_system_write@flashAddr+1,f
  9349  13DE  3001               	movlw	1
  9350  13DF  07AB               	addwf	my_flash_system_write@i,f
  9351  13E0  3000               	movlw	0
  9352  13E1  3DAC               	addwfc	my_flash_system_write@i+1,f
  9353  13E2  3000               	movlw	0
  9354  13E3  022C               	subwf	my_flash_system_write@i+1,w
  9355  13E4  3020               	movlw	32
  9356  13E5  1903               	skipnz
  9357  13E6  022B               	subwf	my_flash_system_write@i,w
  9358  13E7  1C03               	skipc
  9359  13E8  2BA0               	goto	l4923
  9360  13E9                     l773:	
  9361                           
  9362                           ;sysData.c: 88: }
  9363                           ;sysData.c: 89: PMCON1bits.WREN = 0;
  9364  13E9  0023               	movlb	3	; select bank3
  9365  13EA  1115               	bcf	21,2	;volatile
  9366  13EB  3001               	movlw	1
  9367  13EC  0020               	movlb	0	; select bank0
  9368  13ED  07A3               	addwf	my_flash_system_write@j,f
  9369  13EE  3000               	movlw	0
  9370  13EF  3DA4               	addwfc	my_flash_system_write@j+1,f
  9371  13F0  2B8A               	goto	l770
  9372  13F1                     l4951:	
  9373                           
  9374                           ;sysData.c: 90: }
  9375                           ;sysData.c: 91: INTCONbits.GIE = GIEBitValue;
  9376  13F1  0C22               	rrf	my_flash_system_write@GIEBitValue,w
  9377  13F2  1C03               	skipc
  9378  13F3  138B               	bcf	11,7	;volatile
  9379  13F4  1803               	skipnc
  9380  13F5  178B               	bsf	11,7	;volatile
  9381  13F6  0008               	return
  9382  13F7                     __end_of_my_flash_system_write:	
  9383                           ;sysData.c: 93: return 0;
  9384                           ;	Return value of _my_flash_system_write is never used
  9385                           
  9386                           
  9387                           	psect	text20
  9388  1B16                     __ptext20:	
  9389 ;; *************** function _my_flash_read_system_erase *****************
  9390 ;; Defined at:
  9391 ;;		line 9 in file "src/api/sysData.c"
  9392 ;; Parameters:    Size  Location     Type
  9393 ;;		None
  9394 ;; Auto vars:     Size  Location     Type
  9395 ;;		None
  9396 ;; Return value:  Size  Location     Type
  9397 ;;                  1    wreg      void 
  9398 ;; Registers used:
  9399 ;;		wreg, status,2, status,0, pclath, cstack
  9400 ;; Tracked objects:
  9401 ;;		On entry : 0/0
  9402 ;;		On exit  : 0/0
  9403 ;;		Unchanged: 0/0
  9404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9409 ;;Total ram usage:        0 bytes
  9410 ;; Hardware stack levels used:    1
  9411 ;; Hardware stack levels required when called:    2
  9412 ;; This function calls:
  9413 ;;		_FLASH_EraseBlock
  9414 ;; This function is called by:
  9415 ;;		_sys_data_save
  9416 ;; This function uses a non-reentrant model
  9417 ;;
  9418                           
  9419                           
  9420                           ;psect for function _my_flash_read_system_erase
  9421  1B16                     _my_flash_read_system_erase:	
  9422                           
  9423                           ;sysData.c: 16: FLASH_EraseBlock(0x1f00);
  9424                           
  9425                           ;incstack = 0
  9426                           ; Regs used in _my_flash_read_system_erase: [wreg+status,2+status,0+pclath+cstack]
  9427  1B16  3000               	movlw	0
  9428  1B17  00F3               	movwf	FLASH_EraseBlock@startAddr
  9429  1B18  301F               	movlw	31
  9430  1B19  00F4               	movwf	FLASH_EraseBlock@startAddr+1
  9431  1B1A  319A  2262  319B   	fcall	_FLASH_EraseBlock
  9432                           
  9433                           ;sysData.c: 17: FLASH_EraseBlock(0x1f00+32);
  9434  1B1D  3020               	movlw	32
  9435  1B1E  00F3               	movwf	FLASH_EraseBlock@startAddr
  9436  1B1F  301F               	movlw	31
  9437  1B20  00F4               	movwf	FLASH_EraseBlock@startAddr+1
  9438  1B21  319A  2262  319B   	fcall	_FLASH_EraseBlock
  9439                           
  9440                           ;sysData.c: 18: FLASH_EraseBlock(0x1f00+64);
  9441  1B24  3040               	movlw	64
  9442  1B25  00F3               	movwf	FLASH_EraseBlock@startAddr
  9443  1B26  301F               	movlw	31
  9444  1B27  00F4               	movwf	FLASH_EraseBlock@startAddr+1
  9445  1B28  319A  2262  319B   	fcall	_FLASH_EraseBlock
  9446                           
  9447                           ;sysData.c: 19: FLASH_EraseBlock(0x1f00+96);
  9448  1B2B  3060               	movlw	96
  9449  1B2C  00F3               	movwf	FLASH_EraseBlock@startAddr
  9450  1B2D  301F               	movlw	31
  9451  1B2E  00F4               	movwf	FLASH_EraseBlock@startAddr+1
  9452  1B2F  319A  2262  319B   	fcall	_FLASH_EraseBlock
  9453                           
  9454                           ;sysData.c: 20: FLASH_EraseBlock(0x1f00+128);
  9455  1B32  3080               	movlw	128
  9456  1B33  00F3               	movwf	FLASH_EraseBlock@startAddr
  9457  1B34  301F               	movlw	31
  9458  1B35  00F4               	movwf	FLASH_EraseBlock@startAddr+1
  9459  1B36  319A  2262         	fcall	_FLASH_EraseBlock
  9460  1B38  0008               	return
  9461  1B39                     __end_of_my_flash_read_system_erase:	
  9462                           
  9463                           	psect	text21
  9464  1A62                     __ptext21:	
  9465 ;; *************** function _FLASH_EraseBlock *****************
  9466 ;; Defined at:
  9467 ;;		line 147 in file "mcc_generated_files/memory.c"
  9468 ;; Parameters:    Size  Location     Type
  9469 ;;  startAddr       2    3[COMMON] unsigned int 
  9470 ;; Auto vars:     Size  Location     Type
  9471 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  9472 ;; Return value:  Size  Location     Type
  9473 ;;                  1    wreg      void 
  9474 ;; Registers used:
  9475 ;;		wreg, status,2, status,0
  9476 ;; Tracked objects:
  9477 ;;		On entry : 0/0
  9478 ;;		On exit  : 0/0
  9479 ;;		Unchanged: 0/0
  9480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9481 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9482 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9484 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9485 ;;Total ram usage:        3 bytes
  9486 ;; Hardware stack levels used:    1
  9487 ;; Hardware stack levels required when called:    1
  9488 ;; This function calls:
  9489 ;;		Nothing
  9490 ;; This function is called by:
  9491 ;;		_my_flash_read_system_erase
  9492 ;;		_FLASH_WriteBlock
  9493 ;; This function uses a non-reentrant model
  9494 ;;
  9495                           
  9496                           
  9497                           ;psect for function _FLASH_EraseBlock
  9498  1A62                     _FLASH_EraseBlock:	
  9499                           
  9500                           ;memory.c: 149: uint8_t GIEBitValue = INTCONbits.GIE;
  9501                           
  9502                           ;incstack = 0
  9503                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  9504  1A62  3000               	movlw	0
  9505  1A63  1B8B               	btfsc	11,7	;volatile
  9506  1A64  3001               	movlw	1
  9507  1A65  00F5               	movwf	FLASH_EraseBlock@GIEBitValue
  9508                           
  9509                           ;memory.c: 152: INTCONbits.GIE = 0;
  9510  1A66  138B               	bcf	11,7	;volatile
  9511                           
  9512                           ;memory.c: 154: PMADRL = (startAddr & 0xFF);
  9513  1A67  0873               	movf	FLASH_EraseBlock@startAddr,w
  9514  1A68  0023               	movlb	3	; select bank3
  9515  1A69  0091               	movwf	17	;volatile
  9516                           
  9517                           ;memory.c: 156: PMADRH = ((startAddr & 0xFF00) >> 8);
  9518  1A6A  0874               	movf	FLASH_EraseBlock@startAddr+1,w
  9519  1A6B  0092               	movwf	18	;volatile
  9520                           
  9521                           ;memory.c: 159: PMCON1bits.CFGS = 0;
  9522  1A6C  1315               	bcf	21,6	;volatile
  9523                           
  9524                           ;memory.c: 160: PMCON1bits.FREE = 1;
  9525  1A6D  1615               	bsf	21,4	;volatile
  9526                           
  9527                           ;memory.c: 161: PMCON1bits.WREN = 1;
  9528  1A6E  1515               	bsf	21,2	;volatile
  9529                           
  9530                           ;memory.c: 164: PMCON2 = 0x55;
  9531  1A6F  3055               	movlw	85
  9532  1A70  0096               	movwf	22	;volsfr
  9533                           
  9534                           ;memory.c: 165: PMCON2 = 0xAA;
  9535  1A71  30AA               	movlw	170
  9536  1A72  0096               	movwf	22	;volsfr
  9537                           
  9538                           ;memory.c: 166: PMCON1bits.WR = 1;
  9539  1A73  1495               	bsf	21,1	;volatile
  9540                           
  9541                           ;memory.c: 167: __nop();
  9542  1A74  0000               	nop
  9543                           
  9544                           ;memory.c: 168: __nop();
  9545  1A75  0000               	nop
  9546                           
  9547                           ;memory.c: 170: PMCON1bits.WREN = 0;
  9548  1A76  0023               	movlb	3	; select bank3
  9549  1A77  1115               	bcf	21,2	;volatile
  9550                           
  9551                           ;memory.c: 171: INTCONbits.GIE = GIEBitValue;
  9552  1A78  0C75               	rrf	FLASH_EraseBlock@GIEBitValue,w
  9553  1A79  1C03               	skipc
  9554  1A7A  138B               	bcf	11,7	;volatile
  9555  1A7B  1803               	skipnc
  9556  1A7C  178B               	bsf	11,7	;volatile
  9557  1A7D  0008               	return
  9558  1A7E                     __end_of_FLASH_EraseBlock:	
  9559                           
  9560                           	psect	text22
  9561  1D11                     __ptext22:	
  9562 ;; *************** function _modbus_response_illgeal_function *****************
  9563 ;; Defined at:
  9564 ;;		line 8 in file "src/api/modbus.c"
  9565 ;; Parameters:    Size  Location     Type
  9566 ;;  buf             1    wreg     PTR unsigned char 
  9567 ;;		 -> modbusBuf(60), 
  9568 ;;  errcode         1   19[BANK0 ] unsigned char 
  9569 ;; Auto vars:     Size  Location     Type
  9570 ;;  buf             1   20[BANK0 ] PTR unsigned char 
  9571 ;;		 -> modbusBuf(60), 
  9572 ;;  pmdbs           1   21[BANK0 ] PTR struct .
  9573 ;;		 -> modbusBuf(60), 
  9574 ;; Return value:  Size  Location     Type
  9575 ;;                  1    wreg      void 
  9576 ;; Registers used:
  9577 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9578 ;; Tracked objects:
  9579 ;;		On entry : 0/0
  9580 ;;		On exit  : 0/0
  9581 ;;		Unchanged: 0/0
  9582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9583 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9584 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9585 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9586 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9587 ;;Total ram usage:        4 bytes
  9588 ;; Hardware stack levels used:    1
  9589 ;; Hardware stack levels required when called:    3
  9590 ;; This function calls:
  9591 ;;		_crc_append
  9592 ;;		_uart_send_len
  9593 ;; This function is called by:
  9594 ;;		_modbus_response_process
  9595 ;; This function uses a non-reentrant model
  9596 ;;
  9597                           
  9598                           
  9599                           ;psect for function _modbus_response_illgeal_function
  9600  1D11                     _modbus_response_illgeal_function:	
  9601                           
  9602                           ;incstack = 0
  9603                           ; Regs used in _modbus_response_illgeal_function: [wreg+fsr1l+fsr1h+status,2+status,0+pc
      +                          lath+cstack]
  9604                           ;modbus_response_illgeal_function@buf stored from wreg
  9605  1D11  0020               	movlb	0	; select bank0
  9606  1D12  00B4               	movwf	modbus_response_illgeal_function@buf
  9607                           
  9608                           ;modbus.c: 10: st_modbusErrRespStructDef* pmdbs=(st_modbusErrRespStructDef*)buf;
  9609  1D13  0834               	movf	modbus_response_illgeal_function@buf,w
  9610  1D14  00F7               	movwf	??_modbus_response_illgeal_function
  9611  1D15  0877               	movf	??_modbus_response_illgeal_function,w
  9612  1D16  00B5               	movwf	modbus_response_illgeal_function@pmdbs
  9613                           
  9614                           ;modbus.c: 11: if(pmdbs->addr==0x00)return;
  9615  1D17  0835               	movf	modbus_response_illgeal_function@pmdbs,w
  9616  1D18  0086               	movwf	6
  9617  1D19  3001               	movlw	1	; select bank2/3
  9618  1D1A  0087               	movwf	7
  9619  1D1B  0801               	movf	1,w
  9620  1D1C  1903               	btfsc	3,2
  9621  1D1D  0008               	return
  9622                           
  9623                           ;modbus.c: 12: pmdbs->addr=sysData.id;
  9624  1D1E  305C               	movlw	92
  9625  1D1F  0086               	movwf	6
  9626  1D20  3023               	movlw	35
  9627  1D21  0087               	movwf	7
  9628  1D22  3142               	addfsr 1,2
  9629  1D23  0801               	movf	1,w
  9630  1D24  00F7               	movwf	??_modbus_response_illgeal_function
  9631  1D25  0835               	movf	modbus_response_illgeal_function@pmdbs,w
  9632  1D26  0086               	movwf	6
  9633  1D27  3001               	movlw	1	; select bank2/3
  9634  1D28  0087               	movwf	7
  9635  1D29  0877               	movf	??_modbus_response_illgeal_function,w
  9636  1D2A  0081               	movwf	1
  9637                           
  9638                           ;modbus.c: 13: if(errcode){
  9639  1D2B  0833               	movf	modbus_response_illgeal_function@errcode,w
  9640  1D2C  1903               	btfsc	3,2
  9641  1D2D  2D36               	goto	l824
  9642                           
  9643                           ;modbus.c: 14: pmdbs->func+=0x80;
  9644  1D2E  3080               	movlw	128
  9645  1D2F  00F7               	movwf	??_modbus_response_illgeal_function
  9646  1D30  0A35               	incf	modbus_response_illgeal_function@pmdbs,w
  9647  1D31  0086               	movwf	6
  9648  1D32  3001               	movlw	1	; select bank2/3
  9649  1D33  0087               	movwf	7
  9650  1D34  0877               	movf	??_modbus_response_illgeal_function,w
  9651  1D35  0781               	addwf	1,f
  9652  1D36                     l824:	
  9653                           
  9654                           ;modbus.c: 15: }
  9655                           ;modbus.c: 16: pmdbs->errcord=errcode;
  9656  1D36  0833               	movf	modbus_response_illgeal_function@errcode,w
  9657  1D37  00F7               	movwf	??_modbus_response_illgeal_function
  9658  1D38  0835               	movf	modbus_response_illgeal_function@pmdbs,w
  9659  1D39  3E02               	addlw	2
  9660  1D3A  0086               	movwf	6
  9661  1D3B  3001               	movlw	1	; select bank2/3
  9662  1D3C  0087               	movwf	7
  9663  1D3D  0877               	movf	??_modbus_response_illgeal_function,w
  9664  1D3E  0081               	movwf	1
  9665                           
  9666                           ;modbus.c: 17: crc_append(buf,3);
  9667  1D3F  0834               	movf	modbus_response_illgeal_function@buf,w
  9668  1D40  00A8               	movwf	crc_append@message
  9669  1D41  3001               	movlw	1
  9670  1D42  00A9               	movwf	crc_append@message+1
  9671  1D43  3003               	movlw	3
  9672  1D44  00AA               	movwf	crc_append@n
  9673  1D45  3000               	movlw	0
  9674  1D46  00AB               	movwf	crc_append@n+1
  9675  1D47  319B  23FE  319D   	fcall	_crc_append
  9676                           
  9677                           ;modbus.c: 18: uart_send_len(buf,5);
  9678  1D4A  3005               	movlw	5
  9679  1D4B  00F7               	movwf	??_modbus_response_illgeal_function
  9680  1D4C  0877               	movf	??_modbus_response_illgeal_function,w
  9681  1D4D  00F3               	movwf	uart_send_len@len
  9682  1D4E  0020               	movlb	0	; select bank0
  9683  1D4F  0834               	movf	modbus_response_illgeal_function@buf,w
  9684  1D50  319B  23A7         	fcall	_uart_send_len
  9685  1D52  0008               	return
  9686  1D53                     __end_of_modbus_response_illgeal_function:	
  9687                           
  9688                           	psect	text23
  9689  13F7                     __ptext23:	
  9690 ;; *************** function _modbus_response_command *****************
  9691 ;; Defined at:
  9692 ;;		line 179 in file "src/api/modbus.c"
  9693 ;; Parameters:    Size  Location     Type
  9694 ;;  rbuf            1    wreg     PTR unsigned char 
  9695 ;;		 -> modbusBuf(60), 
  9696 ;; Auto vars:     Size  Location     Type
  9697 ;;  rbuf            1   29[BANK0 ] PTR unsigned char 
  9698 ;;		 -> modbusBuf(60), 
  9699 ;;  tempData        2   30[BANK0 ] unsigned int 
  9700 ;;  i               2   25[BANK0 ] unsigned int 
  9701 ;;  startAddr       2   23[BANK0 ] unsigned int 
  9702 ;;  tmpAddr         2   21[BANK0 ] unsigned int 
  9703 ;;  len             1   28[BANK0 ] unsigned char 
  9704 ;;  pmdbs           1   27[BANK0 ] PTR struct .
  9705 ;;		 -> modbusBuf(60), 
  9706 ;; Return value:  Size  Location     Type
  9707 ;;                  1    wreg      void 
  9708 ;; Registers used:
  9709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9710 ;; Tracked objects:
  9711 ;;		On entry : 0/0
  9712 ;;		On exit  : 0/0
  9713 ;;		Unchanged: 0/0
  9714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9716 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9717 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9718 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9719 ;;Total ram usage:       13 bytes
  9720 ;; Hardware stack levels used:    1
  9721 ;; Hardware stack levels required when called:    3
  9722 ;; This function calls:
  9723 ;;		_crc_append
  9724 ;;		_getRegisterVal
  9725 ;;		_uart_send_len
  9726 ;; This function is called by:
  9727 ;;		_modbus_response_process
  9728 ;; This function uses a non-reentrant model
  9729 ;;
  9730                           
  9731                           
  9732                           ;psect for function _modbus_response_command
  9733  13F7                     _modbus_response_command:	
  9734                           
  9735                           ;incstack = 0
  9736                           ; Regs used in _modbus_response_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9737                           ;modbus_response_command@rbuf stored from wreg
  9738  13F7  0020               	movlb	0	; select bank0
  9739  13F8  00BD               	movwf	modbus_response_command@rbuf
  9740                           
  9741                           ;modbus.c: 180: uint16_t i;
  9742                           ;modbus.c: 181: uint16_t startAddr=0;
  9743  13F9  01B7               	clrf	modbus_response_command@startAddr
  9744  13FA  01B8               	clrf	modbus_response_command@startAddr+1
  9745                           
  9746                           ;modbus.c: 182: uint16_t tempData,tmpAddr;
  9747                           ;modbus.c: 183: uint8_t len=0;
  9748  13FB  01BC               	clrf	modbus_response_command@len
  9749                           
  9750                           ;modbus.c: 184: st_modbusComReqStructDef* pmdbs=(st_modbusComReqStructDef*)rbuf;
  9751  13FC  083D               	movf	modbus_response_command@rbuf,w
  9752  13FD  00B3               	movwf	??_modbus_response_command
  9753  13FE  0833               	movf	??_modbus_response_command,w
  9754  13FF  00BB               	movwf	modbus_response_command@pmdbs
  9755                           
  9756                           ;modbus.c: 185: if(pmdbs->addr!=sysData.id || pmdbs->addr==0)return;
  9757  1400  305C               	movlw	92
  9758  1401  0086               	movwf	6
  9759  1402  3023               	movlw	35
  9760  1403  0087               	movwf	7
  9761  1404  3142               	addfsr 1,2
  9762  1405  083B               	movf	modbus_response_command@pmdbs,w
  9763  1406  0084               	movwf	4
  9764  1407  3001               	movlw	1	; select bank2/3
  9765  1408  0085               	movwf	5
  9766  1409  0800               	movf	0,w
  9767  140A  0601               	xorwf	1,w
  9768  140B  1D03               	skipz
  9769  140C  0008               	return
  9770  140D  083B               	movf	modbus_response_command@pmdbs,w
  9771  140E  0086               	movwf	6
  9772  140F  3001               	movlw	1	; select bank2/3
  9773  1410  0087               	movwf	7
  9774  1411  0801               	movf	1,w
  9775  1412  1903               	btfsc	3,2
  9776  1413  0008               	return
  9777                           
  9778                           ;modbus.c: 186: startAddr=pmdbs->addr_hi;
  9779  1414  083B               	movf	modbus_response_command@pmdbs,w
  9780  1415  3E02               	addlw	2
  9781  1416  0086               	movwf	6
  9782  1417  3001               	movlw	1	; select bank2/3
  9783  1418  0087               	movwf	7
  9784  1419  0801               	movf	1,w
  9785  141A  00B3               	movwf	??_modbus_response_command
  9786  141B  01B4               	clrf	??_modbus_response_command+1
  9787  141C  0833               	movf	??_modbus_response_command,w
  9788  141D  00B7               	movwf	modbus_response_command@startAddr
  9789  141E  0834               	movf	??_modbus_response_command+1,w
  9790  141F  00B8               	movwf	modbus_response_command@startAddr+1
  9791                           
  9792                           ;modbus.c: 187: startAddr<<=8;
  9793  1420  3008               	movlw	8
  9794  1421                     u4675:	
  9795  1421  35B7               	lslf	modbus_response_command@startAddr,f
  9796  1422  0DB8               	rlf	modbus_response_command@startAddr+1,f
  9797  1423  0B89               	decfsz	9,f
  9798  1424  2C21               	goto	u4675
  9799                           
  9800                           ;modbus.c: 188: startAddr |= pmdbs->addr_lo;
  9801  1425  083B               	movf	modbus_response_command@pmdbs,w
  9802  1426  3E03               	addlw	3
  9803  1427  0086               	movwf	6
  9804  1428  3001               	movlw	1	; select bank2/3
  9805  1429  0087               	movwf	7
  9806  142A  0801               	movf	1,w
  9807  142B  00B3               	movwf	??_modbus_response_command
  9808  142C  01B4               	clrf	??_modbus_response_command+1
  9809  142D  0833               	movf	??_modbus_response_command,w
  9810  142E  04B7               	iorwf	modbus_response_command@startAddr,f
  9811  142F  0834               	movf	??_modbus_response_command+1,w
  9812  1430  04B8               	iorwf	modbus_response_command@startAddr+1,f
  9813                           
  9814                           ;modbus.c: 189: tmpAddr=startAddr;
  9815  1431  0838               	movf	modbus_response_command@startAddr+1,w
  9816  1432  00B6               	movwf	modbus_response_command@tmpAddr+1
  9817  1433  0837               	movf	modbus_response_command@startAddr,w
  9818  1434  00B5               	movwf	modbus_response_command@tmpAddr
  9819                           
  9820                           ;modbus.c: 190: len = pmdbs->len_lo;
  9821  1435  083B               	movf	modbus_response_command@pmdbs,w
  9822  1436  0086               	movwf	6
  9823  1437  3001               	movlw	1	; select bank2/3
  9824  1438  0087               	movwf	7
  9825  1439  3001               	movlw	1	; select bank2/3
  9826  143A  3F45               	moviw [5]fsr1
  9827  143B  00BC               	movwf	modbus_response_command@len
  9828                           
  9829                           ;modbus.c: 191: len<<=1;
  9830  143C  1003               	clrc
  9831  143D  0DBC               	rlf	modbus_response_command@len,f
  9832                           
  9833                           ;modbus.c: 192: if(len>32)len=32;
  9834  143E  3021               	movlw	33
  9835  143F  023C               	subwf	modbus_response_command@len,w
  9836  1440  1C03               	skipc
  9837  1441  2C46               	goto	l5265
  9838  1442  3020               	movlw	32
  9839  1443  00B3               	movwf	??_modbus_response_command
  9840  1444  0833               	movf	??_modbus_response_command,w
  9841  1445  00BC               	movwf	modbus_response_command@len
  9842  1446                     l5265:	
  9843                           
  9844                           ;modbus.c: 193: for(i=0;i<len;i=i+2,tmpAddr++){
  9845  1446  01B9               	clrf	modbus_response_command@i
  9846  1447  01BA               	clrf	modbus_response_command@i+1
  9847  1448                     l5277:	
  9848  1448  083C               	movf	modbus_response_command@len,w
  9849  1449  00B3               	movwf	??_modbus_response_command
  9850  144A  01B4               	clrf	??_modbus_response_command+1
  9851  144B  0834               	movf	??_modbus_response_command+1,w
  9852  144C  023A               	subwf	modbus_response_command@i+1,w
  9853  144D  1D03               	skipz
  9854  144E  2C51               	goto	u4695
  9855  144F  0833               	movf	??_modbus_response_command,w
  9856  1450  0239               	subwf	modbus_response_command@i,w
  9857  1451                     u4695:	
  9858  1451  1803               	btfsc	3,0
  9859  1452  2C82               	goto	l5279
  9860                           
  9861                           ;modbus.c: 194: getRegisterVal(tmpAddr,&tempData);
  9862  1453  0836               	movf	modbus_response_command@tmpAddr+1,w
  9863  1454  00F4               	movwf	getRegisterVal@addr+1
  9864  1455  0835               	movf	modbus_response_command@tmpAddr,w
  9865  1456  00F3               	movwf	getRegisterVal@addr
  9866  1457  303E               	movlw	(low (modbus_response_command@tempData| 0))& (0+255)
  9867  1458  00B3               	movwf	??_modbus_response_command
  9868  1459  0833               	movf	??_modbus_response_command,w
  9869  145A  00F5               	movwf	getRegisterVal@tempData
  9870  145B  3195  2598  3193   	fcall	_getRegisterVal
  9871                           
  9872                           ;modbus.c: 195: rbuf[i+3] = tempData >> 8;
  9873  145E  0020               	movlb	0	; select bank0
  9874  145F  083F               	movf	modbus_response_command@tempData+1,w
  9875  1460  00B3               	movwf	??_modbus_response_command
  9876  1461  0839               	movf	modbus_response_command@i,w
  9877  1462  3E03               	addlw	3
  9878  1463  073D               	addwf	modbus_response_command@rbuf,w
  9879  1464  00B4               	movwf	??_modbus_response_command+1
  9880  1465  0834               	movf	??_modbus_response_command+1,w
  9881  1466  0086               	movwf	6
  9882  1467  3001               	movlw	1	; select bank2/3
  9883  1468  0087               	movwf	7
  9884  1469  0833               	movf	??_modbus_response_command,w
  9885  146A  0081               	movwf	1
  9886                           
  9887                           ;modbus.c: 196: rbuf[i+4] = tempData & 0xff;
  9888  146B  083E               	movf	modbus_response_command@tempData,w
  9889  146C  00B3               	movwf	??_modbus_response_command
  9890  146D  0839               	movf	modbus_response_command@i,w
  9891  146E  3E04               	addlw	4
  9892  146F  073D               	addwf	modbus_response_command@rbuf,w
  9893  1470  00B4               	movwf	??_modbus_response_command+1
  9894  1471  0834               	movf	??_modbus_response_command+1,w
  9895  1472  0086               	movwf	6
  9896  1473  3001               	movlw	1	; select bank2/3
  9897  1474  0087               	movwf	7
  9898  1475  0833               	movf	??_modbus_response_command,w
  9899  1476  0081               	movwf	1
  9900  1477  0839               	movf	modbus_response_command@i,w
  9901  1478  3E02               	addlw	2
  9902  1479  00B9               	movwf	modbus_response_command@i
  9903  147A  3000               	movlw	0
  9904  147B  3D3A               	addwfc	modbus_response_command@i+1,w
  9905  147C  00BA               	movwf	modbus_response_command@i+1
  9906  147D  3001               	movlw	1
  9907  147E  07B5               	addwf	modbus_response_command@tmpAddr,f
  9908  147F  3000               	movlw	0
  9909  1480  3DB6               	addwfc	modbus_response_command@tmpAddr+1,f
  9910  1481  2C48               	goto	l5277
  9911  1482                     l5279:	
  9912                           
  9913                           ;modbus.c: 198: }
  9914                           ;modbus.c: 199: rbuf[0] = sysData.id;
  9915  1482  305C               	movlw	92
  9916  1483  0086               	movwf	6
  9917  1484  3023               	movlw	35
  9918  1485  0087               	movwf	7
  9919  1486  3142               	addfsr 1,2
  9920  1487  0801               	movf	1,w
  9921  1488  00B3               	movwf	??_modbus_response_command
  9922  1489  083D               	movf	modbus_response_command@rbuf,w
  9923  148A  0086               	movwf	6
  9924  148B  3001               	movlw	1	; select bank2/3
  9925  148C  0087               	movwf	7
  9926  148D  0833               	movf	??_modbus_response_command,w
  9927  148E  0081               	movwf	1
  9928                           
  9929                           ;modbus.c: 200: rbuf[1] = 3;
  9930  148F  3003               	movlw	3
  9931  1490  00B3               	movwf	??_modbus_response_command
  9932  1491  0A3D               	incf	modbus_response_command@rbuf,w
  9933  1492  0086               	movwf	6
  9934  1493  3001               	movlw	1	; select bank2/3
  9935  1494  0087               	movwf	7
  9936  1495  0833               	movf	??_modbus_response_command,w
  9937  1496  0081               	movwf	1
  9938                           
  9939                           ;modbus.c: 201: rbuf[2] = len;
  9940  1497  083C               	movf	modbus_response_command@len,w
  9941  1498  00B3               	movwf	??_modbus_response_command
  9942  1499  083D               	movf	modbus_response_command@rbuf,w
  9943  149A  3E02               	addlw	2
  9944  149B  0086               	movwf	6
  9945  149C  3001               	movlw	1	; select bank2/3
  9946  149D  0087               	movwf	7
  9947  149E  0833               	movf	??_modbus_response_command,w
  9948  149F  0081               	movwf	1
  9949                           
  9950                           ;modbus.c: 202: len += 3;
  9951  14A0  3003               	movlw	3
  9952  14A1  00B3               	movwf	??_modbus_response_command
  9953  14A2  0833               	movf	??_modbus_response_command,w
  9954  14A3  07BC               	addwf	modbus_response_command@len,f
  9955                           
  9956                           ;modbus.c: 203: crc_append(rbuf,len);
  9957  14A4  083D               	movf	modbus_response_command@rbuf,w
  9958  14A5  00A8               	movwf	crc_append@message
  9959  14A6  3001               	movlw	1
  9960  14A7  00A9               	movwf	crc_append@message+1
  9961  14A8  083C               	movf	modbus_response_command@len,w
  9962  14A9  00B3               	movwf	??_modbus_response_command
  9963  14AA  01B4               	clrf	??_modbus_response_command+1
  9964  14AB  0833               	movf	??_modbus_response_command,w
  9965  14AC  00AA               	movwf	crc_append@n
  9966  14AD  0834               	movf	??_modbus_response_command+1,w
  9967  14AE  00AB               	movwf	crc_append@n+1
  9968  14AF  319B  23FE  3193   	fcall	_crc_append
  9969                           
  9970                           ;modbus.c: 204: len += 2;
  9971  14B2  3002               	movlw	2
  9972  14B3  0020               	movlb	0	; select bank0
  9973  14B4  00B3               	movwf	??_modbus_response_command
  9974  14B5  0833               	movf	??_modbus_response_command,w
  9975  14B6  07BC               	addwf	modbus_response_command@len,f
  9976                           
  9977                           ;modbus.c: 205: uart_send_len(rbuf,len);
  9978  14B7  083C               	movf	modbus_response_command@len,w
  9979  14B8  00B3               	movwf	??_modbus_response_command
  9980  14B9  0833               	movf	??_modbus_response_command,w
  9981  14BA  00F3               	movwf	uart_send_len@len
  9982  14BB  083D               	movf	modbus_response_command@rbuf,w
  9983  14BC  319B  23A7         	fcall	_uart_send_len
  9984  14BE  0008               	return
  9985  14BF                     __end_of_modbus_response_command:	
  9986                           
  9987                           	psect	text24
  9988  1BA7                     __ptext24:	
  9989 ;; *************** function _uart_send_len *****************
  9990 ;; Defined at:
  9991 ;;		line 36 in file "src/api/my_uart.c"
  9992 ;; Parameters:    Size  Location     Type
  9993 ;;  buf             1    wreg     PTR unsigned char 
  9994 ;;		 -> modbusBuf(60), 
  9995 ;;  len             1    3[COMMON] unsigned char 
  9996 ;; Auto vars:     Size  Location     Type
  9997 ;;  buf             1    6[COMMON] PTR unsigned char 
  9998 ;;		 -> modbusBuf(60), 
  9999 ;;  i               1    5[COMMON] unsigned char 
 10000 ;; Return value:  Size  Location     Type
 10001 ;;                  1    wreg      void 
 10002 ;; Registers used:
 10003 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10004 ;; Tracked objects:
 10005 ;;		On entry : 0/0
 10006 ;;		On exit  : 0/0
 10007 ;;		Unchanged: 0/0
 10008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10009 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10010 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10011 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10012 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10013 ;;Total ram usage:        4 bytes
 10014 ;; Hardware stack levels used:    1
 10015 ;; Hardware stack levels required when called:    1
 10016 ;; This function calls:
 10017 ;;		Nothing
 10018 ;; This function is called by:
 10019 ;;		_modbus_response_illgeal_function
 10020 ;;		_modbus_response_write_single_register
 10021 ;;		_modbus_response_write_mult_register
 10022 ;;		_modbus_response_command
 10023 ;;		_main
 10024 ;; This function uses a non-reentrant model
 10025 ;;
 10026                           
 10027                           
 10028                           ;psect for function _uart_send_len
 10029  1BA7                     _uart_send_len:	
 10030                           
 10031                           ;incstack = 0
 10032                           ; Regs used in _uart_send_len: [wreg+fsr1l+fsr1h+status,2+status,0]
 10033                           ;uart_send_len@buf stored from wreg
 10034  1BA7  00F6               	movwf	uart_send_len@buf
 10035                           
 10036                           ;my_uart.c: 38: uint8_t i;
 10037                           ;my_uart.c: 39: if(!TXSTAbits.TXEN)TXSTAbits.TXEN=1;
 10038  1BA8  0023               	movlb	3	; select bank3
 10039  1BA9  1E9E               	btfss	30,5	;volatile
 10040  1BAA  169E               	bsf	30,5	;volatile
 10041                           
 10042                           ;my_uart.c: 41: for(i=0;i<len;i++){
 10043  1BAB  01F5               	clrf	uart_send_len@i
 10044  1BAC                     l3483:	
 10045  1BAC  0873               	movf	uart_send_len@len,w
 10046  1BAD  0275               	subwf	uart_send_len@i,w
 10047  1BAE  1803               	btfsc	3,0
 10048  1BAF  2BCA               	goto	l524
 10049  1BB0                     l516:	
 10050                           ;my_uart.c: 42: while(0 == PIR1bits.TXIF);
 10051                           
 10052  1BB0  0020               	movlb	0	; select bank0
 10053  1BB1  1E11               	btfss	17,4	;volatile
 10054  1BB2  2BB0               	goto	l516
 10055                           
 10056                           ;my_uart.c: 43: do{__nop();__nop();__nop();__nop();}while(0);;
 10057  1BB3  0000               	nop
 10058  1BB4  0000               	nop
 10059  1BB5  0000               	nop
 10060  1BB6  0000               	nop
 10061                           
 10062                           ;my_uart.c: 44: TXREG = buf[i];
 10063  1BB7  0875               	movf	uart_send_len@i,w
 10064  1BB8  0776               	addwf	uart_send_len@buf,w
 10065  1BB9  00F4               	movwf	??_uart_send_len
 10066  1BBA  0874               	movf	??_uart_send_len,w
 10067  1BBB  0086               	movwf	6
 10068  1BBC  3001               	movlw	1	; select bank2/3
 10069  1BBD  0087               	movwf	7
 10070  1BBE  0801               	movf	1,w
 10071  1BBF  0023               	movlb	3	; select bank3
 10072  1BC0  009A               	movwf	26	;volatile
 10073                           
 10074                           ;my_uart.c: 45: do{__nop();__nop();__nop();__nop();}while(0);;
 10075  1BC1  0000               	nop
 10076  1BC2  0000               	nop
 10077  1BC3  0000               	nop
 10078  1BC4  0000               	nop
 10079  1BC5  3001               	movlw	1
 10080  1BC6  00F4               	movwf	??_uart_send_len
 10081  1BC7  0874               	movf	??_uart_send_len,w
 10082  1BC8  07F5               	addwf	uart_send_len@i,f
 10083  1BC9  2BAC               	goto	l3483
 10084  1BCA                     l524:	
 10085                           ;my_uart.c: 46: }
 10086                           ;my_uart.c: 47: while(0 == PIR1bits.TXIF);
 10087                           
 10088  1BCA  0020               	movlb	0	; select bank0
 10089  1BCB  1A11               	btfsc	17,4	;volatile
 10090  1BCC  0008               	return
 10091  1BCD  2BCA               	goto	l524
 10092  1BCE                     __end_of_uart_send_len:	
 10093                           
 10094                           	psect	text25
 10095  1598                     __ptext25:	
 10096 ;; *************** function _getRegisterVal *****************
 10097 ;; Defined at:
 10098 ;;		line 80 in file "src/api/modbus.c"
 10099 ;; Parameters:    Size  Location     Type
 10100 ;;  addr            2    3[COMMON] unsigned int 
 10101 ;;  tempData        1    5[COMMON] PTR unsigned int 
 10102 ;;		 -> modbus_response_command@tempData(2), 
 10103 ;; Auto vars:     Size  Location     Type
 10104 ;;  t16             2    4[BANK0 ] unsigned int 
 10105 ;;  tempAddr        1    6[BANK0 ] unsigned char 
 10106 ;; Return value:  Size  Location     Type
 10107 ;;                  2    3[COMMON] unsigned int 
 10108 ;; Registers used:
 10109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 10110 ;; Tracked objects:
 10111 ;;		On entry : 0/0
 10112 ;;		On exit  : 0/0
 10113 ;;		Unchanged: 0/0
 10114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10115 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10116 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10117 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10118 ;;      Totals:         3       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10119 ;;Total ram usage:       10 bytes
 10120 ;; Hardware stack levels used:    1
 10121 ;; Hardware stack levels required when called:    1
 10122 ;; This function calls:
 10123 ;;		Nothing
 10124 ;; This function is called by:
 10125 ;;		_modbus_response_command
 10126 ;; This function uses a non-reentrant model
 10127 ;;
 10128                           
 10129                           
 10130                           ;psect for function _getRegisterVal
 10131  1598                     _getRegisterVal:	
 10132                           
 10133                           ;modbus.c: 82: uint16_t t16 = 0;
 10134                           
 10135                           ;incstack = 0
 10136                           ; Regs used in _getRegisterVal: [wreg-fsr1h+status,2+status,0]
 10137  1598  0020               	movlb	0	; select bank0
 10138  1599  01A4               	clrf	getRegisterVal@t16
 10139  159A  01A5               	clrf	getRegisterVal@t16+1
 10140                           
 10141                           ;modbus.c: 83: uint8_t tempAddr;
 10142                           ;modbus.c: 85: tempAddr = addr & 0xff;
 10143  159B  0873               	movf	getRegisterVal@addr,w
 10144  159C  00A0               	movwf	??_getRegisterVal
 10145  159D  0820               	movf	??_getRegisterVal,w
 10146  159E  00A6               	movwf	getRegisterVal@tempAddr
 10147                           
 10148                           ;modbus.c: 86: switch(tempAddr){
 10149  159F  2E49               	goto	l5019
 10150  15A0                     l4985:	
 10151                           ;modbus.c: 87: case 0x01:*tempData = 0100; break;
 10152                           
 10153  15A0  0875               	movf	getRegisterVal@tempData,w
 10154  15A1  0086               	movwf	6
 10155  15A2  0187               	clrf	7
 10156  15A3  3040               	movlw	64
 10157  15A4  3FC0               	movwi [0]fsr1
 10158  15A5  3000               	movlw	0
 10159  15A6  3FC1               	movwi [1]fsr1
 10160  15A7  2E56               	goto	l5021
 10161  15A8                     l4987:	
 10162                           ;modbus.c: 88: case 0x02:*tempData=sysData.id;break;
 10163                           
 10164  15A8  305C               	movlw	92
 10165  15A9  0086               	movwf	6
 10166  15AA  3023               	movlw	35
 10167  15AB  0087               	movwf	7
 10168  15AC  3142               	addfsr 1,2
 10169  15AD  0801               	movf	1,w
 10170  15AE  00A0               	movwf	??_getRegisterVal
 10171  15AF  01A1               	clrf	??_getRegisterVal+1
 10172  15B0  0875               	movf	getRegisterVal@tempData,w
 10173  15B1  0086               	movwf	6
 10174  15B2  0187               	clrf	7
 10175  15B3  0820               	movf	??_getRegisterVal,w
 10176  15B4  3FC0               	movwi [0]fsr1
 10177  15B5  0821               	movf	??_getRegisterVal+1,w
 10178  15B6  3FC1               	movwi [1]fsr1
 10179  15B7  2E56               	goto	l5021
 10180  15B8                     l4989:	
 10181                           ;modbus.c: 89: case 0x03:*tempData=(sysData.pidSetFlg1<<8 | sysData.pidSetFlg0);break;
 10182                           
 10183  15B8  305C               	movlw	92
 10184  15B9  0084               	movwf	4
 10185  15BA  3023               	movlw	35
 10186  15BB  0085               	movwf	5
 10187  15BC  3101               	addfsr 0,1
 10188  15BD  0800               	movf	0,w
 10189  15BE  00A0               	movwf	??_getRegisterVal
 10190  15BF  305C               	movlw	92
 10191  15C0  0084               	movwf	4
 10192  15C1  3023               	movlw	35
 10193  15C2  0085               	movwf	5
 10194  15C3  0875               	movf	getRegisterVal@tempData,w
 10195  15C4  0086               	movwf	6
 10196  15C5  0187               	clrf	7
 10197  15C6  0800               	movf	0,w
 10198  15C7  3FC0               	movwi [0]fsr1
 10199  15C8  0820               	movf	??_getRegisterVal,w
 10200  15C9  3FC1               	movwi [1]fsr1
 10201  15CA  2E56               	goto	l5021
 10202  15CB                     l4991:	
 10203                           ;modbus.c: 90: case 0x04:*tempData=sysData.pidKp;break;
 10204                           
 10205  15CB  305C               	movlw	92
 10206  15CC  0086               	movwf	6
 10207  15CD  3023               	movlw	35
 10208  15CE  0087               	movwf	7
 10209  15CF  3144               	addfsr 1,4
 10210  15D0  0875               	movf	getRegisterVal@tempData,w
 10211  15D1  0084               	movwf	4
 10212  15D2  0185               	clrf	5
 10213  15D3  3F40               	moviw [0]fsr1
 10214  15D4  3F80               	movwi [0]fsr0
 10215  15D5  3F41               	moviw [1]fsr1
 10216  15D6  3F81               	movwi [1]fsr0
 10217  15D7  2E56               	goto	l5021
 10218  15D8                     l4993:	
 10219                           ;modbus.c: 91: case 0x05:*tempData=sysData.pidTi;break;
 10220                           
 10221  15D8  305C               	movlw	92
 10222  15D9  0086               	movwf	6
 10223  15DA  3023               	movlw	35
 10224  15DB  0087               	movwf	7
 10225  15DC  3146               	addfsr 1,6
 10226  15DD  0875               	movf	getRegisterVal@tempData,w
 10227  15DE  0084               	movwf	4
 10228  15DF  0185               	clrf	5
 10229  15E0  3F40               	moviw [0]fsr1
 10230  15E1  3F80               	movwi [0]fsr0
 10231  15E2  3F41               	moviw [1]fsr1
 10232  15E3  3F81               	movwi [1]fsr0
 10233  15E4  2E56               	goto	l5021
 10234  15E5                     l4995:	
 10235                           ;modbus.c: 92: case 0x06:*tempData=sysData.pidTd;break;
 10236                           
 10237  15E5  305C               	movlw	92
 10238  15E6  0086               	movwf	6
 10239  15E7  3023               	movlw	35
 10240  15E8  0087               	movwf	7
 10241  15E9  3148               	addfsr 1,8
 10242  15EA  0875               	movf	getRegisterVal@tempData,w
 10243  15EB  0084               	movwf	4
 10244  15EC  0185               	clrf	5
 10245  15ED  3F40               	moviw [0]fsr1
 10246  15EE  3F80               	movwi [0]fsr0
 10247  15EF  3F41               	moviw [1]fsr1
 10248  15F0  3F81               	movwi [1]fsr0
 10249  15F1  2E56               	goto	l5021
 10250  15F2                     l4997:	
 10251                           ;modbus.c: 93: case 0x07:*tempData=rtAdcValueRsLo; break;
 10252                           
 10253  15F2  0875               	movf	getRegisterVal@tempData,w
 10254  15F3  0086               	movwf	6
 10255  15F4  0187               	clrf	7
 10256  15F5  0866               	movf	_rtAdcValueRsLo,w
 10257  15F6  3FC0               	movwi [0]fsr1
 10258  15F7  0867               	movf	_rtAdcValueRsLo+1,w
 10259  15F8  3FC1               	movwi [1]fsr1
 10260  15F9  2E56               	goto	l5021
 10261  15FA                     l4999:	
 10262                           ;modbus.c: 94: case 0x08:*tempData=rtAdcValueRsHi;break;
 10263                           
 10264  15FA  0875               	movf	getRegisterVal@tempData,w
 10265  15FB  0086               	movwf	6
 10266  15FC  0187               	clrf	7
 10267  15FD  0021               	movlb	1	; select bank1
 10268  15FE  0854               	movf	_rtAdcValueRsHi^(0+128),w
 10269  15FF  3FC0               	movwi [0]fsr1
 10270  1600  0855               	movf	(_rtAdcValueRsHi+1)^(0+128),w
 10271  1601  3FC1               	movwi [1]fsr1
 10272  1602  2E56               	goto	l5021
 10273  1603                     l5001:	
 10274                           ;modbus.c: 95: case 0x09:*tempData=rtAdcValueRcLo;break;
 10275                           
 10276  1603  0875               	movf	getRegisterVal@tempData,w
 10277  1604  0086               	movwf	6
 10278  1605  0187               	clrf	7
 10279  1606  0020               	movlb	0	; select bank0
 10280  1607  0864               	movf	_rtAdcValueRcLo,w
 10281  1608  3FC0               	movwi [0]fsr1
 10282  1609  0865               	movf	_rtAdcValueRcLo+1,w
 10283  160A  3FC1               	movwi [1]fsr1
 10284  160B  2E56               	goto	l5021
 10285  160C                     l5003:	
 10286                           ;modbus.c: 96: case 0x0a:*tempData=rtAdcValueRcHi;break;
 10287                           
 10288  160C  0875               	movf	getRegisterVal@tempData,w
 10289  160D  0086               	movwf	6
 10290  160E  0187               	clrf	7
 10291  160F  0021               	movlb	1	; select bank1
 10292  1610  0852               	movf	_rtAdcValueRcHi^(0+128),w
 10293  1611  3FC0               	movwi [0]fsr1
 10294  1612  0853               	movf	(_rtAdcValueRcHi+1)^(0+128),w
 10295  1613  3FC1               	movwi [1]fsr1
 10296  1614  2E56               	goto	l5021
 10297  1615                     l5005:	
 10298                           ;modbus.c: 97: case 0x0b:*tempData=resRc;break;
 10299                           
 10300  1615  0875               	movf	getRegisterVal@tempData,w
 10301  1616  0086               	movwf	6
 10302  1617  0187               	clrf	7
 10303  1618  0020               	movlb	0	; select bank0
 10304  1619  086E               	movf	_resRc,w
 10305  161A  3FC0               	movwi [0]fsr1
 10306  161B  086F               	movf	_resRc+1,w
 10307  161C  3FC1               	movwi [1]fsr1
 10308  161D  2E56               	goto	l5021
 10309  161E                     l5007:	
 10310                           ;modbus.c: 98: case 0x0c:*tempData=resRs;break;
 10311                           
 10312  161E  0875               	movf	getRegisterVal@tempData,w
 10313  161F  0086               	movwf	6
 10314  1620  0187               	clrf	7
 10315  1621  086C               	movf	_resRs,w
 10316  1622  3FC0               	movwi [0]fsr1
 10317  1623  086D               	movf	_resRs+1,w
 10318  1624  3FC1               	movwi [1]fsr1
 10319  1625  2E56               	goto	l5021
 10320  1626                     l5009:	
 10321                           ;modbus.c: 99: case 0x0d:*tempData=rtAdcValueVoFb;break;
 10322                           
 10323  1626  0875               	movf	getRegisterVal@tempData,w
 10324  1627  0086               	movwf	6
 10325  1628  0187               	clrf	7
 10326  1629  0021               	movlb	1	; select bank1
 10327  162A  0850               	movf	_rtAdcValueVoFb^(0+128),w
 10328  162B  3FC0               	movwi [0]fsr1
 10329  162C  0851               	movf	(_rtAdcValueVoFb+1)^(0+128),w
 10330  162D  3FC1               	movwi [1]fsr1
 10331  162E  2E56               	goto	l5021
 10332  162F                     l5011:	
 10333                           ;modbus.c: 100: case 0x0e:*tempData=voExpectMv;break;
 10334                           
 10335  162F  0875               	movf	getRegisterVal@tempData,w
 10336  1630  0086               	movwf	6
 10337  1631  0187               	clrf	7
 10338  1632  0021               	movlb	1	; select bank1
 10339  1633  084A               	movf	_voExpectMv^(0+128),w
 10340  1634  3FC0               	movwi [0]fsr1
 10341  1635  084B               	movf	(_voExpectMv+1)^(0+128),w
 10342  1636  3FC1               	movwi [1]fsr1
 10343  1637  2E56               	goto	l5021
 10344  1638                     l5013:	
 10345                           ;modbus.c: 101: case 0x0f:*tempData=voExpectAdcValue;break;
 10346                           
 10347  1638  0875               	movf	getRegisterVal@tempData,w
 10348  1639  0086               	movwf	6
 10349  163A  0187               	clrf	7
 10350  163B  0020               	movlb	0	; select bank0
 10351  163C  0860               	movf	_voExpectAdcValue,w
 10352  163D  3FC0               	movwi [0]fsr1
 10353  163E  0861               	movf	_voExpectAdcValue+1,w
 10354  163F  3FC1               	movwi [1]fsr1
 10355  1640  2E56               	goto	l5021
 10356  1641                     l5015:	
 10357                           ;modbus.c: 102: default: *tempData=0x55aa;break;
 10358                           
 10359  1641  0875               	movf	getRegisterVal@tempData,w
 10360  1642  0086               	movwf	6
 10361  1643  0187               	clrf	7
 10362  1644  30AA               	movlw	170
 10363  1645  3FC0               	movwi [0]fsr1
 10364  1646  3055               	movlw	85
 10365  1647  3FC1               	movwi [1]fsr1
 10366                           
 10367                           ;modbus.c: 103: }
 10368  1648  2E56               	goto	l5021
 10369  1649                     l5019:	
 10370  1649  0826               	movf	getRegisterVal@tempAddr,w
 10371                           
 10372                           ; Switch size 1, requested type "space"
 10373                           ; Number of cases is 15, Range of values is 1 to 15
 10374                           ; switch strategies available:
 10375                           ; Name         Instructions Cycles
 10376                           ; direct_byte           39     9 (fixed)
 10377                           ; simple_byte           46    24 (average)
 10378                           ; jumptable            263     9 (fixed)
 10379                           ;	Chosen strategy is direct_byte
 10380  164A  3EFF               	addlw	-1
 10381  164B  1C03               	skipc
 10382  164C  2E41               	goto	l5015
 10383  164D  0084               	movwf	4
 10384  164E  300F               	movlw	15
 10385  164F  0204               	subwf	4,w
 10386  1650  1803               	skipnc
 10387  1651  2E41               	goto	l5015
 10388  1652  3198               	movlp	high S5923
 10389  1653  3504               	lslf	4,w
 10390  1654  3E00               	addlw	low S5923
 10391  1655  0082               	movwf	2
 10392  1656                     l5021:	
 10393                           
 10394                           ;modbus.c: 104: if(tempAddr>0x0f && tempAddr < 0x10+30*2){
 10395  1656  3010               	movlw	16
 10396  1657  0020               	movlb	0	; select bank0
 10397  1658  0226               	subwf	getRegisterVal@tempAddr,w
 10398  1659  1C03               	skipc
 10399  165A  0008               	return
 10400  165B  304C               	movlw	76
 10401  165C  0226               	subwf	getRegisterVal@tempAddr,w
 10402  165D  1803               	skipnc
 10403  165E  0008               	return
 10404                           
 10405                           ;modbus.c: 105: tempAddr-=0x10;
 10406  165F  3010               	movlw	16
 10407  1660  02A6               	subwf	getRegisterVal@tempAddr,f
 10408                           
 10409                           ;modbus.c: 106: if(tempAddr & 0x01){
 10410  1661  1C26               	btfss	getRegisterVal@tempAddr,0
 10411  1662  2E7A               	goto	l5031
 10412                           
 10413                           ;modbus.c: 107: *tempData=sysData.calibVoMV[tempAddr>>1];
 10414  1663  3626               	lsrf	getRegisterVal@tempAddr,w
 10415  1664  00A0               	movwf	??_getRegisterVal
 10416  1665  01A1               	clrf	??_getRegisterVal+1
 10417  1666  35A0               	lslf	??_getRegisterVal,f
 10418  1667  0DA1               	rlf	??_getRegisterVal+1,f
 10419  1668  30A2               	movlw	162
 10420  1669  00A2               	movwf	??_getRegisterVal+2
 10421  166A  3023               	movlw	35
 10422  166B  00A3               	movwf	??_getRegisterVal+3
 10423  166C  0820               	movf	??_getRegisterVal,w
 10424  166D  0722               	addwf	??_getRegisterVal+2,w
 10425  166E  0086               	movwf	6
 10426  166F  0821               	movf	??_getRegisterVal+1,w
 10427  1670  3D23               	addwfc	??_getRegisterVal+3,w
 10428  1671  0087               	movwf	7
 10429  1672  0875               	movf	getRegisterVal@tempData,w
 10430  1673  0084               	movwf	4
 10431  1674  0185               	clrf	5
 10432  1675  3F40               	moviw [0]fsr1
 10433  1676  3F80               	movwi [0]fsr0
 10434  1677  3F41               	moviw [1]fsr1
 10435  1678  3F81               	movwi [1]fsr0
 10436                           
 10437                           ;modbus.c: 108: }else{
 10438  1679  0008               	return
 10439  167A                     l5031:	
 10440                           
 10441                           ;modbus.c: 109: *tempData=sysData.calibRsAdc[tempAddr>>1];
 10442  167A  3626               	lsrf	getRegisterVal@tempAddr,w
 10443  167B  00A0               	movwf	??_getRegisterVal
 10444  167C  01A1               	clrf	??_getRegisterVal+1
 10445  167D  35A0               	lslf	??_getRegisterVal,f
 10446  167E  0DA1               	rlf	??_getRegisterVal+1,f
 10447  167F  3066               	movlw	102
 10448  1680  00A2               	movwf	??_getRegisterVal+2
 10449  1681  3023               	movlw	35
 10450  1682  00A3               	movwf	??_getRegisterVal+3
 10451  1683  0820               	movf	??_getRegisterVal,w
 10452  1684  0722               	addwf	??_getRegisterVal+2,w
 10453  1685  0086               	movwf	6
 10454  1686  0821               	movf	??_getRegisterVal+1,w
 10455  1687  3D23               	addwfc	??_getRegisterVal+3,w
 10456  1688  0087               	movwf	7
 10457  1689  0875               	movf	getRegisterVal@tempData,w
 10458  168A  0084               	movwf	4
 10459  168B  0185               	clrf	5
 10460  168C  3F40               	moviw [0]fsr1
 10461  168D  3F80               	movwi [0]fsr0
 10462  168E  3F41               	moviw [1]fsr1
 10463  168F  3F81               	movwi [1]fsr0
 10464  1690  0008               	return
 10465  1691                     __end_of_getRegisterVal:	
 10466                           ;modbus.c: 110: }
 10467                           ;modbus.c: 111: }
 10468                           ;modbus.c: 112: return t16;
 10469                           ;	Return value of _getRegisterVal is never used
 10470                           
 10471                           
 10472                           	psect	swtext2
 10473  1800                     __pswtext2:	
 10474  1800                     S5923:	
 10475  1800  3195  2DA0         	ljmp	l4985
 10476  1802  3195  2DA8         	ljmp	l4987
 10477  1804  3195  2DB8         	ljmp	l4989
 10478  1806  3195  2DCB         	ljmp	l4991
 10479  1808  3195  2DD8         	ljmp	l4993
 10480  180A  3195  2DE5         	ljmp	l4995
 10481  180C  3195  2DF2         	ljmp	l4997
 10482  180E  3195  2DFA         	ljmp	l4999
 10483  1810  3196  2E03         	ljmp	l5001
 10484  1812  3196  2E0C         	ljmp	l5003
 10485  1814  3196  2E15         	ljmp	l5005
 10486  1816  3196  2E1E         	ljmp	l5007
 10487  1818  3196  2E26         	ljmp	l5009
 10488  181A  3196  2E2F         	ljmp	l5011
 10489  181C  3196  2E38         	ljmp	l5013
 10490                           
 10491                           	psect	text26
 10492  1BFE                     __ptext26:	
 10493 ;; *************** function _crc_append *****************
 10494 ;; Defined at:
 10495 ;;		line 143 in file "src/depend/crc16.c"
 10496 ;; Parameters:    Size  Location     Type
 10497 ;;  message         2    8[BANK0 ] PTR unsigned char 
 10498 ;;		 -> modbusBuf(60), sysData(132), 
 10499 ;;  n               2   10[BANK0 ] unsigned int 
 10500 ;; Auto vars:     Size  Location     Type
 10501 ;;  crc             2   17[BANK0 ] unsigned int 
 10502 ;; Return value:  Size  Location     Type
 10503 ;;                  1    wreg      void 
 10504 ;; Registers used:
 10505 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10506 ;; Tracked objects:
 10507 ;;		On entry : 0/0
 10508 ;;		On exit  : 0/0
 10509 ;;		Unchanged: 0/0
 10510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10511 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10512 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10513 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10514 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10515 ;;Total ram usage:       11 bytes
 10516 ;; Hardware stack levels used:    1
 10517 ;; Hardware stack levels required when called:    2
 10518 ;; This function calls:
 10519 ;;		_crc_sum
 10520 ;; This function is called by:
 10521 ;;		_sys_data_save
 10522 ;;		_modbus_response_illgeal_function
 10523 ;;		_modbus_response_write_single_register
 10524 ;;		_modbus_response_write_mult_register
 10525 ;;		_modbus_response_command
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           
 10529                           
 10530                           ;psect for function _crc_append
 10531  1BFE                     _crc_append:	
 10532                           
 10533                           ;crc16.c: 145: uint16_t crc;
 10534                           ;crc16.c: 146: crc = crc_sum(message, n);
 10535                           
 10536                           ;incstack = 0
 10537                           ; Regs used in _crc_append: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10538  1BFE  0020               	movlb	0	; select bank0
 10539  1BFF  0829               	movf	crc_append@message+1,w
 10540  1C00  00F4               	movwf	crc_sum@buf+1
 10541  1C01  0828               	movf	crc_append@message,w
 10542  1C02  00F3               	movwf	crc_sum@buf
 10543  1C03  082B               	movf	crc_append@n+1,w
 10544  1C04  00F6               	movwf	crc_sum@len+1
 10545  1C05  082A               	movf	crc_append@n,w
 10546  1C06  00F5               	movwf	crc_sum@len
 10547  1C07  319E  264C         	fcall	_crc_sum
 10548  1C09  0874               	movf	?_crc_sum+1,w
 10549  1C0A  0020               	movlb	0	; select bank0
 10550  1C0B  00B2               	movwf	crc_append@crc+1
 10551  1C0C  0873               	movf	?_crc_sum,w
 10552  1C0D  00B1               	movwf	crc_append@crc
 10553                           
 10554                           ;crc16.c: 147: message[n] = (uint8_t)(crc & 0xff);
 10555  1C0E  082A               	movf	crc_append@n,w
 10556  1C0F  0728               	addwf	crc_append@message,w
 10557  1C10  00AC               	movwf	??_crc_append
 10558  1C11  082B               	movf	crc_append@n+1,w
 10559  1C12  3D29               	addwfc	crc_append@message+1,w
 10560  1C13  00AD               	movwf	??_crc_append+1
 10561  1C14  082C               	movf	??_crc_append,w
 10562  1C15  0086               	movwf	6
 10563  1C16  082D               	movf	??_crc_append+1,w
 10564  1C17  0087               	movwf	7
 10565  1C18  0831               	movf	crc_append@crc,w
 10566  1C19  0081               	movwf	1
 10567                           
 10568                           ;crc16.c: 148: message[n+1] = (uint8_t)((crc >> 8) & 0xff);
 10569  1C1A  0832               	movf	crc_append@crc+1,w
 10570  1C1B  00AC               	movwf	??_crc_append
 10571  1C1C  082A               	movf	crc_append@n,w
 10572  1C1D  3E01               	addlw	1
 10573  1C1E  00AD               	movwf	??_crc_append+1
 10574  1C1F  3000               	movlw	0
 10575  1C20  3D2B               	addwfc	crc_append@n+1,w
 10576  1C21  00AE               	movwf	??_crc_append+2
 10577  1C22  082D               	movf	??_crc_append+1,w
 10578  1C23  0728               	addwf	crc_append@message,w
 10579  1C24  00AF               	movwf	??_crc_append+3
 10580  1C25  082E               	movf	??_crc_append+2,w
 10581  1C26  3D29               	addwfc	crc_append@message+1,w
 10582  1C27  00B0               	movwf	??_crc_append+4
 10583  1C28  082F               	movf	??_crc_append+3,w
 10584  1C29  0086               	movwf	6
 10585  1C2A  0830               	movf	??_crc_append+4,w
 10586  1C2B  0087               	movwf	7
 10587  1C2C  082C               	movf	??_crc_append,w
 10588  1C2D  0081               	movwf	1
 10589  1C2E  0008               	return
 10590  1C2F                     __end_of_crc_append:	
 10591                           
 10592                           	psect	text27
 10593  1C64                     __ptext27:	
 10594 ;; *************** function _crc_verify *****************
 10595 ;; Defined at:
 10596 ;;		line 135 in file "src/depend/crc16.c"
 10597 ;; Parameters:    Size  Location     Type
 10598 ;;  message         2    8[BANK0 ] PTR unsigned char 
 10599 ;;		 -> modbusBuf(60), sysData(132), 
 10600 ;;  n               2   10[BANK0 ] unsigned int 
 10601 ;; Auto vars:     Size  Location     Type
 10602 ;;  expected        2   16[BANK0 ] unsigned int 
 10603 ;;  crccal          2   14[BANK0 ] unsigned int 
 10604 ;; Return value:  Size  Location     Type
 10605 ;;                  1    wreg      unsigned char 
 10606 ;; Registers used:
 10607 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10608 ;; Tracked objects:
 10609 ;;		On entry : 0/0
 10610 ;;		On exit  : 0/0
 10611 ;;		Unchanged: 0/0
 10612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10613 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10614 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10615 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10616 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10617 ;;Total ram usage:       10 bytes
 10618 ;; Hardware stack levels used:    1
 10619 ;; Hardware stack levels required when called:    2
 10620 ;; This function calls:
 10621 ;;		_crc_sum
 10622 ;;		_m_mem_cpy_len
 10623 ;; This function is called by:
 10624 ;;		_sys_data_init
 10625 ;;		_modbus_response_process
 10626 ;; This function uses a non-reentrant model
 10627 ;;
 10628                           
 10629                           
 10630                           ;psect for function _crc_verify
 10631  1C64                     _crc_verify:	
 10632                           
 10633                           ;crc16.c: 137: uint16_t expected,crccal;
 10634                           ;crc16.c: 138: m_mem_cpy_len((uint8_t*)(&expected),(message+n-2),2);
 10635                           
 10636                           ;incstack = 0
 10637                           ; Regs used in _crc_verify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10638  1C64  3030               	movlw	low crc_verify@expected
 10639  1C65  0020               	movlb	0	; select bank0
 10640  1C66  00A0               	movwf	m_mem_cpy_len@d
 10641  1C67  3000               	movlw	high crc_verify@expected
 10642  1C68  00A1               	movwf	m_mem_cpy_len@d+1
 10643  1C69  082A               	movf	crc_verify@n,w
 10644  1C6A  0728               	addwf	crc_verify@message,w
 10645  1C6B  00AC               	movwf	??_crc_verify
 10646  1C6C  082B               	movf	crc_verify@n+1,w
 10647  1C6D  3D29               	addwfc	crc_verify@message+1,w
 10648  1C6E  00AD               	movwf	??_crc_verify+1
 10649  1C6F  082C               	movf	??_crc_verify,w
 10650  1C70  3EFE               	addlw	254
 10651  1C71  00A2               	movwf	m_mem_cpy_len@s
 10652  1C72  30FF               	movlw	255
 10653  1C73  3D2D               	addwfc	??_crc_verify+1,w
 10654  1C74  00A3               	movwf	m_mem_cpy_len@s+1
 10655  1C75  3002               	movlw	2
 10656  1C76  00A4               	movwf	m_mem_cpy_len@len
 10657  1C77  3000               	movlw	0
 10658  1C78  00A5               	movwf	m_mem_cpy_len@len+1
 10659  1C79  319A  22D4  319C   	fcall	_m_mem_cpy_len
 10660                           
 10661                           ;crc16.c: 139: crccal=crc_sum(message,n - 2);
 10662  1C7C  0020               	movlb	0	; select bank0
 10663  1C7D  0829               	movf	crc_verify@message+1,w
 10664  1C7E  00F4               	movwf	crc_sum@buf+1
 10665  1C7F  0828               	movf	crc_verify@message,w
 10666  1C80  00F3               	movwf	crc_sum@buf
 10667  1C81  082A               	movf	crc_verify@n,w
 10668  1C82  3EFE               	addlw	254
 10669  1C83  00F5               	movwf	crc_sum@len
 10670  1C84  30FF               	movlw	255
 10671  1C85  3D2B               	addwfc	crc_verify@n+1,w
 10672  1C86  00F6               	movwf	crc_sum@len+1
 10673  1C87  319E  264C  319C   	fcall	_crc_sum
 10674  1C8A  0874               	movf	?_crc_sum+1,w
 10675  1C8B  0020               	movlb	0	; select bank0
 10676  1C8C  00AF               	movwf	crc_verify@crccal+1
 10677  1C8D  0873               	movf	?_crc_sum,w
 10678  1C8E  00AE               	movwf	crc_verify@crccal
 10679                           
 10680                           ;crc16.c: 140: if(expected!=crccal)return 0;
 10681  1C8F  082F               	movf	crc_verify@crccal+1,w
 10682  1C90  0631               	xorwf	crc_verify@expected+1,w
 10683  1C91  1D03               	skipz
 10684  1C92  2C95               	goto	u4425
 10685  1C93  082E               	movf	crc_verify@crccal,w
 10686  1C94  0630               	xorwf	crc_verify@expected,w
 10687  1C95                     u4425:	
 10688  1C95  1903               	skipnz
 10689  1C96  2C99               	goto	l5117
 10690  1C97  3000               	movlw	0
 10691  1C98  0008               	return
 10692  1C99                     l5117:	
 10693                           
 10694                           ;crc16.c: 141: return 1;
 10695  1C99  3001               	movlw	1
 10696  1C9A  0008               	return
 10697  1C9B                     __end_of_crc_verify:	
 10698                           
 10699                           	psect	text28
 10700  1AD4                     __ptext28:	
 10701 ;; *************** function _m_mem_cpy_len *****************
 10702 ;; Defined at:
 10703 ;;		line 47 in file "src/depend/m_string.c"
 10704 ;; Parameters:    Size  Location     Type
 10705 ;;  d               2    0[BANK0 ] PTR unsigned char 
 10706 ;;		 -> crc_verify@expected(2), modbusBuf(60), 
 10707 ;;  s               2    2[BANK0 ] PTR unsigned char 
 10708 ;;		 -> modbusBuf(60), sysData(132), eusartRxBuffer(60), 
 10709 ;;  len             2    4[BANK0 ] unsigned int 
 10710 ;; Auto vars:     Size  Location     Type
 10711 ;;		None
 10712 ;; Return value:  Size  Location     Type
 10713 ;;                  1    wreg      void 
 10714 ;; Registers used:
 10715 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10716 ;; Tracked objects:
 10717 ;;		On entry : 0/0
 10718 ;;		On exit  : 0/0
 10719 ;;		Unchanged: 0/0
 10720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10721 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10723 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10724 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10725 ;;Total ram usage:        7 bytes
 10726 ;; Hardware stack levels used:    1
 10727 ;; Hardware stack levels required when called:    1
 10728 ;; This function calls:
 10729 ;;		Nothing
 10730 ;; This function is called by:
 10731 ;;		_main
 10732 ;;		_crc_verify
 10733 ;; This function uses a non-reentrant model
 10734 ;;
 10735                           
 10736                           
 10737                           ;psect for function _m_mem_cpy_len
 10738  1AD4                     _m_mem_cpy_len:	
 10739  1AD4                     l5051:	
 10740                           ;m_string.c: 50: while(len)
 10741                           
 10742                           ;incstack = 0
 10743                           ; Regs used in _m_mem_cpy_len: [wreg+fsr1l+fsr1h+status,2+status,0]
 10744                           
 10745  1AD4  0020               	movlb	0	; select bank0
 10746  1AD5  0824               	movf	m_mem_cpy_len@len,w
 10747  1AD6  0425               	iorwf	m_mem_cpy_len@len+1,w
 10748  1AD7  1903               	btfsc	3,2
 10749  1AD8  0008               	return
 10750                           
 10751                           ;m_string.c: 51: {
 10752                           ;m_string.c: 52: *d++=*s++;
 10753  1AD9  0020               	movlb	0	; select bank0
 10754  1ADA  0822               	movf	m_mem_cpy_len@s,w
 10755  1ADB  0086               	movwf	6
 10756  1ADC  0823               	movf	m_mem_cpy_len@s+1,w
 10757  1ADD  0087               	movwf	7
 10758  1ADE  0801               	movf	1,w
 10759  1ADF  00F3               	movwf	??_m_mem_cpy_len
 10760  1AE0  0820               	movf	m_mem_cpy_len@d,w
 10761  1AE1  0086               	movwf	6
 10762  1AE2  0821               	movf	m_mem_cpy_len@d+1,w
 10763  1AE3  0087               	movwf	7
 10764  1AE4  0873               	movf	??_m_mem_cpy_len,w
 10765  1AE5  0081               	movwf	1
 10766  1AE6  3001               	movlw	1
 10767  1AE7  07A2               	addwf	m_mem_cpy_len@s,f
 10768  1AE8  3000               	movlw	0
 10769  1AE9  3DA3               	addwfc	m_mem_cpy_len@s+1,f
 10770  1AEA  3001               	movlw	1
 10771  1AEB  07A0               	addwf	m_mem_cpy_len@d,f
 10772  1AEC  3000               	movlw	0
 10773  1AED  3DA1               	addwfc	m_mem_cpy_len@d+1,f
 10774                           
 10775                           ;m_string.c: 53: len--;
 10776  1AEE  3001               	movlw	1
 10777  1AEF  02A4               	subwf	m_mem_cpy_len@len,f
 10778  1AF0  3000               	movlw	0
 10779  1AF1  3BA5               	subwfb	m_mem_cpy_len@len+1,f
 10780  1AF2  2AD4               	goto	l5051
 10781  1AF3                     __end_of_m_mem_cpy_len:	
 10782                           
 10783                           	psect	text29
 10784  1E4C                     __ptext29:	
 10785 ;; *************** function _crc_sum *****************
 10786 ;; Defined at:
 10787 ;;		line 116 in file "src/depend/crc16.c"
 10788 ;; Parameters:    Size  Location     Type
 10789 ;;  buf             2    3[COMMON] PTR unsigned char 
 10790 ;;		 -> modbusBuf(60), sysData(132), 
 10791 ;;  len             2    5[COMMON] unsigned int 
 10792 ;; Auto vars:     Size  Location     Type
 10793 ;;  crc             2    6[BANK0 ] unsigned int 
 10794 ;;  i               2    4[BANK0 ] unsigned int 
 10795 ;;  j               2    2[BANK0 ] unsigned int 
 10796 ;; Return value:  Size  Location     Type
 10797 ;;                  2    3[COMMON] unsigned int 
 10798 ;; Registers used:
 10799 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10800 ;; Tracked objects:
 10801 ;;		On entry : 0/0
 10802 ;;		On exit  : 0/0
 10803 ;;		Unchanged: 0/0
 10804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10805 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10806 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10807 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10808 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10809 ;;Total ram usage:       12 bytes
 10810 ;; Hardware stack levels used:    1
 10811 ;; Hardware stack levels required when called:    1
 10812 ;; This function calls:
 10813 ;;		Nothing
 10814 ;; This function is called by:
 10815 ;;		_crc_verify
 10816 ;;		_crc_append
 10817 ;; This function uses a non-reentrant model
 10818 ;;
 10819                           
 10820                           
 10821                           ;psect for function _crc_sum
 10822  1E4C                     _crc_sum:	
 10823                           
 10824                           ;crc16.c: 118: uint16_t crc=0xFFFF;
 10825                           
 10826                           ;incstack = 0
 10827                           ; Regs used in _crc_sum: [wreg+fsr1l+fsr1h+status,2+status,0]
 10828  1E4C  30FF               	movlw	255
 10829  1E4D  0020               	movlb	0	; select bank0
 10830  1E4E  00A6               	movwf	crc_sum@crc
 10831  1E4F  30FF               	movlw	255
 10832  1E50  00A7               	movwf	crc_sum@crc+1
 10833                           
 10834                           ;crc16.c: 119: uint16_t i, j;
 10835                           ;crc16.c: 120: for ( j=0; j<len;j++){
 10836  1E51  01A2               	clrf	crc_sum@j
 10837  1E52  01A3               	clrf	crc_sum@j+1
 10838  1E53                     l1127:	
 10839  1E53  0876               	movf	crc_sum@len+1,w
 10840  1E54  0223               	subwf	crc_sum@j+1,w
 10841  1E55  1D03               	skipz
 10842  1E56  2E59               	goto	u4255
 10843  1E57  0875               	movf	crc_sum@len,w
 10844  1E58  0222               	subwf	crc_sum@j,w
 10845  1E59                     u4255:	
 10846  1E59  1803               	btfsc	3,0
 10847  1E5A  2E9D               	goto	l4897
 10848                           
 10849                           ;crc16.c: 121: crc=crc ^*buf++;
 10850  1E5B  0873               	movf	crc_sum@buf,w
 10851  1E5C  0086               	movwf	6
 10852  1E5D  0874               	movf	crc_sum@buf+1,w
 10853  1E5E  0087               	movwf	7
 10854  1E5F  0826               	movf	crc_sum@crc,w
 10855  1E60  0601               	xorwf	1,w
 10856  1E61  00A6               	movwf	crc_sum@crc
 10857  1E62  0827               	movf	crc_sum@crc+1,w
 10858  1E63  00A7               	movwf	crc_sum@crc+1
 10859  1E64  3001               	movlw	1
 10860  1E65  07F3               	addwf	crc_sum@buf,f
 10861  1E66  3000               	movlw	0
 10862  1E67  3DF4               	addwfc	crc_sum@buf+1,f
 10863                           
 10864                           ;crc16.c: 122: for ( i=0; i<8; i++){
 10865  1E68  01A4               	clrf	crc_sum@i
 10866  1E69  01A5               	clrf	crc_sum@i+1
 10867  1E6A  3000               	movlw	0
 10868  1E6B  0225               	subwf	crc_sum@i+1,w
 10869  1E6C  3008               	movlw	8
 10870  1E6D  1903               	skipnz
 10871  1E6E  0224               	subwf	crc_sum@i,w
 10872  1E6F  1803               	btfsc	3,0
 10873  1E70  2E98               	goto	l4895
 10874  1E71                     l1129:	
 10875                           
 10876                           ;crc16.c: 124: if(crc&0x0001){
 10877  1E71  1C26               	btfss	crc_sum@crc,0
 10878  1E72  2E83               	goto	l4889
 10879                           
 10880                           ;crc16.c: 125: crc=crc>>1;
 10881  1E73  0827               	movf	crc_sum@crc+1,w
 10882  1E74  00A1               	movwf	??_crc_sum+1
 10883  1E75  0826               	movf	crc_sum@crc,w
 10884  1E76  00A0               	movwf	??_crc_sum
 10885  1E77  36A1               	lsrf	??_crc_sum+1,f
 10886  1E78  0CA0               	rrf	??_crc_sum,f
 10887  1E79  0820               	movf	??_crc_sum,w
 10888  1E7A  00A6               	movwf	crc_sum@crc
 10889  1E7B  0821               	movf	??_crc_sum+1,w
 10890  1E7C  00A7               	movwf	crc_sum@crc+1
 10891                           
 10892                           ;crc16.c: 126: crc=crc^ 0xa001;
 10893  1E7D  3001               	movlw	1
 10894  1E7E  0626               	xorwf	crc_sum@crc,w
 10895  1E7F  00A6               	movwf	crc_sum@crc
 10896  1E80  30A0               	movlw	160
 10897  1E81  0627               	xorwf	crc_sum@crc+1,w
 10898  1E82  2E8C               	goto	L7
 10899  1E83                     l4889:	
 10900                           ;crc16.c: 127: }else{
 10901                           
 10902                           
 10903                           ;crc16.c: 128: crc=crc>>1;
 10904  1E83  0827               	movf	crc_sum@crc+1,w
 10905  1E84  00A1               	movwf	??_crc_sum+1
 10906  1E85  0826               	movf	crc_sum@crc,w
 10907  1E86  00A0               	movwf	??_crc_sum
 10908  1E87  36A1               	lsrf	??_crc_sum+1,f
 10909  1E88  0CA0               	rrf	??_crc_sum,f
 10910  1E89  0820               	movf	??_crc_sum,w
 10911  1E8A  00A6               	movwf	crc_sum@crc
 10912  1E8B  0821               	movf	??_crc_sum+1,w
 10913  1E8C                     L7:	
 10914  1E8C  00A7               	movwf	crc_sum@crc+1
 10915  1E8D  3001               	movlw	1
 10916  1E8E  07A4               	addwf	crc_sum@i,f
 10917  1E8F  3000               	movlw	0
 10918  1E90  3DA5               	addwfc	crc_sum@i+1,f
 10919  1E91  3000               	movlw	0
 10920  1E92  0225               	subwf	crc_sum@i+1,w
 10921  1E93  3008               	movlw	8
 10922  1E94  1903               	skipnz
 10923  1E95  0224               	subwf	crc_sum@i,w
 10924  1E96  1C03               	skipc
 10925  1E97  2E71               	goto	l1129
 10926  1E98                     l4895:	
 10927  1E98  3001               	movlw	1
 10928  1E99  07A2               	addwf	crc_sum@j,f
 10929  1E9A  3000               	movlw	0
 10930  1E9B  3DA3               	addwfc	crc_sum@j+1,f
 10931  1E9C  2E53               	goto	l1127
 10932  1E9D                     l4897:	
 10933                           
 10934                           ;crc16.c: 129: }
 10935                           ;crc16.c: 130: }
 10936                           ;crc16.c: 132: }
 10937                           ;crc16.c: 133: return ( crc);
 10938  1E9D  0827               	movf	crc_sum@crc+1,w
 10939  1E9E  00F4               	movwf	?_crc_sum+1
 10940  1E9F  0826               	movf	crc_sum@crc,w
 10941  1EA0  00F3               	movwf	?_crc_sum
 10942  1EA1  0008               	return
 10943  1EA2                     __end_of_crc_sum:	
 10944                           
 10945                           	psect	text30
 10946  1AF3                     __ptext30:	
 10947 ;; *************** function _m_mem_cpy *****************
 10948 ;; Defined at:
 10949 ;;		line 39 in file "src/depend/m_string.c"
 10950 ;; Parameters:    Size  Location     Type
 10951 ;;  d               1    wreg     PTR unsigned char 
 10952 ;;		 -> str(16), 
 10953 ;;  s               2    3[COMMON] PTR unsigned char 
 10954 ;;		 -> STR_1(10), 
 10955 ;; Auto vars:     Size  Location     Type
 10956 ;;  d               1    6[COMMON] PTR unsigned char 
 10957 ;;		 -> str(16), 
 10958 ;; Return value:  Size  Location     Type
 10959 ;;                  1    wreg      void 
 10960 ;; Registers used:
 10961 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 10962 ;; Tracked objects:
 10963 ;;		On entry : 0/0
 10964 ;;		On exit  : 0/0
 10965 ;;		Unchanged: 0/0
 10966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10967 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10968 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10969 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10970 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10971 ;;Total ram usage:        4 bytes
 10972 ;; Hardware stack levels used:    1
 10973 ;; Hardware stack levels required when called:    1
 10974 ;; This function calls:
 10975 ;;		Nothing
 10976 ;; This function is called by:
 10977 ;;		_main
 10978 ;;		_m_int_2_str_ex
 10979 ;; This function uses a non-reentrant model
 10980 ;;
 10981                           
 10982                           
 10983                           ;psect for function _m_mem_cpy
 10984  1AF3                     _m_mem_cpy:	
 10985                           
 10986                           ;incstack = 0
 10987                           ; Regs used in _m_mem_cpy: [wreg-fsr1h+status,2+status,0+pclath]
 10988                           ;m_mem_cpy@d stored from wreg
 10989  1AF3  00F6               	movwf	m_mem_cpy@d
 10990  1AF4                     l4483:	
 10991                           ;m_string.c: 41: while(*s!='\0')
 10992                           
 10993  1AF4  0873               	movf	m_mem_cpy@s,w
 10994  1AF5  0084               	movwf	4
 10995  1AF6  0874               	movf	m_mem_cpy@s+1,w
 10996  1AF7  0085               	movwf	5
 10997  1AF8  0012               	moviw fsr0++
 10998  1AF9  1903               	btfsc	3,2
 10999  1AFA  2B10               	goto	l4485
 11000                           
 11001                           ;m_string.c: 42: {
 11002                           ;m_string.c: 43: *d++=*s++;
 11003  1AFB  0873               	movf	m_mem_cpy@s,w
 11004  1AFC  0084               	movwf	4
 11005  1AFD  0874               	movf	m_mem_cpy@s+1,w
 11006  1AFE  0085               	movwf	5
 11007  1AFF  0800               	movf	0,w	;code access
 11008  1B00  00F5               	movwf	??_m_mem_cpy
 11009  1B01  0876               	movf	m_mem_cpy@d,w
 11010  1B02  0086               	movwf	6
 11011  1B03  3001               	movlw	1	; select bank2/3
 11012  1B04  0087               	movwf	7
 11013  1B05  0875               	movf	??_m_mem_cpy,w
 11014  1B06  0081               	movwf	1
 11015  1B07  3001               	movlw	1
 11016  1B08  07F3               	addwf	m_mem_cpy@s,f
 11017  1B09  3000               	movlw	0
 11018  1B0A  3DF4               	addwfc	m_mem_cpy@s+1,f
 11019  1B0B  3001               	movlw	1
 11020  1B0C  00F5               	movwf	??_m_mem_cpy
 11021  1B0D  0875               	movf	??_m_mem_cpy,w
 11022  1B0E  07F6               	addwf	m_mem_cpy@d,f
 11023  1B0F  2AF4               	goto	l4483
 11024  1B10                     l4485:	
 11025                           
 11026                           ;m_string.c: 44: }
 11027                           ;m_string.c: 45: *d='\0';
 11028  1B10  0876               	movf	m_mem_cpy@d,w
 11029  1B11  0086               	movwf	6
 11030  1B12  3001               	movlw	1	; select bank2/3
 11031  1B13  0087               	movwf	7
 11032  1B14  0181               	clrf	1
 11033  1B15  0008               	return
 11034  1B16                     __end_of_m_mem_cpy:	
 11035                           
 11036                           	psect	text31
 11037  11A8                     __ptext31:	
 11038 ;; *************** function _calc_temp_rs *****************
 11039 ;; Defined at:
 11040 ;;		line 206 in file "src/api/sample.c"
 11041 ;; Parameters:    Size  Location     Type
 11042 ;;		None
 11043 ;; Auto vars:     Size  Location     Type
 11044 ;;  y               4   25[BANK0 ] unsigned long 
 11045 ;;  x               4   21[BANK0 ] unsigned long 
 11046 ;; Return value:  Size  Location     Type
 11047 ;;                  4   13[BANK0 ] unsigned long 
 11048 ;; Registers used:
 11049 ;;		wreg, status,2, status,0, pclath, cstack
 11050 ;; Tracked objects:
 11051 ;;		On entry : 0/0
 11052 ;;		On exit  : 0/0
 11053 ;;		Unchanged: 0/0
 11054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11055 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11056 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11057 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11058 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11059 ;;Total ram usage:       16 bytes
 11060 ;; Hardware stack levels used:    1
 11061 ;; Hardware stack levels required when called:    2
 11062 ;; This function calls:
 11063 ;;		___lldiv
 11064 ;;		___lmul
 11065 ;; This function is called by:
 11066 ;;		_main
 11067 ;; This function uses a non-reentrant model
 11068 ;;
 11069                           
 11070                           
 11071                           ;psect for function _calc_temp_rs
 11072  11A8                     _calc_temp_rs:	
 11073                           
 11074                           ;sample.c: 219: uint32_t x,y;
 11075                           ;sample.c: 220: y=12000UL;
 11076                           
 11077                           ;incstack = 0
 11078                           ; Regs used in _calc_temp_rs: [wreg+status,2+status,0+pclath+cstack]
 11079  11A8  3000               	movlw	0
 11080  11A9  0020               	movlb	0	; select bank0
 11081  11AA  00BC               	movwf	calc_temp_rs@y+3
 11082  11AB  3000               	movlw	0
 11083  11AC  00BB               	movwf	calc_temp_rs@y+2
 11084  11AD  302E               	movlw	46
 11085  11AE  00BA               	movwf	calc_temp_rs@y+1
 11086  11AF  30E0               	movlw	224
 11087  11B0  00B9               	movwf	calc_temp_rs@y
 11088                           
 11089                           ;sample.c: 221: y=y*rtAdcValueRsHi;
 11090  11B1  0021               	movlb	1	; select bank1
 11091  11B2  0854               	movf	_rtAdcValueRsHi^(0+128),w
 11092  11B3  0020               	movlb	0	; select bank0
 11093  11B4  00A0               	movwf	___lmul@multiplier
 11094  11B5  0021               	movlb	1	; select bank1
 11095  11B6  0855               	movf	(_rtAdcValueRsHi+1)^(0+128),w
 11096  11B7  0020               	movlb	0	; select bank0
 11097  11B8  00A1               	movwf	___lmul@multiplier+1
 11098  11B9  01A2               	clrf	___lmul@multiplier+2
 11099  11BA  01A3               	clrf	___lmul@multiplier+3
 11100  11BB  083C               	movf	calc_temp_rs@y+3,w
 11101  11BC  00A7               	movwf	___lmul@multiplicand+3
 11102  11BD  083B               	movf	calc_temp_rs@y+2,w
 11103  11BE  00A6               	movwf	___lmul@multiplicand+2
 11104  11BF  083A               	movf	calc_temp_rs@y+1,w
 11105  11C0  00A5               	movwf	___lmul@multiplicand+1
 11106  11C1  0839               	movf	calc_temp_rs@y,w
 11107  11C2  00A4               	movwf	___lmul@multiplicand
 11108  11C3  319B  23CE  3191   	fcall	___lmul
 11109  11C6  0020               	movlb	0	; select bank0
 11110  11C7  0823               	movf	?___lmul+3,w
 11111  11C8  00BC               	movwf	calc_temp_rs@y+3
 11112  11C9  0822               	movf	?___lmul+2,w
 11113  11CA  00BB               	movwf	calc_temp_rs@y+2
 11114  11CB  0821               	movf	?___lmul+1,w
 11115  11CC  00BA               	movwf	calc_temp_rs@y+1
 11116  11CD  0820               	movf	?___lmul,w
 11117  11CE  00B9               	movwf	calc_temp_rs@y
 11118                           
 11119                           ;sample.c: 222: x=rtAdcValueRsLo;
 11120  11CF  0866               	movf	_rtAdcValueRsLo,w
 11121  11D0  00B5               	movwf	calc_temp_rs@x
 11122  11D1  0867               	movf	_rtAdcValueRsLo+1,w
 11123  11D2  00B6               	movwf	calc_temp_rs@x+1
 11124  11D3  01B7               	clrf	calc_temp_rs@x+2
 11125  11D4  01B8               	clrf	calc_temp_rs@x+3
 11126                           
 11127                           ;sample.c: 223: y=y/x;
 11128  11D5  0838               	movf	calc_temp_rs@x+3,w
 11129  11D6  00A3               	movwf	___lldiv@divisor+3
 11130  11D7  0837               	movf	calc_temp_rs@x+2,w
 11131  11D8  00A2               	movwf	___lldiv@divisor+2
 11132  11D9  0836               	movf	calc_temp_rs@x+1,w
 11133  11DA  00A1               	movwf	___lldiv@divisor+1
 11134  11DB  0835               	movf	calc_temp_rs@x,w
 11135  11DC  00A0               	movwf	___lldiv@divisor
 11136  11DD  083C               	movf	calc_temp_rs@y+3,w
 11137  11DE  00A7               	movwf	___lldiv@dividend+3
 11138  11DF  083B               	movf	calc_temp_rs@y+2,w
 11139  11E0  00A6               	movwf	___lldiv@dividend+2
 11140  11E1  083A               	movf	calc_temp_rs@y+1,w
 11141  11E2  00A5               	movwf	___lldiv@dividend+1
 11142  11E3  0839               	movf	calc_temp_rs@y,w
 11143  11E4  00A4               	movwf	___lldiv@dividend
 11144  11E5  319D  25A5  3191   	fcall	___lldiv
 11145  11E8  0020               	movlb	0	; select bank0
 11146  11E9  0823               	movf	?___lldiv+3,w
 11147  11EA  00BC               	movwf	calc_temp_rs@y+3
 11148  11EB  0822               	movf	?___lldiv+2,w
 11149  11EC  00BB               	movwf	calc_temp_rs@y+2
 11150  11ED  0821               	movf	?___lldiv+1,w
 11151  11EE  00BA               	movwf	calc_temp_rs@y+1
 11152  11EF  0820               	movf	?___lldiv,w
 11153  11F0  00B9               	movwf	calc_temp_rs@y
 11154                           
 11155                           ;sample.c: 224: if(y<2000)y=2000;
 11156  11F1  083C               	movf	calc_temp_rs@y+3,w
 11157  11F2  1D03               	btfss	3,2
 11158  11F3  2A05               	goto	l5423
 11159  11F4  083B               	movf	calc_temp_rs@y+2,w
 11160  11F5  1D03               	btfss	3,2
 11161  11F6  2A05               	goto	l5423
 11162  11F7  30D0               	movlw	208
 11163  11F8  0239               	subwf	calc_temp_rs@y,w
 11164  11F9  3007               	movlw	7
 11165  11FA  3B3A               	subwfb	calc_temp_rs@y+1,w
 11166  11FB  1803               	btfsc	3,0
 11167  11FC  2A05               	goto	l5423
 11168  11FD  3000               	movlw	0
 11169  11FE  00BC               	movwf	calc_temp_rs@y+3
 11170  11FF  3000               	movlw	0
 11171  1200  00BB               	movwf	calc_temp_rs@y+2
 11172  1201  3007               	movlw	7
 11173  1202  00BA               	movwf	calc_temp_rs@y+1
 11174  1203  30D0               	movlw	208
 11175  1204  00B9               	movwf	calc_temp_rs@y
 11176  1205                     l5423:	
 11177                           
 11178                           ;sample.c: 225: if(y>25000)y=25000;
 11179  1205  083C               	movf	calc_temp_rs@y+3,w
 11180  1206  1D03               	btfss	3,2
 11181  1207  2A11               	goto	l5425
 11182  1208  083B               	movf	calc_temp_rs@y+2,w
 11183  1209  1D03               	btfss	3,2
 11184  120A  2A11               	goto	l5425
 11185  120B  30A9               	movlw	169
 11186  120C  0239               	subwf	calc_temp_rs@y,w
 11187  120D  3061               	movlw	97
 11188  120E  3B3A               	subwfb	calc_temp_rs@y+1,w
 11189  120F  1C03               	btfss	3,0
 11190  1210  2A19               	goto	l668
 11191  1211                     l5425:	
 11192  1211  3000               	movlw	0
 11193  1212  00BC               	movwf	calc_temp_rs@y+3
 11194  1213  3000               	movlw	0
 11195  1214  00BB               	movwf	calc_temp_rs@y+2
 11196  1215  3061               	movlw	97
 11197  1216  00BA               	movwf	calc_temp_rs@y+1
 11198  1217  30A8               	movlw	168
 11199  1218  00B9               	movwf	calc_temp_rs@y
 11200  1219                     l668:	
 11201                           
 11202                           ;sample.c: 226: y=y-1000;
 11203  1219  3018               	movlw	24
 11204  121A  00B1               	movwf	??_calc_temp_rs
 11205  121B  30FC               	movlw	252
 11206  121C  00B2               	movwf	??_calc_temp_rs+1
 11207  121D  30FF               	movlw	255
 11208  121E  00B3               	movwf	??_calc_temp_rs+2
 11209  121F  30FF               	movlw	255
 11210  1220  00B4               	movwf	??_calc_temp_rs+3
 11211  1221  0839               	movf	calc_temp_rs@y,w
 11212  1222  07B1               	addwf	??_calc_temp_rs,f
 11213  1223  083A               	movf	calc_temp_rs@y+1,w
 11214  1224  3DB2               	addwfc	??_calc_temp_rs+1,f
 11215  1225  083B               	movf	calc_temp_rs@y+2,w
 11216  1226  3DB3               	addwfc	??_calc_temp_rs+2,f
 11217  1227  083C               	movf	calc_temp_rs@y+3,w
 11218  1228  3DB4               	addwfc	??_calc_temp_rs+3,f
 11219  1229  0834               	movf	??_calc_temp_rs+3,w
 11220  122A  00BC               	movwf	calc_temp_rs@y+3
 11221  122B  0833               	movf	??_calc_temp_rs+2,w
 11222  122C  00BB               	movwf	calc_temp_rs@y+2
 11223  122D  0832               	movf	??_calc_temp_rs+1,w
 11224  122E  00BA               	movwf	calc_temp_rs@y+1
 11225  122F  0831               	movf	??_calc_temp_rs,w
 11226  1230  00B9               	movwf	calc_temp_rs@y
 11227                           
 11228                           ;sample.c: 228: return (uint16_t)y;
 11229  1231  0839               	movf	calc_temp_rs@y,w
 11230  1232  00AD               	movwf	?_calc_temp_rs
 11231  1233  083A               	movf	calc_temp_rs@y+1,w
 11232  1234  00AE               	movwf	?_calc_temp_rs+1
 11233  1235  01AF               	clrf	?_calc_temp_rs+2
 11234  1236  01B0               	clrf	?_calc_temp_rs+3
 11235  1237  0008               	return
 11236  1238                     __end_of_calc_temp_rs:	
 11237                           
 11238                           	psect	text32
 11239  14BF                     __ptext32:	
 11240 ;; *************** function _calc_temp_rc *****************
 11241 ;; Defined at:
 11242 ;;		line 232 in file "src/api/sample.c"
 11243 ;; Parameters:    Size  Location     Type
 11244 ;;		None
 11245 ;; Auto vars:     Size  Location     Type
 11246 ;;  y               4   29[BANK0 ] unsigned long 
 11247 ;;  x               4   25[BANK0 ] unsigned long 
 11248 ;; Return value:  Size  Location     Type
 11249 ;;                  4   13[BANK0 ] unsigned long 
 11250 ;; Registers used:
 11251 ;;		wreg, status,2, status,0, pclath, cstack
 11252 ;; Tracked objects:
 11253 ;;		On entry : 0/0
 11254 ;;		On exit  : 0/0
 11255 ;;		Unchanged: 0/0
 11256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11257 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11258 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11259 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11260 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11261 ;;Total ram usage:       20 bytes
 11262 ;; Hardware stack levels used:    1
 11263 ;; Hardware stack levels required when called:    2
 11264 ;; This function calls:
 11265 ;;		___lldiv
 11266 ;;		___lmul
 11267 ;; This function is called by:
 11268 ;;		_main
 11269 ;; This function uses a non-reentrant model
 11270 ;;
 11271                           
 11272                           
 11273                           ;psect for function _calc_temp_rc
 11274  14BF                     _calc_temp_rc:	
 11275                           
 11276                           ;sample.c: 235: uint32_t x,y;
 11277                           ;sample.c: 236: x=300000UL;
 11278                           
 11279                           ;incstack = 0
 11280                           ; Regs used in _calc_temp_rc: [wreg+status,2+status,0+pclath+cstack]
 11281  14BF  3000               	movlw	0
 11282  14C0  0020               	movlb	0	; select bank0
 11283  14C1  00BC               	movwf	calc_temp_rc@x+3
 11284  14C2  3004               	movlw	4
 11285  14C3  00BB               	movwf	calc_temp_rc@x+2
 11286  14C4  3093               	movlw	147
 11287  14C5  00BA               	movwf	calc_temp_rc@x+1
 11288  14C6  30E0               	movlw	224
 11289  14C7  00B9               	movwf	calc_temp_rc@x
 11290                           
 11291                           ;sample.c: 237: x=x*rtAdcValueRcLo;
 11292  14C8  0864               	movf	_rtAdcValueRcLo,w
 11293  14C9  00A0               	movwf	___lmul@multiplier
 11294  14CA  0865               	movf	_rtAdcValueRcLo+1,w
 11295  14CB  00A1               	movwf	___lmul@multiplier+1
 11296  14CC  01A2               	clrf	___lmul@multiplier+2
 11297  14CD  01A3               	clrf	___lmul@multiplier+3
 11298  14CE  083C               	movf	calc_temp_rc@x+3,w
 11299  14CF  00A7               	movwf	___lmul@multiplicand+3
 11300  14D0  083B               	movf	calc_temp_rc@x+2,w
 11301  14D1  00A6               	movwf	___lmul@multiplicand+2
 11302  14D2  083A               	movf	calc_temp_rc@x+1,w
 11303  14D3  00A5               	movwf	___lmul@multiplicand+1
 11304  14D4  0839               	movf	calc_temp_rc@x,w
 11305  14D5  00A4               	movwf	___lmul@multiplicand
 11306  14D6  319B  23CE  3194   	fcall	___lmul
 11307  14D9  0020               	movlb	0	; select bank0
 11308  14DA  0823               	movf	?___lmul+3,w
 11309  14DB  00BC               	movwf	calc_temp_rc@x+3
 11310  14DC  0822               	movf	?___lmul+2,w
 11311  14DD  00BB               	movwf	calc_temp_rc@x+2
 11312  14DE  0821               	movf	?___lmul+1,w
 11313  14DF  00BA               	movwf	calc_temp_rc@x+1
 11314  14E0  0820               	movf	?___lmul,w
 11315  14E1  00B9               	movwf	calc_temp_rc@x
 11316                           
 11317                           ;sample.c: 240: y=rtAdcValueRcHi;
 11318  14E2  0021               	movlb	1	; select bank1
 11319  14E3  0852               	movf	_rtAdcValueRcHi^(0+128),w
 11320  14E4  0020               	movlb	0	; select bank0
 11321  14E5  00BD               	movwf	calc_temp_rc@y
 11322  14E6  0021               	movlb	1	; select bank1
 11323  14E7  0853               	movf	(_rtAdcValueRcHi+1)^(0+128),w
 11324  14E8  0020               	movlb	0	; select bank0
 11325  14E9  00BE               	movwf	calc_temp_rc@y+1
 11326  14EA  01BF               	clrf	calc_temp_rc@y+2
 11327  14EB  01C0               	clrf	calc_temp_rc@y+3
 11328                           
 11329                           ;sample.c: 241: y=y*3100;
 11330  14EC  0840               	movf	calc_temp_rc@y+3,w
 11331  14ED  00A3               	movwf	___lmul@multiplier+3
 11332  14EE  083F               	movf	calc_temp_rc@y+2,w
 11333  14EF  00A2               	movwf	___lmul@multiplier+2
 11334  14F0  083E               	movf	calc_temp_rc@y+1,w
 11335  14F1  00A1               	movwf	___lmul@multiplier+1
 11336  14F2  083D               	movf	calc_temp_rc@y,w
 11337  14F3  00A0               	movwf	___lmul@multiplier
 11338  14F4  3000               	movlw	0
 11339  14F5  00A7               	movwf	___lmul@multiplicand+3
 11340  14F6  3000               	movlw	0
 11341  14F7  00A6               	movwf	___lmul@multiplicand+2
 11342  14F8  300C               	movlw	12
 11343  14F9  00A5               	movwf	___lmul@multiplicand+1
 11344  14FA  301C               	movlw	28
 11345  14FB  00A4               	movwf	___lmul@multiplicand
 11346  14FC  319B  23CE  3194   	fcall	___lmul
 11347  14FF  0020               	movlb	0	; select bank0
 11348  1500  0823               	movf	?___lmul+3,w
 11349  1501  00C0               	movwf	calc_temp_rc@y+3
 11350  1502  0822               	movf	?___lmul+2,w
 11351  1503  00BF               	movwf	calc_temp_rc@y+2
 11352  1504  0821               	movf	?___lmul+1,w
 11353  1505  00BE               	movwf	calc_temp_rc@y+1
 11354  1506  0820               	movf	?___lmul,w
 11355  1507  00BD               	movwf	calc_temp_rc@y
 11356                           
 11357                           ;sample.c: 242: y=y/100;
 11358  1508  3000               	movlw	0
 11359  1509  00A3               	movwf	___lldiv@divisor+3
 11360  150A  3000               	movlw	0
 11361  150B  00A2               	movwf	___lldiv@divisor+2
 11362  150C  3000               	movlw	0
 11363  150D  00A1               	movwf	___lldiv@divisor+1
 11364  150E  3064               	movlw	100
 11365  150F  00A0               	movwf	___lldiv@divisor
 11366  1510  0840               	movf	calc_temp_rc@y+3,w
 11367  1511  00A7               	movwf	___lldiv@dividend+3
 11368  1512  083F               	movf	calc_temp_rc@y+2,w
 11369  1513  00A6               	movwf	___lldiv@dividend+2
 11370  1514  083E               	movf	calc_temp_rc@y+1,w
 11371  1515  00A5               	movwf	___lldiv@dividend+1
 11372  1516  083D               	movf	calc_temp_rc@y,w
 11373  1517  00A4               	movwf	___lldiv@dividend
 11374  1518  319D  25A5  3194   	fcall	___lldiv
 11375  151B  0020               	movlb	0	; select bank0
 11376  151C  0823               	movf	?___lldiv+3,w
 11377  151D  00C0               	movwf	calc_temp_rc@y+3
 11378  151E  0822               	movf	?___lldiv+2,w
 11379  151F  00BF               	movwf	calc_temp_rc@y+2
 11380  1520  0821               	movf	?___lldiv+1,w
 11381  1521  00BE               	movwf	calc_temp_rc@y+1
 11382  1522  0820               	movf	?___lldiv,w
 11383  1523  00BD               	movwf	calc_temp_rc@y
 11384                           
 11385                           ;sample.c: 243: y=y-rtAdcValueRcLo;
 11386  1524  083D               	movf	calc_temp_rc@y,w
 11387  1525  00B1               	movwf	??_calc_temp_rc
 11388  1526  083E               	movf	calc_temp_rc@y+1,w
 11389  1527  00B2               	movwf	??_calc_temp_rc+1
 11390  1528  083F               	movf	calc_temp_rc@y+2,w
 11391  1529  00B3               	movwf	??_calc_temp_rc+2
 11392  152A  0840               	movf	calc_temp_rc@y+3,w
 11393  152B  00B4               	movwf	??_calc_temp_rc+3
 11394  152C  0864               	movf	_rtAdcValueRcLo,w
 11395  152D  00B5               	movwf	??_calc_temp_rc+4
 11396  152E  0865               	movf	_rtAdcValueRcLo+1,w
 11397  152F  00B6               	movwf	??_calc_temp_rc+5
 11398  1530  01B7               	clrf	??_calc_temp_rc+6
 11399  1531  01B8               	clrf	??_calc_temp_rc+7
 11400  1532  09B5               	comf	??_calc_temp_rc+4,f
 11401  1533  09B6               	comf	??_calc_temp_rc+5,f
 11402  1534  09B7               	comf	??_calc_temp_rc+6,f
 11403  1535  09B8               	comf	??_calc_temp_rc+7,f
 11404  1536  0AB5               	incf	??_calc_temp_rc+4,f
 11405  1537  1903               	skipnz
 11406  1538  0AB6               	incf	??_calc_temp_rc+5,f
 11407  1539  1903               	skipnz
 11408  153A  0AB7               	incf	??_calc_temp_rc+6,f
 11409  153B  1903               	skipnz
 11410  153C  0AB8               	incf	??_calc_temp_rc+7,f
 11411  153D  0835               	movf	??_calc_temp_rc+4,w
 11412  153E  07B1               	addwf	??_calc_temp_rc,f
 11413  153F  0836               	movf	??_calc_temp_rc+5,w
 11414  1540  3DB2               	addwfc	??_calc_temp_rc+1,f
 11415  1541  0837               	movf	??_calc_temp_rc+6,w
 11416  1542  3DB3               	addwfc	??_calc_temp_rc+2,f
 11417  1543  0838               	movf	??_calc_temp_rc+7,w
 11418  1544  3DB4               	addwfc	??_calc_temp_rc+3,f
 11419  1545  0834               	movf	??_calc_temp_rc+3,w
 11420  1546  00C0               	movwf	calc_temp_rc@y+3
 11421  1547  0833               	movf	??_calc_temp_rc+2,w
 11422  1548  00BF               	movwf	calc_temp_rc@y+2
 11423  1549  0832               	movf	??_calc_temp_rc+1,w
 11424  154A  00BE               	movwf	calc_temp_rc@y+1
 11425  154B  0831               	movf	??_calc_temp_rc,w
 11426  154C  00BD               	movwf	calc_temp_rc@y
 11427                           
 11428                           ;sample.c: 246: y=x/y;
 11429  154D  0840               	movf	calc_temp_rc@y+3,w
 11430  154E  00A3               	movwf	___lldiv@divisor+3
 11431  154F  083F               	movf	calc_temp_rc@y+2,w
 11432  1550  00A2               	movwf	___lldiv@divisor+2
 11433  1551  083E               	movf	calc_temp_rc@y+1,w
 11434  1552  00A1               	movwf	___lldiv@divisor+1
 11435  1553  083D               	movf	calc_temp_rc@y,w
 11436  1554  00A0               	movwf	___lldiv@divisor
 11437  1555  083C               	movf	calc_temp_rc@x+3,w
 11438  1556  00A7               	movwf	___lldiv@dividend+3
 11439  1557  083B               	movf	calc_temp_rc@x+2,w
 11440  1558  00A6               	movwf	___lldiv@dividend+2
 11441  1559  083A               	movf	calc_temp_rc@x+1,w
 11442  155A  00A5               	movwf	___lldiv@dividend+1
 11443  155B  0839               	movf	calc_temp_rc@x,w
 11444  155C  00A4               	movwf	___lldiv@dividend
 11445  155D  319D  25A5  3194   	fcall	___lldiv
 11446  1560  0020               	movlb	0	; select bank0
 11447  1561  0823               	movf	?___lldiv+3,w
 11448  1562  00C0               	movwf	calc_temp_rc@y+3
 11449  1563  0822               	movf	?___lldiv+2,w
 11450  1564  00BF               	movwf	calc_temp_rc@y+2
 11451  1565  0821               	movf	?___lldiv+1,w
 11452  1566  00BE               	movwf	calc_temp_rc@y+1
 11453  1567  0820               	movf	?___lldiv,w
 11454  1568  00BD               	movwf	calc_temp_rc@y
 11455                           
 11456                           ;sample.c: 247: if(y<2000)y=2000;
 11457  1569  0840               	movf	calc_temp_rc@y+3,w
 11458  156A  1D03               	btfss	3,2
 11459  156B  2D7D               	goto	l5441
 11460  156C  083F               	movf	calc_temp_rc@y+2,w
 11461  156D  1D03               	btfss	3,2
 11462  156E  2D7D               	goto	l5441
 11463  156F  30D0               	movlw	208
 11464  1570  023D               	subwf	calc_temp_rc@y,w
 11465  1571  3007               	movlw	7
 11466  1572  3B3E               	subwfb	calc_temp_rc@y+1,w
 11467  1573  1803               	btfsc	3,0
 11468  1574  2D7D               	goto	l5441
 11469  1575  3000               	movlw	0
 11470  1576  00C0               	movwf	calc_temp_rc@y+3
 11471  1577  3000               	movlw	0
 11472  1578  00BF               	movwf	calc_temp_rc@y+2
 11473  1579  3007               	movlw	7
 11474  157A  00BE               	movwf	calc_temp_rc@y+1
 11475  157B  30D0               	movlw	208
 11476  157C  00BD               	movwf	calc_temp_rc@y
 11477  157D                     l5441:	
 11478                           
 11479                           ;sample.c: 248: if(y>25000)y=25000;
 11480  157D  0840               	movf	calc_temp_rc@y+3,w
 11481  157E  1D03               	btfss	3,2
 11482  157F  2D89               	goto	l5443
 11483  1580  083F               	movf	calc_temp_rc@y+2,w
 11484  1581  1D03               	btfss	3,2
 11485  1582  2D89               	goto	l5443
 11486  1583  30A9               	movlw	169
 11487  1584  023D               	subwf	calc_temp_rc@y,w
 11488  1585  3061               	movlw	97
 11489  1586  3B3E               	subwfb	calc_temp_rc@y+1,w
 11490  1587  1C03               	btfss	3,0
 11491  1588  2D91               	goto	l673
 11492  1589                     l5443:	
 11493  1589  3000               	movlw	0
 11494  158A  00C0               	movwf	calc_temp_rc@y+3
 11495  158B  3000               	movlw	0
 11496  158C  00BF               	movwf	calc_temp_rc@y+2
 11497  158D  3061               	movlw	97
 11498  158E  00BE               	movwf	calc_temp_rc@y+1
 11499  158F  30A8               	movlw	168
 11500  1590  00BD               	movwf	calc_temp_rc@y
 11501  1591                     l673:	
 11502                           
 11503                           ;sample.c: 250: return (uint16_t)y;
 11504  1591  083D               	movf	calc_temp_rc@y,w
 11505  1592  00AD               	movwf	?_calc_temp_rc
 11506  1593  083E               	movf	calc_temp_rc@y+1,w
 11507  1594  00AE               	movwf	?_calc_temp_rc+1
 11508  1595  01AF               	clrf	?_calc_temp_rc+2
 11509  1596  01B0               	clrf	?_calc_temp_rc+3
 11510  1597  0008               	return
 11511  1598                     __end_of_calc_temp_rc:	
 11512                           
 11513                           	psect	text33
 11514  103E                     __ptext33:	
 11515 ;; *************** function _calc_rs_lo_avg *****************
 11516 ;; Defined at:
 11517 ;;		line 423 in file "src/api/sample.c"
 11518 ;; Parameters:    Size  Location     Type
 11519 ;;  x               2   13[BANK0 ] unsigned int 
 11520 ;; Auto vars:     Size  Location     Type
 11521 ;;  t32             4   15[BANK0 ] unsigned long 
 11522 ;;  i               1   19[BANK0 ] unsigned char 
 11523 ;; Return value:  Size  Location     Type
 11524 ;;                  2   13[BANK0 ] unsigned int 
 11525 ;; Registers used:
 11526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11527 ;; Tracked objects:
 11528 ;;		On entry : 0/0
 11529 ;;		On exit  : 0/0
 11530 ;;		Unchanged: 0/0
 11531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11532 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11533 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11534 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11535 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11536 ;;Total ram usage:        9 bytes
 11537 ;; Hardware stack levels used:    1
 11538 ;; Hardware stack levels required when called:    2
 11539 ;; This function calls:
 11540 ;;		___lldiv
 11541 ;; This function is called by:
 11542 ;;		_main
 11543 ;; This function uses a non-reentrant model
 11544 ;;
 11545                           
 11546                           
 11547                           ;psect for function _calc_rs_lo_avg
 11548  103E                     _calc_rs_lo_avg:	
 11549                           
 11550                           ;sample.c: 425: uint8_t i;
 11551                           ;sample.c: 426: uint32_t t32=0;
 11552                           
 11553                           ;incstack = 0
 11554                           ; Regs used in _calc_rs_lo_avg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11555  103E  3000               	movlw	0
 11556  103F  0020               	movlb	0	; select bank0
 11557  1040  00B2               	movwf	calc_rs_lo_avg@t32+3
 11558  1041  3000               	movlw	0
 11559  1042  00B1               	movwf	calc_rs_lo_avg@t32+2
 11560  1043  3000               	movlw	0
 11561  1044  00B0               	movwf	calc_rs_lo_avg@t32+1
 11562  1045  3000               	movlw	0
 11563  1046  00AF               	movwf	calc_rs_lo_avg@t32
 11564                           
 11565                           ;sample.c: 428: for(i=0;i<6-1;i++){
 11566  1047  01B3               	clrf	calc_rs_lo_avg@i
 11567  1048  3005               	movlw	5
 11568  1049  0233               	subwf	calc_rs_lo_avg@i,w
 11569  104A  1803               	btfsc	3,0
 11570  104B  2870               	goto	l5583
 11571  104C                     l5575:	
 11572                           
 11573                           ;sample.c: 429: rsLoAvgBuf[i]=rsLoAvgBuf[i+1];
 11574  104C  3533               	lslf	calc_rs_lo_avg@i,w
 11575  104D  3E02               	addlw	2
 11576  104E  3EAC               	addlw	(low (_rsLoAvgBuf| 0))& (0+255)
 11577  104F  0086               	movwf	6
 11578  1050  0187               	clrf	7
 11579  1051  3533               	lslf	calc_rs_lo_avg@i,w
 11580  1052  3EAC               	addlw	(low (_rsLoAvgBuf| 0))& (0+255)
 11581  1053  0084               	movwf	4
 11582  1054  0185               	clrf	5
 11583  1055  3F40               	moviw [0]fsr1
 11584  1056  3F80               	movwi [0]fsr0
 11585  1057  3F41               	moviw [1]fsr1
 11586  1058  3F81               	movwi [1]fsr0
 11587                           
 11588                           ;sample.c: 430: t32+=((uint32_t)rsLoAvgBuf[i]);
 11589  1059  3533               	lslf	calc_rs_lo_avg@i,w
 11590  105A  3EAC               	addlw	(low (_rsLoAvgBuf| 0))& (0+255)
 11591  105B  0086               	movwf	6
 11592  105C  0187               	clrf	7
 11593  105D  3F40               	moviw [0]fsr1
 11594  105E  00F4               	movwf	??_calc_rs_lo_avg
 11595  105F  3F41               	moviw [1]fsr1
 11596  1060  00F5               	movwf	??_calc_rs_lo_avg+1
 11597  1061  0874               	movf	??_calc_rs_lo_avg,w
 11598  1062  07AF               	addwf	calc_rs_lo_avg@t32,f
 11599  1063  0875               	movf	??_calc_rs_lo_avg+1,w
 11600  1064  3DB0               	addwfc	calc_rs_lo_avg@t32+1,f
 11601  1065  3000               	movlw	0
 11602  1066  3DB1               	addwfc	calc_rs_lo_avg@t32+2,f
 11603  1067  3DB2               	addwfc	calc_rs_lo_avg@t32+3,f
 11604  1068  3001               	movlw	1
 11605  1069  00F4               	movwf	??_calc_rs_lo_avg
 11606  106A  0874               	movf	??_calc_rs_lo_avg,w
 11607  106B  07B3               	addwf	calc_rs_lo_avg@i,f
 11608  106C  3005               	movlw	5
 11609  106D  0233               	subwf	calc_rs_lo_avg@i,w
 11610  106E  1C03               	skipc
 11611  106F  284C               	goto	l5575
 11612  1070                     l5583:	
 11613                           
 11614                           ;sample.c: 431: }
 11615                           ;sample.c: 432: rsLoAvgBuf[i]=x;
 11616  1070  3533               	lslf	calc_rs_lo_avg@i,w
 11617  1071  3EAC               	addlw	(low (_rsLoAvgBuf| 0))& (0+255)
 11618  1072  0086               	movwf	6
 11619  1073  0187               	clrf	7
 11620  1074  082D               	movf	calc_rs_lo_avg@x,w
 11621  1075  3FC0               	movwi [0]fsr1
 11622  1076  082E               	movf	calc_rs_lo_avg@x+1,w
 11623  1077  3FC1               	movwi [1]fsr1
 11624                           
 11625                           ;sample.c: 433: t32+=x;
 11626  1078  082D               	movf	calc_rs_lo_avg@x,w
 11627  1079  07AF               	addwf	calc_rs_lo_avg@t32,f
 11628  107A  082E               	movf	calc_rs_lo_avg@x+1,w
 11629  107B  3DB0               	addwfc	calc_rs_lo_avg@t32+1,f
 11630  107C  3000               	movlw	0
 11631  107D  3DB1               	addwfc	calc_rs_lo_avg@t32+2,f
 11632  107E  3DB2               	addwfc	calc_rs_lo_avg@t32+3,f
 11633                           
 11634                           ;sample.c: 434: t32/=6;
 11635  107F  3000               	movlw	0
 11636  1080  00A3               	movwf	___lldiv@divisor+3
 11637  1081  3000               	movlw	0
 11638  1082  00A2               	movwf	___lldiv@divisor+2
 11639  1083  3000               	movlw	0
 11640  1084  00A1               	movwf	___lldiv@divisor+1
 11641  1085  3006               	movlw	6
 11642  1086  00A0               	movwf	___lldiv@divisor
 11643  1087  0832               	movf	calc_rs_lo_avg@t32+3,w
 11644  1088  00A7               	movwf	___lldiv@dividend+3
 11645  1089  0831               	movf	calc_rs_lo_avg@t32+2,w
 11646  108A  00A6               	movwf	___lldiv@dividend+2
 11647  108B  0830               	movf	calc_rs_lo_avg@t32+1,w
 11648  108C  00A5               	movwf	___lldiv@dividend+1
 11649  108D  082F               	movf	calc_rs_lo_avg@t32,w
 11650  108E  00A4               	movwf	___lldiv@dividend
 11651  108F  319D  25A5         	fcall	___lldiv
 11652  1091  0020               	movlb	0	; select bank0
 11653  1092  0823               	movf	?___lldiv+3,w
 11654  1093  00B2               	movwf	calc_rs_lo_avg@t32+3
 11655  1094  0822               	movf	?___lldiv+2,w
 11656  1095  00B1               	movwf	calc_rs_lo_avg@t32+2
 11657  1096  0821               	movf	?___lldiv+1,w
 11658  1097  00B0               	movwf	calc_rs_lo_avg@t32+1
 11659  1098  0820               	movf	?___lldiv,w
 11660  1099  00AF               	movwf	calc_rs_lo_avg@t32
 11661                           
 11662                           ;sample.c: 435: return (uint16_t)t32;
 11663  109A  0830               	movf	calc_rs_lo_avg@t32+1,w
 11664  109B  00AE               	movwf	?_calc_rs_lo_avg+1
 11665  109C  082F               	movf	calc_rs_lo_avg@t32,w
 11666  109D  00AD               	movwf	?_calc_rs_lo_avg
 11667  109E  0008               	return
 11668  109F                     __end_of_calc_rs_lo_avg:	
 11669                           
 11670                           	psect	text34
 11671  1DA5                     __ptext34:	
 11672 ;; *************** function ___lldiv *****************
 11673 ;; Defined at:
 11674 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lldiv.c"
 11675 ;; Parameters:    Size  Location     Type
 11676 ;;  divisor         4    0[BANK0 ] unsigned long 
 11677 ;;  dividend        4    4[BANK0 ] unsigned long 
 11678 ;; Auto vars:     Size  Location     Type
 11679 ;;  quotient        4    8[BANK0 ] unsigned long 
 11680 ;;  counter         1   12[BANK0 ] unsigned char 
 11681 ;; Return value:  Size  Location     Type
 11682 ;;                  4    0[BANK0 ] unsigned long 
 11683 ;; Registers used:
 11684 ;;		wreg, status,2, status,0
 11685 ;; Tracked objects:
 11686 ;;		On entry : 0/0
 11687 ;;		On exit  : 0/0
 11688 ;;		Unchanged: 0/0
 11689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11690 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11691 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11692 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11693 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11694 ;;Total ram usage:       14 bytes
 11695 ;; Hardware stack levels used:    1
 11696 ;; Hardware stack levels required when called:    1
 11697 ;; This function calls:
 11698 ;;		Nothing
 11699 ;; This function is called by:
 11700 ;;		_calc_temp_rs
 11701 ;;		_calc_temp_rc
 11702 ;;		_calc_rs_lo_avg
 11703 ;; This function uses a non-reentrant model
 11704 ;;
 11705                           
 11706                           
 11707                           ;psect for function ___lldiv
 11708  1DA5                     ___lldiv:	
 11709                           
 11710                           ;incstack = 0
 11711                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 11712  1DA5  3000               	movlw	0
 11713  1DA6  0020               	movlb	0	; select bank0
 11714  1DA7  00AB               	movwf	___lldiv@quotient+3
 11715  1DA8  3000               	movlw	0
 11716  1DA9  00AA               	movwf	___lldiv@quotient+2
 11717  1DAA  3000               	movlw	0
 11718  1DAB  00A9               	movwf	___lldiv@quotient+1
 11719  1DAC  3000               	movlw	0
 11720  1DAD  00A8               	movwf	___lldiv@quotient
 11721  1DAE  0823               	movf	___lldiv@divisor+3,w
 11722  1DAF  0422               	iorwf	___lldiv@divisor+2,w
 11723  1DB0  0421               	iorwf	___lldiv@divisor+1,w
 11724  1DB1  0420               	iorwf	___lldiv@divisor,w
 11725  1DB2  1903               	skipnz
 11726  1DB3  2DEF               	goto	l5379
 11727  1DB4  01AC               	clrf	___lldiv@counter
 11728  1DB5  0AAC               	incf	___lldiv@counter,f
 11729  1DB6                     l5365:	
 11730  1DB6  1BA3               	btfsc	___lldiv@divisor+3,7
 11731  1DB7  2DC4               	goto	l5367
 11732  1DB8  3001               	movlw	1
 11733  1DB9                     u4895:	
 11734  1DB9  35A0               	lslf	___lldiv@divisor,f
 11735  1DBA  0DA1               	rlf	___lldiv@divisor+1,f
 11736  1DBB  0DA2               	rlf	___lldiv@divisor+2,f
 11737  1DBC  0DA3               	rlf	___lldiv@divisor+3,f
 11738  1DBD  0B89               	decfsz	9,f
 11739  1DBE  2DB9               	goto	u4895
 11740  1DBF  3001               	movlw	1
 11741  1DC0  00F3               	movwf	??___lldiv
 11742  1DC1  0873               	movf	??___lldiv,w
 11743  1DC2  07AC               	addwf	___lldiv@counter,f
 11744  1DC3  2DB6               	goto	l5365
 11745  1DC4                     l5367:	
 11746  1DC4  3001               	movlw	1
 11747  1DC5                     u4915:	
 11748  1DC5  35A8               	lslf	___lldiv@quotient,f
 11749  1DC6  0DA9               	rlf	___lldiv@quotient+1,f
 11750  1DC7  0DAA               	rlf	___lldiv@quotient+2,f
 11751  1DC8  0DAB               	rlf	___lldiv@quotient+3,f
 11752  1DC9  0B89               	decfsz	9,f
 11753  1DCA  2DC5               	goto	u4915
 11754  1DCB  0823               	movf	___lldiv@divisor+3,w
 11755  1DCC  0227               	subwf	___lldiv@dividend+3,w
 11756  1DCD  1D03               	skipz
 11757  1DCE  2DD9               	goto	u4925
 11758  1DCF  0822               	movf	___lldiv@divisor+2,w
 11759  1DD0  0226               	subwf	___lldiv@dividend+2,w
 11760  1DD1  1D03               	skipz
 11761  1DD2  2DD9               	goto	u4925
 11762  1DD3  0821               	movf	___lldiv@divisor+1,w
 11763  1DD4  0225               	subwf	___lldiv@dividend+1,w
 11764  1DD5  1D03               	skipz
 11765  1DD6  2DD9               	goto	u4925
 11766  1DD7  0820               	movf	___lldiv@divisor,w
 11767  1DD8  0224               	subwf	___lldiv@dividend,w
 11768  1DD9                     u4925:	
 11769  1DD9  1C03               	skipc
 11770  1DDA  2DE4               	goto	l5375
 11771  1DDB  0820               	movf	___lldiv@divisor,w
 11772  1DDC  02A4               	subwf	___lldiv@dividend,f
 11773  1DDD  0821               	movf	___lldiv@divisor+1,w
 11774  1DDE  3BA5               	subwfb	___lldiv@dividend+1,f
 11775  1DDF  0822               	movf	___lldiv@divisor+2,w
 11776  1DE0  3BA6               	subwfb	___lldiv@dividend+2,f
 11777  1DE1  0823               	movf	___lldiv@divisor+3,w
 11778  1DE2  3BA7               	subwfb	___lldiv@dividend+3,f
 11779  1DE3  1428               	bsf	___lldiv@quotient,0
 11780  1DE4                     l5375:	
 11781  1DE4  3001               	movlw	1
 11782  1DE5                     u4935:	
 11783  1DE5  36A3               	lsrf	___lldiv@divisor+3,f
 11784  1DE6  0CA2               	rrf	___lldiv@divisor+2,f
 11785  1DE7  0CA1               	rrf	___lldiv@divisor+1,f
 11786  1DE8  0CA0               	rrf	___lldiv@divisor,f
 11787  1DE9  0B89               	decfsz	9,f
 11788  1DEA  2DE5               	goto	u4935
 11789  1DEB  3001               	movlw	1
 11790  1DEC  02AC               	subwf	___lldiv@counter,f
 11791  1DED  1D03               	btfss	3,2
 11792  1DEE  2DC4               	goto	l5367
 11793  1DEF                     l5379:	
 11794  1DEF  082B               	movf	___lldiv@quotient+3,w
 11795  1DF0  00A3               	movwf	?___lldiv+3
 11796  1DF1  082A               	movf	___lldiv@quotient+2,w
 11797  1DF2  00A2               	movwf	?___lldiv+2
 11798  1DF3  0829               	movf	___lldiv@quotient+1,w
 11799  1DF4  00A1               	movwf	?___lldiv+1
 11800  1DF5  0828               	movf	___lldiv@quotient,w
 11801  1DF6  00A0               	movwf	?___lldiv
 11802  1DF7  0008               	return
 11803  1DF8                     __end_of___lldiv:	
 11804                           
 11805                           	psect	text35
 11806  0B24                     __ptext35:	
 11807 ;; *************** function _calc_expect_vout_adc_value *****************
 11808 ;; Defined at:
 11809 ;;		line 438 in file "src/api/sample.c"
 11810 ;; Parameters:    Size  Location     Type
 11811 ;;  x               2   22[BANK0 ] unsigned int 
 11812 ;; Auto vars:     Size  Location     Type
 11813 ;;  t32             4   54[BANK0 ] long 
 11814 ;;  x0              4   50[BANK0 ] long 
 11815 ;;  y0              4   46[BANK0 ] long 
 11816 ;;  x1              4   42[BANK0 ] long 
 11817 ;;  y1              4   38[BANK0 ] long 
 11818 ;;  i               2   58[BANK0 ] unsigned int 
 11819 ;; Return value:  Size  Location     Type
 11820 ;;                  2   22[BANK0 ] unsigned int 
 11821 ;; Registers used:
 11822 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11823 ;; Tracked objects:
 11824 ;;		On entry : 0/0
 11825 ;;		On exit  : 0/0
 11826 ;;		Unchanged: 0/0
 11827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11828 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11829 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11830 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11831 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11832 ;;Total ram usage:       38 bytes
 11833 ;; Hardware stack levels used:    1
 11834 ;; Hardware stack levels required when called:    2
 11835 ;; This function calls:
 11836 ;;		___aldiv
 11837 ;;		___lmul
 11838 ;; This function is called by:
 11839 ;;		_main
 11840 ;; This function uses a non-reentrant model
 11841 ;;
 11842                           
 11843                           
 11844                           ;psect for function _calc_expect_vout_adc_value
 11845  0B24                     _calc_expect_vout_adc_value:	
 11846                           
 11847                           ;sample.c: 441: uint16_t i;
 11848                           ;sample.c: 442: int32_t y0;
 11849                           ;sample.c: 443: int32_t y1;
 11850                           ;sample.c: 444: int32_t x0;
 11851                           ;sample.c: 445: int32_t x1;
 11852                           ;sample.c: 446: int32_t t32;
 11853                           ;sample.c: 449: for (i = 0; i < 30-1; i++) {
 11854                           
 11855                           ;incstack = 0
 11856                           ; Regs used in _calc_expect_vout_adc_value: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 11857  0B24  0020               	movlb	0	; select bank0
 11858  0B25  01DA               	clrf	calc_expect_vout_adc_value@i
 11859  0B26  01DB               	clrf	calc_expect_vout_adc_value@i+1
 11860  0B27  3000               	movlw	0
 11861  0B28  025B               	subwf	calc_expect_vout_adc_value@i+1,w
 11862  0B29  301D               	movlw	29
 11863  0B2A  1903               	skipnz
 11864  0B2B  025A               	subwf	calc_expect_vout_adc_value@i,w
 11865  0B2C  1803               	btfsc	3,0
 11866  0B2D  2B91               	goto	l5607
 11867  0B2E                     l5599:	
 11868                           
 11869                           ;sample.c: 450: if(sysData.calibRsAdc[i]<sysData.calibRsAdc[i+1]){
 11870  0B2E  085B               	movf	calc_expect_vout_adc_value@i+1,w
 11871  0B2F  00B9               	movwf	??_calc_expect_vout_adc_value+1
 11872  0B30  085A               	movf	calc_expect_vout_adc_value@i,w
 11873  0B31  00B8               	movwf	??_calc_expect_vout_adc_value
 11874  0B32  35B8               	lslf	??_calc_expect_vout_adc_value,f
 11875  0B33  0DB9               	rlf	??_calc_expect_vout_adc_value+1,f
 11876  0B34  0838               	movf	??_calc_expect_vout_adc_value,w
 11877  0B35  3E02               	addlw	2
 11878  0B36  00BA               	movwf	??_calc_expect_vout_adc_value+2
 11879  0B37  3000               	movlw	0
 11880  0B38  3D39               	addwfc	??_calc_expect_vout_adc_value+1,w
 11881  0B39  00BB               	movwf	??_calc_expect_vout_adc_value+3
 11882  0B3A  3066               	movlw	102
 11883  0B3B  00BC               	movwf	??_calc_expect_vout_adc_value+4
 11884  0B3C  3023               	movlw	35
 11885  0B3D  00BD               	movwf	??_calc_expect_vout_adc_value+5
 11886  0B3E  083A               	movf	??_calc_expect_vout_adc_value+2,w
 11887  0B3F  073C               	addwf	??_calc_expect_vout_adc_value+4,w
 11888  0B40  0086               	movwf	6
 11889  0B41  083B               	movf	??_calc_expect_vout_adc_value+3,w
 11890  0B42  3D3D               	addwfc	??_calc_expect_vout_adc_value+5,w
 11891  0B43  0087               	movwf	7
 11892  0B44  3F40               	moviw [0]fsr1
 11893  0B45  00BE               	movwf	??_calc_expect_vout_adc_value+6
 11894  0B46  3F41               	moviw [1]fsr1
 11895  0B47  00BF               	movwf	??_calc_expect_vout_adc_value+7
 11896  0B48  085B               	movf	calc_expect_vout_adc_value@i+1,w
 11897  0B49  00C1               	movwf	??_calc_expect_vout_adc_value+9
 11898  0B4A  085A               	movf	calc_expect_vout_adc_value@i,w
 11899  0B4B  00C0               	movwf	??_calc_expect_vout_adc_value+8
 11900  0B4C  35C0               	lslf	??_calc_expect_vout_adc_value+8,f
 11901  0B4D  0DC1               	rlf	??_calc_expect_vout_adc_value+9,f
 11902  0B4E  3066               	movlw	102
 11903  0B4F  00C2               	movwf	??_calc_expect_vout_adc_value+10
 11904  0B50  3023               	movlw	35
 11905  0B51  00C3               	movwf	??_calc_expect_vout_adc_value+11
 11906  0B52  0840               	movf	??_calc_expect_vout_adc_value+8,w
 11907  0B53  0742               	addwf	??_calc_expect_vout_adc_value+10,w
 11908  0B54  0086               	movwf	6
 11909  0B55  0841               	movf	??_calc_expect_vout_adc_value+9,w
 11910  0B56  3D43               	addwfc	??_calc_expect_vout_adc_value+11,w
 11911  0B57  0087               	movwf	7
 11912  0B58  3F40               	moviw [0]fsr1
 11913  0B59  00C4               	movwf	??_calc_expect_vout_adc_value+12
 11914  0B5A  3F41               	moviw [1]fsr1
 11915  0B5B  00C5               	movwf	??_calc_expect_vout_adc_value+13
 11916  0B5C  083F               	movf	??_calc_expect_vout_adc_value+7,w
 11917  0B5D  0245               	subwf	??_calc_expect_vout_adc_value+13,w
 11918  0B5E  1D03               	skipz
 11919  0B5F  2B62               	goto	u5215
 11920  0B60  083E               	movf	??_calc_expect_vout_adc_value+6,w
 11921  0B61  0244               	subwf	??_calc_expect_vout_adc_value+12,w
 11922  0B62                     u5215:	
 11923  0B62  1803               	skipnc
 11924  0B63  2B91               	goto	l5607
 11925                           
 11926                           ;sample.c: 451: if (x <= sysData.calibRsAdc[i+1])break;
 11927  0B64  085B               	movf	calc_expect_vout_adc_value@i+1,w
 11928  0B65  00B9               	movwf	??_calc_expect_vout_adc_value+1
 11929  0B66  085A               	movf	calc_expect_vout_adc_value@i,w
 11930  0B67  00B8               	movwf	??_calc_expect_vout_adc_value
 11931  0B68  35B8               	lslf	??_calc_expect_vout_adc_value,f
 11932  0B69  0DB9               	rlf	??_calc_expect_vout_adc_value+1,f
 11933  0B6A  0838               	movf	??_calc_expect_vout_adc_value,w
 11934  0B6B  3E02               	addlw	2
 11935  0B6C  00BA               	movwf	??_calc_expect_vout_adc_value+2
 11936  0B6D  3000               	movlw	0
 11937  0B6E  3D39               	addwfc	??_calc_expect_vout_adc_value+1,w
 11938  0B6F  00BB               	movwf	??_calc_expect_vout_adc_value+3
 11939  0B70  3066               	movlw	102
 11940  0B71  00BC               	movwf	??_calc_expect_vout_adc_value+4
 11941  0B72  3023               	movlw	35
 11942  0B73  00BD               	movwf	??_calc_expect_vout_adc_value+5
 11943  0B74  083A               	movf	??_calc_expect_vout_adc_value+2,w
 11944  0B75  073C               	addwf	??_calc_expect_vout_adc_value+4,w
 11945  0B76  0086               	movwf	6
 11946  0B77  083B               	movf	??_calc_expect_vout_adc_value+3,w
 11947  0B78  3D3D               	addwfc	??_calc_expect_vout_adc_value+5,w
 11948  0B79  0087               	movwf	7
 11949  0B7A  3F40               	moviw [0]fsr1
 11950  0B7B  00BE               	movwf	??_calc_expect_vout_adc_value+6
 11951  0B7C  3F41               	moviw [1]fsr1
 11952  0B7D  00BF               	movwf	??_calc_expect_vout_adc_value+7
 11953  0B7E  0837               	movf	calc_expect_vout_adc_value@x+1,w
 11954  0B7F  023F               	subwf	??_calc_expect_vout_adc_value+7,w
 11955  0B80  1D03               	skipz
 11956  0B81  2B84               	goto	u5225
 11957  0B82  0836               	movf	calc_expect_vout_adc_value@x,w
 11958  0B83  023E               	subwf	??_calc_expect_vout_adc_value+6,w
 11959  0B84                     u5225:	
 11960  0B84  1803               	btfsc	3,0
 11961  0B85  2B91               	goto	l5607
 11962                           
 11963                           ;sample.c: 454: break;
 11964                           
 11965                           ;sample.c: 452: }else{
 11966  0B86  3001               	movlw	1
 11967  0B87  07DA               	addwf	calc_expect_vout_adc_value@i,f
 11968  0B88  3000               	movlw	0
 11969  0B89  3DDB               	addwfc	calc_expect_vout_adc_value@i+1,f
 11970  0B8A  3000               	movlw	0
 11971  0B8B  025B               	subwf	calc_expect_vout_adc_value@i+1,w
 11972  0B8C  301D               	movlw	29
 11973  0B8D  1903               	skipnz
 11974  0B8E  025A               	subwf	calc_expect_vout_adc_value@i,w
 11975  0B8F  1C03               	skipc
 11976  0B90  2B2E               	goto	l5599
 11977  0B91                     l5607:	
 11978                           
 11979                           ;sample.c: 455: }
 11980                           ;sample.c: 456: }
 11981                           ;sample.c: 458: if (i > 30-2)i=30-2;
 11982  0B91  3000               	movlw	0
 11983  0B92  025B               	subwf	calc_expect_vout_adc_value@i+1,w
 11984  0B93  301D               	movlw	29
 11985  0B94  1903               	skipnz
 11986  0B95  025A               	subwf	calc_expect_vout_adc_value@i,w
 11987  0B96  1C03               	skipc
 11988  0B97  2B9C               	goto	l5611
 11989  0B98  301C               	movlw	28
 11990  0B99  00DA               	movwf	calc_expect_vout_adc_value@i
 11991  0B9A  3000               	movlw	0
 11992  0B9B  00DB               	movwf	calc_expect_vout_adc_value@i+1
 11993  0B9C                     l5611:	
 11994                           
 11995                           ;sample.c: 459: y1=sysData.calibVoMV[i+1];
 11996  0B9C  085B               	movf	calc_expect_vout_adc_value@i+1,w
 11997  0B9D  00B9               	movwf	??_calc_expect_vout_adc_value+1
 11998  0B9E  085A               	movf	calc_expect_vout_adc_value@i,w
 11999  0B9F  00B8               	movwf	??_calc_expect_vout_adc_value
 12000  0BA0  35B8               	lslf	??_calc_expect_vout_adc_value,f
 12001  0BA1  0DB9               	rlf	??_calc_expect_vout_adc_value+1,f
 12002  0BA2  0838               	movf	??_calc_expect_vout_adc_value,w
 12003  0BA3  3E02               	addlw	2
 12004  0BA4  00BA               	movwf	??_calc_expect_vout_adc_value+2
 12005  0BA5  3000               	movlw	0
 12006  0BA6  3D39               	addwfc	??_calc_expect_vout_adc_value+1,w
 12007  0BA7  00BB               	movwf	??_calc_expect_vout_adc_value+3
 12008  0BA8  30A2               	movlw	162
 12009  0BA9  00BC               	movwf	??_calc_expect_vout_adc_value+4
 12010  0BAA  3023               	movlw	35
 12011  0BAB  00BD               	movwf	??_calc_expect_vout_adc_value+5
 12012  0BAC  083A               	movf	??_calc_expect_vout_adc_value+2,w
 12013  0BAD  073C               	addwf	??_calc_expect_vout_adc_value+4,w
 12014  0BAE  0086               	movwf	6
 12015  0BAF  083B               	movf	??_calc_expect_vout_adc_value+3,w
 12016  0BB0  3D3D               	addwfc	??_calc_expect_vout_adc_value+5,w
 12017  0BB1  0087               	movwf	7
 12018  0BB2  3F40               	moviw [0]fsr1
 12019  0BB3  00BE               	movwf	??_calc_expect_vout_adc_value+6
 12020  0BB4  3F41               	moviw [1]fsr1
 12021  0BB5  00BF               	movwf	??_calc_expect_vout_adc_value+7
 12022  0BB6  083E               	movf	??_calc_expect_vout_adc_value+6,w
 12023  0BB7  00C6               	movwf	calc_expect_vout_adc_value@y1
 12024  0BB8  083F               	movf	??_calc_expect_vout_adc_value+7,w
 12025  0BB9  00C7               	movwf	calc_expect_vout_adc_value@y1+1
 12026  0BBA  01C8               	clrf	calc_expect_vout_adc_value@y1+2
 12027  0BBB  01C9               	clrf	calc_expect_vout_adc_value@y1+3
 12028                           
 12029                           ;sample.c: 460: y0=sysData.calibVoMV[i];
 12030  0BBC  085B               	movf	calc_expect_vout_adc_value@i+1,w
 12031  0BBD  00B9               	movwf	??_calc_expect_vout_adc_value+1
 12032  0BBE  085A               	movf	calc_expect_vout_adc_value@i,w
 12033  0BBF  00B8               	movwf	??_calc_expect_vout_adc_value
 12034  0BC0  35B8               	lslf	??_calc_expect_vout_adc_value,f
 12035  0BC1  0DB9               	rlf	??_calc_expect_vout_adc_value+1,f
 12036  0BC2  30A2               	movlw	162
 12037  0BC3  00BA               	movwf	??_calc_expect_vout_adc_value+2
 12038  0BC4  3023               	movlw	35
 12039  0BC5  00BB               	movwf	??_calc_expect_vout_adc_value+3
 12040  0BC6  0838               	movf	??_calc_expect_vout_adc_value,w
 12041  0BC7  073A               	addwf	??_calc_expect_vout_adc_value+2,w
 12042  0BC8  0086               	movwf	6
 12043  0BC9  0839               	movf	??_calc_expect_vout_adc_value+1,w
 12044  0BCA  3D3B               	addwfc	??_calc_expect_vout_adc_value+3,w
 12045  0BCB  0087               	movwf	7
 12046  0BCC  3F40               	moviw [0]fsr1
 12047  0BCD  00BC               	movwf	??_calc_expect_vout_adc_value+4
 12048  0BCE  3F41               	moviw [1]fsr1
 12049  0BCF  00BD               	movwf	??_calc_expect_vout_adc_value+5
 12050  0BD0  083C               	movf	??_calc_expect_vout_adc_value+4,w
 12051  0BD1  00CE               	movwf	calc_expect_vout_adc_value@y0
 12052  0BD2  083D               	movf	??_calc_expect_vout_adc_value+5,w
 12053  0BD3  00CF               	movwf	calc_expect_vout_adc_value@y0+1
 12054  0BD4  01D0               	clrf	calc_expect_vout_adc_value@y0+2
 12055  0BD5  01D1               	clrf	calc_expect_vout_adc_value@y0+3
 12056                           
 12057                           ;sample.c: 463: x1=sysData.calibRsAdc[i+1];
 12058  0BD6  085B               	movf	calc_expect_vout_adc_value@i+1,w
 12059  0BD7  00B9               	movwf	??_calc_expect_vout_adc_value+1
 12060  0BD8  085A               	movf	calc_expect_vout_adc_value@i,w
 12061  0BD9  00B8               	movwf	??_calc_expect_vout_adc_value
 12062  0BDA  35B8               	lslf	??_calc_expect_vout_adc_value,f
 12063  0BDB  0DB9               	rlf	??_calc_expect_vout_adc_value+1,f
 12064  0BDC  0838               	movf	??_calc_expect_vout_adc_value,w
 12065  0BDD  3E02               	addlw	2
 12066  0BDE  00BA               	movwf	??_calc_expect_vout_adc_value+2
 12067  0BDF  3000               	movlw	0
 12068  0BE0  3D39               	addwfc	??_calc_expect_vout_adc_value+1,w
 12069  0BE1  00BB               	movwf	??_calc_expect_vout_adc_value+3
 12070  0BE2  3066               	movlw	102
 12071  0BE3  00BC               	movwf	??_calc_expect_vout_adc_value+4
 12072  0BE4  3023               	movlw	35
 12073  0BE5  00BD               	movwf	??_calc_expect_vout_adc_value+5
 12074  0BE6  083A               	movf	??_calc_expect_vout_adc_value+2,w
 12075  0BE7  073C               	addwf	??_calc_expect_vout_adc_value+4,w
 12076  0BE8  0086               	movwf	6
 12077  0BE9  083B               	movf	??_calc_expect_vout_adc_value+3,w
 12078  0BEA  3D3D               	addwfc	??_calc_expect_vout_adc_value+5,w
 12079  0BEB  0087               	movwf	7
 12080  0BEC  3F40               	moviw [0]fsr1
 12081  0BED  00BE               	movwf	??_calc_expect_vout_adc_value+6
 12082  0BEE  3F41               	moviw [1]fsr1
 12083  0BEF  00BF               	movwf	??_calc_expect_vout_adc_value+7
 12084  0BF0  083E               	movf	??_calc_expect_vout_adc_value+6,w
 12085  0BF1  00CA               	movwf	calc_expect_vout_adc_value@x1
 12086  0BF2  083F               	movf	??_calc_expect_vout_adc_value+7,w
 12087  0BF3  00CB               	movwf	calc_expect_vout_adc_value@x1+1
 12088  0BF4  01CC               	clrf	calc_expect_vout_adc_value@x1+2
 12089  0BF5  01CD               	clrf	calc_expect_vout_adc_value@x1+3
 12090                           
 12091                           ;sample.c: 464: x0=sysData.calibRsAdc[i];
 12092  0BF6  085B               	movf	calc_expect_vout_adc_value@i+1,w
 12093  0BF7  00B9               	movwf	??_calc_expect_vout_adc_value+1
 12094  0BF8  085A               	movf	calc_expect_vout_adc_value@i,w
 12095  0BF9  00B8               	movwf	??_calc_expect_vout_adc_value
 12096  0BFA  35B8               	lslf	??_calc_expect_vout_adc_value,f
 12097  0BFB  0DB9               	rlf	??_calc_expect_vout_adc_value+1,f
 12098  0BFC  3066               	movlw	102
 12099  0BFD  00BA               	movwf	??_calc_expect_vout_adc_value+2
 12100  0BFE  3023               	movlw	35
 12101  0BFF  00BB               	movwf	??_calc_expect_vout_adc_value+3
 12102  0C00  0838               	movf	??_calc_expect_vout_adc_value,w
 12103  0C01  073A               	addwf	??_calc_expect_vout_adc_value+2,w
 12104  0C02  0086               	movwf	6
 12105  0C03  0839               	movf	??_calc_expect_vout_adc_value+1,w
 12106  0C04  3D3B               	addwfc	??_calc_expect_vout_adc_value+3,w
 12107  0C05  0087               	movwf	7
 12108  0C06  3F40               	moviw [0]fsr1
 12109  0C07  00BC               	movwf	??_calc_expect_vout_adc_value+4
 12110  0C08  3F41               	moviw [1]fsr1
 12111  0C09  00BD               	movwf	??_calc_expect_vout_adc_value+5
 12112  0C0A  083C               	movf	??_calc_expect_vout_adc_value+4,w
 12113  0C0B  00D2               	movwf	calc_expect_vout_adc_value@x0
 12114  0C0C  083D               	movf	??_calc_expect_vout_adc_value+5,w
 12115  0C0D  00D3               	movwf	calc_expect_vout_adc_value@x0+1
 12116  0C0E  01D4               	clrf	calc_expect_vout_adc_value@x0+2
 12117  0C0F  01D5               	clrf	calc_expect_vout_adc_value@x0+3
 12118                           
 12119                           ;sample.c: 466: if(x<=x0 && i==0)return (uint16_t)y0;
 12120  0C10  0836               	movf	calc_expect_vout_adc_value@x,w
 12121  0C11  00B8               	movwf	??_calc_expect_vout_adc_value
 12122  0C12  0837               	movf	calc_expect_vout_adc_value@x+1,w
 12123  0C13  00B9               	movwf	??_calc_expect_vout_adc_value+1
 12124  0C14  01BA               	clrf	??_calc_expect_vout_adc_value+2
 12125  0C15  01BB               	clrf	??_calc_expect_vout_adc_value+3
 12126  0C16  0855               	movf	calc_expect_vout_adc_value@x0+3,w
 12127  0C17  3A80               	xorlw	128
 12128  0C18  00BC               	movwf	??_calc_expect_vout_adc_value+4
 12129  0C19  083B               	movf	??_calc_expect_vout_adc_value+3,w
 12130  0C1A  3A80               	xorlw	128
 12131  0C1B  023C               	subwf	??_calc_expect_vout_adc_value+4,w
 12132  0C1C  1D03               	skipz
 12133  0C1D  2C28               	goto	u5253
 12134  0C1E  083A               	movf	??_calc_expect_vout_adc_value+2,w
 12135  0C1F  0254               	subwf	calc_expect_vout_adc_value@x0+2,w
 12136  0C20  1D03               	skipz
 12137  0C21  2C28               	goto	u5253
 12138  0C22  0839               	movf	??_calc_expect_vout_adc_value+1,w
 12139  0C23  0253               	subwf	calc_expect_vout_adc_value@x0+1,w
 12140  0C24  1D03               	skipz
 12141  0C25  2C28               	goto	u5253
 12142  0C26  0838               	movf	??_calc_expect_vout_adc_value,w
 12143  0C27  0252               	subwf	calc_expect_vout_adc_value@x0,w
 12144  0C28                     u5253:	
 12145  0C28  1C03               	skipc
 12146  0C29  2C33               	goto	l5625
 12147  0C2A  085A               	movf	calc_expect_vout_adc_value@i,w
 12148  0C2B  045B               	iorwf	calc_expect_vout_adc_value@i+1,w
 12149  0C2C  1D03               	btfss	3,2
 12150  0C2D  2C33               	goto	l5625
 12151  0C2E  084F               	movf	calc_expect_vout_adc_value@y0+1,w
 12152  0C2F  00B7               	movwf	?_calc_expect_vout_adc_value+1
 12153  0C30  084E               	movf	calc_expect_vout_adc_value@y0,w
 12154  0C31  00B6               	movwf	?_calc_expect_vout_adc_value
 12155  0C32  0008               	return
 12156  0C33                     l5625:	
 12157                           
 12158                           ;sample.c: 467: if(x1<=x0)return (uint16_t)y0;
 12159  0C33  0855               	movf	calc_expect_vout_adc_value@x0+3,w
 12160  0C34  3A80               	xorlw	128
 12161  0C35  00B8               	movwf	??_calc_expect_vout_adc_value
 12162  0C36  084D               	movf	calc_expect_vout_adc_value@x1+3,w
 12163  0C37  3A80               	xorlw	128
 12164  0C38  0238               	subwf	??_calc_expect_vout_adc_value,w
 12165  0C39  1D03               	skipz
 12166  0C3A  2C45               	goto	u5273
 12167  0C3B  084C               	movf	calc_expect_vout_adc_value@x1+2,w
 12168  0C3C  0254               	subwf	calc_expect_vout_adc_value@x0+2,w
 12169  0C3D  1D03               	skipz
 12170  0C3E  2C45               	goto	u5273
 12171  0C3F  084B               	movf	calc_expect_vout_adc_value@x1+1,w
 12172  0C40  0253               	subwf	calc_expect_vout_adc_value@x0+1,w
 12173  0C41  1D03               	skipz
 12174  0C42  2C45               	goto	u5273
 12175  0C43  084A               	movf	calc_expect_vout_adc_value@x1,w
 12176  0C44  0252               	subwf	calc_expect_vout_adc_value@x0,w
 12177  0C45                     u5273:	
 12178  0C45  1C03               	skipc
 12179  0C46  2C4C               	goto	l5631
 12180  0C47  084F               	movf	calc_expect_vout_adc_value@y0+1,w
 12181  0C48  00B7               	movwf	?_calc_expect_vout_adc_value+1
 12182  0C49  084E               	movf	calc_expect_vout_adc_value@y0,w
 12183  0C4A  00B6               	movwf	?_calc_expect_vout_adc_value
 12184  0C4B  0008               	return
 12185  0C4C                     l5631:	
 12186                           
 12187                           ;sample.c: 470: t32=(x-x0);
 12188  0C4C  0952               	comf	calc_expect_vout_adc_value@x0,w
 12189  0C4D  00B8               	movwf	??_calc_expect_vout_adc_value
 12190  0C4E  0953               	comf	calc_expect_vout_adc_value@x0+1,w
 12191  0C4F  00B9               	movwf	??_calc_expect_vout_adc_value+1
 12192  0C50  0954               	comf	calc_expect_vout_adc_value@x0+2,w
 12193  0C51  00BA               	movwf	??_calc_expect_vout_adc_value+2
 12194  0C52  0955               	comf	calc_expect_vout_adc_value@x0+3,w
 12195  0C53  00BB               	movwf	??_calc_expect_vout_adc_value+3
 12196  0C54  0AB8               	incf	??_calc_expect_vout_adc_value,f
 12197  0C55  1903               	skipnz
 12198  0C56  0AB9               	incf	??_calc_expect_vout_adc_value+1,f
 12199  0C57  1903               	skipnz
 12200  0C58  0ABA               	incf	??_calc_expect_vout_adc_value+2,f
 12201  0C59  1903               	skipnz
 12202  0C5A  0ABB               	incf	??_calc_expect_vout_adc_value+3,f
 12203  0C5B  0836               	movf	calc_expect_vout_adc_value@x,w
 12204  0C5C  00BC               	movwf	??_calc_expect_vout_adc_value+4
 12205  0C5D  0837               	movf	calc_expect_vout_adc_value@x+1,w
 12206  0C5E  00BD               	movwf	??_calc_expect_vout_adc_value+5
 12207  0C5F  01BE               	clrf	??_calc_expect_vout_adc_value+6
 12208  0C60  01BF               	clrf	??_calc_expect_vout_adc_value+7
 12209  0C61  083C               	movf	??_calc_expect_vout_adc_value+4,w
 12210  0C62  07B8               	addwf	??_calc_expect_vout_adc_value,f
 12211  0C63  083D               	movf	??_calc_expect_vout_adc_value+5,w
 12212  0C64  3DB9               	addwfc	??_calc_expect_vout_adc_value+1,f
 12213  0C65  083E               	movf	??_calc_expect_vout_adc_value+6,w
 12214  0C66  3DBA               	addwfc	??_calc_expect_vout_adc_value+2,f
 12215  0C67  083F               	movf	??_calc_expect_vout_adc_value+7,w
 12216  0C68  3DBB               	addwfc	??_calc_expect_vout_adc_value+3,f
 12217  0C69  083B               	movf	??_calc_expect_vout_adc_value+3,w
 12218  0C6A  00D9               	movwf	calc_expect_vout_adc_value@t32+3
 12219  0C6B  083A               	movf	??_calc_expect_vout_adc_value+2,w
 12220  0C6C  00D8               	movwf	calc_expect_vout_adc_value@t32+2
 12221  0C6D  0839               	movf	??_calc_expect_vout_adc_value+1,w
 12222  0C6E  00D7               	movwf	calc_expect_vout_adc_value@t32+1
 12223  0C6F  0838               	movf	??_calc_expect_vout_adc_value,w
 12224  0C70  00D6               	movwf	calc_expect_vout_adc_value@t32
 12225                           
 12226                           ;sample.c: 471: t32=t32*(y1-y0);
 12227  0C71  0846               	movf	calc_expect_vout_adc_value@y1,w
 12228  0C72  00B8               	movwf	??_calc_expect_vout_adc_value
 12229  0C73  0847               	movf	calc_expect_vout_adc_value@y1+1,w
 12230  0C74  00B9               	movwf	??_calc_expect_vout_adc_value+1
 12231  0C75  0848               	movf	calc_expect_vout_adc_value@y1+2,w
 12232  0C76  00BA               	movwf	??_calc_expect_vout_adc_value+2
 12233  0C77  0849               	movf	calc_expect_vout_adc_value@y1+3,w
 12234  0C78  00BB               	movwf	??_calc_expect_vout_adc_value+3
 12235  0C79  094E               	comf	calc_expect_vout_adc_value@y0,w
 12236  0C7A  00BC               	movwf	??_calc_expect_vout_adc_value+4
 12237  0C7B  094F               	comf	calc_expect_vout_adc_value@y0+1,w
 12238  0C7C  00BD               	movwf	??_calc_expect_vout_adc_value+5
 12239  0C7D  0950               	comf	calc_expect_vout_adc_value@y0+2,w
 12240  0C7E  00BE               	movwf	??_calc_expect_vout_adc_value+6
 12241  0C7F  0951               	comf	calc_expect_vout_adc_value@y0+3,w
 12242  0C80  00BF               	movwf	??_calc_expect_vout_adc_value+7
 12243  0C81  0ABC               	incf	??_calc_expect_vout_adc_value+4,f
 12244  0C82  1903               	skipnz
 12245  0C83  0ABD               	incf	??_calc_expect_vout_adc_value+5,f
 12246  0C84  1903               	skipnz
 12247  0C85  0ABE               	incf	??_calc_expect_vout_adc_value+6,f
 12248  0C86  1903               	skipnz
 12249  0C87  0ABF               	incf	??_calc_expect_vout_adc_value+7,f
 12250  0C88  083C               	movf	??_calc_expect_vout_adc_value+4,w
 12251  0C89  07B8               	addwf	??_calc_expect_vout_adc_value,f
 12252  0C8A  083D               	movf	??_calc_expect_vout_adc_value+5,w
 12253  0C8B  3DB9               	addwfc	??_calc_expect_vout_adc_value+1,f
 12254  0C8C  083E               	movf	??_calc_expect_vout_adc_value+6,w
 12255  0C8D  3DBA               	addwfc	??_calc_expect_vout_adc_value+2,f
 12256  0C8E  083F               	movf	??_calc_expect_vout_adc_value+7,w
 12257  0C8F  3DBB               	addwfc	??_calc_expect_vout_adc_value+3,f
 12258  0C90  083B               	movf	??_calc_expect_vout_adc_value+3,w
 12259  0C91  00A3               	movwf	___lmul@multiplier+3
 12260  0C92  083A               	movf	??_calc_expect_vout_adc_value+2,w
 12261  0C93  00A2               	movwf	___lmul@multiplier+2
 12262  0C94  0839               	movf	??_calc_expect_vout_adc_value+1,w
 12263  0C95  00A1               	movwf	___lmul@multiplier+1
 12264  0C96  0838               	movf	??_calc_expect_vout_adc_value,w
 12265  0C97  00A0               	movwf	___lmul@multiplier
 12266  0C98  0859               	movf	calc_expect_vout_adc_value@t32+3,w
 12267  0C99  00A7               	movwf	___lmul@multiplicand+3
 12268  0C9A  0858               	movf	calc_expect_vout_adc_value@t32+2,w
 12269  0C9B  00A6               	movwf	___lmul@multiplicand+2
 12270  0C9C  0857               	movf	calc_expect_vout_adc_value@t32+1,w
 12271  0C9D  00A5               	movwf	___lmul@multiplicand+1
 12272  0C9E  0856               	movf	calc_expect_vout_adc_value@t32,w
 12273  0C9F  00A4               	movwf	___lmul@multiplicand
 12274  0CA0  319B  23CE  318B   	fcall	___lmul
 12275  0CA3  0020               	movlb	0	; select bank0
 12276  0CA4  0823               	movf	?___lmul+3,w
 12277  0CA5  00D9               	movwf	calc_expect_vout_adc_value@t32+3
 12278  0CA6  0822               	movf	?___lmul+2,w
 12279  0CA7  00D8               	movwf	calc_expect_vout_adc_value@t32+2
 12280  0CA8  0821               	movf	?___lmul+1,w
 12281  0CA9  00D7               	movwf	calc_expect_vout_adc_value@t32+1
 12282  0CAA  0820               	movf	?___lmul,w
 12283  0CAB  00D6               	movwf	calc_expect_vout_adc_value@t32
 12284                           
 12285                           ;sample.c: 472: t32=t32/(x1-x0);
 12286  0CAC  084A               	movf	calc_expect_vout_adc_value@x1,w
 12287  0CAD  00B8               	movwf	??_calc_expect_vout_adc_value
 12288  0CAE  084B               	movf	calc_expect_vout_adc_value@x1+1,w
 12289  0CAF  00B9               	movwf	??_calc_expect_vout_adc_value+1
 12290  0CB0  084C               	movf	calc_expect_vout_adc_value@x1+2,w
 12291  0CB1  00BA               	movwf	??_calc_expect_vout_adc_value+2
 12292  0CB2  084D               	movf	calc_expect_vout_adc_value@x1+3,w
 12293  0CB3  00BB               	movwf	??_calc_expect_vout_adc_value+3
 12294  0CB4  0952               	comf	calc_expect_vout_adc_value@x0,w
 12295  0CB5  00BC               	movwf	??_calc_expect_vout_adc_value+4
 12296  0CB6  0953               	comf	calc_expect_vout_adc_value@x0+1,w
 12297  0CB7  00BD               	movwf	??_calc_expect_vout_adc_value+5
 12298  0CB8  0954               	comf	calc_expect_vout_adc_value@x0+2,w
 12299  0CB9  00BE               	movwf	??_calc_expect_vout_adc_value+6
 12300  0CBA  0955               	comf	calc_expect_vout_adc_value@x0+3,w
 12301  0CBB  00BF               	movwf	??_calc_expect_vout_adc_value+7
 12302  0CBC  0ABC               	incf	??_calc_expect_vout_adc_value+4,f
 12303  0CBD  1903               	skipnz
 12304  0CBE  0ABD               	incf	??_calc_expect_vout_adc_value+5,f
 12305  0CBF  1903               	skipnz
 12306  0CC0  0ABE               	incf	??_calc_expect_vout_adc_value+6,f
 12307  0CC1  1903               	skipnz
 12308  0CC2  0ABF               	incf	??_calc_expect_vout_adc_value+7,f
 12309  0CC3  083C               	movf	??_calc_expect_vout_adc_value+4,w
 12310  0CC4  07B8               	addwf	??_calc_expect_vout_adc_value,f
 12311  0CC5  083D               	movf	??_calc_expect_vout_adc_value+5,w
 12312  0CC6  3DB9               	addwfc	??_calc_expect_vout_adc_value+1,f
 12313  0CC7  083E               	movf	??_calc_expect_vout_adc_value+6,w
 12314  0CC8  3DBA               	addwfc	??_calc_expect_vout_adc_value+2,f
 12315  0CC9  083F               	movf	??_calc_expect_vout_adc_value+7,w
 12316  0CCA  3DBB               	addwfc	??_calc_expect_vout_adc_value+3,f
 12317  0CCB  083B               	movf	??_calc_expect_vout_adc_value+3,w
 12318  0CCC  00AB               	movwf	___aldiv@divisor+3
 12319  0CCD  083A               	movf	??_calc_expect_vout_adc_value+2,w
 12320  0CCE  00AA               	movwf	___aldiv@divisor+2
 12321  0CCF  0839               	movf	??_calc_expect_vout_adc_value+1,w
 12322  0CD0  00A9               	movwf	___aldiv@divisor+1
 12323  0CD1  0838               	movf	??_calc_expect_vout_adc_value,w
 12324  0CD2  00A8               	movwf	___aldiv@divisor
 12325  0CD3  0859               	movf	calc_expect_vout_adc_value@t32+3,w
 12326  0CD4  00AF               	movwf	___aldiv@dividend+3
 12327  0CD5  0858               	movf	calc_expect_vout_adc_value@t32+2,w
 12328  0CD6  00AE               	movwf	___aldiv@dividend+2
 12329  0CD7  0857               	movf	calc_expect_vout_adc_value@t32+1,w
 12330  0CD8  00AD               	movwf	___aldiv@dividend+1
 12331  0CD9  0856               	movf	calc_expect_vout_adc_value@t32,w
 12332  0CDA  00AC               	movwf	___aldiv@dividend
 12333  0CDB  3190  209F  318B   	fcall	___aldiv
 12334  0CDE  0020               	movlb	0	; select bank0
 12335  0CDF  082B               	movf	?___aldiv+3,w
 12336  0CE0  00D9               	movwf	calc_expect_vout_adc_value@t32+3
 12337  0CE1  082A               	movf	?___aldiv+2,w
 12338  0CE2  00D8               	movwf	calc_expect_vout_adc_value@t32+2
 12339  0CE3  0829               	movf	?___aldiv+1,w
 12340  0CE4  00D7               	movwf	calc_expect_vout_adc_value@t32+1
 12341  0CE5  0828               	movf	?___aldiv,w
 12342  0CE6  00D6               	movwf	calc_expect_vout_adc_value@t32
 12343                           
 12344                           ;sample.c: 473: t32=t32+y0;
 12345  0CE7  0856               	movf	calc_expect_vout_adc_value@t32,w
 12346  0CE8  074E               	addwf	calc_expect_vout_adc_value@y0,w
 12347  0CE9  00B8               	movwf	??_calc_expect_vout_adc_value
 12348  0CEA  0857               	movf	calc_expect_vout_adc_value@t32+1,w
 12349  0CEB  3D4F               	addwfc	calc_expect_vout_adc_value@y0+1,w
 12350  0CEC  00B9               	movwf	??_calc_expect_vout_adc_value+1
 12351  0CED  0858               	movf	calc_expect_vout_adc_value@t32+2,w
 12352  0CEE  3D50               	addwfc	calc_expect_vout_adc_value@y0+2,w
 12353  0CEF  00BA               	movwf	??_calc_expect_vout_adc_value+2
 12354  0CF0  0859               	movf	calc_expect_vout_adc_value@t32+3,w
 12355  0CF1  3D51               	addwfc	calc_expect_vout_adc_value@y0+3,w
 12356  0CF2  00BB               	movwf	??_calc_expect_vout_adc_value+3
 12357  0CF3  083B               	movf	??_calc_expect_vout_adc_value+3,w
 12358  0CF4  00D9               	movwf	calc_expect_vout_adc_value@t32+3
 12359  0CF5  083A               	movf	??_calc_expect_vout_adc_value+2,w
 12360  0CF6  00D8               	movwf	calc_expect_vout_adc_value@t32+2
 12361  0CF7  0839               	movf	??_calc_expect_vout_adc_value+1,w
 12362  0CF8  00D7               	movwf	calc_expect_vout_adc_value@t32+1
 12363  0CF9  0838               	movf	??_calc_expect_vout_adc_value,w
 12364  0CFA  00D6               	movwf	calc_expect_vout_adc_value@t32
 12365                           
 12366                           ;sample.c: 474: if(t32<0)t32=0;
 12367  0CFB  1FD9               	btfss	calc_expect_vout_adc_value@t32+3,7
 12368  0CFC  2D05               	goto	l721
 12369  0CFD  3000               	movlw	0
 12370  0CFE  00D9               	movwf	calc_expect_vout_adc_value@t32+3
 12371  0CFF  3000               	movlw	0
 12372  0D00  00D8               	movwf	calc_expect_vout_adc_value@t32+2
 12373  0D01  3000               	movlw	0
 12374  0D02  00D7               	movwf	calc_expect_vout_adc_value@t32+1
 12375  0D03  3000               	movlw	0
 12376  0D04  00D6               	movwf	calc_expect_vout_adc_value@t32
 12377  0D05                     l721:	
 12378                           
 12379                           ;sample.c: 475: return (uint16_t)t32;
 12380  0D05  0857               	movf	calc_expect_vout_adc_value@t32+1,w
 12381  0D06  00B7               	movwf	?_calc_expect_vout_adc_value+1
 12382  0D07  0856               	movf	calc_expect_vout_adc_value@t32,w
 12383  0D08  00B6               	movwf	?_calc_expect_vout_adc_value
 12384  0D09  0008               	return
 12385  0D0A                     __end_of_calc_expect_vout_adc_value:	
 12386                           
 12387                           	psect	text36
 12388  1BCE                     __ptext36:	
 12389 ;; *************** function ___lmul *****************
 12390 ;; Defined at:
 12391 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul32.c"
 12392 ;; Parameters:    Size  Location     Type
 12393 ;;  multiplier      4    0[BANK0 ] unsigned long 
 12394 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 12395 ;; Auto vars:     Size  Location     Type
 12396 ;;  product         4    3[COMMON] unsigned long 
 12397 ;; Return value:  Size  Location     Type
 12398 ;;                  4    0[BANK0 ] unsigned long 
 12399 ;; Registers used:
 12400 ;;		wreg, status,2, status,0
 12401 ;; Tracked objects:
 12402 ;;		On entry : 0/0
 12403 ;;		On exit  : 0/0
 12404 ;;		Unchanged: 0/0
 12405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12406 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12407 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12409 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12410 ;;Total ram usage:       12 bytes
 12411 ;; Hardware stack levels used:    1
 12412 ;; Hardware stack levels required when called:    1
 12413 ;; This function calls:
 12414 ;;		Nothing
 12415 ;; This function is called by:
 12416 ;;		_calc_temp_rs
 12417 ;;		_calc_temp_rc
 12418 ;;		_pid_pwm1_idrv_b_b
 12419 ;;		_pid_pwm1_idrv_run
 12420 ;;		_calc_expect_vout_adc_value
 12421 ;;		_cal_rs_simulate_power
 12422 ;;		_m_math_pow
 12423 ;; This function uses a non-reentrant model
 12424 ;;
 12425                           
 12426                           
 12427                           ;psect for function ___lmul
 12428  1BCE                     ___lmul:	
 12429                           
 12430                           ;incstack = 0
 12431                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 12432  1BCE  3000               	movlw	0
 12433  1BCF  00F6               	movwf	___lmul@product+3
 12434  1BD0  3000               	movlw	0
 12435  1BD1  00F5               	movwf	___lmul@product+2
 12436  1BD2  3000               	movlw	0
 12437  1BD3  00F4               	movwf	___lmul@product+1
 12438  1BD4  3000               	movlw	0
 12439  1BD5  00F3               	movwf	___lmul@product
 12440  1BD6                     l5307:	
 12441  1BD6  0020               	movlb	0	; select bank0
 12442  1BD7  1C20               	btfss	___lmul@multiplier,0
 12443  1BD8  2BE1               	goto	l5311
 12444  1BD9  0824               	movf	___lmul@multiplicand,w
 12445  1BDA  07F3               	addwf	___lmul@product,f
 12446  1BDB  0825               	movf	___lmul@multiplicand+1,w
 12447  1BDC  3DF4               	addwfc	___lmul@product+1,f
 12448  1BDD  0826               	movf	___lmul@multiplicand+2,w
 12449  1BDE  3DF5               	addwfc	___lmul@product+2,f
 12450  1BDF  0827               	movf	___lmul@multiplicand+3,w
 12451  1BE0  3DF6               	addwfc	___lmul@product+3,f
 12452  1BE1                     l5311:	
 12453  1BE1  3001               	movlw	1
 12454  1BE2                     u4755:	
 12455  1BE2  35A4               	lslf	___lmul@multiplicand,f
 12456  1BE3  0DA5               	rlf	___lmul@multiplicand+1,f
 12457  1BE4  0DA6               	rlf	___lmul@multiplicand+2,f
 12458  1BE5  0DA7               	rlf	___lmul@multiplicand+3,f
 12459  1BE6  0B89               	decfsz	9,f
 12460  1BE7  2BE2               	goto	u4755
 12461  1BE8  3001               	movlw	1
 12462  1BE9                     u4765:	
 12463  1BE9  36A3               	lsrf	___lmul@multiplier+3,f
 12464  1BEA  0CA2               	rrf	___lmul@multiplier+2,f
 12465  1BEB  0CA1               	rrf	___lmul@multiplier+1,f
 12466  1BEC  0CA0               	rrf	___lmul@multiplier,f
 12467  1BED  0B89               	decfsz	9,f
 12468  1BEE  2BE9               	goto	u4765
 12469  1BEF  0823               	movf	___lmul@multiplier+3,w
 12470  1BF0  0422               	iorwf	___lmul@multiplier+2,w
 12471  1BF1  0421               	iorwf	___lmul@multiplier+1,w
 12472  1BF2  0420               	iorwf	___lmul@multiplier,w
 12473  1BF3  1D03               	skipz
 12474  1BF4  2BD6               	goto	l5307
 12475  1BF5  0876               	movf	___lmul@product+3,w
 12476  1BF6  00A3               	movwf	?___lmul+3
 12477  1BF7  0875               	movf	___lmul@product+2,w
 12478  1BF8  00A2               	movwf	?___lmul+2
 12479  1BF9  0874               	movf	___lmul@product+1,w
 12480  1BFA  00A1               	movwf	?___lmul+1
 12481  1BFB  0873               	movf	___lmul@product,w
 12482  1BFC  00A0               	movwf	?___lmul
 12483  1BFD  0008               	return
 12484  1BFE                     __end_of___lmul:	
 12485                           
 12486                           	psect	text37
 12487  109F                     __ptext37:	
 12488 ;; *************** function ___aldiv *****************
 12489 ;; Defined at:
 12490 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\aldiv.c"
 12491 ;; Parameters:    Size  Location     Type
 12492 ;;  divisor         4    8[BANK0 ] long 
 12493 ;;  dividend        4   12[BANK0 ] long 
 12494 ;; Auto vars:     Size  Location     Type
 12495 ;;  quotient        4   18[BANK0 ] long 
 12496 ;;  sign            1   17[BANK0 ] unsigned char 
 12497 ;;  counter         1   16[BANK0 ] unsigned char 
 12498 ;; Return value:  Size  Location     Type
 12499 ;;                  4    8[BANK0 ] long 
 12500 ;; Registers used:
 12501 ;;		wreg, status,2, status,0
 12502 ;; Tracked objects:
 12503 ;;		On entry : 0/0
 12504 ;;		On exit  : 0/0
 12505 ;;		Unchanged: 0/0
 12506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12507 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12508 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12509 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12510 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12511 ;;Total ram usage:       15 bytes
 12512 ;; Hardware stack levels used:    1
 12513 ;; Hardware stack levels required when called:    1
 12514 ;; This function calls:
 12515 ;;		Nothing
 12516 ;; This function is called by:
 12517 ;;		_pid_pwm1_idrv_b_b
 12518 ;;		_pid_pwm1_idrv_run
 12519 ;;		_calc_expect_vout_adc_value
 12520 ;;		_m_int_2_str
 12521 ;;		_m_int_2_str_ex
 12522 ;; This function uses a non-reentrant model
 12523 ;;
 12524                           
 12525                           
 12526                           ;psect for function ___aldiv
 12527  109F                     ___aldiv:	
 12528                           
 12529                           ;incstack = 0
 12530                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 12531  109F  0020               	movlb	0	; select bank0
 12532  10A0  01B1               	clrf	___aldiv@sign
 12533  10A1  1FAB               	btfss	___aldiv@divisor+3,7
 12534  10A2  28B0               	goto	l1206
 12535  10A3  09A8               	comf	___aldiv@divisor,f
 12536  10A4  09A9               	comf	___aldiv@divisor+1,f
 12537  10A5  09AA               	comf	___aldiv@divisor+2,f
 12538  10A6  09AB               	comf	___aldiv@divisor+3,f
 12539  10A7  0AA8               	incf	___aldiv@divisor,f
 12540  10A8  1903               	skipnz
 12541  10A9  0AA9               	incf	___aldiv@divisor+1,f
 12542  10AA  1903               	skipnz
 12543  10AB  0AAA               	incf	___aldiv@divisor+2,f
 12544  10AC  1903               	skipnz
 12545  10AD  0AAB               	incf	___aldiv@divisor+3,f
 12546  10AE  01B1               	clrf	___aldiv@sign
 12547  10AF  0AB1               	incf	___aldiv@sign,f
 12548  10B0                     l1206:	
 12549  10B0  1FAF               	btfss	___aldiv@dividend+3,7
 12550  10B1  28C1               	goto	l5329
 12551  10B2  09AC               	comf	___aldiv@dividend,f
 12552  10B3  09AD               	comf	___aldiv@dividend+1,f
 12553  10B4  09AE               	comf	___aldiv@dividend+2,f
 12554  10B5  09AF               	comf	___aldiv@dividend+3,f
 12555  10B6  0AAC               	incf	___aldiv@dividend,f
 12556  10B7  1903               	skipnz
 12557  10B8  0AAD               	incf	___aldiv@dividend+1,f
 12558  10B9  1903               	skipnz
 12559  10BA  0AAE               	incf	___aldiv@dividend+2,f
 12560  10BB  1903               	skipnz
 12561  10BC  0AAF               	incf	___aldiv@dividend+3,f
 12562  10BD  3001               	movlw	1
 12563  10BE  00F7               	movwf	??___aldiv
 12564  10BF  0877               	movf	??___aldiv,w
 12565  10C0  06B1               	xorwf	___aldiv@sign,f
 12566  10C1                     l5329:	
 12567  10C1  3000               	movlw	0
 12568  10C2  00B5               	movwf	___aldiv@quotient+3
 12569  10C3  3000               	movlw	0
 12570  10C4  00B4               	movwf	___aldiv@quotient+2
 12571  10C5  3000               	movlw	0
 12572  10C6  00B3               	movwf	___aldiv@quotient+1
 12573  10C7  3000               	movlw	0
 12574  10C8  00B2               	movwf	___aldiv@quotient
 12575  10C9  082B               	movf	___aldiv@divisor+3,w
 12576  10CA  042A               	iorwf	___aldiv@divisor+2,w
 12577  10CB  0429               	iorwf	___aldiv@divisor+1,w
 12578  10CC  0428               	iorwf	___aldiv@divisor,w
 12579  10CD  1903               	skipnz
 12580  10CE  290A               	goto	l5351
 12581  10CF  01B0               	clrf	___aldiv@counter
 12582  10D0  0AB0               	incf	___aldiv@counter,f
 12583  10D1                     l5337:	
 12584  10D1  1BAB               	btfsc	___aldiv@divisor+3,7
 12585  10D2  28DF               	goto	l5339
 12586  10D3  3001               	movlw	1
 12587  10D4                     u4815:	
 12588  10D4  35A8               	lslf	___aldiv@divisor,f
 12589  10D5  0DA9               	rlf	___aldiv@divisor+1,f
 12590  10D6  0DAA               	rlf	___aldiv@divisor+2,f
 12591  10D7  0DAB               	rlf	___aldiv@divisor+3,f
 12592  10D8  0B89               	decfsz	9,f
 12593  10D9  28D4               	goto	u4815
 12594  10DA  3001               	movlw	1
 12595  10DB  00F7               	movwf	??___aldiv
 12596  10DC  0877               	movf	??___aldiv,w
 12597  10DD  07B0               	addwf	___aldiv@counter,f
 12598  10DE  28D1               	goto	l5337
 12599  10DF                     l5339:	
 12600  10DF  3001               	movlw	1
 12601  10E0                     u4835:	
 12602  10E0  35B2               	lslf	___aldiv@quotient,f
 12603  10E1  0DB3               	rlf	___aldiv@quotient+1,f
 12604  10E2  0DB4               	rlf	___aldiv@quotient+2,f
 12605  10E3  0DB5               	rlf	___aldiv@quotient+3,f
 12606  10E4  0B89               	decfsz	9,f
 12607  10E5  28E0               	goto	u4835
 12608  10E6  082B               	movf	___aldiv@divisor+3,w
 12609  10E7  022F               	subwf	___aldiv@dividend+3,w
 12610  10E8  1D03               	skipz
 12611  10E9  28F4               	goto	u4845
 12612  10EA  082A               	movf	___aldiv@divisor+2,w
 12613  10EB  022E               	subwf	___aldiv@dividend+2,w
 12614  10EC  1D03               	skipz
 12615  10ED  28F4               	goto	u4845
 12616  10EE  0829               	movf	___aldiv@divisor+1,w
 12617  10EF  022D               	subwf	___aldiv@dividend+1,w
 12618  10F0  1D03               	skipz
 12619  10F1  28F4               	goto	u4845
 12620  10F2  0828               	movf	___aldiv@divisor,w
 12621  10F3  022C               	subwf	___aldiv@dividend,w
 12622  10F4                     u4845:	
 12623  10F4  1C03               	skipc
 12624  10F5  28FF               	goto	l5347
 12625  10F6  0828               	movf	___aldiv@divisor,w
 12626  10F7  02AC               	subwf	___aldiv@dividend,f
 12627  10F8  0829               	movf	___aldiv@divisor+1,w
 12628  10F9  3BAD               	subwfb	___aldiv@dividend+1,f
 12629  10FA  082A               	movf	___aldiv@divisor+2,w
 12630  10FB  3BAE               	subwfb	___aldiv@dividend+2,f
 12631  10FC  082B               	movf	___aldiv@divisor+3,w
 12632  10FD  3BAF               	subwfb	___aldiv@dividend+3,f
 12633  10FE  1432               	bsf	___aldiv@quotient,0
 12634  10FF                     l5347:	
 12635  10FF  3001               	movlw	1
 12636  1100                     u4855:	
 12637  1100  36AB               	lsrf	___aldiv@divisor+3,f
 12638  1101  0CAA               	rrf	___aldiv@divisor+2,f
 12639  1102  0CA9               	rrf	___aldiv@divisor+1,f
 12640  1103  0CA8               	rrf	___aldiv@divisor,f
 12641  1104  0B89               	decfsz	9,f
 12642  1105  2900               	goto	u4855
 12643  1106  3001               	movlw	1
 12644  1107  02B0               	subwf	___aldiv@counter,f
 12645  1108  1D03               	btfss	3,2
 12646  1109  28DF               	goto	l5339
 12647  110A                     l5351:	
 12648  110A  0831               	movf	___aldiv@sign,w
 12649  110B  1903               	btfsc	3,2
 12650  110C  2918               	goto	l5355
 12651  110D  09B2               	comf	___aldiv@quotient,f
 12652  110E  09B3               	comf	___aldiv@quotient+1,f
 12653  110F  09B4               	comf	___aldiv@quotient+2,f
 12654  1110  09B5               	comf	___aldiv@quotient+3,f
 12655  1111  0AB2               	incf	___aldiv@quotient,f
 12656  1112  1903               	skipnz
 12657  1113  0AB3               	incf	___aldiv@quotient+1,f
 12658  1114  1903               	skipnz
 12659  1115  0AB4               	incf	___aldiv@quotient+2,f
 12660  1116  1903               	skipnz
 12661  1117  0AB5               	incf	___aldiv@quotient+3,f
 12662  1118                     l5355:	
 12663  1118  0835               	movf	___aldiv@quotient+3,w
 12664  1119  00AB               	movwf	?___aldiv+3
 12665  111A  0834               	movf	___aldiv@quotient+2,w
 12666  111B  00AA               	movwf	?___aldiv+2
 12667  111C  0833               	movf	___aldiv@quotient+1,w
 12668  111D  00A9               	movwf	?___aldiv+1
 12669  111E  0832               	movf	___aldiv@quotient,w
 12670  111F  00A8               	movwf	?___aldiv
 12671  1120  0008               	return
 12672  1121                     __end_of___aldiv:	
 12673                           
 12674                           	psect	text38
 12675  1EA2                     __ptext38:	
 12676 ;; *************** function _adc_sample *****************
 12677 ;; Defined at:
 12678 ;;		line 177 in file "src/api/sample.c"
 12679 ;; Parameters:    Size  Location     Type
 12680 ;;  ch              1    wreg     unsigned char 
 12681 ;;  gfvr            1    6[COMMON] unsigned char 
 12682 ;;  num             1    7[COMMON] unsigned char 
 12683 ;; Auto vars:     Size  Location     Type
 12684 ;;  ch              1    3[BANK0 ] unsigned char 
 12685 ;;  t16             2    8[BANK0 ] unsigned int 
 12686 ;;  ret             2    6[BANK0 ] unsigned int 
 12687 ;;  i               2    4[BANK0 ] unsigned int 
 12688 ;; Return value:  Size  Location     Type
 12689 ;;                  2    6[COMMON] unsigned int 
 12690 ;; Registers used:
 12691 ;;		wreg, status,2, status,0, pclath, cstack
 12692 ;; Tracked objects:
 12693 ;;		On entry : 0/0
 12694 ;;		On exit  : 0/0
 12695 ;;		Unchanged: 0/0
 12696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12697 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12698 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12699 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12700 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12701 ;;Total ram usage:       12 bytes
 12702 ;; Hardware stack levels used:    1
 12703 ;; Hardware stack levels required when called:    2
 12704 ;; This function calls:
 12705 ;;		_adc_init
 12706 ;;		_fvr_set_gain
 12707 ;; This function is called by:
 12708 ;;		_main
 12709 ;; This function uses a non-reentrant model
 12710 ;;
 12711                           
 12712                           
 12713                           ;psect for function _adc_sample
 12714  1EA2                     _adc_sample:	
 12715                           
 12716                           ;incstack = 0
 12717                           ; Regs used in _adc_sample: [wreg+status,2+status,0+pclath+cstack]
 12718                           ;adc_sample@ch stored from wreg
 12719  1EA2  0020               	movlb	0	; select bank0
 12720  1EA3  00A3               	movwf	adc_sample@ch
 12721                           
 12722                           ;sample.c: 179: uint16_t i;
 12723                           ;sample.c: 180: uint16_t ret=0;
 12724  1EA4  01A6               	clrf	adc_sample@ret
 12725  1EA5  01A7               	clrf	adc_sample@ret+1
 12726                           
 12727                           ;sample.c: 181: uint16_t t16=0;
 12728  1EA6  01A8               	clrf	adc_sample@t16
 12729  1EA7  01A9               	clrf	adc_sample@t16+1
 12730                           
 12731                           ;sample.c: 183: fvr_set_gain(gfvr);
 12732  1EA8  0876               	movf	adc_sample@gfvr,w
 12733  1EA9  3199  21FE  319E   	fcall	_fvr_set_gain
 12734                           
 12735                           ;sample.c: 184: adc_init((adc_channel_t)ch);
 12736  1EAC  0020               	movlb	0	; select bank0
 12737  1EAD  0823               	movf	adc_sample@ch,w
 12738  1EAE  3199  21EA  319E   	fcall	_adc_init
 12739                           
 12740                           ;sample.c: 185: _delay((unsigned long)((50)*(16000000/4000000.0)));
 12741  1EB1  3042               	movlw	66
 12742  1EB2                     u5607:	
 12743  1EB2  0B89               	decfsz	9,f
 12744  1EB3  2EB2               	goto	u5607
 12745  1EB4  3200               	nop2
 12746                           
 12747                           ;sample.c: 186: ADCON0bits.GO_nDONE = 1;
 12748  1EB5  0021               	movlb	1	; select bank1
 12749  1EB6  149D               	bsf	29,1	;volatile
 12750  1EB7                     l654:	
 12751                           ;sample.c: 187: while (ADCON0bits.GO_nDONE);
 12752                           
 12753  1EB7  189D               	btfsc	29,1	;volatile
 12754  1EB8  2EB7               	goto	l654
 12755                           
 12756                           ;sample.c: 188: if(num>64)num=64;
 12757  1EB9  3041               	movlw	65
 12758  1EBA  0277               	subwf	adc_sample@num,w
 12759  1EBB  1C03               	skipc
 12760  1EBC  2EC2               	goto	l5397
 12761  1EBD  3040               	movlw	64
 12762  1EBE  0020               	movlb	0	; select bank0
 12763  1EBF  00A0               	movwf	??_adc_sample
 12764  1EC0  0820               	movf	??_adc_sample,w
 12765  1EC1  00F7               	movwf	adc_sample@num
 12766  1EC2                     l5397:	
 12767                           
 12768                           ;sample.c: 189: for(i=0;i<num;i++){
 12769  1EC2  0020               	movlb	0	; select bank0
 12770  1EC3  01A4               	clrf	adc_sample@i
 12771  1EC4  01A5               	clrf	adc_sample@i+1
 12772  1EC5                     l5407:	
 12773  1EC5  0877               	movf	adc_sample@num,w
 12774  1EC6  00A0               	movwf	??_adc_sample
 12775  1EC7  01A1               	clrf	??_adc_sample+1
 12776  1EC8  0821               	movf	??_adc_sample+1,w
 12777  1EC9  0225               	subwf	adc_sample@i+1,w
 12778  1ECA  1D03               	skipz
 12779  1ECB  2ECE               	goto	u5005
 12780  1ECC  0820               	movf	??_adc_sample,w
 12781  1ECD  0224               	subwf	adc_sample@i,w
 12782  1ECE                     u5005:	
 12783  1ECE  1803               	btfsc	3,0
 12784  1ECF  2EFB               	goto	l5409
 12785                           
 12786                           ;sample.c: 190: ADCON0bits.GO_nDONE = 1;
 12787  1ED0  0021               	movlb	1	; select bank1
 12788  1ED1  149D               	bsf	29,1	;volatile
 12789  1ED2                     l660:	
 12790                           ;sample.c: 191: while (ADCON0bits.GO_nDONE);
 12791                           
 12792  1ED2  189D               	btfsc	29,1	;volatile
 12793  1ED3  2ED2               	goto	l660
 12794                           
 12795                           ;sample.c: 192: __nop();
 12796  1ED4  0000               	nop
 12797                           
 12798                           ;sample.c: 193: t16=ADRESH;
 12799  1ED5  0021               	movlb	1	; select bank1
 12800  1ED6  081C               	movf	28,w	;volatile
 12801  1ED7  0020               	movlb	0	; select bank0
 12802  1ED8  00A0               	movwf	??_adc_sample
 12803  1ED9  01A1               	clrf	??_adc_sample+1
 12804  1EDA  0820               	movf	??_adc_sample,w
 12805  1EDB  00A8               	movwf	adc_sample@t16
 12806  1EDC  0821               	movf	??_adc_sample+1,w
 12807  1EDD  00A9               	movwf	adc_sample@t16+1
 12808                           
 12809                           ;sample.c: 194: t16<<=2;
 12810  1EDE  3002               	movlw	2
 12811  1EDF                     u4985:	
 12812  1EDF  35A8               	lslf	adc_sample@t16,f
 12813  1EE0  0DA9               	rlf	adc_sample@t16+1,f
 12814  1EE1  0B89               	decfsz	9,f
 12815  1EE2  2EDF               	goto	u4985
 12816                           
 12817                           ;sample.c: 195: t16|=(uint16_t)(ADRESL>>6);
 12818  1EE3  0021               	movlb	1	; select bank1
 12819  1EE4  081B               	movf	27,w	;volatile
 12820  1EE5  0020               	movlb	0	; select bank0
 12821  1EE6  00A0               	movwf	??_adc_sample
 12822  1EE7  3006               	movlw	6
 12823  1EE8                     u4995:	
 12824  1EE8  36A0               	lsrf	??_adc_sample,f
 12825  1EE9  0B89               	decfsz	9,f
 12826  1EEA  2EE8               	goto	u4995
 12827  1EEB  0820               	movf	??_adc_sample,w
 12828  1EEC  00A1               	movwf	??_adc_sample+1
 12829  1EED  01A2               	clrf	??_adc_sample+2
 12830  1EEE  0821               	movf	??_adc_sample+1,w
 12831  1EEF  04A8               	iorwf	adc_sample@t16,f
 12832  1EF0  0822               	movf	??_adc_sample+2,w
 12833  1EF1  04A9               	iorwf	adc_sample@t16+1,f
 12834                           
 12835                           ;sample.c: 197: ret+=t16;
 12836  1EF2  0828               	movf	adc_sample@t16,w
 12837  1EF3  07A6               	addwf	adc_sample@ret,f
 12838  1EF4  0829               	movf	adc_sample@t16+1,w
 12839  1EF5  3DA7               	addwfc	adc_sample@ret+1,f
 12840  1EF6  3001               	movlw	1
 12841  1EF7  07A4               	addwf	adc_sample@i,f
 12842  1EF8  3000               	movlw	0
 12843  1EF9  3DA5               	addwfc	adc_sample@i+1,f
 12844  1EFA  2EC5               	goto	l5407
 12845  1EFB                     l5409:	
 12846                           
 12847                           ;sample.c: 202: return ret;
 12848  1EFB  0827               	movf	adc_sample@ret+1,w
 12849  1EFC  00F7               	movwf	?_adc_sample+1
 12850  1EFD  0826               	movf	adc_sample@ret,w
 12851  1EFE  00F6               	movwf	?_adc_sample
 12852  1EFF  0008               	return
 12853  1F00                     __end_of_adc_sample:	
 12854                           
 12855                           	psect	text39
 12856  19FE                     __ptext39:	
 12857 ;; *************** function _fvr_set_gain *****************
 12858 ;; Defined at:
 12859 ;;		line 124 in file "src/api/sample.c"
 12860 ;; Parameters:    Size  Location     Type
 12861 ;;  g               1    wreg     unsigned char 
 12862 ;; Auto vars:     Size  Location     Type
 12863 ;;  g               1    5[COMMON] unsigned char 
 12864 ;;  t8              1    4[COMMON] unsigned char 
 12865 ;; Return value:  Size  Location     Type
 12866 ;;                  1    wreg      void 
 12867 ;; Registers used:
 12868 ;;		wreg, status,2, status,0
 12869 ;; Tracked objects:
 12870 ;;		On entry : 0/0
 12871 ;;		On exit  : 0/0
 12872 ;;		Unchanged: 0/0
 12873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12875 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12876 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12877 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12878 ;;Total ram usage:        3 bytes
 12879 ;; Hardware stack levels used:    1
 12880 ;; Hardware stack levels required when called:    1
 12881 ;; This function calls:
 12882 ;;		Nothing
 12883 ;; This function is called by:
 12884 ;;		_adc_sample
 12885 ;; This function uses a non-reentrant model
 12886 ;;
 12887                           
 12888                           
 12889                           ;psect for function _fvr_set_gain
 12890  19FE                     _fvr_set_gain:	
 12891                           
 12892                           ;incstack = 0
 12893                           ; Regs used in _fvr_set_gain: [wreg+status,2+status,0]
 12894                           ;fvr_set_gain@g stored from wreg
 12895  19FE  00F5               	movwf	fvr_set_gain@g
 12896                           
 12897                           ;sample.c: 126: uint8_t t8=0x80;
 12898  19FF  3080               	movlw	128
 12899  1A00  00F3               	movwf	??_fvr_set_gain
 12900  1A01  0873               	movf	??_fvr_set_gain,w
 12901  1A02  00F4               	movwf	fvr_set_gain@t8
 12902                           
 12903                           ;sample.c: 127: if(g>3)g=3;
 12904  1A03  3004               	movlw	4
 12905  1A04  0275               	subwf	fvr_set_gain@g,w
 12906  1A05  1C03               	skipc
 12907  1A06  2A0B               	goto	l3727
 12908  1A07  3003               	movlw	3
 12909  1A08  00F3               	movwf	??_fvr_set_gain
 12910  1A09  0873               	movf	??_fvr_set_gain,w
 12911  1A0A  00F5               	movwf	fvr_set_gain@g
 12912  1A0B                     l3727:	
 12913                           
 12914                           ;sample.c: 128: t8|=g;
 12915  1A0B  0875               	movf	fvr_set_gain@g,w
 12916  1A0C  00F3               	movwf	??_fvr_set_gain
 12917  1A0D  0873               	movf	??_fvr_set_gain,w
 12918  1A0E  04F4               	iorwf	fvr_set_gain@t8,f
 12919                           
 12920                           ;sample.c: 129: FVRCON = t8;
 12921  1A0F  0874               	movf	fvr_set_gain@t8,w
 12922  1A10  0022               	movlb	2	; select bank2
 12923  1A11  0097               	movwf	23	;volatile
 12924  1A12                     l642:	
 12925                           ;sample.c: 130: while(!(FVRCONbits.FVRRDY));
 12926                           
 12927  1A12  1B17               	btfsc	23,6	;volatile
 12928  1A13  0008               	return
 12929  1A14  2A12               	goto	l642
 12930  1A15                     __end_of_fvr_set_gain:	
 12931                           
 12932                           	psect	text40
 12933  19EA                     __ptext40:	
 12934 ;; *************** function _adc_init *****************
 12935 ;; Defined at:
 12936 ;;		line 133 in file "src/api/sample.c"
 12937 ;; Parameters:    Size  Location     Type
 12938 ;;  ch              1    wreg     enum E4992
 12939 ;; Auto vars:     Size  Location     Type
 12940 ;;  ch              1    4[COMMON] enum E4992
 12941 ;; Return value:  Size  Location     Type
 12942 ;;                  1    wreg      void 
 12943 ;; Registers used:
 12944 ;;		wreg, status,2, status,0
 12945 ;; Tracked objects:
 12946 ;;		On entry : 0/0
 12947 ;;		On exit  : 0/0
 12948 ;;		Unchanged: 0/0
 12949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12951 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12952 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12953 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12954 ;;Total ram usage:        2 bytes
 12955 ;; Hardware stack levels used:    1
 12956 ;; Hardware stack levels required when called:    1
 12957 ;; This function calls:
 12958 ;;		Nothing
 12959 ;; This function is called by:
 12960 ;;		_adc_sample
 12961 ;; This function uses a non-reentrant model
 12962 ;;
 12963                           
 12964                           
 12965                           ;psect for function _adc_init
 12966  19EA                     _adc_init:	
 12967                           
 12968                           ;incstack = 0
 12969                           ; Regs used in _adc_init: [wreg+status,2+status,0]
 12970                           ;adc_init@ch stored from wreg
 12971  19EA  00F4               	movwf	adc_init@ch
 12972  19EB                     l648:	
 12973                           ;sample.c: 135: while (ADCON0bits.GO_nDONE);
 12974                           
 12975  19EB  0021               	movlb	1	; select bank1
 12976  19EC  189D               	btfsc	29,1	;volatile
 12977  19ED  29EB               	goto	l648
 12978                           
 12979                           ;sample.c: 136: ADCON0bits.CHS = ch;
 12980  19EE  0874               	movf	adc_init@ch,w
 12981  19EF  00F3               	movwf	??_adc_init
 12982  19F0  0DF3               	rlf	??_adc_init,f
 12983  19F1  0DF3               	rlf	??_adc_init,f
 12984  19F2  081D               	movf	29,w	;volatile
 12985  19F3  0673               	xorwf	??_adc_init,w
 12986  19F4  3983               	andlw	-125
 12987  19F5  0673               	xorwf	??_adc_init,w
 12988  19F6  009D               	movwf	29	;volatile
 12989                           
 12990                           ;sample.c: 137: ADCON0bits.ADON = 1;
 12991  19F7  141D               	bsf	29,0	;volatile
 12992                           
 12993                           ;sample.c: 138: ADCON1 = 0x63;
 12994  19F8  3063               	movlw	99
 12995  19F9  009E               	movwf	30	;volatile
 12996                           
 12997                           ;sample.c: 139: ADCON2 = 0x00;
 12998  19FA  019F               	clrf	31	;volatile
 12999                           
 13000                           ;sample.c: 140: ADRESL = 0x00;
 13001  19FB  019B               	clrf	27	;volatile
 13002                           
 13003                           ;sample.c: 141: ADRESH = 0x00;
 13004  19FC  019C               	clrf	28	;volatile
 13005  19FD  0008               	return
 13006  19FE                     __end_of_adc_init:	
 13007                           
 13008                           	psect	text41
 13009  1A47                     __ptext41:	
 13010 ;; *************** function _SYSTEM_Initialize *****************
 13011 ;; Defined at:
 13012 ;;		line 70 in file "mcc_generated_files/mcc.c"
 13013 ;; Parameters:    Size  Location     Type
 13014 ;;		None
 13015 ;; Auto vars:     Size  Location     Type
 13016 ;;		None
 13017 ;; Return value:  Size  Location     Type
 13018 ;;                  1    wreg      void 
 13019 ;; Registers used:
 13020 ;;		wreg, status,2, status,0, pclath, cstack
 13021 ;; Tracked objects:
 13022 ;;		On entry : 0/0
 13023 ;;		On exit  : 0/0
 13024 ;;		Unchanged: 0/0
 13025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13030 ;;Total ram usage:        0 bytes
 13031 ;; Hardware stack levels used:    1
 13032 ;; Hardware stack levels required when called:    3
 13033 ;; This function calls:
 13034 ;;		_ADC1_Initialize
 13035 ;;		_EUSART_Initialize
 13036 ;;		_FVR_Initialize
 13037 ;;		_OSCILLATOR_Initialize
 13038 ;;		_PIN_MANAGER_Initialize
 13039 ;;		_PWM1_Initialize
 13040 ;;		_PWM2_Initialize
 13041 ;;		_TMR2_Initialize
 13042 ;;		_WDT_Initialize
 13043 ;; This function is called by:
 13044 ;;		_main
 13045 ;; This function uses a non-reentrant model
 13046 ;;
 13047                           
 13048                           
 13049                           ;psect for function _SYSTEM_Initialize
 13050  1A47                     _SYSTEM_Initialize:	
 13051                           
 13052                           ;mcc.c: 73: PIN_MANAGER_Initialize();
 13053                           
 13054                           ;incstack = 0
 13055                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13056  1A47  319C  24D2  319A   	fcall	_PIN_MANAGER_Initialize
 13057                           
 13058                           ;mcc.c: 74: OSCILLATOR_Initialize();
 13059  1A4A  3188  2003  319A   	fcall	_OSCILLATOR_Initialize
 13060                           
 13061                           ;mcc.c: 75: WDT_Initialize();
 13062  1A4D  3199  2184  319A   	fcall	_WDT_Initialize
 13063                           
 13064                           ;mcc.c: 76: FVR_Initialize();
 13065  1A50  3199  2180  319A   	fcall	_FVR_Initialize
 13066                           
 13067                           ;mcc.c: 77: PWM1_Initialize();
 13068  1A53  319A  2215  319A   	fcall	_PWM1_Initialize
 13069                           
 13070                           ;mcc.c: 78: PWM2_Initialize();
 13071  1A56  319A  222E  319A   	fcall	_PWM2_Initialize
 13072                           
 13073                           ;mcc.c: 79: ADC1_Initialize();
 13074  1A59  3199  2192  319A   	fcall	_ADC1_Initialize
 13075                           
 13076                           ;mcc.c: 80: TMR2_Initialize();
 13077  1A5C  3199  21D7  319A   	fcall	_TMR2_Initialize
 13078                           
 13079                           ;mcc.c: 81: EUSART_Initialize();
 13080  1A5F  3199  21C4         	fcall	_EUSART_Initialize
 13081  1A61  0008               	return
 13082  1A62                     __end_of_SYSTEM_Initialize:	
 13083                           
 13084                           	psect	text42
 13085  1984                     __ptext42:	
 13086 ;; *************** function _WDT_Initialize *****************
 13087 ;; Defined at:
 13088 ;;		line 94 in file "mcc_generated_files/mcc.c"
 13089 ;; Parameters:    Size  Location     Type
 13090 ;;		None
 13091 ;; Auto vars:     Size  Location     Type
 13092 ;;		None
 13093 ;; Return value:  Size  Location     Type
 13094 ;;                  1    wreg      void 
 13095 ;; Registers used:
 13096 ;;		wreg
 13097 ;; Tracked objects:
 13098 ;;		On entry : 0/0
 13099 ;;		On exit  : 0/0
 13100 ;;		Unchanged: 0/0
 13101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13106 ;;Total ram usage:        0 bytes
 13107 ;; Hardware stack levels used:    1
 13108 ;; Hardware stack levels required when called:    1
 13109 ;; This function calls:
 13110 ;;		Nothing
 13111 ;; This function is called by:
 13112 ;;		_SYSTEM_Initialize
 13113 ;; This function uses a non-reentrant model
 13114 ;;
 13115                           
 13116                           
 13117                           ;psect for function _WDT_Initialize
 13118  1984                     _WDT_Initialize:	
 13119                           
 13120                           ;mcc.c: 97: WDTCON = 0x16;
 13121                           
 13122                           ;incstack = 0
 13123                           ; Regs used in _WDT_Initialize: [wreg]
 13124  1984  3016               	movlw	22
 13125  1985  0021               	movlb	1	; select bank1
 13126  1986  0097               	movwf	23	;volatile
 13127  1987  0008               	return
 13128  1988                     __end_of_WDT_Initialize:	
 13129                           
 13130                           	psect	text43
 13131  19D7                     __ptext43:	
 13132 ;; *************** function _TMR2_Initialize *****************
 13133 ;; Defined at:
 13134 ;;		line 63 in file "mcc_generated_files/tmr2.c"
 13135 ;; Parameters:    Size  Location     Type
 13136 ;;		None
 13137 ;; Auto vars:     Size  Location     Type
 13138 ;;		None
 13139 ;; Return value:  Size  Location     Type
 13140 ;;                  1    wreg      void 
 13141 ;; Registers used:
 13142 ;;		wreg, status,2, status,0, pclath, cstack
 13143 ;; Tracked objects:
 13144 ;;		On entry : 0/0
 13145 ;;		On exit  : 0/0
 13146 ;;		Unchanged: 0/0
 13147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13152 ;;Total ram usage:        0 bytes
 13153 ;; Hardware stack levels used:    1
 13154 ;; Hardware stack levels required when called:    2
 13155 ;; This function calls:
 13156 ;;		_TMR2_SetInterruptHandler
 13157 ;;		_TMR2_StartTimer
 13158 ;; This function is called by:
 13159 ;;		_SYSTEM_Initialize
 13160 ;; This function uses a non-reentrant model
 13161 ;;
 13162                           
 13163                           
 13164                           ;psect for function _TMR2_Initialize
 13165  19D7                     _TMR2_Initialize:	
 13166                           
 13167                           ;tmr2.c: 68: T2CON = 0x4B;
 13168                           
 13169                           ;incstack = 0
 13170                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13171  19D7  304B               	movlw	75
 13172  19D8  0020               	movlb	0	; select bank0
 13173  19D9  009C               	movwf	28	;volatile
 13174                           
 13175                           ;tmr2.c: 71: PR2 = 0x7C;
 13176  19DA  307C               	movlw	124
 13177  19DB  009B               	movwf	27	;volatile
 13178                           
 13179                           ;tmr2.c: 74: TMR2 = 0x00;
 13180  19DC  019A               	clrf	26	;volatile
 13181                           
 13182                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
 13183  19DD  1091               	bcf	17,1	;volatile
 13184                           
 13185                           ;tmr2.c: 80: PIE1bits.TMR2IE = 1;
 13186  19DE  0021               	movlb	1	; select bank1
 13187  19DF  1491               	bsf	17,1	;volatile
 13188                           
 13189                           ;tmr2.c: 83: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
 13190  19E0  3000               	movlw	0
 13191  19E1  00F3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 13192  19E2  3000               	movlw	0
 13193  19E3  00F4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 13194  19E4  3199  218C  3199   	fcall	_TMR2_SetInterruptHandler
 13195                           
 13196                           ;tmr2.c: 86: TMR2_StartTimer();
 13197  19E7  3199  217D         	fcall	_TMR2_StartTimer
 13198  19E9  0008               	return
 13199  19EA                     __end_of_TMR2_Initialize:	
 13200                           
 13201                           	psect	text44
 13202  197D                     __ptext44:	
 13203 ;; *************** function _TMR2_StartTimer *****************
 13204 ;; Defined at:
 13205 ;;		line 89 in file "mcc_generated_files/tmr2.c"
 13206 ;; Parameters:    Size  Location     Type
 13207 ;;		None
 13208 ;; Auto vars:     Size  Location     Type
 13209 ;;		None
 13210 ;; Return value:  Size  Location     Type
 13211 ;;                  1    wreg      void 
 13212 ;; Registers used:
 13213 ;;		None
 13214 ;; Tracked objects:
 13215 ;;		On entry : 0/0
 13216 ;;		On exit  : 0/0
 13217 ;;		Unchanged: 0/0
 13218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13223 ;;Total ram usage:        0 bytes
 13224 ;; Hardware stack levels used:    1
 13225 ;; Hardware stack levels required when called:    1
 13226 ;; This function calls:
 13227 ;;		Nothing
 13228 ;; This function is called by:
 13229 ;;		_TMR2_Initialize
 13230 ;; This function uses a non-reentrant model
 13231 ;;
 13232                           
 13233                           
 13234                           ;psect for function _TMR2_StartTimer
 13235  197D                     _TMR2_StartTimer:	
 13236                           
 13237                           ;tmr2.c: 92: T2CONbits.TMR2ON = 1;
 13238                           
 13239                           ;incstack = 0
 13240                           ; Regs used in _TMR2_StartTimer: []
 13241  197D  0020               	movlb	0	; select bank0
 13242  197E  151C               	bsf	28,2	;volatile
 13243  197F  0008               	return
 13244  1980                     __end_of_TMR2_StartTimer:	
 13245                           
 13246                           	psect	text45
 13247  198C                     __ptext45:	
 13248 ;; *************** function _TMR2_SetInterruptHandler *****************
 13249 ;; Defined at:
 13250 ;;		line 142 in file "mcc_generated_files/tmr2.c"
 13251 ;; Parameters:    Size  Location     Type
 13252 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
 13253 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 13254 ;; Auto vars:     Size  Location     Type
 13255 ;;		None
 13256 ;; Return value:  Size  Location     Type
 13257 ;;                  1    wreg      void 
 13258 ;; Registers used:
 13259 ;;		wreg
 13260 ;; Tracked objects:
 13261 ;;		On entry : 0/0
 13262 ;;		On exit  : 0/0
 13263 ;;		Unchanged: 0/0
 13264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13265 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13268 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13269 ;;Total ram usage:        2 bytes
 13270 ;; Hardware stack levels used:    1
 13271 ;; Hardware stack levels required when called:    1
 13272 ;; This function calls:
 13273 ;;		Nothing
 13274 ;; This function is called by:
 13275 ;;		_TMR2_Initialize
 13276 ;; This function uses a non-reentrant model
 13277 ;;
 13278                           
 13279                           
 13280                           ;psect for function _TMR2_SetInterruptHandler
 13281  198C                     _TMR2_SetInterruptHandler:	
 13282                           
 13283                           ;tmr2.c: 143: TMR2_InterruptHandler = InterruptHandler;
 13284                           
 13285                           ;incstack = 0
 13286                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 13287  198C  0874               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 13288  198D  0021               	movlb	1	; select bank1
 13289  198E  00D9               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
 13290  198F  0873               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 13291  1990  00D8               	movwf	_TMR2_InterruptHandler^(0+128)
 13292  1991  0008               	return
 13293  1992                     __end_of_TMR2_SetInterruptHandler:	
 13294                           
 13295                           	psect	text46
 13296  1A2E                     __ptext46:	
 13297 ;; *************** function _PWM2_Initialize *****************
 13298 ;; Defined at:
 13299 ;;		line 58 in file "mcc_generated_files/pwm2.c"
 13300 ;; Parameters:    Size  Location     Type
 13301 ;;		None
 13302 ;; Auto vars:     Size  Location     Type
 13303 ;;		None
 13304 ;; Return value:  Size  Location     Type
 13305 ;;                  1    wreg      void 
 13306 ;; Registers used:
 13307 ;;		wreg, status,2
 13308 ;; Tracked objects:
 13309 ;;		On entry : 0/0
 13310 ;;		On exit  : 0/0
 13311 ;;		Unchanged: 0/0
 13312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13317 ;;Total ram usage:        0 bytes
 13318 ;; Hardware stack levels used:    1
 13319 ;; Hardware stack levels required when called:    1
 13320 ;; This function calls:
 13321 ;;		Nothing
 13322 ;; This function is called by:
 13323 ;;		_SYSTEM_Initialize
 13324 ;; This function uses a non-reentrant model
 13325 ;;
 13326                           
 13327                           
 13328                           ;psect for function _PWM2_Initialize
 13329  1A2E                     _PWM2_Initialize:	
 13330                           
 13331                           ;pwm2.c: 63: PWM2INTE = 0x01;
 13332                           
 13333                           ;incstack = 0
 13334                           ; Regs used in _PWM2_Initialize: [wreg+status,2]
 13335  1A2E  3001               	movlw	1
 13336  1A2F  003B               	movlb	27	; select bank27
 13337  1A30  00AC               	movwf	44	;volatile
 13338                           
 13339                           ;pwm2.c: 66: PWM2INTF = 0x00;
 13340  1A31  01AD               	clrf	45	;volatile
 13341                           
 13342                           ;pwm2.c: 69: PWM2CLKCON = 0x00;
 13343  1A32  01AE               	clrf	46	;volatile
 13344                           
 13345                           ;pwm2.c: 72: PWM2LDCON = 0x00;
 13346  1A33  01AF               	clrf	47	;volatile
 13347                           
 13348                           ;pwm2.c: 75: PWM2OFCON = 0x00;
 13349  1A34  01B0               	clrf	48	;volatile
 13350                           
 13351                           ;pwm2.c: 78: PWM2PHH = 0x00;
 13352  1A35  01A2               	clrf	34	;volatile
 13353                           
 13354                           ;pwm2.c: 81: PWM2PHL = 0x02;
 13355  1A36  3002               	movlw	2
 13356  1A37  00A1               	movwf	33	;volatile
 13357                           
 13358                           ;pwm2.c: 84: PWM2DCH = 0x00;
 13359  1A38  01A4               	clrf	36	;volatile
 13360                           
 13361                           ;pwm2.c: 87: PWM2DCL = 0xA0;
 13362  1A39  30A0               	movlw	160
 13363  1A3A  00A3               	movwf	35	;volatile
 13364                           
 13365                           ;pwm2.c: 90: PWM2PRH = 0x06;
 13366  1A3B  3006               	movlw	6
 13367  1A3C  00A6               	movwf	38	;volatile
 13368                           
 13369                           ;pwm2.c: 93: PWM2PRL = 0x3F;
 13370  1A3D  303F               	movlw	63
 13371  1A3E  00A5               	movwf	37	;volatile
 13372                           
 13373                           ;pwm2.c: 96: PWM2OFH = 0x00;
 13374  1A3F  01A8               	clrf	40	;volatile
 13375                           
 13376                           ;pwm2.c: 99: PWM2OFL = 0x01;
 13377  1A40  3001               	movlw	1
 13378  1A41  00A7               	movwf	39	;volatile
 13379                           
 13380                           ;pwm2.c: 102: PWM2TMRH = 0x00;
 13381  1A42  01AA               	clrf	42	;volatile
 13382                           
 13383                           ;pwm2.c: 105: PWM2TMRL = 0x00;
 13384  1A43  01A9               	clrf	41	;volatile
 13385                           
 13386                           ;pwm2.c: 108: PWM2CON = 0x90;
 13387  1A44  3090               	movlw	144
 13388  1A45  00AB               	movwf	43	;volatile
 13389  1A46  0008               	return
 13390  1A47                     __end_of_PWM2_Initialize:	
 13391                           
 13392                           	psect	text47
 13393  1A15                     __ptext47:	
 13394 ;; *************** function _PWM1_Initialize *****************
 13395 ;; Defined at:
 13396 ;;		line 58 in file "mcc_generated_files/pwm1.c"
 13397 ;; Parameters:    Size  Location     Type
 13398 ;;		None
 13399 ;; Auto vars:     Size  Location     Type
 13400 ;;		None
 13401 ;; Return value:  Size  Location     Type
 13402 ;;                  1    wreg      void 
 13403 ;; Registers used:
 13404 ;;		wreg, status,2
 13405 ;; Tracked objects:
 13406 ;;		On entry : 0/0
 13407 ;;		On exit  : 0/0
 13408 ;;		Unchanged: 0/0
 13409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13414 ;;Total ram usage:        0 bytes
 13415 ;; Hardware stack levels used:    1
 13416 ;; Hardware stack levels required when called:    1
 13417 ;; This function calls:
 13418 ;;		Nothing
 13419 ;; This function is called by:
 13420 ;;		_SYSTEM_Initialize
 13421 ;; This function uses a non-reentrant model
 13422 ;;
 13423                           
 13424                           
 13425                           ;psect for function _PWM1_Initialize
 13426  1A15                     _PWM1_Initialize:	
 13427                           
 13428                           ;pwm1.c: 63: PWM1INTE = 0x01;
 13429                           
 13430                           ;incstack = 0
 13431                           ; Regs used in _PWM1_Initialize: [wreg+status,2]
 13432  1A15  3001               	movlw	1
 13433  1A16  003B               	movlb	27	; select bank27
 13434  1A17  009C               	movwf	28	;volatile
 13435                           
 13436                           ;pwm1.c: 66: PWM1INTF = 0x00;
 13437  1A18  019D               	clrf	29	;volatile
 13438                           
 13439                           ;pwm1.c: 69: PWM1CLKCON = 0x00;
 13440  1A19  019E               	clrf	30	;volatile
 13441                           
 13442                           ;pwm1.c: 72: PWM1LDCON = 0x00;
 13443  1A1A  019F               	clrf	31	;volatile
 13444                           
 13445                           ;pwm1.c: 75: PWM1OFCON = 0x00;
 13446  1A1B  01A0               	clrf	32	;volatile
 13447                           
 13448                           ;pwm1.c: 78: PWM1PHH = 0x00;
 13449  1A1C  0192               	clrf	18	;volatile
 13450                           
 13451                           ;pwm1.c: 81: PWM1PHL = 0x02;
 13452  1A1D  3002               	movlw	2
 13453  1A1E  0091               	movwf	17	;volatile
 13454                           
 13455                           ;pwm1.c: 84: PWM1DCH = 0x00;
 13456  1A1F  0194               	clrf	20	;volatile
 13457                           
 13458                           ;pwm1.c: 87: PWM1DCL = 0xa0;
 13459  1A20  30A0               	movlw	160
 13460  1A21  0093               	movwf	19	;volatile
 13461                           
 13462                           ;pwm1.c: 90: PWM1PRH = 0x06;
 13463  1A22  3006               	movlw	6
 13464  1A23  0096               	movwf	22	;volatile
 13465                           
 13466                           ;pwm1.c: 93: PWM1PRL = 0x3F;
 13467  1A24  303F               	movlw	63
 13468  1A25  0095               	movwf	21	;volatile
 13469                           
 13470                           ;pwm1.c: 96: PWM1OFH = 0x00;
 13471  1A26  0198               	clrf	24	;volatile
 13472                           
 13473                           ;pwm1.c: 99: PWM1OFL = 0x01;
 13474  1A27  3001               	movlw	1
 13475  1A28  0097               	movwf	23	;volatile
 13476                           
 13477                           ;pwm1.c: 102: PWM1TMRH = 0x00;
 13478  1A29  019A               	clrf	26	;volatile
 13479                           
 13480                           ;pwm1.c: 105: PWM1TMRL = 0x00;
 13481  1A2A  0199               	clrf	25	;volatile
 13482                           
 13483                           ;pwm1.c: 108: PWM1CON = 0x90;
 13484  1A2B  3090               	movlw	144
 13485  1A2C  009B               	movwf	27	;volatile
 13486  1A2D  0008               	return
 13487  1A2E                     __end_of_PWM1_Initialize:	
 13488                           
 13489                           	psect	text48
 13490  1CD2                     __ptext48:	
 13491 ;; *************** function _PIN_MANAGER_Initialize *****************
 13492 ;; Defined at:
 13493 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 13494 ;; Parameters:    Size  Location     Type
 13495 ;;		None
 13496 ;; Auto vars:     Size  Location     Type
 13497 ;;  state           1    3[COMMON] unsigned char 
 13498 ;; Return value:  Size  Location     Type
 13499 ;;                  1    wreg      void 
 13500 ;; Registers used:
 13501 ;;		wreg, status,2, status,0
 13502 ;; Tracked objects:
 13503 ;;		On entry : 0/0
 13504 ;;		On exit  : 0/0
 13505 ;;		Unchanged: 0/0
 13506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13508 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13510 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13511 ;;Total ram usage:        1 bytes
 13512 ;; Hardware stack levels used:    1
 13513 ;; Hardware stack levels required when called:    1
 13514 ;; This function calls:
 13515 ;;		Nothing
 13516 ;; This function is called by:
 13517 ;;		_SYSTEM_Initialize
 13518 ;; This function uses a non-reentrant model
 13519 ;;
 13520                           
 13521                           
 13522                           ;psect for function _PIN_MANAGER_Initialize
 13523  1CD2                     _PIN_MANAGER_Initialize:	
 13524                           
 13525                           ;pin_manager.c: 57: LATA = 0x00;
 13526                           
 13527                           ;incstack = 0
 13528                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 13529  1CD2  0022               	movlb	2	; select bank2
 13530  1CD3  018C               	clrf	12	;volatile
 13531                           
 13532                           ;pin_manager.c: 58: LATC = 0x00;
 13533  1CD4  018E               	clrf	14	;volatile
 13534                           
 13535                           ;pin_manager.c: 63: TRISA = 0x0F;
 13536  1CD5  300F               	movlw	15
 13537  1CD6  0021               	movlb	1	; select bank1
 13538  1CD7  008C               	movwf	12	;volatile
 13539                           
 13540                           ;pin_manager.c: 64: TRISC = 0x1f;
 13541  1CD8  301F               	movlw	31
 13542  1CD9  008E               	movwf	14	;volatile
 13543                           
 13544                           ;pin_manager.c: 69: ANSELC = 0x0F;
 13545  1CDA  300F               	movlw	15
 13546  1CDB  0023               	movlb	3	; select bank3
 13547  1CDC  008E               	movwf	14	;volatile
 13548                           
 13549                           ;pin_manager.c: 70: ANSELA = 0x17;
 13550  1CDD  3017               	movlw	23
 13551  1CDE  008C               	movwf	12	;volatile
 13552                           
 13553                           ;pin_manager.c: 75: WPUA = 0x3B;
 13554  1CDF  303B               	movlw	59
 13555  1CE0  0024               	movlb	4	; select bank4
 13556  1CE1  008C               	movwf	12	;volatile
 13557                           
 13558                           ;pin_manager.c: 76: WPUC = 0x30;
 13559  1CE2  3030               	movlw	48
 13560  1CE3  008E               	movwf	14	;volatile
 13561                           
 13562                           ;pin_manager.c: 77: OPTION_REGbits.nWPUEN = 0;
 13563  1CE4  0021               	movlb	1	; select bank1
 13564  1CE5  1395               	bcf	21,7	;volatile
 13565                           
 13566                           ;pin_manager.c: 82: ODCONA = 0x00;
 13567  1CE6  0025               	movlb	5	; select bank5
 13568  1CE7  018C               	clrf	12	;volatile
 13569                           
 13570                           ;pin_manager.c: 83: ODCONC = 0x00;
 13571  1CE8  018E               	clrf	14	;volatile
 13572                           
 13573                           ;pin_manager.c: 85: bool state = (unsigned char)GIE;
 13574  1CE9  3000               	movlw	0
 13575  1CEA  1B8B               	btfsc	11,7	;volatile
 13576  1CEB  3001               	movlw	1
 13577  1CEC  00F3               	movwf	PIN_MANAGER_Initialize@state
 13578                           
 13579                           ;pin_manager.c: 86: GIE = 0;
 13580  1CED  138B               	bcf	11,7	;volatile
 13581                           
 13582                           ;pin_manager.c: 87: PPSLOCK = 0x55;
 13583  1CEE  3055               	movlw	85
 13584  1CEF  003C               	movlb	28	; select bank28
 13585  1CF0  008F               	movwf	15	;volatile
 13586                           
 13587                           ;pin_manager.c: 88: PPSLOCK = 0xAA;
 13588  1CF1  30AA               	movlw	170
 13589  1CF2  008F               	movwf	15	;volatile
 13590                           
 13591                           ;pin_manager.c: 89: PPSLOCKbits.PPSLOCKED = 0x00;
 13592  1CF3  100F               	bcf	15,0	;volatile
 13593                           
 13594                           ;pin_manager.c: 91: RXPPSbits.RXPPS = 0x14;
 13595  1CF4  0815               	movf	21,w	;volatile
 13596  1CF5  39E0               	andlw	-32
 13597  1CF6  3814               	iorlw	20
 13598  1CF7  0095               	movwf	21	;volatile
 13599                           
 13600                           ;pin_manager.c: 92: RA4PPSbits.RA4PPS = 0x04;
 13601  1CF8  003D               	movlb	29	; select bank29
 13602  1CF9  0814               	movf	20,w	;volatile
 13603  1CFA  39F0               	andlw	-16
 13604  1CFB  3804               	iorlw	4
 13605  1CFC  0094               	movwf	20	;volatile
 13606                           
 13607                           ;pin_manager.c: 93: RA5PPSbits.RA5PPS = 0x03;
 13608  1CFD  0815               	movf	21,w	;volatile
 13609  1CFE  39F0               	andlw	-16
 13610  1CFF  3803               	iorlw	3
 13611  1D00  0095               	movwf	21	;volatile
 13612                           
 13613                           ;pin_manager.c: 94: RC5PPSbits.RC5PPS = 0x09;
 13614  1D01  0825               	movf	37,w	;volatile
 13615  1D02  39F0               	andlw	-16
 13616  1D03  3809               	iorlw	9
 13617  1D04  00A5               	movwf	37	;volatile
 13618                           
 13619                           ;pin_manager.c: 96: PPSLOCK = 0x55;
 13620  1D05  3055               	movlw	85
 13621  1D06  003C               	movlb	28	; select bank28
 13622  1D07  008F               	movwf	15	;volatile
 13623                           
 13624                           ;pin_manager.c: 97: PPSLOCK = 0xAA;
 13625  1D08  30AA               	movlw	170
 13626  1D09  008F               	movwf	15	;volatile
 13627                           
 13628                           ;pin_manager.c: 98: PPSLOCKbits.PPSLOCKED = 0x01;
 13629  1D0A  140F               	bsf	15,0	;volatile
 13630                           
 13631                           ;pin_manager.c: 100: GIE = state;
 13632  1D0B  1C73               	btfss	PIN_MANAGER_Initialize@state,0
 13633  1D0C  2D0F               	goto	u2460
 13634  1D0D  178B               	bsf	11,7	;volatile
 13635  1D0E  0008               	return
 13636  1D0F                     u2460:	
 13637  1D0F  138B               	bcf	11,7	;volatile
 13638  1D10  0008               	return
 13639  1D11                     __end_of_PIN_MANAGER_Initialize:	
 13640                           
 13641                           	psect	text49
 13642  0803                     __ptext49:	
 13643 ;; *************** function _OSCILLATOR_Initialize *****************
 13644 ;; Defined at:
 13645 ;;		line 84 in file "mcc_generated_files/mcc.c"
 13646 ;; Parameters:    Size  Location     Type
 13647 ;;		None
 13648 ;; Auto vars:     Size  Location     Type
 13649 ;;		None
 13650 ;; Return value:  Size  Location     Type
 13651 ;;                  1    wreg      void 
 13652 ;; Registers used:
 13653 ;;		None
 13654 ;; Tracked objects:
 13655 ;;		On entry : 0/0
 13656 ;;		On exit  : 0/0
 13657 ;;		Unchanged: 0/0
 13658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13663 ;;Total ram usage:        0 bytes
 13664 ;; Hardware stack levels used:    1
 13665 ;; Hardware stack levels required when called:    1
 13666 ;; This function calls:
 13667 ;;		Nothing
 13668 ;; This function is called by:
 13669 ;;		_SYSTEM_Initialize
 13670 ;; This function uses a non-reentrant model
 13671 ;;
 13672                           
 13673                           
 13674                           ;psect for function _OSCILLATOR_Initialize
 13675  0803                     _OSCILLATOR_Initialize:	
 13676                           
 13677                           ;incstack = 0
 13678                           ; Regs used in _OSCILLATOR_Initialize: []
 13679  0803  0008               	return
 13680  0804                     __end_of_OSCILLATOR_Initialize:	
 13681                           
 13682                           	psect	text50
 13683  1980                     __ptext50:	
 13684 ;; *************** function _FVR_Initialize *****************
 13685 ;; Defined at:
 13686 ;;		line 57 in file "mcc_generated_files/fvr.c"
 13687 ;; Parameters:    Size  Location     Type
 13688 ;;		None
 13689 ;; Auto vars:     Size  Location     Type
 13690 ;;		None
 13691 ;; Return value:  Size  Location     Type
 13692 ;;                  1    wreg      void 
 13693 ;; Registers used:
 13694 ;;		wreg
 13695 ;; Tracked objects:
 13696 ;;		On entry : 0/0
 13697 ;;		On exit  : 0/0
 13698 ;;		Unchanged: 0/0
 13699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13704 ;;Total ram usage:        0 bytes
 13705 ;; Hardware stack levels used:    1
 13706 ;; Hardware stack levels required when called:    1
 13707 ;; This function calls:
 13708 ;;		Nothing
 13709 ;; This function is called by:
 13710 ;;		_SYSTEM_Initialize
 13711 ;; This function uses a non-reentrant model
 13712 ;;
 13713                           
 13714                           
 13715                           ;psect for function _FVR_Initialize
 13716  1980                     _FVR_Initialize:	
 13717                           
 13718                           ;fvr.c: 60: FVRCON = 0x81;
 13719                           
 13720                           ;incstack = 0
 13721                           ; Regs used in _FVR_Initialize: [wreg]
 13722  1980  3081               	movlw	129
 13723  1981  0022               	movlb	2	; select bank2
 13724  1982  0097               	movwf	23	;volatile
 13725  1983  0008               	return
 13726  1984                     __end_of_FVR_Initialize:	
 13727                           
 13728                           	psect	text51
 13729  19C4                     __ptext51:	
 13730 ;; *************** function _EUSART_Initialize *****************
 13731 ;; Defined at:
 13732 ;;		line 55 in file "mcc_generated_files/eusart.c"
 13733 ;; Parameters:    Size  Location     Type
 13734 ;;		None
 13735 ;; Auto vars:     Size  Location     Type
 13736 ;;		None
 13737 ;; Return value:  Size  Location     Type
 13738 ;;                  1    wreg      void 
 13739 ;; Registers used:
 13740 ;;		wreg
 13741 ;; Tracked objects:
 13742 ;;		On entry : 0/0
 13743 ;;		On exit  : 0/0
 13744 ;;		Unchanged: 0/0
 13745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13750 ;;Total ram usage:        0 bytes
 13751 ;; Hardware stack levels used:    1
 13752 ;; Hardware stack levels required when called:    1
 13753 ;; This function calls:
 13754 ;;		Nothing
 13755 ;; This function is called by:
 13756 ;;		_SYSTEM_Initialize
 13757 ;; This function uses a non-reentrant model
 13758 ;;
 13759                           
 13760                           
 13761                           ;psect for function _EUSART_Initialize
 13762  19C4                     _EUSART_Initialize:	
 13763                           
 13764                           ;eusart.c: 58: PIE1bits.RCIE = 0;
 13765                           
 13766                           ;incstack = 0
 13767                           ; Regs used in _EUSART_Initialize: [wreg]
 13768  19C4  0021               	movlb	1	; select bank1
 13769  19C5  1291               	bcf	17,5	;volatile
 13770                           
 13771                           ;eusart.c: 59: PIE1bits.TXIE = 0;
 13772  19C6  1211               	bcf	17,4	;volatile
 13773                           
 13774                           ;eusart.c: 61: BAUDCON = 0x08;
 13775  19C7  3008               	movlw	8
 13776  19C8  0023               	movlb	3	; select bank3
 13777  19C9  009F               	movwf	31	;volatile
 13778                           
 13779                           ;eusart.c: 64: RCSTA = 0x90;
 13780  19CA  3090               	movlw	144
 13781  19CB  009D               	movwf	29	;volatile
 13782                           
 13783                           ;eusart.c: 67: TXSTA = 0x24;
 13784  19CC  3024               	movlw	36
 13785  19CD  009E               	movwf	30	;volatile
 13786                           
 13787                           ;eusart.c: 71: SPBRGL = 0xA0;
 13788  19CE  30A0               	movlw	160
 13789  19CF  009B               	movwf	27	;volatile
 13790                           
 13791                           ;eusart.c: 76: SPBRGH = 0x01;
 13792  19D0  3001               	movlw	1
 13793  19D1  009C               	movwf	28	;volatile
 13794                           
 13795                           ;eusart.c: 77: PIE1bits.RCIE = 1;
 13796  19D2  0021               	movlb	1	; select bank1
 13797  19D3  1691               	bsf	17,5	;volatile
 13798                           
 13799                           ;eusart.c: 78: PIR1bits.TXIF=0;
 13800  19D4  0020               	movlb	0	; select bank0
 13801  19D5  1211               	bcf	17,4	;volatile
 13802  19D6  0008               	return
 13803  19D7                     __end_of_EUSART_Initialize:	
 13804                           
 13805                           	psect	text52
 13806  1992                     __ptext52:	
 13807 ;; *************** function _ADC1_Initialize *****************
 13808 ;; Defined at:
 13809 ;;		line 64 in file "mcc_generated_files/adc1.c"
 13810 ;; Parameters:    Size  Location     Type
 13811 ;;		None
 13812 ;; Auto vars:     Size  Location     Type
 13813 ;;		None
 13814 ;; Return value:  Size  Location     Type
 13815 ;;                  1    wreg      void 
 13816 ;; Registers used:
 13817 ;;		wreg, status,2
 13818 ;; Tracked objects:
 13819 ;;		On entry : 0/0
 13820 ;;		On exit  : 0/0
 13821 ;;		Unchanged: 0/0
 13822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13827 ;;Total ram usage:        0 bytes
 13828 ;; Hardware stack levels used:    1
 13829 ;; Hardware stack levels required when called:    1
 13830 ;; This function calls:
 13831 ;;		Nothing
 13832 ;; This function is called by:
 13833 ;;		_SYSTEM_Initialize
 13834 ;; This function uses a non-reentrant model
 13835 ;;
 13836                           
 13837                           
 13838                           ;psect for function _ADC1_Initialize
 13839  1992                     _ADC1_Initialize:	
 13840                           
 13841                           ;adc1.c: 69: ADCON0 = 0x01;
 13842                           
 13843                           ;incstack = 0
 13844                           ; Regs used in _ADC1_Initialize: [wreg+status,2]
 13845  1992  3001               	movlw	1
 13846  1993  0021               	movlb	1	; select bank1
 13847  1994  009D               	movwf	29	;volatile
 13848                           
 13849                           ;adc1.c: 72: ADCON1 = 0x63;
 13850  1995  3063               	movlw	99
 13851  1996  009E               	movwf	30	;volatile
 13852                           
 13853                           ;adc1.c: 75: ADCON2 = 0x00;
 13854  1997  019F               	clrf	31	;volatile
 13855                           
 13856                           ;adc1.c: 78: ADRESL = 0x00;
 13857  1998  019B               	clrf	27	;volatile
 13858                           
 13859                           ;adc1.c: 81: ADRESH = 0x00;
 13860  1999  019C               	clrf	28	;volatile
 13861  199A  0008               	return
 13862  199B                     __end_of_ADC1_Initialize:	
 13863                           
 13864                           	psect	intentry
 13865  0804                     __pintentry:	
 13866 ;; *************** function _INTERRUPT_InterruptManager *****************
 13867 ;; Defined at:
 13868 ;;		line 55 in file "mcc_generated_files/interrupt_manager.c"
 13869 ;; Parameters:    Size  Location     Type
 13870 ;;		None
 13871 ;; Auto vars:     Size  Location     Type
 13872 ;;  t8              1    2[COMMON] unsigned char 
 13873 ;; Return value:  Size  Location     Type
 13874 ;;                  1    wreg      void 
 13875 ;; Registers used:
 13876 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13877 ;; Tracked objects:
 13878 ;;		On entry : 0/0
 13879 ;;		On exit  : 0/0
 13880 ;;		Unchanged: 0/0
 13881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13883 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13884 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13885 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13886 ;;Total ram usage:        3 bytes
 13887 ;; Hardware stack levels used:    1
 13888 ;; This function calls:
 13889 ;;		Nothing
 13890 ;; This function is called by:
 13891 ;;		Interrupt level 1
 13892 ;; This function uses a non-reentrant model
 13893 ;;
 13894                           
 13895  0804                     _INTERRUPT_InterruptManager:	
 13896                           
 13897                           ;incstack = 0
 13898  0804  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 13899                           
 13900                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0]
 13901  0805  3188               	pagesel	$
 13902  0806  0020               	movlb	0	; select bank0
 13903  0807  087F               	movf	127,w
 13904  0808  00F1               	movwf	??_INTERRUPT_InterruptManager+1
 13905                           
 13906                           ;interrupt_manager.c: 58: uint8_t t8;
 13907                           ;interrupt_manager.c: 59: if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bits.TM
      +                          R2IF == 1)
 13908  0809  1F0B               	btfss	11,6	;volatile
 13909  080A  2839               	goto	i1l4609
 13910  080B  0021               	movlb	1	; select bank1
 13911  080C  1C91               	btfss	17,1	;volatile
 13912  080D  2839               	goto	i1l4609
 13913  080E  0020               	movlb	0	; select bank0
 13914  080F  1C91               	btfss	17,1	;volatile
 13915  0810  2839               	goto	i1l4609
 13916                           
 13917                           ;interrupt_manager.c: 60: {
 13918                           ;interrupt_manager.c: 62: PIR1bits.TMR2IF = 0;
 13919  0811  1091               	bcf	17,1	;volatile
 13920                           
 13921                           ;interrupt_manager.c: 63: Event |= (1<<1);
 13922  0812  14EB               	bsf	_Event,1	;volatile
 13923                           
 13924                           ;interrupt_manager.c: 64: subTickerX++;
 13925  0813  3001               	movlw	1
 13926  0814  00F0               	movwf	??_INTERRUPT_InterruptManager
 13927  0815  0870               	movf	??_INTERRUPT_InterruptManager,w
 13928  0816  07F8               	addwf	_subTickerX,f
 13929                           
 13930                           ;interrupt_manager.c: 65: subTickerX_1s++;
 13931  0817  3001               	movlw	1
 13932  0818  00F0               	movwf	??_INTERRUPT_InterruptManager
 13933  0819  0870               	movf	??_INTERRUPT_InterruptManager,w
 13934  081A  07EA               	addwf	_subTickerX_1s,f
 13935                           
 13936                           ;interrupt_manager.c: 66: if(subTickerX>=5){
 13937  081B  3005               	movlw	5
 13938  081C  0278               	subwf	_subTickerX,w
 13939  081D  1C03               	skipc
 13940  081E  2821               	goto	i1l4591
 13941                           
 13942                           ;interrupt_manager.c: 67: subTickerX=0;
 13943  081F  01F8               	clrf	_subTickerX
 13944                           
 13945                           ;interrupt_manager.c: 68: Event |= (1<<2);
 13946  0820  156B               	bsf	_Event,2	;volatile
 13947  0821                     i1l4591:	
 13948                           
 13949                           ;interrupt_manager.c: 69: }
 13950                           ;interrupt_manager.c: 70: if(subTickerX_1s>=50){
 13951  0821  3032               	movlw	50
 13952  0822  026A               	subwf	_subTickerX_1s,w
 13953  0823  1C03               	skipc
 13954  0824  2827               	goto	i1l4597
 13955                           
 13956                           ;interrupt_manager.c: 71: subTickerX_1s=0;
 13957  0825  01EA               	clrf	_subTickerX_1s
 13958                           
 13959                           ;interrupt_manager.c: 72: Event |= (1<<3);
 13960  0826  15EB               	bsf	_Event,3	;volatile
 13961  0827                     i1l4597:	
 13962                           
 13963                           ;interrupt_manager.c: 73: }
 13964                           ;interrupt_manager.c: 75: if(eusartRxIdleTime_ms){
 13965  0827  087A               	movf	_eusartRxIdleTime_ms,w	;volatile
 13966  0828  1903               	btfsc	3,2
 13967  0829  2834               	goto	i1l4607
 13968                           
 13969                           ;interrupt_manager.c: 76: eusartRxIdleTime_ms++;
 13970  082A  3001               	movlw	1
 13971  082B  00F0               	movwf	??_INTERRUPT_InterruptManager
 13972  082C  0870               	movf	??_INTERRUPT_InterruptManager,w
 13973  082D  07FA               	addwf	_eusartRxIdleTime_ms,f	;volatile
 13974                           
 13975                           ;interrupt_manager.c: 77: if(eusartRxIdleTime_ms>5){
 13976  082E  3006               	movlw	6
 13977  082F  027A               	subwf	_eusartRxIdleTime_ms,w	;volatile
 13978  0830  1C03               	skipc
 13979  0831  2834               	goto	i1l4607
 13980                           
 13981                           ;interrupt_manager.c: 78: Event|=(1<<0);
 13982  0832  146B               	bsf	_Event,0	;volatile
 13983                           
 13984                           ;interrupt_manager.c: 79: eusartRxIdleTime_ms=0;
 13985  0833  01FA               	clrf	_eusartRxIdleTime_ms	;volatile
 13986  0834                     i1l4607:	
 13987                           
 13988                           ;interrupt_manager.c: 80: }
 13989                           ;interrupt_manager.c: 81: }
 13990                           ;interrupt_manager.c: 82: globalTicker++;
 13991  0834  3001               	movlw	1
 13992  0835  0021               	movlb	1	; select bank1
 13993  0836  07D6               	addwf	_globalTicker^(0+128),f	;volatile
 13994  0837  3000               	movlw	0
 13995  0838  3DD7               	addwfc	(_globalTicker+1)^(0+128),f	;volatile
 13996  0839                     i1l4609:	
 13997                           
 13998                           ;interrupt_manager.c: 83: }
 13999                           ;interrupt_manager.c: 84: if(INTCONbits.PEIE == 1 && PIE1bits.RCIE == 1 && PIR1bits.RCIF
      +                           == 1)
 14000  0839  1F0B               	btfss	11,6	;volatile
 14001  083A  2860               	goto	i1l4627
 14002  083B  0021               	movlb	1	; select bank1
 14003  083C  1E91               	btfss	17,5	;volatile
 14004  083D  2860               	goto	i1l4627
 14005  083E  0020               	movlb	0	; select bank0
 14006  083F  1E91               	btfss	17,5	;volatile
 14007  0840  2860               	goto	i1l4627
 14008                           
 14009                           ;interrupt_manager.c: 85: {
 14010                           ;interrupt_manager.c: 87: PIR1bits.RCIF=0;
 14011  0841  1291               	bcf	17,5	;volatile
 14012                           
 14013                           ;interrupt_manager.c: 88: if(1 == RCSTAbits.OERR){
 14014  0842  0023               	movlb	3	; select bank3
 14015  0843  1C9D               	btfss	29,1	;volatile
 14016  0844  2847               	goto	i1l4619
 14017                           
 14018                           ;interrupt_manager.c: 89: RCSTAbits.CREN = 0;
 14019  0845  121D               	bcf	29,4	;volatile
 14020                           
 14021                           ;interrupt_manager.c: 90: RCSTAbits.CREN = 1;
 14022  0846  161D               	bsf	29,4	;volatile
 14023  0847                     i1l4619:	
 14024                           
 14025                           ;interrupt_manager.c: 91: }
 14026                           ;interrupt_manager.c: 92: t8=RCREG;
 14027  0847  0819               	movf	25,w	;volatile
 14028  0848  00F0               	movwf	??_INTERRUPT_InterruptManager
 14029  0849  0870               	movf	??_INTERRUPT_InterruptManager,w
 14030  084A  00F2               	movwf	INTERRUPT_InterruptManager@t8
 14031                           
 14032                           ;interrupt_manager.c: 93: if(eusartRxCount<60){
 14033  084B  303C               	movlw	60
 14034  084C  0279               	subwf	_eusartRxCount,w	;volatile
 14035  084D  1803               	skipnc
 14036  084E  285C               	goto	i1l4625
 14037                           
 14038                           ;interrupt_manager.c: 94: eusartRxBuffer[eusartRxCount]=t8;
 14039  084F  0872               	movf	INTERRUPT_InterruptManager@t8,w
 14040  0850  00F0               	movwf	??_INTERRUPT_InterruptManager
 14041  0851  0879               	movf	_eusartRxCount,w
 14042  0852  3E20               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 14043  0853  0086               	movwf	6
 14044  0854  3001               	movlw	1	; select bank2/3
 14045  0855  0087               	movwf	7
 14046  0856  0870               	movf	??_INTERRUPT_InterruptManager,w
 14047  0857  0081               	movwf	1
 14048                           
 14049                           ;interrupt_manager.c: 95: eusartRxCount++;
 14050  0858  3001               	movlw	1
 14051  0859  00F0               	movwf	??_INTERRUPT_InterruptManager
 14052  085A  0870               	movf	??_INTERRUPT_InterruptManager,w
 14053  085B  07F9               	addwf	_eusartRxCount,f	;volatile
 14054  085C                     i1l4625:	
 14055                           
 14056                           ;interrupt_manager.c: 97: }
 14057                           ;interrupt_manager.c: 98: eusartRxIdleTime_ms=1;
 14058  085C  3001               	movlw	1
 14059  085D  00F0               	movwf	??_INTERRUPT_InterruptManager
 14060  085E  0870               	movf	??_INTERRUPT_InterruptManager,w
 14061  085F  00FA               	movwf	_eusartRxIdleTime_ms	;volatile
 14062  0860                     i1l4627:	
 14063                           
 14064                           ;interrupt_manager.c: 99: }
 14065                           ;interrupt_manager.c: 101: if( PIR1bits.TXIF == 1)
 14066  0860  0020               	movlb	0	; select bank0
 14067  0861  1A11               	btfsc	17,4	;volatile
 14068                           
 14069                           ;interrupt_manager.c: 102: {
 14070                           ;interrupt_manager.c: 103: PIR1bits.TXIF=0;
 14071  0862  1211               	bcf	17,4	;volatile
 14072                           
 14073                           ;interrupt_manager.c: 104: }
 14074                           ;interrupt_manager.c: 106: if(INTCONbits.PEIE == 1 && PIE3bits.PWM2IE == 1 && PIR3bits.P
      +                          WM2IF == 1){
 14075  0863  1F0B               	btfss	11,6	;volatile
 14076  0864  2878               	goto	i1l4643
 14077  0865  0021               	movlb	1	; select bank1
 14078  0866  1E93               	btfss	19,5	;volatile
 14079  0867  2878               	goto	i1l4643
 14080  0868  0020               	movlb	0	; select bank0
 14081  0869  1E93               	btfss	19,5	;volatile
 14082  086A  2878               	goto	i1l4643
 14083                           
 14084                           ;interrupt_manager.c: 108: PIR3bits.PWM2IF = 0;
 14085  086B  1293               	bcf	19,5	;volatile
 14086                           
 14087                           ;interrupt_manager.c: 109: if(PWM2INTFbits.PRIF){
 14088  086C  003B               	movlb	27	; select bank27
 14089  086D  1C2D               	btfss	45,0	;volatile
 14090  086E  2878               	goto	i1l4643
 14091                           
 14092                           ;interrupt_manager.c: 110: PWM2INTFbits.PRIF=0;
 14093  086F  102D               	bcf	45,0	;volatile
 14094                           
 14095                           ;interrupt_manager.c: 111: PWM2DCH = (uint8_t)(pwm2DutyForVout>>8);
 14096  0870  0021               	movlb	1	; select bank1
 14097  0871  0869               	movf	(_pwm2DutyForVout+1)^(0+128),w
 14098  0872  003B               	movlb	27	; select bank27
 14099  0873  00A4               	movwf	36	;volatile
 14100                           
 14101                           ;interrupt_manager.c: 112: PWM2DCL = (uint8_t)(pwm2DutyForVout & 0xff);
 14102  0874  0021               	movlb	1	; select bank1
 14103  0875  0868               	movf	_pwm2DutyForVout^(0+128),w
 14104  0876  003B               	movlb	27	; select bank27
 14105  0877  00A3               	movwf	35	;volatile
 14106  0878                     i1l4643:	
 14107                           
 14108                           ;interrupt_manager.c: 113: }
 14109                           ;interrupt_manager.c: 114: }
 14110                           ;interrupt_manager.c: 115: if(INTCONbits.PEIE == 1 && PIE3bits.PWM1IE == 1 && PIR3bits.P
      +                          WM1IF == 1){
 14111  0878  1F0B               	btfss	11,6	;volatile
 14112  0879  288D               	goto	i1l314
 14113  087A  0021               	movlb	1	; select bank1
 14114  087B  1E13               	btfss	19,4	;volatile
 14115  087C  288D               	goto	i1l314
 14116  087D  0020               	movlb	0	; select bank0
 14117  087E  1E13               	btfss	19,4	;volatile
 14118  087F  288D               	goto	i1l314
 14119                           
 14120                           ;interrupt_manager.c: 116: PIR3bits.PWM1IF = 0;
 14121  0880  1213               	bcf	19,4	;volatile
 14122                           
 14123                           ;interrupt_manager.c: 117: if(PWM1INTFbits.PRIF){
 14124  0881  003B               	movlb	27	; select bank27
 14125  0882  1C1D               	btfss	29,0	;volatile
 14126  0883  288D               	goto	i1l314
 14127                           
 14128                           ;interrupt_manager.c: 118: PWM1INTFbits.PRIF=0;
 14129  0884  101D               	bcf	29,0	;volatile
 14130                           
 14131                           ;interrupt_manager.c: 119: PWM1DCH = (uint8_t)(pwm1DutyForIdrv>>8);
 14132  0885  0021               	movlb	1	; select bank1
 14133  0886  0867               	movf	(_pwm1DutyForIdrv+1)^(0+128),w
 14134  0887  003B               	movlb	27	; select bank27
 14135  0888  0094               	movwf	20	;volatile
 14136                           
 14137                           ;interrupt_manager.c: 120: PWM1DCL = (uint8_t)(pwm1DutyForIdrv&0xff);
 14138  0889  0021               	movlb	1	; select bank1
 14139  088A  0866               	movf	_pwm1DutyForIdrv^(0+128),w
 14140  088B  003B               	movlb	27	; select bank27
 14141  088C  0093               	movwf	19	;volatile
 14142  088D                     i1l314:	
 14143                           ;interrupt_manager.c: 126: else
 14144                           ;interrupt_manager.c: 127: {
 14145                           
 14146                           ;interrupt_manager.c: 121: }
 14147                           ;interrupt_manager.c: 122: }
 14148                           
 14149  088D  0871               	movf	??_INTERRUPT_InterruptManager+1,w
 14150  088E  0020               	movlb	0	; select bank0
 14151  088F  00FF               	movwf	127
 14152  0890  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 14153  0891  0009               	retfie
 14154  0892                     __end_of_INTERRUPT_InterruptManager:	
 14155  007E                     btemp	set	126	;btemp
 14156  007E                     int$flags	set	126
 14157  007E                     wtemp0	set	126


Data Sizes:
    Strings     10
    Constant    17
    Data        20
    BSS         213
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     60      80
    BANK1            80      2      76
    BANK2            80      0      76
    BANK3            80      0      60
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           60      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    crc_append@message	PTR unsigned char  size(2) Largest target is 132
		 -> modbusBuf(BANK3[60]), sysData(BIGRAM[132]), 

    crc_verify@message	PTR unsigned char  size(2) Largest target is 132
		 -> modbusBuf(BANK3[60]), sysData(BIGRAM[132]), 

    crc_sum@buf	PTR unsigned char  size(2) Largest target is 132
		 -> modbusBuf(BANK3[60]), sysData(BIGRAM[132]), 

    m_mem_cpy_len@s	PTR unsigned char  size(2) Largest target is 132
		 -> modbusBuf(BANK3[60]), sysData(BIGRAM[132]), eusartRxBuffer(BANK2[60]), 

    m_mem_cpy_len@d	PTR unsigned char  size(2) Largest target is 60
		 -> crc_verify@expected(BANK0[2]), modbusBuf(BANK3[60]), 

    m_mem_cpy@s	PTR unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[10]), 

    m_mem_cpy@d	PTR unsigned char  size(1) Largest target is 16
		 -> str(BANK2[16]), 

    modbus_response_process@rbuf	PTR unsigned char  size(1) Largest target is 60
		 -> modbusBuf(BANK3[60]), 

    modbus_response_process@pmdbs	PTR struct . size(1) Largest target is 60
		 -> modbusBuf(BANK3[60]), 

    modbus_response_command@rbuf	PTR unsigned char  size(1) Largest target is 60
		 -> modbusBuf(BANK3[60]), 

    modbus_response_command@pmdbs	PTR struct . size(1) Largest target is 60
		 -> modbusBuf(BANK3[60]), 

    modbus_response_write_mult_register@rbuf	PTR unsigned char  size(1) Largest target is 60
		 -> modbusBuf(BANK3[60]), 

    modbus_response_write_mult_register@stb	PTR struct . size(1) Largest target is 60
		 -> modbusBuf(BANK3[60]), 

    modbus_response_write_single_register@rbuf	PTR unsigned char  size(1) Largest target is 60
		 -> modbusBuf(BANK3[60]), 

    modbus_response_write_single_register@pmdbs	PTR struct . size(1) Largest target is 60
		 -> modbusBuf(BANK3[60]), 

    getRegisterVal@tempData	PTR unsigned int  size(1) Largest target is 2
		 -> modbus_response_command@tempData(BANK0[2]), 

    modbus_response_illgeal_function@buf	PTR unsigned char  size(1) Largest target is 60
		 -> modbusBuf(BANK3[60]), 

    modbus_response_illgeal_function@pmdbs	PTR struct . size(1) Largest target is 60
		 -> modbusBuf(BANK3[60]), 

    my_flash_system_write@buf	PTR unsigned char  size(2) Largest target is 132
		 -> sysData(BIGRAM[132]), 

    my_flash_system_read@buf	PTR unsigned char  size(2) Largest target is 132
		 -> sysData(BIGRAM[132]), 

    uart_send_len@buf	PTR unsigned char  size(1) Largest target is 60
		 -> modbusBuf(BANK3[60]), 

    uart_send_str@str	PTR unsigned char  size(1) Largest target is 16
		 -> str(BANK2[16]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_adc_sample
    _sys_data_init->___wmul
    _sys_data_init->_my_flash_system_read
    _pid_pwm2_vout_run->___awdiv
    _pid_pwm2_vout_run->___lwdiv
    _set_vout_pwm2_duty->_get_vout_pwm2_duty
    _pid_pwm1_idrv_run->___aldiv
    _pid_pwm1_idrv_b_b->___aldiv
    _pid_pwm1_idrv_b_b->___lwdiv
    _set_idrv_pwm1_duty->_get_idrv_pwm1_duty
    ___lwdiv->___wmul
    _modbus_response_process->_modbus_response_illgeal_function
    _modbus_response_process->_modbus_response_write_mult_register
    _modbus_response_write_single_register->_uart_send_len
    _modbus_response_write_mult_register->_uart_send_len
    _sys_data_save->_my_flash_system_write
    _my_flash_read_system_erase->_FLASH_EraseBlock
    _modbus_response_illgeal_function->_uart_send_len
    _modbus_response_command->_uart_send_len
    _crc_append->_crc_sum
    _crc_verify->_crc_sum
    _calc_temp_rs->___lmul
    _calc_temp_rc->___lmul
    _calc_rs_lo_avg->___lldiv
    _calc_expect_vout_adc_value->___aldiv
    ___aldiv->___lmul
    _adc_sample->_fvr_set_gain
    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_calc_expect_vout_adc_value
    _pid_pwm2_vout_run->___lwdiv
    _set_vout_pwm2_duty->_get_vout_pwm2_duty
    _pid_pwm1_idrv_run->___aldiv
    _pid_pwm1_idrv_b_b->___aldiv
    _set_idrv_pwm1_duty->_get_idrv_pwm1_duty
    ___lwdiv->___wmul
    _modbus_response_process->_modbus_response_command
    _modbus_response_process->_modbus_response_write_single_register
    _modbus_response_write_single_register->_crc_append
    _modbus_response_write_mult_register->_crc_append
    _sys_data_save->_crc_append
    _modbus_response_illgeal_function->_crc_append
    _modbus_response_command->_crc_append
    _crc_append->_crc_sum
    _crc_verify->_crc_sum
    _calc_temp_rs->___lldiv
    _calc_temp_rc->___lldiv
    _calc_rs_lo_avg->___lldiv
    _calc_expect_vout_adc_value->___aldiv
    ___aldiv->___lmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   55460
                                              0 BANK1      2     2      0
                  _SYSTEM_Initialize
                         _adc_sample
         _calc_expect_vout_adc_value
                     _calc_rs_lo_avg
                       _calc_temp_rc
                       _calc_temp_rs
                          _m_mem_cpy
                      _m_mem_cpy_len
            _modbus_response_process
                  _pid_pwm1_idrv_b_b
                  _pid_pwm1_idrv_run
                  _pid_pwm2_vout_run
                      _sys_data_init
                      _sys_data_save
                _uart_received_start
                      _uart_send_len
                      _uart_send_str
 ---------------------------------------------------------------------------------
 (1) _uart_send_str                                        2     2      0      75
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _uart_received_start                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sys_data_init                                       10    10      0    5692
                                             19 BANK0     10    10      0
                             ___wmul
                         _crc_verify
               _my_flash_system_read
                      _sys_data_save
 ---------------------------------------------------------------------------------
 (2) _my_flash_system_read                                11     7      4     386
                                              3 COMMON     4     0      4
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _pid_pwm2_vout_run                                    6     6      0    1552
                                              9 BANK0      6     6      0
                            ___awdiv
                            ___lwdiv
                 _set_vout_pwm2_duty
 ---------------------------------------------------------------------------------
 (2) _set_vout_pwm2_duty                                   4     2      2     275
                                              2 BANK0      4     2      2
                 _get_vout_pwm2_duty
 ---------------------------------------------------------------------------------
 (3) _get_vout_pwm2_duty                                   6     4      2      40
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     428
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _pid_pwm1_idrv_run                                   24    24      0    4442
                                             22 BANK0     20    20      0
                            ___aldiv
                             ___lmul
                 _set_idrv_pwm1_duty
 ---------------------------------------------------------------------------------
 (1) _pid_pwm1_idrv_b_b                                   12    12      0    5534
                                             22 BANK0     12    12      0
                            ___aldiv
                             ___lmul
                            ___lwdiv
                             ___wmul
                 _set_idrv_pwm1_duty
 ---------------------------------------------------------------------------------
 (2) _set_idrv_pwm1_duty                                   4     2      2     506
                                              2 BANK0      4     2      2
                 _get_idrv_pwm1_duty
 ---------------------------------------------------------------------------------
 (3) _get_idrv_pwm1_duty                                   6     4      2      40
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     598
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     546
                                              7 COMMON     1     1      0
                                              2 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _modbus_response_process                              6     4      2   20659
                                             32 BANK0      6     4      2
                         _crc_verify
            _modbus_response_command
   _modbus_response_illgeal_function
_modbus_response_write_mult_register
_modbus_response_write_single_regist
 ---------------------------------------------------------------------------------
 (2) _modbus_response_write_single_register               13    13      0    6111
                                             19 BANK0     13    13      0
                         _crc_append
                      _sys_data_save
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (2) _modbus_response_write_mult_register                  5     5      0    5545
                                              7 COMMON     1     1      0
                                             19 BANK0      4     4      0
                         _crc_append
                      _sys_data_save
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (1) _sys_data_save                                        0     0      0    2778
                         _crc_append
         _my_flash_read_system_erase
              _my_flash_system_write
 ---------------------------------------------------------------------------------
 (2) _my_flash_system_write                               17    13      4     627
                                              3 COMMON     4     0      4
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (2) _my_flash_read_system_erase                           0     0      0     451
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_EraseBlock                                     3     1      2     451
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _modbus_response_illgeal_function                     4     3      1    2652
                                              7 COMMON     1     1      0
                                             19 BANK0      3     2      1
                         _crc_append
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (2) _modbus_response_command                             13    13      0    4228
                                             19 BANK0     13    13      0
                         _crc_append
                     _getRegisterVal
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (1) _uart_send_len                                        4     3      1     560
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _getRegisterVal                                      10     7      3     945
                                              3 COMMON     3     0      3
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _crc_append                                          11     7      4    1700
                                              8 BANK0     11     7      4
                            _crc_sum
 ---------------------------------------------------------------------------------
 (2) _crc_verify                                          10     6      4    1697
                                              8 BANK0     10     6      4
                            _crc_sum
                      _m_mem_cpy_len
 ---------------------------------------------------------------------------------
 (3) _m_mem_cpy_len                                        7     1      6     484
                                              3 COMMON     1     1      0
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (3) _crc_sum                                             12     8      4     679
                                              3 COMMON     4     0      4
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (1) _m_mem_cpy                                            4     2      2     278
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _calc_temp_rs                                        16    12      4    3079
                                             13 BANK0     16    12      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _calc_temp_rc                                        20    16      4    3147
                                             13 BANK0     20    16      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _calc_rs_lo_avg                                       9     7      2    1262
                                              4 COMMON     2     2      0
                                             13 BANK0      7     5      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     857
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _calc_expect_vout_adc_value                          38    36      2    4704
                                             22 BANK0     38    36      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1984
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8    1677
                                              7 COMMON     1     1      0
                                              8 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _adc_sample                                          12    10      2    1105
                                              6 COMMON     2     0      2
                                              0 BANK0     10    10      0
                           _adc_init
                       _fvr_set_gain
 ---------------------------------------------------------------------------------
 (2) _fvr_set_gain                                         3     3      0      69
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     109
                    _ADC1_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           3     3      0      23
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC1_Initialize
     _EUSART_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _WDT_Initialize
   _adc_sample
     _adc_init
     _fvr_set_gain
   _calc_expect_vout_adc_value
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _calc_rs_lo_avg
     ___lldiv
   _calc_temp_rc
     ___lldiv
     ___lmul
   _calc_temp_rs
     ___lldiv
     ___lmul
   _m_mem_cpy
   _m_mem_cpy_len
   _modbus_response_process
     _crc_verify
       _crc_sum
       _m_mem_cpy_len
     _modbus_response_command
       _crc_append
         _crc_sum
       _getRegisterVal
       _uart_send_len
     _modbus_response_illgeal_function
       _crc_append
         _crc_sum
       _uart_send_len
     _modbus_response_write_mult_register
       _crc_append
         _crc_sum
       _sys_data_save
         _crc_append
           _crc_sum
         _my_flash_read_system_erase
           _FLASH_EraseBlock
         _my_flash_system_write
       _uart_send_len
     _modbus_response_write_single_register
       _crc_append
         _crc_sum
       _sys_data_save
         _crc_append
           _crc_sum
         _my_flash_read_system_erase
           _FLASH_EraseBlock
         _my_flash_system_write
       _uart_send_len
   _pid_pwm1_idrv_b_b
     ___aldiv
       ___lmul (ARG)
     ___lmul
     ___lwdiv
       ___wmul (ARG)
     ___wmul
     _set_idrv_pwm1_duty
       _get_idrv_pwm1_duty
   _pid_pwm1_idrv_run
     ___aldiv
       ___lmul (ARG)
     ___lmul
     _set_idrv_pwm1_duty
       _get_idrv_pwm1_duty
   _pid_pwm2_vout_run
     ___awdiv
     ___lwdiv
       ___wmul (ARG)
     _set_vout_pwm2_duty
       _get_vout_pwm2_duty
   _sys_data_init
     ___wmul
     _crc_verify
       _crc_sum
       _m_mem_cpy_len
     _my_flash_system_read
     _sys_data_save
       _crc_append
         _crc_sum
       _my_flash_read_system_erase
         _FLASH_EraseBlock
       _my_flash_system_write
   _sys_data_save
     _crc_append
       _crc_sum
     _my_flash_read_system_erase
       _FLASH_EraseBlock
     _my_flash_system_write
   _uart_received_start
   _uart_send_len
   _uart_send_str

 _INTERRUPT_InterruptManager (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      2      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4C       9       95.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      3C      11       75.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     12F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              3C      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           20      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     12F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Nov 25 22:52:27 2018

              __end_of_TMR2_SetInterruptHandler 1992                                               pc 0002  
                  ??_my_flash_read_system_erase 0076                                    ___awdiv@sign 0021  
                        __end_of_FVR_Initialize 1984                             ___wmul@multiplicand 0075  
                                           l507 1BA3                                             l524 1BCA  
                                           l516 1BB0                                             l700 12FE  
                                           l702 1344                                             l721 0D05  
                                           l642 1A12                                             l660 1ED2  
                                           l654 1EB7                                             l648 19EB  
                                           l824 1D36                                             l673 1591  
                                           l770 138A                                             l690 0AF6  
                                           l499 1B8C                                             l668 1219  
                                           l860 0FC3                                             l773 13E9  
                                           l679 0B23                                             l695 17EF  
                                           _GIE 005F                                             _PR2 001B  
                               _pwm1DutyForIdrv 00E6                                             _bbu 00BC  
                                           _err 00A0                                             _str 015C  
                               _TMR2_Initialize 19D7                                             wreg 0009  
                          ??_get_vout_pwm2_duty 0075                            ??_set_vout_pwm2_duty 0077  
                               ??_uart_send_len 0074                                 ??_uart_send_str 0073  
                                          S5921 1839                                            S5923 1800  
                                 calc_temp_rc@x 0039                                            l1206 10B0  
                                 calc_temp_rc@y 003D                                            l1127 1E53  
                                          l1151 1AC0                                            l1129 1E71  
                                          l4101 1C38                                            l4103 1C44  
                                          l4031 1D5E                                            l5001 1603  
                                          l4113 1C5F                                            l5011 162F  
                                          l5003 160C                                            l5013 1638  
                                          l5005 1615                                            l5021 1656  
                                          l4109 1C56                                            l4037 1D69  
                                          l5031 167A                                            l5015 1641  
                                          l5007 161E                                            l4063 1DA0  
                                          l4055 1D8F                                            l4047 1D71  
                                          l4151 1B85                                            l5009 1626  
                                          l4049 1D7D                                            l5105 100D  
                                          l5051 1AD4                                            l5019 1649  
                                          l4059 1D98                                            l5107 1038  
                                          l5117 1C99                                            l5205 0FC5  
                                          l5311 1BE1                                            l5209 0FCB  
                                          l5153 0EC4                                            l5307 1BD6  
                                          l3483 1BAC                                            l5147 0EB4  
                                          l5173 0F18                                            l5165 0EFA  
                                          l3727 1A0B                                            l5407 1EC5  
                                          l5351 110A                                            l5423 1205  
                                          l5409 1EFB                                            l5337 10D1  
                                          l5329 10C1                                            l5441 157D  
                                          l5425 1211                                            l5265 1446  
                                          l5355 1118                                            l5347 10FF  
                                          l5339 10DF                                            l5611 0B9C  
                                          l5443 1589                                            l4483 1AF4  
                                          l5365 1DB6                                            l4485 1B10  
                                          l5277 1448                                            l5293 1AB9  
                                          l5461 0917                                            l5533 17D0  
                                          l5631 0C4C                                            l5607 0B91  
                                          l5375 1DE4                                            l5367 1DC4  
                                          l5279 1482                                            l4911 1385  
                                          l5199 0F90                                            l5471 0939  
                                          l5463 0925                                            l5455 0900  
                                          l5535 17D8                                            l5625 0C33  
                                          l5457 090E                                            l5449 08FE  
                                          l5537 17E7                                            l5553 130F  
                                          l5379 1DEF                                            l4931 13BA  
                                          l4923 13A0                                            l5475 0942  
                                          l5397 1EC2                                            l4941 13D1  
                                          l4933 13BC                                            l5565 1355  
                                          l5805 0E59                                            l5583 1070  
                                          l5575 104C                                            l4951 13F1  
                                          l5663 12C6                                            l5681 1E22  
                                          l5497 0ABB                                            l5657 1275  
                                          l5817 0E92                                            l5809 0E62  
                                          l5683 1E27                                            l5691 1E38  
                                          l5499 0AC5                                            l5819 0E95  
                                          l5747 0D3E                                            l5685 1E2C  
                                          l5677 1E13                                            l5757 0D63  
                                          l5749 0D41                                   calc_temp_rs@x 0035  
                                 calc_temp_rs@y 0039                                            l5599 0B2E  
                                          l4895 1E98                                            l4991 15CB  
                                          l5687 1E31                                            l5791 0E11  
                                          l4897 1E9D                                            l4889 1E83  
                                          l4993 15D8                                            l4985 15A0  
                                          l4995 15E5                                            l4987 15A8  
                                          l4997 15F2                                            l4989 15B8  
                                          l4999 15FA                                            STR_1 182F  
                       __end_of_PWM1_Initialize 1A2E                                            _LATA 010C  
                                          _LATC 010E                                            u3035 1D74  
                                          u3205 1C45                                            u3215 1C4F  
                                          u3055 1D7E                                            u3225 1C57  
                                          u3065 1D88                                            u3075 1D90  
                                          u2460 1D0F                                            u5005 1ECE  
                                          u5103 0B11                                            u3185 1C3B  
                                          u4325 1390                                            u4405 1B73  
                                          u5215 0B62                                            u4255 1E59  
                                          u4335 1A88                                            u4415 1013  
                                          u5225 0B84                                            u4425 1C95  
                                          u4265 136F                                            u4345 1AA4  
                                          u5145 12F7                                            u5155 1308  
                                          u5253 0C28                                            u5093 0AE4  
                                          u5165 133D                                            u4295 13AE  
                                          u5175 134E                                            u5273 0C45  
                                          u4555 0F39                                            u4715 1AC1  
                                          u4395 1B4F                                            u4725 1AC6  
                                          u5445 0DA0                                            u5607 1EB2  
                                          u4815 10D4                                            u4495 0ED1  
                                          u5455 0DB7                                            u5465 0DCD  
                                          u4835 10E0                                            u4755 1BE2  
                                          u4915 1DC5                                            u4675 1421  
                                          u4845 10F4                                            u4765 1BE9  
                                          u4925 1DD9                                            u4855 1100  
                                          u4935 1DE5                                            u4695 1451  
                                          u4895 1DB9                                            u4985 1EDF  
                                          u4995 1EE8                                   _m_mem_cpy_len 1AD4  
                                          _TMR2 001A                                            _WPUA 020C  
                                          _WPUC 020E                                            _bbt0 00C8  
                                          _bbt1 00C6                                            _bbta 00C0  
                                          _bbku 00B8                                            _bbtu 005C  
                                          _main 0D0A  modbus_response_write_single_register@startAddr 003E  
                                          _pidU 00E2             __size_of_my_flash_read_system_erase 0023  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          btemp 007E                                            start 0892  
                               _pwm2DutyForVout 00E8                       ??_modbus_response_command 0033  
                           pid_pwm1_idrv_run@ei 0042                             pid_pwm1_idrv_run@ep 003E  
                       __end_of_PWM2_Initialize 1A47                       ??_modbus_response_process 0042  
                               ?_FVR_Initialize 0070                  __size_of_OSCILLATOR_Initialize 0001  
                 __end_of_OSCILLATOR_Initialize 0804                                 __end_of___aldiv 1121  
                                         ?_main 0070                                 __end_of___awdiv 1DA5  
                               __end_of___lldiv 1DF8                                 ___awdiv@divisor 0073  
                                         _T2CON 001C                                 __end_of___lwdiv 1C64  
                                         i1l314 088D                                 ___awdiv@counter 0020  
                                         _RCREG 0199                                           _RCSTA 019D  
                                         _TRISA 008C                                           _TRISC 008E  
                                         _TXREG 019A                                           _TXSTA 019E  
              modbus_response_command@startAddr 0037                             ___lmul@multiplicand 0024  
                                         _PidKp 0062                                           _PidTd 00CC  
                                         _Event 006B                                           _PidTi 00CE  
                               __end_of_crc_sum 1EA2                            pid_pwm1_idrv_b_b@t32 003E  
                                         _bbmax 00DE                                           _bbmin 00DA  
                                _WDT_Initialize 1984                                           _resRc 006E  
                                         _resRs 006C          modbus_response_write_mult_register@len 0034  
                                ?_m_mem_cpy_len 0020          modbus_response_write_mult_register@stb 0036  
                    __end_of_get_idrv_pwm1_duty 1A9A                      __end_of_set_idrv_pwm1_duty 1B5D  
                            crc_verify@expected 0030                                           status 0003  
                                         wtemp0 007E                                 _TMR2_StartTimer 197D  
                                 fvr_set_gain@g 0075     __end_of_modbus_response_write_mult_register 11A8  
  __size_of_modbus_response_write_mult_register 0087           ??_modbus_response_write_mult_register 0077  
          ?_modbus_response_write_mult_register 0070             _modbus_response_write_mult_register 1121  
            __end_of_calc_expect_vout_adc_value 0D0A                      _calc_expect_vout_adc_value 0B24  
                              __end_of_HexTable 182F                            pid_pwm1_idrv_run@t32 0046  
                               __initialization 0894                                    __end_of_main 0E97  
                         __size_of_calc_temp_rc 00D9                           __size_of_calc_temp_rs 0090  
                       __end_of_TMR2_Initialize 19EA                     ?_INTERRUPT_InterruptManager 0070  
           modbus_response_illgeal_function@buf 0034                        _TMR2_SetInterruptHandler 198C  
                                        ??_main 00EA                                ??_calc_rs_lo_avg 0074  
                   modbus_response_process@rbuf 0045                   __size_of_my_flash_system_read 003D  
                   modbus_response_process@rlen 0040                     modbus_response_process@resp 0043  
               __end_of_modbus_response_command 14BF                          __end_of_WDT_Initialize 1988  
                  my_flash_system_write@blocNum 0025                                          _ADCON0 009D  
                                        _ADCON1 009E                                          _ADCON2 009F  
                                        _ADRESH 009C                                          _ADRESL 009B  
                              ___awdiv@dividend 0075                                          _ANSELA 018C  
                                        _ANSELC 018E                 __end_of_modbus_response_process 1E4C  
                              __end_of_adc_init 19FE                                ?_PWM1_Initialize 0070  
                                        _ODCONA 028C                                          _ODCONC 028E  
                                        i1l4607 0834                                          i1l4625 085C  
                                        i1l4609 0839                                          i1l4643 0878  
                                        i1l4619 0847                                          i1l4627 0860  
                                        i1l4591 0821                                          i1l4597 0827  
                                        _FVRCON 0117                                          _PMADRH 0192  
                                        _PMADRL 0191                                          _PMDATH 0194  
                                        _PMDATL 0193                                          _PMCON2 0196  
                     __size_of_FLASH_EraseBlock 001C                     __end_of_uart_received_start 19B4  
                                        _SPBRGH 019C                                          _SPBRGL 019B  
                                        _WDTCON 0097                                    _calc_temp_rc 14BF  
                                  _calc_temp_rs 11A8                                 calc_rs_lo_avg@i 0033  
                               calc_rs_lo_avg@x 002D              __end_of_my_flash_read_system_erase 1B39  
                    _my_flash_read_system_erase 1B16      modbus_response_write_single_register@pmdbs 003C  
                                        ___lmul 1BCE                                       ??___aldiv 0077  
                                        ___wmul 1AB6                                       ??___awdiv 0077  
                                     ??___lldiv 0073                                       ??___lwdiv 0077  
                              ?_PWM2_Initialize 0070                                          _pwm2Ei 00C4  
                              ___awdiv@quotient 0022                        my_flash_system_write@buf 0073  
                      my_flash_system_write@len 0075                        my_flash_system_write@loc 0027  
                                     ??_crc_sum 0020                        __size_of_ADC1_Initialize 0009  
                               ?_WDT_Initialize 0070                                 ??_m_mem_cpy_len 0073  
              my_flash_system_write@GIEBitValue 0022                         __end_of_TMR2_StartTimer 1980  
      TMR2_SetInterruptHandler@InterruptHandler 0073                 modbus_response_command@tempData 003E  
      __end_of_modbus_response_illgeal_function 1D53       __size_of_modbus_response_illgeal_function 0042  
             ?_modbus_response_illgeal_function 0033              ??_modbus_response_illgeal_function 0077  
              _modbus_response_illgeal_function 1D11                                   ?_fvr_set_gain 0070  
                                fvr_set_gain@t8 0074                               _SYSTEM_Initialize 1A47  
                       __end_of__initialization 08E9                          __size_of_sys_data_init 0091  
                         _my_flash_system_write 135D                              ?_SYSTEM_Initialize 0070  
                        __size_of_sys_data_save 0037                              getRegisterVal@addr 0073  
                                __pcstackCOMMON 0070                                    __pidataBANK0 1988  
                                  __pidataBANK1 19B4                             ??_SYSTEM_Initialize 0075  
                                    _adc_sample 1EA2          modbus_response_write_single_register@i 003A  
                              ?_TMR2_Initialize 0070                                  _OPTION_REGbits 0095  
      modbus_response_write_single_register@t16 0038                               crc_append@message 0028  
                        getRegisterVal@tempAddr 0026                          my_flash_system_write@i 002B  
                        my_flash_system_write@j 0023                          getRegisterVal@tempData 0075  
                     __end_of_SYSTEM_Initialize 1A62                                  ??_fvr_set_gain 0073  
                            __size_of_m_mem_cpy 0023                                      __pbssBANK0 005C  
                                    __pbssBANK1 00A0                                      __pbssBANK2 0120  
                                    __pbssBANK3 01A0                  modbus_response_command@tmpAddr 0035  
               my_flash_system_read@GIEBitValue 0022                                      adc_init@ch 0074  
                              ??_FVR_Initialize 0073                                      __pmaintext 0D0A  
                    modbus_response_command@len 003C                                         ?___lmul 0020  
                                       ?___wmul 0073                                      __pintentry 0804  
                  ??_calc_expect_vout_adc_value 0038                                         _BAUDCON 019F  
                                ___lmul@product 0073                                      _crc_append 1BFE  
                                     ?_adc_init 0070                                    adc_sample@ch 0023  
                                 _sys_data_init 1238                                   _sys_data_save 1C9B  
                                    _crc_verify 1C64                                   _eusartRxCount 0079  
                   __size_of_get_vout_pwm2_duty 001C                     __size_of_set_vout_pwm2_duty 0024  
                                       _PWM1DCH 0D94                                         _PWM1DCL 0D93  
                                       _PWM2DCH 0DA4                                         _PWM2DCL 0DA3  
                                       _PWM1CON 0D9B                                         _PWM2CON 0DAB  
                                       _PWM1OFH 0D98                                         _PWM1OFL 0D97  
                                       _PWM2OFH 0DA8                                         _PWM1PHH 0D92  
                                       _PWM2OFL 0DA7                                         _PWM1PHL 0D91  
                                       _PWM2PHH 0DA2                                         _PWM2PHL 0DA1  
                                       _PWM1PRH 0D96                                         _PWM1PRL 0D95  
                                       _PWM2PRH 0DA6                                         _PWM2PRL 0DA5  
         modbus_response_illgeal_function@pmdbs 0035                                         _PPSLOCK 0E0F  
                             ??_ADC1_Initialize 0073                                ?_TMR2_StartTimer 0070  
                        set_idrv_pwm1_duty@duty 0022                           __end_of_uart_send_len 1BCE  
                         __end_of_uart_send_str 1BA7                                _FLASH_EraseBlock 1A62  
                        ?_my_flash_system_write 0073                         __size_of_getRegisterVal 00F9  
                   ?_calc_expect_vout_adc_value 0036     modbus_response_write_single_register@fiSave 0037  
                    ??_TMR2_SetInterruptHandler 0075                                         ___aldiv 109F  
                                       ___awdiv 1D53                                 __size_of___lmul 0030  
                                       ___lldiv 1DA5                                 __size_of___wmul 001E  
                            _get_idrv_pwm1_duty 1A7E                              _set_idrv_pwm1_duty 1B39  
                                       ___lwdiv 1C2F                                     ?_adc_sample 0076  
                             __end_of_m_mem_cpy 1B16                                  adc_sample@gfvr 0076  
                                    _pidTestNum 0068                                  ?_sys_data_init 0070  
                                ?_sys_data_save 0070                                      ??_adc_init 0073  
                                       __ptext1 1B81                                         __ptext2 19A7  
                                       __ptext3 1238                                         __ptext4 1001  
                                       __ptext5 12C9                                         __ptext6 1B5D  
                                       __ptext7 1A9A                                         __ptext8 1D53  
                                       __ptext9 1691                                         _crc_sum 1E4C  
                                       _pidBbSm 0069                             ?_get_idrv_pwm1_duty 0073  
                           ?_set_idrv_pwm1_duty 0022                           _OSCILLATOR_Initialize 0803  
                                     _T2CONbits 001C                                      _rsLoAvgBuf 00AC  
                                       _rsLoAvg 005E                                ___aldiv@dividend 002C  
                      ??_PIN_MANAGER_Initialize 0073                                         _sysData 235C  
                    __size_of_SYSTEM_Initialize 001B                                         clrloop0 199C  
                          end_of_initialization 08E9                                         init_ram 0FF4  
                      ?_modbus_response_command 0070                                         initloop 0FF5  
                  __end_of_my_flash_system_read 103E                            ??_get_idrv_pwm1_duty 0075  
                           pid_pwm2_vout_run@ei 002B                            ??_set_idrv_pwm1_duty 0077  
                             _EUSART_Initialize 19C4                                 ___lldiv@divisor 0020  
                                    _voExpectMv 00CA                                 ___lldiv@counter 002C  
                            ?_EUSART_Initialize 0070                        ?_modbus_response_process 0040  
                                     _RCSTAbits 019D                     ?_my_flash_read_system_erase 0070  
                              ___aldiv@quotient 0032                                       _PWM1LDCON 0D9F  
                                     _PWM2LDCON 0DAF                                       _PWM1OFCON 0DA0  
                                     _PWM2OFCON 0DB0                            __end_of_fvr_set_gain 1A15  
                                   ?_crc_append 0028                                      _subTickerX 0078  
                           ??_EUSART_Initialize 0073                                ??_WDT_Initialize 0073  
                                   ?_crc_verify 0028                                      crc_sum@crc 0026  
                                    crc_sum@buf 0073                                      crc_sum@len 0075  
                                     _RXPPSbits 0E15                             __size_of_adc_sample 005E  
                     __end_of_EUSART_Initialize 19D7                                    _globalTicker 00D6  
                                     _TXSTAbits 019E                        __size_of_PWM1_Initialize 0019  
                  __size_of_uart_received_start 000D                    _TMR2_DefaultInterruptHandler 0000  
                               ??_sys_data_init 0033                                      m_mem_cpy@d 0076  
                               ??_sys_data_save 0077                                      m_mem_cpy@s 0073  
                                __end_of___lmul 1BFE                                  __end_of___wmul 1AD4  
                              _voExpectAdcValue 0060                                  _rtAdcValueRcHi 00D2  
                                _rtAdcValueRcLo 0064                                  _rtAdcValueRsHi 00D4  
                                _rtAdcValueVoFb 00D0                                  _rtAdcValueRsLo 0066  
                        ?_OSCILLATOR_Initialize 0070                               crc_verify@message 0028  
                           start_initialization 0894                        __size_of_PWM2_Initialize 0019  
               __size_of_PIN_MANAGER_Initialize 003F                                   _PWM1LDCONbits 0D9F  
                       my_flash_system_read@buf 0073                         my_flash_system_read@len 0075  
                         __end_of_m_mem_cpy_len 1AF3                                   _PWM2LDCONbits 0DAF  
                                _getRegisterVal 1598                         __size_of_calc_rs_lo_avg 0061  
                           __size_of_crc_append 0031                             __size_of_crc_verify 0037  
     modbus_response_write_single_register@rbuf 003D                                        ??___lmul 0073  
                                      ??___wmul 0077                                     __pdataBANK0 006C  
                                   __pdataBANK1 00DA                     FLASH_EraseBlock@GIEBitValue 0075  
                               _ADC1_Initialize 1992                        __end_of_FLASH_EraseBlock 1A7E  
                          _my_flash_system_read 1001                                     __pbssBIGRAM 235C  
                             __size_of_adc_init 0014                                     __pbssCOMMON 0078  
                                     ___latbits 0002                               getRegisterVal@t16 0024  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00EA  
                      __size_of_TMR2_Initialize 0013                         ??_my_flash_system_write 0020  
                        __end_of_getRegisterVal 1691                           my_flash_system_read@i 0025  
                    __size_of_EUSART_Initialize 0013         modbus_response_illgeal_function@errcode 0033  
                         __size_of_fvr_set_gain 0017                                ___lwdiv@dividend 0024  
                        _PIN_MANAGER_Initialize 1CD2                     modbus_response_command@rbuf 003D  
                                      ?___aldiv 0028                           get_idrv_pwm1_duty@t16 0020  
                                      ?___awdiv 0073                                        ?___lldiv 0020  
                                  ??_adc_sample 0020                                     adc_sample@i 0024  
                                      ?___lwdiv 0022                               ??_PWM1_Initialize 0073  
                  ??_INTERRUPT_InterruptManager 0070                           set_idrv_pwm1_duty@t16 0024  
                                     __pswtext1 1839                                       __pswtext2 1800  
                                      ?_crc_sum 0073                   my_flash_system_read@flashAddr 0023  
                    __end_of_get_vout_pwm2_duty 1AB6                           ?_my_flash_system_read 0073  
                    __end_of_set_vout_pwm2_duty 1B81                                       _m_mem_cpy 1AF3  
                              uart_send_len@buf 0076                                uart_send_len@len 0073  
                                 adc_sample@t16 0028                                ___lwdiv@quotient 0026  
                                 adc_sample@ret 0026                                   adc_sample@num 0077  
                               ?_getRegisterVal 0073                                uart_send_str@str 0074  
                                  _fvr_set_gain 19FE                                  _eusartRxBuffer 0120  
                                     _modbusBuf 01A0                                 ___aldiv@divisor 0028  
                             ??_PWM2_Initialize 0073                              __end_of_adc_sample 1F00  
                               ___aldiv@counter 0030                                  ___wmul@product 0020  
                                     _pidpwm2_U 00E4                               _pid_pwm1_idrv_b_b 08ED  
                             _pid_pwm1_idrv_run 1691                                       clear_ram0 199B  
                                m_mem_cpy_len@d 0020                                  m_mem_cpy_len@s 0022  
                                 ?_calc_temp_rc 002D                                   ?_calc_temp_rs 002D  
                                      _PIE1bits 0091                                        _PIE3bits 0093  
                      __size_of_TMR2_StartTimer 0003                          set_vout_pwm2_duty@duty 0022  
                            ?_pid_pwm1_idrv_b_b 0070             __size_of_INTERRUPT_InterruptManager 008E  
                            ?_pid_pwm1_idrv_run 0070                         __end_of_ADC1_Initialize 199B  
                                      _PIR1bits 0011                                        _PIR3bits 0013  
                     FLASH_EraseBlock@startAddr 0073                                        _PWM1INTE 0D9C  
                                      _PWM1INTF 0D9D                                        _PWM2INTE 0DAC  
                                      _PWM2INTF 0DAD                                        _PWM1TMRH 0D9A  
                                      _PWM1TMRL 0D99                                        _PWM2TMRH 0DAA  
                                      _PWM2TMRL 0DA9                             ??_pid_pwm1_idrv_b_b 0036  
                                  ??_crc_append 002C                __size_of_modbus_response_command 00C8  
                           ??_pid_pwm1_idrv_run 0036                          __size_of_uart_send_len 0027  
                        __size_of_uart_send_str 0026                                      _ADCON0bits 009D  
                             ___wmul@multiplier 0073                                    ??_crc_verify 002C  
                                    ?_m_mem_cpy 0073                         __size_of_FVR_Initialize 0004  
              __size_of_modbus_response_process 0054               __size_of_TMR2_SetInterruptHandler 0006  
                     ?_TMR2_SetInterruptHandler 0073                                     _isRunInBoot 0FFF  
                           _uart_received_start 19A7                               _pid_pwm2_vout_run 12C9  
                                      _HexTable 181E                               ___lmul@multiplier 0020  
                              crc_verify@crccal 002E                       __end_of_pid_pwm1_idrv_b_b 0B24  
                                _calc_rs_lo_avg 103E                              ?_pid_pwm2_vout_run 0070  
                     __end_of_pid_pwm1_idrv_run 1800                               ??_TMR2_Initialize 0075  
                                ??_calc_temp_rc 0031                                  ??_calc_temp_rs 0031  
                            __end_of_crc_append 1C2F                               calc_rs_lo_avg@t32 002F  
                   __size_of_get_idrv_pwm1_duty 001C                     __size_of_set_idrv_pwm1_duty 0024  
                           ??_pid_pwm2_vout_run 0029                              __end_of_crc_verify 1C9B  
                                  _PWM1INTFbits 0D9D                            ?_uart_received_start 0070  
                                  _PWM2INTFbits 0DAD                         ??_OSCILLATOR_Initialize 0073  
       modbus_response_write_mult_register@rbuf 0035                                __size_of___aldiv 0082  
                              __size_of___awdiv 0052                                __size_of___lldiv 0053  
                              __size_of___lwdiv 0035                          ??_my_flash_system_read 0020  
                                      _adc_init 19EA                                __size_of_crc_sum 0056  
                           _eusartRxIdleTime_ms 007A                       __end_of_pid_pwm2_vout_run 135D  
                                 crc_append@crc 0031                                sys_data_init@ret 0039  
                               ___lwdiv@divisor 0022                                 ___lwdiv@counter 0028  
                                      __ptext10 08ED                                        __ptext11 1B39  
                                      __ptext20 1B16                                        __ptext12 1A7E  
                                      __ptext21 1A62                                        __ptext13 1AB6  
                                      __ptext30 1AF3                                        __ptext22 1D11  
                                      __ptext14 1C2F                                        __ptext31 11A8  
                                      __ptext23 13F7                                        __ptext15 1DF8  
                                      __ptext40 19EA                                        __ptext32 14BF  
                                      __ptext24 1BA7                                        __ptext16 0E97  
                                      __ptext41 1A47                                        __ptext33 103E  
                                      __ptext25 1598                                        __ptext17 1121  
                                      __ptext50 1980                                        __ptext42 1984  
                                      __ptext34 1DA5                                        __ptext26 1BFE  
                                      __ptext18 1C9B                                        __ptext51 19C4  
                                      __ptext43 19D7                                        __ptext35 0B24  
                                      __ptext27 1C64                                        __ptext19 135D  
                                      __ptext52 1992                                        __ptext44 197D  
                                      __ptext36 1BCE                                        __ptext28 1AD4  
                                      __ptext45 198C                                        __ptext37 109F  
                                      __ptext29 1E4C                                        __ptext46 1A2E  
                                      __ptext38 1EA2                                        __ptext47 1A15  
                                      __ptext39 19FE                                        __ptext48 1CD2  
                                      __ptext49 0803                          __end_of_calc_rs_lo_avg 109F  
                                 _uart_send_len 1BA7                                   _uart_send_str 1B81  
                         get_vout_pwm2_duty@t16 0020                                   __size_of_main 018D  
                                 _subTickerX_1s 006A                           set_vout_pwm2_duty@t16 0024  
                                    _RA4PPSbits 0E94                           ??_uart_received_start 0073  
                                    _RA5PPSbits 0E95                                ?_ADC1_Initialize 0070  
                my_flash_system_write@flashAddr 0029                                        int$flags 007E  
                                      crc_sum@i 0024                                        crc_sum@j 0022  
                                    _RC5PPSbits 0EA5   __end_of_modbus_response_write_single_register 0FF4  
__size_of_modbus_response_write_single_register 015D         ??_modbus_response_write_single_register 0033  
        ?_modbus_response_write_single_register 0070           _modbus_response_write_single_register 0E97  
                             ??_TMR2_StartTimer 0073              __end_of_INTERRUPT_InterruptManager 0892  
                    _INTERRUPT_InterruptManager 0804                           __end_of_sys_data_init 12C9  
                         __end_of_sys_data_save 1CD2                               ?_FLASH_EraseBlock 0073  
                 calc_expect_vout_adc_value@t32 0056                     PIN_MANAGER_Initialize@state 0073  
                                   ??_m_mem_cpy 0075                        modbus_response_command@i 0039  
                            ??_FLASH_EraseBlock 0075                                      _INTCONbits 000B  
                                   _PWM1CONbits 0D9B                                m_mem_cpy_len@len 0024  
                                    _FVRCONbits 0117                                     _PWM2CONbits 0DAB  
                  INTERRUPT_InterruptManager@t8 0072                                 ?_calc_rs_lo_avg 002D  
                  modbus_response_process@pmdbs 0044                         __size_of_WDT_Initialize 0004  
                                ?_uart_send_len 0073                                  ?_uart_send_str 0070  
                                      intlevel1 0000                  __size_of_my_flash_system_write 009A  
                          pid_pwm2_vout_run@t16 002D                      __size_of_pid_pwm1_idrv_b_b 0237  
                 __end_of_my_flash_system_write 13F7                      __size_of_pid_pwm1_idrv_run 016F  
                                    _PMCON1bits 0195                                ___lldiv@dividend 0024  
                       ?_PIN_MANAGER_Initialize 0070    modbus_response_write_mult_register@startAddr 0033  
                                uart_send_len@i 0075                                     _PPSLOCKbits 0E0F  
                               _PWM1_Initialize 1A15                    modbus_response_command@pmdbs 003B  
                       _modbus_response_command 13F7                    calc_expect_vout_adc_value@x0 0052  
                  calc_expect_vout_adc_value@x1 004A                    calc_expect_vout_adc_value@y0 004E  
                  calc_expect_vout_adc_value@y1 0046                                      _PWM1CLKCON 0D9E  
                                    _PWM2CLKCON 0DAE                          __size_of_m_mem_cpy_len 001F  
                                 __pstringtext1 181E                                   __pstringtext2 0000  
                                _FVR_Initialize 1980                         _modbus_response_process 1DF8  
                                sys_data_init@i 003B                                     crc_append@n 002A  
                          __end_of_calc_temp_rc 1598                            __end_of_calc_temp_rs 1238  
                              ___lldiv@quotient 0028                                ??_getRegisterVal 0020  
                               _PWM2_Initialize 1A2E                      __size_of_pid_pwm2_vout_run 0094  
                                  ___aldiv@sign 0031                     calc_expect_vout_adc_value@i 005A  
                   calc_expect_vout_adc_value@x 0036             __size_of_calc_expect_vout_adc_value 01E6  
                __end_of_PIN_MANAGER_Initialize 1D11                              _get_vout_pwm2_duty 1A9A  
                            _set_vout_pwm2_duty 1B5D                           _TMR2_InterruptHandler 00D8  
                                   crc_verify@n 002A                             ?_get_vout_pwm2_duty 0073  
                           ?_set_vout_pwm2_duty 0022  
