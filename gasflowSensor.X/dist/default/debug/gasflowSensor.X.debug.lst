

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Apr 03 00:54:34 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F1575
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	swtext1,local,class=CONST,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2
    62                           	psect	text41,local,class=CODE,merge=1,delta=2
    63                           	psect	text42,local,class=CODE,merge=1,delta=2
    64                           	psect	text43,local,class=CODE,merge=1,delta=2
    65                           	psect	text44,local,class=CODE,merge=1,delta=2
    66                           	psect	text45,local,class=CODE,merge=1,delta=2
    67                           	psect	text46,local,class=CODE,merge=1,delta=2
    68                           	psect	text47,local,class=CODE,merge=1,delta=2
    69                           	psect	text48,local,class=CODE,merge=1,delta=2
    70                           	psect	text49,local,class=CODE,merge=1,delta=2
    71                           	psect	intentry,global,class=CODE,delta=2
    72                           	dabs	1,0x620,32
    73                           	dabs	1,0x5A0,80
    74                           	dabs	1,0x55C,20
    75                           	dabs	1,0xFFF,1,_isRunInBoot
    76                           	dabs	1,0x235C,0,_sysData
    77                           	dabs	1,0x7E,2
    78  0000                     
    79                           ; Version 2.00
    80                           ; Generated 27/05/2018 GMT
    81                           ; 
    82                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC16F1575 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000E                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  008C                     	;# 
   140  008E                     	;# 
   141  0091                     	;# 
   142  0092                     	;# 
   143  0093                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0097                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  010C                     	;# 
   157  010E                     	;# 
   158  0111                     	;# 
   159  0112                     	;# 
   160  0113                     	;# 
   161  0114                     	;# 
   162  0115                     	;# 
   163  0116                     	;# 
   164  0117                     	;# 
   165  0118                     	;# 
   166  0119                     	;# 
   167  018C                     	;# 
   168  018E                     	;# 
   169  0191                     	;# 
   170  0191                     	;# 
   171  0192                     	;# 
   172  0193                     	;# 
   173  0193                     	;# 
   174  0194                     	;# 
   175  0195                     	;# 
   176  0196                     	;# 
   177  0197                     	;# 
   178  0199                     	;# 
   179  019A                     	;# 
   180  019B                     	;# 
   181  019B                     	;# 
   182  019C                     	;# 
   183  019D                     	;# 
   184  019E                     	;# 
   185  019F                     	;# 
   186  020C                     	;# 
   187  020E                     	;# 
   188  028C                     	;# 
   189  028E                     	;# 
   190  030C                     	;# 
   191  030E                     	;# 
   192  038C                     	;# 
   193  038E                     	;# 
   194  0391                     	;# 
   195  0392                     	;# 
   196  0393                     	;# 
   197  0397                     	;# 
   198  0398                     	;# 
   199  0399                     	;# 
   200  0691                     	;# 
   201  0692                     	;# 
   202  0693                     	;# 
   203  0694                     	;# 
   204  0695                     	;# 
   205  0D8E                     	;# 
   206  0D8F                     	;# 
   207  0D90                     	;# 
   208  0D91                     	;# 
   209  0D91                     	;# 
   210  0D92                     	;# 
   211  0D93                     	;# 
   212  0D93                     	;# 
   213  0D94                     	;# 
   214  0D95                     	;# 
   215  0D95                     	;# 
   216  0D96                     	;# 
   217  0D97                     	;# 
   218  0D97                     	;# 
   219  0D98                     	;# 
   220  0D99                     	;# 
   221  0D99                     	;# 
   222  0D9A                     	;# 
   223  0D9B                     	;# 
   224  0D9C                     	;# 
   225  0D9C                     	;# 
   226  0D9D                     	;# 
   227  0D9D                     	;# 
   228  0D9E                     	;# 
   229  0D9F                     	;# 
   230  0DA0                     	;# 
   231  0DA1                     	;# 
   232  0DA1                     	;# 
   233  0DA2                     	;# 
   234  0DA3                     	;# 
   235  0DA3                     	;# 
   236  0DA4                     	;# 
   237  0DA5                     	;# 
   238  0DA5                     	;# 
   239  0DA6                     	;# 
   240  0DA7                     	;# 
   241  0DA7                     	;# 
   242  0DA8                     	;# 
   243  0DA9                     	;# 
   244  0DA9                     	;# 
   245  0DAA                     	;# 
   246  0DAB                     	;# 
   247  0DAC                     	;# 
   248  0DAC                     	;# 
   249  0DAD                     	;# 
   250  0DAD                     	;# 
   251  0DAE                     	;# 
   252  0DAF                     	;# 
   253  0DB0                     	;# 
   254  0DB1                     	;# 
   255  0DB1                     	;# 
   256  0DB2                     	;# 
   257  0DB3                     	;# 
   258  0DB3                     	;# 
   259  0DB4                     	;# 
   260  0DB5                     	;# 
   261  0DB5                     	;# 
   262  0DB6                     	;# 
   263  0DB7                     	;# 
   264  0DB7                     	;# 
   265  0DB8                     	;# 
   266  0DB9                     	;# 
   267  0DB9                     	;# 
   268  0DBA                     	;# 
   269  0DBB                     	;# 
   270  0DBC                     	;# 
   271  0DBC                     	;# 
   272  0DBD                     	;# 
   273  0DBD                     	;# 
   274  0DBE                     	;# 
   275  0DBF                     	;# 
   276  0DC0                     	;# 
   277  0DC1                     	;# 
   278  0DC1                     	;# 
   279  0DC2                     	;# 
   280  0DC3                     	;# 
   281  0DC3                     	;# 
   282  0DC4                     	;# 
   283  0DC5                     	;# 
   284  0DC5                     	;# 
   285  0DC6                     	;# 
   286  0DC7                     	;# 
   287  0DC7                     	;# 
   288  0DC8                     	;# 
   289  0DC9                     	;# 
   290  0DC9                     	;# 
   291  0DCA                     	;# 
   292  0DCB                     	;# 
   293  0DCC                     	;# 
   294  0DCC                     	;# 
   295  0DCD                     	;# 
   296  0DCD                     	;# 
   297  0DCE                     	;# 
   298  0DCF                     	;# 
   299  0DD0                     	;# 
   300  0E0F                     	;# 
   301  0E10                     	;# 
   302  0E11                     	;# 
   303  0E12                     	;# 
   304  0E13                     	;# 
   305  0E14                     	;# 
   306  0E15                     	;# 
   307  0E16                     	;# 
   308  0E17                     	;# 
   309  0E90                     	;# 
   310  0E91                     	;# 
   311  0E92                     	;# 
   312  0E94                     	;# 
   313  0E95                     	;# 
   314  0EA0                     	;# 
   315  0EA1                     	;# 
   316  0EA2                     	;# 
   317  0EA3                     	;# 
   318  0EA4                     	;# 
   319  0EA5                     	;# 
   320  0FE4                     	;# 
   321  0FE5                     	;# 
   322  0FE6                     	;# 
   323  0FE7                     	;# 
   324  0FE8                     	;# 
   325  0FE8                     	;# 
   326  0FE9                     	;# 
   327  0FEA                     	;# 
   328  0FEA                     	;# 
   329  0FEB                     	;# 
   330  0FED                     	;# 
   331  0FEE                     	;# 
   332  0FEE                     	;# 
   333  0FEF                     	;# 
   334  0000                     	;# 
   335  0001                     	;# 
   336  0002                     	;# 
   337  0003                     	;# 
   338  0004                     	;# 
   339  0005                     	;# 
   340  0006                     	;# 
   341  0007                     	;# 
   342  0008                     	;# 
   343  0009                     	;# 
   344  000A                     	;# 
   345  000B                     	;# 
   346  000C                     	;# 
   347  000E                     	;# 
   348  0011                     	;# 
   349  0012                     	;# 
   350  0013                     	;# 
   351  0015                     	;# 
   352  0016                     	;# 
   353  0016                     	;# 
   354  0017                     	;# 
   355  0018                     	;# 
   356  0019                     	;# 
   357  001A                     	;# 
   358  001B                     	;# 
   359  001C                     	;# 
   360  008C                     	;# 
   361  008E                     	;# 
   362  0091                     	;# 
   363  0092                     	;# 
   364  0093                     	;# 
   365  0095                     	;# 
   366  0096                     	;# 
   367  0097                     	;# 
   368  0098                     	;# 
   369  0099                     	;# 
   370  009A                     	;# 
   371  009B                     	;# 
   372  009B                     	;# 
   373  009C                     	;# 
   374  009D                     	;# 
   375  009E                     	;# 
   376  009F                     	;# 
   377  010C                     	;# 
   378  010E                     	;# 
   379  0111                     	;# 
   380  0112                     	;# 
   381  0113                     	;# 
   382  0114                     	;# 
   383  0115                     	;# 
   384  0116                     	;# 
   385  0117                     	;# 
   386  0118                     	;# 
   387  0119                     	;# 
   388  018C                     	;# 
   389  018E                     	;# 
   390  0191                     	;# 
   391  0191                     	;# 
   392  0192                     	;# 
   393  0193                     	;# 
   394  0193                     	;# 
   395  0194                     	;# 
   396  0195                     	;# 
   397  0196                     	;# 
   398  0197                     	;# 
   399  0199                     	;# 
   400  019A                     	;# 
   401  019B                     	;# 
   402  019B                     	;# 
   403  019C                     	;# 
   404  019D                     	;# 
   405  019E                     	;# 
   406  019F                     	;# 
   407  020C                     	;# 
   408  020E                     	;# 
   409  028C                     	;# 
   410  028E                     	;# 
   411  030C                     	;# 
   412  030E                     	;# 
   413  038C                     	;# 
   414  038E                     	;# 
   415  0391                     	;# 
   416  0392                     	;# 
   417  0393                     	;# 
   418  0397                     	;# 
   419  0398                     	;# 
   420  0399                     	;# 
   421  0691                     	;# 
   422  0692                     	;# 
   423  0693                     	;# 
   424  0694                     	;# 
   425  0695                     	;# 
   426  0D8E                     	;# 
   427  0D8F                     	;# 
   428  0D90                     	;# 
   429  0D91                     	;# 
   430  0D91                     	;# 
   431  0D92                     	;# 
   432  0D93                     	;# 
   433  0D93                     	;# 
   434  0D94                     	;# 
   435  0D95                     	;# 
   436  0D95                     	;# 
   437  0D96                     	;# 
   438  0D97                     	;# 
   439  0D97                     	;# 
   440  0D98                     	;# 
   441  0D99                     	;# 
   442  0D99                     	;# 
   443  0D9A                     	;# 
   444  0D9B                     	;# 
   445  0D9C                     	;# 
   446  0D9C                     	;# 
   447  0D9D                     	;# 
   448  0D9D                     	;# 
   449  0D9E                     	;# 
   450  0D9F                     	;# 
   451  0DA0                     	;# 
   452  0DA1                     	;# 
   453  0DA1                     	;# 
   454  0DA2                     	;# 
   455  0DA3                     	;# 
   456  0DA3                     	;# 
   457  0DA4                     	;# 
   458  0DA5                     	;# 
   459  0DA5                     	;# 
   460  0DA6                     	;# 
   461  0DA7                     	;# 
   462  0DA7                     	;# 
   463  0DA8                     	;# 
   464  0DA9                     	;# 
   465  0DA9                     	;# 
   466  0DAA                     	;# 
   467  0DAB                     	;# 
   468  0DAC                     	;# 
   469  0DAC                     	;# 
   470  0DAD                     	;# 
   471  0DAD                     	;# 
   472  0DAE                     	;# 
   473  0DAF                     	;# 
   474  0DB0                     	;# 
   475  0DB1                     	;# 
   476  0DB1                     	;# 
   477  0DB2                     	;# 
   478  0DB3                     	;# 
   479  0DB3                     	;# 
   480  0DB4                     	;# 
   481  0DB5                     	;# 
   482  0DB5                     	;# 
   483  0DB6                     	;# 
   484  0DB7                     	;# 
   485  0DB7                     	;# 
   486  0DB8                     	;# 
   487  0DB9                     	;# 
   488  0DB9                     	;# 
   489  0DBA                     	;# 
   490  0DBB                     	;# 
   491  0DBC                     	;# 
   492  0DBC                     	;# 
   493  0DBD                     	;# 
   494  0DBD                     	;# 
   495  0DBE                     	;# 
   496  0DBF                     	;# 
   497  0DC0                     	;# 
   498  0DC1                     	;# 
   499  0DC1                     	;# 
   500  0DC2                     	;# 
   501  0DC3                     	;# 
   502  0DC3                     	;# 
   503  0DC4                     	;# 
   504  0DC5                     	;# 
   505  0DC5                     	;# 
   506  0DC6                     	;# 
   507  0DC7                     	;# 
   508  0DC7                     	;# 
   509  0DC8                     	;# 
   510  0DC9                     	;# 
   511  0DC9                     	;# 
   512  0DCA                     	;# 
   513  0DCB                     	;# 
   514  0DCC                     	;# 
   515  0DCC                     	;# 
   516  0DCD                     	;# 
   517  0DCD                     	;# 
   518  0DCE                     	;# 
   519  0DCF                     	;# 
   520  0DD0                     	;# 
   521  0E0F                     	;# 
   522  0E10                     	;# 
   523  0E11                     	;# 
   524  0E12                     	;# 
   525  0E13                     	;# 
   526  0E14                     	;# 
   527  0E15                     	;# 
   528  0E16                     	;# 
   529  0E17                     	;# 
   530  0E90                     	;# 
   531  0E91                     	;# 
   532  0E92                     	;# 
   533  0E94                     	;# 
   534  0E95                     	;# 
   535  0EA0                     	;# 
   536  0EA1                     	;# 
   537  0EA2                     	;# 
   538  0EA3                     	;# 
   539  0EA4                     	;# 
   540  0EA5                     	;# 
   541  0FE4                     	;# 
   542  0FE5                     	;# 
   543  0FE6                     	;# 
   544  0FE7                     	;# 
   545  0FE8                     	;# 
   546  0FE8                     	;# 
   547  0FE9                     	;# 
   548  0FEA                     	;# 
   549  0FEA                     	;# 
   550  0FEB                     	;# 
   551  0FED                     	;# 
   552  0FEE                     	;# 
   553  0FEE                     	;# 
   554  0FEF                     	;# 
   555  0000                     	;# 
   556  0001                     	;# 
   557  0002                     	;# 
   558  0003                     	;# 
   559  0004                     	;# 
   560  0005                     	;# 
   561  0006                     	;# 
   562  0007                     	;# 
   563  0008                     	;# 
   564  0009                     	;# 
   565  000A                     	;# 
   566  000B                     	;# 
   567  000C                     	;# 
   568  000E                     	;# 
   569  0011                     	;# 
   570  0012                     	;# 
   571  0013                     	;# 
   572  0015                     	;# 
   573  0016                     	;# 
   574  0016                     	;# 
   575  0017                     	;# 
   576  0018                     	;# 
   577  0019                     	;# 
   578  001A                     	;# 
   579  001B                     	;# 
   580  001C                     	;# 
   581  008C                     	;# 
   582  008E                     	;# 
   583  0091                     	;# 
   584  0092                     	;# 
   585  0093                     	;# 
   586  0095                     	;# 
   587  0096                     	;# 
   588  0097                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009A                     	;# 
   592  009B                     	;# 
   593  009B                     	;# 
   594  009C                     	;# 
   595  009D                     	;# 
   596  009E                     	;# 
   597  009F                     	;# 
   598  010C                     	;# 
   599  010E                     	;# 
   600  0111                     	;# 
   601  0112                     	;# 
   602  0113                     	;# 
   603  0114                     	;# 
   604  0115                     	;# 
   605  0116                     	;# 
   606  0117                     	;# 
   607  0118                     	;# 
   608  0119                     	;# 
   609  018C                     	;# 
   610  018E                     	;# 
   611  0191                     	;# 
   612  0191                     	;# 
   613  0192                     	;# 
   614  0193                     	;# 
   615  0193                     	;# 
   616  0194                     	;# 
   617  0195                     	;# 
   618  0196                     	;# 
   619  0197                     	;# 
   620  0199                     	;# 
   621  019A                     	;# 
   622  019B                     	;# 
   623  019B                     	;# 
   624  019C                     	;# 
   625  019D                     	;# 
   626  019E                     	;# 
   627  019F                     	;# 
   628  020C                     	;# 
   629  020E                     	;# 
   630  028C                     	;# 
   631  028E                     	;# 
   632  030C                     	;# 
   633  030E                     	;# 
   634  038C                     	;# 
   635  038E                     	;# 
   636  0391                     	;# 
   637  0392                     	;# 
   638  0393                     	;# 
   639  0397                     	;# 
   640  0398                     	;# 
   641  0399                     	;# 
   642  0691                     	;# 
   643  0692                     	;# 
   644  0693                     	;# 
   645  0694                     	;# 
   646  0695                     	;# 
   647  0D8E                     	;# 
   648  0D8F                     	;# 
   649  0D90                     	;# 
   650  0D91                     	;# 
   651  0D91                     	;# 
   652  0D92                     	;# 
   653  0D93                     	;# 
   654  0D93                     	;# 
   655  0D94                     	;# 
   656  0D95                     	;# 
   657  0D95                     	;# 
   658  0D96                     	;# 
   659  0D97                     	;# 
   660  0D97                     	;# 
   661  0D98                     	;# 
   662  0D99                     	;# 
   663  0D99                     	;# 
   664  0D9A                     	;# 
   665  0D9B                     	;# 
   666  0D9C                     	;# 
   667  0D9C                     	;# 
   668  0D9D                     	;# 
   669  0D9D                     	;# 
   670  0D9E                     	;# 
   671  0D9F                     	;# 
   672  0DA0                     	;# 
   673  0DA1                     	;# 
   674  0DA1                     	;# 
   675  0DA2                     	;# 
   676  0DA3                     	;# 
   677  0DA3                     	;# 
   678  0DA4                     	;# 
   679  0DA5                     	;# 
   680  0DA5                     	;# 
   681  0DA6                     	;# 
   682  0DA7                     	;# 
   683  0DA7                     	;# 
   684  0DA8                     	;# 
   685  0DA9                     	;# 
   686  0DA9                     	;# 
   687  0DAA                     	;# 
   688  0DAB                     	;# 
   689  0DAC                     	;# 
   690  0DAC                     	;# 
   691  0DAD                     	;# 
   692  0DAD                     	;# 
   693  0DAE                     	;# 
   694  0DAF                     	;# 
   695  0DB0                     	;# 
   696  0DB1                     	;# 
   697  0DB1                     	;# 
   698  0DB2                     	;# 
   699  0DB3                     	;# 
   700  0DB3                     	;# 
   701  0DB4                     	;# 
   702  0DB5                     	;# 
   703  0DB5                     	;# 
   704  0DB6                     	;# 
   705  0DB7                     	;# 
   706  0DB7                     	;# 
   707  0DB8                     	;# 
   708  0DB9                     	;# 
   709  0DB9                     	;# 
   710  0DBA                     	;# 
   711  0DBB                     	;# 
   712  0DBC                     	;# 
   713  0DBC                     	;# 
   714  0DBD                     	;# 
   715  0DBD                     	;# 
   716  0DBE                     	;# 
   717  0DBF                     	;# 
   718  0DC0                     	;# 
   719  0DC1                     	;# 
   720  0DC1                     	;# 
   721  0DC2                     	;# 
   722  0DC3                     	;# 
   723  0DC3                     	;# 
   724  0DC4                     	;# 
   725  0DC5                     	;# 
   726  0DC5                     	;# 
   727  0DC6                     	;# 
   728  0DC7                     	;# 
   729  0DC7                     	;# 
   730  0DC8                     	;# 
   731  0DC9                     	;# 
   732  0DC9                     	;# 
   733  0DCA                     	;# 
   734  0DCB                     	;# 
   735  0DCC                     	;# 
   736  0DCC                     	;# 
   737  0DCD                     	;# 
   738  0DCD                     	;# 
   739  0DCE                     	;# 
   740  0DCF                     	;# 
   741  0DD0                     	;# 
   742  0E0F                     	;# 
   743  0E10                     	;# 
   744  0E11                     	;# 
   745  0E12                     	;# 
   746  0E13                     	;# 
   747  0E14                     	;# 
   748  0E15                     	;# 
   749  0E16                     	;# 
   750  0E17                     	;# 
   751  0E90                     	;# 
   752  0E91                     	;# 
   753  0E92                     	;# 
   754  0E94                     	;# 
   755  0E95                     	;# 
   756  0EA0                     	;# 
   757  0EA1                     	;# 
   758  0EA2                     	;# 
   759  0EA3                     	;# 
   760  0EA4                     	;# 
   761  0EA5                     	;# 
   762  0FE4                     	;# 
   763  0FE5                     	;# 
   764  0FE6                     	;# 
   765  0FE7                     	;# 
   766  0FE8                     	;# 
   767  0FE8                     	;# 
   768  0FE9                     	;# 
   769  0FEA                     	;# 
   770  0FEA                     	;# 
   771  0FEB                     	;# 
   772  0FED                     	;# 
   773  0FEE                     	;# 
   774  0FEE                     	;# 
   775  0FEF                     	;# 
   776  0000                     	;# 
   777  0001                     	;# 
   778  0002                     	;# 
   779  0003                     	;# 
   780  0004                     	;# 
   781  0005                     	;# 
   782  0006                     	;# 
   783  0007                     	;# 
   784  0008                     	;# 
   785  0009                     	;# 
   786  000A                     	;# 
   787  000B                     	;# 
   788  000C                     	;# 
   789  000E                     	;# 
   790  0011                     	;# 
   791  0012                     	;# 
   792  0013                     	;# 
   793  0015                     	;# 
   794  0016                     	;# 
   795  0016                     	;# 
   796  0017                     	;# 
   797  0018                     	;# 
   798  0019                     	;# 
   799  001A                     	;# 
   800  001B                     	;# 
   801  001C                     	;# 
   802  008C                     	;# 
   803  008E                     	;# 
   804  0091                     	;# 
   805  0092                     	;# 
   806  0093                     	;# 
   807  0095                     	;# 
   808  0096                     	;# 
   809  0097                     	;# 
   810  0098                     	;# 
   811  0099                     	;# 
   812  009A                     	;# 
   813  009B                     	;# 
   814  009B                     	;# 
   815  009C                     	;# 
   816  009D                     	;# 
   817  009E                     	;# 
   818  009F                     	;# 
   819  010C                     	;# 
   820  010E                     	;# 
   821  0111                     	;# 
   822  0112                     	;# 
   823  0113                     	;# 
   824  0114                     	;# 
   825  0115                     	;# 
   826  0116                     	;# 
   827  0117                     	;# 
   828  0118                     	;# 
   829  0119                     	;# 
   830  018C                     	;# 
   831  018E                     	;# 
   832  0191                     	;# 
   833  0191                     	;# 
   834  0192                     	;# 
   835  0193                     	;# 
   836  0193                     	;# 
   837  0194                     	;# 
   838  0195                     	;# 
   839  0196                     	;# 
   840  0197                     	;# 
   841  0199                     	;# 
   842  019A                     	;# 
   843  019B                     	;# 
   844  019B                     	;# 
   845  019C                     	;# 
   846  019D                     	;# 
   847  019E                     	;# 
   848  019F                     	;# 
   849  020C                     	;# 
   850  020E                     	;# 
   851  028C                     	;# 
   852  028E                     	;# 
   853  030C                     	;# 
   854  030E                     	;# 
   855  038C                     	;# 
   856  038E                     	;# 
   857  0391                     	;# 
   858  0392                     	;# 
   859  0393                     	;# 
   860  0397                     	;# 
   861  0398                     	;# 
   862  0399                     	;# 
   863  0691                     	;# 
   864  0692                     	;# 
   865  0693                     	;# 
   866  0694                     	;# 
   867  0695                     	;# 
   868  0D8E                     	;# 
   869  0D8F                     	;# 
   870  0D90                     	;# 
   871  0D91                     	;# 
   872  0D91                     	;# 
   873  0D92                     	;# 
   874  0D93                     	;# 
   875  0D93                     	;# 
   876  0D94                     	;# 
   877  0D95                     	;# 
   878  0D95                     	;# 
   879  0D96                     	;# 
   880  0D97                     	;# 
   881  0D97                     	;# 
   882  0D98                     	;# 
   883  0D99                     	;# 
   884  0D99                     	;# 
   885  0D9A                     	;# 
   886  0D9B                     	;# 
   887  0D9C                     	;# 
   888  0D9C                     	;# 
   889  0D9D                     	;# 
   890  0D9D                     	;# 
   891  0D9E                     	;# 
   892  0D9F                     	;# 
   893  0DA0                     	;# 
   894  0DA1                     	;# 
   895  0DA1                     	;# 
   896  0DA2                     	;# 
   897  0DA3                     	;# 
   898  0DA3                     	;# 
   899  0DA4                     	;# 
   900  0DA5                     	;# 
   901  0DA5                     	;# 
   902  0DA6                     	;# 
   903  0DA7                     	;# 
   904  0DA7                     	;# 
   905  0DA8                     	;# 
   906  0DA9                     	;# 
   907  0DA9                     	;# 
   908  0DAA                     	;# 
   909  0DAB                     	;# 
   910  0DAC                     	;# 
   911  0DAC                     	;# 
   912  0DAD                     	;# 
   913  0DAD                     	;# 
   914  0DAE                     	;# 
   915  0DAF                     	;# 
   916  0DB0                     	;# 
   917  0DB1                     	;# 
   918  0DB1                     	;# 
   919  0DB2                     	;# 
   920  0DB3                     	;# 
   921  0DB3                     	;# 
   922  0DB4                     	;# 
   923  0DB5                     	;# 
   924  0DB5                     	;# 
   925  0DB6                     	;# 
   926  0DB7                     	;# 
   927  0DB7                     	;# 
   928  0DB8                     	;# 
   929  0DB9                     	;# 
   930  0DB9                     	;# 
   931  0DBA                     	;# 
   932  0DBB                     	;# 
   933  0DBC                     	;# 
   934  0DBC                     	;# 
   935  0DBD                     	;# 
   936  0DBD                     	;# 
   937  0DBE                     	;# 
   938  0DBF                     	;# 
   939  0DC0                     	;# 
   940  0DC1                     	;# 
   941  0DC1                     	;# 
   942  0DC2                     	;# 
   943  0DC3                     	;# 
   944  0DC3                     	;# 
   945  0DC4                     	;# 
   946  0DC5                     	;# 
   947  0DC5                     	;# 
   948  0DC6                     	;# 
   949  0DC7                     	;# 
   950  0DC7                     	;# 
   951  0DC8                     	;# 
   952  0DC9                     	;# 
   953  0DC9                     	;# 
   954  0DCA                     	;# 
   955  0DCB                     	;# 
   956  0DCC                     	;# 
   957  0DCC                     	;# 
   958  0DCD                     	;# 
   959  0DCD                     	;# 
   960  0DCE                     	;# 
   961  0DCF                     	;# 
   962  0DD0                     	;# 
   963  0E0F                     	;# 
   964  0E10                     	;# 
   965  0E11                     	;# 
   966  0E12                     	;# 
   967  0E13                     	;# 
   968  0E14                     	;# 
   969  0E15                     	;# 
   970  0E16                     	;# 
   971  0E17                     	;# 
   972  0E90                     	;# 
   973  0E91                     	;# 
   974  0E92                     	;# 
   975  0E94                     	;# 
   976  0E95                     	;# 
   977  0EA0                     	;# 
   978  0EA1                     	;# 
   979  0EA2                     	;# 
   980  0EA3                     	;# 
   981  0EA4                     	;# 
   982  0EA5                     	;# 
   983  0FE4                     	;# 
   984  0FE5                     	;# 
   985  0FE6                     	;# 
   986  0FE7                     	;# 
   987  0FE8                     	;# 
   988  0FE8                     	;# 
   989  0FE9                     	;# 
   990  0FEA                     	;# 
   991  0FEA                     	;# 
   992  0FEB                     	;# 
   993  0FED                     	;# 
   994  0FEE                     	;# 
   995  0FEE                     	;# 
   996  0FEF                     	;# 
   997  0000                     	;# 
   998  0001                     	;# 
   999  0002                     	;# 
  1000  0003                     	;# 
  1001  0004                     	;# 
  1002  0005                     	;# 
  1003  0006                     	;# 
  1004  0007                     	;# 
  1005  0008                     	;# 
  1006  0009                     	;# 
  1007  000A                     	;# 
  1008  000B                     	;# 
  1009  000C                     	;# 
  1010  000E                     	;# 
  1011  0011                     	;# 
  1012  0012                     	;# 
  1013  0013                     	;# 
  1014  0015                     	;# 
  1015  0016                     	;# 
  1016  0016                     	;# 
  1017  0017                     	;# 
  1018  0018                     	;# 
  1019  0019                     	;# 
  1020  001A                     	;# 
  1021  001B                     	;# 
  1022  001C                     	;# 
  1023  008C                     	;# 
  1024  008E                     	;# 
  1025  0091                     	;# 
  1026  0092                     	;# 
  1027  0093                     	;# 
  1028  0095                     	;# 
  1029  0096                     	;# 
  1030  0097                     	;# 
  1031  0098                     	;# 
  1032  0099                     	;# 
  1033  009A                     	;# 
  1034  009B                     	;# 
  1035  009B                     	;# 
  1036  009C                     	;# 
  1037  009D                     	;# 
  1038  009E                     	;# 
  1039  009F                     	;# 
  1040  010C                     	;# 
  1041  010E                     	;# 
  1042  0111                     	;# 
  1043  0112                     	;# 
  1044  0113                     	;# 
  1045  0114                     	;# 
  1046  0115                     	;# 
  1047  0116                     	;# 
  1048  0117                     	;# 
  1049  0118                     	;# 
  1050  0119                     	;# 
  1051  018C                     	;# 
  1052  018E                     	;# 
  1053  0191                     	;# 
  1054  0191                     	;# 
  1055  0192                     	;# 
  1056  0193                     	;# 
  1057  0193                     	;# 
  1058  0194                     	;# 
  1059  0195                     	;# 
  1060  0196                     	;# 
  1061  0197                     	;# 
  1062  0199                     	;# 
  1063  019A                     	;# 
  1064  019B                     	;# 
  1065  019B                     	;# 
  1066  019C                     	;# 
  1067  019D                     	;# 
  1068  019E                     	;# 
  1069  019F                     	;# 
  1070  020C                     	;# 
  1071  020E                     	;# 
  1072  028C                     	;# 
  1073  028E                     	;# 
  1074  030C                     	;# 
  1075  030E                     	;# 
  1076  038C                     	;# 
  1077  038E                     	;# 
  1078  0391                     	;# 
  1079  0392                     	;# 
  1080  0393                     	;# 
  1081  0397                     	;# 
  1082  0398                     	;# 
  1083  0399                     	;# 
  1084  0691                     	;# 
  1085  0692                     	;# 
  1086  0693                     	;# 
  1087  0694                     	;# 
  1088  0695                     	;# 
  1089  0D8E                     	;# 
  1090  0D8F                     	;# 
  1091  0D90                     	;# 
  1092  0D91                     	;# 
  1093  0D91                     	;# 
  1094  0D92                     	;# 
  1095  0D93                     	;# 
  1096  0D93                     	;# 
  1097  0D94                     	;# 
  1098  0D95                     	;# 
  1099  0D95                     	;# 
  1100  0D96                     	;# 
  1101  0D97                     	;# 
  1102  0D97                     	;# 
  1103  0D98                     	;# 
  1104  0D99                     	;# 
  1105  0D99                     	;# 
  1106  0D9A                     	;# 
  1107  0D9B                     	;# 
  1108  0D9C                     	;# 
  1109  0D9C                     	;# 
  1110  0D9D                     	;# 
  1111  0D9D                     	;# 
  1112  0D9E                     	;# 
  1113  0D9F                     	;# 
  1114  0DA0                     	;# 
  1115  0DA1                     	;# 
  1116  0DA1                     	;# 
  1117  0DA2                     	;# 
  1118  0DA3                     	;# 
  1119  0DA3                     	;# 
  1120  0DA4                     	;# 
  1121  0DA5                     	;# 
  1122  0DA5                     	;# 
  1123  0DA6                     	;# 
  1124  0DA7                     	;# 
  1125  0DA7                     	;# 
  1126  0DA8                     	;# 
  1127  0DA9                     	;# 
  1128  0DA9                     	;# 
  1129  0DAA                     	;# 
  1130  0DAB                     	;# 
  1131  0DAC                     	;# 
  1132  0DAC                     	;# 
  1133  0DAD                     	;# 
  1134  0DAD                     	;# 
  1135  0DAE                     	;# 
  1136  0DAF                     	;# 
  1137  0DB0                     	;# 
  1138  0DB1                     	;# 
  1139  0DB1                     	;# 
  1140  0DB2                     	;# 
  1141  0DB3                     	;# 
  1142  0DB3                     	;# 
  1143  0DB4                     	;# 
  1144  0DB5                     	;# 
  1145  0DB5                     	;# 
  1146  0DB6                     	;# 
  1147  0DB7                     	;# 
  1148  0DB7                     	;# 
  1149  0DB8                     	;# 
  1150  0DB9                     	;# 
  1151  0DB9                     	;# 
  1152  0DBA                     	;# 
  1153  0DBB                     	;# 
  1154  0DBC                     	;# 
  1155  0DBC                     	;# 
  1156  0DBD                     	;# 
  1157  0DBD                     	;# 
  1158  0DBE                     	;# 
  1159  0DBF                     	;# 
  1160  0DC0                     	;# 
  1161  0DC1                     	;# 
  1162  0DC1                     	;# 
  1163  0DC2                     	;# 
  1164  0DC3                     	;# 
  1165  0DC3                     	;# 
  1166  0DC4                     	;# 
  1167  0DC5                     	;# 
  1168  0DC5                     	;# 
  1169  0DC6                     	;# 
  1170  0DC7                     	;# 
  1171  0DC7                     	;# 
  1172  0DC8                     	;# 
  1173  0DC9                     	;# 
  1174  0DC9                     	;# 
  1175  0DCA                     	;# 
  1176  0DCB                     	;# 
  1177  0DCC                     	;# 
  1178  0DCC                     	;# 
  1179  0DCD                     	;# 
  1180  0DCD                     	;# 
  1181  0DCE                     	;# 
  1182  0DCF                     	;# 
  1183  0DD0                     	;# 
  1184  0E0F                     	;# 
  1185  0E10                     	;# 
  1186  0E11                     	;# 
  1187  0E12                     	;# 
  1188  0E13                     	;# 
  1189  0E14                     	;# 
  1190  0E15                     	;# 
  1191  0E16                     	;# 
  1192  0E17                     	;# 
  1193  0E90                     	;# 
  1194  0E91                     	;# 
  1195  0E92                     	;# 
  1196  0E94                     	;# 
  1197  0E95                     	;# 
  1198  0EA0                     	;# 
  1199  0EA1                     	;# 
  1200  0EA2                     	;# 
  1201  0EA3                     	;# 
  1202  0EA4                     	;# 
  1203  0EA5                     	;# 
  1204  0FE4                     	;# 
  1205  0FE5                     	;# 
  1206  0FE6                     	;# 
  1207  0FE7                     	;# 
  1208  0FE8                     	;# 
  1209  0FE8                     	;# 
  1210  0FE9                     	;# 
  1211  0FEA                     	;# 
  1212  0FEA                     	;# 
  1213  0FEB                     	;# 
  1214  0FED                     	;# 
  1215  0FEE                     	;# 
  1216  0FEE                     	;# 
  1217  0FEF                     	;# 
  1218  0FFF                     	;# 
  1219  0000                     	;# 
  1220  0001                     	;# 
  1221  0002                     	;# 
  1222  0003                     	;# 
  1223  0004                     	;# 
  1224  0005                     	;# 
  1225  0006                     	;# 
  1226  0007                     	;# 
  1227  0008                     	;# 
  1228  0009                     	;# 
  1229  000A                     	;# 
  1230  000B                     	;# 
  1231  000C                     	;# 
  1232  000E                     	;# 
  1233  0011                     	;# 
  1234  0012                     	;# 
  1235  0013                     	;# 
  1236  0015                     	;# 
  1237  0016                     	;# 
  1238  0016                     	;# 
  1239  0017                     	;# 
  1240  0018                     	;# 
  1241  0019                     	;# 
  1242  001A                     	;# 
  1243  001B                     	;# 
  1244  001C                     	;# 
  1245  008C                     	;# 
  1246  008E                     	;# 
  1247  0091                     	;# 
  1248  0092                     	;# 
  1249  0093                     	;# 
  1250  0095                     	;# 
  1251  0096                     	;# 
  1252  0097                     	;# 
  1253  0098                     	;# 
  1254  0099                     	;# 
  1255  009A                     	;# 
  1256  009B                     	;# 
  1257  009B                     	;# 
  1258  009C                     	;# 
  1259  009D                     	;# 
  1260  009E                     	;# 
  1261  009F                     	;# 
  1262  010C                     	;# 
  1263  010E                     	;# 
  1264  0111                     	;# 
  1265  0112                     	;# 
  1266  0113                     	;# 
  1267  0114                     	;# 
  1268  0115                     	;# 
  1269  0116                     	;# 
  1270  0117                     	;# 
  1271  0118                     	;# 
  1272  0119                     	;# 
  1273  018C                     	;# 
  1274  018E                     	;# 
  1275  0191                     	;# 
  1276  0191                     	;# 
  1277  0192                     	;# 
  1278  0193                     	;# 
  1279  0193                     	;# 
  1280  0194                     	;# 
  1281  0195                     	;# 
  1282  0196                     	;# 
  1283  0197                     	;# 
  1284  0199                     	;# 
  1285  019A                     	;# 
  1286  019B                     	;# 
  1287  019B                     	;# 
  1288  019C                     	;# 
  1289  019D                     	;# 
  1290  019E                     	;# 
  1291  019F                     	;# 
  1292  020C                     	;# 
  1293  020E                     	;# 
  1294  028C                     	;# 
  1295  028E                     	;# 
  1296  030C                     	;# 
  1297  030E                     	;# 
  1298  038C                     	;# 
  1299  038E                     	;# 
  1300  0391                     	;# 
  1301  0392                     	;# 
  1302  0393                     	;# 
  1303  0397                     	;# 
  1304  0398                     	;# 
  1305  0399                     	;# 
  1306  0691                     	;# 
  1307  0692                     	;# 
  1308  0693                     	;# 
  1309  0694                     	;# 
  1310  0695                     	;# 
  1311  0D8E                     	;# 
  1312  0D8F                     	;# 
  1313  0D90                     	;# 
  1314  0D91                     	;# 
  1315  0D91                     	;# 
  1316  0D92                     	;# 
  1317  0D93                     	;# 
  1318  0D93                     	;# 
  1319  0D94                     	;# 
  1320  0D95                     	;# 
  1321  0D95                     	;# 
  1322  0D96                     	;# 
  1323  0D97                     	;# 
  1324  0D97                     	;# 
  1325  0D98                     	;# 
  1326  0D99                     	;# 
  1327  0D99                     	;# 
  1328  0D9A                     	;# 
  1329  0D9B                     	;# 
  1330  0D9C                     	;# 
  1331  0D9C                     	;# 
  1332  0D9D                     	;# 
  1333  0D9D                     	;# 
  1334  0D9E                     	;# 
  1335  0D9F                     	;# 
  1336  0DA0                     	;# 
  1337  0DA1                     	;# 
  1338  0DA1                     	;# 
  1339  0DA2                     	;# 
  1340  0DA3                     	;# 
  1341  0DA3                     	;# 
  1342  0DA4                     	;# 
  1343  0DA5                     	;# 
  1344  0DA5                     	;# 
  1345  0DA6                     	;# 
  1346  0DA7                     	;# 
  1347  0DA7                     	;# 
  1348  0DA8                     	;# 
  1349  0DA9                     	;# 
  1350  0DA9                     	;# 
  1351  0DAA                     	;# 
  1352  0DAB                     	;# 
  1353  0DAC                     	;# 
  1354  0DAC                     	;# 
  1355  0DAD                     	;# 
  1356  0DAD                     	;# 
  1357  0DAE                     	;# 
  1358  0DAF                     	;# 
  1359  0DB0                     	;# 
  1360  0DB1                     	;# 
  1361  0DB1                     	;# 
  1362  0DB2                     	;# 
  1363  0DB3                     	;# 
  1364  0DB3                     	;# 
  1365  0DB4                     	;# 
  1366  0DB5                     	;# 
  1367  0DB5                     	;# 
  1368  0DB6                     	;# 
  1369  0DB7                     	;# 
  1370  0DB7                     	;# 
  1371  0DB8                     	;# 
  1372  0DB9                     	;# 
  1373  0DB9                     	;# 
  1374  0DBA                     	;# 
  1375  0DBB                     	;# 
  1376  0DBC                     	;# 
  1377  0DBC                     	;# 
  1378  0DBD                     	;# 
  1379  0DBD                     	;# 
  1380  0DBE                     	;# 
  1381  0DBF                     	;# 
  1382  0DC0                     	;# 
  1383  0DC1                     	;# 
  1384  0DC1                     	;# 
  1385  0DC2                     	;# 
  1386  0DC3                     	;# 
  1387  0DC3                     	;# 
  1388  0DC4                     	;# 
  1389  0DC5                     	;# 
  1390  0DC5                     	;# 
  1391  0DC6                     	;# 
  1392  0DC7                     	;# 
  1393  0DC7                     	;# 
  1394  0DC8                     	;# 
  1395  0DC9                     	;# 
  1396  0DC9                     	;# 
  1397  0DCA                     	;# 
  1398  0DCB                     	;# 
  1399  0DCC                     	;# 
  1400  0DCC                     	;# 
  1401  0DCD                     	;# 
  1402  0DCD                     	;# 
  1403  0DCE                     	;# 
  1404  0DCF                     	;# 
  1405  0DD0                     	;# 
  1406  0E0F                     	;# 
  1407  0E10                     	;# 
  1408  0E11                     	;# 
  1409  0E12                     	;# 
  1410  0E13                     	;# 
  1411  0E14                     	;# 
  1412  0E15                     	;# 
  1413  0E16                     	;# 
  1414  0E17                     	;# 
  1415  0E90                     	;# 
  1416  0E91                     	;# 
  1417  0E92                     	;# 
  1418  0E94                     	;# 
  1419  0E95                     	;# 
  1420  0EA0                     	;# 
  1421  0EA1                     	;# 
  1422  0EA2                     	;# 
  1423  0EA3                     	;# 
  1424  0EA4                     	;# 
  1425  0EA5                     	;# 
  1426  0FE4                     	;# 
  1427  0FE5                     	;# 
  1428  0FE6                     	;# 
  1429  0FE7                     	;# 
  1430  0FE8                     	;# 
  1431  0FE8                     	;# 
  1432  0FE9                     	;# 
  1433  0FEA                     	;# 
  1434  0FEA                     	;# 
  1435  0FEB                     	;# 
  1436  0FED                     	;# 
  1437  0FEE                     	;# 
  1438  0FEE                     	;# 
  1439  0FEF                     	;# 
  1440  0000                     	;# 
  1441  0001                     	;# 
  1442  0002                     	;# 
  1443  0003                     	;# 
  1444  0004                     	;# 
  1445  0005                     	;# 
  1446  0006                     	;# 
  1447  0007                     	;# 
  1448  0008                     	;# 
  1449  0009                     	;# 
  1450  000A                     	;# 
  1451  000B                     	;# 
  1452  000C                     	;# 
  1453  000E                     	;# 
  1454  0011                     	;# 
  1455  0012                     	;# 
  1456  0013                     	;# 
  1457  0015                     	;# 
  1458  0016                     	;# 
  1459  0016                     	;# 
  1460  0017                     	;# 
  1461  0018                     	;# 
  1462  0019                     	;# 
  1463  001A                     	;# 
  1464  001B                     	;# 
  1465  001C                     	;# 
  1466  008C                     	;# 
  1467  008E                     	;# 
  1468  0091                     	;# 
  1469  0092                     	;# 
  1470  0093                     	;# 
  1471  0095                     	;# 
  1472  0096                     	;# 
  1473  0097                     	;# 
  1474  0098                     	;# 
  1475  0099                     	;# 
  1476  009A                     	;# 
  1477  009B                     	;# 
  1478  009B                     	;# 
  1479  009C                     	;# 
  1480  009D                     	;# 
  1481  009E                     	;# 
  1482  009F                     	;# 
  1483  010C                     	;# 
  1484  010E                     	;# 
  1485  0111                     	;# 
  1486  0112                     	;# 
  1487  0113                     	;# 
  1488  0114                     	;# 
  1489  0115                     	;# 
  1490  0116                     	;# 
  1491  0117                     	;# 
  1492  0118                     	;# 
  1493  0119                     	;# 
  1494  018C                     	;# 
  1495  018E                     	;# 
  1496  0191                     	;# 
  1497  0191                     	;# 
  1498  0192                     	;# 
  1499  0193                     	;# 
  1500  0193                     	;# 
  1501  0194                     	;# 
  1502  0195                     	;# 
  1503  0196                     	;# 
  1504  0197                     	;# 
  1505  0199                     	;# 
  1506  019A                     	;# 
  1507  019B                     	;# 
  1508  019B                     	;# 
  1509  019C                     	;# 
  1510  019D                     	;# 
  1511  019E                     	;# 
  1512  019F                     	;# 
  1513  020C                     	;# 
  1514  020E                     	;# 
  1515  028C                     	;# 
  1516  028E                     	;# 
  1517  030C                     	;# 
  1518  030E                     	;# 
  1519  038C                     	;# 
  1520  038E                     	;# 
  1521  0391                     	;# 
  1522  0392                     	;# 
  1523  0393                     	;# 
  1524  0397                     	;# 
  1525  0398                     	;# 
  1526  0399                     	;# 
  1527  0691                     	;# 
  1528  0692                     	;# 
  1529  0693                     	;# 
  1530  0694                     	;# 
  1531  0695                     	;# 
  1532  0D8E                     	;# 
  1533  0D8F                     	;# 
  1534  0D90                     	;# 
  1535  0D91                     	;# 
  1536  0D91                     	;# 
  1537  0D92                     	;# 
  1538  0D93                     	;# 
  1539  0D93                     	;# 
  1540  0D94                     	;# 
  1541  0D95                     	;# 
  1542  0D95                     	;# 
  1543  0D96                     	;# 
  1544  0D97                     	;# 
  1545  0D97                     	;# 
  1546  0D98                     	;# 
  1547  0D99                     	;# 
  1548  0D99                     	;# 
  1549  0D9A                     	;# 
  1550  0D9B                     	;# 
  1551  0D9C                     	;# 
  1552  0D9C                     	;# 
  1553  0D9D                     	;# 
  1554  0D9D                     	;# 
  1555  0D9E                     	;# 
  1556  0D9F                     	;# 
  1557  0DA0                     	;# 
  1558  0DA1                     	;# 
  1559  0DA1                     	;# 
  1560  0DA2                     	;# 
  1561  0DA3                     	;# 
  1562  0DA3                     	;# 
  1563  0DA4                     	;# 
  1564  0DA5                     	;# 
  1565  0DA5                     	;# 
  1566  0DA6                     	;# 
  1567  0DA7                     	;# 
  1568  0DA7                     	;# 
  1569  0DA8                     	;# 
  1570  0DA9                     	;# 
  1571  0DA9                     	;# 
  1572  0DAA                     	;# 
  1573  0DAB                     	;# 
  1574  0DAC                     	;# 
  1575  0DAC                     	;# 
  1576  0DAD                     	;# 
  1577  0DAD                     	;# 
  1578  0DAE                     	;# 
  1579  0DAF                     	;# 
  1580  0DB0                     	;# 
  1581  0DB1                     	;# 
  1582  0DB1                     	;# 
  1583  0DB2                     	;# 
  1584  0DB3                     	;# 
  1585  0DB3                     	;# 
  1586  0DB4                     	;# 
  1587  0DB5                     	;# 
  1588  0DB5                     	;# 
  1589  0DB6                     	;# 
  1590  0DB7                     	;# 
  1591  0DB7                     	;# 
  1592  0DB8                     	;# 
  1593  0DB9                     	;# 
  1594  0DB9                     	;# 
  1595  0DBA                     	;# 
  1596  0DBB                     	;# 
  1597  0DBC                     	;# 
  1598  0DBC                     	;# 
  1599  0DBD                     	;# 
  1600  0DBD                     	;# 
  1601  0DBE                     	;# 
  1602  0DBF                     	;# 
  1603  0DC0                     	;# 
  1604  0DC1                     	;# 
  1605  0DC1                     	;# 
  1606  0DC2                     	;# 
  1607  0DC3                     	;# 
  1608  0DC3                     	;# 
  1609  0DC4                     	;# 
  1610  0DC5                     	;# 
  1611  0DC5                     	;# 
  1612  0DC6                     	;# 
  1613  0DC7                     	;# 
  1614  0DC7                     	;# 
  1615  0DC8                     	;# 
  1616  0DC9                     	;# 
  1617  0DC9                     	;# 
  1618  0DCA                     	;# 
  1619  0DCB                     	;# 
  1620  0DCC                     	;# 
  1621  0DCC                     	;# 
  1622  0DCD                     	;# 
  1623  0DCD                     	;# 
  1624  0DCE                     	;# 
  1625  0DCF                     	;# 
  1626  0DD0                     	;# 
  1627  0E0F                     	;# 
  1628  0E10                     	;# 
  1629  0E11                     	;# 
  1630  0E12                     	;# 
  1631  0E13                     	;# 
  1632  0E14                     	;# 
  1633  0E15                     	;# 
  1634  0E16                     	;# 
  1635  0E17                     	;# 
  1636  0E90                     	;# 
  1637  0E91                     	;# 
  1638  0E92                     	;# 
  1639  0E94                     	;# 
  1640  0E95                     	;# 
  1641  0EA0                     	;# 
  1642  0EA1                     	;# 
  1643  0EA2                     	;# 
  1644  0EA3                     	;# 
  1645  0EA4                     	;# 
  1646  0EA5                     	;# 
  1647  0FE4                     	;# 
  1648  0FE5                     	;# 
  1649  0FE6                     	;# 
  1650  0FE7                     	;# 
  1651  0FE8                     	;# 
  1652  0FE8                     	;# 
  1653  0FE9                     	;# 
  1654  0FEA                     	;# 
  1655  0FEA                     	;# 
  1656  0FEB                     	;# 
  1657  0FED                     	;# 
  1658  0FEE                     	;# 
  1659  0FEE                     	;# 
  1660  0FEF                     	;# 
  1661  0000                     	;# 
  1662  0001                     	;# 
  1663  0002                     	;# 
  1664  0003                     	;# 
  1665  0004                     	;# 
  1666  0005                     	;# 
  1667  0006                     	;# 
  1668  0007                     	;# 
  1669  0008                     	;# 
  1670  0009                     	;# 
  1671  000A                     	;# 
  1672  000B                     	;# 
  1673  000C                     	;# 
  1674  000E                     	;# 
  1675  0011                     	;# 
  1676  0012                     	;# 
  1677  0013                     	;# 
  1678  0015                     	;# 
  1679  0016                     	;# 
  1680  0016                     	;# 
  1681  0017                     	;# 
  1682  0018                     	;# 
  1683  0019                     	;# 
  1684  001A                     	;# 
  1685  001B                     	;# 
  1686  001C                     	;# 
  1687  008C                     	;# 
  1688  008E                     	;# 
  1689  0091                     	;# 
  1690  0092                     	;# 
  1691  0093                     	;# 
  1692  0095                     	;# 
  1693  0096                     	;# 
  1694  0097                     	;# 
  1695  0098                     	;# 
  1696  0099                     	;# 
  1697  009A                     	;# 
  1698  009B                     	;# 
  1699  009B                     	;# 
  1700  009C                     	;# 
  1701  009D                     	;# 
  1702  009E                     	;# 
  1703  009F                     	;# 
  1704  010C                     	;# 
  1705  010E                     	;# 
  1706  0111                     	;# 
  1707  0112                     	;# 
  1708  0113                     	;# 
  1709  0114                     	;# 
  1710  0115                     	;# 
  1711  0116                     	;# 
  1712  0117                     	;# 
  1713  0118                     	;# 
  1714  0119                     	;# 
  1715  018C                     	;# 
  1716  018E                     	;# 
  1717  0191                     	;# 
  1718  0191                     	;# 
  1719  0192                     	;# 
  1720  0193                     	;# 
  1721  0193                     	;# 
  1722  0194                     	;# 
  1723  0195                     	;# 
  1724  0196                     	;# 
  1725  0197                     	;# 
  1726  0199                     	;# 
  1727  019A                     	;# 
  1728  019B                     	;# 
  1729  019B                     	;# 
  1730  019C                     	;# 
  1731  019D                     	;# 
  1732  019E                     	;# 
  1733  019F                     	;# 
  1734  020C                     	;# 
  1735  020E                     	;# 
  1736  028C                     	;# 
  1737  028E                     	;# 
  1738  030C                     	;# 
  1739  030E                     	;# 
  1740  038C                     	;# 
  1741  038E                     	;# 
  1742  0391                     	;# 
  1743  0392                     	;# 
  1744  0393                     	;# 
  1745  0397                     	;# 
  1746  0398                     	;# 
  1747  0399                     	;# 
  1748  0691                     	;# 
  1749  0692                     	;# 
  1750  0693                     	;# 
  1751  0694                     	;# 
  1752  0695                     	;# 
  1753  0D8E                     	;# 
  1754  0D8F                     	;# 
  1755  0D90                     	;# 
  1756  0D91                     	;# 
  1757  0D91                     	;# 
  1758  0D92                     	;# 
  1759  0D93                     	;# 
  1760  0D93                     	;# 
  1761  0D94                     	;# 
  1762  0D95                     	;# 
  1763  0D95                     	;# 
  1764  0D96                     	;# 
  1765  0D97                     	;# 
  1766  0D97                     	;# 
  1767  0D98                     	;# 
  1768  0D99                     	;# 
  1769  0D99                     	;# 
  1770  0D9A                     	;# 
  1771  0D9B                     	;# 
  1772  0D9C                     	;# 
  1773  0D9C                     	;# 
  1774  0D9D                     	;# 
  1775  0D9D                     	;# 
  1776  0D9E                     	;# 
  1777  0D9F                     	;# 
  1778  0DA0                     	;# 
  1779  0DA1                     	;# 
  1780  0DA1                     	;# 
  1781  0DA2                     	;# 
  1782  0DA3                     	;# 
  1783  0DA3                     	;# 
  1784  0DA4                     	;# 
  1785  0DA5                     	;# 
  1786  0DA5                     	;# 
  1787  0DA6                     	;# 
  1788  0DA7                     	;# 
  1789  0DA7                     	;# 
  1790  0DA8                     	;# 
  1791  0DA9                     	;# 
  1792  0DA9                     	;# 
  1793  0DAA                     	;# 
  1794  0DAB                     	;# 
  1795  0DAC                     	;# 
  1796  0DAC                     	;# 
  1797  0DAD                     	;# 
  1798  0DAD                     	;# 
  1799  0DAE                     	;# 
  1800  0DAF                     	;# 
  1801  0DB0                     	;# 
  1802  0DB1                     	;# 
  1803  0DB1                     	;# 
  1804  0DB2                     	;# 
  1805  0DB3                     	;# 
  1806  0DB3                     	;# 
  1807  0DB4                     	;# 
  1808  0DB5                     	;# 
  1809  0DB5                     	;# 
  1810  0DB6                     	;# 
  1811  0DB7                     	;# 
  1812  0DB7                     	;# 
  1813  0DB8                     	;# 
  1814  0DB9                     	;# 
  1815  0DB9                     	;# 
  1816  0DBA                     	;# 
  1817  0DBB                     	;# 
  1818  0DBC                     	;# 
  1819  0DBC                     	;# 
  1820  0DBD                     	;# 
  1821  0DBD                     	;# 
  1822  0DBE                     	;# 
  1823  0DBF                     	;# 
  1824  0DC0                     	;# 
  1825  0DC1                     	;# 
  1826  0DC1                     	;# 
  1827  0DC2                     	;# 
  1828  0DC3                     	;# 
  1829  0DC3                     	;# 
  1830  0DC4                     	;# 
  1831  0DC5                     	;# 
  1832  0DC5                     	;# 
  1833  0DC6                     	;# 
  1834  0DC7                     	;# 
  1835  0DC7                     	;# 
  1836  0DC8                     	;# 
  1837  0DC9                     	;# 
  1838  0DC9                     	;# 
  1839  0DCA                     	;# 
  1840  0DCB                     	;# 
  1841  0DCC                     	;# 
  1842  0DCC                     	;# 
  1843  0DCD                     	;# 
  1844  0DCD                     	;# 
  1845  0DCE                     	;# 
  1846  0DCF                     	;# 
  1847  0DD0                     	;# 
  1848  0E0F                     	;# 
  1849  0E10                     	;# 
  1850  0E11                     	;# 
  1851  0E12                     	;# 
  1852  0E13                     	;# 
  1853  0E14                     	;# 
  1854  0E15                     	;# 
  1855  0E16                     	;# 
  1856  0E17                     	;# 
  1857  0E90                     	;# 
  1858  0E91                     	;# 
  1859  0E92                     	;# 
  1860  0E94                     	;# 
  1861  0E95                     	;# 
  1862  0EA0                     	;# 
  1863  0EA1                     	;# 
  1864  0EA2                     	;# 
  1865  0EA3                     	;# 
  1866  0EA4                     	;# 
  1867  0EA5                     	;# 
  1868  0FE4                     	;# 
  1869  0FE5                     	;# 
  1870  0FE6                     	;# 
  1871  0FE7                     	;# 
  1872  0FE8                     	;# 
  1873  0FE8                     	;# 
  1874  0FE9                     	;# 
  1875  0FEA                     	;# 
  1876  0FEA                     	;# 
  1877  0FEB                     	;# 
  1878  0FED                     	;# 
  1879  0FEE                     	;# 
  1880  0FEE                     	;# 
  1881  0FEF                     	;# 
  1882  0000                     	;# 
  1883  0001                     	;# 
  1884  0002                     	;# 
  1885  0003                     	;# 
  1886  0004                     	;# 
  1887  0005                     	;# 
  1888  0006                     	;# 
  1889  0007                     	;# 
  1890  0008                     	;# 
  1891  0009                     	;# 
  1892  000A                     	;# 
  1893  000B                     	;# 
  1894  000C                     	;# 
  1895  000E                     	;# 
  1896  0011                     	;# 
  1897  0012                     	;# 
  1898  0013                     	;# 
  1899  0015                     	;# 
  1900  0016                     	;# 
  1901  0016                     	;# 
  1902  0017                     	;# 
  1903  0018                     	;# 
  1904  0019                     	;# 
  1905  001A                     	;# 
  1906  001B                     	;# 
  1907  001C                     	;# 
  1908  008C                     	;# 
  1909  008E                     	;# 
  1910  0091                     	;# 
  1911  0092                     	;# 
  1912  0093                     	;# 
  1913  0095                     	;# 
  1914  0096                     	;# 
  1915  0097                     	;# 
  1916  0098                     	;# 
  1917  0099                     	;# 
  1918  009A                     	;# 
  1919  009B                     	;# 
  1920  009B                     	;# 
  1921  009C                     	;# 
  1922  009D                     	;# 
  1923  009E                     	;# 
  1924  009F                     	;# 
  1925  010C                     	;# 
  1926  010E                     	;# 
  1927  0111                     	;# 
  1928  0112                     	;# 
  1929  0113                     	;# 
  1930  0114                     	;# 
  1931  0115                     	;# 
  1932  0116                     	;# 
  1933  0117                     	;# 
  1934  0118                     	;# 
  1935  0119                     	;# 
  1936  018C                     	;# 
  1937  018E                     	;# 
  1938  0191                     	;# 
  1939  0191                     	;# 
  1940  0192                     	;# 
  1941  0193                     	;# 
  1942  0193                     	;# 
  1943  0194                     	;# 
  1944  0195                     	;# 
  1945  0196                     	;# 
  1946  0197                     	;# 
  1947  0199                     	;# 
  1948  019A                     	;# 
  1949  019B                     	;# 
  1950  019B                     	;# 
  1951  019C                     	;# 
  1952  019D                     	;# 
  1953  019E                     	;# 
  1954  019F                     	;# 
  1955  020C                     	;# 
  1956  020E                     	;# 
  1957  028C                     	;# 
  1958  028E                     	;# 
  1959  030C                     	;# 
  1960  030E                     	;# 
  1961  038C                     	;# 
  1962  038E                     	;# 
  1963  0391                     	;# 
  1964  0392                     	;# 
  1965  0393                     	;# 
  1966  0397                     	;# 
  1967  0398                     	;# 
  1968  0399                     	;# 
  1969  0691                     	;# 
  1970  0692                     	;# 
  1971  0693                     	;# 
  1972  0694                     	;# 
  1973  0695                     	;# 
  1974  0D8E                     	;# 
  1975  0D8F                     	;# 
  1976  0D90                     	;# 
  1977  0D91                     	;# 
  1978  0D91                     	;# 
  1979  0D92                     	;# 
  1980  0D93                     	;# 
  1981  0D93                     	;# 
  1982  0D94                     	;# 
  1983  0D95                     	;# 
  1984  0D95                     	;# 
  1985  0D96                     	;# 
  1986  0D97                     	;# 
  1987  0D97                     	;# 
  1988  0D98                     	;# 
  1989  0D99                     	;# 
  1990  0D99                     	;# 
  1991  0D9A                     	;# 
  1992  0D9B                     	;# 
  1993  0D9C                     	;# 
  1994  0D9C                     	;# 
  1995  0D9D                     	;# 
  1996  0D9D                     	;# 
  1997  0D9E                     	;# 
  1998  0D9F                     	;# 
  1999  0DA0                     	;# 
  2000  0DA1                     	;# 
  2001  0DA1                     	;# 
  2002  0DA2                     	;# 
  2003  0DA3                     	;# 
  2004  0DA3                     	;# 
  2005  0DA4                     	;# 
  2006  0DA5                     	;# 
  2007  0DA5                     	;# 
  2008  0DA6                     	;# 
  2009  0DA7                     	;# 
  2010  0DA7                     	;# 
  2011  0DA8                     	;# 
  2012  0DA9                     	;# 
  2013  0DA9                     	;# 
  2014  0DAA                     	;# 
  2015  0DAB                     	;# 
  2016  0DAC                     	;# 
  2017  0DAC                     	;# 
  2018  0DAD                     	;# 
  2019  0DAD                     	;# 
  2020  0DAE                     	;# 
  2021  0DAF                     	;# 
  2022  0DB0                     	;# 
  2023  0DB1                     	;# 
  2024  0DB1                     	;# 
  2025  0DB2                     	;# 
  2026  0DB3                     	;# 
  2027  0DB3                     	;# 
  2028  0DB4                     	;# 
  2029  0DB5                     	;# 
  2030  0DB5                     	;# 
  2031  0DB6                     	;# 
  2032  0DB7                     	;# 
  2033  0DB7                     	;# 
  2034  0DB8                     	;# 
  2035  0DB9                     	;# 
  2036  0DB9                     	;# 
  2037  0DBA                     	;# 
  2038  0DBB                     	;# 
  2039  0DBC                     	;# 
  2040  0DBC                     	;# 
  2041  0DBD                     	;# 
  2042  0DBD                     	;# 
  2043  0DBE                     	;# 
  2044  0DBF                     	;# 
  2045  0DC0                     	;# 
  2046  0DC1                     	;# 
  2047  0DC1                     	;# 
  2048  0DC2                     	;# 
  2049  0DC3                     	;# 
  2050  0DC3                     	;# 
  2051  0DC4                     	;# 
  2052  0DC5                     	;# 
  2053  0DC5                     	;# 
  2054  0DC6                     	;# 
  2055  0DC7                     	;# 
  2056  0DC7                     	;# 
  2057  0DC8                     	;# 
  2058  0DC9                     	;# 
  2059  0DC9                     	;# 
  2060  0DCA                     	;# 
  2061  0DCB                     	;# 
  2062  0DCC                     	;# 
  2063  0DCC                     	;# 
  2064  0DCD                     	;# 
  2065  0DCD                     	;# 
  2066  0DCE                     	;# 
  2067  0DCF                     	;# 
  2068  0DD0                     	;# 
  2069  0E0F                     	;# 
  2070  0E10                     	;# 
  2071  0E11                     	;# 
  2072  0E12                     	;# 
  2073  0E13                     	;# 
  2074  0E14                     	;# 
  2075  0E15                     	;# 
  2076  0E16                     	;# 
  2077  0E17                     	;# 
  2078  0E90                     	;# 
  2079  0E91                     	;# 
  2080  0E92                     	;# 
  2081  0E94                     	;# 
  2082  0E95                     	;# 
  2083  0EA0                     	;# 
  2084  0EA1                     	;# 
  2085  0EA2                     	;# 
  2086  0EA3                     	;# 
  2087  0EA4                     	;# 
  2088  0EA5                     	;# 
  2089  0FE4                     	;# 
  2090  0FE5                     	;# 
  2091  0FE6                     	;# 
  2092  0FE7                     	;# 
  2093  0FE8                     	;# 
  2094  0FE8                     	;# 
  2095  0FE9                     	;# 
  2096  0FEA                     	;# 
  2097  0FEA                     	;# 
  2098  0FEB                     	;# 
  2099  0FED                     	;# 
  2100  0FEE                     	;# 
  2101  0FEE                     	;# 
  2102  0FEF                     	;# 
  2103  0000                     	;# 
  2104  0001                     	;# 
  2105  0002                     	;# 
  2106  0003                     	;# 
  2107  0004                     	;# 
  2108  0005                     	;# 
  2109  0006                     	;# 
  2110  0007                     	;# 
  2111  0008                     	;# 
  2112  0009                     	;# 
  2113  000A                     	;# 
  2114  000B                     	;# 
  2115  000C                     	;# 
  2116  000E                     	;# 
  2117  0011                     	;# 
  2118  0012                     	;# 
  2119  0013                     	;# 
  2120  0015                     	;# 
  2121  0016                     	;# 
  2122  0016                     	;# 
  2123  0017                     	;# 
  2124  0018                     	;# 
  2125  0019                     	;# 
  2126  001A                     	;# 
  2127  001B                     	;# 
  2128  001C                     	;# 
  2129  008C                     	;# 
  2130  008E                     	;# 
  2131  0091                     	;# 
  2132  0092                     	;# 
  2133  0093                     	;# 
  2134  0095                     	;# 
  2135  0096                     	;# 
  2136  0097                     	;# 
  2137  0098                     	;# 
  2138  0099                     	;# 
  2139  009A                     	;# 
  2140  009B                     	;# 
  2141  009B                     	;# 
  2142  009C                     	;# 
  2143  009D                     	;# 
  2144  009E                     	;# 
  2145  009F                     	;# 
  2146  010C                     	;# 
  2147  010E                     	;# 
  2148  0111                     	;# 
  2149  0112                     	;# 
  2150  0113                     	;# 
  2151  0114                     	;# 
  2152  0115                     	;# 
  2153  0116                     	;# 
  2154  0117                     	;# 
  2155  0118                     	;# 
  2156  0119                     	;# 
  2157  018C                     	;# 
  2158  018E                     	;# 
  2159  0191                     	;# 
  2160  0191                     	;# 
  2161  0192                     	;# 
  2162  0193                     	;# 
  2163  0193                     	;# 
  2164  0194                     	;# 
  2165  0195                     	;# 
  2166  0196                     	;# 
  2167  0197                     	;# 
  2168  0199                     	;# 
  2169  019A                     	;# 
  2170  019B                     	;# 
  2171  019B                     	;# 
  2172  019C                     	;# 
  2173  019D                     	;# 
  2174  019E                     	;# 
  2175  019F                     	;# 
  2176  020C                     	;# 
  2177  020E                     	;# 
  2178  028C                     	;# 
  2179  028E                     	;# 
  2180  030C                     	;# 
  2181  030E                     	;# 
  2182  038C                     	;# 
  2183  038E                     	;# 
  2184  0391                     	;# 
  2185  0392                     	;# 
  2186  0393                     	;# 
  2187  0397                     	;# 
  2188  0398                     	;# 
  2189  0399                     	;# 
  2190  0691                     	;# 
  2191  0692                     	;# 
  2192  0693                     	;# 
  2193  0694                     	;# 
  2194  0695                     	;# 
  2195  0D8E                     	;# 
  2196  0D8F                     	;# 
  2197  0D90                     	;# 
  2198  0D91                     	;# 
  2199  0D91                     	;# 
  2200  0D92                     	;# 
  2201  0D93                     	;# 
  2202  0D93                     	;# 
  2203  0D94                     	;# 
  2204  0D95                     	;# 
  2205  0D95                     	;# 
  2206  0D96                     	;# 
  2207  0D97                     	;# 
  2208  0D97                     	;# 
  2209  0D98                     	;# 
  2210  0D99                     	;# 
  2211  0D99                     	;# 
  2212  0D9A                     	;# 
  2213  0D9B                     	;# 
  2214  0D9C                     	;# 
  2215  0D9C                     	;# 
  2216  0D9D                     	;# 
  2217  0D9D                     	;# 
  2218  0D9E                     	;# 
  2219  0D9F                     	;# 
  2220  0DA0                     	;# 
  2221  0DA1                     	;# 
  2222  0DA1                     	;# 
  2223  0DA2                     	;# 
  2224  0DA3                     	;# 
  2225  0DA3                     	;# 
  2226  0DA4                     	;# 
  2227  0DA5                     	;# 
  2228  0DA5                     	;# 
  2229  0DA6                     	;# 
  2230  0DA7                     	;# 
  2231  0DA7                     	;# 
  2232  0DA8                     	;# 
  2233  0DA9                     	;# 
  2234  0DA9                     	;# 
  2235  0DAA                     	;# 
  2236  0DAB                     	;# 
  2237  0DAC                     	;# 
  2238  0DAC                     	;# 
  2239  0DAD                     	;# 
  2240  0DAD                     	;# 
  2241  0DAE                     	;# 
  2242  0DAF                     	;# 
  2243  0DB0                     	;# 
  2244  0DB1                     	;# 
  2245  0DB1                     	;# 
  2246  0DB2                     	;# 
  2247  0DB3                     	;# 
  2248  0DB3                     	;# 
  2249  0DB4                     	;# 
  2250  0DB5                     	;# 
  2251  0DB5                     	;# 
  2252  0DB6                     	;# 
  2253  0DB7                     	;# 
  2254  0DB7                     	;# 
  2255  0DB8                     	;# 
  2256  0DB9                     	;# 
  2257  0DB9                     	;# 
  2258  0DBA                     	;# 
  2259  0DBB                     	;# 
  2260  0DBC                     	;# 
  2261  0DBC                     	;# 
  2262  0DBD                     	;# 
  2263  0DBD                     	;# 
  2264  0DBE                     	;# 
  2265  0DBF                     	;# 
  2266  0DC0                     	;# 
  2267  0DC1                     	;# 
  2268  0DC1                     	;# 
  2269  0DC2                     	;# 
  2270  0DC3                     	;# 
  2271  0DC3                     	;# 
  2272  0DC4                     	;# 
  2273  0DC5                     	;# 
  2274  0DC5                     	;# 
  2275  0DC6                     	;# 
  2276  0DC7                     	;# 
  2277  0DC7                     	;# 
  2278  0DC8                     	;# 
  2279  0DC9                     	;# 
  2280  0DC9                     	;# 
  2281  0DCA                     	;# 
  2282  0DCB                     	;# 
  2283  0DCC                     	;# 
  2284  0DCC                     	;# 
  2285  0DCD                     	;# 
  2286  0DCD                     	;# 
  2287  0DCE                     	;# 
  2288  0DCF                     	;# 
  2289  0DD0                     	;# 
  2290  0E0F                     	;# 
  2291  0E10                     	;# 
  2292  0E11                     	;# 
  2293  0E12                     	;# 
  2294  0E13                     	;# 
  2295  0E14                     	;# 
  2296  0E15                     	;# 
  2297  0E16                     	;# 
  2298  0E17                     	;# 
  2299  0E90                     	;# 
  2300  0E91                     	;# 
  2301  0E92                     	;# 
  2302  0E94                     	;# 
  2303  0E95                     	;# 
  2304  0EA0                     	;# 
  2305  0EA1                     	;# 
  2306  0EA2                     	;# 
  2307  0EA3                     	;# 
  2308  0EA4                     	;# 
  2309  0EA5                     	;# 
  2310  0FE4                     	;# 
  2311  0FE5                     	;# 
  2312  0FE6                     	;# 
  2313  0FE7                     	;# 
  2314  0FE8                     	;# 
  2315  0FE8                     	;# 
  2316  0FE9                     	;# 
  2317  0FEA                     	;# 
  2318  0FEA                     	;# 
  2319  0FEB                     	;# 
  2320  0FED                     	;# 
  2321  0FEE                     	;# 
  2322  0FEE                     	;# 
  2323  0FEF                     	;# 
  2324  0000                     	;# 
  2325  0001                     	;# 
  2326  0002                     	;# 
  2327  0003                     	;# 
  2328  0004                     	;# 
  2329  0005                     	;# 
  2330  0006                     	;# 
  2331  0007                     	;# 
  2332  0008                     	;# 
  2333  0009                     	;# 
  2334  000A                     	;# 
  2335  000B                     	;# 
  2336  000C                     	;# 
  2337  000E                     	;# 
  2338  0011                     	;# 
  2339  0012                     	;# 
  2340  0013                     	;# 
  2341  0015                     	;# 
  2342  0016                     	;# 
  2343  0016                     	;# 
  2344  0017                     	;# 
  2345  0018                     	;# 
  2346  0019                     	;# 
  2347  001A                     	;# 
  2348  001B                     	;# 
  2349  001C                     	;# 
  2350  008C                     	;# 
  2351  008E                     	;# 
  2352  0091                     	;# 
  2353  0092                     	;# 
  2354  0093                     	;# 
  2355  0095                     	;# 
  2356  0096                     	;# 
  2357  0097                     	;# 
  2358  0098                     	;# 
  2359  0099                     	;# 
  2360  009A                     	;# 
  2361  009B                     	;# 
  2362  009B                     	;# 
  2363  009C                     	;# 
  2364  009D                     	;# 
  2365  009E                     	;# 
  2366  009F                     	;# 
  2367  010C                     	;# 
  2368  010E                     	;# 
  2369  0111                     	;# 
  2370  0112                     	;# 
  2371  0113                     	;# 
  2372  0114                     	;# 
  2373  0115                     	;# 
  2374  0116                     	;# 
  2375  0117                     	;# 
  2376  0118                     	;# 
  2377  0119                     	;# 
  2378  018C                     	;# 
  2379  018E                     	;# 
  2380  0191                     	;# 
  2381  0191                     	;# 
  2382  0192                     	;# 
  2383  0193                     	;# 
  2384  0193                     	;# 
  2385  0194                     	;# 
  2386  0195                     	;# 
  2387  0196                     	;# 
  2388  0197                     	;# 
  2389  0199                     	;# 
  2390  019A                     	;# 
  2391  019B                     	;# 
  2392  019B                     	;# 
  2393  019C                     	;# 
  2394  019D                     	;# 
  2395  019E                     	;# 
  2396  019F                     	;# 
  2397  020C                     	;# 
  2398  020E                     	;# 
  2399  028C                     	;# 
  2400  028E                     	;# 
  2401  030C                     	;# 
  2402  030E                     	;# 
  2403  038C                     	;# 
  2404  038E                     	;# 
  2405  0391                     	;# 
  2406  0392                     	;# 
  2407  0393                     	;# 
  2408  0397                     	;# 
  2409  0398                     	;# 
  2410  0399                     	;# 
  2411  0691                     	;# 
  2412  0692                     	;# 
  2413  0693                     	;# 
  2414  0694                     	;# 
  2415  0695                     	;# 
  2416  0D8E                     	;# 
  2417  0D8F                     	;# 
  2418  0D90                     	;# 
  2419  0D91                     	;# 
  2420  0D91                     	;# 
  2421  0D92                     	;# 
  2422  0D93                     	;# 
  2423  0D93                     	;# 
  2424  0D94                     	;# 
  2425  0D95                     	;# 
  2426  0D95                     	;# 
  2427  0D96                     	;# 
  2428  0D97                     	;# 
  2429  0D97                     	;# 
  2430  0D98                     	;# 
  2431  0D99                     	;# 
  2432  0D99                     	;# 
  2433  0D9A                     	;# 
  2434  0D9B                     	;# 
  2435  0D9C                     	;# 
  2436  0D9C                     	;# 
  2437  0D9D                     	;# 
  2438  0D9D                     	;# 
  2439  0D9E                     	;# 
  2440  0D9F                     	;# 
  2441  0DA0                     	;# 
  2442  0DA1                     	;# 
  2443  0DA1                     	;# 
  2444  0DA2                     	;# 
  2445  0DA3                     	;# 
  2446  0DA3                     	;# 
  2447  0DA4                     	;# 
  2448  0DA5                     	;# 
  2449  0DA5                     	;# 
  2450  0DA6                     	;# 
  2451  0DA7                     	;# 
  2452  0DA7                     	;# 
  2453  0DA8                     	;# 
  2454  0DA9                     	;# 
  2455  0DA9                     	;# 
  2456  0DAA                     	;# 
  2457  0DAB                     	;# 
  2458  0DAC                     	;# 
  2459  0DAC                     	;# 
  2460  0DAD                     	;# 
  2461  0DAD                     	;# 
  2462  0DAE                     	;# 
  2463  0DAF                     	;# 
  2464  0DB0                     	;# 
  2465  0DB1                     	;# 
  2466  0DB1                     	;# 
  2467  0DB2                     	;# 
  2468  0DB3                     	;# 
  2469  0DB3                     	;# 
  2470  0DB4                     	;# 
  2471  0DB5                     	;# 
  2472  0DB5                     	;# 
  2473  0DB6                     	;# 
  2474  0DB7                     	;# 
  2475  0DB7                     	;# 
  2476  0DB8                     	;# 
  2477  0DB9                     	;# 
  2478  0DB9                     	;# 
  2479  0DBA                     	;# 
  2480  0DBB                     	;# 
  2481  0DBC                     	;# 
  2482  0DBC                     	;# 
  2483  0DBD                     	;# 
  2484  0DBD                     	;# 
  2485  0DBE                     	;# 
  2486  0DBF                     	;# 
  2487  0DC0                     	;# 
  2488  0DC1                     	;# 
  2489  0DC1                     	;# 
  2490  0DC2                     	;# 
  2491  0DC3                     	;# 
  2492  0DC3                     	;# 
  2493  0DC4                     	;# 
  2494  0DC5                     	;# 
  2495  0DC5                     	;# 
  2496  0DC6                     	;# 
  2497  0DC7                     	;# 
  2498  0DC7                     	;# 
  2499  0DC8                     	;# 
  2500  0DC9                     	;# 
  2501  0DC9                     	;# 
  2502  0DCA                     	;# 
  2503  0DCB                     	;# 
  2504  0DCC                     	;# 
  2505  0DCC                     	;# 
  2506  0DCD                     	;# 
  2507  0DCD                     	;# 
  2508  0DCE                     	;# 
  2509  0DCF                     	;# 
  2510  0DD0                     	;# 
  2511  0E0F                     	;# 
  2512  0E10                     	;# 
  2513  0E11                     	;# 
  2514  0E12                     	;# 
  2515  0E13                     	;# 
  2516  0E14                     	;# 
  2517  0E15                     	;# 
  2518  0E16                     	;# 
  2519  0E17                     	;# 
  2520  0E90                     	;# 
  2521  0E91                     	;# 
  2522  0E92                     	;# 
  2523  0E94                     	;# 
  2524  0E95                     	;# 
  2525  0EA0                     	;# 
  2526  0EA1                     	;# 
  2527  0EA2                     	;# 
  2528  0EA3                     	;# 
  2529  0EA4                     	;# 
  2530  0EA5                     	;# 
  2531  0FE4                     	;# 
  2532  0FE5                     	;# 
  2533  0FE6                     	;# 
  2534  0FE7                     	;# 
  2535  0FE8                     	;# 
  2536  0FE8                     	;# 
  2537  0FE9                     	;# 
  2538  0FEA                     	;# 
  2539  0FEA                     	;# 
  2540  0FEB                     	;# 
  2541  0FED                     	;# 
  2542  0FEE                     	;# 
  2543  0FEE                     	;# 
  2544  0FEF                     	;# 
  2545  0FFF                     	;# 
  2546  0000                     	;# 
  2547  0001                     	;# 
  2548  0002                     	;# 
  2549  0003                     	;# 
  2550  0004                     	;# 
  2551  0005                     	;# 
  2552  0006                     	;# 
  2553  0007                     	;# 
  2554  0008                     	;# 
  2555  0009                     	;# 
  2556  000A                     	;# 
  2557  000B                     	;# 
  2558  000C                     	;# 
  2559  000E                     	;# 
  2560  0011                     	;# 
  2561  0012                     	;# 
  2562  0013                     	;# 
  2563  0015                     	;# 
  2564  0016                     	;# 
  2565  0016                     	;# 
  2566  0017                     	;# 
  2567  0018                     	;# 
  2568  0019                     	;# 
  2569  001A                     	;# 
  2570  001B                     	;# 
  2571  001C                     	;# 
  2572  008C                     	;# 
  2573  008E                     	;# 
  2574  0091                     	;# 
  2575  0092                     	;# 
  2576  0093                     	;# 
  2577  0095                     	;# 
  2578  0096                     	;# 
  2579  0097                     	;# 
  2580  0098                     	;# 
  2581  0099                     	;# 
  2582  009A                     	;# 
  2583  009B                     	;# 
  2584  009B                     	;# 
  2585  009C                     	;# 
  2586  009D                     	;# 
  2587  009E                     	;# 
  2588  009F                     	;# 
  2589  010C                     	;# 
  2590  010E                     	;# 
  2591  0111                     	;# 
  2592  0112                     	;# 
  2593  0113                     	;# 
  2594  0114                     	;# 
  2595  0115                     	;# 
  2596  0116                     	;# 
  2597  0117                     	;# 
  2598  0118                     	;# 
  2599  0119                     	;# 
  2600  018C                     	;# 
  2601  018E                     	;# 
  2602  0191                     	;# 
  2603  0191                     	;# 
  2604  0192                     	;# 
  2605  0193                     	;# 
  2606  0193                     	;# 
  2607  0194                     	;# 
  2608  0195                     	;# 
  2609  0196                     	;# 
  2610  0197                     	;# 
  2611  0199                     	;# 
  2612  019A                     	;# 
  2613  019B                     	;# 
  2614  019B                     	;# 
  2615  019C                     	;# 
  2616  019D                     	;# 
  2617  019E                     	;# 
  2618  019F                     	;# 
  2619  020C                     	;# 
  2620  020E                     	;# 
  2621  028C                     	;# 
  2622  028E                     	;# 
  2623  030C                     	;# 
  2624  030E                     	;# 
  2625  038C                     	;# 
  2626  038E                     	;# 
  2627  0391                     	;# 
  2628  0392                     	;# 
  2629  0393                     	;# 
  2630  0397                     	;# 
  2631  0398                     	;# 
  2632  0399                     	;# 
  2633  0691                     	;# 
  2634  0692                     	;# 
  2635  0693                     	;# 
  2636  0694                     	;# 
  2637  0695                     	;# 
  2638  0D8E                     	;# 
  2639  0D8F                     	;# 
  2640  0D90                     	;# 
  2641  0D91                     	;# 
  2642  0D91                     	;# 
  2643  0D92                     	;# 
  2644  0D93                     	;# 
  2645  0D93                     	;# 
  2646  0D94                     	;# 
  2647  0D95                     	;# 
  2648  0D95                     	;# 
  2649  0D96                     	;# 
  2650  0D97                     	;# 
  2651  0D97                     	;# 
  2652  0D98                     	;# 
  2653  0D99                     	;# 
  2654  0D99                     	;# 
  2655  0D9A                     	;# 
  2656  0D9B                     	;# 
  2657  0D9C                     	;# 
  2658  0D9C                     	;# 
  2659  0D9D                     	;# 
  2660  0D9D                     	;# 
  2661  0D9E                     	;# 
  2662  0D9F                     	;# 
  2663  0DA0                     	;# 
  2664  0DA1                     	;# 
  2665  0DA1                     	;# 
  2666  0DA2                     	;# 
  2667  0DA3                     	;# 
  2668  0DA3                     	;# 
  2669  0DA4                     	;# 
  2670  0DA5                     	;# 
  2671  0DA5                     	;# 
  2672  0DA6                     	;# 
  2673  0DA7                     	;# 
  2674  0DA7                     	;# 
  2675  0DA8                     	;# 
  2676  0DA9                     	;# 
  2677  0DA9                     	;# 
  2678  0DAA                     	;# 
  2679  0DAB                     	;# 
  2680  0DAC                     	;# 
  2681  0DAC                     	;# 
  2682  0DAD                     	;# 
  2683  0DAD                     	;# 
  2684  0DAE                     	;# 
  2685  0DAF                     	;# 
  2686  0DB0                     	;# 
  2687  0DB1                     	;# 
  2688  0DB1                     	;# 
  2689  0DB2                     	;# 
  2690  0DB3                     	;# 
  2691  0DB3                     	;# 
  2692  0DB4                     	;# 
  2693  0DB5                     	;# 
  2694  0DB5                     	;# 
  2695  0DB6                     	;# 
  2696  0DB7                     	;# 
  2697  0DB7                     	;# 
  2698  0DB8                     	;# 
  2699  0DB9                     	;# 
  2700  0DB9                     	;# 
  2701  0DBA                     	;# 
  2702  0DBB                     	;# 
  2703  0DBC                     	;# 
  2704  0DBC                     	;# 
  2705  0DBD                     	;# 
  2706  0DBD                     	;# 
  2707  0DBE                     	;# 
  2708  0DBF                     	;# 
  2709  0DC0                     	;# 
  2710  0DC1                     	;# 
  2711  0DC1                     	;# 
  2712  0DC2                     	;# 
  2713  0DC3                     	;# 
  2714  0DC3                     	;# 
  2715  0DC4                     	;# 
  2716  0DC5                     	;# 
  2717  0DC5                     	;# 
  2718  0DC6                     	;# 
  2719  0DC7                     	;# 
  2720  0DC7                     	;# 
  2721  0DC8                     	;# 
  2722  0DC9                     	;# 
  2723  0DC9                     	;# 
  2724  0DCA                     	;# 
  2725  0DCB                     	;# 
  2726  0DCC                     	;# 
  2727  0DCC                     	;# 
  2728  0DCD                     	;# 
  2729  0DCD                     	;# 
  2730  0DCE                     	;# 
  2731  0DCF                     	;# 
  2732  0DD0                     	;# 
  2733  0E0F                     	;# 
  2734  0E10                     	;# 
  2735  0E11                     	;# 
  2736  0E12                     	;# 
  2737  0E13                     	;# 
  2738  0E14                     	;# 
  2739  0E15                     	;# 
  2740  0E16                     	;# 
  2741  0E17                     	;# 
  2742  0E90                     	;# 
  2743  0E91                     	;# 
  2744  0E92                     	;# 
  2745  0E94                     	;# 
  2746  0E95                     	;# 
  2747  0EA0                     	;# 
  2748  0EA1                     	;# 
  2749  0EA2                     	;# 
  2750  0EA3                     	;# 
  2751  0EA4                     	;# 
  2752  0EA5                     	;# 
  2753  0FE4                     	;# 
  2754  0FE5                     	;# 
  2755  0FE6                     	;# 
  2756  0FE7                     	;# 
  2757  0FE8                     	;# 
  2758  0FE8                     	;# 
  2759  0FE9                     	;# 
  2760  0FEA                     	;# 
  2761  0FEA                     	;# 
  2762  0FEB                     	;# 
  2763  0FED                     	;# 
  2764  0FEE                     	;# 
  2765  0FEE                     	;# 
  2766  0FEF                     	;# 
  2767  0FFF                     	;# 
  2768  0000                     	;# 
  2769  0001                     	;# 
  2770  0002                     	;# 
  2771  0003                     	;# 
  2772  0004                     	;# 
  2773  0005                     	;# 
  2774  0006                     	;# 
  2775  0007                     	;# 
  2776  0008                     	;# 
  2777  0009                     	;# 
  2778  000A                     	;# 
  2779  000B                     	;# 
  2780  000C                     	;# 
  2781  000E                     	;# 
  2782  0011                     	;# 
  2783  0012                     	;# 
  2784  0013                     	;# 
  2785  0015                     	;# 
  2786  0016                     	;# 
  2787  0016                     	;# 
  2788  0017                     	;# 
  2789  0018                     	;# 
  2790  0019                     	;# 
  2791  001A                     	;# 
  2792  001B                     	;# 
  2793  001C                     	;# 
  2794  008C                     	;# 
  2795  008E                     	;# 
  2796  0091                     	;# 
  2797  0092                     	;# 
  2798  0093                     	;# 
  2799  0095                     	;# 
  2800  0096                     	;# 
  2801  0097                     	;# 
  2802  0098                     	;# 
  2803  0099                     	;# 
  2804  009A                     	;# 
  2805  009B                     	;# 
  2806  009B                     	;# 
  2807  009C                     	;# 
  2808  009D                     	;# 
  2809  009E                     	;# 
  2810  009F                     	;# 
  2811  010C                     	;# 
  2812  010E                     	;# 
  2813  0111                     	;# 
  2814  0112                     	;# 
  2815  0113                     	;# 
  2816  0114                     	;# 
  2817  0115                     	;# 
  2818  0116                     	;# 
  2819  0117                     	;# 
  2820  0118                     	;# 
  2821  0119                     	;# 
  2822  018C                     	;# 
  2823  018E                     	;# 
  2824  0191                     	;# 
  2825  0191                     	;# 
  2826  0192                     	;# 
  2827  0193                     	;# 
  2828  0193                     	;# 
  2829  0194                     	;# 
  2830  0195                     	;# 
  2831  0196                     	;# 
  2832  0197                     	;# 
  2833  0199                     	;# 
  2834  019A                     	;# 
  2835  019B                     	;# 
  2836  019B                     	;# 
  2837  019C                     	;# 
  2838  019D                     	;# 
  2839  019E                     	;# 
  2840  019F                     	;# 
  2841  020C                     	;# 
  2842  020E                     	;# 
  2843  028C                     	;# 
  2844  028E                     	;# 
  2845  030C                     	;# 
  2846  030E                     	;# 
  2847  038C                     	;# 
  2848  038E                     	;# 
  2849  0391                     	;# 
  2850  0392                     	;# 
  2851  0393                     	;# 
  2852  0397                     	;# 
  2853  0398                     	;# 
  2854  0399                     	;# 
  2855  0691                     	;# 
  2856  0692                     	;# 
  2857  0693                     	;# 
  2858  0694                     	;# 
  2859  0695                     	;# 
  2860  0D8E                     	;# 
  2861  0D8F                     	;# 
  2862  0D90                     	;# 
  2863  0D91                     	;# 
  2864  0D91                     	;# 
  2865  0D92                     	;# 
  2866  0D93                     	;# 
  2867  0D93                     	;# 
  2868  0D94                     	;# 
  2869  0D95                     	;# 
  2870  0D95                     	;# 
  2871  0D96                     	;# 
  2872  0D97                     	;# 
  2873  0D97                     	;# 
  2874  0D98                     	;# 
  2875  0D99                     	;# 
  2876  0D99                     	;# 
  2877  0D9A                     	;# 
  2878  0D9B                     	;# 
  2879  0D9C                     	;# 
  2880  0D9C                     	;# 
  2881  0D9D                     	;# 
  2882  0D9D                     	;# 
  2883  0D9E                     	;# 
  2884  0D9F                     	;# 
  2885  0DA0                     	;# 
  2886  0DA1                     	;# 
  2887  0DA1                     	;# 
  2888  0DA2                     	;# 
  2889  0DA3                     	;# 
  2890  0DA3                     	;# 
  2891  0DA4                     	;# 
  2892  0DA5                     	;# 
  2893  0DA5                     	;# 
  2894  0DA6                     	;# 
  2895  0DA7                     	;# 
  2896  0DA7                     	;# 
  2897  0DA8                     	;# 
  2898  0DA9                     	;# 
  2899  0DA9                     	;# 
  2900  0DAA                     	;# 
  2901  0DAB                     	;# 
  2902  0DAC                     	;# 
  2903  0DAC                     	;# 
  2904  0DAD                     	;# 
  2905  0DAD                     	;# 
  2906  0DAE                     	;# 
  2907  0DAF                     	;# 
  2908  0DB0                     	;# 
  2909  0DB1                     	;# 
  2910  0DB1                     	;# 
  2911  0DB2                     	;# 
  2912  0DB3                     	;# 
  2913  0DB3                     	;# 
  2914  0DB4                     	;# 
  2915  0DB5                     	;# 
  2916  0DB5                     	;# 
  2917  0DB6                     	;# 
  2918  0DB7                     	;# 
  2919  0DB7                     	;# 
  2920  0DB8                     	;# 
  2921  0DB9                     	;# 
  2922  0DB9                     	;# 
  2923  0DBA                     	;# 
  2924  0DBB                     	;# 
  2925  0DBC                     	;# 
  2926  0DBC                     	;# 
  2927  0DBD                     	;# 
  2928  0DBD                     	;# 
  2929  0DBE                     	;# 
  2930  0DBF                     	;# 
  2931  0DC0                     	;# 
  2932  0DC1                     	;# 
  2933  0DC1                     	;# 
  2934  0DC2                     	;# 
  2935  0DC3                     	;# 
  2936  0DC3                     	;# 
  2937  0DC4                     	;# 
  2938  0DC5                     	;# 
  2939  0DC5                     	;# 
  2940  0DC6                     	;# 
  2941  0DC7                     	;# 
  2942  0DC7                     	;# 
  2943  0DC8                     	;# 
  2944  0DC9                     	;# 
  2945  0DC9                     	;# 
  2946  0DCA                     	;# 
  2947  0DCB                     	;# 
  2948  0DCC                     	;# 
  2949  0DCC                     	;# 
  2950  0DCD                     	;# 
  2951  0DCD                     	;# 
  2952  0DCE                     	;# 
  2953  0DCF                     	;# 
  2954  0DD0                     	;# 
  2955  0E0F                     	;# 
  2956  0E10                     	;# 
  2957  0E11                     	;# 
  2958  0E12                     	;# 
  2959  0E13                     	;# 
  2960  0E14                     	;# 
  2961  0E15                     	;# 
  2962  0E16                     	;# 
  2963  0E17                     	;# 
  2964  0E90                     	;# 
  2965  0E91                     	;# 
  2966  0E92                     	;# 
  2967  0E94                     	;# 
  2968  0E95                     	;# 
  2969  0EA0                     	;# 
  2970  0EA1                     	;# 
  2971  0EA2                     	;# 
  2972  0EA3                     	;# 
  2973  0EA4                     	;# 
  2974  0EA5                     	;# 
  2975  0FE4                     	;# 
  2976  0FE5                     	;# 
  2977  0FE6                     	;# 
  2978  0FE7                     	;# 
  2979  0FE8                     	;# 
  2980  0FE8                     	;# 
  2981  0FE9                     	;# 
  2982  0FEA                     	;# 
  2983  0FEA                     	;# 
  2984  0FEB                     	;# 
  2985  0FED                     	;# 
  2986  0FEE                     	;# 
  2987  0FEE                     	;# 
  2988  0FEF                     	;# 
  2989  0FFF                     	;# 
  2990  0000                     	;# 
  2991  0001                     	;# 
  2992  0002                     	;# 
  2993  0003                     	;# 
  2994  0004                     	;# 
  2995  0005                     	;# 
  2996  0006                     	;# 
  2997  0007                     	;# 
  2998  0008                     	;# 
  2999  0009                     	;# 
  3000  000A                     	;# 
  3001  000B                     	;# 
  3002  000C                     	;# 
  3003  000E                     	;# 
  3004  0011                     	;# 
  3005  0012                     	;# 
  3006  0013                     	;# 
  3007  0015                     	;# 
  3008  0016                     	;# 
  3009  0016                     	;# 
  3010  0017                     	;# 
  3011  0018                     	;# 
  3012  0019                     	;# 
  3013  001A                     	;# 
  3014  001B                     	;# 
  3015  001C                     	;# 
  3016  008C                     	;# 
  3017  008E                     	;# 
  3018  0091                     	;# 
  3019  0092                     	;# 
  3020  0093                     	;# 
  3021  0095                     	;# 
  3022  0096                     	;# 
  3023  0097                     	;# 
  3024  0098                     	;# 
  3025  0099                     	;# 
  3026  009A                     	;# 
  3027  009B                     	;# 
  3028  009B                     	;# 
  3029  009C                     	;# 
  3030  009D                     	;# 
  3031  009E                     	;# 
  3032  009F                     	;# 
  3033  010C                     	;# 
  3034  010E                     	;# 
  3035  0111                     	;# 
  3036  0112                     	;# 
  3037  0113                     	;# 
  3038  0114                     	;# 
  3039  0115                     	;# 
  3040  0116                     	;# 
  3041  0117                     	;# 
  3042  0118                     	;# 
  3043  0119                     	;# 
  3044  018C                     	;# 
  3045  018E                     	;# 
  3046  0191                     	;# 
  3047  0191                     	;# 
  3048  0192                     	;# 
  3049  0193                     	;# 
  3050  0193                     	;# 
  3051  0194                     	;# 
  3052  0195                     	;# 
  3053  0196                     	;# 
  3054  0197                     	;# 
  3055  0199                     	;# 
  3056  019A                     	;# 
  3057  019B                     	;# 
  3058  019B                     	;# 
  3059  019C                     	;# 
  3060  019D                     	;# 
  3061  019E                     	;# 
  3062  019F                     	;# 
  3063  020C                     	;# 
  3064  020E                     	;# 
  3065  028C                     	;# 
  3066  028E                     	;# 
  3067  030C                     	;# 
  3068  030E                     	;# 
  3069  038C                     	;# 
  3070  038E                     	;# 
  3071  0391                     	;# 
  3072  0392                     	;# 
  3073  0393                     	;# 
  3074  0397                     	;# 
  3075  0398                     	;# 
  3076  0399                     	;# 
  3077  0691                     	;# 
  3078  0692                     	;# 
  3079  0693                     	;# 
  3080  0694                     	;# 
  3081  0695                     	;# 
  3082  0D8E                     	;# 
  3083  0D8F                     	;# 
  3084  0D90                     	;# 
  3085  0D91                     	;# 
  3086  0D91                     	;# 
  3087  0D92                     	;# 
  3088  0D93                     	;# 
  3089  0D93                     	;# 
  3090  0D94                     	;# 
  3091  0D95                     	;# 
  3092  0D95                     	;# 
  3093  0D96                     	;# 
  3094  0D97                     	;# 
  3095  0D97                     	;# 
  3096  0D98                     	;# 
  3097  0D99                     	;# 
  3098  0D99                     	;# 
  3099  0D9A                     	;# 
  3100  0D9B                     	;# 
  3101  0D9C                     	;# 
  3102  0D9C                     	;# 
  3103  0D9D                     	;# 
  3104  0D9D                     	;# 
  3105  0D9E                     	;# 
  3106  0D9F                     	;# 
  3107  0DA0                     	;# 
  3108  0DA1                     	;# 
  3109  0DA1                     	;# 
  3110  0DA2                     	;# 
  3111  0DA3                     	;# 
  3112  0DA3                     	;# 
  3113  0DA4                     	;# 
  3114  0DA5                     	;# 
  3115  0DA5                     	;# 
  3116  0DA6                     	;# 
  3117  0DA7                     	;# 
  3118  0DA7                     	;# 
  3119  0DA8                     	;# 
  3120  0DA9                     	;# 
  3121  0DA9                     	;# 
  3122  0DAA                     	;# 
  3123  0DAB                     	;# 
  3124  0DAC                     	;# 
  3125  0DAC                     	;# 
  3126  0DAD                     	;# 
  3127  0DAD                     	;# 
  3128  0DAE                     	;# 
  3129  0DAF                     	;# 
  3130  0DB0                     	;# 
  3131  0DB1                     	;# 
  3132  0DB1                     	;# 
  3133  0DB2                     	;# 
  3134  0DB3                     	;# 
  3135  0DB3                     	;# 
  3136  0DB4                     	;# 
  3137  0DB5                     	;# 
  3138  0DB5                     	;# 
  3139  0DB6                     	;# 
  3140  0DB7                     	;# 
  3141  0DB7                     	;# 
  3142  0DB8                     	;# 
  3143  0DB9                     	;# 
  3144  0DB9                     	;# 
  3145  0DBA                     	;# 
  3146  0DBB                     	;# 
  3147  0DBC                     	;# 
  3148  0DBC                     	;# 
  3149  0DBD                     	;# 
  3150  0DBD                     	;# 
  3151  0DBE                     	;# 
  3152  0DBF                     	;# 
  3153  0DC0                     	;# 
  3154  0DC1                     	;# 
  3155  0DC1                     	;# 
  3156  0DC2                     	;# 
  3157  0DC3                     	;# 
  3158  0DC3                     	;# 
  3159  0DC4                     	;# 
  3160  0DC5                     	;# 
  3161  0DC5                     	;# 
  3162  0DC6                     	;# 
  3163  0DC7                     	;# 
  3164  0DC7                     	;# 
  3165  0DC8                     	;# 
  3166  0DC9                     	;# 
  3167  0DC9                     	;# 
  3168  0DCA                     	;# 
  3169  0DCB                     	;# 
  3170  0DCC                     	;# 
  3171  0DCC                     	;# 
  3172  0DCD                     	;# 
  3173  0DCD                     	;# 
  3174  0DCE                     	;# 
  3175  0DCF                     	;# 
  3176  0DD0                     	;# 
  3177  0E0F                     	;# 
  3178  0E10                     	;# 
  3179  0E11                     	;# 
  3180  0E12                     	;# 
  3181  0E13                     	;# 
  3182  0E14                     	;# 
  3183  0E15                     	;# 
  3184  0E16                     	;# 
  3185  0E17                     	;# 
  3186  0E90                     	;# 
  3187  0E91                     	;# 
  3188  0E92                     	;# 
  3189  0E94                     	;# 
  3190  0E95                     	;# 
  3191  0EA0                     	;# 
  3192  0EA1                     	;# 
  3193  0EA2                     	;# 
  3194  0EA3                     	;# 
  3195  0EA4                     	;# 
  3196  0EA5                     	;# 
  3197  0FE4                     	;# 
  3198  0FE5                     	;# 
  3199  0FE6                     	;# 
  3200  0FE7                     	;# 
  3201  0FE8                     	;# 
  3202  0FE8                     	;# 
  3203  0FE9                     	;# 
  3204  0FEA                     	;# 
  3205  0FEA                     	;# 
  3206  0FEB                     	;# 
  3207  0FED                     	;# 
  3208  0FEE                     	;# 
  3209  0FEE                     	;# 
  3210  0FEF                     	;# 
  3211  0FFF                     	;# 
  3212  0000                     	;# 
  3213  0001                     	;# 
  3214  0002                     	;# 
  3215  0003                     	;# 
  3216  0004                     	;# 
  3217  0005                     	;# 
  3218  0006                     	;# 
  3219  0007                     	;# 
  3220  0008                     	;# 
  3221  0009                     	;# 
  3222  000A                     	;# 
  3223  000B                     	;# 
  3224  000C                     	;# 
  3225  000E                     	;# 
  3226  0011                     	;# 
  3227  0012                     	;# 
  3228  0013                     	;# 
  3229  0015                     	;# 
  3230  0016                     	;# 
  3231  0016                     	;# 
  3232  0017                     	;# 
  3233  0018                     	;# 
  3234  0019                     	;# 
  3235  001A                     	;# 
  3236  001B                     	;# 
  3237  001C                     	;# 
  3238  008C                     	;# 
  3239  008E                     	;# 
  3240  0091                     	;# 
  3241  0092                     	;# 
  3242  0093                     	;# 
  3243  0095                     	;# 
  3244  0096                     	;# 
  3245  0097                     	;# 
  3246  0098                     	;# 
  3247  0099                     	;# 
  3248  009A                     	;# 
  3249  009B                     	;# 
  3250  009B                     	;# 
  3251  009C                     	;# 
  3252  009D                     	;# 
  3253  009E                     	;# 
  3254  009F                     	;# 
  3255  010C                     	;# 
  3256  010E                     	;# 
  3257  0111                     	;# 
  3258  0112                     	;# 
  3259  0113                     	;# 
  3260  0114                     	;# 
  3261  0115                     	;# 
  3262  0116                     	;# 
  3263  0117                     	;# 
  3264  0118                     	;# 
  3265  0119                     	;# 
  3266  018C                     	;# 
  3267  018E                     	;# 
  3268  0191                     	;# 
  3269  0191                     	;# 
  3270  0192                     	;# 
  3271  0193                     	;# 
  3272  0193                     	;# 
  3273  0194                     	;# 
  3274  0195                     	;# 
  3275  0196                     	;# 
  3276  0197                     	;# 
  3277  0199                     	;# 
  3278  019A                     	;# 
  3279  019B                     	;# 
  3280  019B                     	;# 
  3281  019C                     	;# 
  3282  019D                     	;# 
  3283  019E                     	;# 
  3284  019F                     	;# 
  3285  020C                     	;# 
  3286  020E                     	;# 
  3287  028C                     	;# 
  3288  028E                     	;# 
  3289  030C                     	;# 
  3290  030E                     	;# 
  3291  038C                     	;# 
  3292  038E                     	;# 
  3293  0391                     	;# 
  3294  0392                     	;# 
  3295  0393                     	;# 
  3296  0397                     	;# 
  3297  0398                     	;# 
  3298  0399                     	;# 
  3299  0691                     	;# 
  3300  0692                     	;# 
  3301  0693                     	;# 
  3302  0694                     	;# 
  3303  0695                     	;# 
  3304  0D8E                     	;# 
  3305  0D8F                     	;# 
  3306  0D90                     	;# 
  3307  0D91                     	;# 
  3308  0D91                     	;# 
  3309  0D92                     	;# 
  3310  0D93                     	;# 
  3311  0D93                     	;# 
  3312  0D94                     	;# 
  3313  0D95                     	;# 
  3314  0D95                     	;# 
  3315  0D96                     	;# 
  3316  0D97                     	;# 
  3317  0D97                     	;# 
  3318  0D98                     	;# 
  3319  0D99                     	;# 
  3320  0D99                     	;# 
  3321  0D9A                     	;# 
  3322  0D9B                     	;# 
  3323  0D9C                     	;# 
  3324  0D9C                     	;# 
  3325  0D9D                     	;# 
  3326  0D9D                     	;# 
  3327  0D9E                     	;# 
  3328  0D9F                     	;# 
  3329  0DA0                     	;# 
  3330  0DA1                     	;# 
  3331  0DA1                     	;# 
  3332  0DA2                     	;# 
  3333  0DA3                     	;# 
  3334  0DA3                     	;# 
  3335  0DA4                     	;# 
  3336  0DA5                     	;# 
  3337  0DA5                     	;# 
  3338  0DA6                     	;# 
  3339  0DA7                     	;# 
  3340  0DA7                     	;# 
  3341  0DA8                     	;# 
  3342  0DA9                     	;# 
  3343  0DA9                     	;# 
  3344  0DAA                     	;# 
  3345  0DAB                     	;# 
  3346  0DAC                     	;# 
  3347  0DAC                     	;# 
  3348  0DAD                     	;# 
  3349  0DAD                     	;# 
  3350  0DAE                     	;# 
  3351  0DAF                     	;# 
  3352  0DB0                     	;# 
  3353  0DB1                     	;# 
  3354  0DB1                     	;# 
  3355  0DB2                     	;# 
  3356  0DB3                     	;# 
  3357  0DB3                     	;# 
  3358  0DB4                     	;# 
  3359  0DB5                     	;# 
  3360  0DB5                     	;# 
  3361  0DB6                     	;# 
  3362  0DB7                     	;# 
  3363  0DB7                     	;# 
  3364  0DB8                     	;# 
  3365  0DB9                     	;# 
  3366  0DB9                     	;# 
  3367  0DBA                     	;# 
  3368  0DBB                     	;# 
  3369  0DBC                     	;# 
  3370  0DBC                     	;# 
  3371  0DBD                     	;# 
  3372  0DBD                     	;# 
  3373  0DBE                     	;# 
  3374  0DBF                     	;# 
  3375  0DC0                     	;# 
  3376  0DC1                     	;# 
  3377  0DC1                     	;# 
  3378  0DC2                     	;# 
  3379  0DC3                     	;# 
  3380  0DC3                     	;# 
  3381  0DC4                     	;# 
  3382  0DC5                     	;# 
  3383  0DC5                     	;# 
  3384  0DC6                     	;# 
  3385  0DC7                     	;# 
  3386  0DC7                     	;# 
  3387  0DC8                     	;# 
  3388  0DC9                     	;# 
  3389  0DC9                     	;# 
  3390  0DCA                     	;# 
  3391  0DCB                     	;# 
  3392  0DCC                     	;# 
  3393  0DCC                     	;# 
  3394  0DCD                     	;# 
  3395  0DCD                     	;# 
  3396  0DCE                     	;# 
  3397  0DCF                     	;# 
  3398  0DD0                     	;# 
  3399  0E0F                     	;# 
  3400  0E10                     	;# 
  3401  0E11                     	;# 
  3402  0E12                     	;# 
  3403  0E13                     	;# 
  3404  0E14                     	;# 
  3405  0E15                     	;# 
  3406  0E16                     	;# 
  3407  0E17                     	;# 
  3408  0E90                     	;# 
  3409  0E91                     	;# 
  3410  0E92                     	;# 
  3411  0E94                     	;# 
  3412  0E95                     	;# 
  3413  0EA0                     	;# 
  3414  0EA1                     	;# 
  3415  0EA2                     	;# 
  3416  0EA3                     	;# 
  3417  0EA4                     	;# 
  3418  0EA5                     	;# 
  3419  0FE4                     	;# 
  3420  0FE5                     	;# 
  3421  0FE6                     	;# 
  3422  0FE7                     	;# 
  3423  0FE8                     	;# 
  3424  0FE8                     	;# 
  3425  0FE9                     	;# 
  3426  0FEA                     	;# 
  3427  0FEA                     	;# 
  3428  0FEB                     	;# 
  3429  0FED                     	;# 
  3430  0FEE                     	;# 
  3431  0FEE                     	;# 
  3432  0FEF                     	;# 
  3433  0FFF                     	;# 
  3434  0000                     	;# 
  3435  0001                     	;# 
  3436  0002                     	;# 
  3437  0003                     	;# 
  3438  0004                     	;# 
  3439  0005                     	;# 
  3440  0006                     	;# 
  3441  0007                     	;# 
  3442  0008                     	;# 
  3443  0009                     	;# 
  3444  000A                     	;# 
  3445  000B                     	;# 
  3446  000C                     	;# 
  3447  000E                     	;# 
  3448  0011                     	;# 
  3449  0012                     	;# 
  3450  0013                     	;# 
  3451  0015                     	;# 
  3452  0016                     	;# 
  3453  0016                     	;# 
  3454  0017                     	;# 
  3455  0018                     	;# 
  3456  0019                     	;# 
  3457  001A                     	;# 
  3458  001B                     	;# 
  3459  001C                     	;# 
  3460  008C                     	;# 
  3461  008E                     	;# 
  3462  0091                     	;# 
  3463  0092                     	;# 
  3464  0093                     	;# 
  3465  0095                     	;# 
  3466  0096                     	;# 
  3467  0097                     	;# 
  3468  0098                     	;# 
  3469  0099                     	;# 
  3470  009A                     	;# 
  3471  009B                     	;# 
  3472  009B                     	;# 
  3473  009C                     	;# 
  3474  009D                     	;# 
  3475  009E                     	;# 
  3476  009F                     	;# 
  3477  010C                     	;# 
  3478  010E                     	;# 
  3479  0111                     	;# 
  3480  0112                     	;# 
  3481  0113                     	;# 
  3482  0114                     	;# 
  3483  0115                     	;# 
  3484  0116                     	;# 
  3485  0117                     	;# 
  3486  0118                     	;# 
  3487  0119                     	;# 
  3488  018C                     	;# 
  3489  018E                     	;# 
  3490  0191                     	;# 
  3491  0191                     	;# 
  3492  0192                     	;# 
  3493  0193                     	;# 
  3494  0193                     	;# 
  3495  0194                     	;# 
  3496  0195                     	;# 
  3497  0196                     	;# 
  3498  0197                     	;# 
  3499  0199                     	;# 
  3500  019A                     	;# 
  3501  019B                     	;# 
  3502  019B                     	;# 
  3503  019C                     	;# 
  3504  019D                     	;# 
  3505  019E                     	;# 
  3506  019F                     	;# 
  3507  020C                     	;# 
  3508  020E                     	;# 
  3509  028C                     	;# 
  3510  028E                     	;# 
  3511  030C                     	;# 
  3512  030E                     	;# 
  3513  038C                     	;# 
  3514  038E                     	;# 
  3515  0391                     	;# 
  3516  0392                     	;# 
  3517  0393                     	;# 
  3518  0397                     	;# 
  3519  0398                     	;# 
  3520  0399                     	;# 
  3521  0691                     	;# 
  3522  0692                     	;# 
  3523  0693                     	;# 
  3524  0694                     	;# 
  3525  0695                     	;# 
  3526  0D8E                     	;# 
  3527  0D8F                     	;# 
  3528  0D90                     	;# 
  3529  0D91                     	;# 
  3530  0D91                     	;# 
  3531  0D92                     	;# 
  3532  0D93                     	;# 
  3533  0D93                     	;# 
  3534  0D94                     	;# 
  3535  0D95                     	;# 
  3536  0D95                     	;# 
  3537  0D96                     	;# 
  3538  0D97                     	;# 
  3539  0D97                     	;# 
  3540  0D98                     	;# 
  3541  0D99                     	;# 
  3542  0D99                     	;# 
  3543  0D9A                     	;# 
  3544  0D9B                     	;# 
  3545  0D9C                     	;# 
  3546  0D9C                     	;# 
  3547  0D9D                     	;# 
  3548  0D9D                     	;# 
  3549  0D9E                     	;# 
  3550  0D9F                     	;# 
  3551  0DA0                     	;# 
  3552  0DA1                     	;# 
  3553  0DA1                     	;# 
  3554  0DA2                     	;# 
  3555  0DA3                     	;# 
  3556  0DA3                     	;# 
  3557  0DA4                     	;# 
  3558  0DA5                     	;# 
  3559  0DA5                     	;# 
  3560  0DA6                     	;# 
  3561  0DA7                     	;# 
  3562  0DA7                     	;# 
  3563  0DA8                     	;# 
  3564  0DA9                     	;# 
  3565  0DA9                     	;# 
  3566  0DAA                     	;# 
  3567  0DAB                     	;# 
  3568  0DAC                     	;# 
  3569  0DAC                     	;# 
  3570  0DAD                     	;# 
  3571  0DAD                     	;# 
  3572  0DAE                     	;# 
  3573  0DAF                     	;# 
  3574  0DB0                     	;# 
  3575  0DB1                     	;# 
  3576  0DB1                     	;# 
  3577  0DB2                     	;# 
  3578  0DB3                     	;# 
  3579  0DB3                     	;# 
  3580  0DB4                     	;# 
  3581  0DB5                     	;# 
  3582  0DB5                     	;# 
  3583  0DB6                     	;# 
  3584  0DB7                     	;# 
  3585  0DB7                     	;# 
  3586  0DB8                     	;# 
  3587  0DB9                     	;# 
  3588  0DB9                     	;# 
  3589  0DBA                     	;# 
  3590  0DBB                     	;# 
  3591  0DBC                     	;# 
  3592  0DBC                     	;# 
  3593  0DBD                     	;# 
  3594  0DBD                     	;# 
  3595  0DBE                     	;# 
  3596  0DBF                     	;# 
  3597  0DC0                     	;# 
  3598  0DC1                     	;# 
  3599  0DC1                     	;# 
  3600  0DC2                     	;# 
  3601  0DC3                     	;# 
  3602  0DC3                     	;# 
  3603  0DC4                     	;# 
  3604  0DC5                     	;# 
  3605  0DC5                     	;# 
  3606  0DC6                     	;# 
  3607  0DC7                     	;# 
  3608  0DC7                     	;# 
  3609  0DC8                     	;# 
  3610  0DC9                     	;# 
  3611  0DC9                     	;# 
  3612  0DCA                     	;# 
  3613  0DCB                     	;# 
  3614  0DCC                     	;# 
  3615  0DCC                     	;# 
  3616  0DCD                     	;# 
  3617  0DCD                     	;# 
  3618  0DCE                     	;# 
  3619  0DCF                     	;# 
  3620  0DD0                     	;# 
  3621  0E0F                     	;# 
  3622  0E10                     	;# 
  3623  0E11                     	;# 
  3624  0E12                     	;# 
  3625  0E13                     	;# 
  3626  0E14                     	;# 
  3627  0E15                     	;# 
  3628  0E16                     	;# 
  3629  0E17                     	;# 
  3630  0E90                     	;# 
  3631  0E91                     	;# 
  3632  0E92                     	;# 
  3633  0E94                     	;# 
  3634  0E95                     	;# 
  3635  0EA0                     	;# 
  3636  0EA1                     	;# 
  3637  0EA2                     	;# 
  3638  0EA3                     	;# 
  3639  0EA4                     	;# 
  3640  0EA5                     	;# 
  3641  0FE4                     	;# 
  3642  0FE5                     	;# 
  3643  0FE6                     	;# 
  3644  0FE7                     	;# 
  3645  0FE8                     	;# 
  3646  0FE8                     	;# 
  3647  0FE9                     	;# 
  3648  0FEA                     	;# 
  3649  0FEA                     	;# 
  3650  0FEB                     	;# 
  3651  0FED                     	;# 
  3652  0FEE                     	;# 
  3653  0FEE                     	;# 
  3654  0FEF                     	;# 
  3655  0FFF                     	;# 
  3656  0000                     	;# 
  3657  0001                     	;# 
  3658  0002                     	;# 
  3659  0003                     	;# 
  3660  0004                     	;# 
  3661  0005                     	;# 
  3662  0006                     	;# 
  3663  0007                     	;# 
  3664  0008                     	;# 
  3665  0009                     	;# 
  3666  000A                     	;# 
  3667  000B                     	;# 
  3668  000C                     	;# 
  3669  000E                     	;# 
  3670  0011                     	;# 
  3671  0012                     	;# 
  3672  0013                     	;# 
  3673  0015                     	;# 
  3674  0016                     	;# 
  3675  0016                     	;# 
  3676  0017                     	;# 
  3677  0018                     	;# 
  3678  0019                     	;# 
  3679  001A                     	;# 
  3680  001B                     	;# 
  3681  001C                     	;# 
  3682  008C                     	;# 
  3683  008E                     	;# 
  3684  0091                     	;# 
  3685  0092                     	;# 
  3686  0093                     	;# 
  3687  0095                     	;# 
  3688  0096                     	;# 
  3689  0097                     	;# 
  3690  0098                     	;# 
  3691  0099                     	;# 
  3692  009A                     	;# 
  3693  009B                     	;# 
  3694  009B                     	;# 
  3695  009C                     	;# 
  3696  009D                     	;# 
  3697  009E                     	;# 
  3698  009F                     	;# 
  3699  010C                     	;# 
  3700  010E                     	;# 
  3701  0111                     	;# 
  3702  0112                     	;# 
  3703  0113                     	;# 
  3704  0114                     	;# 
  3705  0115                     	;# 
  3706  0116                     	;# 
  3707  0117                     	;# 
  3708  0118                     	;# 
  3709  0119                     	;# 
  3710  018C                     	;# 
  3711  018E                     	;# 
  3712  0191                     	;# 
  3713  0191                     	;# 
  3714  0192                     	;# 
  3715  0193                     	;# 
  3716  0193                     	;# 
  3717  0194                     	;# 
  3718  0195                     	;# 
  3719  0196                     	;# 
  3720  0197                     	;# 
  3721  0199                     	;# 
  3722  019A                     	;# 
  3723  019B                     	;# 
  3724  019B                     	;# 
  3725  019C                     	;# 
  3726  019D                     	;# 
  3727  019E                     	;# 
  3728  019F                     	;# 
  3729  020C                     	;# 
  3730  020E                     	;# 
  3731  028C                     	;# 
  3732  028E                     	;# 
  3733  030C                     	;# 
  3734  030E                     	;# 
  3735  038C                     	;# 
  3736  038E                     	;# 
  3737  0391                     	;# 
  3738  0392                     	;# 
  3739  0393                     	;# 
  3740  0397                     	;# 
  3741  0398                     	;# 
  3742  0399                     	;# 
  3743  0691                     	;# 
  3744  0692                     	;# 
  3745  0693                     	;# 
  3746  0694                     	;# 
  3747  0695                     	;# 
  3748  0D8E                     	;# 
  3749  0D8F                     	;# 
  3750  0D90                     	;# 
  3751  0D91                     	;# 
  3752  0D91                     	;# 
  3753  0D92                     	;# 
  3754  0D93                     	;# 
  3755  0D93                     	;# 
  3756  0D94                     	;# 
  3757  0D95                     	;# 
  3758  0D95                     	;# 
  3759  0D96                     	;# 
  3760  0D97                     	;# 
  3761  0D97                     	;# 
  3762  0D98                     	;# 
  3763  0D99                     	;# 
  3764  0D99                     	;# 
  3765  0D9A                     	;# 
  3766  0D9B                     	;# 
  3767  0D9C                     	;# 
  3768  0D9C                     	;# 
  3769  0D9D                     	;# 
  3770  0D9D                     	;# 
  3771  0D9E                     	;# 
  3772  0D9F                     	;# 
  3773  0DA0                     	;# 
  3774  0DA1                     	;# 
  3775  0DA1                     	;# 
  3776  0DA2                     	;# 
  3777  0DA3                     	;# 
  3778  0DA3                     	;# 
  3779  0DA4                     	;# 
  3780  0DA5                     	;# 
  3781  0DA5                     	;# 
  3782  0DA6                     	;# 
  3783  0DA7                     	;# 
  3784  0DA7                     	;# 
  3785  0DA8                     	;# 
  3786  0DA9                     	;# 
  3787  0DA9                     	;# 
  3788  0DAA                     	;# 
  3789  0DAB                     	;# 
  3790  0DAC                     	;# 
  3791  0DAC                     	;# 
  3792  0DAD                     	;# 
  3793  0DAD                     	;# 
  3794  0DAE                     	;# 
  3795  0DAF                     	;# 
  3796  0DB0                     	;# 
  3797  0DB1                     	;# 
  3798  0DB1                     	;# 
  3799  0DB2                     	;# 
  3800  0DB3                     	;# 
  3801  0DB3                     	;# 
  3802  0DB4                     	;# 
  3803  0DB5                     	;# 
  3804  0DB5                     	;# 
  3805  0DB6                     	;# 
  3806  0DB7                     	;# 
  3807  0DB7                     	;# 
  3808  0DB8                     	;# 
  3809  0DB9                     	;# 
  3810  0DB9                     	;# 
  3811  0DBA                     	;# 
  3812  0DBB                     	;# 
  3813  0DBC                     	;# 
  3814  0DBC                     	;# 
  3815  0DBD                     	;# 
  3816  0DBD                     	;# 
  3817  0DBE                     	;# 
  3818  0DBF                     	;# 
  3819  0DC0                     	;# 
  3820  0DC1                     	;# 
  3821  0DC1                     	;# 
  3822  0DC2                     	;# 
  3823  0DC3                     	;# 
  3824  0DC3                     	;# 
  3825  0DC4                     	;# 
  3826  0DC5                     	;# 
  3827  0DC5                     	;# 
  3828  0DC6                     	;# 
  3829  0DC7                     	;# 
  3830  0DC7                     	;# 
  3831  0DC8                     	;# 
  3832  0DC9                     	;# 
  3833  0DC9                     	;# 
  3834  0DCA                     	;# 
  3835  0DCB                     	;# 
  3836  0DCC                     	;# 
  3837  0DCC                     	;# 
  3838  0DCD                     	;# 
  3839  0DCD                     	;# 
  3840  0DCE                     	;# 
  3841  0DCF                     	;# 
  3842  0DD0                     	;# 
  3843  0E0F                     	;# 
  3844  0E10                     	;# 
  3845  0E11                     	;# 
  3846  0E12                     	;# 
  3847  0E13                     	;# 
  3848  0E14                     	;# 
  3849  0E15                     	;# 
  3850  0E16                     	;# 
  3851  0E17                     	;# 
  3852  0E90                     	;# 
  3853  0E91                     	;# 
  3854  0E92                     	;# 
  3855  0E94                     	;# 
  3856  0E95                     	;# 
  3857  0EA0                     	;# 
  3858  0EA1                     	;# 
  3859  0EA2                     	;# 
  3860  0EA3                     	;# 
  3861  0EA4                     	;# 
  3862  0EA5                     	;# 
  3863  0FE4                     	;# 
  3864  0FE5                     	;# 
  3865  0FE6                     	;# 
  3866  0FE7                     	;# 
  3867  0FE8                     	;# 
  3868  0FE8                     	;# 
  3869  0FE9                     	;# 
  3870  0FEA                     	;# 
  3871  0FEA                     	;# 
  3872  0FEB                     	;# 
  3873  0FED                     	;# 
  3874  0FEE                     	;# 
  3875  0FEE                     	;# 
  3876  0FEF                     	;# 
  3877  0FFF                     	;_sysData
  3878                           
  3879 ;; Function _TMR2_DefaultInterruptHandler is unused but had its address taken
  3880  0000                     
  3881                           	psect	idataBANK0
  3882  0802                     __pidataBANK0:	
  3883                           
  3884                           ;initializer for _resRc
  3885  0802  3410               	retlw	16
  3886  0803  3427               	retlw	39
  3887                           
  3888                           	psect	idataBANK1
  3889  1C09                     __pidataBANK1:	
  3890                           
  3891                           ;initializer for _ik
  3892  1C09  3418               	retlw	24
  3893  1C0A  3400               	retlw	0
  3894                           
  3895                           ;initializer for _pidU
  3896  1C0B  3414               	retlw	20
  3897  1C0C  3400               	retlw	0
  3898                           
  3899                           ;initializer for _pidpwm2_U
  3900  1C0D  3414               	retlw	20
  3901  1C0E  3400               	retlw	0
  3902                           
  3903                           ;initializer for _pwm1DutyForIdrv
  3904  1C0F  3405               	retlw	5
  3905  1C10  3400               	retlw	0
  3906                           
  3907                           ;initializer for _pwm2DutyForVout
  3908  1C11  3405               	retlw	5
  3909  1C12  3400               	retlw	0
  3910                           
  3911                           ;initializer for _resRs
  3912  1C13  3410               	retlw	16
  3913  1C14  3427               	retlw	39
  3914                           
  3915                           	psect	stringtext1
  3916  181E                     __pstringtext1:	
  3917  181E                     _HexTable:	
  3918  181E  3430               	retlw	48
  3919  181F  3431               	retlw	49
  3920  1820  3432               	retlw	50
  3921  1821  3433               	retlw	51
  3922  1822  3434               	retlw	52
  3923  1823  3435               	retlw	53
  3924  1824  3436               	retlw	54
  3925  1825  3437               	retlw	55
  3926  1826  3438               	retlw	56
  3927  1827  3439               	retlw	57
  3928  1828  3441               	retlw	65
  3929  1829  3442               	retlw	66
  3930  182A  3443               	retlw	67
  3931  182B  3444               	retlw	68
  3932  182C  3445               	retlw	69
  3933  182D  3446               	retlw	70
  3934  182E  3400               	retlw	0
  3935  182F                     __end_of_HexTable:	
  3936  0013                     _PIR3bits	set	19
  3937  001C                     _T2CONbits	set	28
  3938  0011                     _PIR1bits	set	17
  3939  001A                     _TMR2	set	26
  3940  001B                     _PR2	set	27
  3941  001C                     _T2CON	set	28
  3942  000B                     _INTCONbits	set	11
  3943  005F                     _GIE	set	95
  3944  0095                     _OPTION_REGbits	set	149
  3945  008E                     _TRISC	set	142
  3946  008C                     _TRISA	set	140
  3947  009D                     _ADCON0bits	set	157
  3948  009C                     _ADRESH	set	156
  3949  009B                     _ADRESL	set	155
  3950  009F                     _ADCON2	set	159
  3951  009E                     _ADCON1	set	158
  3952  009D                     _ADCON0	set	157
  3953  0097                     _WDTCON	set	151
  3954  0091                     _PIE1bits	set	145
  3955  010E                     _LATC	set	270
  3956  010C                     _LATA	set	268
  3957  0117                     _FVRCONbits	set	279
  3958  0117                     _FVRCON	set	279
  3959  019E                     _TXSTAbits	set	414
  3960  018C                     _ANSELA	set	396
  3961  018E                     _ANSELC	set	398
  3962  019C                     _SPBRGH	set	412
  3963  019B                     _SPBRGL	set	411
  3964  019E                     _TXSTA	set	414
  3965  019D                     _RCSTA	set	413
  3966  019F                     _BAUDCON	set	415
  3967  019A                     _TXREG	set	410
  3968  0199                     _RCREG	set	409
  3969  019D                     _RCSTAbits	set	413
  3970  0196                     _PMCON2	set	406
  3971  0193                     _PMDATL	set	403
  3972  0194                     _PMDATH	set	404
  3973  0195                     _PMCON1bits	set	405
  3974  0192                     _PMADRH	set	402
  3975  0191                     _PMADRL	set	401
  3976  020E                     _WPUC	set	526
  3977  020C                     _WPUA	set	524
  3978  028E                     _ODCONC	set	654
  3979  028C                     _ODCONA	set	652
  3980  0D9D                     _PWM1INTFbits	set	3485
  3981  0D9F                     _PWM1LDCONbits	set	3487
  3982  0D9B                     _PWM1CONbits	set	3483
  3983  0D9B                     _PWM1CON	set	3483
  3984  0D99                     _PWM1TMRL	set	3481
  3985  0D9A                     _PWM1TMRH	set	3482
  3986  0D97                     _PWM1OFL	set	3479
  3987  0D98                     _PWM1OFH	set	3480
  3988  0D95                     _PWM1PRL	set	3477
  3989  0D96                     _PWM1PRH	set	3478
  3990  0D93                     _PWM1DCL	set	3475
  3991  0D94                     _PWM1DCH	set	3476
  3992  0D91                     _PWM1PHL	set	3473
  3993  0D92                     _PWM1PHH	set	3474
  3994  0DA0                     _PWM1OFCON	set	3488
  3995  0D9F                     _PWM1LDCON	set	3487
  3996  0D9E                     _PWM1CLKCON	set	3486
  3997  0D9D                     _PWM1INTF	set	3485
  3998  0D9C                     _PWM1INTE	set	3484
  3999  0DAD                     _PWM2INTFbits	set	3501
  4000  0DAF                     _PWM2LDCONbits	set	3503
  4001  0DAB                     _PWM2CONbits	set	3499
  4002  0DAB                     _PWM2CON	set	3499
  4003  0DA9                     _PWM2TMRL	set	3497
  4004  0DAA                     _PWM2TMRH	set	3498
  4005  0DA7                     _PWM2OFL	set	3495
  4006  0DA8                     _PWM2OFH	set	3496
  4007  0DA5                     _PWM2PRL	set	3493
  4008  0DA6                     _PWM2PRH	set	3494
  4009  0DA3                     _PWM2DCL	set	3491
  4010  0DA4                     _PWM2DCH	set	3492
  4011  0DA1                     _PWM2PHL	set	3489
  4012  0DA2                     _PWM2PHH	set	3490
  4013  0DB0                     _PWM2OFCON	set	3504
  4014  0DAF                     _PWM2LDCON	set	3503
  4015  0DAE                     _PWM2CLKCON	set	3502
  4016  0DAD                     _PWM2INTF	set	3501
  4017  0DAC                     _PWM2INTE	set	3500
  4018  0E15                     _RXPPSbits	set	3605
  4019  0E0F                     _PPSLOCKbits	set	3599
  4020  0E0F                     _PPSLOCK	set	3599
  4021  0EA5                     _RC5PPSbits	set	3749
  4022  0E95                     _RA5PPSbits	set	3733
  4023  0E94                     _RA4PPSbits	set	3732
  4024                           
  4025                           	psect	cinit
  4026  088D                     start_initialization:	
  4027                           ; #config settings
  4028                           
  4029  088D                     __initialization:		;BIGRAM
  4030                           
  4031                           ; Initialize objects allocated to BANK0
  4032  088D  3188  2002  3188   	fcall	__pidataBANK0	;fetch initializer
  4033  0890  00EE               	movwf	__pdataBANK0& (0+127)
  4034  0891  3188  2003  3188   	fcall	__pidataBANK0+1	;fetch initializer
  4035  0894  00EF               	movwf	(__pdataBANK0+1)& (0+127)
  4036                           
  4037                           ; Initialize objects allocated to BANK1
  4038  0895  3009               	movlw	low __pidataBANK1
  4039  0896  0084               	movwf	4
  4040  0897  309C               	movlw	(high __pidataBANK1)| (0+128)
  4041  0898  0085               	movwf	5
  4042  0899  30D2               	movlw	low __pdataBANK1
  4043  089A  0086               	movwf	6
  4044  089B  3000               	movlw	high __pdataBANK1
  4045  089C  0087               	movwf	7
  4046  089D  3000               	movlw	0
  4047  089E  00FF               	movwf	btemp+1
  4048  089F  300C               	movlw	12
  4049  08A0  319B  23FD  3188   	fcall	init_ram
  4050                           
  4051                           ; Clear objects allocated to BIGRAM
  4052  08A3  305C               	movlw	low (0+9052)
  4053  08A4  0084               	movwf	4
  4054  08A5  3023               	movlw	high (0+9052)
  4055  08A6  0085               	movwf	5
  4056  08A7  3084               	movlw	132
  4057  08A8  00FE               	movwf	btemp
  4058  08A9  3000               	movlw	0
  4059  08AA  00FF               	movwf	btemp+1
  4060  08AB  319B  23F1  3188   	fcall	clear_ram0
  4061                           
  4062                           ; Clear objects allocated to COMMON
  4063  08AE  01FC               	clrf	__pbssCOMMON& (0+127)
  4064                           
  4065                           ; Clear objects allocated to BANK0
  4066  08AF  3020               	movlw	low __pbssBANK0
  4067  08B0  0084               	movwf	4
  4068  08B1  3000               	movlw	high __pbssBANK0
  4069  08B2  0085               	movwf	5
  4070  08B3  3027               	movlw	39
  4071  08B4  00FE               	movwf	btemp
  4072  08B5  3000               	movlw	0
  4073  08B6  00FF               	movwf	btemp+1
  4074  08B7  319B  23F1  3188   	fcall	clear_ram0
  4075                           
  4076                           ; Clear objects allocated to BANK1
  4077  08BA  30A0               	movlw	low __pbssBANK1
  4078  08BB  0084               	movwf	4
  4079  08BC  3000               	movlw	high __pbssBANK1
  4080  08BD  0085               	movwf	5
  4081  08BE  3032               	movlw	50
  4082  08BF  00FE               	movwf	btemp
  4083  08C0  3000               	movlw	0
  4084  08C1  00FF               	movwf	btemp+1
  4085  08C2  319B  23F1  3188   	fcall	clear_ram0
  4086                           
  4087                           ; Clear objects allocated to BANK2
  4088  08C5  3020               	movlw	low __pbssBANK2
  4089  08C6  0084               	movwf	4
  4090  08C7  3001               	movlw	high __pbssBANK2
  4091  08C8  0085               	movwf	5
  4092  08C9  3040               	movlw	64
  4093  08CA  00FE               	movwf	btemp
  4094  08CB  3000               	movlw	0
  4095  08CC  00FF               	movwf	btemp+1
  4096  08CD  319B  23F1  3188   	fcall	clear_ram0
  4097                           
  4098                           ; Clear objects allocated to BANK3
  4099  08D0  30A0               	movlw	low __pbssBANK3
  4100  08D1  0084               	movwf	4
  4101  08D2  3001               	movlw	high __pbssBANK3
  4102  08D3  0085               	movwf	5
  4103  08D4  3040               	movlw	64
  4104  08D5  00FE               	movwf	btemp
  4105  08D6  3000               	movlw	0
  4106  08D7  00FF               	movwf	btemp+1
  4107  08D8  319B  23F1         	fcall	clear_ram0
  4108  08DA                     end_of_initialization:	
  4109                           ;End of C runtime variable initialization code
  4110                           
  4111  08DA                     __end_of__initialization:	
  4112  08DA  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4113  08DB  0020               	movlb	0
  4114  08DC  318E  2E48         	ljmp	_main	;jump to C main() function
  4115                           
  4116                           	psect	bssCOMMON
  4117  007C                     __pbssCOMMON:	
  4118  007C                     _eusartRxIdleTime_ms:	
  4119  007C                     	ds	1
  4120                           
  4121                           	psect	bssBANK0
  4122  0020                     __pbssBANK0:	
  4123  0020                     _y32:	
  4124  0020                     	ds	4
  4125  0024                     _x0:	
  4126  0024                     	ds	4
  4127  0028                     _y0:	
  4128  0028                     	ds	4
  4129  002C                     _rsLoAvg:	
  4130  002C                     	ds	2
  4131  002E                     _voExpectAdcValue:	
  4132  002E                     	ds	2
  4133  0030                     _PidKp:	
  4134  0030                     	ds	2
  4135  0032                     _rtAdcValueVoFb:	
  4136  0032                     	ds	2
  4137  0034                     _rtAdcValueRcHi:	
  4138  0034                     	ds	2
  4139  0036                     _rtAdcValueRcLo:	
  4140  0036                     	ds	2
  4141  0038                     _rtAdcValueRsHi:	
  4142  0038                     	ds	2
  4143  003A                     _rtAdcValueRsLo:	
  4144  003A                     	ds	2
  4145  003C                     _TMR2_InterruptHandler:	
  4146  003C                     	ds	2
  4147  003E                     _pidBbSm:	
  4148  003E                     	ds	1
  4149  003F                     _xlen:	
  4150  003F                     	ds	1
  4151  0040                     _txCount:	
  4152  0040                     	ds	1
  4153  0041                     _txBufLen:	
  4154  0041                     	ds	1
  4155  0042                     _rxtemp:	
  4156  0042                     	ds	1
  4157  0043                     _subTickerX_1s:	
  4158  0043                     	ds	1
  4159  0044                     _subTickerX:	
  4160  0044                     	ds	1
  4161  0045                     _eusartRxCount:	
  4162  0045                     	ds	1
  4163  0046                     _Event:	
  4164  0046                     	ds	1
  4165                           
  4166                           	psect	dataBANK0
  4167  006E                     __pdataBANK0:	
  4168  006E                     _resRc:	
  4169  006E                     	ds	2
  4170                           
  4171                           	psect	bssBANK1
  4172  00A0                     __pbssBANK1:	
  4173  00A0                     _err:	
  4174  00A0                     	ds	12
  4175  00AC                     _rsLoAvgBuf:	
  4176  00AC                     	ds	12
  4177  00B8                     _x32:	
  4178  00B8                     	ds	4
  4179  00BC                     _x1:	
  4180  00BC                     	ds	4
  4181  00C0                     _y1:	
  4182  00C0                     	ds	4
  4183  00C4                     _idelta:	
  4184  00C4                     	ds	2
  4185  00C6                     _iexcept:	
  4186  00C6                     	ds	2
  4187  00C8                     _pwm2Ei:	
  4188  00C8                     	ds	2
  4189  00CA                     _voExpectMv:	
  4190  00CA                     	ds	2
  4191  00CC                     _PidTd:	
  4192  00CC                     	ds	2
  4193  00CE                     _PidTi:	
  4194  00CE                     	ds	2
  4195  00D0                     _globalTicker:	
  4196  00D0                     	ds	2
  4197                           
  4198                           	psect	dataBANK1
  4199  00D2                     __pdataBANK1:	
  4200  00D2                     _ik:	
  4201  00D2                     	ds	2
  4202  00D4                     _pidU:	
  4203  00D4                     	ds	2
  4204  00D6                     _pidpwm2_U:	
  4205  00D6                     	ds	2
  4206  00D8                     _pwm1DutyForIdrv:	
  4207  00D8                     	ds	2
  4208  00DA                     _pwm2DutyForVout:	
  4209  00DA                     	ds	2
  4210  00DC                     _resRs:	
  4211  00DC                     	ds	2
  4212                           
  4213                           	psect	bssBANK2
  4214  0120                     __pbssBANK2:	
  4215  0120                     _modbusBuf:	
  4216  0120                     	ds	32
  4217  0140                     _eusartRxBuffer:	
  4218  0140                     	ds	32
  4219                           
  4220                           	psect	bssBANK3
  4221  01A0                     __pbssBANK3:	
  4222  01A0                     _txBuf:	
  4223  01A0                     	ds	64
  4224                           
  4225                           	psect	inittext
  4226  1BFD                     init_ram:	
  4227  1BFD  00FE               	movwf	126
  4228  1BFE                     initloop:	
  4229  1BFE  0012               	moviw fsr0++
  4230  1BFF  001E               	movwi fsr1++
  4231  1C00  3001               	movlw	1
  4232  1C01  02FE               	subwf	126,f
  4233  1C02  3000               	movlw	0
  4234  1C03  3BFF               	subwfb	127,f
  4235  1C04  087F               	movf	127,w
  4236  1C05  047E               	iorwf	126,w
  4237  1C06  1903               	btfsc	3,2
  4238  1C07  3400               	retlw	0
  4239  1C08  2BFE               	goto	initloop
  4240                           
  4241                           	psect	clrtext
  4242  1BF1                     clear_ram0:	
  4243                           ;	Called with FSR0 containing the base address, and
  4244                           ;	btemp/btemp+1 has the size to clear
  4245                           
  4246  1BF1  0064               	clrwdt	;clear the watchdog before getting into this loop
  4247  1BF2                     clrloop0:	
  4248  1BF2  0180               	clrf	0	;clear RAM location pointed to by FSR
  4249  1BF3  3101               	addfsr 0,1
  4250  1BF4  3001               	movlw	1
  4251  1BF5  02FE               	subwf	126,f
  4252  1BF6  3000               	movlw	0
  4253  1BF7  3BFF               	subwfb	127,f
  4254  1BF8  087F               	movf	127,w
  4255  1BF9  047E               	iorwf	126,w
  4256  1BFA  1903               	btfsc	3,2
  4257  1BFB  3400               	retlw	0	;all done for this memory range, return
  4258  1BFC  2BF2               	goto	clrloop0	;have we reached the end yet?
  4259                           
  4260                           	psect	cstackBANK1
  4261  00DE                     __pcstackBANK1:	
  4262  00DE                     ??_main:	
  4263                           
  4264                           ; 1 bytes @ 0x0
  4265  00DE                     	ds	2
  4266                           
  4267                           	psect	cstackCOMMON
  4268  0070                     __pcstackCOMMON:	
  4269  0070                     ?_TMR2_StartTimer:	
  4270  0070                     ?_PIN_MANAGER_Initialize:	
  4271                           ; 1 bytes @ 0x0
  4272                           
  4273  0070                     ?_OSCILLATOR_Initialize:	
  4274                           ; 1 bytes @ 0x0
  4275                           
  4276  0070                     ?_WDT_Initialize:	
  4277                           ; 1 bytes @ 0x0
  4278                           
  4279  0070                     ?_ADC1_Initialize:	
  4280                           ; 1 bytes @ 0x0
  4281                           
  4282  0070                     ?_EUSART_Initialize:	
  4283                           ; 1 bytes @ 0x0
  4284                           
  4285  0070                     ?_PWM2_Initialize:	
  4286                           ; 1 bytes @ 0x0
  4287                           
  4288  0070                     ?_PWM1_Initialize:	
  4289                           ; 1 bytes @ 0x0
  4290                           
  4291  0070                     ?_TMR2_Initialize:	
  4292                           ; 1 bytes @ 0x0
  4293                           
  4294  0070                     ?_INTERRUPT_InterruptManager:	
  4295                           ; 1 bytes @ 0x0
  4296                           
  4297  0070                     ??_INTERRUPT_InterruptManager:	
  4298                           ; 1 bytes @ 0x0
  4299                           
  4300  0070                     ?_FVR_Initialize:	
  4301                           ; 1 bytes @ 0x0
  4302                           
  4303  0070                     ?_SYSTEM_Initialize:	
  4304                           ; 1 bytes @ 0x0
  4305                           
  4306  0070                     ?_uart_received_start:	
  4307                           ; 1 bytes @ 0x0
  4308                           
  4309  0070                     ?_fvr_set_gain:	
  4310                           ; 1 bytes @ 0x0
  4311                           
  4312  0070                     ?_adc_init:	
  4313                           ; 1 bytes @ 0x0
  4314                           
  4315  0070                     ?_pid_pwm1_idrv_run:	
  4316                           ; 1 bytes @ 0x0
  4317                           
  4318  0070                     ?_pid_pwm2_vout_run:	
  4319                           ; 1 bytes @ 0x0
  4320                           
  4321  0070                     ?_my_flash_read_system_erase:	
  4322                           ; 1 bytes @ 0x0
  4323                           
  4324  0070                     ?_sys_data_save:	
  4325                           ; 1 bytes @ 0x0
  4326                           
  4327  0070                     ?_modbus_response_write_single_register:	
  4328                           ; 1 bytes @ 0x0
  4329                           
  4330  0070                     ?_modbus_response_write_mult_register:	
  4331                           ; 1 bytes @ 0x0
  4332                           
  4333  0070                     ?_modbus_response_command:	
  4334                           ; 1 bytes @ 0x0
  4335                           
  4336  0070                     ?_main:	
  4337                           ; 1 bytes @ 0x0
  4338                           
  4339  0070                     ?_sys_data_init:	
  4340                           ; 1 bytes @ 0x0
  4341                           
  4342                           
  4343                           ; 2 bytes @ 0x0
  4344  0070                     	ds	1
  4345  0071                     ?_FLASH_EraseBlock:	
  4346  0071                     ?_TMR2_SetInterruptHandler:	
  4347                           ; 1 bytes @ 0x1
  4348                           
  4349  0071                     ??_TMR2_StartTimer:	
  4350                           ; 1 bytes @ 0x1
  4351                           
  4352  0071                     ??_PIN_MANAGER_Initialize:	
  4353                           ; 1 bytes @ 0x1
  4354                           
  4355  0071                     ??_OSCILLATOR_Initialize:	
  4356                           ; 1 bytes @ 0x1
  4357                           
  4358  0071                     ??_WDT_Initialize:	
  4359                           ; 1 bytes @ 0x1
  4360                           
  4361  0071                     ??_ADC1_Initialize:	
  4362                           ; 1 bytes @ 0x1
  4363                           
  4364  0071                     ??_EUSART_Initialize:	
  4365                           ; 1 bytes @ 0x1
  4366                           
  4367  0071                     ?_m_mem_cpy_len:	
  4368                           ; 1 bytes @ 0x1
  4369                           
  4370  0071                     ??_PWM2_Initialize:	
  4371                           ; 1 bytes @ 0x1
  4372                           
  4373  0071                     ??_PWM1_Initialize:	
  4374                           ; 1 bytes @ 0x1
  4375                           
  4376  0071                     ??_FVR_Initialize:	
  4377                           ; 1 bytes @ 0x1
  4378                           
  4379  0071                     ??_uart_received_start:	
  4380                           ; 1 bytes @ 0x1
  4381                           
  4382  0071                     ??_fvr_set_gain:	
  4383                           ; 1 bytes @ 0x1
  4384                           
  4385  0071                     ??_adc_init:	
  4386                           ; 1 bytes @ 0x1
  4387                           
  4388  0071                     ?_my_flash_system_read:	
  4389                           ; 1 bytes @ 0x1
  4390                           
  4391  0071                     ?_get_idrv_pwm1_duty:	
  4392                           ; 1 bytes @ 0x1
  4393                           
  4394  0071                     ?_get_vout_pwm2_duty:	
  4395                           ; 2 bytes @ 0x1
  4396                           
  4397  0071                     ?_my_flash_system_write:	
  4398                           ; 2 bytes @ 0x1
  4399                           
  4400  0071                     ?_getRegisterVal:	
  4401                           ; 2 bytes @ 0x1
  4402                           
  4403  0071                     ?_crc_sum:	
  4404                           ; 2 bytes @ 0x1
  4405                           
  4406  0071                     ?___wmul:	
  4407                           ; 2 bytes @ 0x1
  4408                           
  4409  0071                     ?___awdiv:	
  4410                           ; 2 bytes @ 0x1
  4411                           
  4412  0071                     ?___lwdiv:	
  4413                           ; 2 bytes @ 0x1
  4414                           
  4415  0071                     ?___lmul:	
  4416                           ; 2 bytes @ 0x1
  4417                           
  4418  0071                     ?___lldiv:	
  4419                           ; 4 bytes @ 0x1
  4420                           
  4421  0071                     PIN_MANAGER_Initialize@state:	
  4422                           ; 4 bytes @ 0x1
  4423                           
  4424  0071                     FLASH_EraseBlock@startAddr:	
  4425                           ; 1 bytes @ 0x1
  4426                           
  4427  0071                     TMR2_SetInterruptHandler@InterruptHandler:	
  4428                           ; 2 bytes @ 0x1
  4429                           
  4430  0071                     my_flash_system_read@buf:	
  4431                           ; 2 bytes @ 0x1
  4432                           
  4433  0071                     my_flash_system_write@buf:	
  4434                           ; 2 bytes @ 0x1
  4435                           
  4436  0071                     getRegisterVal@addr:	
  4437                           ; 2 bytes @ 0x1
  4438                           
  4439  0071                     m_mem_cpy_len@d:	
  4440                           ; 2 bytes @ 0x1
  4441                           
  4442  0071                     crc_sum@buf:	
  4443                           ; 2 bytes @ 0x1
  4444                           
  4445  0071                     ___wmul@multiplier:	
  4446                           ; 2 bytes @ 0x1
  4447                           
  4448  0071                     ___awdiv@divisor:	
  4449                           ; 2 bytes @ 0x1
  4450                           
  4451  0071                     ___lwdiv@divisor:	
  4452                           ; 2 bytes @ 0x1
  4453                           
  4454  0071                     ___lmul@multiplier:	
  4455                           ; 2 bytes @ 0x1
  4456                           
  4457  0071                     ___lldiv@divisor:	
  4458                           ; 4 bytes @ 0x1
  4459                           
  4460                           
  4461                           ; 4 bytes @ 0x1
  4462  0071                     	ds	1
  4463  0072                     fvr_set_gain@t8:	
  4464  0072                     adc_init@ch:	
  4465                           ; 1 bytes @ 0x2
  4466                           
  4467                           
  4468                           ; 1 bytes @ 0x2
  4469  0072                     	ds	1
  4470  0073                     ??_FLASH_EraseBlock:	
  4471  0073                     ??_TMR2_SetInterruptHandler:	
  4472                           ; 1 bytes @ 0x3
  4473                           
  4474  0073                     ??_TMR2_Initialize:	
  4475                           ; 1 bytes @ 0x3
  4476                           
  4477  0073                     ??_SYSTEM_Initialize:	
  4478                           ; 1 bytes @ 0x3
  4479                           
  4480  0073                     ??_get_idrv_pwm1_duty:	
  4481                           ; 1 bytes @ 0x3
  4482                           
  4483  0073                     ??_get_vout_pwm2_duty:	
  4484                           ; 1 bytes @ 0x3
  4485                           
  4486  0073                     FLASH_EraseBlock@GIEBitValue:	
  4487                           ; 1 bytes @ 0x3
  4488                           
  4489  0073                     fvr_set_gain@g:	
  4490                           ; 1 bytes @ 0x3
  4491                           
  4492  0073                     getRegisterVal@tempData:	
  4493                           ; 1 bytes @ 0x3
  4494                           
  4495  0073                     my_flash_system_read@len:	
  4496                           ; 1 bytes @ 0x3
  4497                           
  4498  0073                     my_flash_system_write@len:	
  4499                           ; 2 bytes @ 0x3
  4500                           
  4501  0073                     m_mem_cpy_len@s:	
  4502                           ; 2 bytes @ 0x3
  4503                           
  4504  0073                     crc_sum@len:	
  4505                           ; 2 bytes @ 0x3
  4506                           
  4507  0073                     ___wmul@multiplicand:	
  4508                           ; 2 bytes @ 0x3
  4509                           
  4510  0073                     ___awdiv@dividend:	
  4511                           ; 2 bytes @ 0x3
  4512                           
  4513  0073                     ___lwdiv@dividend:	
  4514                           ; 2 bytes @ 0x3
  4515                           
  4516                           
  4517                           ; 2 bytes @ 0x3
  4518  0073                     	ds	1
  4519  0074                     ??_my_flash_read_system_erase:	
  4520  0074                     ??_getRegisterVal:	
  4521                           ; 1 bytes @ 0x4
  4522                           
  4523  0074                     ?_adc_sample:	
  4524                           ; 1 bytes @ 0x4
  4525                           
  4526  0074                     adc_sample@gfvr:	
  4527                           ; 2 bytes @ 0x4
  4528                           
  4529                           
  4530                           ; 1 bytes @ 0x4
  4531  0074                     	ds	1
  4532  0075                     ??_my_flash_system_read:	
  4533  0075                     ??_my_flash_system_write:	
  4534                           ; 1 bytes @ 0x5
  4535                           
  4536  0075                     ??_crc_sum:	
  4537                           ; 1 bytes @ 0x5
  4538                           
  4539  0075                     ??___wmul:	
  4540                           ; 1 bytes @ 0x5
  4541                           
  4542  0075                     ??___awdiv:	
  4543                           ; 1 bytes @ 0x5
  4544                           
  4545  0075                     ??___lwdiv:	
  4546                           ; 1 bytes @ 0x5
  4547                           
  4548  0075                     adc_sample@num:	
  4549                           ; 1 bytes @ 0x5
  4550                           
  4551  0075                     get_idrv_pwm1_duty@t16:	
  4552                           ; 1 bytes @ 0x5
  4553                           
  4554  0075                     get_vout_pwm2_duty@t16:	
  4555                           ; 2 bytes @ 0x5
  4556                           
  4557  0075                     m_mem_cpy_len@len:	
  4558                           ; 2 bytes @ 0x5
  4559                           
  4560  0075                     ___wmul@product:	
  4561                           ; 2 bytes @ 0x5
  4562                           
  4563  0075                     ___lmul@multiplicand:	
  4564                           ; 2 bytes @ 0x5
  4565                           
  4566  0075                     ___lldiv@dividend:	
  4567                           ; 4 bytes @ 0x5
  4568                           
  4569                           
  4570                           ; 4 bytes @ 0x5
  4571  0075                     	ds	1
  4572  0076                     ??_adc_sample:	
  4573  0076                     ___awdiv@counter:	
  4574                           ; 1 bytes @ 0x6
  4575                           
  4576  0076                     ___lwdiv@quotient:	
  4577                           ; 1 bytes @ 0x6
  4578                           
  4579                           
  4580                           ; 2 bytes @ 0x6
  4581  0076                     	ds	1
  4582  0077                     ??_m_mem_cpy_len:	
  4583  0077                     ??_crc_append:	
  4584                           ; 1 bytes @ 0x7
  4585                           
  4586  0077                     ?_set_idrv_pwm1_duty:	
  4587                           ; 1 bytes @ 0x7
  4588                           
  4589  0077                     ?_set_vout_pwm2_duty:	
  4590                           ; 1 bytes @ 0x7
  4591                           
  4592  0077                     my_flash_system_read@GIEBitValue:	
  4593                           ; 1 bytes @ 0x7
  4594                           
  4595  0077                     ___awdiv@sign:	
  4596                           ; 1 bytes @ 0x7
  4597                           
  4598  0077                     set_idrv_pwm1_duty@duty:	
  4599                           ; 1 bytes @ 0x7
  4600                           
  4601  0077                     set_vout_pwm2_duty@duty:	
  4602                           ; 2 bytes @ 0x7
  4603                           
  4604                           
  4605                           ; 2 bytes @ 0x7
  4606  0077                     	ds	1
  4607  0078                     ??_crc_verify:	
  4608  0078                     ?_uart_send_len:	
  4609                           ; 1 bytes @ 0x8
  4610                           
  4611  0078                     uart_send_len@len:	
  4612                           ; 1 bytes @ 0x8
  4613                           
  4614  0078                     ___lwdiv@counter:	
  4615                           ; 1 bytes @ 0x8
  4616                           
  4617  0078                     my_flash_system_read@flashAddr:	
  4618                           ; 1 bytes @ 0x8
  4619                           
  4620  0078                     getRegisterVal@t16:	
  4621                           ; 2 bytes @ 0x8
  4622                           
  4623  0078                     ___awdiv@quotient:	
  4624                           ; 2 bytes @ 0x8
  4625                           
  4626                           
  4627                           ; 2 bytes @ 0x8
  4628  0078                     	ds	1
  4629  0079                     ??_uart_send_len:	
  4630  0079                     ??_set_idrv_pwm1_duty:	
  4631                           ; 1 bytes @ 0x9
  4632                           
  4633  0079                     ??_set_vout_pwm2_duty:	
  4634                           ; 1 bytes @ 0x9
  4635                           
  4636  0079                     ??___lmul:	
  4637                           ; 1 bytes @ 0x9
  4638                           
  4639  0079                     ??___lldiv:	
  4640                           ; 1 bytes @ 0x9
  4641                           
  4642  0079                     ??___aldiv:	
  4643                           ; 1 bytes @ 0x9
  4644                           
  4645  0079                     set_idrv_pwm1_duty@t16:	
  4646                           ; 1 bytes @ 0x9
  4647                           
  4648  0079                     set_vout_pwm2_duty@t16:	
  4649                           ; 2 bytes @ 0x9
  4650                           
  4651                           
  4652                           ; 2 bytes @ 0x9
  4653  0079                     	ds	1
  4654  007A                     ??_calc_rs_lo_avg:	
  4655  007A                     getRegisterVal@tempAddr:	
  4656                           ; 1 bytes @ 0xA
  4657                           
  4658  007A                     my_flash_system_read@i:	
  4659                           ; 1 bytes @ 0xA
  4660                           
  4661                           
  4662                           ; 2 bytes @ 0xA
  4663  007A                     	ds	1
  4664  007B                     uart_send_len@buf:	
  4665                           
  4666                           ; 1 bytes @ 0xB
  4667  007B                     	ds	1
  4668  007C                     ??_sys_data_save:	
  4669                           
  4670                           	psect	cstackBANK0
  4671  0047                     __pcstackBANK0:	
  4672                           ; 1 bytes @ 0xC
  4673                           
  4674  0047                     ??_pid_pwm2_vout_run:	
  4675  0047                     adc_sample@ch:	
  4676                           ; 1 bytes @ 0x0
  4677                           
  4678  0047                     my_flash_system_write@j:	
  4679                           ; 1 bytes @ 0x0
  4680                           
  4681  0047                     crc_sum@j:	
  4682                           ; 2 bytes @ 0x0
  4683                           
  4684  0047                     ___lmul@product:	
  4685                           ; 2 bytes @ 0x0
  4686                           
  4687  0047                     ___lldiv@quotient:	
  4688                           ; 4 bytes @ 0x0
  4689                           
  4690                           
  4691                           ; 4 bytes @ 0x0
  4692  0047                     	ds	1
  4693  0048                     adc_sample@i:	
  4694                           
  4695                           ; 2 bytes @ 0x1
  4696  0048                     	ds	1
  4697  0049                     my_flash_system_write@GIEBitValue:	
  4698  0049                     pid_pwm2_vout_run@__ei:	
  4699                           ; 1 bytes @ 0x2
  4700                           
  4701  0049                     crc_sum@i:	
  4702                           ; 2 bytes @ 0x2
  4703                           
  4704                           
  4705                           ; 2 bytes @ 0x2
  4706  0049                     	ds	1
  4707  004A                     adc_sample@ret:	
  4708  004A                     my_flash_system_write@blocNum:	
  4709                           ; 2 bytes @ 0x3
  4710                           
  4711                           
  4712                           ; 2 bytes @ 0x3
  4713  004A                     	ds	1
  4714  004B                     ?___aldiv:	
  4715  004B                     ___lldiv@counter:	
  4716                           ; 4 bytes @ 0x4
  4717                           
  4718  004B                     pid_pwm2_vout_run@t16:	
  4719                           ; 1 bytes @ 0x4
  4720                           
  4721  004B                     crc_sum@crc:	
  4722                           ; 2 bytes @ 0x4
  4723                           
  4724  004B                     ___aldiv@divisor:	
  4725                           ; 2 bytes @ 0x4
  4726                           
  4727                           
  4728                           ; 4 bytes @ 0x4
  4729  004B                     	ds	1
  4730  004C                     ?_calc_rs_lo_avg:	
  4731  004C                     ?_calc_temp_rs:	
  4732                           ; 2 bytes @ 0x5
  4733                           
  4734  004C                     ?_calc_temp_rc:	
  4735                           ; 4 bytes @ 0x5
  4736                           
  4737  004C                     adc_sample@t16:	
  4738                           ; 4 bytes @ 0x5
  4739                           
  4740  004C                     calc_rs_lo_avg@x:	
  4741                           ; 2 bytes @ 0x5
  4742                           
  4743  004C                     my_flash_system_write@loc:	
  4744                           ; 2 bytes @ 0x5
  4745                           
  4746                           
  4747                           ; 2 bytes @ 0x5
  4748  004C                     	ds	1
  4749  004D                     ?_crc_append:	
  4750  004D                     ?_crc_verify:	
  4751                           ; 1 bytes @ 0x6
  4752                           
  4753  004D                     crc_verify@message:	
  4754                           ; 1 bytes @ 0x6
  4755                           
  4756  004D                     crc_append@message:	
  4757                           ; 2 bytes @ 0x6
  4758                           
  4759                           
  4760                           ; 2 bytes @ 0x6
  4761  004D                     	ds	1
  4762  004E                     my_flash_system_write@flashAddr:	
  4763  004E                     calc_rs_lo_avg@t32:	
  4764                           ; 2 bytes @ 0x7
  4765                           
  4766                           
  4767                           ; 4 bytes @ 0x7
  4768  004E                     	ds	1
  4769  004F                     crc_verify@n:	
  4770  004F                     crc_append@n:	
  4771                           ; 2 bytes @ 0x8
  4772                           
  4773  004F                     ___aldiv@dividend:	
  4774                           ; 2 bytes @ 0x8
  4775                           
  4776                           
  4777                           ; 4 bytes @ 0x8
  4778  004F                     	ds	1
  4779  0050                     ??_calc_temp_rs:	
  4780  0050                     ??_calc_temp_rc:	
  4781                           ; 1 bytes @ 0x9
  4782                           
  4783  0050                     my_flash_system_write@i:	
  4784                           ; 1 bytes @ 0x9
  4785                           
  4786                           
  4787                           ; 1 bytes @ 0x9
  4788  0050                     	ds	1
  4789  0051                     crc_verify@crccal:	
  4790  0051                     crc_append@crc:	
  4791                           ; 2 bytes @ 0xA
  4792                           
  4793                           
  4794                           ; 2 bytes @ 0xA
  4795  0051                     	ds	1
  4796  0052                     calc_rs_lo_avg@i:	
  4797                           
  4798                           ; 1 bytes @ 0xB
  4799  0052                     	ds	1
  4800  0053                     ?_modbus_response_illgeal_function:	
  4801  0053                     ??_modbus_response_write_single_register:	
  4802                           ; 1 bytes @ 0xC
  4803                           
  4804  0053                     ??_modbus_response_write_mult_register:	
  4805                           ; 1 bytes @ 0xC
  4806                           
  4807  0053                     ??_modbus_response_command:	
  4808                           ; 1 bytes @ 0xC
  4809                           
  4810  0053                     modbus_response_illgeal_function@errcode:	
  4811                           ; 1 bytes @ 0xC
  4812                           
  4813  0053                     ___aldiv@counter:	
  4814                           ; 1 bytes @ 0xC
  4815                           
  4816  0053                     crc_verify@expected:	
  4817                           ; 1 bytes @ 0xC
  4818                           
  4819                           
  4820                           ; 2 bytes @ 0xC
  4821  0053                     	ds	1
  4822  0054                     ??_modbus_response_illgeal_function:	
  4823  0054                     modbus_response_write_mult_register@startAddr:	
  4824                           ; 1 bytes @ 0xD
  4825                           
  4826  0054                     ___aldiv@sign:	
  4827                           ; 1 bytes @ 0xD
  4828                           
  4829                           
  4830                           ; 1 bytes @ 0xD
  4831  0054                     	ds	1
  4832  0055                     ??_sys_data_init:	
  4833  0055                     modbus_response_illgeal_function@buf:	
  4834                           ; 1 bytes @ 0xE
  4835                           
  4836  0055                     modbus_response_write_mult_register@len:	
  4837                           ; 1 bytes @ 0xE
  4838                           
  4839  0055                     modbus_response_command@tmpAddr:	
  4840                           ; 1 bytes @ 0xE
  4841                           
  4842  0055                     ___aldiv@quotient:	
  4843                           ; 2 bytes @ 0xE
  4844                           
  4845                           
  4846                           ; 4 bytes @ 0xE
  4847  0055                     	ds	1
  4848  0056                     modbus_response_illgeal_function@pmdbs:	
  4849  0056                     modbus_response_write_mult_register@rbuf:	
  4850                           ; 1 bytes @ 0xF
  4851                           
  4852                           
  4853                           ; 1 bytes @ 0xF
  4854  0056                     	ds	1
  4855  0057                     modbus_response_write_single_register@fiSave:	
  4856  0057                     modbus_response_write_mult_register@stb:	
  4857                           ; 1 bytes @ 0x10
  4858                           
  4859  0057                     modbus_response_command@startAddr:	
  4860                           ; 1 bytes @ 0x10
  4861                           
  4862                           
  4863                           ; 2 bytes @ 0x10
  4864  0057                     	ds	1
  4865  0058                     modbus_response_write_single_register@t16:	
  4866                           
  4867                           ; 2 bytes @ 0x11
  4868  0058                     	ds	1
  4869  0059                     ??_pid_pwm1_idrv_run:	
  4870  0059                     ?_calc_expect_vout_adc_value:	
  4871                           ; 1 bytes @ 0x12
  4872                           
  4873  0059                     modbus_response_command@i:	
  4874                           ; 2 bytes @ 0x12
  4875                           
  4876  0059                     calc_expect_vout_adc_value@x:	
  4877                           ; 1 bytes @ 0x12
  4878                           
  4879                           
  4880                           ; 2 bytes @ 0x12
  4881  0059                     	ds	1
  4882  005A                     modbus_response_write_single_register@i:	
  4883  005A                     modbus_response_command@pmdbs:	
  4884                           ; 1 bytes @ 0x13
  4885                           
  4886                           
  4887                           ; 1 bytes @ 0x13
  4888  005A                     	ds	1
  4889  005B                     ??_calc_expect_vout_adc_value:	
  4890  005B                     modbus_response_write_single_register@pmdbs:	
  4891                           ; 1 bytes @ 0x14
  4892                           
  4893  005B                     modbus_response_command@len:	
  4894                           ; 1 bytes @ 0x14
  4895                           
  4896  005B                     sys_data_init@ret:	
  4897                           ; 1 bytes @ 0x14
  4898                           
  4899                           
  4900                           ; 2 bytes @ 0x14
  4901  005B                     	ds	1
  4902  005C                     modbus_response_write_single_register@rbuf:	
  4903  005C                     modbus_response_command@rbuf:	
  4904                           ; 1 bytes @ 0x15
  4905                           
  4906                           
  4907                           ; 1 bytes @ 0x15
  4908  005C                     	ds	1
  4909  005D                     sys_data_init@i:	
  4910  005D                     modbus_response_write_single_register@startAddr:	
  4911                           ; 2 bytes @ 0x16
  4912                           
  4913  005D                     modbus_response_command@tempData:	
  4914                           ; 2 bytes @ 0x16
  4915                           
  4916                           
  4917                           ; 2 bytes @ 0x16
  4918  005D                     	ds	2
  4919  005F                     ?_modbus_response_process:	
  4920  005F                     modbus_response_process@rlen:	
  4921                           ; 1 bytes @ 0x18
  4922                           
  4923                           
  4924                           ; 2 bytes @ 0x18
  4925  005F                     	ds	2
  4926  0061                     ??_modbus_response_process:	
  4927                           
  4928                           ; 1 bytes @ 0x1A
  4929  0061                     	ds	1
  4930  0062                     modbus_response_process@resp:	
  4931                           
  4932                           ; 1 bytes @ 0x1B
  4933  0062                     	ds	1
  4934  0063                     modbus_response_process@pmdbs:	
  4935                           
  4936                           ; 1 bytes @ 0x1C
  4937  0063                     	ds	1
  4938  0064                     modbus_response_process@rbuf:	
  4939                           
  4940                           ; 1 bytes @ 0x1D
  4941  0064                     	ds	1
  4942  0065                     _pid_pwm1_idrv_run$2333:	
  4943                           
  4944                           ; 4 bytes @ 0x1E
  4945  0065                     	ds	4
  4946  0069                     pid_pwm1_idrv_run@t32:	
  4947  0069                     calc_expect_vout_adc_value@t32:	
  4948                           ; 4 bytes @ 0x22
  4949                           
  4950                           
  4951                           ; 4 bytes @ 0x22
  4952  0069                     	ds	4
  4953  006D                     calc_expect_vout_adc_value@i:	
  4954                           
  4955                           ; 1 bytes @ 0x26
  4956  006D                     	ds	1
  4957                           
  4958                           	psect	maintext
  4959  0E48                     __pmaintext:	
  4960 ;;
  4961 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4962 ;;
  4963 ;; *************** function _main *****************
  4964 ;; Defined at:
  4965 ;;		line 17 in file "src/app/main.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;		None
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;		None
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : B1F/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4981 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4982 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4983 ;;Total ram usage:        2 bytes
  4984 ;; Hardware stack levels required when called:    6
  4985 ;; This function calls:
  4986 ;;		_SYSTEM_Initialize
  4987 ;;		_adc_sample
  4988 ;;		_calc_expect_vout_adc_value
  4989 ;;		_calc_rs_lo_avg
  4990 ;;		_calc_temp_rc
  4991 ;;		_calc_temp_rs
  4992 ;;		_m_mem_cpy_len
  4993 ;;		_modbus_response_process
  4994 ;;		_pid_pwm1_idrv_run
  4995 ;;		_pid_pwm2_vout_run
  4996 ;;		_sys_data_init
  4997 ;;		_uart_received_start
  4998 ;;		_uart_send_len
  4999 ;; This function is called by:
  5000 ;;		Startup code after reset
  5001 ;; This function uses a non-reentrant model
  5002 ;;
  5003                           
  5004                           
  5005                           ;psect for function _main
  5006  0E48                     _main:	
  5007                           
  5008                           ;main.c: 19: __nop();
  5009                           
  5010                           ;incstack = 0
  5011                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5012  0E48  0000               	nop
  5013                           
  5014                           ;main.c: 20: isRunInBoot=0xaa;
  5015  0E49  30AA               	movlw	170
  5016  0E4A  0021               	movlb	1	; select bank1
  5017  0E4B  00DE               	movwf	??_main^(0+128)
  5018  0E4C  085E               	movf	??_main^(0+128),w
  5019  0E4D  003F               	movlb	31	; select bank31
  5020  0E4E  00FF               	movwf	127	;volatile
  5021                           
  5022                           ;main.c: 21: isRunInBoot=isRunInBoot;
  5023  0E4F  087F               	movf	127,w	;volatile
  5024  0E50  0021               	movlb	1	; select bank1
  5025  0E51  00DE               	movwf	??_main^(0+128)
  5026  0E52  085E               	movf	??_main^(0+128),w
  5027  0E53  003F               	movlb	31	; select bank31
  5028  0E54  00FF               	movwf	127	;volatile
  5029                           
  5030                           ;main.c: 22: SYSTEM_Initialize();
  5031  0E55  319C  24B7  318E   	fcall	_SYSTEM_Initialize
  5032                           
  5033                           ;main.c: 23: do{ (INTCONbits.GIE = 1); (INTCONbits.PEIE = 1); }while(0);;
  5034  0E58  178B               	bsf	11,7	;volatile
  5035  0E59  170B               	bsf	11,6	;volatile
  5036                           
  5037                           ;main.c: 26: TXSTAbits.TXEN=0;
  5038  0E5A  0023               	movlb	3	; select bank3
  5039  0E5B  129E               	bcf	30,5	;volatile
  5040                           
  5041                           ;main.c: 27: sys_data_init();
  5042  0E5C  3195  2559  318E   	fcall	_sys_data_init
  5043                           
  5044                           ;main.c: 30: modbusBuf[0]=0x55;
  5045  0E5F  3055               	movlw	85
  5046  0E60  0021               	movlb	1	; select bank1
  5047  0E61  00DE               	movwf	??_main^(0+128)
  5048  0E62  085E               	movf	??_main^(0+128),w
  5049  0E63  0022               	movlb	2	; select bank2
  5050  0E64  00A0               	movwf	_modbusBuf^(0+256)
  5051                           
  5052                           ;main.c: 31: modbusBuf[1]=0xaa;
  5053  0E65  30AA               	movlw	170
  5054  0E66  0021               	movlb	1	; select bank1
  5055  0E67  00DE               	movwf	??_main^(0+128)
  5056  0E68  085E               	movf	??_main^(0+128),w
  5057  0E69  0022               	movlb	2	; select bank2
  5058  0E6A  00A1               	movwf	(_modbusBuf^(0+256)+1)
  5059                           
  5060                           ;main.c: 32: uart_send_len(modbusBuf,2);
  5061  0E6B  3002               	movlw	2
  5062  0E6C  0021               	movlb	1	; select bank1
  5063  0E6D  00DE               	movwf	??_main^(0+128)
  5064  0E6E  085E               	movf	??_main^(0+128),w
  5065  0E6F  00F8               	movwf	uart_send_len@len
  5066  0E70  3020               	movlw	(low (_modbusBuf| (0+256)))& (0+255)
  5067  0E71  319E  2686  318E   	fcall	_uart_send_len
  5068  0E74                     l5333:	
  5069                           ;main.c: 33: while (1){
  5070                           
  5071                           
  5072                           ;main.c: 34: if(Event & (1<<2)){
  5073  0E74  0020               	movlb	0	; select bank0
  5074  0E75  1D46               	btfss	_Event,2	;volatile
  5075  0E76  2F20               	goto	l5363
  5076                           
  5077                           ;main.c: 35: Event &= ~(1<<2);
  5078  0E77  30FB               	movlw	251
  5079  0E78  0021               	movlb	1	; select bank1
  5080  0E79  00DE               	movwf	??_main^(0+128)
  5081  0E7A  085E               	movf	??_main^(0+128),w
  5082  0E7B  0020               	movlb	0	; select bank0
  5083  0E7C  05C6               	andwf	_Event,f	;volatile
  5084                           
  5085                           ;main.c: 37: rtAdcValueRsLo=adc_sample(channel_AN6,1,32);
  5086  0E7D  01F4               	clrf	adc_sample@gfvr
  5087  0E7E  0AF4               	incf	adc_sample@gfvr,f
  5088  0E7F  3020               	movlw	32
  5089  0E80  0021               	movlb	1	; select bank1
  5090  0E81  00DE               	movwf	??_main^(0+128)
  5091  0E82  085E               	movf	??_main^(0+128),w
  5092  0E83  00F5               	movwf	adc_sample@num
  5093  0E84  3006               	movlw	6
  5094  0E85  3191  21CA  318E   	fcall	_adc_sample
  5095  0E88  0875               	movf	?_adc_sample+1,w
  5096  0E89  0020               	movlb	0	; select bank0
  5097  0E8A  00BB               	movwf	_rtAdcValueRsLo+1
  5098  0E8B  0874               	movf	?_adc_sample,w
  5099  0E8C  00BA               	movwf	_rtAdcValueRsLo
  5100                           
  5101                           ;main.c: 39: rtAdcValueRsHi=adc_sample(channel_AN5,3,32);
  5102  0E8D  3003               	movlw	3
  5103  0E8E  0021               	movlb	1	; select bank1
  5104  0E8F  00DE               	movwf	??_main^(0+128)
  5105  0E90  085E               	movf	??_main^(0+128),w
  5106  0E91  00F4               	movwf	adc_sample@gfvr
  5107  0E92  3020               	movlw	32
  5108  0E93  00DF               	movwf	(??_main+1)^(0+128)
  5109  0E94  085F               	movf	(??_main+1)^(0+128),w
  5110  0E95  00F5               	movwf	adc_sample@num
  5111  0E96  3005               	movlw	5
  5112  0E97  3191  21CA  318E   	fcall	_adc_sample
  5113  0E9A  0875               	movf	?_adc_sample+1,w
  5114  0E9B  0020               	movlb	0	; select bank0
  5115  0E9C  00B9               	movwf	_rtAdcValueRsHi+1
  5116  0E9D  0874               	movf	?_adc_sample,w
  5117  0E9E  00B8               	movwf	_rtAdcValueRsHi
  5118                           
  5119                           ;main.c: 42: rtAdcValueRcLo=adc_sample(channel_AN4,3,32);
  5120  0E9F  3003               	movlw	3
  5121  0EA0  0021               	movlb	1	; select bank1
  5122  0EA1  00DE               	movwf	??_main^(0+128)
  5123  0EA2  085E               	movf	??_main^(0+128),w
  5124  0EA3  00F4               	movwf	adc_sample@gfvr
  5125  0EA4  3020               	movlw	32
  5126  0EA5  00DF               	movwf	(??_main+1)^(0+128)
  5127  0EA6  085F               	movf	(??_main+1)^(0+128),w
  5128  0EA7  00F5               	movwf	adc_sample@num
  5129  0EA8  3004               	movlw	4
  5130  0EA9  3191  21CA  318E   	fcall	_adc_sample
  5131  0EAC  0875               	movf	?_adc_sample+1,w
  5132  0EAD  0020               	movlb	0	; select bank0
  5133  0EAE  00B7               	movwf	_rtAdcValueRcLo+1
  5134  0EAF  0874               	movf	?_adc_sample,w
  5135  0EB0  00B6               	movwf	_rtAdcValueRcLo
  5136                           
  5137                           ;main.c: 43: rtAdcValueRcLo>>=1;
  5138  0EB1  3001               	movlw	1
  5139  0EB2                     u4935:	
  5140  0EB2  36B7               	lsrf	_rtAdcValueRcLo+1,f
  5141  0EB3  0CB6               	rrf	_rtAdcValueRcLo,f
  5142  0EB4  0B89               	decfsz	9,f
  5143  0EB5  2EB2               	goto	u4935
  5144                           
  5145                           ;main.c: 44: rtAdcValueRcHi=adc_sample(channel_AN2,3,32);
  5146  0EB6  3003               	movlw	3
  5147  0EB7  0021               	movlb	1	; select bank1
  5148  0EB8  00DE               	movwf	??_main^(0+128)
  5149  0EB9  085E               	movf	??_main^(0+128),w
  5150  0EBA  00F4               	movwf	adc_sample@gfvr
  5151  0EBB  3020               	movlw	32
  5152  0EBC  00DF               	movwf	(??_main+1)^(0+128)
  5153  0EBD  085F               	movf	(??_main+1)^(0+128),w
  5154  0EBE  00F5               	movwf	adc_sample@num
  5155  0EBF  3002               	movlw	2
  5156  0EC0  3191  21CA  318E   	fcall	_adc_sample
  5157  0EC3  0875               	movf	?_adc_sample+1,w
  5158  0EC4  0020               	movlb	0	; select bank0
  5159  0EC5  00B5               	movwf	_rtAdcValueRcHi+1
  5160  0EC6  0874               	movf	?_adc_sample,w
  5161  0EC7  00B4               	movwf	_rtAdcValueRcHi
  5162                           
  5163                           ;main.c: 45: rtAdcValueRcHi>>=1;
  5164  0EC8  3001               	movlw	1
  5165  0EC9                     u4945:	
  5166  0EC9  36B5               	lsrf	_rtAdcValueRcHi+1,f
  5167  0ECA  0CB4               	rrf	_rtAdcValueRcHi,f
  5168  0ECB  0B89               	decfsz	9,f
  5169  0ECC  2EC9               	goto	u4945
  5170                           
  5171                           ;main.c: 47: rtAdcValueVoFb=adc_sample(channel_AN7,3,32);
  5172  0ECD  3003               	movlw	3
  5173  0ECE  0021               	movlb	1	; select bank1
  5174  0ECF  00DE               	movwf	??_main^(0+128)
  5175  0ED0  085E               	movf	??_main^(0+128),w
  5176  0ED1  00F4               	movwf	adc_sample@gfvr
  5177  0ED2  3020               	movlw	32
  5178  0ED3  00DF               	movwf	(??_main+1)^(0+128)
  5179  0ED4  085F               	movf	(??_main+1)^(0+128),w
  5180  0ED5  00F5               	movwf	adc_sample@num
  5181  0ED6  3007               	movlw	7
  5182  0ED7  3191  21CA  318E   	fcall	_adc_sample
  5183  0EDA  0875               	movf	?_adc_sample+1,w
  5184  0EDB  0020               	movlb	0	; select bank0
  5185  0EDC  00B3               	movwf	_rtAdcValueVoFb+1
  5186  0EDD  0874               	movf	?_adc_sample,w
  5187  0EDE  00B2               	movwf	_rtAdcValueVoFb
  5188                           
  5189                           ;main.c: 48: rtAdcValueVoFb>>=1;
  5190  0EDF  3001               	movlw	1
  5191  0EE0                     u4955:	
  5192  0EE0  36B3               	lsrf	_rtAdcValueVoFb+1,f
  5193  0EE1  0CB2               	rrf	_rtAdcValueVoFb,f
  5194  0EE2  0B89               	decfsz	9,f
  5195  0EE3  2EE0               	goto	u4955
  5196                           
  5197                           ;main.c: 50: resRc=calc_temp_rc();
  5198  0EE4  3196  262E  318E   	fcall	_calc_temp_rc
  5199  0EE7  0020               	movlb	0	; select bank0
  5200  0EE8  084D               	movf	?_calc_temp_rc+1,w
  5201  0EE9  00EF               	movwf	_resRc+1
  5202  0EEA  084C               	movf	?_calc_temp_rc,w
  5203  0EEB  00EE               	movwf	_resRc
  5204                           
  5205                           ;main.c: 51: resRs=calc_temp_rs();
  5206  0EEC  3194  240A  318E   	fcall	_calc_temp_rs
  5207  0EEF  0020               	movlb	0	; select bank0
  5208  0EF0  084D               	movf	?_calc_temp_rs+1,w
  5209  0EF1  0021               	movlb	1	; select bank1
  5210  0EF2  00DD               	movwf	(_resRs+1)^(0+128)
  5211  0EF3  0020               	movlb	0	; select bank0
  5212  0EF4  084C               	movf	?_calc_temp_rs,w
  5213  0EF5  0021               	movlb	1	; select bank1
  5214  0EF6  00DC               	movwf	_resRs^(0+128)
  5215                           
  5216                           ;main.c: 53: pid_pwm1_idrv_run();
  5217  0EF7  3188  20DE  318E   	fcall	_pid_pwm1_idrv_run
  5218                           
  5219                           ;main.c: 54: rsLoAvg=calc_rs_lo_avg(rtAdcValueRsLo);
  5220  0EFA  0020               	movlb	0	; select bank0
  5221  0EFB  083B               	movf	_rtAdcValueRsLo+1,w
  5222  0EFC  00CD               	movwf	calc_rs_lo_avg@x+1
  5223  0EFD  083A               	movf	_rtAdcValueRsLo,w
  5224  0EFE  00CC               	movwf	calc_rs_lo_avg@x
  5225  0EFF  3192  2227  318E   	fcall	_calc_rs_lo_avg
  5226  0F02  0020               	movlb	0	; select bank0
  5227  0F03  084D               	movf	?_calc_rs_lo_avg+1,w
  5228  0F04  00AD               	movwf	_rsLoAvg+1
  5229  0F05  084C               	movf	?_calc_rs_lo_avg,w
  5230  0F06  00AC               	movwf	_rsLoAvg
  5231                           
  5232                           ;main.c: 56: voExpectMv=calc_expect_vout_adc_value(rsLoAvg);
  5233  0F07  082D               	movf	_rsLoAvg+1,w
  5234  0F08  00DA               	movwf	calc_expect_vout_adc_value@x+1
  5235  0F09  082C               	movf	_rsLoAvg,w
  5236  0F0A  00D9               	movwf	calc_expect_vout_adc_value@x
  5237  0F0B  318B  2300  318E   	fcall	_calc_expect_vout_adc_value
  5238  0F0E  0020               	movlb	0	; select bank0
  5239  0F0F  085A               	movf	?_calc_expect_vout_adc_value+1,w
  5240  0F10  0021               	movlb	1	; select bank1
  5241  0F11  00CB               	movwf	(_voExpectMv+1)^(0+128)
  5242  0F12  0020               	movlb	0	; select bank0
  5243  0F13  0859               	movf	?_calc_expect_vout_adc_value,w
  5244  0F14  0021               	movlb	1	; select bank1
  5245  0F15  00CA               	movwf	_voExpectMv^(0+128)
  5246                           
  5247                           ;main.c: 57: voExpectAdcValue=(voExpectMv<<1);
  5248  0F16  354A               	lslf	_voExpectMv^(0+128),w
  5249  0F17  0020               	movlb	0	; select bank0
  5250  0F18  00AE               	movwf	_voExpectAdcValue
  5251  0F19  0021               	movlb	1	; select bank1
  5252  0F1A  0D4B               	rlf	(_voExpectMv+1)^(0+128),w
  5253  0F1B  0020               	movlb	0	; select bank0
  5254  0F1C  00AF               	movwf	_voExpectAdcValue+1
  5255                           
  5256                           ;main.c: 58: pid_pwm2_vout_run();
  5257  0F1D  318F  275C  318E   	fcall	_pid_pwm2_vout_run
  5258  0F20                     l5363:	
  5259                           
  5260                           ;main.c: 60: };main.c: 62: if(Event & (1<<3)){
  5261  0F20  0020               	movlb	0	; select bank0
  5262  0F21  1DC6               	btfss	_Event,3	;volatile
  5263  0F22  2F29               	goto	l5367
  5264                           
  5265                           ;main.c: 63: Event &= ~(1<<3);
  5266  0F23  30F7               	movlw	247
  5267  0F24  0021               	movlb	1	; select bank1
  5268  0F25  00DE               	movwf	??_main^(0+128)
  5269  0F26  085E               	movf	??_main^(0+128),w
  5270  0F27  0020               	movlb	0	; select bank0
  5271  0F28  05C6               	andwf	_Event,f	;volatile
  5272  0F29                     l5367:	
  5273                           
  5274                           ;main.c: 105: };main.c: 107: if(Event & (1<<0)){
  5275  0F29  1C46               	btfss	_Event,0	;volatile
  5276  0F2A  2F5A               	goto	l5377
  5277                           
  5278                           ;main.c: 108: Event &= ~ (1<<0);
  5279  0F2B  30FE               	movlw	254
  5280  0F2C  0021               	movlb	1	; select bank1
  5281  0F2D  00DE               	movwf	??_main^(0+128)
  5282  0F2E  085E               	movf	??_main^(0+128),w
  5283  0F2F  0020               	movlb	0	; select bank0
  5284  0F30  05C6               	andwf	_Event,f	;volatile
  5285                           
  5286                           ;main.c: 109: if(eusartRxCount>0){
  5287  0F31  0845               	movf	_eusartRxCount,w	;volatile
  5288  0F32  1903               	btfsc	3,2
  5289  0F33  2F57               	goto	l5375
  5290                           
  5291                           ;main.c: 110: m_mem_cpy_len(modbusBuf,eusartRxBuffer,eusartRxCount);
  5292  0F34  3020               	movlw	low _modbusBuf
  5293  0F35  00F1               	movwf	m_mem_cpy_len@d
  5294  0F36  3001               	movlw	high _modbusBuf
  5295  0F37  00F2               	movwf	m_mem_cpy_len@d+1
  5296  0F38  3040               	movlw	low _eusartRxBuffer
  5297  0F39  00F3               	movwf	m_mem_cpy_len@s
  5298  0F3A  3001               	movlw	high _eusartRxBuffer
  5299  0F3B  00F4               	movwf	m_mem_cpy_len@s+1
  5300  0F3C  0845               	movf	_eusartRxCount,w	;volatile
  5301  0F3D  0021               	movlb	1	; select bank1
  5302  0F3E  00DE               	movwf	??_main^(0+128)
  5303  0F3F  01DF               	clrf	(??_main^(0+128)+1)
  5304  0F40  085E               	movf	??_main^(0+128),w
  5305  0F41  00F5               	movwf	m_mem_cpy_len@len
  5306  0F42  085F               	movf	(??_main+1)^(0+128),w
  5307  0F43  00F6               	movwf	m_mem_cpy_len@len+1
  5308  0F44  319D  2541  318E   	fcall	_m_mem_cpy_len
  5309                           
  5310                           ;main.c: 111: modbus_response_process(modbusBuf,eusartRxCount);
  5311  0F47  0020               	movlb	0	; select bank0
  5312  0F48  0845               	movf	_eusartRxCount,w	;volatile
  5313  0F49  0021               	movlb	1	; select bank1
  5314  0F4A  00DE               	movwf	??_main^(0+128)
  5315  0F4B  01DF               	clrf	(??_main^(0+128)+1)
  5316  0F4C  085E               	movf	??_main^(0+128),w
  5317  0F4D  0020               	movlb	0	; select bank0
  5318  0F4E  00DF               	movwf	modbus_response_process@rlen
  5319  0F4F  0021               	movlb	1	; select bank1
  5320  0F50  085F               	movf	(??_main+1)^(0+128),w
  5321  0F51  0020               	movlb	0	; select bank0
  5322  0F52  00E0               	movwf	modbus_response_process@rlen+1
  5323  0F53  3020               	movlw	(low (_modbusBuf| (0+256)))& (0+255)
  5324  0F54  3191  2120  318E   	fcall	_modbus_response_process
  5325  0F57                     l5375:	
  5326                           
  5327                           ;main.c: 113: };main.c: 115: uart_received_start();
  5328  0F57  319B  23DE  318E   	fcall	_uart_received_start
  5329  0F5A                     l5377:	
  5330                           
  5331                           ;main.c: 116: };main.c: 118: __nop();
  5332  0F5A  0000               	nop
  5333  0F5B  2E74               	goto	l5333
  5334  0F5C                     __end_of_main:	
  5335                           
  5336                           	psect	text1
  5337  1BDE                     __ptext1:	
  5338 ;; *************** function _uart_received_start *****************
  5339 ;; Defined at:
  5340 ;;		line 59 in file "src/api/my_uart.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;		None
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;		None
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  1    wreg      void 
  5347 ;; Registers used:
  5348 ;;		status,2
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5358 ;;Total ram usage:        0 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:    1
  5361 ;; This function calls:
  5362 ;;		Nothing
  5363 ;; This function is called by:
  5364 ;;		_main
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           
  5369                           ;psect for function _uart_received_start
  5370  1BDE                     _uart_received_start:	
  5371                           
  5372                           ;my_uart.c: 61: eusartRxCount=0;
  5373                           
  5374                           ;incstack = 0
  5375                           ; Regs used in _uart_received_start: [status,2]
  5376  1BDE  0020               	movlb	0	; select bank0
  5377  1BDF  01C5               	clrf	_eusartRxCount	;volatile
  5378                           
  5379                           ;my_uart.c: 70: eusartRxIdleTime_ms=0;
  5380  1BE0  01FC               	clrf	_eusartRxIdleTime_ms	;volatile
  5381  1BE1  0008               	return
  5382  1BE2                     __end_of_uart_received_start:	
  5383                           
  5384                           	psect	text2
  5385  1559                     __ptext2:	
  5386 ;; *************** function _sys_data_init *****************
  5387 ;; Defined at:
  5388 ;;		line 104 in file "src/api/sysData.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;		None
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;  i               2   22[BANK0 ] unsigned int 
  5393 ;;  ret             2   20[BANK0 ] unsigned int 
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  2  751[None  ] unsigned int 
  5396 ;; Registers used:
  5397 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5404 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5405 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5406 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5407 ;;Total ram usage:       10 bytes
  5408 ;; Hardware stack levels used:    1
  5409 ;; Hardware stack levels required when called:    4
  5410 ;; This function calls:
  5411 ;;		___wmul
  5412 ;;		_crc_verify
  5413 ;;		_my_flash_system_read
  5414 ;;		_sys_data_save
  5415 ;; This function is called by:
  5416 ;;		_main
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420                           
  5421                           ;psect for function _sys_data_init
  5422  1559                     _sys_data_init:	
  5423                           
  5424                           ;sysData.c: 106: uint16_t ret,i;;sysData.c: 107: my_flash_system_read((uint8_t*)&sysData
      +                          ,sizeof(sysData_t));
  5425                           
  5426                           ;incstack = 0
  5427                           ; Regs used in _sys_data_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5428  1559  305C               	movlw	92
  5429  155A  00F1               	movwf	my_flash_system_read@buf
  5430  155B  3023               	movlw	35
  5431  155C  00F2               	movwf	my_flash_system_read@buf+1
  5432  155D  3084               	movlw	132
  5433  155E  00F3               	movwf	my_flash_system_read@len
  5434  155F  3000               	movlw	0
  5435  1560  00F4               	movwf	my_flash_system_read@len+1
  5436  1561  3190  2002  3195   	fcall	_my_flash_system_read
  5437                           
  5438                           ;sysData.c: 108: ret=crc_verify((uint8_t*)&sysData,sizeof(sysData_t));
  5439  1564  305C               	movlw	92
  5440  1565  0020               	movlb	0	; select bank0
  5441  1566  00CD               	movwf	crc_verify@message
  5442  1567  3023               	movlw	35
  5443  1568  00CE               	movwf	crc_verify@message+1
  5444  1569  3084               	movlw	132
  5445  156A  00CF               	movwf	crc_verify@n
  5446  156B  3000               	movlw	0
  5447  156C  00D0               	movwf	crc_verify@n+1
  5448  156D  319E  2618  3195   	fcall	_crc_verify
  5449  1570  0020               	movlb	0	; select bank0
  5450  1571  00D5               	movwf	??_sys_data_init
  5451  1572  01D6               	clrf	??_sys_data_init+1
  5452  1573  0855               	movf	??_sys_data_init,w
  5453  1574  00DB               	movwf	sys_data_init@ret
  5454  1575  0856               	movf	??_sys_data_init+1,w
  5455  1576  00DC               	movwf	sys_data_init@ret+1
  5456                           
  5457                           ;sysData.c: 109: if(!ret){
  5458  1577  085B               	movf	sys_data_init@ret,w
  5459  1578  045C               	iorwf	sys_data_init@ret+1,w
  5460  1579  1D03               	btfss	3,2
  5461  157A  2E10               	goto	l5247
  5462                           
  5463                           ;sysData.c: 110: sysData.pidSetFlg0=0x55;
  5464  157B  305C               	movlw	92
  5465  157C  0086               	movwf	6
  5466  157D  3023               	movlw	35
  5467  157E  0087               	movwf	7
  5468  157F  3055               	movlw	85
  5469  1580  3FC0               	movwi [0]fsr1
  5470                           
  5471                           ;sysData.c: 111: sysData.pidSetFlg1=0xaa;
  5472  1581  305D               	movlw	93
  5473  1582  0086               	movwf	6
  5474  1583  3023               	movlw	35
  5475  1584  0087               	movwf	7
  5476  1585  30AA               	movlw	170
  5477  1586  0081               	movwf	1
  5478                           
  5479                           ;sysData.c: 112: sysData.id=0x01;
  5480  1587  305E               	movlw	94
  5481  1588  0086               	movwf	6
  5482  1589  3023               	movlw	35
  5483  158A  0087               	movwf	7
  5484  158B  3001               	movlw	1
  5485  158C  0081               	movwf	1
  5486                           
  5487                           ;sysData.c: 113: for(i=0;i<30;i++){
  5488  158D  01DD               	clrf	sys_data_init@i
  5489  158E  01DE               	clrf	sys_data_init@i+1
  5490  158F  3000               	movlw	0
  5491  1590  025E               	subwf	sys_data_init@i+1,w
  5492  1591  301E               	movlw	30
  5493  1592  1903               	skipnz
  5494  1593  025D               	subwf	sys_data_init@i,w
  5495  1594  1803               	btfsc	3,0
  5496  1595  2DE7               	goto	l5243
  5497  1596                     l5237:	
  5498                           
  5499                           ;sysData.c: 115: sysData.calibRsAdc[i]=9400+i*720;
  5500  1596  085E               	movf	sys_data_init@i+1,w
  5501  1597  00F2               	movwf	___wmul@multiplier+1
  5502  1598  085D               	movf	sys_data_init@i,w
  5503  1599  00F1               	movwf	___wmul@multiplier
  5504  159A  30D0               	movlw	208
  5505  159B  00F3               	movwf	___wmul@multiplicand
  5506  159C  3002               	movlw	2
  5507  159D  00F4               	movwf	___wmul@multiplicand+1
  5508  159E  319C  24D2  3195   	fcall	___wmul
  5509  15A1  0871               	movf	?___wmul,w
  5510  15A2  3EB8               	addlw	184
  5511  15A3  0020               	movlb	0	; select bank0
  5512  15A4  00D5               	movwf	??_sys_data_init
  5513  15A5  3024               	movlw	36
  5514  15A6  3D72               	addwfc	?___wmul+1,w
  5515  15A7  00D6               	movwf	??_sys_data_init+1
  5516  15A8  085E               	movf	sys_data_init@i+1,w
  5517  15A9  00D8               	movwf	??_sys_data_init+3
  5518  15AA  085D               	movf	sys_data_init@i,w
  5519  15AB  00D7               	movwf	??_sys_data_init+2
  5520  15AC  35D7               	lslf	??_sys_data_init+2,f
  5521  15AD  0DD8               	rlf	??_sys_data_init+3,f
  5522  15AE  3066               	movlw	102
  5523  15AF  00D9               	movwf	??_sys_data_init+4
  5524  15B0  3023               	movlw	35
  5525  15B1  00DA               	movwf	??_sys_data_init+5
  5526  15B2  0857               	movf	??_sys_data_init+2,w
  5527  15B3  0759               	addwf	??_sys_data_init+4,w
  5528  15B4  0086               	movwf	6
  5529  15B5  0858               	movf	??_sys_data_init+3,w
  5530  15B6  3D5A               	addwfc	??_sys_data_init+5,w
  5531  15B7  0087               	movwf	7
  5532  15B8  0855               	movf	??_sys_data_init,w
  5533  15B9  3FC0               	movwi [0]fsr1
  5534  15BA  0856               	movf	??_sys_data_init+1,w
  5535  15BB  3FC1               	movwi [1]fsr1
  5536                           
  5537                           ;sysData.c: 116: sysData.calibVoMV[i]=i*333;
  5538  15BC  085E               	movf	sys_data_init@i+1,w
  5539  15BD  00F2               	movwf	___wmul@multiplier+1
  5540  15BE  085D               	movf	sys_data_init@i,w
  5541  15BF  00F1               	movwf	___wmul@multiplier
  5542  15C0  304D               	movlw	77
  5543  15C1  00F3               	movwf	___wmul@multiplicand
  5544  15C2  3001               	movlw	1
  5545  15C3  00F4               	movwf	___wmul@multiplicand+1
  5546  15C4  319C  24D2  3195   	fcall	___wmul
  5547  15C7  0020               	movlb	0	; select bank0
  5548  15C8  085E               	movf	sys_data_init@i+1,w
  5549  15C9  00D6               	movwf	??_sys_data_init+1
  5550  15CA  085D               	movf	sys_data_init@i,w
  5551  15CB  00D5               	movwf	??_sys_data_init
  5552  15CC  35D5               	lslf	??_sys_data_init,f
  5553  15CD  0DD6               	rlf	??_sys_data_init+1,f
  5554  15CE  30A2               	movlw	162
  5555  15CF  00D7               	movwf	??_sys_data_init+2
  5556  15D0  3023               	movlw	35
  5557  15D1  00D8               	movwf	??_sys_data_init+3
  5558  15D2  0855               	movf	??_sys_data_init,w
  5559  15D3  0757               	addwf	??_sys_data_init+2,w
  5560  15D4  0086               	movwf	6
  5561  15D5  0856               	movf	??_sys_data_init+1,w
  5562  15D6  3D58               	addwfc	??_sys_data_init+3,w
  5563  15D7  0087               	movwf	7
  5564  15D8  0871               	movf	?___wmul,w
  5565  15D9  3FC0               	movwi [0]fsr1
  5566  15DA  0872               	movf	?___wmul+1,w
  5567  15DB  3FC1               	movwi [1]fsr1
  5568  15DC  3001               	movlw	1
  5569  15DD  07DD               	addwf	sys_data_init@i,f
  5570  15DE  3000               	movlw	0
  5571  15DF  3DDE               	addwfc	sys_data_init@i+1,f
  5572  15E0  3000               	movlw	0
  5573  15E1  025E               	subwf	sys_data_init@i+1,w
  5574  15E2  301E               	movlw	30
  5575  15E3  1903               	skipnz
  5576  15E4  025D               	subwf	sys_data_init@i,w
  5577  15E5  1C03               	skipc
  5578  15E6  2D96               	goto	l5237
  5579  15E7                     l5243:	
  5580                           
  5581                           ;sysData.c: 117: };sysData.c: 119: sysData.pidKp=3200;
  5582  15E7  3080               	movlw	128
  5583  15E8  00D5               	movwf	??_sys_data_init
  5584  15E9  300C               	movlw	12
  5585  15EA  00D6               	movwf	??_sys_data_init+1
  5586  15EB  305C               	movlw	92
  5587  15EC  0086               	movwf	6
  5588  15ED  3023               	movlw	35
  5589  15EE  0087               	movwf	7
  5590  15EF  3144               	addfsr 1,4
  5591  15F0  0855               	movf	??_sys_data_init,w
  5592  15F1  3FC0               	movwi [0]fsr1
  5593  15F2  0856               	movf	??_sys_data_init+1,w
  5594  15F3  3FC1               	movwi [1]fsr1
  5595                           
  5596                           ;sysData.c: 120: sysData.pidTi=20;
  5597  15F4  3014               	movlw	20
  5598  15F5  00D5               	movwf	??_sys_data_init
  5599  15F6  3000               	movlw	0
  5600  15F7  00D6               	movwf	??_sys_data_init+1
  5601  15F8  305C               	movlw	92
  5602  15F9  0086               	movwf	6
  5603  15FA  3023               	movlw	35
  5604  15FB  0087               	movwf	7
  5605  15FC  3146               	addfsr 1,6
  5606  15FD  0855               	movf	??_sys_data_init,w
  5607  15FE  3FC0               	movwi [0]fsr1
  5608  15FF  0856               	movf	??_sys_data_init+1,w
  5609  1600  3FC1               	movwi [1]fsr1
  5610                           
  5611                           ;sysData.c: 121: sysData.pidTd=5;
  5612  1601  3005               	movlw	5
  5613  1602  00D5               	movwf	??_sys_data_init
  5614  1603  3000               	movlw	0
  5615  1604  00D6               	movwf	??_sys_data_init+1
  5616  1605  305C               	movlw	92
  5617  1606  0086               	movwf	6
  5618  1607  3023               	movlw	35
  5619  1608  0087               	movwf	7
  5620  1609  3148               	addfsr 1,8
  5621  160A  0855               	movf	??_sys_data_init,w
  5622  160B  3FC0               	movwi [0]fsr1
  5623  160C  0856               	movf	??_sys_data_init+1,w
  5624  160D  3FC1               	movwi [1]fsr1
  5625                           
  5626                           ;sysData.c: 123: sys_data_save();
  5627  160E  319E  264F         	fcall	_sys_data_save
  5628  1610                     l5247:	
  5629                           
  5630                           ;sysData.c: 125: };sysData.c: 126: PidKp=sysData.pidKp;
  5631  1610  305C               	movlw	92
  5632  1611  0086               	movwf	6
  5633  1612  3023               	movlw	35
  5634  1613  0087               	movwf	7
  5635  1614  3144               	addfsr 1,4
  5636  1615  3F40               	moviw [0]fsr1
  5637  1616  0020               	movlb	0	; select bank0
  5638  1617  00B0               	movwf	_PidKp
  5639  1618  3F41               	moviw [1]fsr1
  5640  1619  00B1               	movwf	_PidKp+1
  5641                           
  5642                           ;sysData.c: 127: PidTi=sysData.pidTi;
  5643  161A  305C               	movlw	92
  5644  161B  0086               	movwf	6
  5645  161C  3023               	movlw	35
  5646  161D  0087               	movwf	7
  5647  161E  3146               	addfsr 1,6
  5648  161F  3F40               	moviw [0]fsr1
  5649  1620  0021               	movlb	1	; select bank1
  5650  1621  00CE               	movwf	_PidTi^(0+128)
  5651  1622  3F41               	moviw [1]fsr1
  5652  1623  00CF               	movwf	(_PidTi+1)^(0+128)
  5653                           
  5654                           ;sysData.c: 128: PidTd=sysData.pidTd;;
  5655  1624  305C               	movlw	92
  5656  1625  0086               	movwf	6
  5657  1626  3023               	movlw	35
  5658  1627  0087               	movwf	7
  5659  1628  3148               	addfsr 1,8
  5660  1629  3F40               	moviw [0]fsr1
  5661  162A  00CC               	movwf	_PidTd^(0+128)
  5662  162B  3F41               	moviw [1]fsr1
  5663  162C  00CD               	movwf	(_PidTd+1)^(0+128)
  5664  162D  0008               	return
  5665  162E                     __end_of_sys_data_init:	
  5666                           ;sysData.c: 129: return ret;;	Return value of _sys_data_init is never used
  5667                           
  5668                           
  5669                           	psect	text3
  5670  1002                     __ptext3:	
  5671 ;; *************** function _my_flash_system_read *****************
  5672 ;; Defined at:
  5673 ;;		line 23 in file "src/api/sysData.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;  buf             2    1[COMMON] PTR unsigned char 
  5676 ;;		 -> sysData(132), 
  5677 ;;  len             2    3[COMMON] unsigned int 
  5678 ;; Auto vars:     Size  Location     Type
  5679 ;;  i               2   10[COMMON] unsigned int 
  5680 ;;  flashAddr       2    8[COMMON] unsigned int 
  5681 ;;  GIEBitValue     1    7[COMMON] unsigned char 
  5682 ;; Return value:  Size  Location     Type
  5683 ;;                  1    wreg      void 
  5684 ;; Registers used:
  5685 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5686 ;; Tracked objects:
  5687 ;;		On entry : 0/0
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5691 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5692 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5693 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5694 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5695 ;;Total ram usage:       11 bytes
  5696 ;; Hardware stack levels used:    1
  5697 ;; Hardware stack levels required when called:    1
  5698 ;; This function calls:
  5699 ;;		Nothing
  5700 ;; This function is called by:
  5701 ;;		_sys_data_init
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705                           
  5706                           ;psect for function _my_flash_system_read
  5707  1002                     _my_flash_system_read:	
  5708                           
  5709                           ;sysData.c: 25: uint16_t flashAddr=0x1f00;
  5710                           
  5711                           ;incstack = 0
  5712                           ; Regs used in _my_flash_system_read: [wreg+fsr1l+fsr1h+status,2+status,0]
  5713  1002  3000               	movlw	0
  5714  1003  00F8               	movwf	my_flash_system_read@flashAddr
  5715  1004  301F               	movlw	31
  5716  1005  00F9               	movwf	my_flash_system_read@flashAddr+1
  5717                           
  5718                           ;sysData.c: 26: uint16_t i;;sysData.c: 28: uint8_t GIEBitValue = INTCONbits.GIE;
  5719  1006  3000               	movlw	0
  5720  1007  1B8B               	btfsc	11,7	;volatile
  5721  1008  3001               	movlw	1
  5722  1009  00F7               	movwf	my_flash_system_read@GIEBitValue
  5723                           
  5724                           ;sysData.c: 30: INTCONbits.GIE = 0;
  5725  100A  138B               	bcf	11,7	;volatile
  5726                           
  5727                           ;sysData.c: 32: for(i=0;i<len;i++){
  5728  100B  01FA               	clrf	my_flash_system_read@i
  5729  100C  01FB               	clrf	my_flash_system_read@i+1
  5730  100D                     l3761:	
  5731  100D  0874               	movf	my_flash_system_read@len+1,w
  5732  100E  027B               	subwf	my_flash_system_read@i+1,w
  5733  100F  1D03               	skipz
  5734  1010  2813               	goto	u2475
  5735  1011  0873               	movf	my_flash_system_read@len,w
  5736  1012  027A               	subwf	my_flash_system_read@i,w
  5737  1013                     u2475:	
  5738  1013  1803               	btfsc	3,0
  5739  1014  2834               	goto	l3763
  5740                           
  5741                           ;sysData.c: 34: PMADRL = (flashAddr & 0x00FF);
  5742  1015  0878               	movf	my_flash_system_read@flashAddr,w
  5743  1016  0023               	movlb	3	; select bank3
  5744  1017  0091               	movwf	17	;volatile
  5745                           
  5746                           ;sysData.c: 35: PMADRH = ((flashAddr & 0xFF00) >> 8);
  5747  1018  0879               	movf	my_flash_system_read@flashAddr+1,w
  5748  1019  0092               	movwf	18	;volatile
  5749                           
  5750                           ;sysData.c: 37: PMCON1bits.CFGS = 0;
  5751  101A  1315               	bcf	21,6	;volatile
  5752                           
  5753                           ;sysData.c: 38: PMCON1bits.RD = 1;
  5754  101B  1415               	bsf	21,0	;volatile
  5755                           
  5756                           ;sysData.c: 39: __nop();
  5757  101C  0000               	nop
  5758                           
  5759                           ;sysData.c: 40: __nop();
  5760  101D  0000               	nop
  5761                           
  5762                           ;sysData.c: 41: buf[i]=PMDATL;
  5763  101E  087A               	movf	my_flash_system_read@i,w
  5764  101F  0771               	addwf	my_flash_system_read@buf,w
  5765  1020  00F5               	movwf	??_my_flash_system_read
  5766  1021  087B               	movf	my_flash_system_read@i+1,w
  5767  1022  3D72               	addwfc	my_flash_system_read@buf+1,w
  5768  1023  00F6               	movwf	??_my_flash_system_read+1
  5769  1024  0875               	movf	??_my_flash_system_read,w
  5770  1025  0086               	movwf	6
  5771  1026  0876               	movf	??_my_flash_system_read+1,w
  5772  1027  0087               	movwf	7
  5773  1028  0023               	movlb	3	; select bank3
  5774  1029  0813               	movf	19,w	;volatile
  5775  102A  0081               	movwf	1
  5776                           
  5777                           ;sysData.c: 42: flashAddr++;
  5778  102B  3001               	movlw	1
  5779  102C  07F8               	addwf	my_flash_system_read@flashAddr,f
  5780  102D  3000               	movlw	0
  5781  102E  3DF9               	addwfc	my_flash_system_read@flashAddr+1,f
  5782  102F  3001               	movlw	1
  5783  1030  07FA               	addwf	my_flash_system_read@i,f
  5784  1031  3000               	movlw	0
  5785  1032  3DFB               	addwfc	my_flash_system_read@i+1,f
  5786  1033  280D               	goto	l3761
  5787  1034                     l3763:	
  5788                           
  5789                           ;sysData.c: 43: };sysData.c: 44: INTCONbits.GIE = GIEBitValue;
  5790  1034  0C77               	rrf	my_flash_system_read@GIEBitValue,w
  5791  1035  1C03               	skipc
  5792  1036  138B               	bcf	11,7	;volatile
  5793  1037  1803               	skipnc
  5794  1038  178B               	bsf	11,7	;volatile
  5795  1039  0008               	return
  5796  103A                     __end_of_my_flash_system_read:	
  5797                           
  5798                           	psect	text4
  5799  1CD2                     __ptext4:	
  5800 ;; *************** function ___wmul *****************
  5801 ;; Defined at:
  5802 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  5803 ;; Parameters:    Size  Location     Type
  5804 ;;  multiplier      2    1[COMMON] unsigned int 
  5805 ;;  multiplicand    2    3[COMMON] unsigned int 
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;  product         2    5[COMMON] unsigned int 
  5808 ;; Return value:  Size  Location     Type
  5809 ;;                  2    1[COMMON] unsigned int 
  5810 ;; Registers used:
  5811 ;;		wreg, status,2, status,0
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5817 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5818 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5820 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5821 ;;Total ram usage:        6 bytes
  5822 ;; Hardware stack levels used:    1
  5823 ;; Hardware stack levels required when called:    1
  5824 ;; This function calls:
  5825 ;;		Nothing
  5826 ;; This function is called by:
  5827 ;;		_sys_data_init
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831                           
  5832                           ;psect for function ___wmul
  5833  1CD2                     ___wmul:	
  5834                           
  5835                           ;incstack = 0
  5836                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5837  1CD2  01F5               	clrf	___wmul@product
  5838  1CD3  01F6               	clrf	___wmul@product+1
  5839  1CD4                     l3949:	
  5840  1CD4  1C71               	btfss	___wmul@multiplier,0
  5841  1CD5  2CDA               	goto	l1092
  5842  1CD6  0873               	movf	___wmul@multiplicand,w
  5843  1CD7  07F5               	addwf	___wmul@product,f
  5844  1CD8  0874               	movf	___wmul@multiplicand+1,w
  5845  1CD9  3DF6               	addwfc	___wmul@product+1,f
  5846  1CDA                     l1092:	
  5847  1CDA  3001               	movlw	1
  5848  1CDB                     u2775:	
  5849  1CDB  35F3               	lslf	___wmul@multiplicand,f
  5850  1CDC  0DF4               	rlf	___wmul@multiplicand+1,f
  5851  1CDD  0B89               	decfsz	9,f
  5852  1CDE  2CDB               	goto	u2775
  5853  1CDF  3001               	movlw	1
  5854  1CE0                     u2785:	
  5855  1CE0  36F2               	lsrf	___wmul@multiplier+1,f
  5856  1CE1  0CF1               	rrf	___wmul@multiplier,f
  5857  1CE2  0B89               	decfsz	9,f
  5858  1CE3  2CE0               	goto	u2785
  5859  1CE4  0871               	movf	___wmul@multiplier,w
  5860  1CE5  0472               	iorwf	___wmul@multiplier+1,w
  5861  1CE6  1D03               	btfss	3,2
  5862  1CE7  2CD4               	goto	l3949
  5863  1CE8  0876               	movf	___wmul@product+1,w
  5864  1CE9  00F2               	movwf	?___wmul+1
  5865  1CEA  0875               	movf	___wmul@product,w
  5866  1CEB  00F1               	movwf	?___wmul
  5867  1CEC  0008               	return
  5868  1CED                     __end_of___wmul:	
  5869                           
  5870                           	psect	text5
  5871  0F5C                     __ptext5:	
  5872 ;; *************** function _pid_pwm2_vout_run *****************
  5873 ;; Defined at:
  5874 ;;		line 374 in file "src/api/sample.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;		None
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;  t16             2    4[BANK0 ] int 
  5879 ;;  __ei            2    2[BANK0 ] int 
  5880 ;; Return value:  Size  Location     Type
  5881 ;;                  1    wreg      void 
  5882 ;; Registers used:
  5883 ;;		wreg, status,2, status,0, pclath, cstack
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5890 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5891 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5892 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5893 ;;Total ram usage:        6 bytes
  5894 ;; Hardware stack levels used:    1
  5895 ;; Hardware stack levels required when called:    3
  5896 ;; This function calls:
  5897 ;;		___awdiv
  5898 ;;		___lwdiv
  5899 ;;		_set_vout_pwm2_duty
  5900 ;; This function is called by:
  5901 ;;		_main
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           
  5906                           ;psect for function _pid_pwm2_vout_run
  5907  0F5C                     _pid_pwm2_vout_run:	
  5908                           
  5909                           ;sample.c: 376: int16_t t16,__ei;;sample.c: 377: t16=voExpectAdcValue-rtAdcValueVoFb;
  5910                           
  5911                           ;incstack = 0
  5912                           ; Regs used in _pid_pwm2_vout_run: [wreg+status,2+status,0+pclath+cstack]
  5913  0F5C  0020               	movlb	0	; select bank0
  5914  0F5D  0932               	comf	_rtAdcValueVoFb,w
  5915  0F5E  00C7               	movwf	??_pid_pwm2_vout_run
  5916  0F5F  0933               	comf	_rtAdcValueVoFb+1,w
  5917  0F60  00C8               	movwf	??_pid_pwm2_vout_run+1
  5918  0F61  0AC7               	incf	??_pid_pwm2_vout_run,f
  5919  0F62  1903               	skipnz
  5920  0F63  0AC8               	incf	??_pid_pwm2_vout_run+1,f
  5921  0F64  082E               	movf	_voExpectAdcValue,w
  5922  0F65  0747               	addwf	??_pid_pwm2_vout_run,w
  5923  0F66  00CB               	movwf	pid_pwm2_vout_run@t16
  5924  0F67  082F               	movf	_voExpectAdcValue+1,w
  5925  0F68  3D48               	addwfc	??_pid_pwm2_vout_run+1,w
  5926  0F69  00CC               	movwf	pid_pwm2_vout_run@t16+1
  5927                           
  5928                           ;sample.c: 378: __ei=t16/150;
  5929  0F6A  3096               	movlw	150
  5930  0F6B  00F1               	movwf	___awdiv@divisor
  5931  0F6C  3000               	movlw	0
  5932  0F6D  00F2               	movwf	___awdiv@divisor+1
  5933  0F6E  084C               	movf	pid_pwm2_vout_run@t16+1,w
  5934  0F6F  00F4               	movwf	___awdiv@dividend+1
  5935  0F70  084B               	movf	pid_pwm2_vout_run@t16,w
  5936  0F71  00F3               	movwf	___awdiv@dividend
  5937  0F72  3190  207C  318F   	fcall	___awdiv
  5938  0F75  0872               	movf	?___awdiv+1,w
  5939  0F76  0020               	movlb	0	; select bank0
  5940  0F77  00CA               	movwf	pid_pwm2_vout_run@__ei+1
  5941  0F78  0871               	movf	?___awdiv,w
  5942  0F79  00C9               	movwf	pid_pwm2_vout_run@__ei
  5943                           
  5944                           ;sample.c: 379: if(__ei==0){
  5945  0F7A  0849               	movf	pid_pwm2_vout_run@__ei,w
  5946  0F7B  044A               	iorwf	pid_pwm2_vout_run@__ei+1,w
  5947  0F7C  1D03               	btfss	3,2
  5948  0F7D  2F9F               	goto	l5157
  5949                           
  5950                           ;sample.c: 380: if(t16>16)__ei=1;
  5951  0F7E  084C               	movf	pid_pwm2_vout_run@t16+1,w
  5952  0F7F  3A80               	xorlw	128
  5953  0F80  00C7               	movwf	??_pid_pwm2_vout_run
  5954  0F81  3080               	movlw	128
  5955  0F82  0247               	subwf	??_pid_pwm2_vout_run,w
  5956  0F83  1D03               	skipz
  5957  0F84  2F87               	goto	u4675
  5958  0F85  3011               	movlw	17
  5959  0F86  024B               	subwf	pid_pwm2_vout_run@t16,w
  5960  0F87                     u4675:	
  5961  0F87  1C03               	skipc
  5962  0F88  2F8E               	goto	l668
  5963  0F89  3001               	movlw	1
  5964  0F8A  0020               	movlb	0	; select bank0
  5965  0F8B  00C9               	movwf	pid_pwm2_vout_run@__ei
  5966  0F8C  3000               	movlw	0
  5967  0F8D  00CA               	movwf	pid_pwm2_vout_run@__ei+1
  5968  0F8E                     l668:	
  5969                           
  5970                           ;sample.c: 381: if(t16<-16)__ei=-1;
  5971  0F8E  0020               	movlb	0	; select bank0
  5972  0F8F  084C               	movf	pid_pwm2_vout_run@t16+1,w
  5973  0F90  3A80               	xorlw	128
  5974  0F91  00C7               	movwf	??_pid_pwm2_vout_run
  5975  0F92  307F               	movlw	127
  5976  0F93  0247               	subwf	??_pid_pwm2_vout_run,w
  5977  0F94  1D03               	skipz
  5978  0F95  2F98               	goto	u4685
  5979  0F96  30F0               	movlw	240
  5980  0F97  024B               	subwf	pid_pwm2_vout_run@t16,w
  5981  0F98                     u4685:	
  5982  0F98  1803               	skipnc
  5983  0F99  2F9F               	goto	l5157
  5984  0F9A  30FF               	movlw	255
  5985  0F9B  0020               	movlb	0	; select bank0
  5986  0F9C  00C9               	movwf	pid_pwm2_vout_run@__ei
  5987  0F9D  30FF               	movlw	255
  5988  0F9E  00CA               	movwf	pid_pwm2_vout_run@__ei+1
  5989  0F9F                     l5157:	
  5990                           
  5991                           ;sample.c: 382: };sample.c: 384: pwm2Ei=pwm2Ei+__ei;
  5992  0F9F  0020               	movlb	0	; select bank0
  5993  0FA0  0849               	movf	pid_pwm2_vout_run@__ei,w
  5994  0FA1  0021               	movlb	1	; select bank1
  5995  0FA2  0748               	addwf	_pwm2Ei^(0+128),w
  5996  0FA3  00C8               	movwf	_pwm2Ei^(0+128)
  5997  0FA4  0020               	movlb	0	; select bank0
  5998  0FA5  084A               	movf	pid_pwm2_vout_run@__ei+1,w
  5999  0FA6  0021               	movlb	1	; select bank1
  6000  0FA7  3D49               	addwfc	(_pwm2Ei+1)^(0+128),w
  6001  0FA8  00C9               	movwf	(_pwm2Ei+1)^(0+128)
  6002                           
  6003                           ;sample.c: 388: t16=voExpectAdcValue/10;
  6004  0FA9  300A               	movlw	10
  6005  0FAA  00F1               	movwf	___lwdiv@divisor
  6006  0FAB  3000               	movlw	0
  6007  0FAC  00F2               	movwf	___lwdiv@divisor+1
  6008  0FAD  0020               	movlb	0	; select bank0
  6009  0FAE  082F               	movf	_voExpectAdcValue+1,w
  6010  0FAF  00F4               	movwf	___lwdiv@dividend+1
  6011  0FB0  082E               	movf	_voExpectAdcValue,w
  6012  0FB1  00F3               	movwf	___lwdiv@dividend
  6013  0FB2  319D  25E4  318F   	fcall	___lwdiv
  6014  0FB5  0872               	movf	?___lwdiv+1,w
  6015  0FB6  0020               	movlb	0	; select bank0
  6016  0FB7  00CC               	movwf	pid_pwm2_vout_run@t16+1
  6017  0FB8  0871               	movf	?___lwdiv,w
  6018  0FB9  00CB               	movwf	pid_pwm2_vout_run@t16
  6019                           
  6020                           ;sample.c: 390: t16=t16+pwm2Ei;
  6021  0FBA  0021               	movlb	1	; select bank1
  6022  0FBB  0848               	movf	_pwm2Ei^(0+128),w
  6023  0FBC  0020               	movlb	0	; select bank0
  6024  0FBD  074B               	addwf	pid_pwm2_vout_run@t16,w
  6025  0FBE  00CB               	movwf	pid_pwm2_vout_run@t16
  6026  0FBF  0021               	movlb	1	; select bank1
  6027  0FC0  0849               	movf	(_pwm2Ei+1)^(0+128),w
  6028  0FC1  0020               	movlb	0	; select bank0
  6029  0FC2  3D4C               	addwfc	pid_pwm2_vout_run@t16+1,w
  6030  0FC3  00CC               	movwf	pid_pwm2_vout_run@t16+1
  6031                           
  6032                           ;sample.c: 391: if(t16>1580)t16=1580;
  6033  0FC4  084C               	movf	pid_pwm2_vout_run@t16+1,w
  6034  0FC5  3A80               	xorlw	128
  6035  0FC6  00C7               	movwf	??_pid_pwm2_vout_run
  6036  0FC7  3086               	movlw	134
  6037  0FC8  0247               	subwf	??_pid_pwm2_vout_run,w
  6038  0FC9  1D03               	skipz
  6039  0FCA  2FCD               	goto	u4695
  6040  0FCB  302D               	movlw	45
  6041  0FCC  024B               	subwf	pid_pwm2_vout_run@t16,w
  6042  0FCD                     u4695:	
  6043  0FCD  1C03               	skipc
  6044  0FCE  2FD4               	goto	l670
  6045  0FCF  302C               	movlw	44
  6046  0FD0  0020               	movlb	0	; select bank0
  6047  0FD1  00CB               	movwf	pid_pwm2_vout_run@t16
  6048  0FD2  3006               	movlw	6
  6049  0FD3  00CC               	movwf	pid_pwm2_vout_run@t16+1
  6050  0FD4                     l670:	
  6051                           
  6052                           ;sample.c: 392: if(t16<5)t16=5;
  6053  0FD4  0020               	movlb	0	; select bank0
  6054  0FD5  084C               	movf	pid_pwm2_vout_run@t16+1,w
  6055  0FD6  3A80               	xorlw	128
  6056  0FD7  00C7               	movwf	??_pid_pwm2_vout_run
  6057  0FD8  3080               	movlw	128
  6058  0FD9  0247               	subwf	??_pid_pwm2_vout_run,w
  6059  0FDA  1D03               	skipz
  6060  0FDB  2FDE               	goto	u4705
  6061  0FDC  3005               	movlw	5
  6062  0FDD  024B               	subwf	pid_pwm2_vout_run@t16,w
  6063  0FDE                     u4705:	
  6064  0FDE  1803               	skipnc
  6065  0FDF  2FE5               	goto	l5169
  6066  0FE0  3005               	movlw	5
  6067  0FE1  0020               	movlb	0	; select bank0
  6068  0FE2  00CB               	movwf	pid_pwm2_vout_run@t16
  6069  0FE3  3000               	movlw	0
  6070  0FE4  00CC               	movwf	pid_pwm2_vout_run@t16+1
  6071  0FE5                     l5169:	
  6072                           
  6073                           ;sample.c: 393: set_vout_pwm2_duty((uint16_t)t16);
  6074  0FE5  0020               	movlb	0	; select bank0
  6075  0FE6  084C               	movf	pid_pwm2_vout_run@t16+1,w
  6076  0FE7  00F8               	movwf	set_vout_pwm2_duty@duty+1
  6077  0FE8  084B               	movf	pid_pwm2_vout_run@t16,w
  6078  0FE9  00F7               	movwf	set_vout_pwm2_duty@duty
  6079  0FEA  319D  2525         	fcall	_set_vout_pwm2_duty
  6080  0FEC  0008               	return
  6081  0FED                     __end_of_pid_pwm2_vout_run:	
  6082                           
  6083                           	psect	text6
  6084  1D25                     __ptext6:	
  6085 ;; *************** function _set_vout_pwm2_duty *****************
  6086 ;; Defined at:
  6087 ;;		line 111 in file "src/api/sample.c"
  6088 ;; Parameters:    Size  Location     Type
  6089 ;;  duty            2    7[COMMON] unsigned int 
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;  t16             2    9[COMMON] unsigned int 
  6092 ;; Return value:  Size  Location     Type
  6093 ;;                  1    wreg      void 
  6094 ;; Registers used:
  6095 ;;		wreg, status,2, pclath, cstack
  6096 ;; Tracked objects:
  6097 ;;		On entry : 0/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6102 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6104 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6105 ;;Total ram usage:        4 bytes
  6106 ;; Hardware stack levels used:    1
  6107 ;; Hardware stack levels required when called:    2
  6108 ;; This function calls:
  6109 ;;		_get_vout_pwm2_duty
  6110 ;; This function is called by:
  6111 ;;		_pid_pwm2_vout_run
  6112 ;; This function uses a non-reentrant model
  6113 ;;
  6114                           
  6115                           
  6116                           ;psect for function _set_vout_pwm2_duty
  6117  1D25                     _set_vout_pwm2_duty:	
  6118                           
  6119                           ;sample.c: 114: uint16_t t16;;sample.c: 115: pwm2DutyForVout=duty;
  6120                           
  6121                           ;incstack = 0
  6122                           ; Regs used in _set_vout_pwm2_duty: [wreg+status,2+pclath+cstack]
  6123  1D25  0878               	movf	set_vout_pwm2_duty@duty+1,w
  6124  1D26  0021               	movlb	1	; select bank1
  6125  1D27  00DB               	movwf	(_pwm2DutyForVout+1)^(0+128)
  6126  1D28  0877               	movf	set_vout_pwm2_duty@duty,w
  6127  1D29  00DA               	movwf	_pwm2DutyForVout^(0+128)
  6128                           
  6129                           ;sample.c: 116: t16=get_vout_pwm2_duty();
  6130  1D2A  319C  249E  319D   	fcall	_get_vout_pwm2_duty
  6131  1D2D  0872               	movf	?_get_vout_pwm2_duty+1,w
  6132  1D2E  00FA               	movwf	set_vout_pwm2_duty@t16+1
  6133  1D2F  0871               	movf	?_get_vout_pwm2_duty,w
  6134  1D30  00F9               	movwf	set_vout_pwm2_duty@t16
  6135                           
  6136                           ;sample.c: 117: if(t16==duty)return;
  6137  1D31  0878               	movf	set_vout_pwm2_duty@duty+1,w
  6138  1D32  067A               	xorwf	set_vout_pwm2_duty@t16+1,w
  6139  1D33  1D03               	skipz
  6140  1D34  2D37               	goto	u2435
  6141  1D35  0877               	movf	set_vout_pwm2_duty@duty,w
  6142  1D36  0679               	xorwf	set_vout_pwm2_duty@t16,w
  6143  1D37                     u2435:	
  6144  1D37  1903               	btfsc	3,2
  6145  1D38  0008               	return
  6146                           
  6147                           ;sample.c: 121: PWM2CONbits.EN = 0;
  6148  1D39  003B               	movlb	27	; select bank27
  6149  1D3A  13AB               	bcf	43,7	;volatile
  6150                           
  6151                           ;sample.c: 122: PWM2DCL= (uint8_t)(duty&0xff);
  6152  1D3B  0877               	movf	set_vout_pwm2_duty@duty,w
  6153  1D3C  00A3               	movwf	35	;volatile
  6154                           
  6155                           ;sample.c: 123: PWM2DCH=(uint8_t)(duty>>8);
  6156  1D3D  0878               	movf	set_vout_pwm2_duty@duty+1,w
  6157  1D3E  00A4               	movwf	36	;volatile
  6158                           
  6159                           ;sample.c: 124: PWM2CONbits.EN = 1;
  6160  1D3F  17AB               	bsf	43,7	;volatile
  6161  1D40  0008               	return
  6162  1D41                     __end_of_set_vout_pwm2_duty:	
  6163                           
  6164                           	psect	text7
  6165  1C9E                     __ptext7:	
  6166 ;; *************** function _get_vout_pwm2_duty *****************
  6167 ;; Defined at:
  6168 ;;		line 102 in file "src/api/sample.c"
  6169 ;; Parameters:    Size  Location     Type
  6170 ;;		None
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;  t16             2    5[COMMON] unsigned int 
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  2    1[COMMON] unsigned int 
  6175 ;; Registers used:
  6176 ;;		wreg
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6182 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6183 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6184 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6185 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6186 ;;Total ram usage:        6 bytes
  6187 ;; Hardware stack levels used:    1
  6188 ;; Hardware stack levels required when called:    1
  6189 ;; This function calls:
  6190 ;;		Nothing
  6191 ;; This function is called by:
  6192 ;;		_set_vout_pwm2_duty
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           
  6197                           ;psect for function _get_vout_pwm2_duty
  6198  1C9E                     _get_vout_pwm2_duty:	
  6199                           
  6200                           ;sample.c: 105: uint16_t t16=PWM2DCH;
  6201                           
  6202                           ;incstack = 0
  6203                           ; Regs used in _get_vout_pwm2_duty: [wreg]
  6204  1C9E  003B               	movlb	27	; select bank27
  6205  1C9F  0824               	movf	36,w	;volatile
  6206  1CA0  00F3               	movwf	??_get_vout_pwm2_duty
  6207  1CA1  01F4               	clrf	??_get_vout_pwm2_duty+1
  6208  1CA2  0873               	movf	??_get_vout_pwm2_duty,w
  6209  1CA3  00F5               	movwf	get_vout_pwm2_duty@t16
  6210  1CA4  0874               	movf	??_get_vout_pwm2_duty+1,w
  6211  1CA5  00F6               	movwf	get_vout_pwm2_duty@t16+1
  6212                           
  6213                           ;sample.c: 106: t16<<=8;
  6214  1CA6  3008               	movlw	8
  6215  1CA7                     u2365:	
  6216  1CA7  35F5               	lslf	get_vout_pwm2_duty@t16,f
  6217  1CA8  0DF6               	rlf	get_vout_pwm2_duty@t16+1,f
  6218  1CA9  0B89               	decfsz	9,f
  6219  1CAA  2CA7               	goto	u2365
  6220                           
  6221                           ;sample.c: 107: t16|=PWM2DCL;
  6222  1CAB  0823               	movf	35,w	;volatile
  6223  1CAC  00F3               	movwf	??_get_vout_pwm2_duty
  6224  1CAD  01F4               	clrf	??_get_vout_pwm2_duty+1
  6225  1CAE  0873               	movf	??_get_vout_pwm2_duty,w
  6226  1CAF  04F5               	iorwf	get_vout_pwm2_duty@t16,f
  6227  1CB0  0874               	movf	??_get_vout_pwm2_duty+1,w
  6228  1CB1  04F6               	iorwf	get_vout_pwm2_duty@t16+1,f
  6229                           
  6230                           ;sample.c: 108: return t16;
  6231  1CB2  0876               	movf	get_vout_pwm2_duty@t16+1,w
  6232  1CB3  00F2               	movwf	?_get_vout_pwm2_duty+1
  6233  1CB4  0875               	movf	get_vout_pwm2_duty@t16,w
  6234  1CB5  00F1               	movwf	?_get_vout_pwm2_duty
  6235  1CB6  0008               	return
  6236  1CB7                     __end_of_get_vout_pwm2_duty:	
  6237                           
  6238                           	psect	text8
  6239  1DE4                     __ptext8:	
  6240 ;; *************** function ___lwdiv *****************
  6241 ;; Defined at:
  6242 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  6243 ;; Parameters:    Size  Location     Type
  6244 ;;  divisor         2    1[COMMON] unsigned int 
  6245 ;;  dividend        2    3[COMMON] unsigned int 
  6246 ;; Auto vars:     Size  Location     Type
  6247 ;;  quotient        2    6[COMMON] unsigned int 
  6248 ;;  counter         1    8[COMMON] unsigned char 
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  2    1[COMMON] unsigned int 
  6251 ;; Registers used:
  6252 ;;		wreg, status,2, status,0
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6258 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6259 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6260 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6261 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6262 ;;Total ram usage:        8 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; Hardware stack levels required when called:    1
  6265 ;; This function calls:
  6266 ;;		Nothing
  6267 ;; This function is called by:
  6268 ;;		_pid_pwm2_vout_run
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           
  6272                           
  6273                           ;psect for function ___lwdiv
  6274  1DE4                     ___lwdiv:	
  6275                           
  6276                           ;incstack = 0
  6277                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6278  1DE4  01F6               	clrf	___lwdiv@quotient
  6279  1DE5  01F7               	clrf	___lwdiv@quotient+1
  6280  1DE6  0871               	movf	___lwdiv@divisor,w
  6281  1DE7  0472               	iorwf	___lwdiv@divisor+1,w
  6282  1DE8  1903               	btfsc	3,2
  6283  1DE9  2E13               	goto	l4105
  6284  1DEA  01F8               	clrf	___lwdiv@counter
  6285  1DEB  0AF8               	incf	___lwdiv@counter,f
  6286  1DEC                     l4093:	
  6287  1DEC  1BF2               	btfsc	___lwdiv@divisor+1,7
  6288  1DED  2DF8               	goto	l4095
  6289  1DEE  3001               	movlw	1
  6290  1DEF                     u3125:	
  6291  1DEF  35F1               	lslf	___lwdiv@divisor,f
  6292  1DF0  0DF2               	rlf	___lwdiv@divisor+1,f
  6293  1DF1  0B89               	decfsz	9,f
  6294  1DF2  2DEF               	goto	u3125
  6295  1DF3  3001               	movlw	1
  6296  1DF4  00F5               	movwf	??___lwdiv
  6297  1DF5  0875               	movf	??___lwdiv,w
  6298  1DF6  07F8               	addwf	___lwdiv@counter,f
  6299  1DF7  2DEC               	goto	l4093
  6300  1DF8                     l4095:	
  6301  1DF8  3001               	movlw	1
  6302  1DF9                     u3145:	
  6303  1DF9  35F6               	lslf	___lwdiv@quotient,f
  6304  1DFA  0DF7               	rlf	___lwdiv@quotient+1,f
  6305  1DFB  0B89               	decfsz	9,f
  6306  1DFC  2DF9               	goto	u3145
  6307  1DFD  0872               	movf	___lwdiv@divisor+1,w
  6308  1DFE  0274               	subwf	___lwdiv@dividend+1,w
  6309  1DFF  1D03               	skipz
  6310  1E00  2E03               	goto	u3155
  6311  1E01  0871               	movf	___lwdiv@divisor,w
  6312  1E02  0273               	subwf	___lwdiv@dividend,w
  6313  1E03                     u3155:	
  6314  1E03  1C03               	skipc
  6315  1E04  2E0A               	goto	l4101
  6316  1E05  0871               	movf	___lwdiv@divisor,w
  6317  1E06  02F3               	subwf	___lwdiv@dividend,f
  6318  1E07  0872               	movf	___lwdiv@divisor+1,w
  6319  1E08  3BF4               	subwfb	___lwdiv@dividend+1,f
  6320  1E09  1476               	bsf	___lwdiv@quotient,0
  6321  1E0A                     l4101:	
  6322  1E0A  3001               	movlw	1
  6323  1E0B                     u3165:	
  6324  1E0B  36F2               	lsrf	___lwdiv@divisor+1,f
  6325  1E0C  0CF1               	rrf	___lwdiv@divisor,f
  6326  1E0D  0B89               	decfsz	9,f
  6327  1E0E  2E0B               	goto	u3165
  6328  1E0F  3001               	movlw	1
  6329  1E10  02F8               	subwf	___lwdiv@counter,f
  6330  1E11  1D03               	btfss	3,2
  6331  1E12  2DF8               	goto	l4095
  6332  1E13                     l4105:	
  6333  1E13  0877               	movf	___lwdiv@quotient+1,w
  6334  1E14  00F2               	movwf	?___lwdiv+1
  6335  1E15  0876               	movf	___lwdiv@quotient,w
  6336  1E16  00F1               	movwf	?___lwdiv
  6337  1E17  0008               	return
  6338  1E18                     __end_of___lwdiv:	
  6339                           
  6340                           	psect	text9
  6341  107C                     __ptext9:	
  6342 ;; *************** function ___awdiv *****************
  6343 ;; Defined at:
  6344 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  6345 ;; Parameters:    Size  Location     Type
  6346 ;;  divisor         2    1[COMMON] int 
  6347 ;;  dividend        2    3[COMMON] int 
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;  quotient        2    8[COMMON] int 
  6350 ;;  sign            1    7[COMMON] unsigned char 
  6351 ;;  counter         1    6[COMMON] unsigned char 
  6352 ;; Return value:  Size  Location     Type
  6353 ;;                  2    1[COMMON] int 
  6354 ;; Registers used:
  6355 ;;		wreg, status,2, status,0
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6361 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6362 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6363 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6364 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6365 ;;Total ram usage:        9 bytes
  6366 ;; Hardware stack levels used:    1
  6367 ;; Hardware stack levels required when called:    1
  6368 ;; This function calls:
  6369 ;;		Nothing
  6370 ;; This function is called by:
  6371 ;;		_pid_pwm2_vout_run
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375                           
  6376                           ;psect for function ___awdiv
  6377  107C                     ___awdiv:	
  6378                           
  6379                           ;incstack = 0
  6380                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6381  107C  01F7               	clrf	___awdiv@sign
  6382  107D  1FF2               	btfss	___awdiv@divisor+1,7
  6383  107E  2886               	goto	l4047
  6384  107F  09F1               	comf	___awdiv@divisor,f
  6385  1080  09F2               	comf	___awdiv@divisor+1,f
  6386  1081  0AF1               	incf	___awdiv@divisor,f
  6387  1082  1903               	skipnz
  6388  1083  0AF2               	incf	___awdiv@divisor+1,f
  6389  1084  01F7               	clrf	___awdiv@sign
  6390  1085  0AF7               	incf	___awdiv@sign,f
  6391  1086                     l4047:	
  6392  1086  1FF4               	btfss	___awdiv@dividend+1,7
  6393  1087  2891               	goto	l4053
  6394  1088  09F3               	comf	___awdiv@dividend,f
  6395  1089  09F4               	comf	___awdiv@dividend+1,f
  6396  108A  0AF3               	incf	___awdiv@dividend,f
  6397  108B  1903               	skipnz
  6398  108C  0AF4               	incf	___awdiv@dividend+1,f
  6399  108D  3001               	movlw	1
  6400  108E  00F5               	movwf	??___awdiv
  6401  108F  0875               	movf	??___awdiv,w
  6402  1090  06F7               	xorwf	___awdiv@sign,f
  6403  1091                     l4053:	
  6404  1091  01F8               	clrf	___awdiv@quotient
  6405  1092  01F9               	clrf	___awdiv@quotient+1
  6406  1093  0871               	movf	___awdiv@divisor,w
  6407  1094  0472               	iorwf	___awdiv@divisor+1,w
  6408  1095  1903               	btfsc	3,2
  6409  1096  28C0               	goto	l4075
  6410  1097  01F6               	clrf	___awdiv@counter
  6411  1098  0AF6               	incf	___awdiv@counter,f
  6412  1099                     l4063:	
  6413  1099  1BF2               	btfsc	___awdiv@divisor+1,7
  6414  109A  28A5               	goto	l4065
  6415  109B  3001               	movlw	1
  6416  109C                     u3045:	
  6417  109C  35F1               	lslf	___awdiv@divisor,f
  6418  109D  0DF2               	rlf	___awdiv@divisor+1,f
  6419  109E  0B89               	decfsz	9,f
  6420  109F  289C               	goto	u3045
  6421  10A0  3001               	movlw	1
  6422  10A1  00F5               	movwf	??___awdiv
  6423  10A2  0875               	movf	??___awdiv,w
  6424  10A3  07F6               	addwf	___awdiv@counter,f
  6425  10A4  2899               	goto	l4063
  6426  10A5                     l4065:	
  6427  10A5  3001               	movlw	1
  6428  10A6                     u3065:	
  6429  10A6  35F8               	lslf	___awdiv@quotient,f
  6430  10A7  0DF9               	rlf	___awdiv@quotient+1,f
  6431  10A8  0B89               	decfsz	9,f
  6432  10A9  28A6               	goto	u3065
  6433  10AA  0872               	movf	___awdiv@divisor+1,w
  6434  10AB  0274               	subwf	___awdiv@dividend+1,w
  6435  10AC  1D03               	skipz
  6436  10AD  28B0               	goto	u3075
  6437  10AE  0871               	movf	___awdiv@divisor,w
  6438  10AF  0273               	subwf	___awdiv@dividend,w
  6439  10B0                     u3075:	
  6440  10B0  1C03               	skipc
  6441  10B1  28B7               	goto	l4071
  6442  10B2  0871               	movf	___awdiv@divisor,w
  6443  10B3  02F3               	subwf	___awdiv@dividend,f
  6444  10B4  0872               	movf	___awdiv@divisor+1,w
  6445  10B5  3BF4               	subwfb	___awdiv@dividend+1,f
  6446  10B6  1478               	bsf	___awdiv@quotient,0
  6447  10B7                     l4071:	
  6448  10B7  3001               	movlw	1
  6449  10B8                     u3085:	
  6450  10B8  36F2               	lsrf	___awdiv@divisor+1,f
  6451  10B9  0CF1               	rrf	___awdiv@divisor,f
  6452  10BA  0B89               	decfsz	9,f
  6453  10BB  28B8               	goto	u3085
  6454  10BC  3001               	movlw	1
  6455  10BD  02F6               	subwf	___awdiv@counter,f
  6456  10BE  1D03               	btfss	3,2
  6457  10BF  28A5               	goto	l4065
  6458  10C0                     l4075:	
  6459  10C0  0877               	movf	___awdiv@sign,w
  6460  10C1  1903               	btfsc	3,2
  6461  10C2  28C8               	goto	l4079
  6462  10C3  09F8               	comf	___awdiv@quotient,f
  6463  10C4  09F9               	comf	___awdiv@quotient+1,f
  6464  10C5  0AF8               	incf	___awdiv@quotient,f
  6465  10C6  1903               	skipnz
  6466  10C7  0AF9               	incf	___awdiv@quotient+1,f
  6467  10C8                     l4079:	
  6468  10C8  0879               	movf	___awdiv@quotient+1,w
  6469  10C9  00F2               	movwf	?___awdiv+1
  6470  10CA  0878               	movf	___awdiv@quotient,w
  6471  10CB  00F1               	movwf	?___awdiv
  6472  10CC  0008               	return
  6473  10CD                     __end_of___awdiv:	
  6474                           
  6475                           	psect	text10
  6476  08DE                     __ptext10:	
  6477 ;; *************** function _pid_pwm1_idrv_run *****************
  6478 ;; Defined at:
  6479 ;;		line 337 in file "src/api/sample.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;		None
  6482 ;; Auto vars:     Size  Location     Type
  6483 ;;  t32             4   34[BANK0 ] long 
  6484 ;; Return value:  Size  Location     Type
  6485 ;;                  1    wreg      void 
  6486 ;; Registers used:
  6487 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6488 ;; Tracked objects:
  6489 ;;		On entry : 0/0
  6490 ;;		On exit  : 0/0
  6491 ;;		Unchanged: 0/0
  6492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6494 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6495 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6496 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6497 ;;Total ram usage:       20 bytes
  6498 ;; Hardware stack levels used:    1
  6499 ;; Hardware stack levels required when called:    3
  6500 ;; This function calls:
  6501 ;;		___aldiv
  6502 ;;		___lmul
  6503 ;;		_set_idrv_pwm1_duty
  6504 ;; This function is called by:
  6505 ;;		_main
  6506 ;; This function uses a non-reentrant model
  6507 ;;
  6508                           
  6509                           
  6510                           ;psect for function _pid_pwm1_idrv_run
  6511  08DE                     _pid_pwm1_idrv_run:	
  6512                           
  6513                           ;sample.c: 344: int32_t t32;;sample.c: 345: t32=((int32_t)resRs-(int32_t)resRc);
  6514                           
  6515                           ;incstack = 0
  6516                           ; Regs used in _pid_pwm1_idrv_run: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6517  08DE  0020               	movlb	0	; select bank0
  6518  08DF  086E               	movf	_resRc,w
  6519  08E0  00D9               	movwf	??_pid_pwm1_idrv_run
  6520  08E1  086F               	movf	_resRc+1,w
  6521  08E2  00DA               	movwf	??_pid_pwm1_idrv_run+1
  6522  08E3  01DB               	clrf	??_pid_pwm1_idrv_run+2
  6523  08E4  01DC               	clrf	??_pid_pwm1_idrv_run+3
  6524  08E5  09D9               	comf	??_pid_pwm1_idrv_run,f
  6525  08E6  09DA               	comf	??_pid_pwm1_idrv_run+1,f
  6526  08E7  09DB               	comf	??_pid_pwm1_idrv_run+2,f
  6527  08E8  09DC               	comf	??_pid_pwm1_idrv_run+3,f
  6528  08E9  0AD9               	incf	??_pid_pwm1_idrv_run,f
  6529  08EA  1903               	skipnz
  6530  08EB  0ADA               	incf	??_pid_pwm1_idrv_run+1,f
  6531  08EC  1903               	skipnz
  6532  08ED  0ADB               	incf	??_pid_pwm1_idrv_run+2,f
  6533  08EE  1903               	skipnz
  6534  08EF  0ADC               	incf	??_pid_pwm1_idrv_run+3,f
  6535  08F0  0021               	movlb	1	; select bank1
  6536  08F1  085C               	movf	_resRs^(0+128),w
  6537  08F2  0020               	movlb	0	; select bank0
  6538  08F3  00DD               	movwf	??_pid_pwm1_idrv_run+4
  6539  08F4  0021               	movlb	1	; select bank1
  6540  08F5  085D               	movf	(_resRs+1)^(0+128),w
  6541  08F6  0020               	movlb	0	; select bank0
  6542  08F7  00DE               	movwf	??_pid_pwm1_idrv_run+5
  6543  08F8  01DF               	clrf	??_pid_pwm1_idrv_run+6
  6544  08F9  01E0               	clrf	??_pid_pwm1_idrv_run+7
  6545  08FA  085D               	movf	??_pid_pwm1_idrv_run+4,w
  6546  08FB  07D9               	addwf	??_pid_pwm1_idrv_run,f
  6547  08FC  085E               	movf	??_pid_pwm1_idrv_run+5,w
  6548  08FD  3DDA               	addwfc	??_pid_pwm1_idrv_run+1,f
  6549  08FE  085F               	movf	??_pid_pwm1_idrv_run+6,w
  6550  08FF  3DDB               	addwfc	??_pid_pwm1_idrv_run+2,f
  6551  0900  0860               	movf	??_pid_pwm1_idrv_run+7,w
  6552  0901  3DDC               	addwfc	??_pid_pwm1_idrv_run+3,f
  6553  0902  085C               	movf	??_pid_pwm1_idrv_run+3,w
  6554  0903  00EC               	movwf	pid_pwm1_idrv_run@t32+3
  6555  0904  085B               	movf	??_pid_pwm1_idrv_run+2,w
  6556  0905  00EB               	movwf	pid_pwm1_idrv_run@t32+2
  6557  0906  085A               	movf	??_pid_pwm1_idrv_run+1,w
  6558  0907  00EA               	movwf	pid_pwm1_idrv_run@t32+1
  6559  0908  0859               	movf	??_pid_pwm1_idrv_run,w
  6560  0909  00E9               	movwf	pid_pwm1_idrv_run@t32
  6561                           
  6562                           ;sample.c: 346: t32=2000-t32;
  6563  090A  30D0               	movlw	208
  6564  090B  00D9               	movwf	??_pid_pwm1_idrv_run
  6565  090C  3007               	movlw	7
  6566  090D  00DA               	movwf	??_pid_pwm1_idrv_run+1
  6567  090E  3000               	movlw	0
  6568  090F  00DB               	movwf	??_pid_pwm1_idrv_run+2
  6569  0910  3000               	movlw	0
  6570  0911  00DC               	movwf	??_pid_pwm1_idrv_run+3
  6571  0912  0969               	comf	pid_pwm1_idrv_run@t32,w
  6572  0913  00DD               	movwf	??_pid_pwm1_idrv_run+4
  6573  0914  096A               	comf	pid_pwm1_idrv_run@t32+1,w
  6574  0915  00DE               	movwf	??_pid_pwm1_idrv_run+5
  6575  0916  096B               	comf	pid_pwm1_idrv_run@t32+2,w
  6576  0917  00DF               	movwf	??_pid_pwm1_idrv_run+6
  6577  0918  096C               	comf	pid_pwm1_idrv_run@t32+3,w
  6578  0919  00E0               	movwf	??_pid_pwm1_idrv_run+7
  6579  091A  0ADD               	incf	??_pid_pwm1_idrv_run+4,f
  6580  091B  1903               	skipnz
  6581  091C  0ADE               	incf	??_pid_pwm1_idrv_run+5,f
  6582  091D  1903               	skipnz
  6583  091E  0ADF               	incf	??_pid_pwm1_idrv_run+6,f
  6584  091F  1903               	skipnz
  6585  0920  0AE0               	incf	??_pid_pwm1_idrv_run+7,f
  6586  0921  085D               	movf	??_pid_pwm1_idrv_run+4,w
  6587  0922  07D9               	addwf	??_pid_pwm1_idrv_run,f
  6588  0923  085E               	movf	??_pid_pwm1_idrv_run+5,w
  6589  0924  3DDA               	addwfc	??_pid_pwm1_idrv_run+1,f
  6590  0925  085F               	movf	??_pid_pwm1_idrv_run+6,w
  6591  0926  3DDB               	addwfc	??_pid_pwm1_idrv_run+2,f
  6592  0927  0860               	movf	??_pid_pwm1_idrv_run+7,w
  6593  0928  3DDC               	addwfc	??_pid_pwm1_idrv_run+3,f
  6594  0929  085C               	movf	??_pid_pwm1_idrv_run+3,w
  6595  092A  00EC               	movwf	pid_pwm1_idrv_run@t32+3
  6596  092B  085B               	movf	??_pid_pwm1_idrv_run+2,w
  6597  092C  00EB               	movwf	pid_pwm1_idrv_run@t32+2
  6598  092D  085A               	movf	??_pid_pwm1_idrv_run+1,w
  6599  092E  00EA               	movwf	pid_pwm1_idrv_run@t32+1
  6600  092F  0859               	movf	??_pid_pwm1_idrv_run,w
  6601  0930  00E9               	movwf	pid_pwm1_idrv_run@t32
  6602                           
  6603                           ;sample.c: 348: err[2]=err[1];
  6604  0931  3004               	movlw	4
  6605  0932  3EA0               	addlw	(low (_err| 0))& (0+255)
  6606  0933  0086               	movwf	6
  6607  0934  0187               	clrf	7
  6608  0935  3F40               	moviw [0]fsr1
  6609  0936  0021               	movlb	1	; select bank1
  6610  0937  00A8               	movwf	(_err^(0+128)+8)
  6611  0938  3F41               	moviw [1]fsr1
  6612  0939  00A9               	movwf	((_err+1)^(0+128)+8)
  6613  093A  3F42               	moviw [2]fsr1
  6614  093B  00AA               	movwf	((_err+2)^(0+128)+8)
  6615  093C  3F43               	moviw [3]fsr1
  6616  093D  00AB               	movwf	((_err+3)^(0+128)+8)
  6617                           
  6618                           ;sample.c: 349: err[1]=err[0];
  6619  093E  0823               	movf	(_err+3)^(0+128),w
  6620  093F  00A7               	movwf	((_err+3)^(0+128)+4)
  6621  0940  0822               	movf	(_err+2)^(0+128),w
  6622  0941  00A6               	movwf	((_err+2)^(0+128)+4)
  6623  0942  0821               	movf	(_err+1)^(0+128),w
  6624  0943  00A5               	movwf	((_err+1)^(0+128)+4)
  6625  0944  0820               	movf	_err^(0+128),w
  6626  0945  00A4               	movwf	(_err^(0+128)+4)
  6627                           
  6628                           ;sample.c: 350: err[0]=t32;
  6629  0946  0020               	movlb	0	; select bank0
  6630  0947  086C               	movf	pid_pwm1_idrv_run@t32+3,w
  6631  0948  0021               	movlb	1	; select bank1
  6632  0949  00A3               	movwf	(_err+3)^(0+128)
  6633  094A  0020               	movlb	0	; select bank0
  6634  094B  086B               	movf	pid_pwm1_idrv_run@t32+2,w
  6635  094C  0021               	movlb	1	; select bank1
  6636  094D  00A2               	movwf	(_err+2)^(0+128)
  6637  094E  0020               	movlb	0	; select bank0
  6638  094F  086A               	movf	pid_pwm1_idrv_run@t32+1,w
  6639  0950  0021               	movlb	1	; select bank1
  6640  0951  00A1               	movwf	(_err+1)^(0+128)
  6641  0952  0020               	movlb	0	; select bank0
  6642  0953  0869               	movf	pid_pwm1_idrv_run@t32,w
  6643  0954  0021               	movlb	1	; select bank1
  6644  0955  00A0               	movwf	_err^(0+128)
  6645                           
  6646                           ;sample.c: 353: x0=(err[0]-err[1])*PidKp;
  6647  0956  0820               	movf	_err^(0+128),w
  6648  0957  0020               	movlb	0	; select bank0
  6649  0958  00D9               	movwf	??_pid_pwm1_idrv_run
  6650  0959  0021               	movlb	1	; select bank1
  6651  095A  0821               	movf	(_err+1)^(0+128),w
  6652  095B  0020               	movlb	0	; select bank0
  6653  095C  00DA               	movwf	??_pid_pwm1_idrv_run+1
  6654  095D  0021               	movlb	1	; select bank1
  6655  095E  0822               	movf	(_err+2)^(0+128),w
  6656  095F  0020               	movlb	0	; select bank0
  6657  0960  00DB               	movwf	??_pid_pwm1_idrv_run+2
  6658  0961  0021               	movlb	1	; select bank1
  6659  0962  0823               	movf	(_err+3)^(0+128),w
  6660  0963  0020               	movlb	0	; select bank0
  6661  0964  00DC               	movwf	??_pid_pwm1_idrv_run+3
  6662  0965  0021               	movlb	1	; select bank1
  6663  0966  0924               	comf	(_err^(0+128)+4),w
  6664  0967  0020               	movlb	0	; select bank0
  6665  0968  00DD               	movwf	??_pid_pwm1_idrv_run+4
  6666  0969  0021               	movlb	1	; select bank1
  6667  096A  0925               	comf	((_err+1)^(0+128)+4),w
  6668  096B  0020               	movlb	0	; select bank0
  6669  096C  00DE               	movwf	??_pid_pwm1_idrv_run+5
  6670  096D  0021               	movlb	1	; select bank1
  6671  096E  0926               	comf	((_err+2)^(0+128)+4),w
  6672  096F  0020               	movlb	0	; select bank0
  6673  0970  00DF               	movwf	??_pid_pwm1_idrv_run+6
  6674  0971  0021               	movlb	1	; select bank1
  6675  0972  0927               	comf	((_err+3)^(0+128)+4),w
  6676  0973  0020               	movlb	0	; select bank0
  6677  0974  00E0               	movwf	??_pid_pwm1_idrv_run+7
  6678  0975  0ADD               	incf	??_pid_pwm1_idrv_run+4,f
  6679  0976  1903               	skipnz
  6680  0977  0ADE               	incf	??_pid_pwm1_idrv_run+5,f
  6681  0978  1903               	skipnz
  6682  0979  0ADF               	incf	??_pid_pwm1_idrv_run+6,f
  6683  097A  1903               	skipnz
  6684  097B  0AE0               	incf	??_pid_pwm1_idrv_run+7,f
  6685  097C  085D               	movf	??_pid_pwm1_idrv_run+4,w
  6686  097D  07D9               	addwf	??_pid_pwm1_idrv_run,f
  6687  097E  085E               	movf	??_pid_pwm1_idrv_run+5,w
  6688  097F  3DDA               	addwfc	??_pid_pwm1_idrv_run+1,f
  6689  0980  085F               	movf	??_pid_pwm1_idrv_run+6,w
  6690  0981  3DDB               	addwfc	??_pid_pwm1_idrv_run+2,f
  6691  0982  0860               	movf	??_pid_pwm1_idrv_run+7,w
  6692  0983  3DDC               	addwfc	??_pid_pwm1_idrv_run+3,f
  6693  0984  085C               	movf	??_pid_pwm1_idrv_run+3,w
  6694  0985  00F4               	movwf	___lmul@multiplier+3
  6695  0986  085B               	movf	??_pid_pwm1_idrv_run+2,w
  6696  0987  00F3               	movwf	___lmul@multiplier+2
  6697  0988  085A               	movf	??_pid_pwm1_idrv_run+1,w
  6698  0989  00F2               	movwf	___lmul@multiplier+1
  6699  098A  0859               	movf	??_pid_pwm1_idrv_run,w
  6700  098B  00F1               	movwf	___lmul@multiplier
  6701  098C  0830               	movf	_PidKp,w
  6702  098D  00F5               	movwf	___lmul@multiplicand
  6703  098E  0831               	movf	_PidKp+1,w
  6704  098F  00F6               	movwf	___lmul@multiplicand+1
  6705  0990  01F7               	clrf	___lmul@multiplicand+2
  6706  0991  01F8               	clrf	___lmul@multiplicand+3
  6707  0992  319D  25B2  3188   	fcall	___lmul
  6708  0995  0874               	movf	?___lmul+3,w
  6709  0996  0020               	movlb	0	; select bank0
  6710  0997  00A7               	movwf	_x0+3
  6711  0998  0873               	movf	?___lmul+2,w
  6712  0999  00A6               	movwf	_x0+2
  6713  099A  0872               	movf	?___lmul+1,w
  6714  099B  00A5               	movwf	_x0+1
  6715  099C  0871               	movf	?___lmul,w
  6716  099D  00A4               	movwf	_x0
  6717                           
  6718                           ;sample.c: 354: x1=PidKp*err[0]/PidTi;
  6719  099E  0021               	movlb	1	; select bank1
  6720  099F  084E               	movf	_PidTi^(0+128),w
  6721  09A0  0020               	movlb	0	; select bank0
  6722  09A1  00CB               	movwf	___aldiv@divisor
  6723  09A2  0021               	movlb	1	; select bank1
  6724  09A3  084F               	movf	(_PidTi+1)^(0+128),w
  6725  09A4  0020               	movlb	0	; select bank0
  6726  09A5  00CC               	movwf	___aldiv@divisor+1
  6727  09A6  01CD               	clrf	___aldiv@divisor+2
  6728  09A7  01CE               	clrf	___aldiv@divisor+3
  6729  09A8  0830               	movf	_PidKp,w
  6730  09A9  00F1               	movwf	___lmul@multiplier
  6731  09AA  0831               	movf	_PidKp+1,w
  6732  09AB  00F2               	movwf	___lmul@multiplier+1
  6733  09AC  01F3               	clrf	___lmul@multiplier+2
  6734  09AD  01F4               	clrf	___lmul@multiplier+3
  6735  09AE  0021               	movlb	1	; select bank1
  6736  09AF  0823               	movf	(_err+3)^(0+128),w
  6737  09B0  00F8               	movwf	___lmul@multiplicand+3
  6738  09B1  0822               	movf	(_err+2)^(0+128),w
  6739  09B2  00F7               	movwf	___lmul@multiplicand+2
  6740  09B3  0821               	movf	(_err+1)^(0+128),w
  6741  09B4  00F6               	movwf	___lmul@multiplicand+1
  6742  09B5  0820               	movf	_err^(0+128),w
  6743  09B6  00F5               	movwf	___lmul@multiplicand
  6744  09B7  319D  25B2  3188   	fcall	___lmul
  6745  09BA  0874               	movf	?___lmul+3,w
  6746  09BB  0020               	movlb	0	; select bank0
  6747  09BC  00D2               	movwf	___aldiv@dividend+3
  6748  09BD  0873               	movf	?___lmul+2,w
  6749  09BE  00D1               	movwf	___aldiv@dividend+2
  6750  09BF  0872               	movf	?___lmul+1,w
  6751  09C0  00D0               	movwf	___aldiv@dividend+1
  6752  09C1  0871               	movf	?___lmul,w
  6753  09C2  00CF               	movwf	___aldiv@dividend
  6754  09C3  3192  22FA  3188   	fcall	___aldiv
  6755  09C6  0020               	movlb	0	; select bank0
  6756  09C7  084E               	movf	?___aldiv+3,w
  6757  09C8  0021               	movlb	1	; select bank1
  6758  09C9  00BF               	movwf	(_x1+3)^(0+128)
  6759  09CA  0020               	movlb	0	; select bank0
  6760  09CB  084D               	movf	?___aldiv+2,w
  6761  09CC  0021               	movlb	1	; select bank1
  6762  09CD  00BE               	movwf	(_x1+2)^(0+128)
  6763  09CE  0020               	movlb	0	; select bank0
  6764  09CF  084C               	movf	?___aldiv+1,w
  6765  09D0  0021               	movlb	1	; select bank1
  6766  09D1  00BD               	movwf	(_x1+1)^(0+128)
  6767  09D2  0020               	movlb	0	; select bank0
  6768  09D3  084B               	movf	?___aldiv,w
  6769  09D4  0021               	movlb	1	; select bank1
  6770  09D5  00BC               	movwf	_x1^(0+128)
  6771                           
  6772                           ;sample.c: 355: y0=(err[0]-2*err[1]+err[2])*PidKp*PidTd/10;;
  6773  09D6  0820               	movf	_err^(0+128),w
  6774  09D7  0020               	movlb	0	; select bank0
  6775  09D8  00D9               	movwf	??_pid_pwm1_idrv_run
  6776  09D9  0021               	movlb	1	; select bank1
  6777  09DA  0821               	movf	(_err+1)^(0+128),w
  6778  09DB  0020               	movlb	0	; select bank0
  6779  09DC  00DA               	movwf	??_pid_pwm1_idrv_run+1
  6780  09DD  0021               	movlb	1	; select bank1
  6781  09DE  0822               	movf	(_err+2)^(0+128),w
  6782  09DF  0020               	movlb	0	; select bank0
  6783  09E0  00DB               	movwf	??_pid_pwm1_idrv_run+2
  6784  09E1  0021               	movlb	1	; select bank1
  6785  09E2  0823               	movf	(_err+3)^(0+128),w
  6786  09E3  0020               	movlb	0	; select bank0
  6787  09E4  00DC               	movwf	??_pid_pwm1_idrv_run+3
  6788  09E5  0021               	movlb	1	; select bank1
  6789  09E6  0828               	movf	(_err^(0+128)+8),w
  6790  09E7  0020               	movlb	0	; select bank0
  6791  09E8  00DD               	movwf	??_pid_pwm1_idrv_run+4
  6792  09E9  0021               	movlb	1	; select bank1
  6793  09EA  0829               	movf	((_err+1)^(0+128)+8),w
  6794  09EB  0020               	movlb	0	; select bank0
  6795  09EC  00DE               	movwf	??_pid_pwm1_idrv_run+5
  6796  09ED  0021               	movlb	1	; select bank1
  6797  09EE  082A               	movf	((_err+2)^(0+128)+8),w
  6798  09EF  0020               	movlb	0	; select bank0
  6799  09F0  00DF               	movwf	??_pid_pwm1_idrv_run+6
  6800  09F1  0021               	movlb	1	; select bank1
  6801  09F2  082B               	movf	((_err+3)^(0+128)+8),w
  6802  09F3  0020               	movlb	0	; select bank0
  6803  09F4  00E0               	movwf	??_pid_pwm1_idrv_run+7
  6804  09F5  0021               	movlb	1	; select bank1
  6805  09F6  0824               	movf	(_err^(0+128)+4),w
  6806  09F7  0020               	movlb	0	; select bank0
  6807  09F8  00E1               	movwf	??_pid_pwm1_idrv_run+8
  6808  09F9  0021               	movlb	1	; select bank1
  6809  09FA  0825               	movf	((_err+1)^(0+128)+4),w
  6810  09FB  0020               	movlb	0	; select bank0
  6811  09FC  00E2               	movwf	??_pid_pwm1_idrv_run+9
  6812  09FD  0021               	movlb	1	; select bank1
  6813  09FE  0826               	movf	((_err+2)^(0+128)+4),w
  6814  09FF  0020               	movlb	0	; select bank0
  6815  0A00  00E3               	movwf	??_pid_pwm1_idrv_run+10
  6816  0A01  0021               	movlb	1	; select bank1
  6817  0A02  0827               	movf	((_err+3)^(0+128)+4),w
  6818  0A03  0020               	movlb	0	; select bank0
  6819  0A04  00E4               	movwf	??_pid_pwm1_idrv_run+11
  6820  0A05  3001               	movlw	1
  6821  0A06                     u4635:	
  6822  0A06  35E1               	lslf	??_pid_pwm1_idrv_run+8,f
  6823  0A07  0DE2               	rlf	??_pid_pwm1_idrv_run+9,f
  6824  0A08  0DE3               	rlf	??_pid_pwm1_idrv_run+10,f
  6825  0A09  0DE4               	rlf	??_pid_pwm1_idrv_run+11,f
  6826  0A0A  0B89               	decfsz	9,f
  6827  0A0B  2A06               	goto	u4635
  6828  0A0C  09E1               	comf	??_pid_pwm1_idrv_run+8,f
  6829  0A0D  09E2               	comf	??_pid_pwm1_idrv_run+9,f
  6830  0A0E  09E3               	comf	??_pid_pwm1_idrv_run+10,f
  6831  0A0F  09E4               	comf	??_pid_pwm1_idrv_run+11,f
  6832  0A10  0AE1               	incf	??_pid_pwm1_idrv_run+8,f
  6833  0A11  1903               	skipnz
  6834  0A12  0AE2               	incf	??_pid_pwm1_idrv_run+9,f
  6835  0A13  1903               	skipnz
  6836  0A14  0AE3               	incf	??_pid_pwm1_idrv_run+10,f
  6837  0A15  1903               	skipnz
  6838  0A16  0AE4               	incf	??_pid_pwm1_idrv_run+11,f
  6839  0A17  0861               	movf	??_pid_pwm1_idrv_run+8,w
  6840  0A18  07DD               	addwf	??_pid_pwm1_idrv_run+4,f
  6841  0A19  0862               	movf	??_pid_pwm1_idrv_run+9,w
  6842  0A1A  3DDE               	addwfc	??_pid_pwm1_idrv_run+5,f
  6843  0A1B  0863               	movf	??_pid_pwm1_idrv_run+10,w
  6844  0A1C  3DDF               	addwfc	??_pid_pwm1_idrv_run+6,f
  6845  0A1D  0864               	movf	??_pid_pwm1_idrv_run+11,w
  6846  0A1E  3DE0               	addwfc	??_pid_pwm1_idrv_run+7,f
  6847  0A1F  085D               	movf	??_pid_pwm1_idrv_run+4,w
  6848  0A20  07D9               	addwf	??_pid_pwm1_idrv_run,f
  6849  0A21  085E               	movf	??_pid_pwm1_idrv_run+5,w
  6850  0A22  3DDA               	addwfc	??_pid_pwm1_idrv_run+1,f
  6851  0A23  085F               	movf	??_pid_pwm1_idrv_run+6,w
  6852  0A24  3DDB               	addwfc	??_pid_pwm1_idrv_run+2,f
  6853  0A25  0860               	movf	??_pid_pwm1_idrv_run+7,w
  6854  0A26  3DDC               	addwfc	??_pid_pwm1_idrv_run+3,f
  6855  0A27  085C               	movf	??_pid_pwm1_idrv_run+3,w
  6856  0A28  00F4               	movwf	___lmul@multiplier+3
  6857  0A29  085B               	movf	??_pid_pwm1_idrv_run+2,w
  6858  0A2A  00F3               	movwf	___lmul@multiplier+2
  6859  0A2B  085A               	movf	??_pid_pwm1_idrv_run+1,w
  6860  0A2C  00F2               	movwf	___lmul@multiplier+1
  6861  0A2D  0859               	movf	??_pid_pwm1_idrv_run,w
  6862  0A2E  00F1               	movwf	___lmul@multiplier
  6863  0A2F  0830               	movf	_PidKp,w
  6864  0A30  00F5               	movwf	___lmul@multiplicand
  6865  0A31  0831               	movf	_PidKp+1,w
  6866  0A32  00F6               	movwf	___lmul@multiplicand+1
  6867  0A33  01F7               	clrf	___lmul@multiplicand+2
  6868  0A34  01F8               	clrf	___lmul@multiplicand+3
  6869  0A35  319D  25B2  3188   	fcall	___lmul
  6870  0A38  0874               	movf	?___lmul+3,w
  6871  0A39  0020               	movlb	0	; select bank0
  6872  0A3A  00E8               	movwf	_pid_pwm1_idrv_run$2333+3
  6873  0A3B  0873               	movf	?___lmul+2,w
  6874  0A3C  00E7               	movwf	_pid_pwm1_idrv_run$2333+2
  6875  0A3D  0872               	movf	?___lmul+1,w
  6876  0A3E  00E6               	movwf	_pid_pwm1_idrv_run$2333+1
  6877  0A3F  0871               	movf	?___lmul,w
  6878  0A40  00E5               	movwf	_pid_pwm1_idrv_run$2333
  6879                           
  6880                           ;sample.c: 355: y0=(err[0]-2*err[1]+err[2])*PidKp*PidTd/10;;
  6881  0A41  3000               	movlw	0
  6882  0A42  00CE               	movwf	___aldiv@divisor+3
  6883  0A43  3000               	movlw	0
  6884  0A44  00CD               	movwf	___aldiv@divisor+2
  6885  0A45  3000               	movlw	0
  6886  0A46  00CC               	movwf	___aldiv@divisor+1
  6887  0A47  300A               	movlw	10
  6888  0A48  00CB               	movwf	___aldiv@divisor
  6889  0A49  0868               	movf	_pid_pwm1_idrv_run$2333+3,w
  6890  0A4A  00F4               	movwf	___lmul@multiplier+3
  6891  0A4B  0867               	movf	_pid_pwm1_idrv_run$2333+2,w
  6892  0A4C  00F3               	movwf	___lmul@multiplier+2
  6893  0A4D  0866               	movf	_pid_pwm1_idrv_run$2333+1,w
  6894  0A4E  00F2               	movwf	___lmul@multiplier+1
  6895  0A4F  0865               	movf	_pid_pwm1_idrv_run$2333,w
  6896  0A50  00F1               	movwf	___lmul@multiplier
  6897  0A51  0021               	movlb	1	; select bank1
  6898  0A52  084C               	movf	_PidTd^(0+128),w
  6899  0A53  00F5               	movwf	___lmul@multiplicand
  6900  0A54  084D               	movf	(_PidTd+1)^(0+128),w
  6901  0A55  00F6               	movwf	___lmul@multiplicand+1
  6902  0A56  01F7               	clrf	___lmul@multiplicand+2
  6903  0A57  01F8               	clrf	___lmul@multiplicand+3
  6904  0A58  319D  25B2  3188   	fcall	___lmul
  6905  0A5B  0874               	movf	?___lmul+3,w
  6906  0A5C  0020               	movlb	0	; select bank0
  6907  0A5D  00D2               	movwf	___aldiv@dividend+3
  6908  0A5E  0873               	movf	?___lmul+2,w
  6909  0A5F  00D1               	movwf	___aldiv@dividend+2
  6910  0A60  0872               	movf	?___lmul+1,w
  6911  0A61  00D0               	movwf	___aldiv@dividend+1
  6912  0A62  0871               	movf	?___lmul,w
  6913  0A63  00CF               	movwf	___aldiv@dividend
  6914  0A64  3192  22FA  3188   	fcall	___aldiv
  6915  0A67  0020               	movlb	0	; select bank0
  6916  0A68  084E               	movf	?___aldiv+3,w
  6917  0A69  00AB               	movwf	_y0+3
  6918  0A6A  084D               	movf	?___aldiv+2,w
  6919  0A6B  00AA               	movwf	_y0+2
  6920  0A6C  084C               	movf	?___aldiv+1,w
  6921  0A6D  00A9               	movwf	_y0+1
  6922  0A6E  084B               	movf	?___aldiv,w
  6923  0A6F  00A8               	movwf	_y0
  6924                           
  6925                           ;sample.c: 357: t32=x0+x1+y0;
  6926  0A70  0828               	movf	_y0,w
  6927  0A71  00D9               	movwf	??_pid_pwm1_idrv_run
  6928  0A72  0829               	movf	_y0+1,w
  6929  0A73  00DA               	movwf	??_pid_pwm1_idrv_run+1
  6930  0A74  082A               	movf	_y0+2,w
  6931  0A75  00DB               	movwf	??_pid_pwm1_idrv_run+2
  6932  0A76  082B               	movf	_y0+3,w
  6933  0A77  00DC               	movwf	??_pid_pwm1_idrv_run+3
  6934  0A78  0824               	movf	_x0,w
  6935  0A79  0021               	movlb	1	; select bank1
  6936  0A7A  073C               	addwf	_x1^(0+128),w
  6937  0A7B  0020               	movlb	0	; select bank0
  6938  0A7C  00DD               	movwf	??_pid_pwm1_idrv_run+4
  6939  0A7D  0825               	movf	_x0+1,w
  6940  0A7E  0021               	movlb	1	; select bank1
  6941  0A7F  3D3D               	addwfc	(_x1+1)^(0+128),w
  6942  0A80  0020               	movlb	0	; select bank0
  6943  0A81  00DE               	movwf	??_pid_pwm1_idrv_run+5
  6944  0A82  0826               	movf	_x0+2,w
  6945  0A83  0021               	movlb	1	; select bank1
  6946  0A84  3D3E               	addwfc	(_x1+2)^(0+128),w
  6947  0A85  0020               	movlb	0	; select bank0
  6948  0A86  00DF               	movwf	??_pid_pwm1_idrv_run+6
  6949  0A87  0827               	movf	_x0+3,w
  6950  0A88  0021               	movlb	1	; select bank1
  6951  0A89  3D3F               	addwfc	(_x1+3)^(0+128),w
  6952  0A8A  0020               	movlb	0	; select bank0
  6953  0A8B  00E0               	movwf	??_pid_pwm1_idrv_run+7
  6954  0A8C  085D               	movf	??_pid_pwm1_idrv_run+4,w
  6955  0A8D  07D9               	addwf	??_pid_pwm1_idrv_run,f
  6956  0A8E  085E               	movf	??_pid_pwm1_idrv_run+5,w
  6957  0A8F  3DDA               	addwfc	??_pid_pwm1_idrv_run+1,f
  6958  0A90  085F               	movf	??_pid_pwm1_idrv_run+6,w
  6959  0A91  3DDB               	addwfc	??_pid_pwm1_idrv_run+2,f
  6960  0A92  0860               	movf	??_pid_pwm1_idrv_run+7,w
  6961  0A93  3DDC               	addwfc	??_pid_pwm1_idrv_run+3,f
  6962  0A94  085C               	movf	??_pid_pwm1_idrv_run+3,w
  6963  0A95  00EC               	movwf	pid_pwm1_idrv_run@t32+3
  6964  0A96  085B               	movf	??_pid_pwm1_idrv_run+2,w
  6965  0A97  00EB               	movwf	pid_pwm1_idrv_run@t32+2
  6966  0A98  085A               	movf	??_pid_pwm1_idrv_run+1,w
  6967  0A99  00EA               	movwf	pid_pwm1_idrv_run@t32+1
  6968  0A9A  0859               	movf	??_pid_pwm1_idrv_run,w
  6969  0A9B  00E9               	movwf	pid_pwm1_idrv_run@t32
  6970                           
  6971                           ;sample.c: 358: t32/=10000;
  6972  0A9C  3000               	movlw	0
  6973  0A9D  00CE               	movwf	___aldiv@divisor+3
  6974  0A9E  3000               	movlw	0
  6975  0A9F  00CD               	movwf	___aldiv@divisor+2
  6976  0AA0  3027               	movlw	39
  6977  0AA1  00CC               	movwf	___aldiv@divisor+1
  6978  0AA2  3010               	movlw	16
  6979  0AA3  00CB               	movwf	___aldiv@divisor
  6980  0AA4  086C               	movf	pid_pwm1_idrv_run@t32+3,w
  6981  0AA5  00D2               	movwf	___aldiv@dividend+3
  6982  0AA6  086B               	movf	pid_pwm1_idrv_run@t32+2,w
  6983  0AA7  00D1               	movwf	___aldiv@dividend+2
  6984  0AA8  086A               	movf	pid_pwm1_idrv_run@t32+1,w
  6985  0AA9  00D0               	movwf	___aldiv@dividend+1
  6986  0AAA  0869               	movf	pid_pwm1_idrv_run@t32,w
  6987  0AAB  00CF               	movwf	___aldiv@dividend
  6988  0AAC  3192  22FA  3188   	fcall	___aldiv
  6989  0AAF  0020               	movlb	0	; select bank0
  6990  0AB0  084E               	movf	?___aldiv+3,w
  6991  0AB1  00EC               	movwf	pid_pwm1_idrv_run@t32+3
  6992  0AB2  084D               	movf	?___aldiv+2,w
  6993  0AB3  00EB               	movwf	pid_pwm1_idrv_run@t32+2
  6994  0AB4  084C               	movf	?___aldiv+1,w
  6995  0AB5  00EA               	movwf	pid_pwm1_idrv_run@t32+1
  6996  0AB6  084B               	movf	?___aldiv,w
  6997  0AB7  00E9               	movwf	pid_pwm1_idrv_run@t32
  6998                           
  6999                           ;sample.c: 359: t32+=pidU;
  7000  0AB8  0021               	movlb	1	; select bank1
  7001  0AB9  0854               	movf	_pidU^(0+128),w
  7002  0ABA  0020               	movlb	0	; select bank0
  7003  0ABB  07E9               	addwf	pid_pwm1_idrv_run@t32,f
  7004  0ABC  0021               	movlb	1	; select bank1
  7005  0ABD  0855               	movf	(_pidU+1)^(0+128),w
  7006  0ABE  0020               	movlb	0	; select bank0
  7007  0ABF  3DEA               	addwfc	pid_pwm1_idrv_run@t32+1,f
  7008  0AC0  3000               	movlw	0
  7009  0AC1  3DEB               	addwfc	pid_pwm1_idrv_run@t32+2,f
  7010  0AC2  3DEC               	addwfc	pid_pwm1_idrv_run@t32+3,f
  7011                           
  7012                           ;sample.c: 361: __nop();
  7013  0AC3  0000               	nop
  7014                           
  7015                           ;sample.c: 362: if(t32>1200)t32=1200;
  7016  0AC4  0020               	movlb	0	; select bank0
  7017  0AC5  1BEC               	btfsc	pid_pwm1_idrv_run@t32+3,7
  7018  0AC6  2ADB               	goto	l5139
  7019  0AC7  086C               	movf	pid_pwm1_idrv_run@t32+3,w
  7020  0AC8  1D03               	btfss	3,2
  7021  0AC9  2AD3               	goto	l5137
  7022  0ACA  086B               	movf	pid_pwm1_idrv_run@t32+2,w
  7023  0ACB  1D03               	btfss	3,2
  7024  0ACC  2AD3               	goto	l5137
  7025  0ACD  30B1               	movlw	177
  7026  0ACE  0269               	subwf	pid_pwm1_idrv_run@t32,w
  7027  0ACF  3004               	movlw	4
  7028  0AD0  3B6A               	subwfb	pid_pwm1_idrv_run@t32+1,w
  7029  0AD1  1C03               	btfss	3,0
  7030  0AD2  2ADB               	goto	l5139
  7031  0AD3                     l5137:	
  7032  0AD3  3000               	movlw	0
  7033  0AD4  00EC               	movwf	pid_pwm1_idrv_run@t32+3
  7034  0AD5  3000               	movlw	0
  7035  0AD6  00EB               	movwf	pid_pwm1_idrv_run@t32+2
  7036  0AD7  3004               	movlw	4
  7037  0AD8  00EA               	movwf	pid_pwm1_idrv_run@t32+1
  7038  0AD9  30B0               	movlw	176
  7039  0ADA  00E9               	movwf	pid_pwm1_idrv_run@t32
  7040  0ADB                     l5139:	
  7041                           
  7042                           ;sample.c: 363: if(t32<5)t32=5;
  7043  0ADB  1BEC               	btfsc	pid_pwm1_idrv_run@t32+3,7
  7044  0ADC  2AEA               	goto	l5141
  7045  0ADD  086C               	movf	pid_pwm1_idrv_run@t32+3,w
  7046  0ADE  1D03               	btfss	3,2
  7047  0ADF  2AF2               	goto	l663
  7048  0AE0  086B               	movf	pid_pwm1_idrv_run@t32+2,w
  7049  0AE1  1D03               	btfss	3,2
  7050  0AE2  2AF2               	goto	l663
  7051  0AE3  086A               	movf	pid_pwm1_idrv_run@t32+1,w
  7052  0AE4  1D03               	btfss	3,2
  7053  0AE5  2AF2               	goto	l663
  7054  0AE6  3005               	movlw	5
  7055  0AE7  0269               	subwf	pid_pwm1_idrv_run@t32,w
  7056  0AE8  1803               	btfsc	3,0
  7057  0AE9  2AF2               	goto	l663
  7058  0AEA                     l5141:	
  7059  0AEA  3000               	movlw	0
  7060  0AEB  00EC               	movwf	pid_pwm1_idrv_run@t32+3
  7061  0AEC  3000               	movlw	0
  7062  0AED  00EB               	movwf	pid_pwm1_idrv_run@t32+2
  7063  0AEE  3000               	movlw	0
  7064  0AEF  00EA               	movwf	pid_pwm1_idrv_run@t32+1
  7065  0AF0  3005               	movlw	5
  7066  0AF1  00E9               	movwf	pid_pwm1_idrv_run@t32
  7067  0AF2                     l663:	
  7068                           
  7069                           ;sample.c: 364: pidU=(uint16_t)t32;
  7070  0AF2  086A               	movf	pid_pwm1_idrv_run@t32+1,w
  7071  0AF3  0021               	movlb	1	; select bank1
  7072  0AF4  00D5               	movwf	(_pidU+1)^(0+128)
  7073  0AF5  0020               	movlb	0	; select bank0
  7074  0AF6  0869               	movf	pid_pwm1_idrv_run@t32,w
  7075  0AF7  0021               	movlb	1	; select bank1
  7076  0AF8  00D4               	movwf	_pidU^(0+128)
  7077                           
  7078                           ;sample.c: 369: set_idrv_pwm1_duty(pidU);
  7079  0AF9  0855               	movf	(_pidU+1)^(0+128),w
  7080  0AFA  00F8               	movwf	set_idrv_pwm1_duty@duty+1
  7081  0AFB  0854               	movf	_pidU^(0+128),w
  7082  0AFC  00F7               	movwf	set_idrv_pwm1_duty@duty
  7083  0AFD  319D  2509         	fcall	_set_idrv_pwm1_duty
  7084  0AFF  0008               	return
  7085  0B00                     __end_of_pid_pwm1_idrv_run:	
  7086                           
  7087                           	psect	text11
  7088  1D09                     __ptext11:	
  7089 ;; *************** function _set_idrv_pwm1_duty *****************
  7090 ;; Defined at:
  7091 ;;		line 82 in file "src/api/sample.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;  duty            2    7[COMMON] unsigned int 
  7094 ;; Auto vars:     Size  Location     Type
  7095 ;;  t16             2    9[COMMON] unsigned int 
  7096 ;; Return value:  Size  Location     Type
  7097 ;;                  1    wreg      void 
  7098 ;; Registers used:
  7099 ;;		wreg, status,2, pclath, cstack
  7100 ;; Tracked objects:
  7101 ;;		On entry : 0/0
  7102 ;;		On exit  : 0/0
  7103 ;;		Unchanged: 0/0
  7104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7106 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7108 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7109 ;;Total ram usage:        4 bytes
  7110 ;; Hardware stack levels used:    1
  7111 ;; Hardware stack levels required when called:    2
  7112 ;; This function calls:
  7113 ;;		_get_idrv_pwm1_duty
  7114 ;; This function is called by:
  7115 ;;		_pid_pwm1_idrv_run
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           
  7119                           
  7120                           ;psect for function _set_idrv_pwm1_duty
  7121  1D09                     _set_idrv_pwm1_duty:	
  7122                           
  7123                           ;sample.c: 85: uint16_t t16;;sample.c: 86: pwm1DutyForIdrv=duty;
  7124                           
  7125                           ;incstack = 0
  7126                           ; Regs used in _set_idrv_pwm1_duty: [wreg+status,2+pclath+cstack]
  7127  1D09  0878               	movf	set_idrv_pwm1_duty@duty+1,w
  7128  1D0A  0021               	movlb	1	; select bank1
  7129  1D0B  00D9               	movwf	(_pwm1DutyForIdrv+1)^(0+128)
  7130  1D0C  0877               	movf	set_idrv_pwm1_duty@duty,w
  7131  1D0D  00D8               	movwf	_pwm1DutyForIdrv^(0+128)
  7132                           
  7133                           ;sample.c: 87: t16=get_idrv_pwm1_duty();
  7134  1D0E  319C  2485  319D   	fcall	_get_idrv_pwm1_duty
  7135  1D11  0872               	movf	?_get_idrv_pwm1_duty+1,w
  7136  1D12  00FA               	movwf	set_idrv_pwm1_duty@t16+1
  7137  1D13  0871               	movf	?_get_idrv_pwm1_duty,w
  7138  1D14  00F9               	movwf	set_idrv_pwm1_duty@t16
  7139                           
  7140                           ;sample.c: 88: if(t16==duty)return;
  7141  1D15  0878               	movf	set_idrv_pwm1_duty@duty+1,w
  7142  1D16  067A               	xorwf	set_idrv_pwm1_duty@t16+1,w
  7143  1D17  1D03               	skipz
  7144  1D18  2D1B               	goto	u2425
  7145  1D19  0877               	movf	set_idrv_pwm1_duty@duty,w
  7146  1D1A  0679               	xorwf	set_idrv_pwm1_duty@t16,w
  7147  1D1B                     u2425:	
  7148  1D1B  1903               	btfsc	3,2
  7149  1D1C  0008               	return
  7150                           
  7151                           ;sample.c: 91: PWM1CONbits.EN = 0;
  7152  1D1D  003B               	movlb	27	; select bank27
  7153  1D1E  139B               	bcf	27,7	;volatile
  7154                           
  7155                           ;sample.c: 92: PWM1DCL= (uint8_t)(duty&0xff);
  7156  1D1F  0877               	movf	set_idrv_pwm1_duty@duty,w
  7157  1D20  0093               	movwf	19	;volatile
  7158                           
  7159                           ;sample.c: 93: PWM1DCH=(uint8_t)(duty>>8);
  7160  1D21  0878               	movf	set_idrv_pwm1_duty@duty+1,w
  7161  1D22  0094               	movwf	20	;volatile
  7162                           
  7163                           ;sample.c: 94: PWM1CONbits.EN = 1;
  7164  1D23  179B               	bsf	27,7	;volatile
  7165  1D24  0008               	return
  7166  1D25                     __end_of_set_idrv_pwm1_duty:	
  7167                           
  7168                           	psect	text12
  7169  1C85                     __ptext12:	
  7170 ;; *************** function _get_idrv_pwm1_duty *****************
  7171 ;; Defined at:
  7172 ;;		line 73 in file "src/api/sample.c"
  7173 ;; Parameters:    Size  Location     Type
  7174 ;;		None
  7175 ;; Auto vars:     Size  Location     Type
  7176 ;;  t16             2    5[COMMON] unsigned int 
  7177 ;; Return value:  Size  Location     Type
  7178 ;;                  2    1[COMMON] unsigned int 
  7179 ;; Registers used:
  7180 ;;		wreg
  7181 ;; Tracked objects:
  7182 ;;		On entry : 0/0
  7183 ;;		On exit  : 0/0
  7184 ;;		Unchanged: 0/0
  7185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7186 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7187 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7188 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7189 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7190 ;;Total ram usage:        6 bytes
  7191 ;; Hardware stack levels used:    1
  7192 ;; Hardware stack levels required when called:    1
  7193 ;; This function calls:
  7194 ;;		Nothing
  7195 ;; This function is called by:
  7196 ;;		_set_idrv_pwm1_duty
  7197 ;; This function uses a non-reentrant model
  7198 ;;
  7199                           
  7200                           
  7201                           ;psect for function _get_idrv_pwm1_duty
  7202  1C85                     _get_idrv_pwm1_duty:	
  7203                           
  7204                           ;sample.c: 76: uint16_t t16=PWM1DCH;
  7205                           
  7206                           ;incstack = 0
  7207                           ; Regs used in _get_idrv_pwm1_duty: [wreg]
  7208  1C85  003B               	movlb	27	; select bank27
  7209  1C86  0814               	movf	20,w	;volatile
  7210  1C87  00F3               	movwf	??_get_idrv_pwm1_duty
  7211  1C88  01F4               	clrf	??_get_idrv_pwm1_duty+1
  7212  1C89  0873               	movf	??_get_idrv_pwm1_duty,w
  7213  1C8A  00F5               	movwf	get_idrv_pwm1_duty@t16
  7214  1C8B  0874               	movf	??_get_idrv_pwm1_duty+1,w
  7215  1C8C  00F6               	movwf	get_idrv_pwm1_duty@t16+1
  7216                           
  7217                           ;sample.c: 77: t16<<=8;
  7218  1C8D  3008               	movlw	8
  7219  1C8E                     u2355:	
  7220  1C8E  35F5               	lslf	get_idrv_pwm1_duty@t16,f
  7221  1C8F  0DF6               	rlf	get_idrv_pwm1_duty@t16+1,f
  7222  1C90  0B89               	decfsz	9,f
  7223  1C91  2C8E               	goto	u2355
  7224                           
  7225                           ;sample.c: 78: t16|=PWM1DCL;
  7226  1C92  0813               	movf	19,w	;volatile
  7227  1C93  00F3               	movwf	??_get_idrv_pwm1_duty
  7228  1C94  01F4               	clrf	??_get_idrv_pwm1_duty+1
  7229  1C95  0873               	movf	??_get_idrv_pwm1_duty,w
  7230  1C96  04F5               	iorwf	get_idrv_pwm1_duty@t16,f
  7231  1C97  0874               	movf	??_get_idrv_pwm1_duty+1,w
  7232  1C98  04F6               	iorwf	get_idrv_pwm1_duty@t16+1,f
  7233                           
  7234                           ;sample.c: 79: return t16;
  7235  1C99  0876               	movf	get_idrv_pwm1_duty@t16+1,w
  7236  1C9A  00F2               	movwf	?_get_idrv_pwm1_duty+1
  7237  1C9B  0875               	movf	get_idrv_pwm1_duty@t16,w
  7238  1C9C  00F1               	movwf	?_get_idrv_pwm1_duty
  7239  1C9D  0008               	return
  7240  1C9E                     __end_of_get_idrv_pwm1_duty:	
  7241                           
  7242                           	psect	text13
  7243  1120                     __ptext13:	
  7244 ;; *************** function _modbus_response_process *****************
  7245 ;; Defined at:
  7246 ;;		line 210 in file "src/api/modbus.c"
  7247 ;; Parameters:    Size  Location     Type
  7248 ;;  rbuf            1    wreg     PTR unsigned char 
  7249 ;;		 -> modbusBuf(32), 
  7250 ;;  rlen            2   24[BANK0 ] unsigned int 
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;  rbuf            1   29[BANK0 ] PTR unsigned char 
  7253 ;;		 -> modbusBuf(32), 
  7254 ;;  pmdbs           1   28[BANK0 ] PTR struct .
  7255 ;;		 -> modbusBuf(32), 
  7256 ;;  resp            1   27[BANK0 ] unsigned char 
  7257 ;; Return value:  Size  Location     Type
  7258 ;;                  1    wreg      void 
  7259 ;; Registers used:
  7260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7261 ;; Tracked objects:
  7262 ;;		On entry : 0/0
  7263 ;;		On exit  : 0/0
  7264 ;;		Unchanged: 0/0
  7265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7266 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7267 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7268 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7269 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7270 ;;Total ram usage:        6 bytes
  7271 ;; Hardware stack levels used:    1
  7272 ;; Hardware stack levels required when called:    5
  7273 ;; This function calls:
  7274 ;;		_crc_verify
  7275 ;;		_modbus_response_command
  7276 ;;		_modbus_response_illgeal_function
  7277 ;;		_modbus_response_write_mult_register
  7278 ;;		_modbus_response_write_single_register
  7279 ;; This function is called by:
  7280 ;;		_main
  7281 ;; This function uses a non-reentrant model
  7282 ;;
  7283                           
  7284                           
  7285                           ;psect for function _modbus_response_process
  7286  1120                     _modbus_response_process:	
  7287                           
  7288                           ;incstack = 0
  7289                           ; Regs used in _modbus_response_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7290                           ;modbus_response_process@rbuf stored from wreg
  7291  1120  0020               	movlb	0	; select bank0
  7292  1121  00E4               	movwf	modbus_response_process@rbuf
  7293                           
  7294                           ;modbus.c: 211: uint8_t resp=0;
  7295  1122  01E2               	clrf	modbus_response_process@resp
  7296                           
  7297                           ;modbus.c: 212: st_modbusComReqStructDef* pmdbs=(st_modbusComReqStructDef*)rbuf;
  7298  1123  0864               	movf	modbus_response_process@rbuf,w
  7299  1124  00E1               	movwf	??_modbus_response_process
  7300  1125  0861               	movf	??_modbus_response_process,w
  7301  1126  00E3               	movwf	modbus_response_process@pmdbs
  7302                           
  7303                           ;modbus.c: 215: if((pmdbs->addr!=sysData.id) && (pmdbs->addr!=0x00))return;
  7304  1127  305C               	movlw	92
  7305  1128  0086               	movwf	6
  7306  1129  3023               	movlw	35
  7307  112A  0087               	movwf	7
  7308  112B  3142               	addfsr 1,2
  7309  112C  0863               	movf	modbus_response_process@pmdbs,w
  7310  112D  0084               	movwf	4
  7311  112E  3001               	movlw	1	; select bank2/3
  7312  112F  0085               	movwf	5
  7313  1130  0800               	movf	0,w
  7314  1131  0601               	xorwf	1,w
  7315  1132  1903               	skipnz
  7316  1133  293B               	goto	l5265
  7317  1134  0863               	movf	modbus_response_process@pmdbs,w
  7318  1135  0086               	movwf	6
  7319  1136  3001               	movlw	1	; select bank2/3
  7320  1137  0087               	movwf	7
  7321  1138  0801               	movf	1,w
  7322  1139  1D03               	btfss	3,2
  7323  113A  0008               	return
  7324  113B                     l5265:	
  7325                           
  7326                           ;modbus.c: 216: if(!(crc_verify(rbuf,rlen)))return ;
  7327  113B  0864               	movf	modbus_response_process@rbuf,w
  7328  113C  00CD               	movwf	crc_verify@message
  7329  113D  3001               	movlw	1
  7330  113E  00CE               	movwf	crc_verify@message+1
  7331  113F  0860               	movf	modbus_response_process@rlen+1,w
  7332  1140  00D0               	movwf	crc_verify@n+1
  7333  1141  085F               	movf	modbus_response_process@rlen,w
  7334  1142  00CF               	movwf	crc_verify@n
  7335  1143  319E  2618  3191   	fcall	_crc_verify
  7336  1146  3A00               	xorlw	0
  7337  1147  1903               	btfsc	3,2
  7338  1148  0008               	return
  7339  1149  2960               	goto	l5279
  7340  114A                     l5269:	
  7341                           ;modbus.c: 219: case 0x03:
  7342                           
  7343                           ;modbus.c: 218: switch(pmdbs->func){
  7344                           
  7345                           
  7346                           ;modbus.c: 220: modbus_response_command(rbuf);
  7347  114A  0020               	movlb	0	; select bank0
  7348  114B  0864               	movf	modbus_response_process@rbuf,w
  7349  114C  3194  249A         	fcall	_modbus_response_command
  7350                           
  7351                           ;modbus.c: 221: break;
  7352  114E  0008               	return
  7353  114F                     l5271:	
  7354                           ;modbus.c: 222: case 0x06:
  7355                           
  7356                           
  7357                           ;modbus.c: 223: case 0x26:;modbus.c: 224: modbus_response_write_single_register(rbuf);
  7358  114F  0020               	movlb	0	; select bank0
  7359  1150  0864               	movf	modbus_response_process@rbuf,w
  7360  1151  318C  24F4         	fcall	_modbus_response_write_single_register
  7361                           
  7362                           ;modbus.c: 225: break;
  7363  1153  0008               	return
  7364  1154                     l5273:	
  7365                           ;modbus.c: 226: case 0x10:
  7366                           
  7367                           
  7368                           ;modbus.c: 227: modbus_response_write_mult_register(rbuf);
  7369  1154  0020               	movlb	0	; select bank0
  7370  1155  0864               	movf	modbus_response_process@rbuf,w
  7371  1156  3192  2288         	fcall	_modbus_response_write_mult_register
  7372                           
  7373                           ;modbus.c: 228: break;
  7374  1158  0008               	return
  7375  1159                     l5275:	
  7376                           ;modbus.c: 251: default:
  7377                           
  7378                           
  7379                           ;modbus.c: 252: modbus_response_illgeal_function(rbuf,0x01);break;
  7380  1159  0020               	movlb	0	; select bank0
  7381  115A  01D3               	clrf	modbus_response_illgeal_function@errcode
  7382  115B  0AD3               	incf	modbus_response_illgeal_function@errcode,f
  7383  115C  0864               	movf	modbus_response_process@rbuf,w
  7384  115D  3190  203A         	fcall	_modbus_response_illgeal_function
  7385                           
  7386                           ;modbus.c: 253: }
  7387  115F  0008               	return
  7388  1160                     l5279:	
  7389  1160  0020               	movlb	0	; select bank0
  7390  1161  0A63               	incf	modbus_response_process@pmdbs,w
  7391  1162  0086               	movwf	6
  7392  1163  3001               	movlw	1	; select bank2/3
  7393  1164  0087               	movwf	7
  7394  1165  0801               	movf	1,w
  7395                           
  7396                           ; Switch size 1, requested type "space"
  7397                           ; Number of cases is 4, Range of values is 3 to 38
  7398                           ; switch strategies available:
  7399                           ; Name         Instructions Cycles
  7400                           ; simple_byte           13     7 (average)
  7401                           ; direct_byte           81     9 (fixed)
  7402                           ; jumptable            263     9 (fixed)
  7403                           ;	Chosen strategy is simple_byte
  7404  1166  3A03               	xorlw	3	; case 3
  7405  1167  1903               	skipnz
  7406  1168  294A               	goto	l5269
  7407  1169  3A05               	xorlw	5	; case 6
  7408  116A  1903               	skipnz
  7409  116B  294F               	goto	l5271
  7410  116C  3A16               	xorlw	22	; case 16
  7411  116D  1903               	skipnz
  7412  116E  2954               	goto	l5273
  7413  116F  3A36               	xorlw	54	; case 38
  7414  1170  1903               	skipnz
  7415  1171  294F               	goto	l5271
  7416  1172  2959               	goto	l5275
  7417  1173  0008               	return
  7418  1174                     __end_of_modbus_response_process:	
  7419                           
  7420                           	psect	text14
  7421  0CF4                     __ptext14:	
  7422 ;; *************** function _modbus_response_write_single_register *****************
  7423 ;; Defined at:
  7424 ;;		line 115 in file "src/api/modbus.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;  rbuf            1    wreg     PTR unsigned char 
  7427 ;;		 -> modbusBuf(32), 
  7428 ;; Auto vars:     Size  Location     Type
  7429 ;;  rbuf            1   21[BANK0 ] PTR unsigned char 
  7430 ;;		 -> modbusBuf(32), 
  7431 ;;  startAddr       2   22[BANK0 ] unsigned int 
  7432 ;;  t16             2   17[BANK0 ] unsigned int 
  7433 ;;  pmdbs           1   20[BANK0 ] PTR struct .
  7434 ;;		 -> modbusBuf(32), 
  7435 ;;  i               1   19[BANK0 ] unsigned char 
  7436 ;;  fiSave          1   16[BANK0 ] unsigned char 
  7437 ;; Return value:  Size  Location     Type
  7438 ;;                  1    wreg      void 
  7439 ;; Registers used:
  7440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7441 ;; Tracked objects:
  7442 ;;		On entry : 0/0
  7443 ;;		On exit  : 0/0
  7444 ;;		Unchanged: 0/0
  7445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7447 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7448 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7449 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7450 ;;Total ram usage:       12 bytes
  7451 ;; Hardware stack levels used:    1
  7452 ;; Hardware stack levels required when called:    4
  7453 ;; This function calls:
  7454 ;;		_crc_append
  7455 ;;		_sys_data_save
  7456 ;;		_uart_send_len
  7457 ;; This function is called by:
  7458 ;;		_modbus_response_process
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           
  7463                           ;psect for function _modbus_response_write_single_register
  7464  0CF4                     _modbus_response_write_single_register:	
  7465                           
  7466                           ;incstack = 0
  7467                           ; Regs used in _modbus_response_write_single_register: [wreg-fsr1h+status,2+status,0+pcl
      +                          ath+cstack]
  7468                           ;modbus_response_write_single_register@rbuf stored from wreg
  7469  0CF4  0020               	movlb	0	; select bank0
  7470  0CF5  00DC               	movwf	modbus_response_write_single_register@rbuf
  7471                           
  7472                           ;modbus.c: 117: uint16_t startAddr=0;
  7473  0CF6  01DD               	clrf	modbus_response_write_single_register@startAddr
  7474  0CF7  01DE               	clrf	modbus_response_write_single_register@startAddr+1
  7475                           
  7476                           ;modbus.c: 118: uint16_t t16;;modbus.c: 119: uint8_t fiSave=0,i;
  7477  0CF8  01D7               	clrf	modbus_response_write_single_register@fiSave
  7478                           
  7479                           ;modbus.c: 120: st_modbusComReqStructDef* pmdbs=(st_modbusComReqStructDef*)rbuf;
  7480  0CF9  085C               	movf	modbus_response_write_single_register@rbuf,w
  7481  0CFA  00D3               	movwf	??_modbus_response_write_single_register
  7482  0CFB  0853               	movf	??_modbus_response_write_single_register,w
  7483  0CFC  00DB               	movwf	modbus_response_write_single_register@pmdbs
  7484                           
  7485                           ;modbus.c: 121: if(pmdbs->addr!=sysData.id && pmdbs->addr!=0)return;
  7486  0CFD  305C               	movlw	92
  7487  0CFE  0086               	movwf	6
  7488  0CFF  3023               	movlw	35
  7489  0D00  0087               	movwf	7
  7490  0D01  3142               	addfsr 1,2
  7491  0D02  085B               	movf	modbus_response_write_single_register@pmdbs,w
  7492  0D03  0084               	movwf	4
  7493  0D04  3001               	movlw	1	; select bank2/3
  7494  0D05  0085               	movwf	5
  7495  0D06  0800               	movf	0,w
  7496  0D07  0601               	xorwf	1,w
  7497  0D08  1903               	skipnz
  7498  0D09  2D11               	goto	l4879
  7499  0D0A  085B               	movf	modbus_response_write_single_register@pmdbs,w
  7500  0D0B  0086               	movwf	6
  7501  0D0C  3001               	movlw	1	; select bank2/3
  7502  0D0D  0087               	movwf	7
  7503  0D0E  0801               	movf	1,w
  7504  0D0F  1D03               	btfss	3,2
  7505  0D10  0008               	return
  7506  0D11                     l4879:	
  7507                           
  7508                           ;modbus.c: 122: if(sysData.id==253 && pmdbs->addr==0)return;
  7509  0D11  305C               	movlw	92
  7510  0D12  0086               	movwf	6
  7511  0D13  3023               	movlw	35
  7512  0D14  0087               	movwf	7
  7513  0D15  3142               	addfsr 1,2
  7514  0D16  30FD               	movlw	253
  7515  0D17  0601               	xorwf	1,w
  7516  0D18  1D03               	btfss	3,2
  7517  0D19  2D21               	goto	l4885
  7518  0D1A  085B               	movf	modbus_response_write_single_register@pmdbs,w
  7519  0D1B  0086               	movwf	6
  7520  0D1C  3001               	movlw	1	; select bank2/3
  7521  0D1D  0087               	movwf	7
  7522  0D1E  0801               	movf	1,w
  7523  0D1F  1903               	btfsc	3,2
  7524  0D20  0008               	return
  7525  0D21                     l4885:	
  7526                           
  7527                           ;modbus.c: 123: startAddr=pmdbs->addr_hi;
  7528  0D21  085B               	movf	modbus_response_write_single_register@pmdbs,w
  7529  0D22  3E02               	addlw	2
  7530  0D23  0086               	movwf	6
  7531  0D24  3001               	movlw	1	; select bank2/3
  7532  0D25  0087               	movwf	7
  7533  0D26  0801               	movf	1,w
  7534  0D27  00D3               	movwf	??_modbus_response_write_single_register
  7535  0D28  01D4               	clrf	??_modbus_response_write_single_register+1
  7536  0D29  0853               	movf	??_modbus_response_write_single_register,w
  7537  0D2A  00DD               	movwf	modbus_response_write_single_register@startAddr
  7538  0D2B  0854               	movf	??_modbus_response_write_single_register+1,w
  7539  0D2C  00DE               	movwf	modbus_response_write_single_register@startAddr+1
  7540                           
  7541                           ;modbus.c: 124: startAddr<<=8;
  7542  0D2D  3008               	movlw	8
  7543  0D2E                     u4245:	
  7544  0D2E  35DD               	lslf	modbus_response_write_single_register@startAddr,f
  7545  0D2F  0DDE               	rlf	modbus_response_write_single_register@startAddr+1,f
  7546  0D30  0B89               	decfsz	9,f
  7547  0D31  2D2E               	goto	u4245
  7548                           
  7549                           ;modbus.c: 125: startAddr |= pmdbs->addr_lo;
  7550  0D32  085B               	movf	modbus_response_write_single_register@pmdbs,w
  7551  0D33  3E03               	addlw	3
  7552  0D34  0086               	movwf	6
  7553  0D35  3001               	movlw	1	; select bank2/3
  7554  0D36  0087               	movwf	7
  7555  0D37  0801               	movf	1,w
  7556  0D38  00D3               	movwf	??_modbus_response_write_single_register
  7557  0D39  01D4               	clrf	??_modbus_response_write_single_register+1
  7558  0D3A  0853               	movf	??_modbus_response_write_single_register,w
  7559  0D3B  04DD               	iorwf	modbus_response_write_single_register@startAddr,f
  7560  0D3C  0854               	movf	??_modbus_response_write_single_register+1,w
  7561  0D3D  04DE               	iorwf	modbus_response_write_single_register@startAddr+1,f
  7562                           
  7563                           ;modbus.c: 126: startAddr = startAddr & 0xff;
  7564  0D3E  30FF               	movlw	255
  7565  0D3F  055D               	andwf	modbus_response_write_single_register@startAddr,w
  7566  0D40  00DD               	movwf	modbus_response_write_single_register@startAddr
  7567  0D41  3000               	movlw	0
  7568  0D42  055E               	andwf	modbus_response_write_single_register@startAddr+1,w
  7569  0D43  00DE               	movwf	modbus_response_write_single_register@startAddr+1
  7570                           
  7571                           ;modbus.c: 127: if(startAddr==0x02){
  7572  0D44  3002               	movlw	2
  7573  0D45  065D               	xorwf	modbus_response_write_single_register@startAddr,w
  7574  0D46  045E               	iorwf	modbus_response_write_single_register@startAddr+1,w
  7575  0D47  1D03               	btfss	3,2
  7576  0D48  2D57               	goto	l4897
  7577                           
  7578                           ;modbus.c: 128: sysData.id=rbuf[5];
  7579  0D49  085C               	movf	modbus_response_write_single_register@rbuf,w
  7580  0D4A  3E05               	addlw	5
  7581  0D4B  0086               	movwf	6
  7582  0D4C  3001               	movlw	1	; select bank2/3
  7583  0D4D  0087               	movwf	7
  7584  0D4E  0801               	movf	1,w
  7585  0D4F  00D3               	movwf	??_modbus_response_write_single_register
  7586  0D50  305E               	movlw	94
  7587  0D51  0086               	movwf	6
  7588  0D52  3023               	movlw	35
  7589  0D53  0087               	movwf	7
  7590  0D54  0853               	movf	??_modbus_response_write_single_register,w
  7591  0D55  0081               	movwf	1
  7592  0D56  2E17               	goto	l828
  7593  0D57                     l4897:	
  7594                           ;modbus.c: 130: }else if(startAddr==0x03){
  7595                           
  7596                           ;modbus.c: 129: fiSave=1;
  7597                           
  7598  0D57  3003               	movlw	3
  7599  0D58  065D               	xorwf	modbus_response_write_single_register@startAddr,w
  7600  0D59  045E               	iorwf	modbus_response_write_single_register@startAddr+1,w
  7601  0D5A  1D03               	btfss	3,2
  7602  0D5B  2D75               	goto	l4905
  7603                           
  7604                           ;modbus.c: 131: sysData.pidSetFlg1=rbuf[4];
  7605  0D5C  085C               	movf	modbus_response_write_single_register@rbuf,w
  7606  0D5D  3E04               	addlw	4
  7607  0D5E  0086               	movwf	6
  7608  0D5F  3001               	movlw	1	; select bank2/3
  7609  0D60  0087               	movwf	7
  7610  0D61  0801               	movf	1,w
  7611  0D62  00D3               	movwf	??_modbus_response_write_single_register
  7612  0D63  305D               	movlw	93
  7613  0D64  0086               	movwf	6
  7614  0D65  3023               	movlw	35
  7615  0D66  0087               	movwf	7
  7616  0D67  0853               	movf	??_modbus_response_write_single_register,w
  7617  0D68  0081               	movwf	1
  7618                           
  7619                           ;modbus.c: 132: sysData.pidSetFlg0=rbuf[5];
  7620  0D69  305C               	movlw	92
  7621  0D6A  0086               	movwf	6
  7622  0D6B  3023               	movlw	35
  7623  0D6C  0087               	movwf	7
  7624  0D6D  085C               	movf	modbus_response_write_single_register@rbuf,w
  7625  0D6E  3E05               	addlw	5
  7626  0D6F  0084               	movwf	4
  7627  0D70  3001               	movlw	1	; select bank2/3
  7628  0D71  0085               	movwf	5
  7629  0D72  0800               	movf	0,w
  7630  0D73  3FC0               	movwi [0]fsr1
  7631  0D74  2E17               	goto	l828
  7632  0D75                     l4905:	
  7633                           ;modbus.c: 134: }else if(startAddr>0x0f && startAddr < 0x10+30*2){
  7634                           
  7635                           ;modbus.c: 133: fiSave=1;
  7636                           
  7637  0D75  3000               	movlw	0
  7638  0D76  025E               	subwf	modbus_response_write_single_register@startAddr+1,w
  7639  0D77  3010               	movlw	16
  7640  0D78  1903               	skipnz
  7641  0D79  025D               	subwf	modbus_response_write_single_register@startAddr,w
  7642  0D7A  1C03               	skipc
  7643  0D7B  0008               	return
  7644  0D7C  3000               	movlw	0
  7645  0D7D  025E               	subwf	modbus_response_write_single_register@startAddr+1,w
  7646  0D7E  304C               	movlw	76
  7647  0D7F  1903               	skipnz
  7648  0D80  025D               	subwf	modbus_response_write_single_register@startAddr,w
  7649  0D81  1803               	skipnc
  7650  0D82  0008               	return
  7651                           
  7652                           ;modbus.c: 135: startAddr-=0x10;
  7653  0D83  3010               	movlw	16
  7654  0D84  02DD               	subwf	modbus_response_write_single_register@startAddr,f
  7655  0D85  3000               	movlw	0
  7656  0D86  3BDE               	subwfb	modbus_response_write_single_register@startAddr+1,f
  7657                           
  7658                           ;modbus.c: 136: if(startAddr & 0x01){
  7659  0D87  1C5D               	btfss	modbus_response_write_single_register@startAddr,0
  7660  0D88  2E19               	goto	l4937
  7661                           
  7662                           ;modbus.c: 137: t16=rbuf[4];
  7663  0D89  085C               	movf	modbus_response_write_single_register@rbuf,w
  7664  0D8A  3E04               	addlw	4
  7665  0D8B  0086               	movwf	6
  7666  0D8C  3001               	movlw	1	; select bank2/3
  7667  0D8D  0087               	movwf	7
  7668  0D8E  0801               	movf	1,w
  7669  0D8F  00D3               	movwf	??_modbus_response_write_single_register
  7670  0D90  01D4               	clrf	??_modbus_response_write_single_register+1
  7671  0D91  0853               	movf	??_modbus_response_write_single_register,w
  7672  0D92  00D8               	movwf	modbus_response_write_single_register@t16
  7673  0D93  0854               	movf	??_modbus_response_write_single_register+1,w
  7674  0D94  00D9               	movwf	modbus_response_write_single_register@t16+1
  7675                           
  7676                           ;modbus.c: 138: t16<<=8;
  7677  0D95  3008               	movlw	8
  7678  0D96                     u4305:	
  7679  0D96  35D8               	lslf	modbus_response_write_single_register@t16,f
  7680  0D97  0DD9               	rlf	modbus_response_write_single_register@t16+1,f
  7681  0D98  0B89               	decfsz	9,f
  7682  0D99  2D96               	goto	u4305
  7683                           
  7684                           ;modbus.c: 139: t16 |= rbuf[5];
  7685  0D9A  085C               	movf	modbus_response_write_single_register@rbuf,w
  7686  0D9B  3E05               	addlw	5
  7687  0D9C  0086               	movwf	6
  7688  0D9D  3001               	movlw	1	; select bank2/3
  7689  0D9E  0087               	movwf	7
  7690  0D9F  0801               	movf	1,w
  7691  0DA0  00D3               	movwf	??_modbus_response_write_single_register
  7692  0DA1  01D4               	clrf	??_modbus_response_write_single_register+1
  7693  0DA2  0853               	movf	??_modbus_response_write_single_register,w
  7694  0DA3  04D8               	iorwf	modbus_response_write_single_register@t16,f
  7695  0DA4  0854               	movf	??_modbus_response_write_single_register+1,w
  7696  0DA5  04D9               	iorwf	modbus_response_write_single_register@t16+1,f
  7697                           
  7698                           ;modbus.c: 140: sysData.calibVoMV[startAddr>>1]=t16;
  7699  0DA6  085E               	movf	modbus_response_write_single_register@startAddr+1,w
  7700  0DA7  00D4               	movwf	??_modbus_response_write_single_register+1
  7701  0DA8  085D               	movf	modbus_response_write_single_register@startAddr,w
  7702  0DA9  00D3               	movwf	??_modbus_response_write_single_register
  7703  0DAA  36D4               	lsrf	??_modbus_response_write_single_register+1,f
  7704  0DAB  0CD3               	rrf	??_modbus_response_write_single_register,f
  7705  0DAC  35D3               	lslf	??_modbus_response_write_single_register,f
  7706  0DAD  0DD4               	rlf	??_modbus_response_write_single_register+1,f
  7707  0DAE  30A2               	movlw	162
  7708  0DAF  00D5               	movwf	??_modbus_response_write_single_register+2
  7709  0DB0  3023               	movlw	35
  7710  0DB1  00D6               	movwf	??_modbus_response_write_single_register+3
  7711  0DB2  0853               	movf	??_modbus_response_write_single_register,w
  7712  0DB3  0755               	addwf	??_modbus_response_write_single_register+2,w
  7713  0DB4  0086               	movwf	6
  7714  0DB5  0854               	movf	??_modbus_response_write_single_register+1,w
  7715  0DB6  3D56               	addwfc	??_modbus_response_write_single_register+3,w
  7716  0DB7  0087               	movwf	7
  7717  0DB8  0858               	movf	modbus_response_write_single_register@t16,w
  7718  0DB9  3FC0               	movwi [0]fsr1
  7719  0DBA  0859               	movf	modbus_response_write_single_register@t16+1,w
  7720  0DBB  3FC1               	movwi [1]fsr1
  7721                           
  7722                           ;modbus.c: 141: sysData.calibRsAdc[startAddr>>1]=rsLoAvg;
  7723  0DBC  085E               	movf	modbus_response_write_single_register@startAddr+1,w
  7724  0DBD  00D4               	movwf	??_modbus_response_write_single_register+1
  7725  0DBE  085D               	movf	modbus_response_write_single_register@startAddr,w
  7726  0DBF  00D3               	movwf	??_modbus_response_write_single_register
  7727  0DC0  36D4               	lsrf	??_modbus_response_write_single_register+1,f
  7728  0DC1  0CD3               	rrf	??_modbus_response_write_single_register,f
  7729  0DC2  35D3               	lslf	??_modbus_response_write_single_register,f
  7730  0DC3  0DD4               	rlf	??_modbus_response_write_single_register+1,f
  7731  0DC4  3066               	movlw	102
  7732  0DC5  00D5               	movwf	??_modbus_response_write_single_register+2
  7733  0DC6  3023               	movlw	35
  7734  0DC7  00D6               	movwf	??_modbus_response_write_single_register+3
  7735  0DC8  0853               	movf	??_modbus_response_write_single_register,w
  7736  0DC9  0755               	addwf	??_modbus_response_write_single_register+2,w
  7737  0DCA  0086               	movwf	6
  7738  0DCB  0854               	movf	??_modbus_response_write_single_register+1,w
  7739  0DCC  3D56               	addwfc	??_modbus_response_write_single_register+3,w
  7740  0DCD  0087               	movwf	7
  7741  0DCE  082C               	movf	_rsLoAvg,w
  7742  0DCF  3FC0               	movwi [0]fsr1
  7743  0DD0  082D               	movf	_rsLoAvg+1,w
  7744  0DD1  3FC1               	movwi [1]fsr1
  7745                           
  7746                           ;modbus.c: 143: if(rbuf[1]==0x26){
  7747  0DD2  0A5C               	incf	modbus_response_write_single_register@rbuf,w
  7748  0DD3  0086               	movwf	6
  7749  0DD4  3001               	movlw	1	; select bank2/3
  7750  0DD5  0087               	movwf	7
  7751  0DD6  3026               	movlw	38
  7752  0DD7  0601               	xorwf	1,w
  7753  0DD8  1D03               	btfss	3,2
  7754  0DD9  2E17               	goto	l828
  7755                           
  7756                           ;modbus.c: 144: for(i=(startAddr>>1)+1;i<30;i++){
  7757  0DDA  085E               	movf	modbus_response_write_single_register@startAddr+1,w
  7758  0DDB  00D4               	movwf	??_modbus_response_write_single_register+1
  7759  0DDC  085D               	movf	modbus_response_write_single_register@startAddr,w
  7760  0DDD  00D3               	movwf	??_modbus_response_write_single_register
  7761  0DDE  36D4               	lsrf	??_modbus_response_write_single_register+1,f
  7762  0DDF  0CD3               	rrf	??_modbus_response_write_single_register,f
  7763  0DE0  0853               	movf	??_modbus_response_write_single_register,w
  7764  0DE1  3E01               	addlw	1
  7765  0DE2  00D5               	movwf	??_modbus_response_write_single_register+2
  7766  0DE3  0855               	movf	??_modbus_response_write_single_register+2,w
  7767  0DE4  00DA               	movwf	modbus_response_write_single_register@i
  7768  0DE5  301E               	movlw	30
  7769  0DE6  025A               	subwf	modbus_response_write_single_register@i,w
  7770  0DE7  1803               	btfsc	3,0
  7771  0DE8  2E17               	goto	l828
  7772  0DE9                     l4931:	
  7773                           
  7774                           ;modbus.c: 145: sysData.calibVoMV[i]=t16;
  7775  0DE9  085A               	movf	modbus_response_write_single_register@i,w
  7776  0DEA  00D3               	movwf	??_modbus_response_write_single_register
  7777  0DEB  01D4               	clrf	??_modbus_response_write_single_register+1
  7778  0DEC  35D3               	lslf	??_modbus_response_write_single_register,f
  7779  0DED  0DD4               	rlf	??_modbus_response_write_single_register+1,f
  7780  0DEE  30A2               	movlw	162
  7781  0DEF  00D5               	movwf	??_modbus_response_write_single_register+2
  7782  0DF0  3023               	movlw	35
  7783  0DF1  00D6               	movwf	??_modbus_response_write_single_register+3
  7784  0DF2  0853               	movf	??_modbus_response_write_single_register,w
  7785  0DF3  0755               	addwf	??_modbus_response_write_single_register+2,w
  7786  0DF4  0086               	movwf	6
  7787  0DF5  0854               	movf	??_modbus_response_write_single_register+1,w
  7788  0DF6  3D56               	addwfc	??_modbus_response_write_single_register+3,w
  7789  0DF7  0087               	movwf	7
  7790  0DF8  0858               	movf	modbus_response_write_single_register@t16,w
  7791  0DF9  3FC0               	movwi [0]fsr1
  7792  0DFA  0859               	movf	modbus_response_write_single_register@t16+1,w
  7793  0DFB  3FC1               	movwi [1]fsr1
  7794                           
  7795                           ;modbus.c: 146: sysData.calibRsAdc[i]=rsLoAvg;
  7796  0DFC  085A               	movf	modbus_response_write_single_register@i,w
  7797  0DFD  00D3               	movwf	??_modbus_response_write_single_register
  7798  0DFE  01D4               	clrf	??_modbus_response_write_single_register+1
  7799  0DFF  35D3               	lslf	??_modbus_response_write_single_register,f
  7800  0E00  0DD4               	rlf	??_modbus_response_write_single_register+1,f
  7801  0E01  3066               	movlw	102
  7802  0E02  00D5               	movwf	??_modbus_response_write_single_register+2
  7803  0E03  3023               	movlw	35
  7804  0E04  00D6               	movwf	??_modbus_response_write_single_register+3
  7805  0E05  0853               	movf	??_modbus_response_write_single_register,w
  7806  0E06  0755               	addwf	??_modbus_response_write_single_register+2,w
  7807  0E07  0086               	movwf	6
  7808  0E08  0854               	movf	??_modbus_response_write_single_register+1,w
  7809  0E09  3D56               	addwfc	??_modbus_response_write_single_register+3,w
  7810  0E0A  0087               	movwf	7
  7811  0E0B  082C               	movf	_rsLoAvg,w
  7812  0E0C  3FC0               	movwi [0]fsr1
  7813  0E0D  082D               	movf	_rsLoAvg+1,w
  7814  0E0E  3FC1               	movwi [1]fsr1
  7815  0E0F  3001               	movlw	1
  7816  0E10  00D3               	movwf	??_modbus_response_write_single_register
  7817  0E11  0853               	movf	??_modbus_response_write_single_register,w
  7818  0E12  07DA               	addwf	modbus_response_write_single_register@i,f
  7819  0E13  301E               	movlw	30
  7820  0E14  025A               	subwf	modbus_response_write_single_register@i,w
  7821  0E15  1C03               	skipc
  7822  0E16  2DE9               	goto	l4931
  7823  0E17                     l828:	
  7824                           
  7825                           ;modbus.c: 147: };modbus.c: 148: };modbus.c: 149: fiSave=1;
  7826  0E17  01D7               	clrf	modbus_response_write_single_register@fiSave
  7827  0E18  0AD7               	incf	modbus_response_write_single_register@fiSave,f
  7828  0E19                     l4937:	
  7829                           ;modbus.c: 153: return;
  7830                           
  7831                           ;modbus.c: 150: };modbus.c: 151: }else{
  7832                           
  7833                           
  7834                           ;modbus.c: 154: };modbus.c: 155: if(fiSave)sys_data_save();
  7835  0E19  0857               	movf	modbus_response_write_single_register@fiSave,w
  7836  0E1A  1903               	btfsc	3,2
  7837  0E1B  2E1F               	goto	l4941
  7838  0E1C  319E  264F  318C   	fcall	_sys_data_save
  7839  0E1F                     l4941:	
  7840                           
  7841                           ;modbus.c: 156: if(pmdbs->addr==0)return;
  7842  0E1F  0020               	movlb	0	; select bank0
  7843  0E20  085B               	movf	modbus_response_write_single_register@pmdbs,w
  7844  0E21  0086               	movwf	6
  7845  0E22  3001               	movlw	1	; select bank2/3
  7846  0E23  0087               	movwf	7
  7847  0E24  0801               	movf	1,w
  7848  0E25  1903               	btfsc	3,2
  7849  0E26  0008               	return
  7850                           
  7851                           ;modbus.c: 157: rbuf[0]=sysData.id;
  7852  0E27  305C               	movlw	92
  7853  0E28  0086               	movwf	6
  7854  0E29  3023               	movlw	35
  7855  0E2A  0087               	movwf	7
  7856  0E2B  3142               	addfsr 1,2
  7857  0E2C  0801               	movf	1,w
  7858  0E2D  00D3               	movwf	??_modbus_response_write_single_register
  7859  0E2E  085C               	movf	modbus_response_write_single_register@rbuf,w
  7860  0E2F  0086               	movwf	6
  7861  0E30  3001               	movlw	1	; select bank2/3
  7862  0E31  0087               	movwf	7
  7863  0E32  0853               	movf	??_modbus_response_write_single_register,w
  7864  0E33  0081               	movwf	1
  7865                           
  7866                           ;modbus.c: 158: crc_append(rbuf,6);
  7867  0E34  085C               	movf	modbus_response_write_single_register@rbuf,w
  7868  0E35  00CD               	movwf	crc_append@message
  7869  0E36  3001               	movlw	1
  7870  0E37  00CE               	movwf	crc_append@message+1
  7871  0E38  3006               	movlw	6
  7872  0E39  00CF               	movwf	crc_append@n
  7873  0E3A  3000               	movlw	0
  7874  0E3B  00D0               	movwf	crc_append@n+1
  7875  0E3C  319D  2581  318C   	fcall	_crc_append
  7876                           
  7877                           ;modbus.c: 159: uart_send_len(rbuf,8);
  7878  0E3F  3008               	movlw	8
  7879  0E40  0020               	movlb	0	; select bank0
  7880  0E41  00D3               	movwf	??_modbus_response_write_single_register
  7881  0E42  0853               	movf	??_modbus_response_write_single_register,w
  7882  0E43  00F8               	movwf	uart_send_len@len
  7883  0E44  085C               	movf	modbus_response_write_single_register@rbuf,w
  7884  0E45  319E  2686         	fcall	_uart_send_len
  7885  0E47  0008               	return
  7886  0E48                     __end_of_modbus_response_write_single_register:	
  7887                           
  7888                           	psect	text15
  7889  1288                     __ptext15:	
  7890 ;; *************** function _modbus_response_write_mult_register *****************
  7891 ;; Defined at:
  7892 ;;		line 162 in file "src/api/modbus.c"
  7893 ;; Parameters:    Size  Location     Type
  7894 ;;  rbuf            1    wreg     PTR unsigned char 
  7895 ;;		 -> modbusBuf(32), 
  7896 ;; Auto vars:     Size  Location     Type
  7897 ;;  rbuf            1   15[BANK0 ] PTR unsigned char 
  7898 ;;		 -> modbusBuf(32), 
  7899 ;;  stb             1   16[BANK0 ] PTR struct .
  7900 ;;		 -> modbusBuf(32), 
  7901 ;;  len             1   14[BANK0 ] unsigned char 
  7902 ;;  startAddr       1   13[BANK0 ] unsigned char 
  7903 ;; Return value:  Size  Location     Type
  7904 ;;                  1    wreg      void 
  7905 ;; Registers used:
  7906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7907 ;; Tracked objects:
  7908 ;;		On entry : 0/0
  7909 ;;		On exit  : 0/0
  7910 ;;		Unchanged: 0/0
  7911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7913 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7914 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7915 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7916 ;;Total ram usage:        5 bytes
  7917 ;; Hardware stack levels used:    1
  7918 ;; Hardware stack levels required when called:    4
  7919 ;; This function calls:
  7920 ;;		_crc_append
  7921 ;;		_sys_data_save
  7922 ;;		_uart_send_len
  7923 ;; This function is called by:
  7924 ;;		_modbus_response_process
  7925 ;; This function uses a non-reentrant model
  7926 ;;
  7927                           
  7928                           
  7929                           ;psect for function _modbus_response_write_mult_register
  7930  1288                     _modbus_response_write_mult_register:	
  7931                           
  7932                           ;incstack = 0
  7933                           ; Regs used in _modbus_response_write_mult_register: [wreg-fsr1h+status,2+status,0+pclat
      +                          h+cstack]
  7934                           ;modbus_response_write_mult_register@rbuf stored from wreg
  7935  1288  0020               	movlb	0	; select bank0
  7936  1289  00D6               	movwf	modbus_response_write_mult_register@rbuf
  7937                           
  7938                           ;modbus.c: 164: uint8_t startAddr,len;;modbus.c: 166: st_modbusWriteMultReg_t* stb=(st_m
      +                          odbusWriteMultReg_t*)rbuf;
  7939  128A  0856               	movf	modbus_response_write_mult_register@rbuf,w
  7940  128B  00D3               	movwf	??_modbus_response_write_mult_register
  7941  128C  0853               	movf	??_modbus_response_write_mult_register,w
  7942  128D  00D7               	movwf	modbus_response_write_mult_register@stb
  7943                           
  7944                           ;modbus.c: 167: if(stb->addr!=sysData.id || stb->addr==0)return;
  7945  128E  305C               	movlw	92
  7946  128F  0086               	movwf	6
  7947  1290  3023               	movlw	35
  7948  1291  0087               	movwf	7
  7949  1292  3142               	addfsr 1,2
  7950  1293  0857               	movf	modbus_response_write_mult_register@stb,w
  7951  1294  0084               	movwf	4
  7952  1295  3001               	movlw	1	; select bank2/3
  7953  1296  0085               	movwf	5
  7954  1297  0800               	movf	0,w
  7955  1298  0601               	xorwf	1,w
  7956  1299  1D03               	skipz
  7957  129A  0008               	return
  7958  129B  0857               	movf	modbus_response_write_mult_register@stb,w
  7959  129C  0086               	movwf	6
  7960  129D  3001               	movlw	1	; select bank2/3
  7961  129E  0087               	movwf	7
  7962  129F  0801               	movf	1,w
  7963  12A0  1903               	btfsc	3,2
  7964  12A1  0008               	return
  7965                           
  7966                           ;modbus.c: 168: startAddr=stb->addr_lo;
  7967  12A2  0857               	movf	modbus_response_write_mult_register@stb,w
  7968  12A3  0086               	movwf	6
  7969  12A4  3001               	movlw	1	; select bank2/3
  7970  12A5  0087               	movwf	7
  7971  12A6  3001               	movlw	1	; select bank2/3
  7972  12A7  3F43               	moviw [3]fsr1
  7973  12A8  00D4               	movwf	modbus_response_write_mult_register@startAddr
  7974                           
  7975                           ;modbus.c: 169: len=stb->len_lo;
  7976  12A9  0857               	movf	modbus_response_write_mult_register@stb,w
  7977  12AA  0086               	movwf	6
  7978  12AB  3001               	movlw	1	; select bank2/3
  7979  12AC  0087               	movwf	7
  7980  12AD  3001               	movlw	1	; select bank2/3
  7981  12AE  3F45               	moviw [5]fsr1
  7982  12AF  00D5               	movwf	modbus_response_write_mult_register@len
  7983                           
  7984                           ;modbus.c: 170: if(len!=3)return ;
  7985  12B0  3003               	movlw	3
  7986  12B1  0655               	xorwf	modbus_response_write_mult_register@len,w
  7987  12B2  1D03               	btfss	3,2
  7988  12B3  0008               	return
  7989                           
  7990                           ;modbus.c: 171: if(startAddr!=4)return;
  7991  12B4  3004               	movlw	4
  7992  12B5  0654               	xorwf	modbus_response_write_mult_register@startAddr,w
  7993  12B6  1D03               	btfss	3,2
  7994  12B7  0008               	return
  7995                           
  7996                           ;modbus.c: 173: sysData.pidKp=(stb->data[0]<<8)|(stb->data[1]);
  7997  12B8  0857               	movf	modbus_response_write_mult_register@stb,w
  7998  12B9  3E06               	addlw	6
  7999  12BA  0084               	movwf	4
  8000  12BB  3001               	movlw	1	; select bank2/3
  8001  12BC  0085               	movwf	5
  8002  12BD  0800               	movf	0,w
  8003  12BE  00D3               	movwf	??_modbus_response_write_mult_register
  8004  12BF  0857               	movf	modbus_response_write_mult_register@stb,w
  8005  12C0  3E07               	addlw	7
  8006  12C1  0084               	movwf	4
  8007  12C2  3001               	movlw	1	; select bank2/3
  8008  12C3  0085               	movwf	5
  8009  12C4  305C               	movlw	92
  8010  12C5  0086               	movwf	6
  8011  12C6  3023               	movlw	35
  8012  12C7  0087               	movwf	7
  8013  12C8  3144               	addfsr 1,4
  8014  12C9  0800               	movf	0,w
  8015  12CA  3FC0               	movwi [0]fsr1
  8016  12CB  0853               	movf	??_modbus_response_write_mult_register,w
  8017  12CC  3FC1               	movwi [1]fsr1
  8018                           
  8019                           ;modbus.c: 174: sysData.pidTi=(stb->data[2]<<8)|(stb->data[3]);
  8020  12CD  0857               	movf	modbus_response_write_mult_register@stb,w
  8021  12CE  3E08               	addlw	8
  8022  12CF  0084               	movwf	4
  8023  12D0  3001               	movlw	1	; select bank2/3
  8024  12D1  0085               	movwf	5
  8025  12D2  0800               	movf	0,w
  8026  12D3  00D3               	movwf	??_modbus_response_write_mult_register
  8027  12D4  0857               	movf	modbus_response_write_mult_register@stb,w
  8028  12D5  3E09               	addlw	9
  8029  12D6  0084               	movwf	4
  8030  12D7  3001               	movlw	1	; select bank2/3
  8031  12D8  0085               	movwf	5
  8032  12D9  305C               	movlw	92
  8033  12DA  0086               	movwf	6
  8034  12DB  3023               	movlw	35
  8035  12DC  0087               	movwf	7
  8036  12DD  3146               	addfsr 1,6
  8037  12DE  0800               	movf	0,w
  8038  12DF  3FC0               	movwi [0]fsr1
  8039  12E0  0853               	movf	??_modbus_response_write_mult_register,w
  8040  12E1  3FC1               	movwi [1]fsr1
  8041                           
  8042                           ;modbus.c: 176: sys_data_save();
  8043  12E2  319E  264F  3192   	fcall	_sys_data_save
  8044                           
  8045                           ;modbus.c: 177: crc_append(rbuf,sizeof(st_modbusWriteMultReg_t)-2);
  8046  12E5  0020               	movlb	0	; select bank0
  8047  12E6  0856               	movf	modbus_response_write_mult_register@rbuf,w
  8048  12E7  00CD               	movwf	crc_append@message
  8049  12E8  3001               	movlw	1
  8050  12E9  00CE               	movwf	crc_append@message+1
  8051  12EA  3006               	movlw	6
  8052  12EB  00CF               	movwf	crc_append@n
  8053  12EC  3000               	movlw	0
  8054  12ED  00D0               	movwf	crc_append@n+1
  8055  12EE  319D  2581  3192   	fcall	_crc_append
  8056                           
  8057                           ;modbus.c: 178: uart_send_len(rbuf,sizeof(st_modbusWriteMultReg_t));
  8058  12F1  3008               	movlw	8
  8059  12F2  0020               	movlb	0	; select bank0
  8060  12F3  00D3               	movwf	??_modbus_response_write_mult_register
  8061  12F4  0853               	movf	??_modbus_response_write_mult_register,w
  8062  12F5  00F8               	movwf	uart_send_len@len
  8063  12F6  0856               	movf	modbus_response_write_mult_register@rbuf,w
  8064  12F7  319E  2686         	fcall	_uart_send_len
  8065  12F9  0008               	return
  8066  12FA                     __end_of_modbus_response_write_mult_register:	
  8067                           
  8068                           	psect	text16
  8069  1E4F                     __ptext16:	
  8070 ;; *************** function _sys_data_save *****************
  8071 ;; Defined at:
  8072 ;;		line 95 in file "src/api/sysData.c"
  8073 ;; Parameters:    Size  Location     Type
  8074 ;;		None
  8075 ;; Auto vars:     Size  Location     Type
  8076 ;;		None
  8077 ;; Return value:  Size  Location     Type
  8078 ;;                  1    wreg      void 
  8079 ;; Registers used:
  8080 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8081 ;; Tracked objects:
  8082 ;;		On entry : 0/0
  8083 ;;		On exit  : 0/0
  8084 ;;		Unchanged: 0/0
  8085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8090 ;;Total ram usage:        0 bytes
  8091 ;; Hardware stack levels used:    1
  8092 ;; Hardware stack levels required when called:    3
  8093 ;; This function calls:
  8094 ;;		_crc_append
  8095 ;;		_my_flash_read_system_erase
  8096 ;;		_my_flash_system_write
  8097 ;; This function is called by:
  8098 ;;		_sys_data_init
  8099 ;;		_modbus_response_write_single_register
  8100 ;;		_modbus_response_write_mult_register
  8101 ;; This function uses a non-reentrant model
  8102 ;;
  8103                           
  8104                           
  8105                           ;psect for function _sys_data_save
  8106  1E4F                     _sys_data_save:	
  8107                           
  8108                           ;sysData.c: 97: crc_append((uint8_t*)&sysData,sizeof(sysData_t)-2);
  8109                           
  8110                           ;incstack = 0
  8111                           ; Regs used in _sys_data_save: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8112  1E4F  305C               	movlw	92
  8113  1E50  0020               	movlb	0	; select bank0
  8114  1E51  00CD               	movwf	crc_append@message
  8115  1E52  3023               	movlw	35
  8116  1E53  00CE               	movwf	crc_append@message+1
  8117  1E54  3082               	movlw	130
  8118  1E55  00CF               	movwf	crc_append@n
  8119  1E56  3000               	movlw	0
  8120  1E57  00D0               	movwf	crc_append@n+1
  8121  1E58  319D  2581  319E   	fcall	_crc_append
  8122                           
  8123                           ;sysData.c: 98: my_flash_read_system_erase();
  8124  1E5B  319D  255E  319E   	fcall	_my_flash_read_system_erase
  8125                           
  8126                           ;sysData.c: 99: my_flash_system_write((uint8_t*)&sysData,sizeof(sysData_t));
  8127  1E5E  305C               	movlw	92
  8128  1E5F  00F1               	movwf	my_flash_system_write@buf
  8129  1E60  3023               	movlw	35
  8130  1E61  00F2               	movwf	my_flash_system_write@buf+1
  8131  1E62  3084               	movlw	132
  8132  1E63  00F3               	movwf	my_flash_system_write@len
  8133  1E64  3000               	movlw	0
  8134  1E65  00F4               	movwf	my_flash_system_write@len+1
  8135  1E66  3193  237C         	fcall	_my_flash_system_write
  8136                           
  8137                           ;sysData.c: 100: PidKp=sysData.pidKp;
  8138  1E68  305C               	movlw	92
  8139  1E69  0086               	movwf	6
  8140  1E6A  3023               	movlw	35
  8141  1E6B  0087               	movwf	7
  8142  1E6C  3144               	addfsr 1,4
  8143  1E6D  3F40               	moviw [0]fsr1
  8144  1E6E  0020               	movlb	0	; select bank0
  8145  1E6F  00B0               	movwf	_PidKp
  8146  1E70  3F41               	moviw [1]fsr1
  8147  1E71  00B1               	movwf	_PidKp+1
  8148                           
  8149                           ;sysData.c: 101: PidTi=sysData.pidTi;
  8150  1E72  305C               	movlw	92
  8151  1E73  0086               	movwf	6
  8152  1E74  3023               	movlw	35
  8153  1E75  0087               	movwf	7
  8154  1E76  3146               	addfsr 1,6
  8155  1E77  3F40               	moviw [0]fsr1
  8156  1E78  0021               	movlb	1	; select bank1
  8157  1E79  00CE               	movwf	_PidTi^(0+128)
  8158  1E7A  3F41               	moviw [1]fsr1
  8159  1E7B  00CF               	movwf	(_PidTi+1)^(0+128)
  8160                           
  8161                           ;sysData.c: 102: PidTd=sysData.pidTd;;
  8162  1E7C  305C               	movlw	92
  8163  1E7D  0086               	movwf	6
  8164  1E7E  3023               	movlw	35
  8165  1E7F  0087               	movwf	7
  8166  1E80  3148               	addfsr 1,8
  8167  1E81  3F40               	moviw [0]fsr1
  8168  1E82  00CC               	movwf	_PidTd^(0+128)
  8169  1E83  3F41               	moviw [1]fsr1
  8170  1E84  00CD               	movwf	(_PidTd+1)^(0+128)
  8171  1E85  0008               	return
  8172  1E86                     __end_of_sys_data_save:	
  8173                           
  8174                           	psect	text17
  8175  137C                     __ptext17:	
  8176 ;; *************** function _my_flash_system_write *****************
  8177 ;; Defined at:
  8178 ;;		line 47 in file "src/api/sysData.c"
  8179 ;; Parameters:    Size  Location     Type
  8180 ;;  buf             2    1[COMMON] PTR unsigned char 
  8181 ;;		 -> sysData(132), 
  8182 ;;  len             2    3[COMMON] unsigned int 
  8183 ;; Auto vars:     Size  Location     Type
  8184 ;;  flashAddr       2    7[BANK0 ] unsigned int 
  8185 ;;  loc             2    5[BANK0 ] unsigned int 
  8186 ;;  blocNum         2    3[BANK0 ] unsigned int 
  8187 ;;  j               2    0[BANK0 ] unsigned int 
  8188 ;;  i               1    9[BANK0 ] unsigned char 
  8189 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
  8190 ;; Return value:  Size  Location     Type
  8191 ;;                  2    1[COMMON] unsigned int 
  8192 ;; Registers used:
  8193 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8194 ;; Tracked objects:
  8195 ;;		On entry : 0/0
  8196 ;;		On exit  : 0/0
  8197 ;;		Unchanged: 0/0
  8198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8199 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8200 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8201 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8202 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8203 ;;Total ram usage:       16 bytes
  8204 ;; Hardware stack levels used:    1
  8205 ;; Hardware stack levels required when called:    1
  8206 ;; This function calls:
  8207 ;;		Nothing
  8208 ;; This function is called by:
  8209 ;;		_sys_data_save
  8210 ;; This function uses a non-reentrant model
  8211 ;;
  8212                           
  8213                           
  8214                           ;psect for function _my_flash_system_write
  8215  137C                     _my_flash_system_write:	
  8216                           
  8217                           ;sysData.c: 49: uint16_t blocNum=0;
  8218                           
  8219                           ;incstack = 0
  8220                           ; Regs used in _my_flash_system_write: [wreg+fsr1l+fsr1h+status,2+status,0]
  8221  137C  0020               	movlb	0	; select bank0
  8222  137D  01CA               	clrf	my_flash_system_write@blocNum
  8223  137E  01CB               	clrf	my_flash_system_write@blocNum+1
  8224                           
  8225                           ;sysData.c: 50: uint16_t loc,j;;sysData.c: 51: uint16_t flashAddr=0x1f00;
  8226  137F  3000               	movlw	0
  8227  1380  00CE               	movwf	my_flash_system_write@flashAddr
  8228  1381  301F               	movlw	31
  8229  1382  00CF               	movwf	my_flash_system_write@flashAddr+1
  8230                           
  8231                           ;sysData.c: 52: uint8_t GIEBitValue=INTCONbits.GIE;
  8232  1383  3000               	movlw	0
  8233  1384  1B8B               	btfsc	11,7	;volatile
  8234  1385  3001               	movlw	1
  8235  1386  00C9               	movwf	my_flash_system_write@GIEBitValue
  8236                           
  8237                           ;sysData.c: 53: uint8_t i=0;
  8238  1387  01D0               	clrf	my_flash_system_write@i
  8239                           
  8240                           ;sysData.c: 54: blocNum=len/32;
  8241  1388  0874               	movf	my_flash_system_write@len+1,w
  8242  1389  00F6               	movwf	??_my_flash_system_write+1
  8243  138A  0873               	movf	my_flash_system_write@len,w
  8244  138B  00F5               	movwf	??_my_flash_system_write
  8245  138C  3005               	movlw	5
  8246  138D                     u2225:	
  8247  138D  36F6               	lsrf	??_my_flash_system_write+1,f
  8248  138E  0CF5               	rrf	??_my_flash_system_write,f
  8249  138F  0B89               	decfsz	9,f
  8250  1390  2B8D               	goto	u2225
  8251  1391  0875               	movf	??_my_flash_system_write,w
  8252  1392  00CA               	movwf	my_flash_system_write@blocNum
  8253  1393  0876               	movf	??_my_flash_system_write+1,w
  8254  1394  00CB               	movwf	my_flash_system_write@blocNum+1
  8255                           
  8256                           ;sysData.c: 55: if(len%32)blocNum++;
  8257  1395  301F               	movlw	31
  8258  1396  0573               	andwf	my_flash_system_write@len,w
  8259  1397  00F5               	movwf	??_my_flash_system_write
  8260  1398  3000               	movlw	0
  8261  1399  0574               	andwf	my_flash_system_write@len+1,w
  8262  139A  00F6               	movwf	??_my_flash_system_write+1
  8263  139B  0875               	movf	??_my_flash_system_write,w
  8264  139C  0476               	iorwf	??_my_flash_system_write+1,w
  8265  139D  1903               	btfsc	3,2
  8266  139E  2BA3               	goto	l3405
  8267  139F  3001               	movlw	1
  8268  13A0  07CA               	addwf	my_flash_system_write@blocNum,f
  8269  13A1  3000               	movlw	0
  8270  13A2  3DCB               	addwfc	my_flash_system_write@blocNum+1,f
  8271  13A3                     l3405:	
  8272                           
  8273                           ;sysData.c: 57: INTCONbits.GIE = 0;
  8274  13A3  138B               	bcf	11,7	;volatile
  8275                           
  8276                           ;sysData.c: 58: loc=0;
  8277  13A4  01CC               	clrf	my_flash_system_write@loc
  8278  13A5  01CD               	clrf	my_flash_system_write@loc+1
  8279                           
  8280                           ;sysData.c: 59: for(j=0;j<blocNum;j++){
  8281  13A6  01C7               	clrf	my_flash_system_write@j
  8282  13A7  01C8               	clrf	my_flash_system_write@j+1
  8283  13A8                     l738:	
  8284  13A8  084B               	movf	my_flash_system_write@blocNum+1,w
  8285  13A9  0248               	subwf	my_flash_system_write@j+1,w
  8286  13AA  1D03               	skipz
  8287  13AB  2BAE               	goto	u2285
  8288  13AC  084A               	movf	my_flash_system_write@blocNum,w
  8289  13AD  0247               	subwf	my_flash_system_write@j,w
  8290  13AE                     u2285:	
  8291  13AE  1803               	btfsc	3,0
  8292  13AF  2C04               	goto	l3449
  8293                           
  8294                           ;sysData.c: 60: PMCON1bits.CFGS = 0;
  8295  13B0  0023               	movlb	3	; select bank3
  8296  13B1  1315               	bcf	21,6	;volatile
  8297                           
  8298                           ;sysData.c: 61: PMCON1bits.WREN = 1;
  8299  13B2  1515               	bsf	21,2	;volatile
  8300                           
  8301                           ;sysData.c: 62: PMCON1bits.LWLO = 1;
  8302  13B3  1695               	bsf	21,5	;volatile
  8303                           
  8304                           ;sysData.c: 64: for(i=0;i<32;i++){
  8305  13B4  0020               	movlb	0	; select bank0
  8306  13B5  01D0               	clrf	my_flash_system_write@i
  8307  13B6  3020               	movlw	32
  8308  13B7  0250               	subwf	my_flash_system_write@i,w
  8309  13B8  1803               	btfsc	3,0
  8310  13B9  2BFC               	goto	l741
  8311  13BA                     l3417:	
  8312                           
  8313                           ;sysData.c: 66: PMADRL = (flashAddr & 0xFF);
  8314  13BA  084E               	movf	my_flash_system_write@flashAddr,w
  8315  13BB  0023               	movlb	3	; select bank3
  8316  13BC  0091               	movwf	17	;volatile
  8317                           
  8318                           ;sysData.c: 68: PMADRH = ((flashAddr & 0xFF00) >> 8);
  8319  13BD  0020               	movlb	0	; select bank0
  8320  13BE  084F               	movf	my_flash_system_write@flashAddr+1,w
  8321  13BF  0023               	movlb	3	; select bank3
  8322  13C0  0092               	movwf	18	;volatile
  8323                           
  8324                           ;sysData.c: 71: if(loc<len){
  8325  13C1  0874               	movf	my_flash_system_write@len+1,w
  8326  13C2  0020               	movlb	0	; select bank0
  8327  13C3  024D               	subwf	my_flash_system_write@loc+1,w
  8328  13C4  1D03               	skipz
  8329  13C5  2BC8               	goto	u2255
  8330  13C6  0873               	movf	my_flash_system_write@len,w
  8331  13C7  024C               	subwf	my_flash_system_write@loc,w
  8332  13C8                     u2255:	
  8333  13C8  1803               	skipnc
  8334  13C9  2BD4               	goto	l3425
  8335                           
  8336                           ;sysData.c: 72: PMDATL = buf[loc];
  8337  13CA  084C               	movf	my_flash_system_write@loc,w
  8338  13CB  0771               	addwf	my_flash_system_write@buf,w
  8339  13CC  0086               	movwf	6
  8340  13CD  084D               	movf	my_flash_system_write@loc+1,w
  8341  13CE  3D72               	addwfc	my_flash_system_write@buf+1,w
  8342  13CF  0087               	movwf	7
  8343  13D0  0801               	movf	1,w
  8344  13D1  0023               	movlb	3	; select bank3
  8345  13D2  0093               	movwf	19	;volatile
  8346                           
  8347                           ;sysData.c: 73: }else{
  8348  13D3  2BD6               	goto	l3427
  8349  13D4                     l3425:	
  8350                           
  8351                           ;sysData.c: 74: PMDATL = 0x00;
  8352  13D4  0023               	movlb	3	; select bank3
  8353  13D5  0193               	clrf	19	;volatile
  8354  13D6                     l3427:	
  8355                           
  8356                           ;sysData.c: 75: };sysData.c: 76: loc++;
  8357  13D6  3001               	movlw	1
  8358  13D7  0020               	movlb	0	; select bank0
  8359  13D8  07CC               	addwf	my_flash_system_write@loc,f
  8360  13D9  3000               	movlw	0
  8361  13DA  3DCD               	addwfc	my_flash_system_write@loc+1,f
  8362                           
  8363                           ;sysData.c: 77: PMDATH = 0x00;
  8364  13DB  0023               	movlb	3	; select bank3
  8365  13DC  0194               	clrf	20	;volatile
  8366                           
  8367                           ;sysData.c: 78: if((i%32) == 32 -1 ){
  8368  13DD  301F               	movlw	31
  8369  13DE  0020               	movlb	0	; select bank0
  8370  13DF  0550               	andwf	my_flash_system_write@i,w
  8371  13E0  00F5               	movwf	??_my_flash_system_write
  8372  13E1  301F               	movlw	31
  8373  13E2  0675               	xorwf	??_my_flash_system_write,w
  8374  13E3  1D03               	btfss	3,2
  8375  13E4  2BE7               	goto	l3435
  8376                           
  8377                           ;sysData.c: 79: PMCON1bits.LWLO = 0;
  8378  13E5  0023               	movlb	3	; select bank3
  8379  13E6  1295               	bcf	21,5	;volatile
  8380  13E7                     l3435:	
  8381                           
  8382                           ;sysData.c: 80: };sysData.c: 82: PMCON2 = 0x55;
  8383  13E7  3055               	movlw	85
  8384  13E8  0023               	movlb	3	; select bank3
  8385  13E9  0096               	movwf	22	;volsfr
  8386                           
  8387                           ;sysData.c: 83: PMCON2 = 0xAA;
  8388  13EA  30AA               	movlw	170
  8389  13EB  0096               	movwf	22	;volsfr
  8390                           
  8391                           ;sysData.c: 84: PMCON1bits.WR = 1;
  8392  13EC  1495               	bsf	21,1	;volatile
  8393                           
  8394                           ;sysData.c: 85: __nop();
  8395  13ED  0000               	nop
  8396                           
  8397                           ;sysData.c: 86: __nop();
  8398  13EE  0000               	nop
  8399                           
  8400                           ;sysData.c: 87: flashAddr++;
  8401  13EF  3001               	movlw	1
  8402  13F0  0020               	movlb	0	; select bank0
  8403  13F1  07CE               	addwf	my_flash_system_write@flashAddr,f
  8404  13F2  3000               	movlw	0
  8405  13F3  3DCF               	addwfc	my_flash_system_write@flashAddr+1,f
  8406  13F4  3001               	movlw	1
  8407  13F5  00F5               	movwf	??_my_flash_system_write
  8408  13F6  0875               	movf	??_my_flash_system_write,w
  8409  13F7  07D0               	addwf	my_flash_system_write@i,f
  8410  13F8  3020               	movlw	32
  8411  13F9  0250               	subwf	my_flash_system_write@i,w
  8412  13FA  1C03               	skipc
  8413  13FB  2BBA               	goto	l3417
  8414  13FC                     l741:	
  8415                           
  8416                           ;sysData.c: 88: };sysData.c: 89: PMCON1bits.WREN = 0;
  8417  13FC  0023               	movlb	3	; select bank3
  8418  13FD  1115               	bcf	21,2	;volatile
  8419  13FE  3001               	movlw	1
  8420  13FF  0020               	movlb	0	; select bank0
  8421  1400  07C7               	addwf	my_flash_system_write@j,f
  8422  1401  3000               	movlw	0
  8423  1402  3DC8               	addwfc	my_flash_system_write@j+1,f
  8424  1403  2BA8               	goto	l738
  8425  1404                     l3449:	
  8426                           
  8427                           ;sysData.c: 90: };sysData.c: 91: INTCONbits.GIE = GIEBitValue;
  8428  1404  0C49               	rrf	my_flash_system_write@GIEBitValue,w
  8429  1405  1C03               	skipc
  8430  1406  138B               	bcf	11,7	;volatile
  8431  1407  1803               	skipnc
  8432  1408  178B               	bsf	11,7	;volatile
  8433  1409  0008               	return
  8434  140A                     __end_of_my_flash_system_write:	
  8435                           ;sysData.c: 93: return 0;;	Return value of _my_flash_system_write is never used
  8436                           
  8437                           
  8438                           	psect	text18
  8439  1D5E                     __ptext18:	
  8440 ;; *************** function _my_flash_read_system_erase *****************
  8441 ;; Defined at:
  8442 ;;		line 9 in file "src/api/sysData.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;		None
  8445 ;; Auto vars:     Size  Location     Type
  8446 ;;		None
  8447 ;; Return value:  Size  Location     Type
  8448 ;;                  1    wreg      void 
  8449 ;; Registers used:
  8450 ;;		wreg, status,2, status,0, pclath, cstack
  8451 ;; Tracked objects:
  8452 ;;		On entry : 0/0
  8453 ;;		On exit  : 0/0
  8454 ;;		Unchanged: 0/0
  8455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8460 ;;Total ram usage:        0 bytes
  8461 ;; Hardware stack levels used:    1
  8462 ;; Hardware stack levels required when called:    2
  8463 ;; This function calls:
  8464 ;;		_FLASH_EraseBlock
  8465 ;; This function is called by:
  8466 ;;		_sys_data_save
  8467 ;; This function uses a non-reentrant model
  8468 ;;
  8469                           
  8470                           
  8471                           ;psect for function _my_flash_read_system_erase
  8472  1D5E                     _my_flash_read_system_erase:	
  8473                           
  8474                           ;sysData.c: 16: FLASH_EraseBlock(0x1f00);
  8475                           
  8476                           ;incstack = 0
  8477                           ; Regs used in _my_flash_read_system_erase: [wreg+status,2+status,0+pclath+cstack]
  8478  1D5E  3000               	movlw	0
  8479  1D5F  00F1               	movwf	FLASH_EraseBlock@startAddr
  8480  1D60  301F               	movlw	31
  8481  1D61  00F2               	movwf	FLASH_EraseBlock@startAddr+1
  8482  1D62  319C  24ED  319D   	fcall	_FLASH_EraseBlock
  8483                           
  8484                           ;sysData.c: 17: FLASH_EraseBlock(0x1f00+32);
  8485  1D65  3020               	movlw	32
  8486  1D66  00F1               	movwf	FLASH_EraseBlock@startAddr
  8487  1D67  301F               	movlw	31
  8488  1D68  00F2               	movwf	FLASH_EraseBlock@startAddr+1
  8489  1D69  319C  24ED  319D   	fcall	_FLASH_EraseBlock
  8490                           
  8491                           ;sysData.c: 18: FLASH_EraseBlock(0x1f00+64);
  8492  1D6C  3040               	movlw	64
  8493  1D6D  00F1               	movwf	FLASH_EraseBlock@startAddr
  8494  1D6E  301F               	movlw	31
  8495  1D6F  00F2               	movwf	FLASH_EraseBlock@startAddr+1
  8496  1D70  319C  24ED  319D   	fcall	_FLASH_EraseBlock
  8497                           
  8498                           ;sysData.c: 19: FLASH_EraseBlock(0x1f00+96);
  8499  1D73  3060               	movlw	96
  8500  1D74  00F1               	movwf	FLASH_EraseBlock@startAddr
  8501  1D75  301F               	movlw	31
  8502  1D76  00F2               	movwf	FLASH_EraseBlock@startAddr+1
  8503  1D77  319C  24ED  319D   	fcall	_FLASH_EraseBlock
  8504                           
  8505                           ;sysData.c: 20: FLASH_EraseBlock(0x1f00+128);
  8506  1D7A  3080               	movlw	128
  8507  1D7B  00F1               	movwf	FLASH_EraseBlock@startAddr
  8508  1D7C  301F               	movlw	31
  8509  1D7D  00F2               	movwf	FLASH_EraseBlock@startAddr+1
  8510  1D7E  319C  24ED         	fcall	_FLASH_EraseBlock
  8511  1D80  0008               	return
  8512  1D81                     __end_of_my_flash_read_system_erase:	
  8513                           
  8514                           	psect	text19
  8515  1CED                     __ptext19:	
  8516 ;; *************** function _FLASH_EraseBlock *****************
  8517 ;; Defined at:
  8518 ;;		line 147 in file "mcc_generated_files/memory.c"
  8519 ;; Parameters:    Size  Location     Type
  8520 ;;  startAddr       2    1[COMMON] unsigned int 
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;  GIEBitValue     1    3[COMMON] unsigned char 
  8523 ;; Return value:  Size  Location     Type
  8524 ;;                  1    wreg      void 
  8525 ;; Registers used:
  8526 ;;		wreg, status,2, status,0
  8527 ;; Tracked objects:
  8528 ;;		On entry : 0/0
  8529 ;;		On exit  : 0/0
  8530 ;;		Unchanged: 0/0
  8531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8533 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8535 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8536 ;;Total ram usage:        3 bytes
  8537 ;; Hardware stack levels used:    1
  8538 ;; Hardware stack levels required when called:    1
  8539 ;; This function calls:
  8540 ;;		Nothing
  8541 ;; This function is called by:
  8542 ;;		_my_flash_read_system_erase
  8543 ;;		_FLASH_WriteBlock
  8544 ;; This function uses a non-reentrant model
  8545 ;;
  8546                           
  8547                           
  8548                           ;psect for function _FLASH_EraseBlock
  8549  1CED                     _FLASH_EraseBlock:	
  8550                           
  8551                           ;memory.c: 149: uint8_t GIEBitValue = INTCONbits.GIE;
  8552                           
  8553                           ;incstack = 0
  8554                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  8555  1CED  3000               	movlw	0
  8556  1CEE  1B8B               	btfsc	11,7	;volatile
  8557  1CEF  3001               	movlw	1
  8558  1CF0  00F3               	movwf	FLASH_EraseBlock@GIEBitValue
  8559                           
  8560                           ;memory.c: 152: INTCONbits.GIE = 0;
  8561  1CF1  138B               	bcf	11,7	;volatile
  8562                           
  8563                           ;memory.c: 154: PMADRL = (startAddr & 0xFF);
  8564  1CF2  0871               	movf	FLASH_EraseBlock@startAddr,w
  8565  1CF3  0023               	movlb	3	; select bank3
  8566  1CF4  0091               	movwf	17	;volatile
  8567                           
  8568                           ;memory.c: 156: PMADRH = ((startAddr & 0xFF00) >> 8);
  8569  1CF5  0872               	movf	FLASH_EraseBlock@startAddr+1,w
  8570  1CF6  0092               	movwf	18	;volatile
  8571                           
  8572                           ;memory.c: 159: PMCON1bits.CFGS = 0;
  8573  1CF7  1315               	bcf	21,6	;volatile
  8574                           
  8575                           ;memory.c: 160: PMCON1bits.FREE = 1;
  8576  1CF8  1615               	bsf	21,4	;volatile
  8577                           
  8578                           ;memory.c: 161: PMCON1bits.WREN = 1;
  8579  1CF9  1515               	bsf	21,2	;volatile
  8580                           
  8581                           ;memory.c: 164: PMCON2 = 0x55;
  8582  1CFA  3055               	movlw	85
  8583  1CFB  0096               	movwf	22	;volsfr
  8584                           
  8585                           ;memory.c: 165: PMCON2 = 0xAA;
  8586  1CFC  30AA               	movlw	170
  8587  1CFD  0096               	movwf	22	;volsfr
  8588                           
  8589                           ;memory.c: 166: PMCON1bits.WR = 1;
  8590  1CFE  1495               	bsf	21,1	;volatile
  8591                           
  8592                           ;memory.c: 167: __nop();
  8593  1CFF  0000               	nop
  8594                           
  8595                           ;memory.c: 168: __nop();
  8596  1D00  0000               	nop
  8597                           
  8598                           ;memory.c: 170: PMCON1bits.WREN = 0;
  8599  1D01  0023               	movlb	3	; select bank3
  8600  1D02  1115               	bcf	21,2	;volatile
  8601                           
  8602                           ;memory.c: 171: INTCONbits.GIE = GIEBitValue;
  8603  1D03  0C73               	rrf	FLASH_EraseBlock@GIEBitValue,w
  8604  1D04  1C03               	skipc
  8605  1D05  138B               	bcf	11,7	;volatile
  8606  1D06  1803               	skipnc
  8607  1D07  178B               	bsf	11,7	;volatile
  8608  1D08  0008               	return
  8609  1D09                     __end_of_FLASH_EraseBlock:	
  8610                           
  8611                           	psect	text20
  8612  103A                     __ptext20:	
  8613 ;; *************** function _modbus_response_illgeal_function *****************
  8614 ;; Defined at:
  8615 ;;		line 8 in file "src/api/modbus.c"
  8616 ;; Parameters:    Size  Location     Type
  8617 ;;  buf             1    wreg     PTR unsigned char 
  8618 ;;		 -> modbusBuf(32), 
  8619 ;;  errcode         1   12[BANK0 ] unsigned char 
  8620 ;; Auto vars:     Size  Location     Type
  8621 ;;  buf             1   14[BANK0 ] PTR unsigned char 
  8622 ;;		 -> modbusBuf(32), 
  8623 ;;  pmdbs           1   15[BANK0 ] PTR struct .
  8624 ;;		 -> modbusBuf(32), 
  8625 ;; Return value:  Size  Location     Type
  8626 ;;                  1    wreg      void 
  8627 ;; Registers used:
  8628 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8629 ;; Tracked objects:
  8630 ;;		On entry : 0/0
  8631 ;;		On exit  : 0/0
  8632 ;;		Unchanged: 0/0
  8633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8634 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8635 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8636 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8637 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8638 ;;Total ram usage:        4 bytes
  8639 ;; Hardware stack levels used:    1
  8640 ;; Hardware stack levels required when called:    3
  8641 ;; This function calls:
  8642 ;;		_crc_append
  8643 ;;		_uart_send_len
  8644 ;; This function is called by:
  8645 ;;		_modbus_response_process
  8646 ;; This function uses a non-reentrant model
  8647 ;;
  8648                           
  8649                           
  8650                           ;psect for function _modbus_response_illgeal_function
  8651  103A                     _modbus_response_illgeal_function:	
  8652                           
  8653                           ;incstack = 0
  8654                           ; Regs used in _modbus_response_illgeal_function: [wreg+fsr1l+fsr1h+status,2+status,0+pc
      +                          lath+cstack]
  8655                           ;modbus_response_illgeal_function@buf stored from wreg
  8656  103A  0020               	movlb	0	; select bank0
  8657  103B  00D5               	movwf	modbus_response_illgeal_function@buf
  8658                           
  8659                           ;modbus.c: 10: st_modbusErrRespStructDef* pmdbs=(st_modbusErrRespStructDef*)buf;
  8660  103C  0855               	movf	modbus_response_illgeal_function@buf,w
  8661  103D  00D4               	movwf	??_modbus_response_illgeal_function
  8662  103E  0854               	movf	??_modbus_response_illgeal_function,w
  8663  103F  00D6               	movwf	modbus_response_illgeal_function@pmdbs
  8664                           
  8665                           ;modbus.c: 11: if(pmdbs->addr==0x00)return;
  8666  1040  0856               	movf	modbus_response_illgeal_function@pmdbs,w
  8667  1041  0086               	movwf	6
  8668  1042  3001               	movlw	1	; select bank2/3
  8669  1043  0087               	movwf	7
  8670  1044  0801               	movf	1,w
  8671  1045  1903               	btfsc	3,2
  8672  1046  0008               	return
  8673                           
  8674                           ;modbus.c: 12: pmdbs->addr=sysData.id;
  8675  1047  305C               	movlw	92
  8676  1048  0086               	movwf	6
  8677  1049  3023               	movlw	35
  8678  104A  0087               	movwf	7
  8679  104B  3142               	addfsr 1,2
  8680  104C  0801               	movf	1,w
  8681  104D  00D4               	movwf	??_modbus_response_illgeal_function
  8682  104E  0856               	movf	modbus_response_illgeal_function@pmdbs,w
  8683  104F  0086               	movwf	6
  8684  1050  3001               	movlw	1	; select bank2/3
  8685  1051  0087               	movwf	7
  8686  1052  0854               	movf	??_modbus_response_illgeal_function,w
  8687  1053  0081               	movwf	1
  8688                           
  8689                           ;modbus.c: 13: if(errcode){
  8690  1054  0853               	movf	modbus_response_illgeal_function@errcode,w
  8691  1055  1903               	btfsc	3,2
  8692  1056  285F               	goto	l792
  8693                           
  8694                           ;modbus.c: 14: pmdbs->func+=0x80;
  8695  1057  3080               	movlw	128
  8696  1058  00D4               	movwf	??_modbus_response_illgeal_function
  8697  1059  0A56               	incf	modbus_response_illgeal_function@pmdbs,w
  8698  105A  0086               	movwf	6
  8699  105B  3001               	movlw	1	; select bank2/3
  8700  105C  0087               	movwf	7
  8701  105D  0854               	movf	??_modbus_response_illgeal_function,w
  8702  105E  0781               	addwf	1,f
  8703  105F                     l792:	
  8704                           
  8705                           ;modbus.c: 15: };modbus.c: 16: pmdbs->errcord=errcode;
  8706  105F  0853               	movf	modbus_response_illgeal_function@errcode,w
  8707  1060  00D4               	movwf	??_modbus_response_illgeal_function
  8708  1061  0856               	movf	modbus_response_illgeal_function@pmdbs,w
  8709  1062  3E02               	addlw	2
  8710  1063  0086               	movwf	6
  8711  1064  3001               	movlw	1	; select bank2/3
  8712  1065  0087               	movwf	7
  8713  1066  0854               	movf	??_modbus_response_illgeal_function,w
  8714  1067  0081               	movwf	1
  8715                           
  8716                           ;modbus.c: 17: crc_append(buf,3);
  8717  1068  0855               	movf	modbus_response_illgeal_function@buf,w
  8718  1069  00CD               	movwf	crc_append@message
  8719  106A  3001               	movlw	1
  8720  106B  00CE               	movwf	crc_append@message+1
  8721  106C  3003               	movlw	3
  8722  106D  00CF               	movwf	crc_append@n
  8723  106E  3000               	movlw	0
  8724  106F  00D0               	movwf	crc_append@n+1
  8725  1070  319D  2581  3190   	fcall	_crc_append
  8726                           
  8727                           ;modbus.c: 18: uart_send_len(buf,5);
  8728  1073  3005               	movlw	5
  8729  1074  0020               	movlb	0	; select bank0
  8730  1075  00D4               	movwf	??_modbus_response_illgeal_function
  8731  1076  0854               	movf	??_modbus_response_illgeal_function,w
  8732  1077  00F8               	movwf	uart_send_len@len
  8733  1078  0855               	movf	modbus_response_illgeal_function@buf,w
  8734  1079  319E  2686         	fcall	_uart_send_len
  8735  107B  0008               	return
  8736  107C                     __end_of_modbus_response_illgeal_function:	
  8737                           
  8738                           	psect	text21
  8739  149A                     __ptext21:	
  8740 ;; *************** function _modbus_response_command *****************
  8741 ;; Defined at:
  8742 ;;		line 181 in file "src/api/modbus.c"
  8743 ;; Parameters:    Size  Location     Type
  8744 ;;  rbuf            1    wreg     PTR unsigned char 
  8745 ;;		 -> modbusBuf(32), 
  8746 ;; Auto vars:     Size  Location     Type
  8747 ;;  rbuf            1   21[BANK0 ] PTR unsigned char 
  8748 ;;		 -> modbusBuf(32), 
  8749 ;;  tempData        2   22[BANK0 ] unsigned int 
  8750 ;;  startAddr       2   16[BANK0 ] unsigned int 
  8751 ;;  tmpAddr         2   14[BANK0 ] unsigned int 
  8752 ;;  len             1   20[BANK0 ] unsigned char 
  8753 ;;  pmdbs           1   19[BANK0 ] PTR struct .
  8754 ;;		 -> modbusBuf(32), 
  8755 ;;  i               1   18[BANK0 ] unsigned char 
  8756 ;; Return value:  Size  Location     Type
  8757 ;;                  1    wreg      void 
  8758 ;; Registers used:
  8759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8760 ;; Tracked objects:
  8761 ;;		On entry : 0/0
  8762 ;;		On exit  : 0/0
  8763 ;;		Unchanged: 0/0
  8764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8766 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8767 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8768 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8769 ;;Total ram usage:       12 bytes
  8770 ;; Hardware stack levels used:    1
  8771 ;; Hardware stack levels required when called:    3
  8772 ;; This function calls:
  8773 ;;		_crc_append
  8774 ;;		_getRegisterVal
  8775 ;;		_uart_send_len
  8776 ;; This function is called by:
  8777 ;;		_modbus_response_process
  8778 ;; This function uses a non-reentrant model
  8779 ;;
  8780                           
  8781                           
  8782                           ;psect for function _modbus_response_command
  8783  149A                     _modbus_response_command:	
  8784                           
  8785                           ;incstack = 0
  8786                           ; Regs used in _modbus_response_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8787                           ;modbus_response_command@rbuf stored from wreg
  8788  149A  0020               	movlb	0	; select bank0
  8789  149B  00DC               	movwf	modbus_response_command@rbuf
  8790                           
  8791                           ;modbus.c: 182: uint8_t i;;modbus.c: 183: uint16_t startAddr=0;
  8792  149C  01D7               	clrf	modbus_response_command@startAddr
  8793  149D  01D8               	clrf	modbus_response_command@startAddr+1
  8794                           
  8795                           ;modbus.c: 184: uint16_t tempData,tmpAddr;;modbus.c: 185: uint8_t len=0;
  8796  149E  01DB               	clrf	modbus_response_command@len
  8797                           
  8798                           ;modbus.c: 186: st_modbusComReqStructDef* pmdbs=(st_modbusComReqStructDef*)rbuf;
  8799  149F  085C               	movf	modbus_response_command@rbuf,w
  8800  14A0  00D3               	movwf	??_modbus_response_command
  8801  14A1  0853               	movf	??_modbus_response_command,w
  8802  14A2  00DA               	movwf	modbus_response_command@pmdbs
  8803                           
  8804                           ;modbus.c: 187: if(pmdbs->addr!=sysData.id || pmdbs->addr==0)return;
  8805  14A3  305C               	movlw	92
  8806  14A4  0086               	movwf	6
  8807  14A5  3023               	movlw	35
  8808  14A6  0087               	movwf	7
  8809  14A7  3142               	addfsr 1,2
  8810  14A8  085A               	movf	modbus_response_command@pmdbs,w
  8811  14A9  0084               	movwf	4
  8812  14AA  3001               	movlw	1	; select bank2/3
  8813  14AB  0085               	movwf	5
  8814  14AC  0800               	movf	0,w
  8815  14AD  0601               	xorwf	1,w
  8816  14AE  1D03               	skipz
  8817  14AF  0008               	return
  8818  14B0  085A               	movf	modbus_response_command@pmdbs,w
  8819  14B1  0086               	movwf	6
  8820  14B2  3001               	movlw	1	; select bank2/3
  8821  14B3  0087               	movwf	7
  8822  14B4  0801               	movf	1,w
  8823  14B5  1903               	btfsc	3,2
  8824  14B6  0008               	return
  8825                           
  8826                           ;modbus.c: 188: startAddr=pmdbs->addr_hi;
  8827  14B7  085A               	movf	modbus_response_command@pmdbs,w
  8828  14B8  3E02               	addlw	2
  8829  14B9  0086               	movwf	6
  8830  14BA  3001               	movlw	1	; select bank2/3
  8831  14BB  0087               	movwf	7
  8832  14BC  0801               	movf	1,w
  8833  14BD  00D3               	movwf	??_modbus_response_command
  8834  14BE  01D4               	clrf	??_modbus_response_command+1
  8835  14BF  0853               	movf	??_modbus_response_command,w
  8836  14C0  00D7               	movwf	modbus_response_command@startAddr
  8837  14C1  0854               	movf	??_modbus_response_command+1,w
  8838  14C2  00D8               	movwf	modbus_response_command@startAddr+1
  8839                           
  8840                           ;modbus.c: 189: startAddr<<=8;
  8841  14C3  3008               	movlw	8
  8842  14C4                     u4425:	
  8843  14C4  35D7               	lslf	modbus_response_command@startAddr,f
  8844  14C5  0DD8               	rlf	modbus_response_command@startAddr+1,f
  8845  14C6  0B89               	decfsz	9,f
  8846  14C7  2CC4               	goto	u4425
  8847                           
  8848                           ;modbus.c: 190: startAddr |= pmdbs->addr_lo;
  8849  14C8  085A               	movf	modbus_response_command@pmdbs,w
  8850  14C9  3E03               	addlw	3
  8851  14CA  0086               	movwf	6
  8852  14CB  3001               	movlw	1	; select bank2/3
  8853  14CC  0087               	movwf	7
  8854  14CD  0801               	movf	1,w
  8855  14CE  00D3               	movwf	??_modbus_response_command
  8856  14CF  01D4               	clrf	??_modbus_response_command+1
  8857  14D0  0853               	movf	??_modbus_response_command,w
  8858  14D1  04D7               	iorwf	modbus_response_command@startAddr,f
  8859  14D2  0854               	movf	??_modbus_response_command+1,w
  8860  14D3  04D8               	iorwf	modbus_response_command@startAddr+1,f
  8861                           
  8862                           ;modbus.c: 191: tmpAddr=startAddr;
  8863  14D4  0858               	movf	modbus_response_command@startAddr+1,w
  8864  14D5  00D6               	movwf	modbus_response_command@tmpAddr+1
  8865  14D6  0857               	movf	modbus_response_command@startAddr,w
  8866  14D7  00D5               	movwf	modbus_response_command@tmpAddr
  8867                           
  8868                           ;modbus.c: 192: len = pmdbs->len_lo;
  8869  14D8  085A               	movf	modbus_response_command@pmdbs,w
  8870  14D9  0086               	movwf	6
  8871  14DA  3001               	movlw	1	; select bank2/3
  8872  14DB  0087               	movwf	7
  8873  14DC  3001               	movlw	1	; select bank2/3
  8874  14DD  3F45               	moviw [5]fsr1
  8875  14DE  00DB               	movwf	modbus_response_command@len
  8876                           
  8877                           ;modbus.c: 193: len<<=1;
  8878  14DF  1003               	clrc
  8879  14E0  0DDB               	rlf	modbus_response_command@len,f
  8880                           
  8881                           ;modbus.c: 194: if(len>32)len=32;
  8882  14E1  3021               	movlw	33
  8883  14E2  025B               	subwf	modbus_response_command@len,w
  8884  14E3  1C03               	skipc
  8885  14E4  2CE9               	goto	l4997
  8886  14E5  3020               	movlw	32
  8887  14E6  00D3               	movwf	??_modbus_response_command
  8888  14E7  0853               	movf	??_modbus_response_command,w
  8889  14E8  00DB               	movwf	modbus_response_command@len
  8890  14E9                     l4997:	
  8891                           
  8892                           ;modbus.c: 195: for(i=0;i<len;i=i+2,tmpAddr++){
  8893  14E9  01D9               	clrf	modbus_response_command@i
  8894  14EA                     l5009:	
  8895  14EA  085B               	movf	modbus_response_command@len,w
  8896  14EB  0259               	subwf	modbus_response_command@i,w
  8897  14EC  1803               	btfsc	3,0
  8898  14ED  2D1C               	goto	l5011
  8899                           
  8900                           ;modbus.c: 196: getRegisterVal(tmpAddr,&tempData);
  8901  14EE  0856               	movf	modbus_response_command@tmpAddr+1,w
  8902  14EF  00F2               	movwf	getRegisterVal@addr+1
  8903  14F0  0855               	movf	modbus_response_command@tmpAddr,w
  8904  14F1  00F1               	movwf	getRegisterVal@addr
  8905  14F2  305D               	movlw	(low (modbus_response_command@tempData| 0))& (0+255)
  8906  14F3  00D3               	movwf	??_modbus_response_command
  8907  14F4  0853               	movf	??_modbus_response_command,w
  8908  14F5  00F3               	movwf	getRegisterVal@tempData
  8909  14F6  3197  2707  3194   	fcall	_getRegisterVal
  8910                           
  8911                           ;modbus.c: 197: rbuf[i+3] = (uint8_t)(tempData >> 8);
  8912  14F9  0020               	movlb	0	; select bank0
  8913  14FA  085E               	movf	modbus_response_command@tempData+1,w
  8914  14FB  00D3               	movwf	??_modbus_response_command
  8915  14FC  0859               	movf	modbus_response_command@i,w
  8916  14FD  3E03               	addlw	3
  8917  14FE  075C               	addwf	modbus_response_command@rbuf,w
  8918  14FF  00D4               	movwf	??_modbus_response_command+1
  8919  1500  0854               	movf	??_modbus_response_command+1,w
  8920  1501  0086               	movwf	6
  8921  1502  3001               	movlw	1	; select bank2/3
  8922  1503  0087               	movwf	7
  8923  1504  0853               	movf	??_modbus_response_command,w
  8924  1505  0081               	movwf	1
  8925                           
  8926                           ;modbus.c: 198: rbuf[i+4] = (uint8_t)(tempData & 0xff);
  8927  1506  085D               	movf	modbus_response_command@tempData,w
  8928  1507  00D3               	movwf	??_modbus_response_command
  8929  1508  0859               	movf	modbus_response_command@i,w
  8930  1509  3E04               	addlw	4
  8931  150A  075C               	addwf	modbus_response_command@rbuf,w
  8932  150B  00D4               	movwf	??_modbus_response_command+1
  8933  150C  0854               	movf	??_modbus_response_command+1,w
  8934  150D  0086               	movwf	6
  8935  150E  3001               	movlw	1	; select bank2/3
  8936  150F  0087               	movwf	7
  8937  1510  0853               	movf	??_modbus_response_command,w
  8938  1511  0081               	movwf	1
  8939  1512  0859               	movf	modbus_response_command@i,w
  8940  1513  3E02               	addlw	2
  8941  1514  00D3               	movwf	??_modbus_response_command
  8942  1515  0853               	movf	??_modbus_response_command,w
  8943  1516  00D9               	movwf	modbus_response_command@i
  8944  1517  3001               	movlw	1
  8945  1518  07D5               	addwf	modbus_response_command@tmpAddr,f
  8946  1519  3000               	movlw	0
  8947  151A  3DD6               	addwfc	modbus_response_command@tmpAddr+1,f
  8948  151B  2CEA               	goto	l5009
  8949  151C                     l5011:	
  8950                           
  8951                           ;modbus.c: 200: };modbus.c: 201: rbuf[0] = sysData.id;
  8952  151C  305C               	movlw	92
  8953  151D  0086               	movwf	6
  8954  151E  3023               	movlw	35
  8955  151F  0087               	movwf	7
  8956  1520  3142               	addfsr 1,2
  8957  1521  0801               	movf	1,w
  8958  1522  00D3               	movwf	??_modbus_response_command
  8959  1523  085C               	movf	modbus_response_command@rbuf,w
  8960  1524  0086               	movwf	6
  8961  1525  3001               	movlw	1	; select bank2/3
  8962  1526  0087               	movwf	7
  8963  1527  0853               	movf	??_modbus_response_command,w
  8964  1528  0081               	movwf	1
  8965                           
  8966                           ;modbus.c: 202: rbuf[1] = 3;
  8967  1529  3003               	movlw	3
  8968  152A  00D3               	movwf	??_modbus_response_command
  8969  152B  0A5C               	incf	modbus_response_command@rbuf,w
  8970  152C  0086               	movwf	6
  8971  152D  3001               	movlw	1	; select bank2/3
  8972  152E  0087               	movwf	7
  8973  152F  0853               	movf	??_modbus_response_command,w
  8974  1530  0081               	movwf	1
  8975                           
  8976                           ;modbus.c: 203: rbuf[2] = len;
  8977  1531  085B               	movf	modbus_response_command@len,w
  8978  1532  00D3               	movwf	??_modbus_response_command
  8979  1533  085C               	movf	modbus_response_command@rbuf,w
  8980  1534  3E02               	addlw	2
  8981  1535  0086               	movwf	6
  8982  1536  3001               	movlw	1	; select bank2/3
  8983  1537  0087               	movwf	7
  8984  1538  0853               	movf	??_modbus_response_command,w
  8985  1539  0081               	movwf	1
  8986                           
  8987                           ;modbus.c: 204: len += 3;
  8988  153A  3003               	movlw	3
  8989  153B  00D3               	movwf	??_modbus_response_command
  8990  153C  0853               	movf	??_modbus_response_command,w
  8991  153D  07DB               	addwf	modbus_response_command@len,f
  8992                           
  8993                           ;modbus.c: 205: crc_append(rbuf,len);
  8994  153E  085C               	movf	modbus_response_command@rbuf,w
  8995  153F  00CD               	movwf	crc_append@message
  8996  1540  3001               	movlw	1
  8997  1541  00CE               	movwf	crc_append@message+1
  8998  1542  085B               	movf	modbus_response_command@len,w
  8999  1543  00D3               	movwf	??_modbus_response_command
  9000  1544  01D4               	clrf	??_modbus_response_command+1
  9001  1545  0853               	movf	??_modbus_response_command,w
  9002  1546  00CF               	movwf	crc_append@n
  9003  1547  0854               	movf	??_modbus_response_command+1,w
  9004  1548  00D0               	movwf	crc_append@n+1
  9005  1549  319D  2581  3194   	fcall	_crc_append
  9006                           
  9007                           ;modbus.c: 206: len += 2;
  9008  154C  3002               	movlw	2
  9009  154D  0020               	movlb	0	; select bank0
  9010  154E  00D3               	movwf	??_modbus_response_command
  9011  154F  0853               	movf	??_modbus_response_command,w
  9012  1550  07DB               	addwf	modbus_response_command@len,f
  9013                           
  9014                           ;modbus.c: 207: uart_send_len(rbuf,len);
  9015  1551  085B               	movf	modbus_response_command@len,w
  9016  1552  00D3               	movwf	??_modbus_response_command
  9017  1553  0853               	movf	??_modbus_response_command,w
  9018  1554  00F8               	movwf	uart_send_len@len
  9019  1555  085C               	movf	modbus_response_command@rbuf,w
  9020  1556  319E  2686         	fcall	_uart_send_len
  9021  1558  0008               	return
  9022  1559                     __end_of_modbus_response_command:	
  9023                           
  9024                           	psect	text22
  9025  1E86                     __ptext22:	
  9026 ;; *************** function _uart_send_len *****************
  9027 ;; Defined at:
  9028 ;;		line 41 in file "src/api/my_uart.c"
  9029 ;; Parameters:    Size  Location     Type
  9030 ;;  buf             1    wreg     PTR unsigned char 
  9031 ;;		 -> modbusBuf(32), 
  9032 ;;  len             1    8[COMMON] unsigned char 
  9033 ;; Auto vars:     Size  Location     Type
  9034 ;;  buf             1   11[COMMON] PTR unsigned char 
  9035 ;;		 -> modbusBuf(32), 
  9036 ;; Return value:  Size  Location     Type
  9037 ;;                  1    wreg      void 
  9038 ;; Registers used:
  9039 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9040 ;; Tracked objects:
  9041 ;;		On entry : 0/0
  9042 ;;		On exit  : 0/0
  9043 ;;		Unchanged: 0/0
  9044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9045 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9046 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9047 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9048 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9049 ;;Total ram usage:        4 bytes
  9050 ;; Hardware stack levels used:    1
  9051 ;; Hardware stack levels required when called:    2
  9052 ;; This function calls:
  9053 ;;		_m_mem_cpy_len
  9054 ;; This function is called by:
  9055 ;;		_modbus_response_illgeal_function
  9056 ;;		_modbus_response_write_single_register
  9057 ;;		_modbus_response_write_mult_register
  9058 ;;		_modbus_response_command
  9059 ;;		_main
  9060 ;; This function uses a non-reentrant model
  9061 ;;
  9062                           
  9063                           
  9064                           ;psect for function _uart_send_len
  9065  1E86                     _uart_send_len:	
  9066                           
  9067                           ;incstack = 0
  9068                           ; Regs used in _uart_send_len: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9069                           ;uart_send_len@buf stored from wreg
  9070  1E86  00FB               	movwf	uart_send_len@buf
  9071                           
  9072                           ;my_uart.c: 45: if(!TXSTAbits.TXEN)TXSTAbits.TXEN=1;
  9073  1E87  0023               	movlb	3	; select bank3
  9074  1E88  1E9E               	btfss	30,5	;volatile
  9075  1E89  169E               	bsf	30,5	;volatile
  9076                           
  9077                           ;my_uart.c: 47: if(txBufLen>0)return;
  9078  1E8A  0020               	movlb	0	; select bank0
  9079  1E8B  0841               	movf	_txBufLen,w
  9080  1E8C  1D03               	btfss	3,2
  9081  1E8D  0008               	return
  9082                           
  9083                           ;my_uart.c: 48: if(len>sizeof(txBuf))len=sizeof(txBuf);
  9084  1E8E  3041               	movlw	65
  9085  1E8F  0278               	subwf	uart_send_len@len,w
  9086  1E90  1C03               	skipc
  9087  1E91  2E96               	goto	l4813
  9088  1E92  3040               	movlw	64
  9089  1E93  00F9               	movwf	??_uart_send_len
  9090  1E94  0879               	movf	??_uart_send_len,w
  9091  1E95  00F8               	movwf	uart_send_len@len
  9092  1E96                     l4813:	
  9093                           
  9094                           ;my_uart.c: 49: m_mem_cpy_len(txBuf,buf,len);
  9095  1E96  30A0               	movlw	low _txBuf
  9096  1E97  00F1               	movwf	m_mem_cpy_len@d
  9097  1E98  3001               	movlw	high _txBuf
  9098  1E99  00F2               	movwf	m_mem_cpy_len@d+1
  9099  1E9A  087B               	movf	uart_send_len@buf,w
  9100  1E9B  00F3               	movwf	m_mem_cpy_len@s
  9101  1E9C  3001               	movlw	1
  9102  1E9D  00F4               	movwf	m_mem_cpy_len@s+1
  9103  1E9E  0878               	movf	uart_send_len@len,w
  9104  1E9F  00F9               	movwf	??_uart_send_len
  9105  1EA0  01FA               	clrf	??_uart_send_len+1
  9106  1EA1  0879               	movf	??_uart_send_len,w
  9107  1EA2  00F5               	movwf	m_mem_cpy_len@len
  9108  1EA3  087A               	movf	??_uart_send_len+1,w
  9109  1EA4  00F6               	movwf	m_mem_cpy_len@len+1
  9110  1EA5  319D  2541  319E   	fcall	_m_mem_cpy_len
  9111                           
  9112                           ;my_uart.c: 50: if(len==0)return;
  9113  1EA8  0878               	movf	uart_send_len@len,w
  9114  1EA9  1903               	btfsc	3,2
  9115  1EAA  0008               	return
  9116  1EAB                     l511:	
  9117                           ;my_uart.c: 51: while(0 == PIR1bits.TXIF);
  9118                           
  9119  1EAB  0020               	movlb	0	; select bank0
  9120  1EAC  1E11               	btfss	17,4	;volatile
  9121  1EAD  2EAB               	goto	l511
  9122                           
  9123                           ;my_uart.c: 52: TXREG=txBuf[0];
  9124  1EAE  0023               	movlb	3	; select bank3
  9125  1EAF  0820               	movf	_txBuf^(0+384),w
  9126  1EB0  009A               	movwf	26	;volatile
  9127                           
  9128                           ;my_uart.c: 53: txBufLen=len;
  9129  1EB1  0878               	movf	uart_send_len@len,w
  9130  1EB2  00F9               	movwf	??_uart_send_len
  9131  1EB3  0879               	movf	??_uart_send_len,w
  9132  1EB4  0020               	movlb	0	; select bank0
  9133  1EB5  00C1               	movwf	_txBufLen
  9134                           
  9135                           ;my_uart.c: 54: txBufLen--;
  9136  1EB6  3001               	movlw	1
  9137  1EB7  02C1               	subwf	_txBufLen,f
  9138                           
  9139                           ;my_uart.c: 55: txCount++;
  9140  1EB8  3001               	movlw	1
  9141  1EB9  00F9               	movwf	??_uart_send_len
  9142  1EBA  0879               	movf	??_uart_send_len,w
  9143  1EBB  07C0               	addwf	_txCount,f
  9144                           
  9145                           ;my_uart.c: 56: if(!PIE1bits.TXIE)PIE1bits.TXIE=1;
  9146  1EBC  0021               	movlb	1	; select bank1
  9147  1EBD  1A11               	btfsc	17,4	;volatile
  9148  1EBE  0008               	return
  9149  1EBF  1611               	bsf	17,4	;volatile
  9150  1EC0  0008               	return
  9151  1EC1                     __end_of_uart_send_len:	
  9152                           
  9153                           	psect	text23
  9154  1707                     __ptext23:	
  9155 ;; *************** function _getRegisterVal *****************
  9156 ;; Defined at:
  9157 ;;		line 80 in file "src/api/modbus.c"
  9158 ;; Parameters:    Size  Location     Type
  9159 ;;  addr            2    1[COMMON] unsigned int 
  9160 ;;  tempData        1    3[COMMON] PTR unsigned int 
  9161 ;;		 -> modbus_response_command@tempData(2), 
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;  t16             2    8[COMMON] unsigned int 
  9164 ;;  tempAddr        1   10[COMMON] unsigned char 
  9165 ;; Return value:  Size  Location     Type
  9166 ;;                  2    1[COMMON] unsigned int 
  9167 ;; Registers used:
  9168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  9169 ;; Tracked objects:
  9170 ;;		On entry : 0/0
  9171 ;;		On exit  : 0/0
  9172 ;;		Unchanged: 0/0
  9173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9174 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9175 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9176 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9177 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9178 ;;Total ram usage:       10 bytes
  9179 ;; Hardware stack levels used:    1
  9180 ;; Hardware stack levels required when called:    1
  9181 ;; This function calls:
  9182 ;;		Nothing
  9183 ;; This function is called by:
  9184 ;;		_modbus_response_command
  9185 ;; This function uses a non-reentrant model
  9186 ;;
  9187                           
  9188                           
  9189                           ;psect for function _getRegisterVal
  9190  1707                     _getRegisterVal:	
  9191                           
  9192                           ;modbus.c: 82: uint16_t t16 = 0;
  9193                           
  9194                           ;incstack = 0
  9195                           ; Regs used in _getRegisterVal: [wreg-fsr1h+status,2+status,0]
  9196  1707  01F8               	clrf	getRegisterVal@t16
  9197  1708  01F9               	clrf	getRegisterVal@t16+1
  9198                           
  9199                           ;modbus.c: 83: uint8_t tempAddr;;modbus.c: 85: tempAddr = addr & 0xff;
  9200  1709  0871               	movf	getRegisterVal@addr,w
  9201  170A  00F4               	movwf	??_getRegisterVal
  9202  170B  0874               	movf	??_getRegisterVal,w
  9203  170C  00FA               	movwf	getRegisterVal@tempAddr
  9204                           
  9205                           ;modbus.c: 86: switch(tempAddr){
  9206  170D  2FB9               	goto	l3549
  9207  170E                     l3515:	
  9208                           ;modbus.c: 87: case 0x01:*tempData = 0100; break;
  9209                           
  9210  170E  0873               	movf	getRegisterVal@tempData,w
  9211  170F  0086               	movwf	6
  9212  1710  0187               	clrf	7
  9213  1711  3040               	movlw	64
  9214  1712  3FC0               	movwi [0]fsr1
  9215  1713  3000               	movlw	0
  9216  1714  3FC1               	movwi [1]fsr1
  9217  1715  2FC6               	goto	l3551
  9218  1716                     l3517:	
  9219                           ;modbus.c: 88: case 0x02:*tempData=sysData.id;break;
  9220                           
  9221  1716  305C               	movlw	92
  9222  1717  0086               	movwf	6
  9223  1718  3023               	movlw	35
  9224  1719  0087               	movwf	7
  9225  171A  3142               	addfsr 1,2
  9226  171B  0801               	movf	1,w
  9227  171C  00F4               	movwf	??_getRegisterVal
  9228  171D  01F5               	clrf	??_getRegisterVal+1
  9229  171E  0873               	movf	getRegisterVal@tempData,w
  9230  171F  0086               	movwf	6
  9231  1720  0187               	clrf	7
  9232  1721  0874               	movf	??_getRegisterVal,w
  9233  1722  3FC0               	movwi [0]fsr1
  9234  1723  0875               	movf	??_getRegisterVal+1,w
  9235  1724  3FC1               	movwi [1]fsr1
  9236  1725  2FC6               	goto	l3551
  9237  1726                     l3519:	
  9238                           ;modbus.c: 89: case 0x03:*tempData=(sysData.pidSetFlg1<<8 | sysData.pidSetFlg0);break;
  9239                           
  9240  1726  305C               	movlw	92
  9241  1727  0084               	movwf	4
  9242  1728  3023               	movlw	35
  9243  1729  0085               	movwf	5
  9244  172A  3101               	addfsr 0,1
  9245  172B  0800               	movf	0,w
  9246  172C  00F4               	movwf	??_getRegisterVal
  9247  172D  305C               	movlw	92
  9248  172E  0084               	movwf	4
  9249  172F  3023               	movlw	35
  9250  1730  0085               	movwf	5
  9251  1731  0873               	movf	getRegisterVal@tempData,w
  9252  1732  0086               	movwf	6
  9253  1733  0187               	clrf	7
  9254  1734  0800               	movf	0,w
  9255  1735  3FC0               	movwi [0]fsr1
  9256  1736  0874               	movf	??_getRegisterVal,w
  9257  1737  3FC1               	movwi [1]fsr1
  9258  1738  2FC6               	goto	l3551
  9259  1739                     l3521:	
  9260                           ;modbus.c: 90: case 0x04:*tempData=sysData.pidKp;break;
  9261                           
  9262  1739  305C               	movlw	92
  9263  173A  0086               	movwf	6
  9264  173B  3023               	movlw	35
  9265  173C  0087               	movwf	7
  9266  173D  3144               	addfsr 1,4
  9267  173E  0873               	movf	getRegisterVal@tempData,w
  9268  173F  0084               	movwf	4
  9269  1740  0185               	clrf	5
  9270  1741  3F40               	moviw [0]fsr1
  9271  1742  3F80               	movwi [0]fsr0
  9272  1743  3F41               	moviw [1]fsr1
  9273  1744  3F81               	movwi [1]fsr0
  9274  1745  2FC6               	goto	l3551
  9275  1746                     l3523:	
  9276                           ;modbus.c: 91: case 0x05:*tempData=sysData.pidTi;break;
  9277                           
  9278  1746  305C               	movlw	92
  9279  1747  0086               	movwf	6
  9280  1748  3023               	movlw	35
  9281  1749  0087               	movwf	7
  9282  174A  3146               	addfsr 1,6
  9283  174B  0873               	movf	getRegisterVal@tempData,w
  9284  174C  0084               	movwf	4
  9285  174D  0185               	clrf	5
  9286  174E  3F40               	moviw [0]fsr1
  9287  174F  3F80               	movwi [0]fsr0
  9288  1750  3F41               	moviw [1]fsr1
  9289  1751  3F81               	movwi [1]fsr0
  9290  1752  2FC6               	goto	l3551
  9291  1753                     l3525:	
  9292                           ;modbus.c: 92: case 0x06:*tempData=sysData.pidTd;break;
  9293                           
  9294  1753  305C               	movlw	92
  9295  1754  0086               	movwf	6
  9296  1755  3023               	movlw	35
  9297  1756  0087               	movwf	7
  9298  1757  3148               	addfsr 1,8
  9299  1758  0873               	movf	getRegisterVal@tempData,w
  9300  1759  0084               	movwf	4
  9301  175A  0185               	clrf	5
  9302  175B  3F40               	moviw [0]fsr1
  9303  175C  3F80               	movwi [0]fsr0
  9304  175D  3F41               	moviw [1]fsr1
  9305  175E  3F81               	movwi [1]fsr0
  9306  175F  2FC6               	goto	l3551
  9307  1760                     l3527:	
  9308                           ;modbus.c: 93: case 0x07:*tempData=rtAdcValueRsLo; break;
  9309                           
  9310  1760  0873               	movf	getRegisterVal@tempData,w
  9311  1761  0086               	movwf	6
  9312  1762  0187               	clrf	7
  9313  1763  0020               	movlb	0	; select bank0
  9314  1764  083A               	movf	_rtAdcValueRsLo,w
  9315  1765  3FC0               	movwi [0]fsr1
  9316  1766  083B               	movf	_rtAdcValueRsLo+1,w
  9317  1767  3FC1               	movwi [1]fsr1
  9318  1768  2FC6               	goto	l3551
  9319  1769                     l3529:	
  9320                           ;modbus.c: 94: case 0x08:*tempData=rtAdcValueRsHi;break;
  9321                           
  9322  1769  0873               	movf	getRegisterVal@tempData,w
  9323  176A  0086               	movwf	6
  9324  176B  0187               	clrf	7
  9325  176C  0020               	movlb	0	; select bank0
  9326  176D  0838               	movf	_rtAdcValueRsHi,w
  9327  176E  3FC0               	movwi [0]fsr1
  9328  176F  0839               	movf	_rtAdcValueRsHi+1,w
  9329  1770  3FC1               	movwi [1]fsr1
  9330  1771  2FC6               	goto	l3551
  9331  1772                     l3531:	
  9332                           ;modbus.c: 95: case 0x09:*tempData=rtAdcValueRcLo;break;
  9333                           
  9334  1772  0873               	movf	getRegisterVal@tempData,w
  9335  1773  0086               	movwf	6
  9336  1774  0187               	clrf	7
  9337  1775  0020               	movlb	0	; select bank0
  9338  1776  0836               	movf	_rtAdcValueRcLo,w
  9339  1777  3FC0               	movwi [0]fsr1
  9340  1778  0837               	movf	_rtAdcValueRcLo+1,w
  9341  1779  3FC1               	movwi [1]fsr1
  9342  177A  2FC6               	goto	l3551
  9343  177B                     l3533:	
  9344                           ;modbus.c: 96: case 0x0a:*tempData=rtAdcValueRcHi;break;
  9345                           
  9346  177B  0873               	movf	getRegisterVal@tempData,w
  9347  177C  0086               	movwf	6
  9348  177D  0187               	clrf	7
  9349  177E  0020               	movlb	0	; select bank0
  9350  177F  0834               	movf	_rtAdcValueRcHi,w
  9351  1780  3FC0               	movwi [0]fsr1
  9352  1781  0835               	movf	_rtAdcValueRcHi+1,w
  9353  1782  3FC1               	movwi [1]fsr1
  9354  1783  2FC6               	goto	l3551
  9355  1784                     l3535:	
  9356                           ;modbus.c: 97: case 0x0b:*tempData=resRc;break;
  9357                           
  9358  1784  0873               	movf	getRegisterVal@tempData,w
  9359  1785  0086               	movwf	6
  9360  1786  0187               	clrf	7
  9361  1787  0020               	movlb	0	; select bank0
  9362  1788  086E               	movf	_resRc,w
  9363  1789  3FC0               	movwi [0]fsr1
  9364  178A  086F               	movf	_resRc+1,w
  9365  178B  3FC1               	movwi [1]fsr1
  9366  178C  2FC6               	goto	l3551
  9367  178D                     l3537:	
  9368                           ;modbus.c: 98: case 0x0c:*tempData=resRs;break;
  9369                           
  9370  178D  0873               	movf	getRegisterVal@tempData,w
  9371  178E  0086               	movwf	6
  9372  178F  0187               	clrf	7
  9373  1790  0021               	movlb	1	; select bank1
  9374  1791  085C               	movf	_resRs^(0+128),w
  9375  1792  3FC0               	movwi [0]fsr1
  9376  1793  085D               	movf	(_resRs+1)^(0+128),w
  9377  1794  3FC1               	movwi [1]fsr1
  9378  1795  2FC6               	goto	l3551
  9379  1796                     l3539:	
  9380                           ;modbus.c: 99: case 0x0d:*tempData=rtAdcValueVoFb;break;
  9381                           
  9382  1796  0873               	movf	getRegisterVal@tempData,w
  9383  1797  0086               	movwf	6
  9384  1798  0187               	clrf	7
  9385  1799  0020               	movlb	0	; select bank0
  9386  179A  0832               	movf	_rtAdcValueVoFb,w
  9387  179B  3FC0               	movwi [0]fsr1
  9388  179C  0833               	movf	_rtAdcValueVoFb+1,w
  9389  179D  3FC1               	movwi [1]fsr1
  9390  179E  2FC6               	goto	l3551
  9391  179F                     l3541:	
  9392                           ;modbus.c: 100: case 0x0e:*tempData=voExpectMv;break;
  9393                           
  9394  179F  0873               	movf	getRegisterVal@tempData,w
  9395  17A0  0086               	movwf	6
  9396  17A1  0187               	clrf	7
  9397  17A2  0021               	movlb	1	; select bank1
  9398  17A3  084A               	movf	_voExpectMv^(0+128),w
  9399  17A4  3FC0               	movwi [0]fsr1
  9400  17A5  084B               	movf	(_voExpectMv+1)^(0+128),w
  9401  17A6  3FC1               	movwi [1]fsr1
  9402  17A7  2FC6               	goto	l3551
  9403  17A8                     l3543:	
  9404                           ;modbus.c: 101: case 0x0f:*tempData=voExpectAdcValue;break;
  9405                           
  9406  17A8  0873               	movf	getRegisterVal@tempData,w
  9407  17A9  0086               	movwf	6
  9408  17AA  0187               	clrf	7
  9409  17AB  0020               	movlb	0	; select bank0
  9410  17AC  082E               	movf	_voExpectAdcValue,w
  9411  17AD  3FC0               	movwi [0]fsr1
  9412  17AE  082F               	movf	_voExpectAdcValue+1,w
  9413  17AF  3FC1               	movwi [1]fsr1
  9414  17B0  2FC6               	goto	l3551
  9415  17B1                     l3545:	
  9416                           ;modbus.c: 102: default: *tempData=0x55aa;break;
  9417                           
  9418  17B1  0873               	movf	getRegisterVal@tempData,w
  9419  17B2  0086               	movwf	6
  9420  17B3  0187               	clrf	7
  9421  17B4  30AA               	movlw	170
  9422  17B5  3FC0               	movwi [0]fsr1
  9423  17B6  3055               	movlw	85
  9424  17B7  3FC1               	movwi [1]fsr1
  9425                           
  9426                           ;modbus.c: 103: }
  9427  17B8  2FC6               	goto	l3551
  9428  17B9                     l3549:	
  9429  17B9  087A               	movf	getRegisterVal@tempAddr,w
  9430                           
  9431                           ; Switch size 1, requested type "space"
  9432                           ; Number of cases is 15, Range of values is 1 to 15
  9433                           ; switch strategies available:
  9434                           ; Name         Instructions Cycles
  9435                           ; direct_byte           39     9 (fixed)
  9436                           ; simple_byte           46    24 (average)
  9437                           ; jumptable            263     9 (fixed)
  9438                           ;	Chosen strategy is direct_byte
  9439  17BA  3EFF               	addlw	-1
  9440  17BB  1C03               	skipc
  9441  17BC  2FB1               	goto	l3545
  9442  17BD  0084               	movwf	4
  9443  17BE  300F               	movlw	15
  9444  17BF  0204               	subwf	4,w
  9445  17C0  1803               	skipnc
  9446  17C1  2FB1               	goto	l3545
  9447  17C2  3198               	movlp	high S5449
  9448  17C3  3504               	lslf	4,w
  9449  17C4  3E00               	addlw	low S5449
  9450  17C5  0082               	movwf	2
  9451  17C6                     l3551:	
  9452                           
  9453                           ;modbus.c: 104: if(tempAddr>0x0f && tempAddr < 0x10+30*2){
  9454  17C6  3010               	movlw	16
  9455  17C7  027A               	subwf	getRegisterVal@tempAddr,w
  9456  17C8  1C03               	skipc
  9457  17C9  0008               	return
  9458  17CA  304C               	movlw	76
  9459  17CB  027A               	subwf	getRegisterVal@tempAddr,w
  9460  17CC  1803               	skipnc
  9461  17CD  0008               	return
  9462                           
  9463                           ;modbus.c: 105: tempAddr-=0x10;
  9464  17CE  3010               	movlw	16
  9465  17CF  02FA               	subwf	getRegisterVal@tempAddr,f
  9466                           
  9467                           ;modbus.c: 106: if(tempAddr & 0x01){
  9468  17D0  1C7A               	btfss	getRegisterVal@tempAddr,0
  9469  17D1  2FE9               	goto	l3561
  9470                           
  9471                           ;modbus.c: 107: *tempData=sysData.calibVoMV[tempAddr>>1];
  9472  17D2  367A               	lsrf	getRegisterVal@tempAddr,w
  9473  17D3  00F4               	movwf	??_getRegisterVal
  9474  17D4  01F5               	clrf	??_getRegisterVal+1
  9475  17D5  35F4               	lslf	??_getRegisterVal,f
  9476  17D6  0DF5               	rlf	??_getRegisterVal+1,f
  9477  17D7  30A2               	movlw	162
  9478  17D8  00F6               	movwf	??_getRegisterVal+2
  9479  17D9  3023               	movlw	35
  9480  17DA  00F7               	movwf	??_getRegisterVal+3
  9481  17DB  0874               	movf	??_getRegisterVal,w
  9482  17DC  0776               	addwf	??_getRegisterVal+2,w
  9483  17DD  0086               	movwf	6
  9484  17DE  0875               	movf	??_getRegisterVal+1,w
  9485  17DF  3D77               	addwfc	??_getRegisterVal+3,w
  9486  17E0  0087               	movwf	7
  9487  17E1  0873               	movf	getRegisterVal@tempData,w
  9488  17E2  0084               	movwf	4
  9489  17E3  0185               	clrf	5
  9490  17E4  3F40               	moviw [0]fsr1
  9491  17E5  3F80               	movwi [0]fsr0
  9492  17E6  3F41               	moviw [1]fsr1
  9493  17E7  3F81               	movwi [1]fsr0
  9494                           
  9495                           ;modbus.c: 108: }else{
  9496  17E8  0008               	return
  9497  17E9                     l3561:	
  9498                           
  9499                           ;modbus.c: 109: *tempData=sysData.calibRsAdc[tempAddr>>1];
  9500  17E9  367A               	lsrf	getRegisterVal@tempAddr,w
  9501  17EA  00F4               	movwf	??_getRegisterVal
  9502  17EB  01F5               	clrf	??_getRegisterVal+1
  9503  17EC  35F4               	lslf	??_getRegisterVal,f
  9504  17ED  0DF5               	rlf	??_getRegisterVal+1,f
  9505  17EE  3066               	movlw	102
  9506  17EF  00F6               	movwf	??_getRegisterVal+2
  9507  17F0  3023               	movlw	35
  9508  17F1  00F7               	movwf	??_getRegisterVal+3
  9509  17F2  0874               	movf	??_getRegisterVal,w
  9510  17F3  0776               	addwf	??_getRegisterVal+2,w
  9511  17F4  0086               	movwf	6
  9512  17F5  0875               	movf	??_getRegisterVal+1,w
  9513  17F6  3D77               	addwfc	??_getRegisterVal+3,w
  9514  17F7  0087               	movwf	7
  9515  17F8  0873               	movf	getRegisterVal@tempData,w
  9516  17F9  0084               	movwf	4
  9517  17FA  0185               	clrf	5
  9518  17FB  3F40               	moviw [0]fsr1
  9519  17FC  3F80               	movwi [0]fsr0
  9520  17FD  3F41               	moviw [1]fsr1
  9521  17FE  3F81               	movwi [1]fsr0
  9522  17FF  0008               	return
  9523  1800                     __end_of_getRegisterVal:	
  9524                           ;modbus.c: 110: };modbus.c: 111: };modbus.c: 112: return t16;;	Return value of _getRegis
      +                          terVal is never used
  9525                           
  9526                           
  9527                           	psect	swtext1
  9528  1800                     __pswtext1:	
  9529  1800                     S5449:	
  9530  1800  3197  2F0E         	ljmp	l3515
  9531  1802  3197  2F16         	ljmp	l3517
  9532  1804  3197  2F26         	ljmp	l3519
  9533  1806  3197  2F39         	ljmp	l3521
  9534  1808  3197  2F46         	ljmp	l3523
  9535  180A  3197  2F53         	ljmp	l3525
  9536  180C  3197  2F60         	ljmp	l3527
  9537  180E  3197  2F69         	ljmp	l3529
  9538  1810  3197  2F72         	ljmp	l3531
  9539  1812  3197  2F7B         	ljmp	l3533
  9540  1814  3197  2F84         	ljmp	l3535
  9541  1816  3197  2F8D         	ljmp	l3537
  9542  1818  3197  2F96         	ljmp	l3539
  9543  181A  3197  2F9F         	ljmp	l3541
  9544  181C  3197  2FA8         	ljmp	l3543
  9545                           
  9546                           	psect	text24
  9547  1D81                     __ptext24:	
  9548 ;; *************** function _crc_append *****************
  9549 ;; Defined at:
  9550 ;;		line 143 in file "src/depend/crc16.c"
  9551 ;; Parameters:    Size  Location     Type
  9552 ;;  message         2    6[BANK0 ] PTR unsigned char 
  9553 ;;		 -> modbusBuf(32), sysData(132), 
  9554 ;;  n               2    8[BANK0 ] unsigned int 
  9555 ;; Auto vars:     Size  Location     Type
  9556 ;;  crc             2   10[BANK0 ] unsigned int 
  9557 ;; Return value:  Size  Location     Type
  9558 ;;                  1    wreg      void 
  9559 ;; Registers used:
  9560 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9561 ;; Tracked objects:
  9562 ;;		On entry : 0/0
  9563 ;;		On exit  : 0/0
  9564 ;;		Unchanged: 0/0
  9565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9566 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9567 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9568 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9569 ;;      Totals:         5       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9570 ;;Total ram usage:       11 bytes
  9571 ;; Hardware stack levels used:    1
  9572 ;; Hardware stack levels required when called:    2
  9573 ;; This function calls:
  9574 ;;		_crc_sum
  9575 ;; This function is called by:
  9576 ;;		_sys_data_save
  9577 ;;		_modbus_response_illgeal_function
  9578 ;;		_modbus_response_write_single_register
  9579 ;;		_modbus_response_write_mult_register
  9580 ;;		_modbus_response_command
  9581 ;; This function uses a non-reentrant model
  9582 ;;
  9583                           
  9584                           
  9585                           ;psect for function _crc_append
  9586  1D81                     _crc_append:	
  9587                           
  9588                           ;crc16.c: 145: uint16_t crc;;crc16.c: 146: crc = crc_sum(message, n);
  9589                           
  9590                           ;incstack = 0
  9591                           ; Regs used in _crc_append: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9592  1D81  0020               	movlb	0	; select bank0
  9593  1D82  084E               	movf	crc_append@message+1,w
  9594  1D83  00F2               	movwf	crc_sum@buf+1
  9595  1D84  084D               	movf	crc_append@message,w
  9596  1D85  00F1               	movwf	crc_sum@buf
  9597  1D86  0850               	movf	crc_append@n+1,w
  9598  1D87  00F4               	movwf	crc_sum@len+1
  9599  1D88  084F               	movf	crc_append@n,w
  9600  1D89  00F3               	movwf	crc_sum@len
  9601  1D8A  3191  2174         	fcall	_crc_sum
  9602  1D8C  0872               	movf	?_crc_sum+1,w
  9603  1D8D  0020               	movlb	0	; select bank0
  9604  1D8E  00D2               	movwf	crc_append@crc+1
  9605  1D8F  0871               	movf	?_crc_sum,w
  9606  1D90  00D1               	movwf	crc_append@crc
  9607                           
  9608                           ;crc16.c: 147: message[n] = (uint8_t)(crc & 0xff);
  9609  1D91  084F               	movf	crc_append@n,w
  9610  1D92  074D               	addwf	crc_append@message,w
  9611  1D93  00F7               	movwf	??_crc_append
  9612  1D94  0850               	movf	crc_append@n+1,w
  9613  1D95  3D4E               	addwfc	crc_append@message+1,w
  9614  1D96  00F8               	movwf	??_crc_append+1
  9615  1D97  0877               	movf	??_crc_append,w
  9616  1D98  0086               	movwf	6
  9617  1D99  0878               	movf	??_crc_append+1,w
  9618  1D9A  0087               	movwf	7
  9619  1D9B  0851               	movf	crc_append@crc,w
  9620  1D9C  0081               	movwf	1
  9621                           
  9622                           ;crc16.c: 148: message[n+1] = (uint8_t)((crc >> 8) & 0xff);
  9623  1D9D  0852               	movf	crc_append@crc+1,w
  9624  1D9E  00F7               	movwf	??_crc_append
  9625  1D9F  084F               	movf	crc_append@n,w
  9626  1DA0  3E01               	addlw	1
  9627  1DA1  00F8               	movwf	??_crc_append+1
  9628  1DA2  3000               	movlw	0
  9629  1DA3  3D50               	addwfc	crc_append@n+1,w
  9630  1DA4  00F9               	movwf	??_crc_append+2
  9631  1DA5  0878               	movf	??_crc_append+1,w
  9632  1DA6  074D               	addwf	crc_append@message,w
  9633  1DA7  00FA               	movwf	??_crc_append+3
  9634  1DA8  0879               	movf	??_crc_append+2,w
  9635  1DA9  3D4E               	addwfc	crc_append@message+1,w
  9636  1DAA  00FB               	movwf	??_crc_append+4
  9637  1DAB  087A               	movf	??_crc_append+3,w
  9638  1DAC  0086               	movwf	6
  9639  1DAD  087B               	movf	??_crc_append+4,w
  9640  1DAE  0087               	movwf	7
  9641  1DAF  0877               	movf	??_crc_append,w
  9642  1DB0  0081               	movwf	1
  9643  1DB1  0008               	return
  9644  1DB2                     __end_of_crc_append:	
  9645                           
  9646                           	psect	text25
  9647  1E18                     __ptext25:	
  9648 ;; *************** function _crc_verify *****************
  9649 ;; Defined at:
  9650 ;;		line 135 in file "src/depend/crc16.c"
  9651 ;; Parameters:    Size  Location     Type
  9652 ;;  message         2    6[BANK0 ] PTR unsigned char 
  9653 ;;		 -> modbusBuf(32), sysData(132), 
  9654 ;;  n               2    8[BANK0 ] unsigned int 
  9655 ;; Auto vars:     Size  Location     Type
  9656 ;;  expected        2   12[BANK0 ] unsigned int 
  9657 ;;  crccal          2   10[BANK0 ] unsigned int 
  9658 ;; Return value:  Size  Location     Type
  9659 ;;                  1    wreg      unsigned char 
  9660 ;; Registers used:
  9661 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9662 ;; Tracked objects:
  9663 ;;		On entry : 0/0
  9664 ;;		On exit  : 0/0
  9665 ;;		Unchanged: 0/0
  9666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9667 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9668 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9669 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9670 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9671 ;;Total ram usage:       10 bytes
  9672 ;; Hardware stack levels used:    1
  9673 ;; Hardware stack levels required when called:    2
  9674 ;; This function calls:
  9675 ;;		_crc_sum
  9676 ;;		_m_mem_cpy_len
  9677 ;; This function is called by:
  9678 ;;		_sys_data_init
  9679 ;;		_modbus_response_process
  9680 ;; This function uses a non-reentrant model
  9681 ;;
  9682                           
  9683                           
  9684                           ;psect for function _crc_verify
  9685  1E18                     _crc_verify:	
  9686                           
  9687                           ;crc16.c: 137: uint16_t expected,crccal;;crc16.c: 138: m_mem_cpy_len((uint8_t*)(&expecte
      +                          d),(message+n-2),2);
  9688                           
  9689                           ;incstack = 0
  9690                           ; Regs used in _crc_verify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9691  1E18  3053               	movlw	low crc_verify@expected
  9692  1E19  00F1               	movwf	m_mem_cpy_len@d
  9693  1E1A  3000               	movlw	high crc_verify@expected
  9694  1E1B  00F2               	movwf	m_mem_cpy_len@d+1
  9695  1E1C  0020               	movlb	0	; select bank0
  9696  1E1D  084F               	movf	crc_verify@n,w
  9697  1E1E  074D               	addwf	crc_verify@message,w
  9698  1E1F  00F8               	movwf	??_crc_verify
  9699  1E20  0850               	movf	crc_verify@n+1,w
  9700  1E21  3D4E               	addwfc	crc_verify@message+1,w
  9701  1E22  00F9               	movwf	??_crc_verify+1
  9702  1E23  0878               	movf	??_crc_verify,w
  9703  1E24  3EFE               	addlw	254
  9704  1E25  00F3               	movwf	m_mem_cpy_len@s
  9705  1E26  30FF               	movlw	255
  9706  1E27  3D79               	addwfc	??_crc_verify+1,w
  9707  1E28  00F4               	movwf	m_mem_cpy_len@s+1
  9708  1E29  3002               	movlw	2
  9709  1E2A  00F5               	movwf	m_mem_cpy_len@len
  9710  1E2B  3000               	movlw	0
  9711  1E2C  00F6               	movwf	m_mem_cpy_len@len+1
  9712  1E2D  319D  2541  319E   	fcall	_m_mem_cpy_len
  9713                           
  9714                           ;crc16.c: 139: crccal=crc_sum(message,n - 2);
  9715  1E30  0020               	movlb	0	; select bank0
  9716  1E31  084E               	movf	crc_verify@message+1,w
  9717  1E32  00F2               	movwf	crc_sum@buf+1
  9718  1E33  084D               	movf	crc_verify@message,w
  9719  1E34  00F1               	movwf	crc_sum@buf
  9720  1E35  084F               	movf	crc_verify@n,w
  9721  1E36  3EFE               	addlw	254
  9722  1E37  00F3               	movwf	crc_sum@len
  9723  1E38  30FF               	movlw	255
  9724  1E39  3D50               	addwfc	crc_verify@n+1,w
  9725  1E3A  00F4               	movwf	crc_sum@len+1
  9726  1E3B  3191  2174  319E   	fcall	_crc_sum
  9727  1E3E  0872               	movf	?_crc_sum+1,w
  9728  1E3F  0020               	movlb	0	; select bank0
  9729  1E40  00D2               	movwf	crc_verify@crccal+1
  9730  1E41  0871               	movf	?_crc_sum,w
  9731  1E42  00D1               	movwf	crc_verify@crccal
  9732                           
  9733                           ;crc16.c: 140: if(expected!=crccal)return 0;
  9734  1E43  0852               	movf	crc_verify@crccal+1,w
  9735  1E44  0654               	xorwf	crc_verify@expected+1,w
  9736  1E45  1D03               	skipz
  9737  1E46  2E49               	goto	u4175
  9738  1E47  0851               	movf	crc_verify@crccal,w
  9739  1E48  0653               	xorwf	crc_verify@expected,w
  9740  1E49                     u4175:	
  9741  1E49  1903               	skipnz
  9742  1E4A  2E4D               	goto	l4849
  9743  1E4B  3000               	movlw	0
  9744  1E4C  0008               	return
  9745  1E4D                     l4849:	
  9746                           
  9747                           ;crc16.c: 141: return 1;
  9748  1E4D  3001               	movlw	1
  9749  1E4E  0008               	return
  9750  1E4F                     __end_of_crc_verify:	
  9751                           
  9752                           	psect	text26
  9753  1D41                     __ptext26:	
  9754 ;; *************** function _m_mem_cpy_len *****************
  9755 ;; Defined at:
  9756 ;;		line 50 in file "src/depend/m_string.c"
  9757 ;; Parameters:    Size  Location     Type
  9758 ;;  d               2    1[COMMON] PTR unsigned char 
  9759 ;;		 -> crc_verify@expected(2), modbusBuf(32), txBuf(64), 
  9760 ;;  s               2    3[COMMON] PTR unsigned char 
  9761 ;;		 -> modbusBuf(32), sysData(132), eusartRxBuffer(32), 
  9762 ;;  len             2    5[COMMON] unsigned int 
  9763 ;; Auto vars:     Size  Location     Type
  9764 ;;		None
  9765 ;; Return value:  Size  Location     Type
  9766 ;;                  1    wreg      void 
  9767 ;; Registers used:
  9768 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9769 ;; Tracked objects:
  9770 ;;		On entry : 0/0
  9771 ;;		On exit  : 0/0
  9772 ;;		Unchanged: 0/0
  9773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9774 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9776 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9777 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9778 ;;Total ram usage:        7 bytes
  9779 ;; Hardware stack levels used:    1
  9780 ;; Hardware stack levels required when called:    1
  9781 ;; This function calls:
  9782 ;;		Nothing
  9783 ;; This function is called by:
  9784 ;;		_uart_send_len
  9785 ;;		_main
  9786 ;;		_crc_verify
  9787 ;; This function uses a non-reentrant model
  9788 ;;
  9789                           
  9790                           
  9791                           ;psect for function _m_mem_cpy_len
  9792  1D41                     _m_mem_cpy_len:	
  9793  1D41                     l4793:	
  9794                           ;m_string.c: 53: while(len)
  9795                           
  9796                           ;incstack = 0
  9797                           ; Regs used in _m_mem_cpy_len: [wreg+fsr1l+fsr1h+status,2+status,0]
  9798                           
  9799  1D41  0875               	movf	m_mem_cpy_len@len,w
  9800  1D42  0476               	iorwf	m_mem_cpy_len@len+1,w
  9801  1D43  1903               	btfsc	3,2
  9802  1D44  0008               	return
  9803                           
  9804                           ;m_string.c: 54: {;m_string.c: 55: *d++=*s++;
  9805  1D45  0873               	movf	m_mem_cpy_len@s,w
  9806  1D46  0086               	movwf	6
  9807  1D47  0874               	movf	m_mem_cpy_len@s+1,w
  9808  1D48  0087               	movwf	7
  9809  1D49  0801               	movf	1,w
  9810  1D4A  00F7               	movwf	??_m_mem_cpy_len
  9811  1D4B  0871               	movf	m_mem_cpy_len@d,w
  9812  1D4C  0086               	movwf	6
  9813  1D4D  0872               	movf	m_mem_cpy_len@d+1,w
  9814  1D4E  0087               	movwf	7
  9815  1D4F  0877               	movf	??_m_mem_cpy_len,w
  9816  1D50  0081               	movwf	1
  9817  1D51  3001               	movlw	1
  9818  1D52  07F3               	addwf	m_mem_cpy_len@s,f
  9819  1D53  3000               	movlw	0
  9820  1D54  3DF4               	addwfc	m_mem_cpy_len@s+1,f
  9821  1D55  3001               	movlw	1
  9822  1D56  07F1               	addwf	m_mem_cpy_len@d,f
  9823  1D57  3000               	movlw	0
  9824  1D58  3DF2               	addwfc	m_mem_cpy_len@d+1,f
  9825                           
  9826                           ;m_string.c: 56: len--;
  9827  1D59  3001               	movlw	1
  9828  1D5A  02F5               	subwf	m_mem_cpy_len@len,f
  9829  1D5B  3000               	movlw	0
  9830  1D5C  3BF6               	subwfb	m_mem_cpy_len@len+1,f
  9831  1D5D  2D41               	goto	l4793
  9832  1D5E                     __end_of_m_mem_cpy_len:	
  9833                           
  9834                           	psect	text27
  9835  1174                     __ptext27:	
  9836 ;; *************** function _crc_sum *****************
  9837 ;; Defined at:
  9838 ;;		line 116 in file "src/depend/crc16.c"
  9839 ;; Parameters:    Size  Location     Type
  9840 ;;  buf             2    1[COMMON] PTR unsigned char 
  9841 ;;		 -> modbusBuf(32), sysData(132), 
  9842 ;;  len             2    3[COMMON] unsigned int 
  9843 ;; Auto vars:     Size  Location     Type
  9844 ;;  crc             2    4[BANK0 ] unsigned int 
  9845 ;;  i               2    2[BANK0 ] unsigned int 
  9846 ;;  j               2    0[BANK0 ] unsigned int 
  9847 ;; Return value:  Size  Location     Type
  9848 ;;                  2    1[COMMON] unsigned int 
  9849 ;; Registers used:
  9850 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9851 ;; Tracked objects:
  9852 ;;		On entry : 0/0
  9853 ;;		On exit  : 0/0
  9854 ;;		Unchanged: 0/0
  9855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9856 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9857 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9858 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9859 ;;      Totals:         6       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9860 ;;Total ram usage:       12 bytes
  9861 ;; Hardware stack levels used:    1
  9862 ;; Hardware stack levels required when called:    1
  9863 ;; This function calls:
  9864 ;;		Nothing
  9865 ;; This function is called by:
  9866 ;;		_crc_verify
  9867 ;;		_crc_append
  9868 ;; This function uses a non-reentrant model
  9869 ;;
  9870                           
  9871                           
  9872                           ;psect for function _crc_sum
  9873  1174                     _crc_sum:	
  9874                           
  9875                           ;crc16.c: 118: uint16_t crc=0xFFFF;
  9876                           
  9877                           ;incstack = 0
  9878                           ; Regs used in _crc_sum: [wreg+fsr1l+fsr1h+status,2+status,0]
  9879  1174  30FF               	movlw	255
  9880  1175  0020               	movlb	0	; select bank0
  9881  1176  00CB               	movwf	crc_sum@crc
  9882  1177  30FF               	movlw	255
  9883  1178  00CC               	movwf	crc_sum@crc+1
  9884                           
  9885                           ;crc16.c: 119: uint16_t i, j;;crc16.c: 120: for ( j=0; j<len;j++){
  9886  1179  01C7               	clrf	crc_sum@j
  9887  117A  01C8               	clrf	crc_sum@j+1
  9888  117B                     l1068:	
  9889  117B  0874               	movf	crc_sum@len+1,w
  9890  117C  0248               	subwf	crc_sum@j+1,w
  9891  117D  1D03               	skipz
  9892  117E  2981               	goto	u4095
  9893  117F  0873               	movf	crc_sum@len,w
  9894  1180  0247               	subwf	crc_sum@j,w
  9895  1181                     u4095:	
  9896  1181  1803               	btfsc	3,0
  9897  1182  29C5               	goto	l4779
  9898                           
  9899                           ;crc16.c: 121: crc=crc ^*buf++;
  9900  1183  0871               	movf	crc_sum@buf,w
  9901  1184  0086               	movwf	6
  9902  1185  0872               	movf	crc_sum@buf+1,w
  9903  1186  0087               	movwf	7
  9904  1187  084B               	movf	crc_sum@crc,w
  9905  1188  0601               	xorwf	1,w
  9906  1189  00CB               	movwf	crc_sum@crc
  9907  118A  084C               	movf	crc_sum@crc+1,w
  9908  118B  00CC               	movwf	crc_sum@crc+1
  9909  118C  3001               	movlw	1
  9910  118D  07F1               	addwf	crc_sum@buf,f
  9911  118E  3000               	movlw	0
  9912  118F  3DF2               	addwfc	crc_sum@buf+1,f
  9913                           
  9914                           ;crc16.c: 122: for ( i=0; i<8; i++){
  9915  1190  01C9               	clrf	crc_sum@i
  9916  1191  01CA               	clrf	crc_sum@i+1
  9917  1192  3000               	movlw	0
  9918  1193  024A               	subwf	crc_sum@i+1,w
  9919  1194  3008               	movlw	8
  9920  1195  1903               	skipnz
  9921  1196  0249               	subwf	crc_sum@i,w
  9922  1197  1803               	btfsc	3,0
  9923  1198  29C0               	goto	l4777
  9924  1199                     l1070:	
  9925                           
  9926                           ;crc16.c: 124: if(crc&0x0001){
  9927  1199  1C4B               	btfss	crc_sum@crc,0
  9928  119A  29AB               	goto	l4771
  9929                           
  9930                           ;crc16.c: 125: crc=crc>>1;
  9931  119B  084C               	movf	crc_sum@crc+1,w
  9932  119C  00F6               	movwf	??_crc_sum+1
  9933  119D  084B               	movf	crc_sum@crc,w
  9934  119E  00F5               	movwf	??_crc_sum
  9935  119F  36F6               	lsrf	??_crc_sum+1,f
  9936  11A0  0CF5               	rrf	??_crc_sum,f
  9937  11A1  0875               	movf	??_crc_sum,w
  9938  11A2  00CB               	movwf	crc_sum@crc
  9939  11A3  0876               	movf	??_crc_sum+1,w
  9940  11A4  00CC               	movwf	crc_sum@crc+1
  9941                           
  9942                           ;crc16.c: 126: crc=crc^ 0xa001;
  9943  11A5  3001               	movlw	1
  9944  11A6  064B               	xorwf	crc_sum@crc,w
  9945  11A7  00CB               	movwf	crc_sum@crc
  9946  11A8  30A0               	movlw	160
  9947  11A9  064C               	xorwf	crc_sum@crc+1,w
  9948  11AA  29B4               	goto	L1
  9949  11AB                     l4771:	
  9950                           ;crc16.c: 127: }else{
  9951                           
  9952                           
  9953                           ;crc16.c: 128: crc=crc>>1;
  9954  11AB  084C               	movf	crc_sum@crc+1,w
  9955  11AC  00F6               	movwf	??_crc_sum+1
  9956  11AD  084B               	movf	crc_sum@crc,w
  9957  11AE  00F5               	movwf	??_crc_sum
  9958  11AF  36F6               	lsrf	??_crc_sum+1,f
  9959  11B0  0CF5               	rrf	??_crc_sum,f
  9960  11B1  0875               	movf	??_crc_sum,w
  9961  11B2  00CB               	movwf	crc_sum@crc
  9962  11B3  0876               	movf	??_crc_sum+1,w
  9963  11B4                     L1:	
  9964  11B4  00CC               	movwf	crc_sum@crc+1
  9965  11B5  3001               	movlw	1
  9966  11B6  07C9               	addwf	crc_sum@i,f
  9967  11B7  3000               	movlw	0
  9968  11B8  3DCA               	addwfc	crc_sum@i+1,f
  9969  11B9  3000               	movlw	0
  9970  11BA  024A               	subwf	crc_sum@i+1,w
  9971  11BB  3008               	movlw	8
  9972  11BC  1903               	skipnz
  9973  11BD  0249               	subwf	crc_sum@i,w
  9974  11BE  1C03               	skipc
  9975  11BF  2999               	goto	l1070
  9976  11C0                     l4777:	
  9977  11C0  3001               	movlw	1
  9978  11C1  07C7               	addwf	crc_sum@j,f
  9979  11C2  3000               	movlw	0
  9980  11C3  3DC8               	addwfc	crc_sum@j+1,f
  9981  11C4  297B               	goto	l1068
  9982  11C5                     l4779:	
  9983                           
  9984                           ;crc16.c: 129: };crc16.c: 130: };crc16.c: 132: };crc16.c: 133: return ( crc);
  9985  11C5  084C               	movf	crc_sum@crc+1,w
  9986  11C6  00F2               	movwf	?_crc_sum+1
  9987  11C7  084B               	movf	crc_sum@crc,w
  9988  11C8  00F1               	movwf	?_crc_sum
  9989  11C9  0008               	return
  9990  11CA                     __end_of_crc_sum:	
  9991                           
  9992                           	psect	text28
  9993  140A                     __ptext28:	
  9994 ;; *************** function _calc_temp_rs *****************
  9995 ;; Defined at:
  9996 ;;		line 216 in file "src/api/sample.c"
  9997 ;; Parameters:    Size  Location     Type
  9998 ;;		None
  9999 ;; Auto vars:     Size  Location     Type
 10000 ;;		None
 10001 ;; Return value:  Size  Location     Type
 10002 ;;                  4    5[BANK0 ] unsigned long 
 10003 ;; Registers used:
 10004 ;;		wreg, status,2, status,0, pclath, cstack
 10005 ;; Tracked objects:
 10006 ;;		On entry : 0/0
 10007 ;;		On exit  : 0/0
 10008 ;;		Unchanged: 0/0
 10009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10010 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10012 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10013 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10014 ;;Total ram usage:        8 bytes
 10015 ;; Hardware stack levels used:    1
 10016 ;; Hardware stack levels required when called:    2
 10017 ;; This function calls:
 10018 ;;		___lldiv
 10019 ;;		___lmul
 10020 ;; This function is called by:
 10021 ;;		_main
 10022 ;; This function uses a non-reentrant model
 10023 ;;
 10024                           
 10025                           
 10026                           ;psect for function _calc_temp_rs
 10027  140A                     _calc_temp_rs:	
 10028                           
 10029                           ;sample.c: 230: y32=12000UL;
 10030                           
 10031                           ;incstack = 0
 10032                           ; Regs used in _calc_temp_rs: [wreg+status,2+status,0+pclath+cstack]
 10033  140A  3000               	movlw	0
 10034  140B  0020               	movlb	0	; select bank0
 10035  140C  00A3               	movwf	_y32+3
 10036  140D  3000               	movlw	0
 10037  140E  00A2               	movwf	_y32+2
 10038  140F  302E               	movlw	46
 10039  1410  00A1               	movwf	_y32+1
 10040  1411  30E0               	movlw	224
 10041  1412  00A0               	movwf	_y32
 10042                           
 10043                           ;sample.c: 231: y32=y32*rtAdcValueRsHi;
 10044  1413  0838               	movf	_rtAdcValueRsHi,w
 10045  1414  00F1               	movwf	___lmul@multiplier
 10046  1415  0839               	movf	_rtAdcValueRsHi+1,w
 10047  1416  00F2               	movwf	___lmul@multiplier+1
 10048  1417  01F3               	clrf	___lmul@multiplier+2
 10049  1418  01F4               	clrf	___lmul@multiplier+3
 10050  1419  0823               	movf	_y32+3,w
 10051  141A  00F8               	movwf	___lmul@multiplicand+3
 10052  141B  0822               	movf	_y32+2,w
 10053  141C  00F7               	movwf	___lmul@multiplicand+2
 10054  141D  0821               	movf	_y32+1,w
 10055  141E  00F6               	movwf	___lmul@multiplicand+1
 10056  141F  0820               	movf	_y32,w
 10057  1420  00F5               	movwf	___lmul@multiplicand
 10058  1421  319D  25B2  3194   	fcall	___lmul
 10059  1424  0874               	movf	?___lmul+3,w
 10060  1425  0020               	movlb	0	; select bank0
 10061  1426  00A3               	movwf	_y32+3
 10062  1427  0873               	movf	?___lmul+2,w
 10063  1428  00A2               	movwf	_y32+2
 10064  1429  0872               	movf	?___lmul+1,w
 10065  142A  00A1               	movwf	_y32+1
 10066  142B  0871               	movf	?___lmul,w
 10067  142C  00A0               	movwf	_y32
 10068                           
 10069                           ;sample.c: 232: x32=rtAdcValueRsLo;
 10070  142D  083A               	movf	_rtAdcValueRsLo,w
 10071  142E  0021               	movlb	1	; select bank1
 10072  142F  00B8               	movwf	_x32^(0+128)
 10073  1430  0020               	movlb	0	; select bank0
 10074  1431  083B               	movf	_rtAdcValueRsLo+1,w
 10075  1432  0021               	movlb	1	; select bank1
 10076  1433  00B9               	movwf	(_x32^(0+128)+1)
 10077  1434  01BA               	clrf	(_x32^(0+128)+2)
 10078  1435  01BB               	clrf	(_x32^(0+128)+3)
 10079                           
 10080                           ;sample.c: 233: y32=y32/x32;
 10081  1436  083B               	movf	(_x32+3)^(0+128),w
 10082  1437  00F4               	movwf	___lldiv@divisor+3
 10083  1438  083A               	movf	(_x32+2)^(0+128),w
 10084  1439  00F3               	movwf	___lldiv@divisor+2
 10085  143A  0839               	movf	(_x32+1)^(0+128),w
 10086  143B  00F2               	movwf	___lldiv@divisor+1
 10087  143C  0838               	movf	_x32^(0+128),w
 10088  143D  00F1               	movwf	___lldiv@divisor
 10089  143E  0020               	movlb	0	; select bank0
 10090  143F  0823               	movf	_y32+3,w
 10091  1440  00F8               	movwf	___lldiv@dividend+3
 10092  1441  0822               	movf	_y32+2,w
 10093  1442  00F7               	movwf	___lldiv@dividend+2
 10094  1443  0821               	movf	_y32+1,w
 10095  1444  00F6               	movwf	___lldiv@dividend+1
 10096  1445  0820               	movf	_y32,w
 10097  1446  00F5               	movwf	___lldiv@dividend
 10098  1447  3190  20CD  3194   	fcall	___lldiv
 10099  144A  0874               	movf	?___lldiv+3,w
 10100  144B  0020               	movlb	0	; select bank0
 10101  144C  00A3               	movwf	_y32+3
 10102  144D  0873               	movf	?___lldiv+2,w
 10103  144E  00A2               	movwf	_y32+2
 10104  144F  0872               	movf	?___lldiv+1,w
 10105  1450  00A1               	movwf	_y32+1
 10106  1451  0871               	movf	?___lldiv,w
 10107  1452  00A0               	movwf	_y32
 10108                           
 10109                           ;sample.c: 234: if(y32<2000)y32=2000;
 10110  1453  0823               	movf	_y32+3,w
 10111  1454  1D03               	btfss	3,2
 10112  1455  2C67               	goto	l5087
 10113  1456  0822               	movf	_y32+2,w
 10114  1457  1D03               	btfss	3,2
 10115  1458  2C67               	goto	l5087
 10116  1459  30D0               	movlw	208
 10117  145A  0220               	subwf	_y32,w
 10118  145B  3007               	movlw	7
 10119  145C  3B21               	subwfb	_y32+1,w
 10120  145D  1803               	btfsc	3,0
 10121  145E  2C67               	goto	l5087
 10122  145F  3000               	movlw	0
 10123  1460  00A3               	movwf	_y32+3
 10124  1461  3000               	movlw	0
 10125  1462  00A2               	movwf	_y32+2
 10126  1463  3007               	movlw	7
 10127  1464  00A1               	movwf	_y32+1
 10128  1465  30D0               	movlw	208
 10129  1466  00A0               	movwf	_y32
 10130  1467                     l5087:	
 10131                           
 10132                           ;sample.c: 235: if(y32>25000)y32=25000;
 10133  1467  0823               	movf	_y32+3,w
 10134  1468  1D03               	btfss	3,2
 10135  1469  2C73               	goto	l5089
 10136  146A  0822               	movf	_y32+2,w
 10137  146B  1D03               	btfss	3,2
 10138  146C  2C73               	goto	l5089
 10139  146D  30A9               	movlw	169
 10140  146E  0220               	subwf	_y32,w
 10141  146F  3061               	movlw	97
 10142  1470  3B21               	subwfb	_y32+1,w
 10143  1471  1C03               	btfss	3,0
 10144  1472  2C7B               	goto	l647
 10145  1473                     l5089:	
 10146  1473  3000               	movlw	0
 10147  1474  00A3               	movwf	_y32+3
 10148  1475  3000               	movlw	0
 10149  1476  00A2               	movwf	_y32+2
 10150  1477  3061               	movlw	97
 10151  1478  00A1               	movwf	_y32+1
 10152  1479  30A8               	movlw	168
 10153  147A  00A0               	movwf	_y32
 10154  147B                     l647:	
 10155                           
 10156                           ;sample.c: 236: y32=y32-1000;
 10157  147B  3018               	movlw	24
 10158  147C  00D0               	movwf	??_calc_temp_rs
 10159  147D  30FC               	movlw	252
 10160  147E  00D1               	movwf	??_calc_temp_rs+1
 10161  147F  30FF               	movlw	255
 10162  1480  00D2               	movwf	??_calc_temp_rs+2
 10163  1481  30FF               	movlw	255
 10164  1482  00D3               	movwf	??_calc_temp_rs+3
 10165  1483  0820               	movf	_y32,w
 10166  1484  07D0               	addwf	??_calc_temp_rs,f
 10167  1485  0821               	movf	_y32+1,w
 10168  1486  3DD1               	addwfc	??_calc_temp_rs+1,f
 10169  1487  0822               	movf	_y32+2,w
 10170  1488  3DD2               	addwfc	??_calc_temp_rs+2,f
 10171  1489  0823               	movf	_y32+3,w
 10172  148A  3DD3               	addwfc	??_calc_temp_rs+3,f
 10173  148B  0853               	movf	??_calc_temp_rs+3,w
 10174  148C  00A3               	movwf	_y32+3
 10175  148D  0852               	movf	??_calc_temp_rs+2,w
 10176  148E  00A2               	movwf	_y32+2
 10177  148F  0851               	movf	??_calc_temp_rs+1,w
 10178  1490  00A1               	movwf	_y32+1
 10179  1491  0850               	movf	??_calc_temp_rs,w
 10180  1492  00A0               	movwf	_y32
 10181                           
 10182                           ;sample.c: 237: return (uint16_t)y32;
 10183  1493  0820               	movf	_y32,w
 10184  1494  00CC               	movwf	?_calc_temp_rs
 10185  1495  0821               	movf	_y32+1,w
 10186  1496  00CD               	movwf	?_calc_temp_rs+1
 10187  1497  01CE               	clrf	?_calc_temp_rs+2
 10188  1498  01CF               	clrf	?_calc_temp_rs+3
 10189  1499  0008               	return
 10190  149A                     __end_of_calc_temp_rs:	
 10191                           
 10192                           	psect	text29
 10193  162E                     __ptext29:	
 10194 ;; *************** function _calc_temp_rc *****************
 10195 ;; Defined at:
 10196 ;;		line 240 in file "src/api/sample.c"
 10197 ;; Parameters:    Size  Location     Type
 10198 ;;		None
 10199 ;; Auto vars:     Size  Location     Type
 10200 ;;		None
 10201 ;; Return value:  Size  Location     Type
 10202 ;;                  4    5[BANK0 ] unsigned long 
 10203 ;; Registers used:
 10204 ;;		wreg, status,2, status,0, pclath, cstack
 10205 ;; Tracked objects:
 10206 ;;		On entry : 0/0
 10207 ;;		On exit  : 0/0
 10208 ;;		Unchanged: 0/0
 10209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10210 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10212 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10213 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10214 ;;Total ram usage:       12 bytes
 10215 ;; Hardware stack levels used:    1
 10216 ;; Hardware stack levels required when called:    2
 10217 ;; This function calls:
 10218 ;;		___lldiv
 10219 ;;		___lmul
 10220 ;; This function is called by:
 10221 ;;		_main
 10222 ;; This function uses a non-reentrant model
 10223 ;;
 10224                           
 10225                           
 10226                           ;psect for function _calc_temp_rc
 10227  162E                     _calc_temp_rc:	
 10228                           
 10229                           ;sample.c: 244: x32=300000UL;
 10230                           
 10231                           ;incstack = 0
 10232                           ; Regs used in _calc_temp_rc: [wreg+status,2+status,0+pclath+cstack]
 10233  162E  3000               	movlw	0
 10234  162F  0021               	movlb	1	; select bank1
 10235  1630  00BB               	movwf	(_x32+3)^(0+128)
 10236  1631  3004               	movlw	4
 10237  1632  00BA               	movwf	(_x32+2)^(0+128)
 10238  1633  3093               	movlw	147
 10239  1634  00B9               	movwf	(_x32+1)^(0+128)
 10240  1635  30E0               	movlw	224
 10241  1636  00B8               	movwf	_x32^(0+128)
 10242                           
 10243                           ;sample.c: 245: x32=x32*rtAdcValueRcLo;
 10244  1637  0020               	movlb	0	; select bank0
 10245  1638  0836               	movf	_rtAdcValueRcLo,w
 10246  1639  00F1               	movwf	___lmul@multiplier
 10247  163A  0837               	movf	_rtAdcValueRcLo+1,w
 10248  163B  00F2               	movwf	___lmul@multiplier+1
 10249  163C  01F3               	clrf	___lmul@multiplier+2
 10250  163D  01F4               	clrf	___lmul@multiplier+3
 10251  163E  0021               	movlb	1	; select bank1
 10252  163F  083B               	movf	(_x32+3)^(0+128),w
 10253  1640  00F8               	movwf	___lmul@multiplicand+3
 10254  1641  083A               	movf	(_x32+2)^(0+128),w
 10255  1642  00F7               	movwf	___lmul@multiplicand+2
 10256  1643  0839               	movf	(_x32+1)^(0+128),w
 10257  1644  00F6               	movwf	___lmul@multiplicand+1
 10258  1645  0838               	movf	_x32^(0+128),w
 10259  1646  00F5               	movwf	___lmul@multiplicand
 10260  1647  319D  25B2  3196   	fcall	___lmul
 10261  164A  0874               	movf	?___lmul+3,w
 10262  164B  0021               	movlb	1	; select bank1
 10263  164C  00BB               	movwf	(_x32+3)^(0+128)
 10264  164D  0873               	movf	?___lmul+2,w
 10265  164E  00BA               	movwf	(_x32+2)^(0+128)
 10266  164F  0872               	movf	?___lmul+1,w
 10267  1650  00B9               	movwf	(_x32+1)^(0+128)
 10268  1651  0871               	movf	?___lmul,w
 10269  1652  00B8               	movwf	_x32^(0+128)
 10270                           
 10271                           ;sample.c: 248: y32=rtAdcValueRcHi;
 10272  1653  0020               	movlb	0	; select bank0
 10273  1654  0834               	movf	_rtAdcValueRcHi,w
 10274  1655  00A0               	movwf	_y32
 10275  1656  0835               	movf	_rtAdcValueRcHi+1,w
 10276  1657  00A1               	movwf	_y32+1
 10277  1658  01A2               	clrf	_y32+2
 10278  1659  01A3               	clrf	_y32+3
 10279                           
 10280                           ;sample.c: 249: y32=y32*3100;
 10281  165A  0823               	movf	_y32+3,w
 10282  165B  00F4               	movwf	___lmul@multiplier+3
 10283  165C  0822               	movf	_y32+2,w
 10284  165D  00F3               	movwf	___lmul@multiplier+2
 10285  165E  0821               	movf	_y32+1,w
 10286  165F  00F2               	movwf	___lmul@multiplier+1
 10287  1660  0820               	movf	_y32,w
 10288  1661  00F1               	movwf	___lmul@multiplier
 10289  1662  3000               	movlw	0
 10290  1663  00F8               	movwf	___lmul@multiplicand+3
 10291  1664  3000               	movlw	0
 10292  1665  00F7               	movwf	___lmul@multiplicand+2
 10293  1666  300C               	movlw	12
 10294  1667  00F6               	movwf	___lmul@multiplicand+1
 10295  1668  301C               	movlw	28
 10296  1669  00F5               	movwf	___lmul@multiplicand
 10297  166A  319D  25B2  3196   	fcall	___lmul
 10298  166D  0874               	movf	?___lmul+3,w
 10299  166E  0020               	movlb	0	; select bank0
 10300  166F  00A3               	movwf	_y32+3
 10301  1670  0873               	movf	?___lmul+2,w
 10302  1671  00A2               	movwf	_y32+2
 10303  1672  0872               	movf	?___lmul+1,w
 10304  1673  00A1               	movwf	_y32+1
 10305  1674  0871               	movf	?___lmul,w
 10306  1675  00A0               	movwf	_y32
 10307                           
 10308                           ;sample.c: 250: y32=y32/100;
 10309  1676  3000               	movlw	0
 10310  1677  00F4               	movwf	___lldiv@divisor+3
 10311  1678  3000               	movlw	0
 10312  1679  00F3               	movwf	___lldiv@divisor+2
 10313  167A  3000               	movlw	0
 10314  167B  00F2               	movwf	___lldiv@divisor+1
 10315  167C  3064               	movlw	100
 10316  167D  00F1               	movwf	___lldiv@divisor
 10317  167E  0823               	movf	_y32+3,w
 10318  167F  00F8               	movwf	___lldiv@dividend+3
 10319  1680  0822               	movf	_y32+2,w
 10320  1681  00F7               	movwf	___lldiv@dividend+2
 10321  1682  0821               	movf	_y32+1,w
 10322  1683  00F6               	movwf	___lldiv@dividend+1
 10323  1684  0820               	movf	_y32,w
 10324  1685  00F5               	movwf	___lldiv@dividend
 10325  1686  3190  20CD  3196   	fcall	___lldiv
 10326  1689  0874               	movf	?___lldiv+3,w
 10327  168A  0020               	movlb	0	; select bank0
 10328  168B  00A3               	movwf	_y32+3
 10329  168C  0873               	movf	?___lldiv+2,w
 10330  168D  00A2               	movwf	_y32+2
 10331  168E  0872               	movf	?___lldiv+1,w
 10332  168F  00A1               	movwf	_y32+1
 10333  1690  0871               	movf	?___lldiv,w
 10334  1691  00A0               	movwf	_y32
 10335                           
 10336                           ;sample.c: 251: y32=y32-rtAdcValueRcLo;
 10337  1692  0820               	movf	_y32,w
 10338  1693  00D0               	movwf	??_calc_temp_rc
 10339  1694  0821               	movf	_y32+1,w
 10340  1695  00D1               	movwf	??_calc_temp_rc+1
 10341  1696  0822               	movf	_y32+2,w
 10342  1697  00D2               	movwf	??_calc_temp_rc+2
 10343  1698  0823               	movf	_y32+3,w
 10344  1699  00D3               	movwf	??_calc_temp_rc+3
 10345  169A  0836               	movf	_rtAdcValueRcLo,w
 10346  169B  00D4               	movwf	??_calc_temp_rc+4
 10347  169C  0837               	movf	_rtAdcValueRcLo+1,w
 10348  169D  00D5               	movwf	??_calc_temp_rc+5
 10349  169E  01D6               	clrf	??_calc_temp_rc+6
 10350  169F  01D7               	clrf	??_calc_temp_rc+7
 10351  16A0  09D4               	comf	??_calc_temp_rc+4,f
 10352  16A1  09D5               	comf	??_calc_temp_rc+5,f
 10353  16A2  09D6               	comf	??_calc_temp_rc+6,f
 10354  16A3  09D7               	comf	??_calc_temp_rc+7,f
 10355  16A4  0AD4               	incf	??_calc_temp_rc+4,f
 10356  16A5  1903               	skipnz
 10357  16A6  0AD5               	incf	??_calc_temp_rc+5,f
 10358  16A7  1903               	skipnz
 10359  16A8  0AD6               	incf	??_calc_temp_rc+6,f
 10360  16A9  1903               	skipnz
 10361  16AA  0AD7               	incf	??_calc_temp_rc+7,f
 10362  16AB  0854               	movf	??_calc_temp_rc+4,w
 10363  16AC  07D0               	addwf	??_calc_temp_rc,f
 10364  16AD  0855               	movf	??_calc_temp_rc+5,w
 10365  16AE  3DD1               	addwfc	??_calc_temp_rc+1,f
 10366  16AF  0856               	movf	??_calc_temp_rc+6,w
 10367  16B0  3DD2               	addwfc	??_calc_temp_rc+2,f
 10368  16B1  0857               	movf	??_calc_temp_rc+7,w
 10369  16B2  3DD3               	addwfc	??_calc_temp_rc+3,f
 10370  16B3  0853               	movf	??_calc_temp_rc+3,w
 10371  16B4  00A3               	movwf	_y32+3
 10372  16B5  0852               	movf	??_calc_temp_rc+2,w
 10373  16B6  00A2               	movwf	_y32+2
 10374  16B7  0851               	movf	??_calc_temp_rc+1,w
 10375  16B8  00A1               	movwf	_y32+1
 10376  16B9  0850               	movf	??_calc_temp_rc,w
 10377  16BA  00A0               	movwf	_y32
 10378                           
 10379                           ;sample.c: 254: y32=x32/y32;
 10380  16BB  0823               	movf	_y32+3,w
 10381  16BC  00F4               	movwf	___lldiv@divisor+3
 10382  16BD  0822               	movf	_y32+2,w
 10383  16BE  00F3               	movwf	___lldiv@divisor+2
 10384  16BF  0821               	movf	_y32+1,w
 10385  16C0  00F2               	movwf	___lldiv@divisor+1
 10386  16C1  0820               	movf	_y32,w
 10387  16C2  00F1               	movwf	___lldiv@divisor
 10388  16C3  0021               	movlb	1	; select bank1
 10389  16C4  083B               	movf	(_x32+3)^(0+128),w
 10390  16C5  00F8               	movwf	___lldiv@dividend+3
 10391  16C6  083A               	movf	(_x32+2)^(0+128),w
 10392  16C7  00F7               	movwf	___lldiv@dividend+2
 10393  16C8  0839               	movf	(_x32+1)^(0+128),w
 10394  16C9  00F6               	movwf	___lldiv@dividend+1
 10395  16CA  0838               	movf	_x32^(0+128),w
 10396  16CB  00F5               	movwf	___lldiv@dividend
 10397  16CC  3190  20CD  3196   	fcall	___lldiv
 10398  16CF  0874               	movf	?___lldiv+3,w
 10399  16D0  0020               	movlb	0	; select bank0
 10400  16D1  00A3               	movwf	_y32+3
 10401  16D2  0873               	movf	?___lldiv+2,w
 10402  16D3  00A2               	movwf	_y32+2
 10403  16D4  0872               	movf	?___lldiv+1,w
 10404  16D5  00A1               	movwf	_y32+1
 10405  16D6  0871               	movf	?___lldiv,w
 10406  16D7  00A0               	movwf	_y32
 10407                           
 10408                           ;sample.c: 255: if(y32<2000)y32=2000;
 10409  16D8  0823               	movf	_y32+3,w
 10410  16D9  1D03               	btfss	3,2
 10411  16DA  2EEC               	goto	l5105
 10412  16DB  0822               	movf	_y32+2,w
 10413  16DC  1D03               	btfss	3,2
 10414  16DD  2EEC               	goto	l5105
 10415  16DE  30D0               	movlw	208
 10416  16DF  0220               	subwf	_y32,w
 10417  16E0  3007               	movlw	7
 10418  16E1  3B21               	subwfb	_y32+1,w
 10419  16E2  1803               	btfsc	3,0
 10420  16E3  2EEC               	goto	l5105
 10421  16E4  3000               	movlw	0
 10422  16E5  00A3               	movwf	_y32+3
 10423  16E6  3000               	movlw	0
 10424  16E7  00A2               	movwf	_y32+2
 10425  16E8  3007               	movlw	7
 10426  16E9  00A1               	movwf	_y32+1
 10427  16EA  30D0               	movlw	208
 10428  16EB  00A0               	movwf	_y32
 10429  16EC                     l5105:	
 10430                           
 10431                           ;sample.c: 256: if(y32>25000)y32=25000;
 10432  16EC  0823               	movf	_y32+3,w
 10433  16ED  1D03               	btfss	3,2
 10434  16EE  2EF8               	goto	l5107
 10435  16EF  0822               	movf	_y32+2,w
 10436  16F0  1D03               	btfss	3,2
 10437  16F1  2EF8               	goto	l5107
 10438  16F2  30A9               	movlw	169
 10439  16F3  0220               	subwf	_y32,w
 10440  16F4  3061               	movlw	97
 10441  16F5  3B21               	subwfb	_y32+1,w
 10442  16F6  1C03               	btfss	3,0
 10443  16F7  2F00               	goto	l652
 10444  16F8                     l5107:	
 10445  16F8  3000               	movlw	0
 10446  16F9  00A3               	movwf	_y32+3
 10447  16FA  3000               	movlw	0
 10448  16FB  00A2               	movwf	_y32+2
 10449  16FC  3061               	movlw	97
 10450  16FD  00A1               	movwf	_y32+1
 10451  16FE  30A8               	movlw	168
 10452  16FF  00A0               	movwf	_y32
 10453  1700                     l652:	
 10454                           
 10455                           ;sample.c: 258: return (uint16_t)y32;
 10456  1700  0820               	movf	_y32,w
 10457  1701  00CC               	movwf	?_calc_temp_rc
 10458  1702  0821               	movf	_y32+1,w
 10459  1703  00CD               	movwf	?_calc_temp_rc+1
 10460  1704  01CE               	clrf	?_calc_temp_rc+2
 10461  1705  01CF               	clrf	?_calc_temp_rc+3
 10462  1706  0008               	return
 10463  1707                     __end_of_calc_temp_rc:	
 10464                           
 10465                           	psect	text30
 10466  1227                     __ptext30:	
 10467 ;; *************** function _calc_rs_lo_avg *****************
 10468 ;; Defined at:
 10469 ;;		line 446 in file "src/api/sample.c"
 10470 ;; Parameters:    Size  Location     Type
 10471 ;;  x               2    5[BANK0 ] unsigned int 
 10472 ;; Auto vars:     Size  Location     Type
 10473 ;;  t32             4    7[BANK0 ] unsigned long 
 10474 ;;  i               1   11[BANK0 ] unsigned char 
 10475 ;; Return value:  Size  Location     Type
 10476 ;;                  2    5[BANK0 ] unsigned int 
 10477 ;; Registers used:
 10478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10479 ;; Tracked objects:
 10480 ;;		On entry : 0/0
 10481 ;;		On exit  : 0/0
 10482 ;;		Unchanged: 0/0
 10483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10484 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10485 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10486 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10487 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10488 ;;Total ram usage:        9 bytes
 10489 ;; Hardware stack levels used:    1
 10490 ;; Hardware stack levels required when called:    2
 10491 ;; This function calls:
 10492 ;;		___lldiv
 10493 ;; This function is called by:
 10494 ;;		_main
 10495 ;; This function uses a non-reentrant model
 10496 ;;
 10497                           
 10498                           
 10499                           ;psect for function _calc_rs_lo_avg
 10500  1227                     _calc_rs_lo_avg:	
 10501                           
 10502                           ;sample.c: 448: uint8_t i;;sample.c: 449: uint32_t t32=0;
 10503                           
 10504                           ;incstack = 0
 10505                           ; Regs used in _calc_rs_lo_avg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10506  1227  3000               	movlw	0
 10507  1228  0020               	movlb	0	; select bank0
 10508  1229  00D1               	movwf	calc_rs_lo_avg@t32+3
 10509  122A  3000               	movlw	0
 10510  122B  00D0               	movwf	calc_rs_lo_avg@t32+2
 10511  122C  3000               	movlw	0
 10512  122D  00CF               	movwf	calc_rs_lo_avg@t32+1
 10513  122E  3000               	movlw	0
 10514  122F  00CE               	movwf	calc_rs_lo_avg@t32
 10515                           
 10516                           ;sample.c: 451: for(i=0;i<6-1;i++){
 10517  1230  01D2               	clrf	calc_rs_lo_avg@i
 10518  1231  3005               	movlw	5
 10519  1232  0252               	subwf	calc_rs_lo_avg@i,w
 10520  1233  1803               	btfsc	3,0
 10521  1234  2A59               	goto	l4287
 10522  1235                     l4279:	
 10523                           
 10524                           ;sample.c: 452: rsLoAvgBuf[i]=rsLoAvgBuf[i+1];
 10525  1235  3552               	lslf	calc_rs_lo_avg@i,w
 10526  1236  3E02               	addlw	2
 10527  1237  3EAC               	addlw	(low (_rsLoAvgBuf| 0))& (0+255)
 10528  1238  0086               	movwf	6
 10529  1239  0187               	clrf	7
 10530  123A  3552               	lslf	calc_rs_lo_avg@i,w
 10531  123B  3EAC               	addlw	(low (_rsLoAvgBuf| 0))& (0+255)
 10532  123C  0084               	movwf	4
 10533  123D  0185               	clrf	5
 10534  123E  3F40               	moviw [0]fsr1
 10535  123F  3F80               	movwi [0]fsr0
 10536  1240  3F41               	moviw [1]fsr1
 10537  1241  3F81               	movwi [1]fsr0
 10538                           
 10539                           ;sample.c: 453: t32+=((uint32_t)rsLoAvgBuf[i]);
 10540  1242  3552               	lslf	calc_rs_lo_avg@i,w
 10541  1243  3EAC               	addlw	(low (_rsLoAvgBuf| 0))& (0+255)
 10542  1244  0086               	movwf	6
 10543  1245  0187               	clrf	7
 10544  1246  3F40               	moviw [0]fsr1
 10545  1247  00FA               	movwf	??_calc_rs_lo_avg
 10546  1248  3F41               	moviw [1]fsr1
 10547  1249  00FB               	movwf	??_calc_rs_lo_avg+1
 10548  124A  087A               	movf	??_calc_rs_lo_avg,w
 10549  124B  07CE               	addwf	calc_rs_lo_avg@t32,f
 10550  124C  087B               	movf	??_calc_rs_lo_avg+1,w
 10551  124D  3DCF               	addwfc	calc_rs_lo_avg@t32+1,f
 10552  124E  3000               	movlw	0
 10553  124F  3DD0               	addwfc	calc_rs_lo_avg@t32+2,f
 10554  1250  3DD1               	addwfc	calc_rs_lo_avg@t32+3,f
 10555  1251  3001               	movlw	1
 10556  1252  00FA               	movwf	??_calc_rs_lo_avg
 10557  1253  087A               	movf	??_calc_rs_lo_avg,w
 10558  1254  07D2               	addwf	calc_rs_lo_avg@i,f
 10559  1255  3005               	movlw	5
 10560  1256  0252               	subwf	calc_rs_lo_avg@i,w
 10561  1257  1C03               	skipc
 10562  1258  2A35               	goto	l4279
 10563  1259                     l4287:	
 10564                           
 10565                           ;sample.c: 454: };sample.c: 455: rsLoAvgBuf[i]=x;
 10566  1259  3552               	lslf	calc_rs_lo_avg@i,w
 10567  125A  3EAC               	addlw	(low (_rsLoAvgBuf| 0))& (0+255)
 10568  125B  0086               	movwf	6
 10569  125C  0187               	clrf	7
 10570  125D  084C               	movf	calc_rs_lo_avg@x,w
 10571  125E  3FC0               	movwi [0]fsr1
 10572  125F  084D               	movf	calc_rs_lo_avg@x+1,w
 10573  1260  3FC1               	movwi [1]fsr1
 10574                           
 10575                           ;sample.c: 456: t32+=x;
 10576  1261  084C               	movf	calc_rs_lo_avg@x,w
 10577  1262  07CE               	addwf	calc_rs_lo_avg@t32,f
 10578  1263  084D               	movf	calc_rs_lo_avg@x+1,w
 10579  1264  3DCF               	addwfc	calc_rs_lo_avg@t32+1,f
 10580  1265  3000               	movlw	0
 10581  1266  3DD0               	addwfc	calc_rs_lo_avg@t32+2,f
 10582  1267  3DD1               	addwfc	calc_rs_lo_avg@t32+3,f
 10583                           
 10584                           ;sample.c: 457: t32/=6;
 10585  1268  3000               	movlw	0
 10586  1269  00F4               	movwf	___lldiv@divisor+3
 10587  126A  3000               	movlw	0
 10588  126B  00F3               	movwf	___lldiv@divisor+2
 10589  126C  3000               	movlw	0
 10590  126D  00F2               	movwf	___lldiv@divisor+1
 10591  126E  3006               	movlw	6
 10592  126F  00F1               	movwf	___lldiv@divisor
 10593  1270  0851               	movf	calc_rs_lo_avg@t32+3,w
 10594  1271  00F8               	movwf	___lldiv@dividend+3
 10595  1272  0850               	movf	calc_rs_lo_avg@t32+2,w
 10596  1273  00F7               	movwf	___lldiv@dividend+2
 10597  1274  084F               	movf	calc_rs_lo_avg@t32+1,w
 10598  1275  00F6               	movwf	___lldiv@dividend+1
 10599  1276  084E               	movf	calc_rs_lo_avg@t32,w
 10600  1277  00F5               	movwf	___lldiv@dividend
 10601  1278  3190  20CD         	fcall	___lldiv
 10602  127A  0874               	movf	?___lldiv+3,w
 10603  127B  0020               	movlb	0	; select bank0
 10604  127C  00D1               	movwf	calc_rs_lo_avg@t32+3
 10605  127D  0873               	movf	?___lldiv+2,w
 10606  127E  00D0               	movwf	calc_rs_lo_avg@t32+2
 10607  127F  0872               	movf	?___lldiv+1,w
 10608  1280  00CF               	movwf	calc_rs_lo_avg@t32+1
 10609  1281  0871               	movf	?___lldiv,w
 10610  1282  00CE               	movwf	calc_rs_lo_avg@t32
 10611                           
 10612                           ;sample.c: 458: return (uint16_t)t32;
 10613  1283  084F               	movf	calc_rs_lo_avg@t32+1,w
 10614  1284  00CD               	movwf	?_calc_rs_lo_avg+1
 10615  1285  084E               	movf	calc_rs_lo_avg@t32,w
 10616  1286  00CC               	movwf	?_calc_rs_lo_avg
 10617  1287  0008               	return
 10618  1288                     __end_of_calc_rs_lo_avg:	
 10619                           
 10620                           	psect	text31
 10621  10CD                     __ptext31:	
 10622 ;; *************** function ___lldiv *****************
 10623 ;; Defined at:
 10624 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 10625 ;; Parameters:    Size  Location     Type
 10626 ;;  divisor         4    1[COMMON] unsigned long 
 10627 ;;  dividend        4    5[COMMON] unsigned long 
 10628 ;; Auto vars:     Size  Location     Type
 10629 ;;  quotient        4    0[BANK0 ] unsigned long 
 10630 ;;  counter         1    4[BANK0 ] unsigned char 
 10631 ;; Return value:  Size  Location     Type
 10632 ;;                  4    1[COMMON] unsigned long 
 10633 ;; Registers used:
 10634 ;;		wreg, status,2, status,0
 10635 ;; Tracked objects:
 10636 ;;		On entry : 0/0
 10637 ;;		On exit  : 0/0
 10638 ;;		Unchanged: 0/0
 10639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10640 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10641 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10642 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10643 ;;      Totals:         9       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10644 ;;Total ram usage:       14 bytes
 10645 ;; Hardware stack levels used:    1
 10646 ;; Hardware stack levels required when called:    1
 10647 ;; This function calls:
 10648 ;;		Nothing
 10649 ;; This function is called by:
 10650 ;;		_calc_temp_rs
 10651 ;;		_calc_temp_rc
 10652 ;;		_calc_rs_lo_avg
 10653 ;; This function uses a non-reentrant model
 10654 ;;
 10655                           
 10656                           
 10657                           ;psect for function ___lldiv
 10658  10CD                     ___lldiv:	
 10659                           
 10660                           ;incstack = 0
 10661                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10662  10CD  3000               	movlw	0
 10663  10CE  0020               	movlb	0	; select bank0
 10664  10CF  00CA               	movwf	___lldiv@quotient+3
 10665  10D0  3000               	movlw	0
 10666  10D1  00C9               	movwf	___lldiv@quotient+2
 10667  10D2  3000               	movlw	0
 10668  10D3  00C8               	movwf	___lldiv@quotient+1
 10669  10D4  3000               	movlw	0
 10670  10D5  00C7               	movwf	___lldiv@quotient
 10671  10D6  0874               	movf	___lldiv@divisor+3,w
 10672  10D7  0473               	iorwf	___lldiv@divisor+2,w
 10673  10D8  0472               	iorwf	___lldiv@divisor+1,w
 10674  10D9  0471               	iorwf	___lldiv@divisor,w
 10675  10DA  1903               	skipnz
 10676  10DB  2917               	goto	l3995
 10677  10DC  01CB               	clrf	___lldiv@counter
 10678  10DD  0ACB               	incf	___lldiv@counter,f
 10679  10DE                     l3981:	
 10680  10DE  1BF4               	btfsc	___lldiv@divisor+3,7
 10681  10DF  28EC               	goto	l3983
 10682  10E0  3001               	movlw	1
 10683  10E1                     u2855:	
 10684  10E1  35F1               	lslf	___lldiv@divisor,f
 10685  10E2  0DF2               	rlf	___lldiv@divisor+1,f
 10686  10E3  0DF3               	rlf	___lldiv@divisor+2,f
 10687  10E4  0DF4               	rlf	___lldiv@divisor+3,f
 10688  10E5  0B89               	decfsz	9,f
 10689  10E6  28E1               	goto	u2855
 10690  10E7  3001               	movlw	1
 10691  10E8  00F9               	movwf	??___lldiv
 10692  10E9  0879               	movf	??___lldiv,w
 10693  10EA  07CB               	addwf	___lldiv@counter,f
 10694  10EB  28DE               	goto	l3981
 10695  10EC                     l3983:	
 10696  10EC  3001               	movlw	1
 10697  10ED                     u2875:	
 10698  10ED  35C7               	lslf	___lldiv@quotient,f
 10699  10EE  0DC8               	rlf	___lldiv@quotient+1,f
 10700  10EF  0DC9               	rlf	___lldiv@quotient+2,f
 10701  10F0  0DCA               	rlf	___lldiv@quotient+3,f
 10702  10F1  0B89               	decfsz	9,f
 10703  10F2  28ED               	goto	u2875
 10704  10F3  0874               	movf	___lldiv@divisor+3,w
 10705  10F4  0278               	subwf	___lldiv@dividend+3,w
 10706  10F5  1D03               	skipz
 10707  10F6  2901               	goto	u2885
 10708  10F7  0873               	movf	___lldiv@divisor+2,w
 10709  10F8  0277               	subwf	___lldiv@dividend+2,w
 10710  10F9  1D03               	skipz
 10711  10FA  2901               	goto	u2885
 10712  10FB  0872               	movf	___lldiv@divisor+1,w
 10713  10FC  0276               	subwf	___lldiv@dividend+1,w
 10714  10FD  1D03               	skipz
 10715  10FE  2901               	goto	u2885
 10716  10FF  0871               	movf	___lldiv@divisor,w
 10717  1100  0275               	subwf	___lldiv@dividend,w
 10718  1101                     u2885:	
 10719  1101  1C03               	skipc
 10720  1102  290C               	goto	l3991
 10721  1103  0871               	movf	___lldiv@divisor,w
 10722  1104  02F5               	subwf	___lldiv@dividend,f
 10723  1105  0872               	movf	___lldiv@divisor+1,w
 10724  1106  3BF6               	subwfb	___lldiv@dividend+1,f
 10725  1107  0873               	movf	___lldiv@divisor+2,w
 10726  1108  3BF7               	subwfb	___lldiv@dividend+2,f
 10727  1109  0874               	movf	___lldiv@divisor+3,w
 10728  110A  3BF8               	subwfb	___lldiv@dividend+3,f
 10729  110B  1447               	bsf	___lldiv@quotient,0
 10730  110C                     l3991:	
 10731  110C  3001               	movlw	1
 10732  110D                     u2895:	
 10733  110D  36F4               	lsrf	___lldiv@divisor+3,f
 10734  110E  0CF3               	rrf	___lldiv@divisor+2,f
 10735  110F  0CF2               	rrf	___lldiv@divisor+1,f
 10736  1110  0CF1               	rrf	___lldiv@divisor,f
 10737  1111  0B89               	decfsz	9,f
 10738  1112  290D               	goto	u2895
 10739  1113  3001               	movlw	1
 10740  1114  02CB               	subwf	___lldiv@counter,f
 10741  1115  1D03               	btfss	3,2
 10742  1116  28EC               	goto	l3983
 10743  1117                     l3995:	
 10744  1117  084A               	movf	___lldiv@quotient+3,w
 10745  1118  00F4               	movwf	?___lldiv+3
 10746  1119  0849               	movf	___lldiv@quotient+2,w
 10747  111A  00F3               	movwf	?___lldiv+2
 10748  111B  0848               	movf	___lldiv@quotient+1,w
 10749  111C  00F2               	movwf	?___lldiv+1
 10750  111D  0847               	movf	___lldiv@quotient,w
 10751  111E  00F1               	movwf	?___lldiv
 10752  111F  0008               	return
 10753  1120                     __end_of___lldiv:	
 10754                           
 10755                           	psect	text32
 10756  0B00                     __ptext32:	
 10757 ;; *************** function _calc_expect_vout_adc_value *****************
 10758 ;; Defined at:
 10759 ;;		line 463 in file "src/api/sample.c"
 10760 ;; Parameters:    Size  Location     Type
 10761 ;;  x               2   18[BANK0 ] unsigned int 
 10762 ;; Auto vars:     Size  Location     Type
 10763 ;;  t32             4   34[BANK0 ] long 
 10764 ;;  i               1   38[BANK0 ] unsigned char 
 10765 ;; Return value:  Size  Location     Type
 10766 ;;                  2   18[BANK0 ] unsigned int 
 10767 ;; Registers used:
 10768 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10769 ;; Tracked objects:
 10770 ;;		On entry : 0/0
 10771 ;;		On exit  : 0/0
 10772 ;;		Unchanged: 0/0
 10773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10774 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10775 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10776 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10777 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10778 ;;Total ram usage:       21 bytes
 10779 ;; Hardware stack levels used:    1
 10780 ;; Hardware stack levels required when called:    2
 10781 ;; This function calls:
 10782 ;;		___aldiv
 10783 ;;		___lmul
 10784 ;; This function is called by:
 10785 ;;		_main
 10786 ;; This function uses a non-reentrant model
 10787 ;;
 10788                           
 10789                           
 10790                           ;psect for function _calc_expect_vout_adc_value
 10791  0B00                     _calc_expect_vout_adc_value:	
 10792                           
 10793                           ;sample.c: 466: uint8_t i;;sample.c: 467: int32_t t32;;sample.c: 470: for (i = 0; i < 30
      +                          -1; i++) {
 10794                           
 10795                           ;incstack = 0
 10796                           ; Regs used in _calc_expect_vout_adc_value: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 10797  0B00  0020               	movlb	0	; select bank0
 10798  0B01  01ED               	clrf	calc_expect_vout_adc_value@i
 10799  0B02  301D               	movlw	29
 10800  0B03  026D               	subwf	calc_expect_vout_adc_value@i,w
 10801  0B04  1803               	btfsc	3,0
 10802  0B05  2B63               	goto	l5187
 10803  0B06                     l5177:	
 10804                           
 10805                           ;sample.c: 471: if(sysData.calibRsAdc[i]<sysData.calibRsAdc[i+1]){
 10806  0B06  086D               	movf	calc_expect_vout_adc_value@i,w
 10807  0B07  00DB               	movwf	??_calc_expect_vout_adc_value
 10808  0B08  01DC               	clrf	??_calc_expect_vout_adc_value+1
 10809  0B09  35DB               	lslf	??_calc_expect_vout_adc_value,f
 10810  0B0A  0DDC               	rlf	??_calc_expect_vout_adc_value+1,f
 10811  0B0B  085B               	movf	??_calc_expect_vout_adc_value,w
 10812  0B0C  3E02               	addlw	2
 10813  0B0D  00DD               	movwf	??_calc_expect_vout_adc_value+2
 10814  0B0E  3000               	movlw	0
 10815  0B0F  3D5C               	addwfc	??_calc_expect_vout_adc_value+1,w
 10816  0B10  00DE               	movwf	??_calc_expect_vout_adc_value+3
 10817  0B11  3066               	movlw	102
 10818  0B12  00DF               	movwf	??_calc_expect_vout_adc_value+4
 10819  0B13  3023               	movlw	35
 10820  0B14  00E0               	movwf	??_calc_expect_vout_adc_value+5
 10821  0B15  085D               	movf	??_calc_expect_vout_adc_value+2,w
 10822  0B16  075F               	addwf	??_calc_expect_vout_adc_value+4,w
 10823  0B17  0086               	movwf	6
 10824  0B18  085E               	movf	??_calc_expect_vout_adc_value+3,w
 10825  0B19  3D60               	addwfc	??_calc_expect_vout_adc_value+5,w
 10826  0B1A  0087               	movwf	7
 10827  0B1B  3F40               	moviw [0]fsr1
 10828  0B1C  00E1               	movwf	??_calc_expect_vout_adc_value+6
 10829  0B1D  3F41               	moviw [1]fsr1
 10830  0B1E  00E2               	movwf	??_calc_expect_vout_adc_value+7
 10831  0B1F  086D               	movf	calc_expect_vout_adc_value@i,w
 10832  0B20  00E3               	movwf	??_calc_expect_vout_adc_value+8
 10833  0B21  01E4               	clrf	??_calc_expect_vout_adc_value+9
 10834  0B22  35E3               	lslf	??_calc_expect_vout_adc_value+8,f
 10835  0B23  0DE4               	rlf	??_calc_expect_vout_adc_value+9,f
 10836  0B24  3066               	movlw	102
 10837  0B25  00E5               	movwf	??_calc_expect_vout_adc_value+10
 10838  0B26  3023               	movlw	35
 10839  0B27  00E6               	movwf	??_calc_expect_vout_adc_value+11
 10840  0B28  0863               	movf	??_calc_expect_vout_adc_value+8,w
 10841  0B29  0765               	addwf	??_calc_expect_vout_adc_value+10,w
 10842  0B2A  0086               	movwf	6
 10843  0B2B  0864               	movf	??_calc_expect_vout_adc_value+9,w
 10844  0B2C  3D66               	addwfc	??_calc_expect_vout_adc_value+11,w
 10845  0B2D  0087               	movwf	7
 10846  0B2E  3F40               	moviw [0]fsr1
 10847  0B2F  00E7               	movwf	??_calc_expect_vout_adc_value+12
 10848  0B30  3F41               	moviw [1]fsr1
 10849  0B31  00E8               	movwf	??_calc_expect_vout_adc_value+13
 10850  0B32  0862               	movf	??_calc_expect_vout_adc_value+7,w
 10851  0B33  0268               	subwf	??_calc_expect_vout_adc_value+13,w
 10852  0B34  1D03               	skipz
 10853  0B35  2B38               	goto	u4725
 10854  0B36  0861               	movf	??_calc_expect_vout_adc_value+6,w
 10855  0B37  0267               	subwf	??_calc_expect_vout_adc_value+12,w
 10856  0B38                     u4725:	
 10857  0B38  1803               	skipnc
 10858  0B39  2B63               	goto	l5187
 10859                           
 10860                           ;sample.c: 472: if (x <= sysData.calibRsAdc[i+1])break;
 10861  0B3A  086D               	movf	calc_expect_vout_adc_value@i,w
 10862  0B3B  00DB               	movwf	??_calc_expect_vout_adc_value
 10863  0B3C  01DC               	clrf	??_calc_expect_vout_adc_value+1
 10864  0B3D  35DB               	lslf	??_calc_expect_vout_adc_value,f
 10865  0B3E  0DDC               	rlf	??_calc_expect_vout_adc_value+1,f
 10866  0B3F  085B               	movf	??_calc_expect_vout_adc_value,w
 10867  0B40  3E02               	addlw	2
 10868  0B41  00DD               	movwf	??_calc_expect_vout_adc_value+2
 10869  0B42  3000               	movlw	0
 10870  0B43  3D5C               	addwfc	??_calc_expect_vout_adc_value+1,w
 10871  0B44  00DE               	movwf	??_calc_expect_vout_adc_value+3
 10872  0B45  3066               	movlw	102
 10873  0B46  00DF               	movwf	??_calc_expect_vout_adc_value+4
 10874  0B47  3023               	movlw	35
 10875  0B48  00E0               	movwf	??_calc_expect_vout_adc_value+5
 10876  0B49  085D               	movf	??_calc_expect_vout_adc_value+2,w
 10877  0B4A  075F               	addwf	??_calc_expect_vout_adc_value+4,w
 10878  0B4B  0086               	movwf	6
 10879  0B4C  085E               	movf	??_calc_expect_vout_adc_value+3,w
 10880  0B4D  3D60               	addwfc	??_calc_expect_vout_adc_value+5,w
 10881  0B4E  0087               	movwf	7
 10882  0B4F  3F40               	moviw [0]fsr1
 10883  0B50  00E1               	movwf	??_calc_expect_vout_adc_value+6
 10884  0B51  3F41               	moviw [1]fsr1
 10885  0B52  00E2               	movwf	??_calc_expect_vout_adc_value+7
 10886  0B53  085A               	movf	calc_expect_vout_adc_value@x+1,w
 10887  0B54  0262               	subwf	??_calc_expect_vout_adc_value+7,w
 10888  0B55  1D03               	skipz
 10889  0B56  2B59               	goto	u4735
 10890  0B57  0859               	movf	calc_expect_vout_adc_value@x,w
 10891  0B58  0261               	subwf	??_calc_expect_vout_adc_value+6,w
 10892  0B59                     u4735:	
 10893  0B59  1803               	btfsc	3,0
 10894  0B5A  2B63               	goto	l5187
 10895                           
 10896                           ;sample.c: 475: break;
 10897                           
 10898                           ;sample.c: 473: }else{
 10899  0B5B  3001               	movlw	1
 10900  0B5C  00DB               	movwf	??_calc_expect_vout_adc_value
 10901  0B5D  085B               	movf	??_calc_expect_vout_adc_value,w
 10902  0B5E  07ED               	addwf	calc_expect_vout_adc_value@i,f
 10903  0B5F  301D               	movlw	29
 10904  0B60  026D               	subwf	calc_expect_vout_adc_value@i,w
 10905  0B61  1C03               	skipc
 10906  0B62  2B06               	goto	l5177
 10907  0B63                     l5187:	
 10908                           
 10909                           ;sample.c: 476: };sample.c: 477: };sample.c: 479: if (i > 30-2)i=30-2;
 10910  0B63  301D               	movlw	29
 10911  0B64  026D               	subwf	calc_expect_vout_adc_value@i,w
 10912  0B65  1C03               	skipc
 10913  0B66  2B6B               	goto	l5191
 10914  0B67  301C               	movlw	28
 10915  0B68  00DB               	movwf	??_calc_expect_vout_adc_value
 10916  0B69  085B               	movf	??_calc_expect_vout_adc_value,w
 10917  0B6A  00ED               	movwf	calc_expect_vout_adc_value@i
 10918  0B6B                     l5191:	
 10919                           
 10920                           ;sample.c: 480: y1=sysData.calibVoMV[i+1];
 10921  0B6B  086D               	movf	calc_expect_vout_adc_value@i,w
 10922  0B6C  00DB               	movwf	??_calc_expect_vout_adc_value
 10923  0B6D  01DC               	clrf	??_calc_expect_vout_adc_value+1
 10924  0B6E  35DB               	lslf	??_calc_expect_vout_adc_value,f
 10925  0B6F  0DDC               	rlf	??_calc_expect_vout_adc_value+1,f
 10926  0B70  085B               	movf	??_calc_expect_vout_adc_value,w
 10927  0B71  3E02               	addlw	2
 10928  0B72  00DD               	movwf	??_calc_expect_vout_adc_value+2
 10929  0B73  3000               	movlw	0
 10930  0B74  3D5C               	addwfc	??_calc_expect_vout_adc_value+1,w
 10931  0B75  00DE               	movwf	??_calc_expect_vout_adc_value+3
 10932  0B76  30A2               	movlw	162
 10933  0B77  00DF               	movwf	??_calc_expect_vout_adc_value+4
 10934  0B78  3023               	movlw	35
 10935  0B79  00E0               	movwf	??_calc_expect_vout_adc_value+5
 10936  0B7A  085D               	movf	??_calc_expect_vout_adc_value+2,w
 10937  0B7B  075F               	addwf	??_calc_expect_vout_adc_value+4,w
 10938  0B7C  0086               	movwf	6
 10939  0B7D  085E               	movf	??_calc_expect_vout_adc_value+3,w
 10940  0B7E  3D60               	addwfc	??_calc_expect_vout_adc_value+5,w
 10941  0B7F  0087               	movwf	7
 10942  0B80  3F40               	moviw [0]fsr1
 10943  0B81  00E1               	movwf	??_calc_expect_vout_adc_value+6
 10944  0B82  3F41               	moviw [1]fsr1
 10945  0B83  00E2               	movwf	??_calc_expect_vout_adc_value+7
 10946  0B84  0861               	movf	??_calc_expect_vout_adc_value+6,w
 10947  0B85  0021               	movlb	1	; select bank1
 10948  0B86  00C0               	movwf	_y1^(0+128)
 10949  0B87  0020               	movlb	0	; select bank0
 10950  0B88  0862               	movf	??_calc_expect_vout_adc_value+7,w
 10951  0B89  0021               	movlb	1	; select bank1
 10952  0B8A  00C1               	movwf	(_y1^(0+128)+1)
 10953  0B8B  01C2               	clrf	(_y1^(0+128)+2)
 10954  0B8C  01C3               	clrf	(_y1^(0+128)+3)
 10955                           
 10956                           ;sample.c: 481: y0=sysData.calibVoMV[i];
 10957  0B8D  0020               	movlb	0	; select bank0
 10958  0B8E  086D               	movf	calc_expect_vout_adc_value@i,w
 10959  0B8F  00DB               	movwf	??_calc_expect_vout_adc_value
 10960  0B90  01DC               	clrf	??_calc_expect_vout_adc_value+1
 10961  0B91  35DB               	lslf	??_calc_expect_vout_adc_value,f
 10962  0B92  0DDC               	rlf	??_calc_expect_vout_adc_value+1,f
 10963  0B93  30A2               	movlw	162
 10964  0B94  00DD               	movwf	??_calc_expect_vout_adc_value+2
 10965  0B95  3023               	movlw	35
 10966  0B96  00DE               	movwf	??_calc_expect_vout_adc_value+3
 10967  0B97  085B               	movf	??_calc_expect_vout_adc_value,w
 10968  0B98  075D               	addwf	??_calc_expect_vout_adc_value+2,w
 10969  0B99  0086               	movwf	6
 10970  0B9A  085C               	movf	??_calc_expect_vout_adc_value+1,w
 10971  0B9B  3D5E               	addwfc	??_calc_expect_vout_adc_value+3,w
 10972  0B9C  0087               	movwf	7
 10973  0B9D  3F40               	moviw [0]fsr1
 10974  0B9E  00DF               	movwf	??_calc_expect_vout_adc_value+4
 10975  0B9F  3F41               	moviw [1]fsr1
 10976  0BA0  00E0               	movwf	??_calc_expect_vout_adc_value+5
 10977  0BA1  085F               	movf	??_calc_expect_vout_adc_value+4,w
 10978  0BA2  00A8               	movwf	_y0
 10979  0BA3  0860               	movf	??_calc_expect_vout_adc_value+5,w
 10980  0BA4  00A9               	movwf	_y0+1
 10981  0BA5  01AA               	clrf	_y0+2
 10982  0BA6  01AB               	clrf	_y0+3
 10983                           
 10984                           ;sample.c: 484: x1=sysData.calibRsAdc[i+1];
 10985  0BA7  086D               	movf	calc_expect_vout_adc_value@i,w
 10986  0BA8  00DB               	movwf	??_calc_expect_vout_adc_value
 10987  0BA9  01DC               	clrf	??_calc_expect_vout_adc_value+1
 10988  0BAA  35DB               	lslf	??_calc_expect_vout_adc_value,f
 10989  0BAB  0DDC               	rlf	??_calc_expect_vout_adc_value+1,f
 10990  0BAC  085B               	movf	??_calc_expect_vout_adc_value,w
 10991  0BAD  3E02               	addlw	2
 10992  0BAE  00DD               	movwf	??_calc_expect_vout_adc_value+2
 10993  0BAF  3000               	movlw	0
 10994  0BB0  3D5C               	addwfc	??_calc_expect_vout_adc_value+1,w
 10995  0BB1  00DE               	movwf	??_calc_expect_vout_adc_value+3
 10996  0BB2  3066               	movlw	102
 10997  0BB3  00DF               	movwf	??_calc_expect_vout_adc_value+4
 10998  0BB4  3023               	movlw	35
 10999  0BB5  00E0               	movwf	??_calc_expect_vout_adc_value+5
 11000  0BB6  085D               	movf	??_calc_expect_vout_adc_value+2,w
 11001  0BB7  075F               	addwf	??_calc_expect_vout_adc_value+4,w
 11002  0BB8  0086               	movwf	6
 11003  0BB9  085E               	movf	??_calc_expect_vout_adc_value+3,w
 11004  0BBA  3D60               	addwfc	??_calc_expect_vout_adc_value+5,w
 11005  0BBB  0087               	movwf	7
 11006  0BBC  3F40               	moviw [0]fsr1
 11007  0BBD  00E1               	movwf	??_calc_expect_vout_adc_value+6
 11008  0BBE  3F41               	moviw [1]fsr1
 11009  0BBF  00E2               	movwf	??_calc_expect_vout_adc_value+7
 11010  0BC0  0861               	movf	??_calc_expect_vout_adc_value+6,w
 11011  0BC1  0021               	movlb	1	; select bank1
 11012  0BC2  00BC               	movwf	_x1^(0+128)
 11013  0BC3  0020               	movlb	0	; select bank0
 11014  0BC4  0862               	movf	??_calc_expect_vout_adc_value+7,w
 11015  0BC5  0021               	movlb	1	; select bank1
 11016  0BC6  00BD               	movwf	(_x1^(0+128)+1)
 11017  0BC7  01BE               	clrf	(_x1^(0+128)+2)
 11018  0BC8  01BF               	clrf	(_x1^(0+128)+3)
 11019                           
 11020                           ;sample.c: 485: x0=sysData.calibRsAdc[i];
 11021  0BC9  0020               	movlb	0	; select bank0
 11022  0BCA  086D               	movf	calc_expect_vout_adc_value@i,w
 11023  0BCB  00DB               	movwf	??_calc_expect_vout_adc_value
 11024  0BCC  01DC               	clrf	??_calc_expect_vout_adc_value+1
 11025  0BCD  35DB               	lslf	??_calc_expect_vout_adc_value,f
 11026  0BCE  0DDC               	rlf	??_calc_expect_vout_adc_value+1,f
 11027  0BCF  3066               	movlw	102
 11028  0BD0  00DD               	movwf	??_calc_expect_vout_adc_value+2
 11029  0BD1  3023               	movlw	35
 11030  0BD2  00DE               	movwf	??_calc_expect_vout_adc_value+3
 11031  0BD3  085B               	movf	??_calc_expect_vout_adc_value,w
 11032  0BD4  075D               	addwf	??_calc_expect_vout_adc_value+2,w
 11033  0BD5  0086               	movwf	6
 11034  0BD6  085C               	movf	??_calc_expect_vout_adc_value+1,w
 11035  0BD7  3D5E               	addwfc	??_calc_expect_vout_adc_value+3,w
 11036  0BD8  0087               	movwf	7
 11037  0BD9  3F40               	moviw [0]fsr1
 11038  0BDA  00DF               	movwf	??_calc_expect_vout_adc_value+4
 11039  0BDB  3F41               	moviw [1]fsr1
 11040  0BDC  00E0               	movwf	??_calc_expect_vout_adc_value+5
 11041  0BDD  085F               	movf	??_calc_expect_vout_adc_value+4,w
 11042  0BDE  00A4               	movwf	_x0
 11043  0BDF  0860               	movf	??_calc_expect_vout_adc_value+5,w
 11044  0BE0  00A5               	movwf	_x0+1
 11045  0BE1  01A6               	clrf	_x0+2
 11046  0BE2  01A7               	clrf	_x0+3
 11047                           
 11048                           ;sample.c: 487: if(x<=x0 && i==0)return (uint16_t)y0;
 11049  0BE3  0859               	movf	calc_expect_vout_adc_value@x,w
 11050  0BE4  00DB               	movwf	??_calc_expect_vout_adc_value
 11051  0BE5  085A               	movf	calc_expect_vout_adc_value@x+1,w
 11052  0BE6  00DC               	movwf	??_calc_expect_vout_adc_value+1
 11053  0BE7  01DD               	clrf	??_calc_expect_vout_adc_value+2
 11054  0BE8  01DE               	clrf	??_calc_expect_vout_adc_value+3
 11055  0BE9  0827               	movf	_x0+3,w
 11056  0BEA  3A80               	xorlw	128
 11057  0BEB  00DF               	movwf	??_calc_expect_vout_adc_value+4
 11058  0BEC  085E               	movf	??_calc_expect_vout_adc_value+3,w
 11059  0BED  3A80               	xorlw	128
 11060  0BEE  025F               	subwf	??_calc_expect_vout_adc_value+4,w
 11061  0BEF  1D03               	skipz
 11062  0BF0  2BFB               	goto	u4763
 11063  0BF1  085D               	movf	??_calc_expect_vout_adc_value+2,w
 11064  0BF2  0226               	subwf	_x0+2,w
 11065  0BF3  1D03               	skipz
 11066  0BF4  2BFB               	goto	u4763
 11067  0BF5  085C               	movf	??_calc_expect_vout_adc_value+1,w
 11068  0BF6  0225               	subwf	_x0+1,w
 11069  0BF7  1D03               	skipz
 11070  0BF8  2BFB               	goto	u4763
 11071  0BF9  085B               	movf	??_calc_expect_vout_adc_value,w
 11072  0BFA  0224               	subwf	_x0,w
 11073  0BFB                     u4763:	
 11074  0BFB  1C03               	skipc
 11075  0BFC  2C05               	goto	l5205
 11076  0BFD  086D               	movf	calc_expect_vout_adc_value@i,w
 11077  0BFE  1D03               	btfss	3,2
 11078  0BFF  2C05               	goto	l5205
 11079  0C00  0829               	movf	_y0+1,w
 11080  0C01  00DA               	movwf	?_calc_expect_vout_adc_value+1
 11081  0C02  0828               	movf	_y0,w
 11082  0C03  00D9               	movwf	?_calc_expect_vout_adc_value
 11083  0C04  0008               	return
 11084  0C05                     l5205:	
 11085                           
 11086                           ;sample.c: 488: if(x1<=x0)return (uint16_t)y0;
 11087  0C05  0827               	movf	_x0+3,w
 11088  0C06  3A80               	xorlw	128
 11089  0C07  00DB               	movwf	??_calc_expect_vout_adc_value
 11090  0C08  0021               	movlb	1	; select bank1
 11091  0C09  083F               	movf	(_x1+3)^(0+128),w
 11092  0C0A  3A80               	xorlw	128
 11093  0C0B  0020               	movlb	0	; select bank0
 11094  0C0C  025B               	subwf	??_calc_expect_vout_adc_value,w
 11095  0C0D  1D03               	skipz
 11096  0C0E  2C1F               	goto	u4783
 11097  0C0F  0021               	movlb	1	; select bank1
 11098  0C10  083E               	movf	(_x1+2)^(0+128),w
 11099  0C11  0020               	movlb	0	; select bank0
 11100  0C12  0226               	subwf	_x0+2,w
 11101  0C13  1D03               	skipz
 11102  0C14  2C1F               	goto	u4783
 11103  0C15  0021               	movlb	1	; select bank1
 11104  0C16  083D               	movf	(_x1+1)^(0+128),w
 11105  0C17  0020               	movlb	0	; select bank0
 11106  0C18  0225               	subwf	_x0+1,w
 11107  0C19  1D03               	skipz
 11108  0C1A  2C1F               	goto	u4783
 11109  0C1B  0021               	movlb	1	; select bank1
 11110  0C1C  083C               	movf	_x1^(0+128),w
 11111  0C1D  0020               	movlb	0	; select bank0
 11112  0C1E  0224               	subwf	_x0,w
 11113  0C1F                     u4783:	
 11114  0C1F  1C03               	skipc
 11115  0C20  2C26               	goto	l5211
 11116  0C21  0829               	movf	_y0+1,w
 11117  0C22  00DA               	movwf	?_calc_expect_vout_adc_value+1
 11118  0C23  0828               	movf	_y0,w
 11119  0C24  00D9               	movwf	?_calc_expect_vout_adc_value
 11120  0C25  0008               	return
 11121  0C26                     l5211:	
 11122                           
 11123                           ;sample.c: 491: t32=(x-x0);
 11124  0C26  0924               	comf	_x0,w
 11125  0C27  00DB               	movwf	??_calc_expect_vout_adc_value
 11126  0C28  0925               	comf	_x0+1,w
 11127  0C29  00DC               	movwf	??_calc_expect_vout_adc_value+1
 11128  0C2A  0926               	comf	_x0+2,w
 11129  0C2B  00DD               	movwf	??_calc_expect_vout_adc_value+2
 11130  0C2C  0927               	comf	_x0+3,w
 11131  0C2D  00DE               	movwf	??_calc_expect_vout_adc_value+3
 11132  0C2E  0ADB               	incf	??_calc_expect_vout_adc_value,f
 11133  0C2F  1903               	skipnz
 11134  0C30  0ADC               	incf	??_calc_expect_vout_adc_value+1,f
 11135  0C31  1903               	skipnz
 11136  0C32  0ADD               	incf	??_calc_expect_vout_adc_value+2,f
 11137  0C33  1903               	skipnz
 11138  0C34  0ADE               	incf	??_calc_expect_vout_adc_value+3,f
 11139  0C35  0859               	movf	calc_expect_vout_adc_value@x,w
 11140  0C36  00DF               	movwf	??_calc_expect_vout_adc_value+4
 11141  0C37  085A               	movf	calc_expect_vout_adc_value@x+1,w
 11142  0C38  00E0               	movwf	??_calc_expect_vout_adc_value+5
 11143  0C39  01E1               	clrf	??_calc_expect_vout_adc_value+6
 11144  0C3A  01E2               	clrf	??_calc_expect_vout_adc_value+7
 11145  0C3B  085F               	movf	??_calc_expect_vout_adc_value+4,w
 11146  0C3C  07DB               	addwf	??_calc_expect_vout_adc_value,f
 11147  0C3D  0860               	movf	??_calc_expect_vout_adc_value+5,w
 11148  0C3E  3DDC               	addwfc	??_calc_expect_vout_adc_value+1,f
 11149  0C3F  0861               	movf	??_calc_expect_vout_adc_value+6,w
 11150  0C40  3DDD               	addwfc	??_calc_expect_vout_adc_value+2,f
 11151  0C41  0862               	movf	??_calc_expect_vout_adc_value+7,w
 11152  0C42  3DDE               	addwfc	??_calc_expect_vout_adc_value+3,f
 11153  0C43  085E               	movf	??_calc_expect_vout_adc_value+3,w
 11154  0C44  00EC               	movwf	calc_expect_vout_adc_value@t32+3
 11155  0C45  085D               	movf	??_calc_expect_vout_adc_value+2,w
 11156  0C46  00EB               	movwf	calc_expect_vout_adc_value@t32+2
 11157  0C47  085C               	movf	??_calc_expect_vout_adc_value+1,w
 11158  0C48  00EA               	movwf	calc_expect_vout_adc_value@t32+1
 11159  0C49  085B               	movf	??_calc_expect_vout_adc_value,w
 11160  0C4A  00E9               	movwf	calc_expect_vout_adc_value@t32
 11161                           
 11162                           ;sample.c: 492: t32=t32*(y1-y0);
 11163  0C4B  0021               	movlb	1	; select bank1
 11164  0C4C  0840               	movf	_y1^(0+128),w
 11165  0C4D  0020               	movlb	0	; select bank0
 11166  0C4E  00DB               	movwf	??_calc_expect_vout_adc_value
 11167  0C4F  0021               	movlb	1	; select bank1
 11168  0C50  0841               	movf	(_y1+1)^(0+128),w
 11169  0C51  0020               	movlb	0	; select bank0
 11170  0C52  00DC               	movwf	??_calc_expect_vout_adc_value+1
 11171  0C53  0021               	movlb	1	; select bank1
 11172  0C54  0842               	movf	(_y1+2)^(0+128),w
 11173  0C55  0020               	movlb	0	; select bank0
 11174  0C56  00DD               	movwf	??_calc_expect_vout_adc_value+2
 11175  0C57  0021               	movlb	1	; select bank1
 11176  0C58  0843               	movf	(_y1+3)^(0+128),w
 11177  0C59  0020               	movlb	0	; select bank0
 11178  0C5A  00DE               	movwf	??_calc_expect_vout_adc_value+3
 11179  0C5B  0928               	comf	_y0,w
 11180  0C5C  00DF               	movwf	??_calc_expect_vout_adc_value+4
 11181  0C5D  0929               	comf	_y0+1,w
 11182  0C5E  00E0               	movwf	??_calc_expect_vout_adc_value+5
 11183  0C5F  092A               	comf	_y0+2,w
 11184  0C60  00E1               	movwf	??_calc_expect_vout_adc_value+6
 11185  0C61  092B               	comf	_y0+3,w
 11186  0C62  00E2               	movwf	??_calc_expect_vout_adc_value+7
 11187  0C63  0ADF               	incf	??_calc_expect_vout_adc_value+4,f
 11188  0C64  1903               	skipnz
 11189  0C65  0AE0               	incf	??_calc_expect_vout_adc_value+5,f
 11190  0C66  1903               	skipnz
 11191  0C67  0AE1               	incf	??_calc_expect_vout_adc_value+6,f
 11192  0C68  1903               	skipnz
 11193  0C69  0AE2               	incf	??_calc_expect_vout_adc_value+7,f
 11194  0C6A  085F               	movf	??_calc_expect_vout_adc_value+4,w
 11195  0C6B  07DB               	addwf	??_calc_expect_vout_adc_value,f
 11196  0C6C  0860               	movf	??_calc_expect_vout_adc_value+5,w
 11197  0C6D  3DDC               	addwfc	??_calc_expect_vout_adc_value+1,f
 11198  0C6E  0861               	movf	??_calc_expect_vout_adc_value+6,w
 11199  0C6F  3DDD               	addwfc	??_calc_expect_vout_adc_value+2,f
 11200  0C70  0862               	movf	??_calc_expect_vout_adc_value+7,w
 11201  0C71  3DDE               	addwfc	??_calc_expect_vout_adc_value+3,f
 11202  0C72  085E               	movf	??_calc_expect_vout_adc_value+3,w
 11203  0C73  00F4               	movwf	___lmul@multiplier+3
 11204  0C74  085D               	movf	??_calc_expect_vout_adc_value+2,w
 11205  0C75  00F3               	movwf	___lmul@multiplier+2
 11206  0C76  085C               	movf	??_calc_expect_vout_adc_value+1,w
 11207  0C77  00F2               	movwf	___lmul@multiplier+1
 11208  0C78  085B               	movf	??_calc_expect_vout_adc_value,w
 11209  0C79  00F1               	movwf	___lmul@multiplier
 11210  0C7A  086C               	movf	calc_expect_vout_adc_value@t32+3,w
 11211  0C7B  00F8               	movwf	___lmul@multiplicand+3
 11212  0C7C  086B               	movf	calc_expect_vout_adc_value@t32+2,w
 11213  0C7D  00F7               	movwf	___lmul@multiplicand+2
 11214  0C7E  086A               	movf	calc_expect_vout_adc_value@t32+1,w
 11215  0C7F  00F6               	movwf	___lmul@multiplicand+1
 11216  0C80  0869               	movf	calc_expect_vout_adc_value@t32,w
 11217  0C81  00F5               	movwf	___lmul@multiplicand
 11218  0C82  319D  25B2  318B   	fcall	___lmul
 11219  0C85  0874               	movf	?___lmul+3,w
 11220  0C86  0020               	movlb	0	; select bank0
 11221  0C87  00EC               	movwf	calc_expect_vout_adc_value@t32+3
 11222  0C88  0873               	movf	?___lmul+2,w
 11223  0C89  00EB               	movwf	calc_expect_vout_adc_value@t32+2
 11224  0C8A  0872               	movf	?___lmul+1,w
 11225  0C8B  00EA               	movwf	calc_expect_vout_adc_value@t32+1
 11226  0C8C  0871               	movf	?___lmul,w
 11227  0C8D  00E9               	movwf	calc_expect_vout_adc_value@t32
 11228                           
 11229                           ;sample.c: 493: t32=t32/(x1-x0);
 11230  0C8E  0021               	movlb	1	; select bank1
 11231  0C8F  083C               	movf	_x1^(0+128),w
 11232  0C90  0020               	movlb	0	; select bank0
 11233  0C91  00DB               	movwf	??_calc_expect_vout_adc_value
 11234  0C92  0021               	movlb	1	; select bank1
 11235  0C93  083D               	movf	(_x1+1)^(0+128),w
 11236  0C94  0020               	movlb	0	; select bank0
 11237  0C95  00DC               	movwf	??_calc_expect_vout_adc_value+1
 11238  0C96  0021               	movlb	1	; select bank1
 11239  0C97  083E               	movf	(_x1+2)^(0+128),w
 11240  0C98  0020               	movlb	0	; select bank0
 11241  0C99  00DD               	movwf	??_calc_expect_vout_adc_value+2
 11242  0C9A  0021               	movlb	1	; select bank1
 11243  0C9B  083F               	movf	(_x1+3)^(0+128),w
 11244  0C9C  0020               	movlb	0	; select bank0
 11245  0C9D  00DE               	movwf	??_calc_expect_vout_adc_value+3
 11246  0C9E  0924               	comf	_x0,w
 11247  0C9F  00DF               	movwf	??_calc_expect_vout_adc_value+4
 11248  0CA0  0925               	comf	_x0+1,w
 11249  0CA1  00E0               	movwf	??_calc_expect_vout_adc_value+5
 11250  0CA2  0926               	comf	_x0+2,w
 11251  0CA3  00E1               	movwf	??_calc_expect_vout_adc_value+6
 11252  0CA4  0927               	comf	_x0+3,w
 11253  0CA5  00E2               	movwf	??_calc_expect_vout_adc_value+7
 11254  0CA6  0ADF               	incf	??_calc_expect_vout_adc_value+4,f
 11255  0CA7  1903               	skipnz
 11256  0CA8  0AE0               	incf	??_calc_expect_vout_adc_value+5,f
 11257  0CA9  1903               	skipnz
 11258  0CAA  0AE1               	incf	??_calc_expect_vout_adc_value+6,f
 11259  0CAB  1903               	skipnz
 11260  0CAC  0AE2               	incf	??_calc_expect_vout_adc_value+7,f
 11261  0CAD  085F               	movf	??_calc_expect_vout_adc_value+4,w
 11262  0CAE  07DB               	addwf	??_calc_expect_vout_adc_value,f
 11263  0CAF  0860               	movf	??_calc_expect_vout_adc_value+5,w
 11264  0CB0  3DDC               	addwfc	??_calc_expect_vout_adc_value+1,f
 11265  0CB1  0861               	movf	??_calc_expect_vout_adc_value+6,w
 11266  0CB2  3DDD               	addwfc	??_calc_expect_vout_adc_value+2,f
 11267  0CB3  0862               	movf	??_calc_expect_vout_adc_value+7,w
 11268  0CB4  3DDE               	addwfc	??_calc_expect_vout_adc_value+3,f
 11269  0CB5  085E               	movf	??_calc_expect_vout_adc_value+3,w
 11270  0CB6  00CE               	movwf	___aldiv@divisor+3
 11271  0CB7  085D               	movf	??_calc_expect_vout_adc_value+2,w
 11272  0CB8  00CD               	movwf	___aldiv@divisor+2
 11273  0CB9  085C               	movf	??_calc_expect_vout_adc_value+1,w
 11274  0CBA  00CC               	movwf	___aldiv@divisor+1
 11275  0CBB  085B               	movf	??_calc_expect_vout_adc_value,w
 11276  0CBC  00CB               	movwf	___aldiv@divisor
 11277  0CBD  086C               	movf	calc_expect_vout_adc_value@t32+3,w
 11278  0CBE  00D2               	movwf	___aldiv@dividend+3
 11279  0CBF  086B               	movf	calc_expect_vout_adc_value@t32+2,w
 11280  0CC0  00D1               	movwf	___aldiv@dividend+2
 11281  0CC1  086A               	movf	calc_expect_vout_adc_value@t32+1,w
 11282  0CC2  00D0               	movwf	___aldiv@dividend+1
 11283  0CC3  0869               	movf	calc_expect_vout_adc_value@t32,w
 11284  0CC4  00CF               	movwf	___aldiv@dividend
 11285  0CC5  3192  22FA  318B   	fcall	___aldiv
 11286  0CC8  0020               	movlb	0	; select bank0
 11287  0CC9  084E               	movf	?___aldiv+3,w
 11288  0CCA  00EC               	movwf	calc_expect_vout_adc_value@t32+3
 11289  0CCB  084D               	movf	?___aldiv+2,w
 11290  0CCC  00EB               	movwf	calc_expect_vout_adc_value@t32+2
 11291  0CCD  084C               	movf	?___aldiv+1,w
 11292  0CCE  00EA               	movwf	calc_expect_vout_adc_value@t32+1
 11293  0CCF  084B               	movf	?___aldiv,w
 11294  0CD0  00E9               	movwf	calc_expect_vout_adc_value@t32
 11295                           
 11296                           ;sample.c: 494: t32=t32+y0;
 11297  0CD1  0869               	movf	calc_expect_vout_adc_value@t32,w
 11298  0CD2  0728               	addwf	_y0,w
 11299  0CD3  00DB               	movwf	??_calc_expect_vout_adc_value
 11300  0CD4  086A               	movf	calc_expect_vout_adc_value@t32+1,w
 11301  0CD5  3D29               	addwfc	_y0+1,w
 11302  0CD6  00DC               	movwf	??_calc_expect_vout_adc_value+1
 11303  0CD7  086B               	movf	calc_expect_vout_adc_value@t32+2,w
 11304  0CD8  3D2A               	addwfc	_y0+2,w
 11305  0CD9  00DD               	movwf	??_calc_expect_vout_adc_value+2
 11306  0CDA  086C               	movf	calc_expect_vout_adc_value@t32+3,w
 11307  0CDB  3D2B               	addwfc	_y0+3,w
 11308  0CDC  00DE               	movwf	??_calc_expect_vout_adc_value+3
 11309  0CDD  085E               	movf	??_calc_expect_vout_adc_value+3,w
 11310  0CDE  00EC               	movwf	calc_expect_vout_adc_value@t32+3
 11311  0CDF  085D               	movf	??_calc_expect_vout_adc_value+2,w
 11312  0CE0  00EB               	movwf	calc_expect_vout_adc_value@t32+2
 11313  0CE1  085C               	movf	??_calc_expect_vout_adc_value+1,w
 11314  0CE2  00EA               	movwf	calc_expect_vout_adc_value@t32+1
 11315  0CE3  085B               	movf	??_calc_expect_vout_adc_value,w
 11316  0CE4  00E9               	movwf	calc_expect_vout_adc_value@t32
 11317                           
 11318                           ;sample.c: 495: if(t32<0)t32=0;
 11319  0CE5  1FEC               	btfss	calc_expect_vout_adc_value@t32+3,7
 11320  0CE6  2CEF               	goto	l689
 11321  0CE7  3000               	movlw	0
 11322  0CE8  00EC               	movwf	calc_expect_vout_adc_value@t32+3
 11323  0CE9  3000               	movlw	0
 11324  0CEA  00EB               	movwf	calc_expect_vout_adc_value@t32+2
 11325  0CEB  3000               	movlw	0
 11326  0CEC  00EA               	movwf	calc_expect_vout_adc_value@t32+1
 11327  0CED  3000               	movlw	0
 11328  0CEE  00E9               	movwf	calc_expect_vout_adc_value@t32
 11329  0CEF                     l689:	
 11330                           
 11331                           ;sample.c: 496: return (uint16_t)t32;
 11332  0CEF  086A               	movf	calc_expect_vout_adc_value@t32+1,w
 11333  0CF0  00DA               	movwf	?_calc_expect_vout_adc_value+1
 11334  0CF1  0869               	movf	calc_expect_vout_adc_value@t32,w
 11335  0CF2  00D9               	movwf	?_calc_expect_vout_adc_value
 11336  0CF3  0008               	return
 11337  0CF4                     __end_of_calc_expect_vout_adc_value:	
 11338                           
 11339                           	psect	text33
 11340  1DB2                     __ptext33:	
 11341 ;; *************** function ___lmul *****************
 11342 ;; Defined at:
 11343 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 11344 ;; Parameters:    Size  Location     Type
 11345 ;;  multiplier      4    1[COMMON] unsigned long 
 11346 ;;  multiplicand    4    5[COMMON] unsigned long 
 11347 ;; Auto vars:     Size  Location     Type
 11348 ;;  product         4    0[BANK0 ] unsigned long 
 11349 ;; Return value:  Size  Location     Type
 11350 ;;                  4    1[COMMON] unsigned long 
 11351 ;; Registers used:
 11352 ;;		wreg, status,2, status,0
 11353 ;; Tracked objects:
 11354 ;;		On entry : 0/0
 11355 ;;		On exit  : 0/0
 11356 ;;		Unchanged: 0/0
 11357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11358 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11359 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11361 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11362 ;;Total ram usage:       12 bytes
 11363 ;; Hardware stack levels used:    1
 11364 ;; Hardware stack levels required when called:    1
 11365 ;; This function calls:
 11366 ;;		Nothing
 11367 ;; This function is called by:
 11368 ;;		_calc_temp_rs
 11369 ;;		_calc_temp_rc
 11370 ;;		_pid_pwm1_idrv_run
 11371 ;;		_calc_expect_vout_adc_value
 11372 ;;		_cal_rs_simulate_power
 11373 ;;		_m_math_pow
 11374 ;; This function uses a non-reentrant model
 11375 ;;
 11376                           
 11377                           
 11378                           ;psect for function ___lmul
 11379  1DB2                     ___lmul:	
 11380                           
 11381                           ;incstack = 0
 11382                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 11383  1DB2  3000               	movlw	0
 11384  1DB3  0020               	movlb	0	; select bank0
 11385  1DB4  00CA               	movwf	___lmul@product+3
 11386  1DB5  3000               	movlw	0
 11387  1DB6  00C9               	movwf	___lmul@product+2
 11388  1DB7  3000               	movlw	0
 11389  1DB8  00C8               	movwf	___lmul@product+1
 11390  1DB9  3000               	movlw	0
 11391  1DBA  00C7               	movwf	___lmul@product
 11392  1DBB                     l5025:	
 11393  1DBB  1C71               	btfss	___lmul@multiplier,0
 11394  1DBC  2DC6               	goto	l5029
 11395  1DBD  0875               	movf	___lmul@multiplicand,w
 11396  1DBE  0020               	movlb	0	; select bank0
 11397  1DBF  07C7               	addwf	___lmul@product,f
 11398  1DC0  0876               	movf	___lmul@multiplicand+1,w
 11399  1DC1  3DC8               	addwfc	___lmul@product+1,f
 11400  1DC2  0877               	movf	___lmul@multiplicand+2,w
 11401  1DC3  3DC9               	addwfc	___lmul@product+2,f
 11402  1DC4  0878               	movf	___lmul@multiplicand+3,w
 11403  1DC5  3DCA               	addwfc	___lmul@product+3,f
 11404  1DC6                     l5029:	
 11405  1DC6  3001               	movlw	1
 11406  1DC7                     u4465:	
 11407  1DC7  35F5               	lslf	___lmul@multiplicand,f
 11408  1DC8  0DF6               	rlf	___lmul@multiplicand+1,f
 11409  1DC9  0DF7               	rlf	___lmul@multiplicand+2,f
 11410  1DCA  0DF8               	rlf	___lmul@multiplicand+3,f
 11411  1DCB  0B89               	decfsz	9,f
 11412  1DCC  2DC7               	goto	u4465
 11413  1DCD  3001               	movlw	1
 11414  1DCE                     u4475:	
 11415  1DCE  36F4               	lsrf	___lmul@multiplier+3,f
 11416  1DCF  0CF3               	rrf	___lmul@multiplier+2,f
 11417  1DD0  0CF2               	rrf	___lmul@multiplier+1,f
 11418  1DD1  0CF1               	rrf	___lmul@multiplier,f
 11419  1DD2  0B89               	decfsz	9,f
 11420  1DD3  2DCE               	goto	u4475
 11421  1DD4  0874               	movf	___lmul@multiplier+3,w
 11422  1DD5  0473               	iorwf	___lmul@multiplier+2,w
 11423  1DD6  0472               	iorwf	___lmul@multiplier+1,w
 11424  1DD7  0471               	iorwf	___lmul@multiplier,w
 11425  1DD8  1D03               	skipz
 11426  1DD9  2DBB               	goto	l5025
 11427  1DDA  0020               	movlb	0	; select bank0
 11428  1DDB  084A               	movf	___lmul@product+3,w
 11429  1DDC  00F4               	movwf	?___lmul+3
 11430  1DDD  0849               	movf	___lmul@product+2,w
 11431  1DDE  00F3               	movwf	?___lmul+2
 11432  1DDF  0848               	movf	___lmul@product+1,w
 11433  1DE0  00F2               	movwf	?___lmul+1
 11434  1DE1  0847               	movf	___lmul@product,w
 11435  1DE2  00F1               	movwf	?___lmul
 11436  1DE3  0008               	return
 11437  1DE4                     __end_of___lmul:	
 11438                           
 11439                           	psect	text34
 11440  12FA                     __ptext34:	
 11441 ;; *************** function ___aldiv *****************
 11442 ;; Defined at:
 11443 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 11444 ;; Parameters:    Size  Location     Type
 11445 ;;  divisor         4    4[BANK0 ] long 
 11446 ;;  dividend        4    8[BANK0 ] long 
 11447 ;; Auto vars:     Size  Location     Type
 11448 ;;  quotient        4   14[BANK0 ] long 
 11449 ;;  sign            1   13[BANK0 ] unsigned char 
 11450 ;;  counter         1   12[BANK0 ] unsigned char 
 11451 ;; Return value:  Size  Location     Type
 11452 ;;                  4    4[BANK0 ] long 
 11453 ;; Registers used:
 11454 ;;		wreg, status,2, status,0
 11455 ;; Tracked objects:
 11456 ;;		On entry : 0/0
 11457 ;;		On exit  : 0/0
 11458 ;;		Unchanged: 0/0
 11459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11460 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11461 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11462 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11463 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11464 ;;Total ram usage:       15 bytes
 11465 ;; Hardware stack levels used:    1
 11466 ;; Hardware stack levels required when called:    1
 11467 ;; This function calls:
 11468 ;;		Nothing
 11469 ;; This function is called by:
 11470 ;;		_pid_pwm1_idrv_run
 11471 ;;		_calc_expect_vout_adc_value
 11472 ;;		_m_int_2_str
 11473 ;;		_m_int_2_str_ex
 11474 ;; This function uses a non-reentrant model
 11475 ;;
 11476                           
 11477                           
 11478                           ;psect for function ___aldiv
 11479  12FA                     ___aldiv:	
 11480                           
 11481                           ;incstack = 0
 11482                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 11483  12FA  0020               	movlb	0	; select bank0
 11484  12FB  01D4               	clrf	___aldiv@sign
 11485  12FC  1FCE               	btfss	___aldiv@divisor+3,7
 11486  12FD  2B0B               	goto	l1157
 11487  12FE  09CB               	comf	___aldiv@divisor,f
 11488  12FF  09CC               	comf	___aldiv@divisor+1,f
 11489  1300  09CD               	comf	___aldiv@divisor+2,f
 11490  1301  09CE               	comf	___aldiv@divisor+3,f
 11491  1302  0ACB               	incf	___aldiv@divisor,f
 11492  1303  1903               	skipnz
 11493  1304  0ACC               	incf	___aldiv@divisor+1,f
 11494  1305  1903               	skipnz
 11495  1306  0ACD               	incf	___aldiv@divisor+2,f
 11496  1307  1903               	skipnz
 11497  1308  0ACE               	incf	___aldiv@divisor+3,f
 11498  1309  01D4               	clrf	___aldiv@sign
 11499  130A  0AD4               	incf	___aldiv@sign,f
 11500  130B                     l1157:	
 11501  130B  1FD2               	btfss	___aldiv@dividend+3,7
 11502  130C  2B1C               	goto	l5047
 11503  130D  09CF               	comf	___aldiv@dividend,f
 11504  130E  09D0               	comf	___aldiv@dividend+1,f
 11505  130F  09D1               	comf	___aldiv@dividend+2,f
 11506  1310  09D2               	comf	___aldiv@dividend+3,f
 11507  1311  0ACF               	incf	___aldiv@dividend,f
 11508  1312  1903               	skipnz
 11509  1313  0AD0               	incf	___aldiv@dividend+1,f
 11510  1314  1903               	skipnz
 11511  1315  0AD1               	incf	___aldiv@dividend+2,f
 11512  1316  1903               	skipnz
 11513  1317  0AD2               	incf	___aldiv@dividend+3,f
 11514  1318  3001               	movlw	1
 11515  1319  00F9               	movwf	??___aldiv
 11516  131A  0879               	movf	??___aldiv,w
 11517  131B  06D4               	xorwf	___aldiv@sign,f
 11518  131C                     l5047:	
 11519  131C  3000               	movlw	0
 11520  131D  00D8               	movwf	___aldiv@quotient+3
 11521  131E  3000               	movlw	0
 11522  131F  00D7               	movwf	___aldiv@quotient+2
 11523  1320  3000               	movlw	0
 11524  1321  00D6               	movwf	___aldiv@quotient+1
 11525  1322  3000               	movlw	0
 11526  1323  00D5               	movwf	___aldiv@quotient
 11527  1324  084E               	movf	___aldiv@divisor+3,w
 11528  1325  044D               	iorwf	___aldiv@divisor+2,w
 11529  1326  044C               	iorwf	___aldiv@divisor+1,w
 11530  1327  044B               	iorwf	___aldiv@divisor,w
 11531  1328  1903               	skipnz
 11532  1329  2B65               	goto	l5069
 11533  132A  01D3               	clrf	___aldiv@counter
 11534  132B  0AD3               	incf	___aldiv@counter,f
 11535  132C                     l5055:	
 11536  132C  1BCE               	btfsc	___aldiv@divisor+3,7
 11537  132D  2B3A               	goto	l5057
 11538  132E  3001               	movlw	1
 11539  132F                     u4525:	
 11540  132F  35CB               	lslf	___aldiv@divisor,f
 11541  1330  0DCC               	rlf	___aldiv@divisor+1,f
 11542  1331  0DCD               	rlf	___aldiv@divisor+2,f
 11543  1332  0DCE               	rlf	___aldiv@divisor+3,f
 11544  1333  0B89               	decfsz	9,f
 11545  1334  2B2F               	goto	u4525
 11546  1335  3001               	movlw	1
 11547  1336  00F9               	movwf	??___aldiv
 11548  1337  0879               	movf	??___aldiv,w
 11549  1338  07D3               	addwf	___aldiv@counter,f
 11550  1339  2B2C               	goto	l5055
 11551  133A                     l5057:	
 11552  133A  3001               	movlw	1
 11553  133B                     u4545:	
 11554  133B  35D5               	lslf	___aldiv@quotient,f
 11555  133C  0DD6               	rlf	___aldiv@quotient+1,f
 11556  133D  0DD7               	rlf	___aldiv@quotient+2,f
 11557  133E  0DD8               	rlf	___aldiv@quotient+3,f
 11558  133F  0B89               	decfsz	9,f
 11559  1340  2B3B               	goto	u4545
 11560  1341  084E               	movf	___aldiv@divisor+3,w
 11561  1342  0252               	subwf	___aldiv@dividend+3,w
 11562  1343  1D03               	skipz
 11563  1344  2B4F               	goto	u4555
 11564  1345  084D               	movf	___aldiv@divisor+2,w
 11565  1346  0251               	subwf	___aldiv@dividend+2,w
 11566  1347  1D03               	skipz
 11567  1348  2B4F               	goto	u4555
 11568  1349  084C               	movf	___aldiv@divisor+1,w
 11569  134A  0250               	subwf	___aldiv@dividend+1,w
 11570  134B  1D03               	skipz
 11571  134C  2B4F               	goto	u4555
 11572  134D  084B               	movf	___aldiv@divisor,w
 11573  134E  024F               	subwf	___aldiv@dividend,w
 11574  134F                     u4555:	
 11575  134F  1C03               	skipc
 11576  1350  2B5A               	goto	l5065
 11577  1351  084B               	movf	___aldiv@divisor,w
 11578  1352  02CF               	subwf	___aldiv@dividend,f
 11579  1353  084C               	movf	___aldiv@divisor+1,w
 11580  1354  3BD0               	subwfb	___aldiv@dividend+1,f
 11581  1355  084D               	movf	___aldiv@divisor+2,w
 11582  1356  3BD1               	subwfb	___aldiv@dividend+2,f
 11583  1357  084E               	movf	___aldiv@divisor+3,w
 11584  1358  3BD2               	subwfb	___aldiv@dividend+3,f
 11585  1359  1455               	bsf	___aldiv@quotient,0
 11586  135A                     l5065:	
 11587  135A  3001               	movlw	1
 11588  135B                     u4565:	
 11589  135B  36CE               	lsrf	___aldiv@divisor+3,f
 11590  135C  0CCD               	rrf	___aldiv@divisor+2,f
 11591  135D  0CCC               	rrf	___aldiv@divisor+1,f
 11592  135E  0CCB               	rrf	___aldiv@divisor,f
 11593  135F  0B89               	decfsz	9,f
 11594  1360  2B5B               	goto	u4565
 11595  1361  3001               	movlw	1
 11596  1362  02D3               	subwf	___aldiv@counter,f
 11597  1363  1D03               	btfss	3,2
 11598  1364  2B3A               	goto	l5057
 11599  1365                     l5069:	
 11600  1365  0854               	movf	___aldiv@sign,w
 11601  1366  1903               	btfsc	3,2
 11602  1367  2B73               	goto	l5073
 11603  1368  09D5               	comf	___aldiv@quotient,f
 11604  1369  09D6               	comf	___aldiv@quotient+1,f
 11605  136A  09D7               	comf	___aldiv@quotient+2,f
 11606  136B  09D8               	comf	___aldiv@quotient+3,f
 11607  136C  0AD5               	incf	___aldiv@quotient,f
 11608  136D  1903               	skipnz
 11609  136E  0AD6               	incf	___aldiv@quotient+1,f
 11610  136F  1903               	skipnz
 11611  1370  0AD7               	incf	___aldiv@quotient+2,f
 11612  1371  1903               	skipnz
 11613  1372  0AD8               	incf	___aldiv@quotient+3,f
 11614  1373                     l5073:	
 11615  1373  0858               	movf	___aldiv@quotient+3,w
 11616  1374  00CE               	movwf	?___aldiv+3
 11617  1375  0857               	movf	___aldiv@quotient+2,w
 11618  1376  00CD               	movwf	?___aldiv+2
 11619  1377  0856               	movf	___aldiv@quotient+1,w
 11620  1378  00CC               	movwf	?___aldiv+1
 11621  1379  0855               	movf	___aldiv@quotient,w
 11622  137A  00CB               	movwf	?___aldiv
 11623  137B  0008               	return
 11624  137C                     __end_of___aldiv:	
 11625                           
 11626                           	psect	text35
 11627  11CA                     __ptext35:	
 11628 ;; *************** function _adc_sample *****************
 11629 ;; Defined at:
 11630 ;;		line 187 in file "src/api/sample.c"
 11631 ;; Parameters:    Size  Location     Type
 11632 ;;  ch              1    wreg     unsigned char 
 11633 ;;  gfvr            1    4[COMMON] unsigned char 
 11634 ;;  num             1    5[COMMON] unsigned char 
 11635 ;; Auto vars:     Size  Location     Type
 11636 ;;  ch              1    0[BANK0 ] unsigned char 
 11637 ;;  t16             2    5[BANK0 ] unsigned int 
 11638 ;;  ret             2    3[BANK0 ] unsigned int 
 11639 ;;  i               2    1[BANK0 ] unsigned int 
 11640 ;; Return value:  Size  Location     Type
 11641 ;;                  2    4[COMMON] unsigned int 
 11642 ;; Registers used:
 11643 ;;		wreg, status,2, status,0, pclath, cstack
 11644 ;; Tracked objects:
 11645 ;;		On entry : 0/0
 11646 ;;		On exit  : 0/0
 11647 ;;		Unchanged: 0/0
 11648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11649 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11650 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11651 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11652 ;;      Totals:         5       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11653 ;;Total ram usage:       12 bytes
 11654 ;; Hardware stack levels used:    1
 11655 ;; Hardware stack levels required when called:    2
 11656 ;; This function calls:
 11657 ;;		_adc_init
 11658 ;;		_fvr_set_gain
 11659 ;; This function is called by:
 11660 ;;		_main
 11661 ;; This function uses a non-reentrant model
 11662 ;;
 11663                           
 11664                           
 11665                           ;psect for function _adc_sample
 11666  11CA                     _adc_sample:	
 11667                           
 11668                           ;incstack = 0
 11669                           ; Regs used in _adc_sample: [wreg+status,2+status,0+pclath+cstack]
 11670                           ;adc_sample@ch stored from wreg
 11671  11CA  0020               	movlb	0	; select bank0
 11672  11CB  00C7               	movwf	adc_sample@ch
 11673                           
 11674                           ;sample.c: 189: uint16_t i;;sample.c: 190: uint16_t ret=0;
 11675  11CC  01CA               	clrf	adc_sample@ret
 11676  11CD  01CB               	clrf	adc_sample@ret+1
 11677                           
 11678                           ;sample.c: 191: uint16_t t16=0;
 11679  11CE  01CC               	clrf	adc_sample@t16
 11680  11CF  01CD               	clrf	adc_sample@t16+1
 11681                           
 11682                           ;sample.c: 193: fvr_set_gain(gfvr);
 11683  11D0  0874               	movf	adc_sample@gfvr,w
 11684  11D1  319C  243C  3191   	fcall	_fvr_set_gain
 11685                           
 11686                           ;sample.c: 194: adc_init((adc_channel_t)ch);
 11687  11D4  0020               	movlb	0	; select bank0
 11688  11D5  0847               	movf	adc_sample@ch,w
 11689  11D6  319C  2428  3191   	fcall	_adc_init
 11690                           
 11691                           ;sample.c: 195: _delay((unsigned long)((50)*(16000000/4000000.0)));
 11692  11D9  3042               	movlw	66
 11693  11DA                     u5077:	
 11694  11DA  0B89               	decfsz	9,f
 11695  11DB  29DA               	goto	u5077
 11696  11DC  3200               	nop2
 11697                           
 11698                           ;sample.c: 196: ADCON0bits.GO_nDONE = 1;
 11699  11DD  0021               	movlb	1	; select bank1
 11700  11DE  149D               	bsf	29,1	;volatile
 11701  11DF                     l633:	
 11702                           ;sample.c: 197: while (ADCON0bits.GO_nDONE);
 11703                           
 11704  11DF  189D               	btfsc	29,1	;volatile
 11705  11E0  29DF               	goto	l633
 11706                           
 11707                           ;sample.c: 198: if(num>64)num=64;
 11708  11E1  3041               	movlw	65
 11709  11E2  0275               	subwf	adc_sample@num,w
 11710  11E3  1C03               	skipc
 11711  11E4  29E9               	goto	l4161
 11712  11E5  3040               	movlw	64
 11713  11E6  00F6               	movwf	??_adc_sample
 11714  11E7  0876               	movf	??_adc_sample,w
 11715  11E8  00F5               	movwf	adc_sample@num
 11716  11E9                     l4161:	
 11717                           
 11718                           ;sample.c: 199: for(i=0;i<num;i++){
 11719  11E9  0020               	movlb	0	; select bank0
 11720  11EA  01C8               	clrf	adc_sample@i
 11721  11EB  01C9               	clrf	adc_sample@i+1
 11722  11EC                     l4171:	
 11723  11EC  0875               	movf	adc_sample@num,w
 11724  11ED  00F6               	movwf	??_adc_sample
 11725  11EE  01F7               	clrf	??_adc_sample+1
 11726  11EF  0877               	movf	??_adc_sample+1,w
 11727  11F0  0249               	subwf	adc_sample@i+1,w
 11728  11F1  1D03               	skipz
 11729  11F2  29F5               	goto	u3245
 11730  11F3  0876               	movf	??_adc_sample,w
 11731  11F4  0248               	subwf	adc_sample@i,w
 11732  11F5                     u3245:	
 11733  11F5  1803               	btfsc	3,0
 11734  11F6  2A22               	goto	l4173
 11735                           
 11736                           ;sample.c: 200: ADCON0bits.GO_nDONE = 1;
 11737  11F7  0021               	movlb	1	; select bank1
 11738  11F8  149D               	bsf	29,1	;volatile
 11739  11F9                     l639:	
 11740                           ;sample.c: 201: while (ADCON0bits.GO_nDONE);
 11741                           
 11742  11F9  189D               	btfsc	29,1	;volatile
 11743  11FA  29F9               	goto	l639
 11744                           
 11745                           ;sample.c: 202: __nop();
 11746  11FB  0000               	nop
 11747                           
 11748                           ;sample.c: 203: t16=ADRESH;
 11749  11FC  0021               	movlb	1	; select bank1
 11750  11FD  081C               	movf	28,w	;volatile
 11751  11FE  00F6               	movwf	??_adc_sample
 11752  11FF  01F7               	clrf	??_adc_sample+1
 11753  1200  0876               	movf	??_adc_sample,w
 11754  1201  0020               	movlb	0	; select bank0
 11755  1202  00CC               	movwf	adc_sample@t16
 11756  1203  0877               	movf	??_adc_sample+1,w
 11757  1204  00CD               	movwf	adc_sample@t16+1
 11758                           
 11759                           ;sample.c: 204: t16<<=2;
 11760  1205  3002               	movlw	2
 11761  1206                     u3225:	
 11762  1206  35CC               	lslf	adc_sample@t16,f
 11763  1207  0DCD               	rlf	adc_sample@t16+1,f
 11764  1208  0B89               	decfsz	9,f
 11765  1209  2A06               	goto	u3225
 11766                           
 11767                           ;sample.c: 205: t16|=(uint16_t)(ADRESL>>6);
 11768  120A  0021               	movlb	1	; select bank1
 11769  120B  081B               	movf	27,w	;volatile
 11770  120C  00F6               	movwf	??_adc_sample
 11771  120D  3006               	movlw	6
 11772  120E                     u3235:	
 11773  120E  36F6               	lsrf	??_adc_sample,f
 11774  120F  0B89               	decfsz	9,f
 11775  1210  2A0E               	goto	u3235
 11776  1211  0876               	movf	??_adc_sample,w
 11777  1212  00F7               	movwf	??_adc_sample+1
 11778  1213  01F8               	clrf	??_adc_sample+2
 11779  1214  0877               	movf	??_adc_sample+1,w
 11780  1215  0020               	movlb	0	; select bank0
 11781  1216  04CC               	iorwf	adc_sample@t16,f
 11782  1217  0878               	movf	??_adc_sample+2,w
 11783  1218  04CD               	iorwf	adc_sample@t16+1,f
 11784                           
 11785                           ;sample.c: 207: ret+=t16;
 11786  1219  084C               	movf	adc_sample@t16,w
 11787  121A  07CA               	addwf	adc_sample@ret,f
 11788  121B  084D               	movf	adc_sample@t16+1,w
 11789  121C  3DCB               	addwfc	adc_sample@ret+1,f
 11790  121D  3001               	movlw	1
 11791  121E  07C8               	addwf	adc_sample@i,f
 11792  121F  3000               	movlw	0
 11793  1220  3DC9               	addwfc	adc_sample@i+1,f
 11794  1221  29EC               	goto	l4171
 11795  1222                     l4173:	
 11796                           
 11797                           ;sample.c: 212: return ret;
 11798  1222  084B               	movf	adc_sample@ret+1,w
 11799  1223  00F5               	movwf	?_adc_sample+1
 11800  1224  084A               	movf	adc_sample@ret,w
 11801  1225  00F4               	movwf	?_adc_sample
 11802  1226  0008               	return
 11803  1227                     __end_of_adc_sample:	
 11804                           
 11805                           	psect	text36
 11806  1C3C                     __ptext36:	
 11807 ;; *************** function _fvr_set_gain *****************
 11808 ;; Defined at:
 11809 ;;		line 134 in file "src/api/sample.c"
 11810 ;; Parameters:    Size  Location     Type
 11811 ;;  g               1    wreg     unsigned char 
 11812 ;; Auto vars:     Size  Location     Type
 11813 ;;  g               1    3[COMMON] unsigned char 
 11814 ;;  t8              1    2[COMMON] unsigned char 
 11815 ;; Return value:  Size  Location     Type
 11816 ;;                  1    wreg      void 
 11817 ;; Registers used:
 11818 ;;		wreg, status,2, status,0
 11819 ;; Tracked objects:
 11820 ;;		On entry : 0/0
 11821 ;;		On exit  : 0/0
 11822 ;;		Unchanged: 0/0
 11823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11825 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11826 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11827 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11828 ;;Total ram usage:        3 bytes
 11829 ;; Hardware stack levels used:    1
 11830 ;; Hardware stack levels required when called:    1
 11831 ;; This function calls:
 11832 ;;		Nothing
 11833 ;; This function is called by:
 11834 ;;		_adc_sample
 11835 ;; This function uses a non-reentrant model
 11836 ;;
 11837                           
 11838                           
 11839                           ;psect for function _fvr_set_gain
 11840  1C3C                     _fvr_set_gain:	
 11841                           
 11842                           ;incstack = 0
 11843                           ; Regs used in _fvr_set_gain: [wreg+status,2+status,0]
 11844                           ;fvr_set_gain@g stored from wreg
 11845  1C3C  00F3               	movwf	fvr_set_gain@g
 11846                           
 11847                           ;sample.c: 136: uint8_t t8=0x80;
 11848  1C3D  3080               	movlw	128
 11849  1C3E  00F1               	movwf	??_fvr_set_gain
 11850  1C3F  0871               	movf	??_fvr_set_gain,w
 11851  1C40  00F2               	movwf	fvr_set_gain@t8
 11852                           
 11853                           ;sample.c: 137: if(g>3)g=3;
 11854  1C41  3004               	movlw	4
 11855  1C42  0273               	subwf	fvr_set_gain@g,w
 11856  1C43  1C03               	skipc
 11857  1C44  2C49               	goto	l3719
 11858  1C45  3003               	movlw	3
 11859  1C46  00F1               	movwf	??_fvr_set_gain
 11860  1C47  0871               	movf	??_fvr_set_gain,w
 11861  1C48  00F3               	movwf	fvr_set_gain@g
 11862  1C49                     l3719:	
 11863                           
 11864                           ;sample.c: 138: t8|=g;
 11865  1C49  0873               	movf	fvr_set_gain@g,w
 11866  1C4A  00F1               	movwf	??_fvr_set_gain
 11867  1C4B  0871               	movf	??_fvr_set_gain,w
 11868  1C4C  04F2               	iorwf	fvr_set_gain@t8,f
 11869                           
 11870                           ;sample.c: 139: FVRCON = t8;
 11871  1C4D  0872               	movf	fvr_set_gain@t8,w
 11872  1C4E  0022               	movlb	2	; select bank2
 11873  1C4F  0097               	movwf	23	;volatile
 11874  1C50                     l621:	
 11875                           ;sample.c: 140: while(!(FVRCONbits.FVRRDY));
 11876                           
 11877  1C50  1B17               	btfsc	23,6	;volatile
 11878  1C51  0008               	return
 11879  1C52  2C50               	goto	l621
 11880  1C53                     __end_of_fvr_set_gain:	
 11881                           
 11882                           	psect	text37
 11883  1C28                     __ptext37:	
 11884 ;; *************** function _adc_init *****************
 11885 ;; Defined at:
 11886 ;;		line 143 in file "src/api/sample.c"
 11887 ;; Parameters:    Size  Location     Type
 11888 ;;  ch              1    wreg     enum E4099
 11889 ;; Auto vars:     Size  Location     Type
 11890 ;;  ch              1    2[COMMON] enum E4099
 11891 ;; Return value:  Size  Location     Type
 11892 ;;                  1    wreg      void 
 11893 ;; Registers used:
 11894 ;;		wreg, status,2, status,0
 11895 ;; Tracked objects:
 11896 ;;		On entry : 0/0
 11897 ;;		On exit  : 0/0
 11898 ;;		Unchanged: 0/0
 11899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11903 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11904 ;;Total ram usage:        2 bytes
 11905 ;; Hardware stack levels used:    1
 11906 ;; Hardware stack levels required when called:    1
 11907 ;; This function calls:
 11908 ;;		Nothing
 11909 ;; This function is called by:
 11910 ;;		_adc_sample
 11911 ;; This function uses a non-reentrant model
 11912 ;;
 11913                           
 11914                           
 11915                           ;psect for function _adc_init
 11916  1C28                     _adc_init:	
 11917                           
 11918                           ;incstack = 0
 11919                           ; Regs used in _adc_init: [wreg+status,2+status,0]
 11920                           ;adc_init@ch stored from wreg
 11921  1C28  00F2               	movwf	adc_init@ch
 11922  1C29                     l627:	
 11923                           ;sample.c: 145: while (ADCON0bits.GO_nDONE);
 11924                           
 11925  1C29  0021               	movlb	1	; select bank1
 11926  1C2A  189D               	btfsc	29,1	;volatile
 11927  1C2B  2C29               	goto	l627
 11928                           
 11929                           ;sample.c: 146: ADCON0bits.CHS = ch;
 11930  1C2C  0872               	movf	adc_init@ch,w
 11931  1C2D  00F1               	movwf	??_adc_init
 11932  1C2E  0DF1               	rlf	??_adc_init,f
 11933  1C2F  0DF1               	rlf	??_adc_init,f
 11934  1C30  081D               	movf	29,w	;volatile
 11935  1C31  0671               	xorwf	??_adc_init,w
 11936  1C32  3983               	andlw	-125
 11937  1C33  0671               	xorwf	??_adc_init,w
 11938  1C34  009D               	movwf	29	;volatile
 11939                           
 11940                           ;sample.c: 147: ADCON0bits.ADON = 1;
 11941  1C35  141D               	bsf	29,0	;volatile
 11942                           
 11943                           ;sample.c: 148: ADCON1 = 0x63;
 11944  1C36  3063               	movlw	99
 11945  1C37  009E               	movwf	30	;volatile
 11946                           
 11947                           ;sample.c: 149: ADCON2 = 0x00;
 11948  1C38  019F               	clrf	31	;volatile
 11949                           
 11950                           ;sample.c: 150: ADRESL = 0x00;
 11951  1C39  019B               	clrf	27	;volatile
 11952                           
 11953                           ;sample.c: 151: ADRESH = 0x00;
 11954  1C3A  019C               	clrf	28	;volatile
 11955  1C3B  0008               	return
 11956  1C3C                     __end_of_adc_init:	
 11957                           
 11958                           	psect	text38
 11959  1CB7                     __ptext38:	
 11960 ;; *************** function _SYSTEM_Initialize *****************
 11961 ;; Defined at:
 11962 ;;		line 70 in file "mcc_generated_files/mcc.c"
 11963 ;; Parameters:    Size  Location     Type
 11964 ;;		None
 11965 ;; Auto vars:     Size  Location     Type
 11966 ;;		None
 11967 ;; Return value:  Size  Location     Type
 11968 ;;                  1    wreg      void 
 11969 ;; Registers used:
 11970 ;;		wreg, status,2, status,0, pclath, cstack
 11971 ;; Tracked objects:
 11972 ;;		On entry : 0/0
 11973 ;;		On exit  : 0/0
 11974 ;;		Unchanged: 0/0
 11975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11980 ;;Total ram usage:        0 bytes
 11981 ;; Hardware stack levels used:    1
 11982 ;; Hardware stack levels required when called:    3
 11983 ;; This function calls:
 11984 ;;		_ADC1_Initialize
 11985 ;;		_EUSART_Initialize
 11986 ;;		_FVR_Initialize
 11987 ;;		_OSCILLATOR_Initialize
 11988 ;;		_PIN_MANAGER_Initialize
 11989 ;;		_PWM1_Initialize
 11990 ;;		_PWM2_Initialize
 11991 ;;		_TMR2_Initialize
 11992 ;;		_WDT_Initialize
 11993 ;; This function is called by:
 11994 ;;		_main
 11995 ;; This function uses a non-reentrant model
 11996 ;;
 11997                           
 11998                           
 11999                           ;psect for function _SYSTEM_Initialize
 12000  1CB7                     _SYSTEM_Initialize:	
 12001                           
 12002                           ;mcc.c: 73: PIN_MANAGER_Initialize();
 12003                           
 12004                           ;incstack = 0
 12005                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12006  1CB7  319E  26C1  319C   	fcall	_PIN_MANAGER_Initialize
 12007                           
 12008                           ;mcc.c: 74: OSCILLATOR_Initialize();
 12009  1CBA  3190  2001  319C   	fcall	_OSCILLATOR_Initialize
 12010                           
 12011                           ;mcc.c: 75: WDT_Initialize();
 12012  1CBD  319B  23DA  319C   	fcall	_WDT_Initialize
 12013                           
 12014                           ;mcc.c: 76: FVR_Initialize();
 12015  1CC0  319B  23D6  319C   	fcall	_FVR_Initialize
 12016                           
 12017                           ;mcc.c: 77: PWM1_Initialize();
 12018  1CC3  319C  2453  319C   	fcall	_PWM1_Initialize
 12019                           
 12020                           ;mcc.c: 78: PWM2_Initialize();
 12021  1CC6  319C  246C  319C   	fcall	_PWM2_Initialize
 12022                           
 12023                           ;mcc.c: 79: ADC1_Initialize();
 12024  1CC9  319B  23E8  319C   	fcall	_ADC1_Initialize
 12025                           
 12026                           ;mcc.c: 80: TMR2_Initialize();
 12027  1CCC  318F  27ED  319C   	fcall	_TMR2_Initialize
 12028                           
 12029                           ;mcc.c: 81: EUSART_Initialize();
 12030  1CCF  319C  2415         	fcall	_EUSART_Initialize
 12031  1CD1  0008               	return
 12032  1CD2                     __end_of_SYSTEM_Initialize:	
 12033                           
 12034                           	psect	text39
 12035  1BDA                     __ptext39:	
 12036 ;; *************** function _WDT_Initialize *****************
 12037 ;; Defined at:
 12038 ;;		line 94 in file "mcc_generated_files/mcc.c"
 12039 ;; Parameters:    Size  Location     Type
 12040 ;;		None
 12041 ;; Auto vars:     Size  Location     Type
 12042 ;;		None
 12043 ;; Return value:  Size  Location     Type
 12044 ;;                  1    wreg      void 
 12045 ;; Registers used:
 12046 ;;		wreg
 12047 ;; Tracked objects:
 12048 ;;		On entry : 0/0
 12049 ;;		On exit  : 0/0
 12050 ;;		Unchanged: 0/0
 12051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12056 ;;Total ram usage:        0 bytes
 12057 ;; Hardware stack levels used:    1
 12058 ;; Hardware stack levels required when called:    1
 12059 ;; This function calls:
 12060 ;;		Nothing
 12061 ;; This function is called by:
 12062 ;;		_SYSTEM_Initialize
 12063 ;; This function uses a non-reentrant model
 12064 ;;
 12065                           
 12066                           
 12067                           ;psect for function _WDT_Initialize
 12068  1BDA                     _WDT_Initialize:	
 12069                           
 12070                           ;mcc.c: 97: WDTCON = 0x16;
 12071                           
 12072                           ;incstack = 0
 12073                           ; Regs used in _WDT_Initialize: [wreg]
 12074  1BDA  3016               	movlw	22
 12075  1BDB  0021               	movlb	1	; select bank1
 12076  1BDC  0097               	movwf	23	;volatile
 12077  1BDD  0008               	return
 12078  1BDE                     __end_of_WDT_Initialize:	
 12079                           
 12080                           	psect	text40
 12081  0FED                     __ptext40:	
 12082 ;; *************** function _TMR2_Initialize *****************
 12083 ;; Defined at:
 12084 ;;		line 63 in file "mcc_generated_files/tmr2.c"
 12085 ;; Parameters:    Size  Location     Type
 12086 ;;		None
 12087 ;; Auto vars:     Size  Location     Type
 12088 ;;		None
 12089 ;; Return value:  Size  Location     Type
 12090 ;;                  1    wreg      void 
 12091 ;; Registers used:
 12092 ;;		wreg, status,2, status,0, pclath, cstack
 12093 ;; Tracked objects:
 12094 ;;		On entry : 0/0
 12095 ;;		On exit  : 0/0
 12096 ;;		Unchanged: 0/0
 12097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12102 ;;Total ram usage:        0 bytes
 12103 ;; Hardware stack levels used:    1
 12104 ;; Hardware stack levels required when called:    2
 12105 ;; This function calls:
 12106 ;;		_TMR2_SetInterruptHandler
 12107 ;;		_TMR2_StartTimer
 12108 ;; This function is called by:
 12109 ;;		_SYSTEM_Initialize
 12110 ;; This function uses a non-reentrant model
 12111 ;;
 12112                           
 12113                           
 12114                           ;psect for function _TMR2_Initialize
 12115  0FED                     _TMR2_Initialize:	
 12116                           
 12117                           ;tmr2.c: 68: T2CON = 0x4B;
 12118                           
 12119                           ;incstack = 0
 12120                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12121  0FED  304B               	movlw	75
 12122  0FEE  0020               	movlb	0	; select bank0
 12123  0FEF  009C               	movwf	28	;volatile
 12124                           
 12125                           ;tmr2.c: 71: PR2 = 0x7C;
 12126  0FF0  307C               	movlw	124
 12127  0FF1  009B               	movwf	27	;volatile
 12128                           
 12129                           ;tmr2.c: 74: TMR2 = 0x00;
 12130  0FF2  019A               	clrf	26	;volatile
 12131                           
 12132                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
 12133  0FF3  1091               	bcf	17,1	;volatile
 12134                           
 12135                           ;tmr2.c: 80: PIE1bits.TMR2IE = 1;
 12136  0FF4  0021               	movlb	1	; select bank1
 12137  0FF5  1491               	bsf	17,1	;volatile
 12138                           
 12139                           ;tmr2.c: 83: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
 12140  0FF6  3000               	movlw	0
 12141  0FF7  00F1               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 12142  0FF8  3000               	movlw	0
 12143  0FF9  00F2               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 12144  0FFA  319B  23E2  318F   	fcall	_TMR2_SetInterruptHandler
 12145                           
 12146                           ;tmr2.c: 86: TMR2_StartTimer();
 12147  0FFD  319B  23D3         	fcall	_TMR2_StartTimer
 12148  0FFF  0008               	return
 12149  1000                     __end_of_TMR2_Initialize:	
 12150                           
 12151                           	psect	text41
 12152  1BD3                     __ptext41:	
 12153 ;; *************** function _TMR2_StartTimer *****************
 12154 ;; Defined at:
 12155 ;;		line 89 in file "mcc_generated_files/tmr2.c"
 12156 ;; Parameters:    Size  Location     Type
 12157 ;;		None
 12158 ;; Auto vars:     Size  Location     Type
 12159 ;;		None
 12160 ;; Return value:  Size  Location     Type
 12161 ;;                  1    wreg      void 
 12162 ;; Registers used:
 12163 ;;		None
 12164 ;; Tracked objects:
 12165 ;;		On entry : 0/0
 12166 ;;		On exit  : 0/0
 12167 ;;		Unchanged: 0/0
 12168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12173 ;;Total ram usage:        0 bytes
 12174 ;; Hardware stack levels used:    1
 12175 ;; Hardware stack levels required when called:    1
 12176 ;; This function calls:
 12177 ;;		Nothing
 12178 ;; This function is called by:
 12179 ;;		_TMR2_Initialize
 12180 ;; This function uses a non-reentrant model
 12181 ;;
 12182                           
 12183                           
 12184                           ;psect for function _TMR2_StartTimer
 12185  1BD3                     _TMR2_StartTimer:	
 12186                           
 12187                           ;tmr2.c: 92: T2CONbits.TMR2ON = 1;
 12188                           
 12189                           ;incstack = 0
 12190                           ; Regs used in _TMR2_StartTimer: []
 12191  1BD3  0020               	movlb	0	; select bank0
 12192  1BD4  151C               	bsf	28,2	;volatile
 12193  1BD5  0008               	return
 12194  1BD6                     __end_of_TMR2_StartTimer:	
 12195                           
 12196                           	psect	text42
 12197  1BE2                     __ptext42:	
 12198 ;; *************** function _TMR2_SetInterruptHandler *****************
 12199 ;; Defined at:
 12200 ;;		line 142 in file "mcc_generated_files/tmr2.c"
 12201 ;; Parameters:    Size  Location     Type
 12202 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 12203 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 12204 ;; Auto vars:     Size  Location     Type
 12205 ;;		None
 12206 ;; Return value:  Size  Location     Type
 12207 ;;                  1    wreg      void 
 12208 ;; Registers used:
 12209 ;;		wreg
 12210 ;; Tracked objects:
 12211 ;;		On entry : 0/0
 12212 ;;		On exit  : 0/0
 12213 ;;		Unchanged: 0/0
 12214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12215 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12218 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12219 ;;Total ram usage:        2 bytes
 12220 ;; Hardware stack levels used:    1
 12221 ;; Hardware stack levels required when called:    1
 12222 ;; This function calls:
 12223 ;;		Nothing
 12224 ;; This function is called by:
 12225 ;;		_TMR2_Initialize
 12226 ;; This function uses a non-reentrant model
 12227 ;;
 12228                           
 12229                           
 12230                           ;psect for function _TMR2_SetInterruptHandler
 12231  1BE2                     _TMR2_SetInterruptHandler:	
 12232                           
 12233                           ;tmr2.c: 143: TMR2_InterruptHandler = InterruptHandler;
 12234                           
 12235                           ;incstack = 0
 12236                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 12237  1BE2  0872               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 12238  1BE3  0020               	movlb	0	; select bank0
 12239  1BE4  00BD               	movwf	_TMR2_InterruptHandler+1
 12240  1BE5  0871               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 12241  1BE6  00BC               	movwf	_TMR2_InterruptHandler
 12242  1BE7  0008               	return
 12243  1BE8                     __end_of_TMR2_SetInterruptHandler:	
 12244                           
 12245                           	psect	text43
 12246  1C6C                     __ptext43:	
 12247 ;; *************** function _PWM2_Initialize *****************
 12248 ;; Defined at:
 12249 ;;		line 58 in file "mcc_generated_files/pwm2.c"
 12250 ;; Parameters:    Size  Location     Type
 12251 ;;		None
 12252 ;; Auto vars:     Size  Location     Type
 12253 ;;		None
 12254 ;; Return value:  Size  Location     Type
 12255 ;;                  1    wreg      void 
 12256 ;; Registers used:
 12257 ;;		wreg, status,2
 12258 ;; Tracked objects:
 12259 ;;		On entry : 0/0
 12260 ;;		On exit  : 0/0
 12261 ;;		Unchanged: 0/0
 12262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12267 ;;Total ram usage:        0 bytes
 12268 ;; Hardware stack levels used:    1
 12269 ;; Hardware stack levels required when called:    1
 12270 ;; This function calls:
 12271 ;;		Nothing
 12272 ;; This function is called by:
 12273 ;;		_SYSTEM_Initialize
 12274 ;; This function uses a non-reentrant model
 12275 ;;
 12276                           
 12277                           
 12278                           ;psect for function _PWM2_Initialize
 12279  1C6C                     _PWM2_Initialize:	
 12280                           
 12281                           ;pwm2.c: 63: PWM2INTE = 0x01;
 12282                           
 12283                           ;incstack = 0
 12284                           ; Regs used in _PWM2_Initialize: [wreg+status,2]
 12285  1C6C  3001               	movlw	1
 12286  1C6D  003B               	movlb	27	; select bank27
 12287  1C6E  00AC               	movwf	44	;volatile
 12288                           
 12289                           ;pwm2.c: 66: PWM2INTF = 0x00;
 12290  1C6F  01AD               	clrf	45	;volatile
 12291                           
 12292                           ;pwm2.c: 69: PWM2CLKCON = 0x00;
 12293  1C70  01AE               	clrf	46	;volatile
 12294                           
 12295                           ;pwm2.c: 72: PWM2LDCON = 0x00;
 12296  1C71  01AF               	clrf	47	;volatile
 12297                           
 12298                           ;pwm2.c: 75: PWM2OFCON = 0x00;
 12299  1C72  01B0               	clrf	48	;volatile
 12300                           
 12301                           ;pwm2.c: 78: PWM2PHH = 0x00;
 12302  1C73  01A2               	clrf	34	;volatile
 12303                           
 12304                           ;pwm2.c: 81: PWM2PHL = 0x02;
 12305  1C74  3002               	movlw	2
 12306  1C75  00A1               	movwf	33	;volatile
 12307                           
 12308                           ;pwm2.c: 84: PWM2DCH = 0x00;
 12309  1C76  01A4               	clrf	36	;volatile
 12310                           
 12311                           ;pwm2.c: 87: PWM2DCL = 0xA0;
 12312  1C77  30A0               	movlw	160
 12313  1C78  00A3               	movwf	35	;volatile
 12314                           
 12315                           ;pwm2.c: 90: PWM2PRH = 0x06;
 12316  1C79  3006               	movlw	6
 12317  1C7A  00A6               	movwf	38	;volatile
 12318                           
 12319                           ;pwm2.c: 93: PWM2PRL = 0x3F;
 12320  1C7B  303F               	movlw	63
 12321  1C7C  00A5               	movwf	37	;volatile
 12322                           
 12323                           ;pwm2.c: 96: PWM2OFH = 0x00;
 12324  1C7D  01A8               	clrf	40	;volatile
 12325                           
 12326                           ;pwm2.c: 99: PWM2OFL = 0x01;
 12327  1C7E  3001               	movlw	1
 12328  1C7F  00A7               	movwf	39	;volatile
 12329                           
 12330                           ;pwm2.c: 102: PWM2TMRH = 0x00;
 12331  1C80  01AA               	clrf	42	;volatile
 12332                           
 12333                           ;pwm2.c: 105: PWM2TMRL = 0x00;
 12334  1C81  01A9               	clrf	41	;volatile
 12335                           
 12336                           ;pwm2.c: 108: PWM2CON = 0x90;
 12337  1C82  3090               	movlw	144
 12338  1C83  00AB               	movwf	43	;volatile
 12339  1C84  0008               	return
 12340  1C85                     __end_of_PWM2_Initialize:	
 12341                           
 12342                           	psect	text44
 12343  1C53                     __ptext44:	
 12344 ;; *************** function _PWM1_Initialize *****************
 12345 ;; Defined at:
 12346 ;;		line 58 in file "mcc_generated_files/pwm1.c"
 12347 ;; Parameters:    Size  Location     Type
 12348 ;;		None
 12349 ;; Auto vars:     Size  Location     Type
 12350 ;;		None
 12351 ;; Return value:  Size  Location     Type
 12352 ;;                  1    wreg      void 
 12353 ;; Registers used:
 12354 ;;		wreg, status,2
 12355 ;; Tracked objects:
 12356 ;;		On entry : 0/0
 12357 ;;		On exit  : 0/0
 12358 ;;		Unchanged: 0/0
 12359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12364 ;;Total ram usage:        0 bytes
 12365 ;; Hardware stack levels used:    1
 12366 ;; Hardware stack levels required when called:    1
 12367 ;; This function calls:
 12368 ;;		Nothing
 12369 ;; This function is called by:
 12370 ;;		_SYSTEM_Initialize
 12371 ;; This function uses a non-reentrant model
 12372 ;;
 12373                           
 12374                           
 12375                           ;psect for function _PWM1_Initialize
 12376  1C53                     _PWM1_Initialize:	
 12377                           
 12378                           ;pwm1.c: 63: PWM1INTE = 0x01;
 12379                           
 12380                           ;incstack = 0
 12381                           ; Regs used in _PWM1_Initialize: [wreg+status,2]
 12382  1C53  3001               	movlw	1
 12383  1C54  003B               	movlb	27	; select bank27
 12384  1C55  009C               	movwf	28	;volatile
 12385                           
 12386                           ;pwm1.c: 66: PWM1INTF = 0x00;
 12387  1C56  019D               	clrf	29	;volatile
 12388                           
 12389                           ;pwm1.c: 69: PWM1CLKCON = 0x00;
 12390  1C57  019E               	clrf	30	;volatile
 12391                           
 12392                           ;pwm1.c: 72: PWM1LDCON = 0x00;
 12393  1C58  019F               	clrf	31	;volatile
 12394                           
 12395                           ;pwm1.c: 75: PWM1OFCON = 0x00;
 12396  1C59  01A0               	clrf	32	;volatile
 12397                           
 12398                           ;pwm1.c: 78: PWM1PHH = 0x00;
 12399  1C5A  0192               	clrf	18	;volatile
 12400                           
 12401                           ;pwm1.c: 81: PWM1PHL = 0x02;
 12402  1C5B  3002               	movlw	2
 12403  1C5C  0091               	movwf	17	;volatile
 12404                           
 12405                           ;pwm1.c: 84: PWM1DCH = 0x00;
 12406  1C5D  0194               	clrf	20	;volatile
 12407                           
 12408                           ;pwm1.c: 87: PWM1DCL = 0xa0;
 12409  1C5E  30A0               	movlw	160
 12410  1C5F  0093               	movwf	19	;volatile
 12411                           
 12412                           ;pwm1.c: 90: PWM1PRH = 0x06;
 12413  1C60  3006               	movlw	6
 12414  1C61  0096               	movwf	22	;volatile
 12415                           
 12416                           ;pwm1.c: 93: PWM1PRL = 0x3F;
 12417  1C62  303F               	movlw	63
 12418  1C63  0095               	movwf	21	;volatile
 12419                           
 12420                           ;pwm1.c: 96: PWM1OFH = 0x00;
 12421  1C64  0198               	clrf	24	;volatile
 12422                           
 12423                           ;pwm1.c: 99: PWM1OFL = 0x01;
 12424  1C65  3001               	movlw	1
 12425  1C66  0097               	movwf	23	;volatile
 12426                           
 12427                           ;pwm1.c: 102: PWM1TMRH = 0x00;
 12428  1C67  019A               	clrf	26	;volatile
 12429                           
 12430                           ;pwm1.c: 105: PWM1TMRL = 0x00;
 12431  1C68  0199               	clrf	25	;volatile
 12432                           
 12433                           ;pwm1.c: 108: PWM1CON = 0x90;
 12434  1C69  3090               	movlw	144
 12435  1C6A  009B               	movwf	27	;volatile
 12436  1C6B  0008               	return
 12437  1C6C                     __end_of_PWM1_Initialize:	
 12438                           
 12439                           	psect	text45
 12440  1EC1                     __ptext45:	
 12441 ;; *************** function _PIN_MANAGER_Initialize *****************
 12442 ;; Defined at:
 12443 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 12444 ;; Parameters:    Size  Location     Type
 12445 ;;		None
 12446 ;; Auto vars:     Size  Location     Type
 12447 ;;  state           1    1[COMMON] unsigned char 
 12448 ;; Return value:  Size  Location     Type
 12449 ;;                  1    wreg      void 
 12450 ;; Registers used:
 12451 ;;		wreg, status,2, status,0
 12452 ;; Tracked objects:
 12453 ;;		On entry : 0/0
 12454 ;;		On exit  : 0/0
 12455 ;;		Unchanged: 0/0
 12456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12458 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12460 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12461 ;;Total ram usage:        1 bytes
 12462 ;; Hardware stack levels used:    1
 12463 ;; Hardware stack levels required when called:    1
 12464 ;; This function calls:
 12465 ;;		Nothing
 12466 ;; This function is called by:
 12467 ;;		_SYSTEM_Initialize
 12468 ;; This function uses a non-reentrant model
 12469 ;;
 12470                           
 12471                           
 12472                           ;psect for function _PIN_MANAGER_Initialize
 12473  1EC1                     _PIN_MANAGER_Initialize:	
 12474                           
 12475                           ;pin_manager.c: 57: LATA = 0x00;
 12476                           
 12477                           ;incstack = 0
 12478                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 12479  1EC1  0022               	movlb	2	; select bank2
 12480  1EC2  018C               	clrf	12	;volatile
 12481                           
 12482                           ;pin_manager.c: 58: LATC = 0x00;
 12483  1EC3  018E               	clrf	14	;volatile
 12484                           
 12485                           ;pin_manager.c: 63: TRISA = 0x0F;
 12486  1EC4  300F               	movlw	15
 12487  1EC5  0021               	movlb	1	; select bank1
 12488  1EC6  008C               	movwf	12	;volatile
 12489                           
 12490                           ;pin_manager.c: 64: TRISC = 0x1f;
 12491  1EC7  301F               	movlw	31
 12492  1EC8  008E               	movwf	14	;volatile
 12493                           
 12494                           ;pin_manager.c: 69: ANSELC = 0x0F;
 12495  1EC9  300F               	movlw	15
 12496  1ECA  0023               	movlb	3	; select bank3
 12497  1ECB  008E               	movwf	14	;volatile
 12498                           
 12499                           ;pin_manager.c: 70: ANSELA = 0x17;
 12500  1ECC  3017               	movlw	23
 12501  1ECD  008C               	movwf	12	;volatile
 12502                           
 12503                           ;pin_manager.c: 75: WPUA = 0x3B;
 12504  1ECE  303B               	movlw	59
 12505  1ECF  0024               	movlb	4	; select bank4
 12506  1ED0  008C               	movwf	12	;volatile
 12507                           
 12508                           ;pin_manager.c: 76: WPUC = 0x30;
 12509  1ED1  3030               	movlw	48
 12510  1ED2  008E               	movwf	14	;volatile
 12511                           
 12512                           ;pin_manager.c: 77: OPTION_REGbits.nWPUEN = 0;
 12513  1ED3  0021               	movlb	1	; select bank1
 12514  1ED4  1395               	bcf	21,7	;volatile
 12515                           
 12516                           ;pin_manager.c: 82: ODCONA = 0x00;
 12517  1ED5  0025               	movlb	5	; select bank5
 12518  1ED6  018C               	clrf	12	;volatile
 12519                           
 12520                           ;pin_manager.c: 83: ODCONC = 0x00;
 12521  1ED7  018E               	clrf	14	;volatile
 12522                           
 12523                           ;pin_manager.c: 85: bool state = (unsigned char)GIE;
 12524  1ED8  3000               	movlw	0
 12525  1ED9  1B8B               	btfsc	11,7	;volatile
 12526  1EDA  3001               	movlw	1
 12527  1EDB  00F1               	movwf	PIN_MANAGER_Initialize@state
 12528                           
 12529                           ;pin_manager.c: 86: GIE = 0;
 12530  1EDC  138B               	bcf	11,7	;volatile
 12531                           
 12532                           ;pin_manager.c: 87: PPSLOCK = 0x55;
 12533  1EDD  3055               	movlw	85
 12534  1EDE  003C               	movlb	28	; select bank28
 12535  1EDF  008F               	movwf	15	;volsfr
 12536                           
 12537                           ;pin_manager.c: 88: PPSLOCK = 0xAA;
 12538  1EE0  30AA               	movlw	170
 12539  1EE1  008F               	movwf	15	;volsfr
 12540                           
 12541                           ;pin_manager.c: 89: PPSLOCKbits.PPSLOCKED = 0x00;
 12542  1EE2  100F               	bcf	15,0	;volsfr
 12543                           
 12544                           ;pin_manager.c: 91: RXPPSbits.RXPPS = 0x14;
 12545  1EE3  0815               	movf	21,w	;volatile
 12546  1EE4  39E0               	andlw	-32
 12547  1EE5  3814               	iorlw	20
 12548  1EE6  0095               	movwf	21	;volatile
 12549                           
 12550                           ;pin_manager.c: 92: RA4PPSbits.RA4PPS = 0x04;
 12551  1EE7  003D               	movlb	29	; select bank29
 12552  1EE8  0814               	movf	20,w	;volatile
 12553  1EE9  39F0               	andlw	-16
 12554  1EEA  3804               	iorlw	4
 12555  1EEB  0094               	movwf	20	;volatile
 12556                           
 12557                           ;pin_manager.c: 93: RA5PPSbits.RA5PPS = 0x03;
 12558  1EEC  0815               	movf	21,w	;volatile
 12559  1EED  39F0               	andlw	-16
 12560  1EEE  3803               	iorlw	3
 12561  1EEF  0095               	movwf	21	;volatile
 12562                           
 12563                           ;pin_manager.c: 94: RC5PPSbits.RC5PPS = 0x09;
 12564  1EF0  0825               	movf	37,w	;volatile
 12565  1EF1  39F0               	andlw	-16
 12566  1EF2  3809               	iorlw	9
 12567  1EF3  00A5               	movwf	37	;volatile
 12568                           
 12569                           ;pin_manager.c: 96: PPSLOCK = 0x55;
 12570  1EF4  3055               	movlw	85
 12571  1EF5  003C               	movlb	28	; select bank28
 12572  1EF6  008F               	movwf	15	;volsfr
 12573                           
 12574                           ;pin_manager.c: 97: PPSLOCK = 0xAA;
 12575  1EF7  30AA               	movlw	170
 12576  1EF8  008F               	movwf	15	;volsfr
 12577                           
 12578                           ;pin_manager.c: 98: PPSLOCKbits.PPSLOCKED = 0x01;
 12579  1EF9  140F               	bsf	15,0	;volsfr
 12580                           
 12581                           ;pin_manager.c: 100: GIE = state;
 12582  1EFA  1C71               	btfss	PIN_MANAGER_Initialize@state,0
 12583  1EFB  2EFE               	goto	u2400
 12584  1EFC  178B               	bsf	11,7	;volatile
 12585  1EFD  0008               	return
 12586  1EFE                     u2400:	
 12587  1EFE  138B               	bcf	11,7	;volatile
 12588  1EFF  0008               	return
 12589  1F00                     __end_of_PIN_MANAGER_Initialize:	
 12590                           
 12591                           	psect	text46
 12592  1001                     __ptext46:	
 12593 ;; *************** function _OSCILLATOR_Initialize *****************
 12594 ;; Defined at:
 12595 ;;		line 84 in file "mcc_generated_files/mcc.c"
 12596 ;; Parameters:    Size  Location     Type
 12597 ;;		None
 12598 ;; Auto vars:     Size  Location     Type
 12599 ;;		None
 12600 ;; Return value:  Size  Location     Type
 12601 ;;                  1    wreg      void 
 12602 ;; Registers used:
 12603 ;;		None
 12604 ;; Tracked objects:
 12605 ;;		On entry : 0/0
 12606 ;;		On exit  : 0/0
 12607 ;;		Unchanged: 0/0
 12608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12613 ;;Total ram usage:        0 bytes
 12614 ;; Hardware stack levels used:    1
 12615 ;; Hardware stack levels required when called:    1
 12616 ;; This function calls:
 12617 ;;		Nothing
 12618 ;; This function is called by:
 12619 ;;		_SYSTEM_Initialize
 12620 ;; This function uses a non-reentrant model
 12621 ;;
 12622                           
 12623                           
 12624                           ;psect for function _OSCILLATOR_Initialize
 12625  1001                     _OSCILLATOR_Initialize:	
 12626                           
 12627                           ;incstack = 0
 12628                           ; Regs used in _OSCILLATOR_Initialize: []
 12629  1001  0008               	return
 12630  1002                     __end_of_OSCILLATOR_Initialize:	
 12631                           
 12632                           	psect	text47
 12633  1BD6                     __ptext47:	
 12634 ;; *************** function _FVR_Initialize *****************
 12635 ;; Defined at:
 12636 ;;		line 57 in file "mcc_generated_files/fvr.c"
 12637 ;; Parameters:    Size  Location     Type
 12638 ;;		None
 12639 ;; Auto vars:     Size  Location     Type
 12640 ;;		None
 12641 ;; Return value:  Size  Location     Type
 12642 ;;                  1    wreg      void 
 12643 ;; Registers used:
 12644 ;;		wreg
 12645 ;; Tracked objects:
 12646 ;;		On entry : 0/0
 12647 ;;		On exit  : 0/0
 12648 ;;		Unchanged: 0/0
 12649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12654 ;;Total ram usage:        0 bytes
 12655 ;; Hardware stack levels used:    1
 12656 ;; Hardware stack levels required when called:    1
 12657 ;; This function calls:
 12658 ;;		Nothing
 12659 ;; This function is called by:
 12660 ;;		_SYSTEM_Initialize
 12661 ;; This function uses a non-reentrant model
 12662 ;;
 12663                           
 12664                           
 12665                           ;psect for function _FVR_Initialize
 12666  1BD6                     _FVR_Initialize:	
 12667                           
 12668                           ;fvr.c: 60: FVRCON = 0x81;
 12669                           
 12670                           ;incstack = 0
 12671                           ; Regs used in _FVR_Initialize: [wreg]
 12672  1BD6  3081               	movlw	129
 12673  1BD7  0022               	movlb	2	; select bank2
 12674  1BD8  0097               	movwf	23	;volatile
 12675  1BD9  0008               	return
 12676  1BDA                     __end_of_FVR_Initialize:	
 12677                           
 12678                           	psect	text48
 12679  1C15                     __ptext48:	
 12680 ;; *************** function _EUSART_Initialize *****************
 12681 ;; Defined at:
 12682 ;;		line 55 in file "mcc_generated_files/eusart.c"
 12683 ;; Parameters:    Size  Location     Type
 12684 ;;		None
 12685 ;; Auto vars:     Size  Location     Type
 12686 ;;		None
 12687 ;; Return value:  Size  Location     Type
 12688 ;;                  1    wreg      void 
 12689 ;; Registers used:
 12690 ;;		wreg
 12691 ;; Tracked objects:
 12692 ;;		On entry : 0/0
 12693 ;;		On exit  : 0/0
 12694 ;;		Unchanged: 0/0
 12695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12700 ;;Total ram usage:        0 bytes
 12701 ;; Hardware stack levels used:    1
 12702 ;; Hardware stack levels required when called:    1
 12703 ;; This function calls:
 12704 ;;		Nothing
 12705 ;; This function is called by:
 12706 ;;		_SYSTEM_Initialize
 12707 ;; This function uses a non-reentrant model
 12708 ;;
 12709                           
 12710                           
 12711                           ;psect for function _EUSART_Initialize
 12712  1C15                     _EUSART_Initialize:	
 12713                           
 12714                           ;eusart.c: 58: PIE1bits.RCIE = 0;
 12715                           
 12716                           ;incstack = 0
 12717                           ; Regs used in _EUSART_Initialize: [wreg]
 12718  1C15  0021               	movlb	1	; select bank1
 12719  1C16  1291               	bcf	17,5	;volatile
 12720                           
 12721                           ;eusart.c: 59: PIE1bits.TXIE = 0;
 12722  1C17  1211               	bcf	17,4	;volatile
 12723                           
 12724                           ;eusart.c: 61: BAUDCON = 0x08;
 12725  1C18  3008               	movlw	8
 12726  1C19  0023               	movlb	3	; select bank3
 12727  1C1A  009F               	movwf	31	;volatile
 12728                           
 12729                           ;eusart.c: 64: RCSTA = 0x90;
 12730  1C1B  3090               	movlw	144
 12731  1C1C  009D               	movwf	29	;volatile
 12732                           
 12733                           ;eusart.c: 67: TXSTA = 0x24;
 12734  1C1D  3024               	movlw	36
 12735  1C1E  009E               	movwf	30	;volatile
 12736                           
 12737                           ;eusart.c: 71: SPBRGL = 0xA0;
 12738  1C1F  30A0               	movlw	160
 12739  1C20  009B               	movwf	27	;volatile
 12740                           
 12741                           ;eusart.c: 76: SPBRGH = 0x01;
 12742  1C21  3001               	movlw	1
 12743  1C22  009C               	movwf	28	;volatile
 12744                           
 12745                           ;eusart.c: 77: PIE1bits.RCIE = 1;
 12746  1C23  0021               	movlb	1	; select bank1
 12747  1C24  1691               	bsf	17,5	;volatile
 12748                           
 12749                           ;eusart.c: 78: PIR1bits.TXIF=0;
 12750  1C25  0020               	movlb	0	; select bank0
 12751  1C26  1211               	bcf	17,4	;volatile
 12752  1C27  0008               	return
 12753  1C28                     __end_of_EUSART_Initialize:	
 12754                           
 12755                           	psect	text49
 12756  1BE8                     __ptext49:	
 12757 ;; *************** function _ADC1_Initialize *****************
 12758 ;; Defined at:
 12759 ;;		line 64 in file "mcc_generated_files/adc1.c"
 12760 ;; Parameters:    Size  Location     Type
 12761 ;;		None
 12762 ;; Auto vars:     Size  Location     Type
 12763 ;;		None
 12764 ;; Return value:  Size  Location     Type
 12765 ;;                  1    wreg      void 
 12766 ;; Registers used:
 12767 ;;		wreg, status,2
 12768 ;; Tracked objects:
 12769 ;;		On entry : 0/0
 12770 ;;		On exit  : 0/0
 12771 ;;		Unchanged: 0/0
 12772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12777 ;;Total ram usage:        0 bytes
 12778 ;; Hardware stack levels used:    1
 12779 ;; Hardware stack levels required when called:    1
 12780 ;; This function calls:
 12781 ;;		Nothing
 12782 ;; This function is called by:
 12783 ;;		_SYSTEM_Initialize
 12784 ;; This function uses a non-reentrant model
 12785 ;;
 12786                           
 12787                           
 12788                           ;psect for function _ADC1_Initialize
 12789  1BE8                     _ADC1_Initialize:	
 12790                           
 12791                           ;adc1.c: 69: ADCON0 = 0x01;
 12792                           
 12793                           ;incstack = 0
 12794                           ; Regs used in _ADC1_Initialize: [wreg+status,2]
 12795  1BE8  3001               	movlw	1
 12796  1BE9  0021               	movlb	1	; select bank1
 12797  1BEA  009D               	movwf	29	;volatile
 12798                           
 12799                           ;adc1.c: 72: ADCON1 = 0x63;
 12800  1BEB  3063               	movlw	99
 12801  1BEC  009E               	movwf	30	;volatile
 12802                           
 12803                           ;adc1.c: 75: ADCON2 = 0x00;
 12804  1BED  019F               	clrf	31	;volatile
 12805                           
 12806                           ;adc1.c: 78: ADRESL = 0x00;
 12807  1BEE  019B               	clrf	27	;volatile
 12808                           
 12809                           ;adc1.c: 81: ADRESH = 0x00;
 12810  1BEF  019C               	clrf	28	;volatile
 12811  1BF0  0008               	return
 12812  1BF1                     __end_of_ADC1_Initialize:	
 12813                           
 12814                           	psect	intentry
 12815  0804                     __pintentry:	
 12816 ;; *************** function _INTERRUPT_InterruptManager *****************
 12817 ;; Defined at:
 12818 ;;		line 59 in file "mcc_generated_files/interrupt_manager.c"
 12819 ;; Parameters:    Size  Location     Type
 12820 ;;		None
 12821 ;; Auto vars:     Size  Location     Type
 12822 ;;		None
 12823 ;; Return value:  Size  Location     Type
 12824 ;;                  1    wreg      void 
 12825 ;; Registers used:
 12826 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12827 ;; Tracked objects:
 12828 ;;		On entry : 0/0
 12829 ;;		On exit  : 0/0
 12830 ;;		Unchanged: 0/0
 12831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12834 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12835 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12836 ;;Total ram usage:        1 bytes
 12837 ;; Hardware stack levels used:    1
 12838 ;; This function calls:
 12839 ;;		Nothing
 12840 ;; This function is called by:
 12841 ;;		Interrupt level 1
 12842 ;; This function uses a non-reentrant model
 12843 ;;
 12844                           
 12845  0804                     _INTERRUPT_InterruptManager:	
 12846                           
 12847                           ;incstack = 0
 12848  0804  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 12849                           
 12850                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0]
 12851  0805  3188               	pagesel	$
 12852                           
 12853                           ;interrupt_manager.c: 63: if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bits.TM
      +                          R2IF == 1)
 12854  0806  1F0B               	btfss	11,6	;volatile
 12855  0807  2836               	goto	i1l4529
 12856  0808  0021               	movlb	1	; select bank1
 12857  0809  1C91               	btfss	17,1	;volatile
 12858  080A  2836               	goto	i1l4529
 12859  080B  0020               	movlb	0	; select bank0
 12860  080C  1C91               	btfss	17,1	;volatile
 12861  080D  2836               	goto	i1l4529
 12862                           
 12863                           ;interrupt_manager.c: 64: {;interrupt_manager.c: 66: PIR1bits.TMR2IF = 0;
 12864  080E  1091               	bcf	17,1	;volatile
 12865                           
 12866                           ;interrupt_manager.c: 67: Event |= (1<<1);
 12867  080F  14C6               	bsf	_Event,1	;volatile
 12868                           
 12869                           ;interrupt_manager.c: 68: subTickerX++;
 12870  0810  3001               	movlw	1
 12871  0811  00F0               	movwf	??_INTERRUPT_InterruptManager
 12872  0812  0870               	movf	??_INTERRUPT_InterruptManager,w
 12873  0813  07C4               	addwf	_subTickerX,f
 12874                           
 12875                           ;interrupt_manager.c: 69: subTickerX_1s++;
 12876  0814  3001               	movlw	1
 12877  0815  00F0               	movwf	??_INTERRUPT_InterruptManager
 12878  0816  0870               	movf	??_INTERRUPT_InterruptManager,w
 12879  0817  07C3               	addwf	_subTickerX_1s,f
 12880                           
 12881                           ;interrupt_manager.c: 70: if(subTickerX>=5){
 12882  0818  3005               	movlw	5
 12883  0819  0244               	subwf	_subTickerX,w
 12884  081A  1C03               	skipc
 12885  081B  281E               	goto	i1l4511
 12886                           
 12887                           ;interrupt_manager.c: 71: subTickerX=0;
 12888  081C  01C4               	clrf	_subTickerX
 12889                           
 12890                           ;interrupt_manager.c: 72: Event |= (1<<2);
 12891  081D  1546               	bsf	_Event,2	;volatile
 12892  081E                     i1l4511:	
 12893                           
 12894                           ;interrupt_manager.c: 73: };interrupt_manager.c: 74: if(subTickerX_1s>=50){
 12895  081E  3032               	movlw	50
 12896  081F  0243               	subwf	_subTickerX_1s,w
 12897  0820  1C03               	skipc
 12898  0821  2824               	goto	i1l4517
 12899                           
 12900                           ;interrupt_manager.c: 75: subTickerX_1s=0;
 12901  0822  01C3               	clrf	_subTickerX_1s
 12902                           
 12903                           ;interrupt_manager.c: 76: Event |= (1<<3);
 12904  0823  15C6               	bsf	_Event,3	;volatile
 12905  0824                     i1l4517:	
 12906                           
 12907                           ;interrupt_manager.c: 77: };interrupt_manager.c: 79: if(eusartRxIdleTime_ms){
 12908  0824  087C               	movf	_eusartRxIdleTime_ms,w	;volatile
 12909  0825  1903               	btfsc	3,2
 12910  0826  2831               	goto	i1l4527
 12911                           
 12912                           ;interrupt_manager.c: 80: eusartRxIdleTime_ms++;
 12913  0827  3001               	movlw	1
 12914  0828  00F0               	movwf	??_INTERRUPT_InterruptManager
 12915  0829  0870               	movf	??_INTERRUPT_InterruptManager,w
 12916  082A  07FC               	addwf	_eusartRxIdleTime_ms,f	;volatile
 12917                           
 12918                           ;interrupt_manager.c: 81: if(eusartRxIdleTime_ms>5){
 12919  082B  3006               	movlw	6
 12920  082C  027C               	subwf	_eusartRxIdleTime_ms,w	;volatile
 12921  082D  1C03               	skipc
 12922  082E  2831               	goto	i1l4527
 12923                           
 12924                           ;interrupt_manager.c: 82: Event|=(1<<0);
 12925  082F  1446               	bsf	_Event,0	;volatile
 12926                           
 12927                           ;interrupt_manager.c: 83: eusartRxIdleTime_ms=0;
 12928  0830  01FC               	clrf	_eusartRxIdleTime_ms	;volatile
 12929  0831                     i1l4527:	
 12930                           
 12931                           ;interrupt_manager.c: 84: };interrupt_manager.c: 85: };interrupt_manager.c: 86: globalTi
      +                          cker++;
 12932  0831  3001               	movlw	1
 12933  0832  0021               	movlb	1	; select bank1
 12934  0833  07D0               	addwf	_globalTicker^(0+128),f	;volatile
 12935  0834  3000               	movlw	0
 12936  0835  3DD1               	addwfc	(_globalTicker+1)^(0+128),f	;volatile
 12937  0836                     i1l4529:	
 12938                           
 12939                           ;interrupt_manager.c: 87: };interrupt_manager.c: 88: if(INTCONbits.PEIE == 1 && PIE1bits
      +                          .RCIE == 1 && PIR1bits.RCIF == 1)
 12940  0836  1F0B               	btfss	11,6	;volatile
 12941  0837  285E               	goto	i1l4547
 12942  0838  0021               	movlb	1	; select bank1
 12943  0839  1E91               	btfss	17,5	;volatile
 12944  083A  285E               	goto	i1l4547
 12945  083B  0020               	movlb	0	; select bank0
 12946  083C  1E91               	btfss	17,5	;volatile
 12947  083D  285E               	goto	i1l4547
 12948                           
 12949                           ;interrupt_manager.c: 89: {;interrupt_manager.c: 91: PIR1bits.RCIF=0;
 12950  083E  1291               	bcf	17,5	;volatile
 12951                           
 12952                           ;interrupt_manager.c: 92: if(1 == RCSTAbits.OERR){
 12953  083F  0023               	movlb	3	; select bank3
 12954  0840  1C9D               	btfss	29,1	;volatile
 12955  0841  2844               	goto	i1l4539
 12956                           
 12957                           ;interrupt_manager.c: 93: RCSTAbits.CREN = 0;
 12958  0842  121D               	bcf	29,4	;volatile
 12959                           
 12960                           ;interrupt_manager.c: 94: RCSTAbits.CREN = 1;
 12961  0843  161D               	bsf	29,4	;volatile
 12962  0844                     i1l4539:	
 12963                           
 12964                           ;interrupt_manager.c: 95: };interrupt_manager.c: 96: rxtemp=RCREG;
 12965  0844  0819               	movf	25,w	;volatile
 12966  0845  00F0               	movwf	??_INTERRUPT_InterruptManager
 12967  0846  0870               	movf	??_INTERRUPT_InterruptManager,w
 12968  0847  0020               	movlb	0	; select bank0
 12969  0848  00C2               	movwf	_rxtemp
 12970                           
 12971                           ;interrupt_manager.c: 97: if(eusartRxCount<32){
 12972  0849  3020               	movlw	32
 12973  084A  0245               	subwf	_eusartRxCount,w	;volatile
 12974  084B  1803               	skipnc
 12975  084C  285A               	goto	i1l4545
 12976                           
 12977                           ;interrupt_manager.c: 98: eusartRxBuffer[eusartRxCount]=rxtemp;
 12978  084D  0842               	movf	_rxtemp,w
 12979  084E  00F0               	movwf	??_INTERRUPT_InterruptManager
 12980  084F  0845               	movf	_eusartRxCount,w
 12981  0850  3E40               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 12982  0851  0086               	movwf	6
 12983  0852  3001               	movlw	1	; select bank2/3
 12984  0853  0087               	movwf	7
 12985  0854  0870               	movf	??_INTERRUPT_InterruptManager,w
 12986  0855  0081               	movwf	1
 12987                           
 12988                           ;interrupt_manager.c: 99: eusartRxCount++;
 12989  0856  3001               	movlw	1
 12990  0857  00F0               	movwf	??_INTERRUPT_InterruptManager
 12991  0858  0870               	movf	??_INTERRUPT_InterruptManager,w
 12992  0859  07C5               	addwf	_eusartRxCount,f	;volatile
 12993  085A                     i1l4545:	
 12994                           
 12995                           ;interrupt_manager.c: 101: };interrupt_manager.c: 102: eusartRxIdleTime_ms=1;
 12996  085A  3001               	movlw	1
 12997  085B  00F0               	movwf	??_INTERRUPT_InterruptManager
 12998  085C  0870               	movf	??_INTERRUPT_InterruptManager,w
 12999  085D  00FC               	movwf	_eusartRxIdleTime_ms	;volatile
 13000  085E                     i1l4547:	
 13001                           
 13002                           ;interrupt_manager.c: 103: };interrupt_manager.c: 105: if( PIR1bits.TXIF == 1 && INTCONb
      +                          its.PEIE && PIE1bits.TXIE)
 13003  085E  0020               	movlb	0	; select bank0
 13004  085F  1A11               	btfsc	17,4	;volatile
 13005  0860  1F0B               	btfss	11,6	;volatile
 13006  0861  2884               	goto	i1l4569
 13007  0862  0021               	movlb	1	; select bank1
 13008  0863  1E11               	btfss	17,4	;volatile
 13009  0864  2884               	goto	i1l4569
 13010                           
 13011                           ;interrupt_manager.c: 106: {;interrupt_manager.c: 109: if(1 == RCSTAbits.OERR){
 13012  0865  0023               	movlb	3	; select bank3
 13013  0866  1C9D               	btfss	29,1	;volatile
 13014  0867  286C               	goto	i1l4557
 13015                           
 13016                           ;interrupt_manager.c: 110: RCSTAbits.CREN = 0;
 13017  0868  121D               	bcf	29,4	;volatile
 13018                           
 13019                           ;interrupt_manager.c: 111: RCSTAbits.CREN = 1;
 13020  0869  161D               	bsf	29,4	;volatile
 13021                           
 13022                           ;interrupt_manager.c: 112: RCSTAbits.SREN=0;
 13023  086A  129D               	bcf	29,5	;volatile
 13024                           
 13025                           ;interrupt_manager.c: 113: RCSTAbits.SREN=1;
 13026  086B  169D               	bsf	29,5	;volatile
 13027  086C                     i1l4557:	
 13028                           
 13029                           ;interrupt_manager.c: 114: };interrupt_manager.c: 115: if(txBufLen>0){
 13030  086C  0020               	movlb	0	; select bank0
 13031  086D  0841               	movf	_txBufLen,w
 13032  086E  1903               	btfsc	3,2
 13033  086F  2880               	goto	i1l4565
 13034                           
 13035                           ;interrupt_manager.c: 116: TXREG=txBuf[txCount];
 13036  0870  0840               	movf	_txCount,w
 13037  0871  3EA0               	addlw	(low (_txBuf| (0+256)))& (0+255)
 13038  0872  0086               	movwf	6
 13039  0873  3001               	movlw	1	; select bank3/4
 13040  0874  0087               	movwf	7
 13041  0875  0801               	movf	1,w
 13042  0876  0023               	movlb	3	; select bank3
 13043  0877  009A               	movwf	26	;volatile
 13044                           
 13045                           ;interrupt_manager.c: 117: txBufLen--;
 13046  0878  3001               	movlw	1
 13047  0879  0020               	movlb	0	; select bank0
 13048  087A  02C1               	subwf	_txBufLen,f
 13049                           
 13050                           ;interrupt_manager.c: 118: txCount++;
 13051  087B  3001               	movlw	1
 13052  087C  00F0               	movwf	??_INTERRUPT_InterruptManager
 13053  087D  0870               	movf	??_INTERRUPT_InterruptManager,w
 13054  087E  07C0               	addwf	_txCount,f
 13055                           
 13056                           ;interrupt_manager.c: 119: }else{
 13057  087F  2884               	goto	i1l4569
 13058  0880                     i1l4565:	
 13059                           
 13060                           ;interrupt_manager.c: 120: txBufLen=0;
 13061  0880  01C1               	clrf	_txBufLen
 13062                           
 13063                           ;interrupt_manager.c: 121: txCount=0;
 13064  0881  01C0               	clrf	_txCount
 13065                           
 13066                           ;interrupt_manager.c: 122: PIE1bits.TXIE=0;
 13067  0882  0021               	movlb	1	; select bank1
 13068  0883  1211               	bcf	17,4	;volatile
 13069  0884                     i1l4569:	
 13070                           
 13071                           ;interrupt_manager.c: 123: };interrupt_manager.c: 125: };interrupt_manager.c: 127: if(PI
      +                          R3bits.PWM2IF){
 13072  0884  0020               	movlb	0	; select bank0
 13073  0885  1A93               	btfsc	19,5	;volatile
 13074                           
 13075                           ;interrupt_manager.c: 128: PIR3bits.PWM2IF = 0;
 13076  0886  1293               	bcf	19,5	;volatile
 13077                           
 13078                           ;interrupt_manager.c: 129: };interrupt_manager.c: 131: if(PIR3bits.PWM1IF){
 13079  0887  1A13               	btfsc	19,4	;volatile
 13080                           
 13081                           ;interrupt_manager.c: 132: PIR3bits.PWM1IF=0;
 13082  0888  1213               	bcf	19,4	;volatile
 13083  0889  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 13084  088A  0009               	retfie
 13085  088B                     __end_of_INTERRUPT_InterruptManager:	
 13086  007E                     btemp	set	126	;btemp
 13087  007E                     int$flags	set	126
 13088  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    17
    Data        14
    BSS         218
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     39      80
    BANK1            80      2      64
    BANK2            80      0      64
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           60      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    crc_append@message	PTR unsigned char  size(2) Largest target is 132
		 -> modbusBuf(BANK2[32]), sysData(BIGRAM[132]), 

    crc_verify@message	PTR unsigned char  size(2) Largest target is 132
		 -> modbusBuf(BANK2[32]), sysData(BIGRAM[132]), 

    crc_sum@buf	PTR unsigned char  size(2) Largest target is 132
		 -> modbusBuf(BANK2[32]), sysData(BIGRAM[132]), 

    m_mem_cpy_len@s	PTR unsigned char  size(2) Largest target is 132
		 -> modbusBuf(BANK2[32]), sysData(BIGRAM[132]), eusartRxBuffer(BANK2[32]), 

    m_mem_cpy_len@d	PTR unsigned char  size(2) Largest target is 64
		 -> crc_verify@expected(BANK0[2]), modbusBuf(BANK2[32]), txBuf(BANK3[64]), 

    modbus_response_process@rbuf	PTR unsigned char  size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_process@pmdbs	PTR struct . size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_command@rbuf	PTR unsigned char  size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_command@pmdbs	PTR struct . size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_write_mult_register@rbuf	PTR unsigned char  size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_write_mult_register@stb	PTR struct . size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_write_single_register@rbuf	PTR unsigned char  size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_write_single_register@pmdbs	PTR struct . size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    getRegisterVal@tempData	PTR unsigned int  size(1) Largest target is 2
		 -> modbus_response_command@tempData(BANK0[2]), 

    modbus_response_illgeal_function@buf	PTR unsigned char  size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_illgeal_function@pmdbs	PTR struct . size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    my_flash_system_write@buf	PTR unsigned char  size(2) Largest target is 132
		 -> sysData(BIGRAM[132]), 

    my_flash_system_read@buf	PTR unsigned char  size(2) Largest target is 132
		 -> sysData(BIGRAM[132]), 

    uart_send_len@buf	PTR unsigned char  size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_calc_rs_lo_avg
    _main->_uart_send_len
    _sys_data_init->_my_flash_system_read
    _pid_pwm2_vout_run->_set_vout_pwm2_duty
    _set_vout_pwm2_duty->_get_vout_pwm2_duty
    _pid_pwm1_idrv_run->_set_idrv_pwm1_duty
    _set_idrv_pwm1_duty->_get_idrv_pwm1_duty
    _modbus_response_write_single_register->_crc_append
    _modbus_response_write_single_register->_uart_send_len
    _modbus_response_write_mult_register->_crc_append
    _modbus_response_write_mult_register->_uart_send_len
    _sys_data_save->_crc_append
    _my_flash_read_system_erase->_FLASH_EraseBlock
    _modbus_response_illgeal_function->_crc_append
    _modbus_response_illgeal_function->_uart_send_len
    _modbus_response_command->_crc_append
    _modbus_response_command->_uart_send_len
    _uart_send_len->_m_mem_cpy_len
    _crc_append->_crc_sum
    _crc_verify->_m_mem_cpy_len
    _calc_temp_rs->___lldiv
    _calc_temp_rc->___lldiv
    _calc_rs_lo_avg->___lldiv
    _calc_expect_vout_adc_value->___aldiv
    ___aldiv->___lmul
    _adc_sample->_fvr_set_gain
    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_calc_expect_vout_adc_value
    _sys_data_init->_crc_verify
    _pid_pwm1_idrv_run->___aldiv
    _modbus_response_process->_modbus_response_command
    _modbus_response_process->_modbus_response_write_single_register
    _modbus_response_write_single_register->_crc_append
    _modbus_response_write_mult_register->_crc_append
    _sys_data_save->_crc_append
    _modbus_response_illgeal_function->_crc_append
    _modbus_response_command->_crc_append
    _crc_append->_crc_sum
    _crc_verify->_crc_sum
    _calc_temp_rs->___lldiv
    _calc_temp_rc->___lldiv
    _calc_rs_lo_avg->___lldiv
    _calc_expect_vout_adc_value->___aldiv
    ___aldiv->___lmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   50861
                                              0 BANK1      2     2      0
                  _SYSTEM_Initialize
                         _adc_sample
         _calc_expect_vout_adc_value
                     _calc_rs_lo_avg
                       _calc_temp_rc
                       _calc_temp_rs
                      _m_mem_cpy_len
            _modbus_response_process
                  _pid_pwm1_idrv_run
                  _pid_pwm2_vout_run
                      _sys_data_init
                _uart_received_start
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (1) _uart_received_start                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sys_data_init                                       10    10      0    5897
                                             14 BANK0     10    10      0
                             ___wmul
                         _crc_verify
               _my_flash_system_read
                      _sys_data_save
 ---------------------------------------------------------------------------------
 (2) _my_flash_system_read                                11     7      4     311
                                              1 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _pid_pwm2_vout_run                                    6     6      0    1281
                                              0 BANK0      6     6      0
                            ___awdiv
                            ___lwdiv
                 _set_vout_pwm2_duty
 ---------------------------------------------------------------------------------
 (2) _set_vout_pwm2_duty                                   4     2      2     212
                                              7 COMMON     4     2      2
                 _get_vout_pwm2_duty
 ---------------------------------------------------------------------------------
 (3) _get_vout_pwm2_duty                                   6     4      2      25
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _pid_pwm1_idrv_run                                   20    20      0    3914
                                             18 BANK0     20    20      0
                            ___aldiv
                             ___lmul
                 _set_idrv_pwm1_duty
 ---------------------------------------------------------------------------------
 (2) _set_idrv_pwm1_duty                                   4     2      2     212
                                              7 COMMON     4     2      2
                 _get_idrv_pwm1_duty
 ---------------------------------------------------------------------------------
 (3) _get_idrv_pwm1_duty                                   6     4      2      25
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _modbus_response_process                              6     4      2   25674
                                             24 BANK0      6     4      2
                         _crc_verify
            _modbus_response_command
   _modbus_response_illgeal_function
_modbus_response_write_mult_register
_modbus_response_write_single_regist
 ---------------------------------------------------------------------------------
 (2) _modbus_response_write_single_register               12    12      0    7386
                                             12 BANK0     12    12      0
                         _crc_append
                      _sys_data_save
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (2) _modbus_response_write_mult_register                  5     5      0    6758
                                             12 BANK0      5     5      0
                         _crc_append
                      _sys_data_save
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (2) _sys_data_save                                        0     0      0    2878
                         _crc_append
         _my_flash_read_system_erase
              _my_flash_system_write
 ---------------------------------------------------------------------------------
 (3) _my_flash_system_write                               16    12      4     473
                                              1 COMMON     6     2      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) _my_flash_read_system_erase                           0     0      0     523
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (4) _FLASH_EraseBlock                                     3     1      2     523
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _modbus_response_illgeal_function                     4     3      1    3840
                                             12 BANK0      4     3      1
                         _crc_append
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (2) _modbus_response_command                             12    12      0    5169
                                             12 BANK0     12    12      0
                         _crc_append
                     _getRegisterVal
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (1) _uart_send_len                                        4     3      1    1550
                                              8 COMMON     4     3      1
                      _m_mem_cpy_len
 ---------------------------------------------------------------------------------
 (3) _getRegisterVal                                      10     7      3     711
                                              1 COMMON    10     7      3
 ---------------------------------------------------------------------------------
 (3) _crc_append                                          11     7      4    1882
                                              7 COMMON     5     5      0
                                              6 BANK0      6     2      4
                            _crc_sum
 ---------------------------------------------------------------------------------
 (2) _crc_verify                                          10     6      4    2079
                                              8 COMMON     2     2      0
                                              6 BANK0      8     4      4
                            _crc_sum
                      _m_mem_cpy_len
 ---------------------------------------------------------------------------------
 (2) _m_mem_cpy_len                                        7     1      6     762
                                              1 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (4) _crc_sum                                             12     8      4     731
                                              1 COMMON     6     2      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _calc_temp_rs                                         8     4      4    2706
                                              5 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _calc_temp_rc                                        12     8      4    2706
                                              5 BANK0     12     8      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _calc_rs_lo_avg                                       9     7      2    1072
                                             10 COMMON     2     2      0
                                              5 BANK0      7     5      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     770
                                              1 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _calc_expect_vout_adc_value                          21    19      2    4164
                                             18 BANK0     21    19      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1936
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8    1525
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _adc_sample                                          12    10      2    1014
                                              4 COMMON     5     3      2
                                              0 BANK0      7     7      0
                           _adc_init
                       _fvr_set_gain
 ---------------------------------------------------------------------------------
 (2) _fvr_set_gain                                         3     3      0      69
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             2     2      0      22
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     121
                    _ADC1_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC1_Initialize
     _EUSART_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _WDT_Initialize
   _adc_sample
     _adc_init
     _fvr_set_gain
   _calc_expect_vout_adc_value
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _calc_rs_lo_avg
     ___lldiv
   _calc_temp_rc
     ___lldiv
     ___lmul
   _calc_temp_rs
     ___lldiv
     ___lmul
   _m_mem_cpy_len
   _modbus_response_process
     _crc_verify
       _crc_sum
       _m_mem_cpy_len
     _modbus_response_command
       _crc_append
         _crc_sum
       _getRegisterVal
       _uart_send_len
         _m_mem_cpy_len
     _modbus_response_illgeal_function
       _crc_append
         _crc_sum
       _uart_send_len
         _m_mem_cpy_len
     _modbus_response_write_mult_register
       _crc_append
         _crc_sum
       _sys_data_save
         _crc_append
           _crc_sum
         _my_flash_read_system_erase
           _FLASH_EraseBlock
         _my_flash_system_write
       _uart_send_len
         _m_mem_cpy_len
     _modbus_response_write_single_register
       _crc_append
         _crc_sum
       _sys_data_save
         _crc_append
           _crc_sum
         _my_flash_read_system_erase
           _FLASH_EraseBlock
         _my_flash_system_write
       _uart_send_len
         _m_mem_cpy_len
   _pid_pwm1_idrv_run
     ___aldiv
       ___lmul (ARG)
     ___lmul
     _set_idrv_pwm1_duty
       _get_idrv_pwm1_duty
   _pid_pwm2_vout_run
     ___awdiv
     ___lwdiv
     _set_vout_pwm2_duty
       _get_vout_pwm2_duty
   _sys_data_init
     ___wmul
     _crc_verify
       _crc_sum
       _m_mem_cpy_len
     _my_flash_system_read
     _sys_data_save
       _crc_append
         _crc_sum
       _my_flash_read_system_erase
         _FLASH_EraseBlock
       _my_flash_system_write
   _uart_received_start
   _uart_send_len
     _m_mem_cpy_len

 _INTERRUPT_InterruptManager (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      2      40       7       80.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     11D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              3C      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           20      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     11D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Apr 03 00:54:34 2019

              __end_of_TMR2_SetInterruptHandler 1BE8                                               pc 0002  
                  ??_my_flash_read_system_erase 0074                                    ___awdiv@sign 0077  
                                            _x0 0024                                              _x1 00BC  
                                            _y0 0028                                              _y1 00C0  
                                            _ik 00D2                          __end_of_FVR_Initialize 1BDA  
                           ___wmul@multiplicand 0073                                             l511 1EAB  
                                           l621 1C50                                             l633 11DF  
                                           l627 1C29                                             l652 1700  
                                           l741 13FC                                             l670 0FD4  
                                           l639 11F9                                             l647 147B  
                                           l663 0AF2                                             l738 13A8  
                                           l828 0E17                                             l668 0F8E  
                                           l792 105F                                             l689 0CEF  
                                           _GIE 005F                                             _PR2 001B  
                               _pwm1DutyForIdrv 00D8                                             _x32 00B8  
                                           _y32 0020                                             _err 00A0  
                               _TMR2_Initialize 0FED                                             wreg 0009  
                          ??_get_vout_pwm2_duty 0073                            ??_set_vout_pwm2_duty 0079  
                               ??_uart_send_len 0079                                            S5449 1800  
                                          l1070 1199                                            l1068 117B  
                                          l1092 1CDA                                            l1157 130B  
                                          l4101 1E0A                                            l4105 1E13  
                                          l5011 151C                                            l3405 13A3  
                                          l4053 1091                                            l4071 10B7  
                                          l4063 1099                                            l4047 1086  
                                          l4161 11E9                                            l5025 1DBB  
                                          l5105 16EC                                            l3521 1739  
                                          l5009 14EA                                            l3425 13D4  
                                          l3417 13BA                                            l4065 10A5  
                                          l4171 11EC                                            l5211 0C26  
                                          l5107 16F8                                            l3531 1772  
                                          l3523 1746                                            l3515 170E  
                                          l3435 13E7                                            l3427 13D6  
                                          l4075 10C0                                            l4173 1222  
                                          l5029 1DC6                                            l5205 0C05  
                                          l3541 179F                                            l3533 177B  
                                          l3525 1753                                            l3517 1716  
                                          l5141 0AEA                                            l4093 1DEC  
                                          l5055 132C                                            l5047 131C  
                                          l3543 17A8                                            l3535 1784  
                                          l3527 1760                                            l3519 1726  
                                          l3551 17C6                                            l4079 10C8  
                                          l4095 1DF8                                            l5073 1373  
                                          l5065 135A                                            l5057 133A  
                                          l3561 17E9                                            l3545 17B1  
                                          l3537 178D                                            l3529 1769  
                                          l3449 1404                                            l5137 0AD3  
                                          l3539 1796                                            l5139 0ADB  
                                          l5243 15E7                                            l5069 1365  
                                          l3549 17B9                                            l5157 0F9F  
                                          l5237 1596                                            l5333 0E74  
                                          l3719 1C49                                            l5191 0B6B  
                                          l4287 1259                                            l4279 1235  
                                          l5087 1467                                            l5271 114F  
                                          l5247 1610                                            l5177 0B06  
                                          l5089 1473                                            l5273 1154  
                                          l5265 113B                                            l5169 0FE5  
                                          l3761 100D                                            l5187 0B63  
                                          l5275 1159                                            l3763 1034  
                                          l5363 0F20                                            l4813 1E96  
                                          l5269 114A                                            l5279 1160  
                                          l5375 0F57                                            l5367 0F29  
                                          l4905 0D75                                            l5377 0F5A  
                                          l4771 11AB                                            l4931 0DE9  
                                          l3981 10DE                                            l4941 0E1F  
                                          l3949 1CD4                                            l3991 110C  
                                          l3983 10EC                                            l4777 11C0  
                                          l4793 1D41                                            l4849 1E4D  
                                          l4937 0E19                                            l3995 1117  
                                          l4779 11C5                                            l4885 0D21  
                                          l4879 0D11                                            l4897 0D57  
                                          l4997 14E9                         __end_of_PWM1_Initialize 1C6C  
                                          _LATA 010C                                            _LATC 010E  
                                          u2400 1EFE                                            u2225 138D  
                                          u3045 109C                                            u3125 1DEF  
                                          u2255 13C8                                            u3225 1206  
                                          u2425 1D1B                                            u3065 10A6  
                                          u3145 1DF9                                            u3235 120E  
                                          u2355 1C8E                                            u3075 10B0  
                                          u3155 1E03                                            u2435 1D37  
                                          u3245 11F5                                            u2285 13AE  
                                          u3085 10B8                                            u3165 1E0B  
                                          u2365 1CA7                                            u4305 0D96  
                                          u2475 1013                                            u4245 0D2E  
                                          u4095 1181                                            u4175 1E49  
                                          u4425 14C4                                            u5077 11DA  
                                          u4525 132F                                            u2855 10E1  
                                          u2775 1CDB                                            u4545 133B  
                                          u4465 1DC7                                            u4705 0FDE  
                                          u2785 1CE0                                            u4555 134F  
                                          u4475 1DCE                                            u2875 10ED  
                                          u4635 0A06                                            u4565 135B  
                                          u4725 0B38                                            u2885 1101  
                                          u4735 0B59                                            u2895 110D  
                                          u4763 0BFB                                            u4675 0F87  
                                          u4685 0F98                                            u4783 0C1F  
                                          u4695 0FCD                                            u4935 0EB2  
                                          u4945 0EC9                                            u4955 0EE0  
                                 _m_mem_cpy_len 1D41                                            _TMR2 001A  
                                          _WPUA 020C                                            _WPUC 020E  
                                          _main 0E48  modbus_response_write_single_register@startAddr 005D  
                                          _pidU 00D4             __size_of_my_flash_read_system_erase 0023  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          _xlen 003F                                            btemp 007E  
                                          start 088B                                 _pwm2DutyForVout 00DA  
                     ??_modbus_response_command 0053                         __end_of_PWM2_Initialize 1C85  
                     ??_modbus_response_process 0061                                 ?_FVR_Initialize 0070  
                __size_of_OSCILLATOR_Initialize 0001                   __end_of_OSCILLATOR_Initialize 1002  
                               __end_of___aldiv 137C                                           ?_main 0070  
                               __end_of___awdiv 10CD                                 __end_of___lldiv 1120  
                               ___awdiv@divisor 0071                                           _T2CON 001C  
                               __end_of___lwdiv 1E18                                 ___awdiv@counter 0076  
                                         _RCREG 0199                                           _RCSTA 019D  
                                         _TRISA 008C                                           _TRISC 008E  
                                         _TXREG 019A                                           _TXSTA 019E  
              modbus_response_command@startAddr 0057                             ___lmul@multiplicand 0075  
                                         _PidKp 0030                                           _PidTd 00CC  
                                         _Event 0046                                           _PidTi 00CE  
                               __end_of_crc_sum 11CA                                  _WDT_Initialize 1BDA  
                                         _resRc 006E                                           _resRs 00DC  
                                         _txBuf 01A0          modbus_response_write_mult_register@len 0055  
                                ?_m_mem_cpy_len 0071                          _pid_pwm1_idrv_run$2333 0065  
        modbus_response_write_mult_register@stb 0057                      __end_of_get_idrv_pwm1_duty 1C9E  
                    __end_of_set_idrv_pwm1_duty 1D25                              crc_verify@expected 0053  
                                         status 0003                                           wtemp0 007E  
                               _TMR2_StartTimer 1BD3                                   fvr_set_gain@g 0073  
   __end_of_modbus_response_write_mult_register 12FA    __size_of_modbus_response_write_mult_register 0072  
         ??_modbus_response_write_mult_register 0053            ?_modbus_response_write_mult_register 0070  
           _modbus_response_write_mult_register 1288              __end_of_calc_expect_vout_adc_value 0CF4  
                    _calc_expect_vout_adc_value 0B00                                __end_of_HexTable 182F  
                          pid_pwm1_idrv_run@t32 0069                                 __initialization 088D  
                                  __end_of_main 0F5C                           __size_of_calc_temp_rc 00D9  
                         __size_of_calc_temp_rs 0090                         __end_of_TMR2_Initialize 1000  
                   ?_INTERRUPT_InterruptManager 0070             modbus_response_illgeal_function@buf 0055  
                      _TMR2_SetInterruptHandler 1BE2                                          ??_main 00DE  
                              ??_calc_rs_lo_avg 007A                     modbus_response_process@rbuf 0064  
                 __size_of_my_flash_system_read 0038                     modbus_response_process@rlen 005F  
                   modbus_response_process@resp 0062                 __end_of_modbus_response_command 1559  
                        __end_of_WDT_Initialize 1BDE                    my_flash_system_write@blocNum 004A  
                                        _ADCON0 009D                                          _ADCON1 009E  
                                        _ADCON2 009F                                          _ADRESH 009C  
                                        _ADRESL 009B                                ___awdiv@dividend 0073  
                                        _ANSELA 018C                                          _ANSELC 018E  
               __end_of_modbus_response_process 1174                                __end_of_adc_init 1C3C  
                              ?_PWM1_Initialize 0070                                          _ODCONA 028C  
                                        _ODCONC 028E                                          i1l4511 081E  
                                        i1l4517 0824                                          i1l4527 0831  
                                        i1l4545 085A                                          i1l4529 0836  
                                        i1l4539 0844                                          i1l4547 085E  
                                        i1l4565 0880                                          i1l4557 086C  
                                        i1l4569 0884                                          _FVRCON 0117  
                                        _PMADRH 0192                                          _PMADRL 0191  
                                        _PMDATH 0194                                          _PMDATL 0193  
                                        _PMCON2 0196                       __size_of_FLASH_EraseBlock 001C  
                   __end_of_uart_received_start 1BE2                                          _SPBRGH 019C  
                                        _SPBRGL 019B                                          _WDTCON 0097  
                                  _calc_temp_rc 162E                                    _calc_temp_rs 140A  
                               calc_rs_lo_avg@i 0052                                 calc_rs_lo_avg@x 004C  
            __end_of_my_flash_read_system_erase 1D81                      _my_flash_read_system_erase 1D5E  
    modbus_response_write_single_register@pmdbs 005B                                          ___lmul 1DB2  
                                     ??___aldiv 0079                                          ___wmul 1CD2  
                                     ??___awdiv 0075                                       ??___lldiv 0079  
                                     ??___lwdiv 0075                                          _idelta 00C4  
                              ?_PWM2_Initialize 0070                                          _pwm2Ei 00C8  
                              ___awdiv@quotient 0078                        my_flash_system_write@buf 0071  
                      my_flash_system_write@len 0073                        my_flash_system_write@loc 004C  
                                     ??_crc_sum 0075                        __size_of_ADC1_Initialize 0009  
                                        _rxtemp 0042                                 ?_WDT_Initialize 0070  
                               ??_m_mem_cpy_len 0077                my_flash_system_write@GIEBitValue 0049  
                       __end_of_TMR2_StartTimer 1BD6        TMR2_SetInterruptHandler@InterruptHandler 0071  
               modbus_response_command@tempData 005D        __end_of_modbus_response_illgeal_function 107C  
     __size_of_modbus_response_illgeal_function 0042              ??_modbus_response_illgeal_function 0054  
             ?_modbus_response_illgeal_function 0053                _modbus_response_illgeal_function 103A  
                                 ?_fvr_set_gain 0070                                  fvr_set_gain@t8 0072  
                             _SYSTEM_Initialize 1CB7                         __end_of__initialization 08DA  
                        __size_of_sys_data_init 00D5                           _my_flash_system_write 137C  
                            ?_SYSTEM_Initialize 0070                          __size_of_sys_data_save 0037  
                            getRegisterVal@addr 0071                                  __pcstackCOMMON 0070  
                                  __pidataBANK0 0802                                    __pidataBANK1 1C09  
                           ??_SYSTEM_Initialize 0073                                      _adc_sample 11CA  
        modbus_response_write_single_register@i 005A                                ?_TMR2_Initialize 0070  
                                _OPTION_REGbits 0095        modbus_response_write_single_register@t16 0058  
                             crc_append@message 004D                          getRegisterVal@tempAddr 007A  
                        my_flash_system_write@i 0050                          my_flash_system_write@j 0047  
                        getRegisterVal@tempData 0073                       __end_of_SYSTEM_Initialize 1CD2  
                                ??_fvr_set_gain 0071                                      __pbssBANK0 0020  
                                    __pbssBANK1 00A0                                      __pbssBANK2 0120  
                                    __pbssBANK3 01A0                  modbus_response_command@tmpAddr 0055  
               my_flash_system_read@GIEBitValue 0077                                      adc_init@ch 0072  
                              ??_FVR_Initialize 0071                                      __pmaintext 0E48  
                    modbus_response_command@len 005B                                         ?___lmul 0071  
                                       ?___wmul 0071                                      __pintentry 0804  
                  ??_calc_expect_vout_adc_value 005B                                         _BAUDCON 019F  
                                ___lmul@product 0047                                      _crc_append 1D81  
                                     ?_adc_init 0070                                    adc_sample@ch 0047  
                                 _sys_data_init 1559                                   _sys_data_save 1E4F  
                                    _crc_verify 1E18                                   _eusartRxCount 0045  
                   __size_of_get_vout_pwm2_duty 0019                     __size_of_set_vout_pwm2_duty 001C  
                                       _PWM1DCH 0D94                                         _PWM1DCL 0D93  
                                       _PWM2DCH 0DA4                                         _PWM2DCL 0DA3  
                                       _PWM1CON 0D9B                                         _PWM2CON 0DAB  
                                       _PWM1OFH 0D98                                         _PWM1OFL 0D97  
                                       _PWM2OFH 0DA8                                         _PWM1PHH 0D92  
                                       _PWM2OFL 0DA7                                         _PWM1PHL 0D91  
                                       _PWM2PHH 0DA2                                         _PWM2PHL 0DA1  
                                       _PWM1PRH 0D96                                         _PWM1PRL 0D95  
                                       _PWM2PRH 0DA6                                         _PWM2PRL 0DA5  
         modbus_response_illgeal_function@pmdbs 0056                                         _PPSLOCK 0E0F  
                             ??_ADC1_Initialize 0071                                ?_TMR2_StartTimer 0070  
                        set_idrv_pwm1_duty@duty 0077                           __end_of_uart_send_len 1EC1  
                              _FLASH_EraseBlock 1CED                          ?_my_flash_system_write 0071  
                       __size_of_getRegisterVal 00F9                     ?_calc_expect_vout_adc_value 0059  
   modbus_response_write_single_register@fiSave 0057                      ??_TMR2_SetInterruptHandler 0073  
                                       ___aldiv 12FA                                         ___awdiv 107C  
                               __size_of___lmul 0032                                         ___lldiv 10CD  
                               __size_of___wmul 001B                              _get_idrv_pwm1_duty 1C85  
                            _set_idrv_pwm1_duty 1D09                                         ___lwdiv 1DE4  
                                   ?_adc_sample 0074                                  adc_sample@gfvr 0074  
                                ?_sys_data_init 0070                                  ?_sys_data_save 0070  
                                    ??_adc_init 0071                                         __ptext1 1BDE  
                                       __ptext2 1559                                         __ptext3 1002  
                                       __ptext4 1CD2                                         __ptext5 0F5C  
                                       __ptext6 1D25                                         __ptext7 1C9E  
                                       __ptext8 1DE4                                         __ptext9 107C  
                                       _crc_sum 1174                                         _pidBbSm 003E  
                                       _iexcept 00C6                             ?_get_idrv_pwm1_duty 0071  
                           ?_set_idrv_pwm1_duty 0077                           _OSCILLATOR_Initialize 1001  
                                     _T2CONbits 001C                                      _rsLoAvgBuf 00AC  
                                       _rsLoAvg 002C                                ___aldiv@dividend 004F  
                      ??_PIN_MANAGER_Initialize 0071                                         _txCount 0040  
                                       _sysData 235C                      __size_of_SYSTEM_Initialize 001B  
                                       clrloop0 1BF2                            end_of_initialization 08DA  
                                       init_ram 1BFD                        ?_modbus_response_command 0070  
                                       initloop 1BFE                    __end_of_my_flash_system_read 103A  
                          ??_get_idrv_pwm1_duty 0073                            ??_set_idrv_pwm1_duty 0079  
                             _EUSART_Initialize 1C15                                 ___lldiv@divisor 0071  
                                    _voExpectMv 00CA                                 ___lldiv@counter 004B  
                            ?_EUSART_Initialize 0070                        ?_modbus_response_process 005F  
                                     _RCSTAbits 019D                     ?_my_flash_read_system_erase 0070  
                              ___aldiv@quotient 0055                                       _PWM1LDCON 0D9F  
                                     _PWM2LDCON 0DAF                                       _PWM1OFCON 0DA0  
                                     _PWM2OFCON 0DB0                            __end_of_fvr_set_gain 1C53  
                                   ?_crc_append 004D                                      _subTickerX 0044  
                           ??_EUSART_Initialize 0071                                ??_WDT_Initialize 0071  
                                   ?_crc_verify 004D                                      crc_sum@crc 004B  
                                    crc_sum@buf 0071                                      crc_sum@len 0073  
                                     _RXPPSbits 0E15                             __size_of_adc_sample 005D  
                     __end_of_EUSART_Initialize 1C28                                    _globalTicker 00D0  
                                     _TXSTAbits 019E                        __size_of_PWM1_Initialize 0019  
                  __size_of_uart_received_start 0004                    _TMR2_DefaultInterruptHandler 0000  
                               ??_sys_data_init 0055                                 ??_sys_data_save 007C  
                                __end_of___lmul 1DE4                                  __end_of___wmul 1CED  
                              _voExpectAdcValue 002E                                  _rtAdcValueRcHi 0034  
                                _rtAdcValueRcLo 0036                                  _rtAdcValueRsHi 0038  
                                _rtAdcValueVoFb 0032                                  _rtAdcValueRsLo 003A  
                        ?_OSCILLATOR_Initialize 0070                               crc_verify@message 004D  
                           start_initialization 088D                        __size_of_PWM2_Initialize 0019  
               __size_of_PIN_MANAGER_Initialize 003F                                   _PWM1LDCONbits 0D9F  
                       my_flash_system_read@buf 0071                         my_flash_system_read@len 0073  
                         __end_of_m_mem_cpy_len 1D5E                                   _PWM2LDCONbits 0DAF  
                                _getRegisterVal 1707                         __size_of_calc_rs_lo_avg 0061  
                           __size_of_crc_append 0031                             __size_of_crc_verify 0037  
     modbus_response_write_single_register@rbuf 005C                                        ??___lmul 0079  
                                      ??___wmul 0075                                     __pdataBANK0 006E  
                                   __pdataBANK1 00D2                     FLASH_EraseBlock@GIEBitValue 0073  
                               _ADC1_Initialize 1BE8                        __end_of_FLASH_EraseBlock 1D09  
                          _my_flash_system_read 1002                                     __pbssBIGRAM 235C  
                             __size_of_adc_init 0014                                     __pbssCOMMON 007C  
                                     ___latbits 0002                               getRegisterVal@t16 0078  
                                 __pcstackBANK0 0047                                   __pcstackBANK1 00DE  
                      __size_of_TMR2_Initialize 0013                         ??_my_flash_system_write 0075  
                        __end_of_getRegisterVal 1800                           my_flash_system_read@i 007A  
                    __size_of_EUSART_Initialize 0013         modbus_response_illgeal_function@errcode 0053  
                         __size_of_fvr_set_gain 0017                                ___lwdiv@dividend 0073  
                        _PIN_MANAGER_Initialize 1EC1                     modbus_response_command@rbuf 005C  
                                      ?___aldiv 004B                           get_idrv_pwm1_duty@t16 0075  
                                      ?___awdiv 0071                                        ?___lldiv 0071  
                                  ??_adc_sample 0076                                     adc_sample@i 0048  
                                      ?___lwdiv 0071                               ??_PWM1_Initialize 0071  
                  ??_INTERRUPT_InterruptManager 0070                           set_idrv_pwm1_duty@t16 0079  
                                     __pswtext1 1800                                        ?_crc_sum 0071  
                 my_flash_system_read@flashAddr 0078                      __end_of_get_vout_pwm2_duty 1CB7  
                         ?_my_flash_system_read 0071                      __end_of_set_vout_pwm2_duty 1D41  
                              uart_send_len@buf 007B                                uart_send_len@len 0078  
                                 adc_sample@t16 004C                                ___lwdiv@quotient 0076  
                                 adc_sample@ret 004A                                   adc_sample@num 0075  
                               ?_getRegisterVal 0071                                    _fvr_set_gain 1C3C  
                                _eusartRxBuffer 0140                                       _modbusBuf 0120  
                               ___aldiv@divisor 004B                               ??_PWM2_Initialize 0071  
                            __end_of_adc_sample 1227                                 ___aldiv@counter 0053  
                                ___wmul@product 0075                                       _pidpwm2_U 00D6  
                             _pid_pwm1_idrv_run 08DE                                       clear_ram0 1BF1  
                                m_mem_cpy_len@d 0071                                  m_mem_cpy_len@s 0073  
                                 ?_calc_temp_rc 004C                                   ?_calc_temp_rs 004C  
                                      _PIE1bits 0091                        __size_of_TMR2_StartTimer 0003  
                        set_vout_pwm2_duty@duty 0077             __size_of_INTERRUPT_InterruptManager 0087  
                            ?_pid_pwm1_idrv_run 0070                         __end_of_ADC1_Initialize 1BF1  
                                      _PIR1bits 0011                                        _PIR3bits 0013  
                     FLASH_EraseBlock@startAddr 0071                                        _PWM1INTE 0D9C  
                                      _PWM1INTF 0D9D                                        _PWM2INTE 0DAC  
                                      _PWM2INTF 0DAD                                        _PWM1TMRH 0D9A  
                                      _PWM1TMRL 0D99                                        _PWM2TMRH 0DAA  
                                      _PWM2TMRL 0DA9                                    ??_crc_append 0077  
              __size_of_modbus_response_command 00BF                             ??_pid_pwm1_idrv_run 0059  
                        __size_of_uart_send_len 003B                                      _ADCON0bits 009D  
                             ___wmul@multiplier 0071                                    ??_crc_verify 0078  
                       __size_of_FVR_Initialize 0004                __size_of_modbus_response_process 0054  
             __size_of_TMR2_SetInterruptHandler 0006                       ?_TMR2_SetInterruptHandler 0071  
                                   _isRunInBoot 0FFF                             _uart_received_start 1BDE  
                             _pid_pwm2_vout_run 0F5C                                        _HexTable 181E  
                             ___lmul@multiplier 0071                                crc_verify@crccal 0051  
                                _calc_rs_lo_avg 1227                              ?_pid_pwm2_vout_run 0070  
                     __end_of_pid_pwm1_idrv_run 0B00                               ??_TMR2_Initialize 0073  
                                ??_calc_temp_rc 0050                                  ??_calc_temp_rs 0050  
                            __end_of_crc_append 1DB2                               calc_rs_lo_avg@t32 004E  
                   __size_of_get_idrv_pwm1_duty 0019                     __size_of_set_idrv_pwm1_duty 001C  
                           ??_pid_pwm2_vout_run 0047                              __end_of_crc_verify 1E4F  
                                  _PWM1INTFbits 0D9D                            ?_uart_received_start 0070  
                                  _PWM2INTFbits 0DAD                         ??_OSCILLATOR_Initialize 0071  
       modbus_response_write_mult_register@rbuf 0056                                __size_of___aldiv 0082  
                              __size_of___awdiv 0051                                __size_of___lldiv 0053  
                              __size_of___lwdiv 0034                          ??_my_flash_system_read 0075  
                                      _adc_init 1C28                                __size_of_crc_sum 0056  
                         pid_pwm2_vout_run@__ei 0049                             _eusartRxIdleTime_ms 007C  
                     __end_of_pid_pwm2_vout_run 0FED                                   crc_append@crc 0051  
                              sys_data_init@ret 005B                                 ___lwdiv@divisor 0071  
                               ___lwdiv@counter 0078                                        __ptext10 08DE  
                                      __ptext11 1D09                                        __ptext20 103A  
                                      __ptext12 1C85                                        __ptext21 149A  
                                      __ptext13 1120                                        __ptext30 1227  
                                      __ptext22 1E86                                        __ptext14 0CF4  
                                      __ptext31 10CD                                        __ptext23 1707  
                                      __ptext15 1288                                        __ptext40 0FED  
                                      __ptext32 0B00                                        __ptext24 1D81  
                                      __ptext16 1E4F                                        __ptext41 1BD3  
                                      __ptext33 1DB2                                        __ptext25 1E18  
                                      __ptext17 137C                                        __ptext42 1BE2  
                                      __ptext34 12FA                                        __ptext26 1D41  
                                      __ptext18 1D5E                                        __ptext43 1C6C  
                                      __ptext35 11CA                                        __ptext27 1174  
                                      __ptext19 1CED                                        __ptext44 1C53  
                                      __ptext36 1C3C                                        __ptext28 140A  
                                      __ptext45 1EC1                                        __ptext37 1C28  
                                      __ptext29 162E                                        __ptext46 1001  
                                      __ptext38 1CB7                                        __ptext47 1BD6  
                                      __ptext39 1BDA                                        __ptext48 1C15  
                                      __ptext49 1BE8                          __end_of_calc_rs_lo_avg 1288  
                                 _uart_send_len 1E86                           get_vout_pwm2_duty@t16 0075  
                                 __size_of_main 0114                                   _subTickerX_1s 0043  
                         set_vout_pwm2_duty@t16 0079                                      _RA4PPSbits 0E94  
                         ??_uart_received_start 0071                                      _RA5PPSbits 0E95  
                                      _txBufLen 0041                                ?_ADC1_Initialize 0070  
                my_flash_system_write@flashAddr 004E                                        int$flags 007E  
                                      crc_sum@i 0049                                        crc_sum@j 0047  
                                    _RC5PPSbits 0EA5   __end_of_modbus_response_write_single_register 0E48  
__size_of_modbus_response_write_single_register 0154         ??_modbus_response_write_single_register 0053  
        ?_modbus_response_write_single_register 0070           _modbus_response_write_single_register 0CF4  
                             ??_TMR2_StartTimer 0071              __end_of_INTERRUPT_InterruptManager 088B  
                    _INTERRUPT_InterruptManager 0804                           __end_of_sys_data_init 162E  
                         __end_of_sys_data_save 1E86                               ?_FLASH_EraseBlock 0071  
                 calc_expect_vout_adc_value@t32 0069                     PIN_MANAGER_Initialize@state 0071  
                      modbus_response_command@i 0059                              ??_FLASH_EraseBlock 0073  
                                    _INTCONbits 000B                                     _PWM1CONbits 0D9B  
                              m_mem_cpy_len@len 0075                                      _FVRCONbits 0117  
                                   _PWM2CONbits 0DAB                                 ?_calc_rs_lo_avg 004C  
                  modbus_response_process@pmdbs 0063                         __size_of_WDT_Initialize 0004  
                                ?_uart_send_len 0078                                        intlevel1 0000  
                __size_of_my_flash_system_write 008E                            pid_pwm2_vout_run@t16 004B  
                 __end_of_my_flash_system_write 140A                      __size_of_pid_pwm1_idrv_run 0222  
                                    _PMCON1bits 0195                                ___lldiv@dividend 0075  
                       ?_PIN_MANAGER_Initialize 0070    modbus_response_write_mult_register@startAddr 0054  
                                   _PPSLOCKbits 0E0F                                 _PWM1_Initialize 1C53  
                  modbus_response_command@pmdbs 005A                         _modbus_response_command 149A  
                                    _PWM1CLKCON 0D9E                                      _PWM2CLKCON 0DAE  
                        __size_of_m_mem_cpy_len 001D                                   __pstringtext1 181E  
                                _FVR_Initialize 1BD6                         _modbus_response_process 1120  
                                sys_data_init@i 005D                                     crc_append@n 004F  
                          __end_of_calc_temp_rc 1707                            __end_of_calc_temp_rs 149A  
                              ___lldiv@quotient 0047                                ??_getRegisterVal 0074  
                               _PWM2_Initialize 1C6C                      __size_of_pid_pwm2_vout_run 0091  
                                  ___aldiv@sign 0054                     calc_expect_vout_adc_value@i 006D  
                   calc_expect_vout_adc_value@x 0059             __size_of_calc_expect_vout_adc_value 01F4  
                __end_of_PIN_MANAGER_Initialize 1F00                              _get_vout_pwm2_duty 1C9E  
                            _set_vout_pwm2_duty 1D25                           _TMR2_InterruptHandler 003C  
                                   crc_verify@n 004F                             ?_get_vout_pwm2_duty 0071  
                           ?_set_vout_pwm2_duty 0077  
