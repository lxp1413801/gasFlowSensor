

Microchip Technology PIC PRO Macro Assembler V1.37 build -260352376 
                                                                                               Mon Nov 12 20:58:27 2018

Microchip Technology Omniscient Code Generator v1.37 (PRO mode) build 201603110536
     1                           	processor	16F1574
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	swtext1,local,class=CONST,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	pa_nodes,global,class=CODE,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     	;# 
    27  0001                     	;# 
    28  0002                     	;# 
    29  0003                     	;# 
    30  0004                     	;# 
    31  0005                     	;# 
    32  0006                     	;# 
    33  0007                     	;# 
    34  0008                     	;# 
    35  0009                     	;# 
    36  000A                     	;# 
    37  000B                     	;# 
    38  000C                     	;# 
    39  000E                     	;# 
    40  0011                     	;# 
    41  0012                     	;# 
    42  0013                     	;# 
    43  0015                     	;# 
    44  0016                     	;# 
    45  0016                     	;# 
    46  0017                     	;# 
    47  0018                     	;# 
    48  0019                     	;# 
    49  001A                     	;# 
    50  001B                     	;# 
    51  001C                     	;# 
    52  008C                     	;# 
    53  008E                     	;# 
    54  0091                     	;# 
    55  0092                     	;# 
    56  0093                     	;# 
    57  0095                     	;# 
    58  0096                     	;# 
    59  0097                     	;# 
    60  0098                     	;# 
    61  0099                     	;# 
    62  009A                     	;# 
    63  009B                     	;# 
    64  009B                     	;# 
    65  009C                     	;# 
    66  009D                     	;# 
    67  009E                     	;# 
    68  009F                     	;# 
    69  010C                     	;# 
    70  010E                     	;# 
    71  0111                     	;# 
    72  0112                     	;# 
    73  0113                     	;# 
    74  0114                     	;# 
    75  0115                     	;# 
    76  0116                     	;# 
    77  0117                     	;# 
    78  0118                     	;# 
    79  0119                     	;# 
    80  018C                     	;# 
    81  018E                     	;# 
    82  0191                     	;# 
    83  0191                     	;# 
    84  0192                     	;# 
    85  0193                     	;# 
    86  0193                     	;# 
    87  0194                     	;# 
    88  0195                     	;# 
    89  0196                     	;# 
    90  0197                     	;# 
    91  0199                     	;# 
    92  019A                     	;# 
    93  019B                     	;# 
    94  019B                     	;# 
    95  019C                     	;# 
    96  019D                     	;# 
    97  019E                     	;# 
    98  019F                     	;# 
    99  020C                     	;# 
   100  020E                     	;# 
   101  028C                     	;# 
   102  028E                     	;# 
   103  030C                     	;# 
   104  030E                     	;# 
   105  038C                     	;# 
   106  038E                     	;# 
   107  0391                     	;# 
   108  0392                     	;# 
   109  0393                     	;# 
   110  0397                     	;# 
   111  0398                     	;# 
   112  0399                     	;# 
   113  0691                     	;# 
   114  0692                     	;# 
   115  0693                     	;# 
   116  0694                     	;# 
   117  0695                     	;# 
   118  0D8E                     	;# 
   119  0D8F                     	;# 
   120  0D90                     	;# 
   121  0D91                     	;# 
   122  0D91                     	;# 
   123  0D92                     	;# 
   124  0D93                     	;# 
   125  0D93                     	;# 
   126  0D94                     	;# 
   127  0D95                     	;# 
   128  0D95                     	;# 
   129  0D96                     	;# 
   130  0D97                     	;# 
   131  0D97                     	;# 
   132  0D98                     	;# 
   133  0D99                     	;# 
   134  0D99                     	;# 
   135  0D9A                     	;# 
   136  0D9B                     	;# 
   137  0D9C                     	;# 
   138  0D9C                     	;# 
   139  0D9D                     	;# 
   140  0D9D                     	;# 
   141  0D9E                     	;# 
   142  0D9F                     	;# 
   143  0DA0                     	;# 
   144  0DA1                     	;# 
   145  0DA1                     	;# 
   146  0DA2                     	;# 
   147  0DA3                     	;# 
   148  0DA3                     	;# 
   149  0DA4                     	;# 
   150  0DA5                     	;# 
   151  0DA5                     	;# 
   152  0DA6                     	;# 
   153  0DA7                     	;# 
   154  0DA7                     	;# 
   155  0DA8                     	;# 
   156  0DA9                     	;# 
   157  0DA9                     	;# 
   158  0DAA                     	;# 
   159  0DAB                     	;# 
   160  0DAC                     	;# 
   161  0DAC                     	;# 
   162  0DAD                     	;# 
   163  0DAD                     	;# 
   164  0DAE                     	;# 
   165  0DAF                     	;# 
   166  0DB0                     	;# 
   167  0DB1                     	;# 
   168  0DB1                     	;# 
   169  0DB2                     	;# 
   170  0DB3                     	;# 
   171  0DB3                     	;# 
   172  0DB4                     	;# 
   173  0DB5                     	;# 
   174  0DB5                     	;# 
   175  0DB6                     	;# 
   176  0DB7                     	;# 
   177  0DB7                     	;# 
   178  0DB8                     	;# 
   179  0DB9                     	;# 
   180  0DB9                     	;# 
   181  0DBA                     	;# 
   182  0DBB                     	;# 
   183  0DBC                     	;# 
   184  0DBC                     	;# 
   185  0DBD                     	;# 
   186  0DBD                     	;# 
   187  0DBE                     	;# 
   188  0DBF                     	;# 
   189  0DC0                     	;# 
   190  0DC1                     	;# 
   191  0DC1                     	;# 
   192  0DC2                     	;# 
   193  0DC3                     	;# 
   194  0DC3                     	;# 
   195  0DC4                     	;# 
   196  0DC5                     	;# 
   197  0DC5                     	;# 
   198  0DC6                     	;# 
   199  0DC7                     	;# 
   200  0DC7                     	;# 
   201  0DC8                     	;# 
   202  0DC9                     	;# 
   203  0DC9                     	;# 
   204  0DCA                     	;# 
   205  0DCB                     	;# 
   206  0DCC                     	;# 
   207  0DCC                     	;# 
   208  0DCD                     	;# 
   209  0DCD                     	;# 
   210  0DCE                     	;# 
   211  0DCF                     	;# 
   212  0DD0                     	;# 
   213  0E0F                     	;# 
   214  0E10                     	;# 
   215  0E11                     	;# 
   216  0E12                     	;# 
   217  0E13                     	;# 
   218  0E14                     	;# 
   219  0E15                     	;# 
   220  0E16                     	;# 
   221  0E17                     	;# 
   222  0E90                     	;# 
   223  0E91                     	;# 
   224  0E92                     	;# 
   225  0E94                     	;# 
   226  0E95                     	;# 
   227  0EA0                     	;# 
   228  0EA1                     	;# 
   229  0EA2                     	;# 
   230  0EA3                     	;# 
   231  0EA4                     	;# 
   232  0EA5                     	;# 
   233  0FE4                     	;# 
   234  0FE5                     	;# 
   235  0FE6                     	;# 
   236  0FE7                     	;# 
   237  0FE8                     	;# 
   238  0FE8                     	;# 
   239  0FE9                     	;# 
   240  0FEA                     	;# 
   241  0FEA                     	;# 
   242  0FEB                     	;# 
   243  0FED                     	;# 
   244  0FEE                     	;# 
   245  0FEE                     	;# 
   246  0FEF                     	;# 
   247  0000                     	;# 
   248  0001                     	;# 
   249  0002                     	;# 
   250  0003                     	;# 
   251  0004                     	;# 
   252  0005                     	;# 
   253  0006                     	;# 
   254  0007                     	;# 
   255  0008                     	;# 
   256  0009                     	;# 
   257  000A                     	;# 
   258  000B                     	;# 
   259  000C                     	;# 
   260  000E                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  008C                     	;# 
   274  008E                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0095                     	;# 
   279  0096                     	;# 
   280  0097                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009A                     	;# 
   284  009B                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  010C                     	;# 
   291  010E                     	;# 
   292  0111                     	;# 
   293  0112                     	;# 
   294  0113                     	;# 
   295  0114                     	;# 
   296  0115                     	;# 
   297  0116                     	;# 
   298  0117                     	;# 
   299  0118                     	;# 
   300  0119                     	;# 
   301  018C                     	;# 
   302  018E                     	;# 
   303  0191                     	;# 
   304  0191                     	;# 
   305  0192                     	;# 
   306  0193                     	;# 
   307  0193                     	;# 
   308  0194                     	;# 
   309  0195                     	;# 
   310  0196                     	;# 
   311  0197                     	;# 
   312  0199                     	;# 
   313  019A                     	;# 
   314  019B                     	;# 
   315  019B                     	;# 
   316  019C                     	;# 
   317  019D                     	;# 
   318  019E                     	;# 
   319  019F                     	;# 
   320  020C                     	;# 
   321  020E                     	;# 
   322  028C                     	;# 
   323  028E                     	;# 
   324  030C                     	;# 
   325  030E                     	;# 
   326  038C                     	;# 
   327  038E                     	;# 
   328  0391                     	;# 
   329  0392                     	;# 
   330  0393                     	;# 
   331  0397                     	;# 
   332  0398                     	;# 
   333  0399                     	;# 
   334  0691                     	;# 
   335  0692                     	;# 
   336  0693                     	;# 
   337  0694                     	;# 
   338  0695                     	;# 
   339  0D8E                     	;# 
   340  0D8F                     	;# 
   341  0D90                     	;# 
   342  0D91                     	;# 
   343  0D91                     	;# 
   344  0D92                     	;# 
   345  0D93                     	;# 
   346  0D93                     	;# 
   347  0D94                     	;# 
   348  0D95                     	;# 
   349  0D95                     	;# 
   350  0D96                     	;# 
   351  0D97                     	;# 
   352  0D97                     	;# 
   353  0D98                     	;# 
   354  0D99                     	;# 
   355  0D99                     	;# 
   356  0D9A                     	;# 
   357  0D9B                     	;# 
   358  0D9C                     	;# 
   359  0D9C                     	;# 
   360  0D9D                     	;# 
   361  0D9D                     	;# 
   362  0D9E                     	;# 
   363  0D9F                     	;# 
   364  0DA0                     	;# 
   365  0DA1                     	;# 
   366  0DA1                     	;# 
   367  0DA2                     	;# 
   368  0DA3                     	;# 
   369  0DA3                     	;# 
   370  0DA4                     	;# 
   371  0DA5                     	;# 
   372  0DA5                     	;# 
   373  0DA6                     	;# 
   374  0DA7                     	;# 
   375  0DA7                     	;# 
   376  0DA8                     	;# 
   377  0DA9                     	;# 
   378  0DA9                     	;# 
   379  0DAA                     	;# 
   380  0DAB                     	;# 
   381  0DAC                     	;# 
   382  0DAC                     	;# 
   383  0DAD                     	;# 
   384  0DAD                     	;# 
   385  0DAE                     	;# 
   386  0DAF                     	;# 
   387  0DB0                     	;# 
   388  0DB1                     	;# 
   389  0DB1                     	;# 
   390  0DB2                     	;# 
   391  0DB3                     	;# 
   392  0DB3                     	;# 
   393  0DB4                     	;# 
   394  0DB5                     	;# 
   395  0DB5                     	;# 
   396  0DB6                     	;# 
   397  0DB7                     	;# 
   398  0DB7                     	;# 
   399  0DB8                     	;# 
   400  0DB9                     	;# 
   401  0DB9                     	;# 
   402  0DBA                     	;# 
   403  0DBB                     	;# 
   404  0DBC                     	;# 
   405  0DBC                     	;# 
   406  0DBD                     	;# 
   407  0DBD                     	;# 
   408  0DBE                     	;# 
   409  0DBF                     	;# 
   410  0DC0                     	;# 
   411  0DC1                     	;# 
   412  0DC1                     	;# 
   413  0DC2                     	;# 
   414  0DC3                     	;# 
   415  0DC3                     	;# 
   416  0DC4                     	;# 
   417  0DC5                     	;# 
   418  0DC5                     	;# 
   419  0DC6                     	;# 
   420  0DC7                     	;# 
   421  0DC7                     	;# 
   422  0DC8                     	;# 
   423  0DC9                     	;# 
   424  0DC9                     	;# 
   425  0DCA                     	;# 
   426  0DCB                     	;# 
   427  0DCC                     	;# 
   428  0DCC                     	;# 
   429  0DCD                     	;# 
   430  0DCD                     	;# 
   431  0DCE                     	;# 
   432  0DCF                     	;# 
   433  0DD0                     	;# 
   434  0E0F                     	;# 
   435  0E10                     	;# 
   436  0E11                     	;# 
   437  0E12                     	;# 
   438  0E13                     	;# 
   439  0E14                     	;# 
   440  0E15                     	;# 
   441  0E16                     	;# 
   442  0E17                     	;# 
   443  0E90                     	;# 
   444  0E91                     	;# 
   445  0E92                     	;# 
   446  0E94                     	;# 
   447  0E95                     	;# 
   448  0EA0                     	;# 
   449  0EA1                     	;# 
   450  0EA2                     	;# 
   451  0EA3                     	;# 
   452  0EA4                     	;# 
   453  0EA5                     	;# 
   454  0FE4                     	;# 
   455  0FE5                     	;# 
   456  0FE6                     	;# 
   457  0FE7                     	;# 
   458  0FE8                     	;# 
   459  0FE8                     	;# 
   460  0FE9                     	;# 
   461  0FEA                     	;# 
   462  0FEA                     	;# 
   463  0FEB                     	;# 
   464  0FED                     	;# 
   465  0FEE                     	;# 
   466  0FEE                     	;# 
   467  0FEF                     	;# 
   468  0000                     	;# 
   469  0001                     	;# 
   470  0002                     	;# 
   471  0003                     	;# 
   472  0004                     	;# 
   473  0005                     	;# 
   474  0006                     	;# 
   475  0007                     	;# 
   476  0008                     	;# 
   477  0009                     	;# 
   478  000A                     	;# 
   479  000B                     	;# 
   480  000C                     	;# 
   481  000E                     	;# 
   482  0011                     	;# 
   483  0012                     	;# 
   484  0013                     	;# 
   485  0015                     	;# 
   486  0016                     	;# 
   487  0016                     	;# 
   488  0017                     	;# 
   489  0018                     	;# 
   490  0019                     	;# 
   491  001A                     	;# 
   492  001B                     	;# 
   493  001C                     	;# 
   494  008C                     	;# 
   495  008E                     	;# 
   496  0091                     	;# 
   497  0092                     	;# 
   498  0093                     	;# 
   499  0095                     	;# 
   500  0096                     	;# 
   501  0097                     	;# 
   502  0098                     	;# 
   503  0099                     	;# 
   504  009A                     	;# 
   505  009B                     	;# 
   506  009B                     	;# 
   507  009C                     	;# 
   508  009D                     	;# 
   509  009E                     	;# 
   510  009F                     	;# 
   511  010C                     	;# 
   512  010E                     	;# 
   513  0111                     	;# 
   514  0112                     	;# 
   515  0113                     	;# 
   516  0114                     	;# 
   517  0115                     	;# 
   518  0116                     	;# 
   519  0117                     	;# 
   520  0118                     	;# 
   521  0119                     	;# 
   522  018C                     	;# 
   523  018E                     	;# 
   524  0191                     	;# 
   525  0191                     	;# 
   526  0192                     	;# 
   527  0193                     	;# 
   528  0193                     	;# 
   529  0194                     	;# 
   530  0195                     	;# 
   531  0196                     	;# 
   532  0197                     	;# 
   533  0199                     	;# 
   534  019A                     	;# 
   535  019B                     	;# 
   536  019B                     	;# 
   537  019C                     	;# 
   538  019D                     	;# 
   539  019E                     	;# 
   540  019F                     	;# 
   541  020C                     	;# 
   542  020E                     	;# 
   543  028C                     	;# 
   544  028E                     	;# 
   545  030C                     	;# 
   546  030E                     	;# 
   547  038C                     	;# 
   548  038E                     	;# 
   549  0391                     	;# 
   550  0392                     	;# 
   551  0393                     	;# 
   552  0397                     	;# 
   553  0398                     	;# 
   554  0399                     	;# 
   555  0691                     	;# 
   556  0692                     	;# 
   557  0693                     	;# 
   558  0694                     	;# 
   559  0695                     	;# 
   560  0D8E                     	;# 
   561  0D8F                     	;# 
   562  0D90                     	;# 
   563  0D91                     	;# 
   564  0D91                     	;# 
   565  0D92                     	;# 
   566  0D93                     	;# 
   567  0D93                     	;# 
   568  0D94                     	;# 
   569  0D95                     	;# 
   570  0D95                     	;# 
   571  0D96                     	;# 
   572  0D97                     	;# 
   573  0D97                     	;# 
   574  0D98                     	;# 
   575  0D99                     	;# 
   576  0D99                     	;# 
   577  0D9A                     	;# 
   578  0D9B                     	;# 
   579  0D9C                     	;# 
   580  0D9C                     	;# 
   581  0D9D                     	;# 
   582  0D9D                     	;# 
   583  0D9E                     	;# 
   584  0D9F                     	;# 
   585  0DA0                     	;# 
   586  0DA1                     	;# 
   587  0DA1                     	;# 
   588  0DA2                     	;# 
   589  0DA3                     	;# 
   590  0DA3                     	;# 
   591  0DA4                     	;# 
   592  0DA5                     	;# 
   593  0DA5                     	;# 
   594  0DA6                     	;# 
   595  0DA7                     	;# 
   596  0DA7                     	;# 
   597  0DA8                     	;# 
   598  0DA9                     	;# 
   599  0DA9                     	;# 
   600  0DAA                     	;# 
   601  0DAB                     	;# 
   602  0DAC                     	;# 
   603  0DAC                     	;# 
   604  0DAD                     	;# 
   605  0DAD                     	;# 
   606  0DAE                     	;# 
   607  0DAF                     	;# 
   608  0DB0                     	;# 
   609  0DB1                     	;# 
   610  0DB1                     	;# 
   611  0DB2                     	;# 
   612  0DB3                     	;# 
   613  0DB3                     	;# 
   614  0DB4                     	;# 
   615  0DB5                     	;# 
   616  0DB5                     	;# 
   617  0DB6                     	;# 
   618  0DB7                     	;# 
   619  0DB7                     	;# 
   620  0DB8                     	;# 
   621  0DB9                     	;# 
   622  0DB9                     	;# 
   623  0DBA                     	;# 
   624  0DBB                     	;# 
   625  0DBC                     	;# 
   626  0DBC                     	;# 
   627  0DBD                     	;# 
   628  0DBD                     	;# 
   629  0DBE                     	;# 
   630  0DBF                     	;# 
   631  0DC0                     	;# 
   632  0DC1                     	;# 
   633  0DC1                     	;# 
   634  0DC2                     	;# 
   635  0DC3                     	;# 
   636  0DC3                     	;# 
   637  0DC4                     	;# 
   638  0DC5                     	;# 
   639  0DC5                     	;# 
   640  0DC6                     	;# 
   641  0DC7                     	;# 
   642  0DC7                     	;# 
   643  0DC8                     	;# 
   644  0DC9                     	;# 
   645  0DC9                     	;# 
   646  0DCA                     	;# 
   647  0DCB                     	;# 
   648  0DCC                     	;# 
   649  0DCC                     	;# 
   650  0DCD                     	;# 
   651  0DCD                     	;# 
   652  0DCE                     	;# 
   653  0DCF                     	;# 
   654  0DD0                     	;# 
   655  0E0F                     	;# 
   656  0E10                     	;# 
   657  0E11                     	;# 
   658  0E12                     	;# 
   659  0E13                     	;# 
   660  0E14                     	;# 
   661  0E15                     	;# 
   662  0E16                     	;# 
   663  0E17                     	;# 
   664  0E90                     	;# 
   665  0E91                     	;# 
   666  0E92                     	;# 
   667  0E94                     	;# 
   668  0E95                     	;# 
   669  0EA0                     	;# 
   670  0EA1                     	;# 
   671  0EA2                     	;# 
   672  0EA3                     	;# 
   673  0EA4                     	;# 
   674  0EA5                     	;# 
   675  0FE4                     	;# 
   676  0FE5                     	;# 
   677  0FE6                     	;# 
   678  0FE7                     	;# 
   679  0FE8                     	;# 
   680  0FE8                     	;# 
   681  0FE9                     	;# 
   682  0FEA                     	;# 
   683  0FEA                     	;# 
   684  0FEB                     	;# 
   685  0FED                     	;# 
   686  0FEE                     	;# 
   687  0FEE                     	;# 
   688  0FEF                     	;# 
   689  0000                     	;# 
   690  0001                     	;# 
   691  0002                     	;# 
   692  0003                     	;# 
   693  0004                     	;# 
   694  0005                     	;# 
   695  0006                     	;# 
   696  0007                     	;# 
   697  0008                     	;# 
   698  0009                     	;# 
   699  000A                     	;# 
   700  000B                     	;# 
   701  000C                     	;# 
   702  000E                     	;# 
   703  0011                     	;# 
   704  0012                     	;# 
   705  0013                     	;# 
   706  0015                     	;# 
   707  0016                     	;# 
   708  0016                     	;# 
   709  0017                     	;# 
   710  0018                     	;# 
   711  0019                     	;# 
   712  001A                     	;# 
   713  001B                     	;# 
   714  001C                     	;# 
   715  008C                     	;# 
   716  008E                     	;# 
   717  0091                     	;# 
   718  0092                     	;# 
   719  0093                     	;# 
   720  0095                     	;# 
   721  0096                     	;# 
   722  0097                     	;# 
   723  0098                     	;# 
   724  0099                     	;# 
   725  009A                     	;# 
   726  009B                     	;# 
   727  009B                     	;# 
   728  009C                     	;# 
   729  009D                     	;# 
   730  009E                     	;# 
   731  009F                     	;# 
   732  010C                     	;# 
   733  010E                     	;# 
   734  0111                     	;# 
   735  0112                     	;# 
   736  0113                     	;# 
   737  0114                     	;# 
   738  0115                     	;# 
   739  0116                     	;# 
   740  0117                     	;# 
   741  0118                     	;# 
   742  0119                     	;# 
   743  018C                     	;# 
   744  018E                     	;# 
   745  0191                     	;# 
   746  0191                     	;# 
   747  0192                     	;# 
   748  0193                     	;# 
   749  0193                     	;# 
   750  0194                     	;# 
   751  0195                     	;# 
   752  0196                     	;# 
   753  0197                     	;# 
   754  0199                     	;# 
   755  019A                     	;# 
   756  019B                     	;# 
   757  019B                     	;# 
   758  019C                     	;# 
   759  019D                     	;# 
   760  019E                     	;# 
   761  019F                     	;# 
   762  020C                     	;# 
   763  020E                     	;# 
   764  028C                     	;# 
   765  028E                     	;# 
   766  030C                     	;# 
   767  030E                     	;# 
   768  038C                     	;# 
   769  038E                     	;# 
   770  0391                     	;# 
   771  0392                     	;# 
   772  0393                     	;# 
   773  0397                     	;# 
   774  0398                     	;# 
   775  0399                     	;# 
   776  0691                     	;# 
   777  0692                     	;# 
   778  0693                     	;# 
   779  0694                     	;# 
   780  0695                     	;# 
   781  0D8E                     	;# 
   782  0D8F                     	;# 
   783  0D90                     	;# 
   784  0D91                     	;# 
   785  0D91                     	;# 
   786  0D92                     	;# 
   787  0D93                     	;# 
   788  0D93                     	;# 
   789  0D94                     	;# 
   790  0D95                     	;# 
   791  0D95                     	;# 
   792  0D96                     	;# 
   793  0D97                     	;# 
   794  0D97                     	;# 
   795  0D98                     	;# 
   796  0D99                     	;# 
   797  0D99                     	;# 
   798  0D9A                     	;# 
   799  0D9B                     	;# 
   800  0D9C                     	;# 
   801  0D9C                     	;# 
   802  0D9D                     	;# 
   803  0D9D                     	;# 
   804  0D9E                     	;# 
   805  0D9F                     	;# 
   806  0DA0                     	;# 
   807  0DA1                     	;# 
   808  0DA1                     	;# 
   809  0DA2                     	;# 
   810  0DA3                     	;# 
   811  0DA3                     	;# 
   812  0DA4                     	;# 
   813  0DA5                     	;# 
   814  0DA5                     	;# 
   815  0DA6                     	;# 
   816  0DA7                     	;# 
   817  0DA7                     	;# 
   818  0DA8                     	;# 
   819  0DA9                     	;# 
   820  0DA9                     	;# 
   821  0DAA                     	;# 
   822  0DAB                     	;# 
   823  0DAC                     	;# 
   824  0DAC                     	;# 
   825  0DAD                     	;# 
   826  0DAD                     	;# 
   827  0DAE                     	;# 
   828  0DAF                     	;# 
   829  0DB0                     	;# 
   830  0DB1                     	;# 
   831  0DB1                     	;# 
   832  0DB2                     	;# 
   833  0DB3                     	;# 
   834  0DB3                     	;# 
   835  0DB4                     	;# 
   836  0DB5                     	;# 
   837  0DB5                     	;# 
   838  0DB6                     	;# 
   839  0DB7                     	;# 
   840  0DB7                     	;# 
   841  0DB8                     	;# 
   842  0DB9                     	;# 
   843  0DB9                     	;# 
   844  0DBA                     	;# 
   845  0DBB                     	;# 
   846  0DBC                     	;# 
   847  0DBC                     	;# 
   848  0DBD                     	;# 
   849  0DBD                     	;# 
   850  0DBE                     	;# 
   851  0DBF                     	;# 
   852  0DC0                     	;# 
   853  0DC1                     	;# 
   854  0DC1                     	;# 
   855  0DC2                     	;# 
   856  0DC3                     	;# 
   857  0DC3                     	;# 
   858  0DC4                     	;# 
   859  0DC5                     	;# 
   860  0DC5                     	;# 
   861  0DC6                     	;# 
   862  0DC7                     	;# 
   863  0DC7                     	;# 
   864  0DC8                     	;# 
   865  0DC9                     	;# 
   866  0DC9                     	;# 
   867  0DCA                     	;# 
   868  0DCB                     	;# 
   869  0DCC                     	;# 
   870  0DCC                     	;# 
   871  0DCD                     	;# 
   872  0DCD                     	;# 
   873  0DCE                     	;# 
   874  0DCF                     	;# 
   875  0DD0                     	;# 
   876  0E0F                     	;# 
   877  0E10                     	;# 
   878  0E11                     	;# 
   879  0E12                     	;# 
   880  0E13                     	;# 
   881  0E14                     	;# 
   882  0E15                     	;# 
   883  0E16                     	;# 
   884  0E17                     	;# 
   885  0E90                     	;# 
   886  0E91                     	;# 
   887  0E92                     	;# 
   888  0E94                     	;# 
   889  0E95                     	;# 
   890  0EA0                     	;# 
   891  0EA1                     	;# 
   892  0EA2                     	;# 
   893  0EA3                     	;# 
   894  0EA4                     	;# 
   895  0EA5                     	;# 
   896  0FE4                     	;# 
   897  0FE5                     	;# 
   898  0FE6                     	;# 
   899  0FE7                     	;# 
   900  0FE8                     	;# 
   901  0FE8                     	;# 
   902  0FE9                     	;# 
   903  0FEA                     	;# 
   904  0FEA                     	;# 
   905  0FEB                     	;# 
   906  0FED                     	;# 
   907  0FEE                     	;# 
   908  0FEE                     	;# 
   909  0FEF                     	;# 
   910  0000                     	;# 
   911  0001                     	;# 
   912  0002                     	;# 
   913  0003                     	;# 
   914  0004                     	;# 
   915  0005                     	;# 
   916  0006                     	;# 
   917  0007                     	;# 
   918  0008                     	;# 
   919  0009                     	;# 
   920  000A                     	;# 
   921  000B                     	;# 
   922  000C                     	;# 
   923  000E                     	;# 
   924  0011                     	;# 
   925  0012                     	;# 
   926  0013                     	;# 
   927  0015                     	;# 
   928  0016                     	;# 
   929  0016                     	;# 
   930  0017                     	;# 
   931  0018                     	;# 
   932  0019                     	;# 
   933  001A                     	;# 
   934  001B                     	;# 
   935  001C                     	;# 
   936  008C                     	;# 
   937  008E                     	;# 
   938  0091                     	;# 
   939  0092                     	;# 
   940  0093                     	;# 
   941  0095                     	;# 
   942  0096                     	;# 
   943  0097                     	;# 
   944  0098                     	;# 
   945  0099                     	;# 
   946  009A                     	;# 
   947  009B                     	;# 
   948  009B                     	;# 
   949  009C                     	;# 
   950  009D                     	;# 
   951  009E                     	;# 
   952  009F                     	;# 
   953  010C                     	;# 
   954  010E                     	;# 
   955  0111                     	;# 
   956  0112                     	;# 
   957  0113                     	;# 
   958  0114                     	;# 
   959  0115                     	;# 
   960  0116                     	;# 
   961  0117                     	;# 
   962  0118                     	;# 
   963  0119                     	;# 
   964  018C                     	;# 
   965  018E                     	;# 
   966  0191                     	;# 
   967  0191                     	;# 
   968  0192                     	;# 
   969  0193                     	;# 
   970  0193                     	;# 
   971  0194                     	;# 
   972  0195                     	;# 
   973  0196                     	;# 
   974  0197                     	;# 
   975  0199                     	;# 
   976  019A                     	;# 
   977  019B                     	;# 
   978  019B                     	;# 
   979  019C                     	;# 
   980  019D                     	;# 
   981  019E                     	;# 
   982  019F                     	;# 
   983  020C                     	;# 
   984  020E                     	;# 
   985  028C                     	;# 
   986  028E                     	;# 
   987  030C                     	;# 
   988  030E                     	;# 
   989  038C                     	;# 
   990  038E                     	;# 
   991  0391                     	;# 
   992  0392                     	;# 
   993  0393                     	;# 
   994  0397                     	;# 
   995  0398                     	;# 
   996  0399                     	;# 
   997  0691                     	;# 
   998  0692                     	;# 
   999  0693                     	;# 
  1000  0694                     	;# 
  1001  0695                     	;# 
  1002  0D8E                     	;# 
  1003  0D8F                     	;# 
  1004  0D90                     	;# 
  1005  0D91                     	;# 
  1006  0D91                     	;# 
  1007  0D92                     	;# 
  1008  0D93                     	;# 
  1009  0D93                     	;# 
  1010  0D94                     	;# 
  1011  0D95                     	;# 
  1012  0D95                     	;# 
  1013  0D96                     	;# 
  1014  0D97                     	;# 
  1015  0D97                     	;# 
  1016  0D98                     	;# 
  1017  0D99                     	;# 
  1018  0D99                     	;# 
  1019  0D9A                     	;# 
  1020  0D9B                     	;# 
  1021  0D9C                     	;# 
  1022  0D9C                     	;# 
  1023  0D9D                     	;# 
  1024  0D9D                     	;# 
  1025  0D9E                     	;# 
  1026  0D9F                     	;# 
  1027  0DA0                     	;# 
  1028  0DA1                     	;# 
  1029  0DA1                     	;# 
  1030  0DA2                     	;# 
  1031  0DA3                     	;# 
  1032  0DA3                     	;# 
  1033  0DA4                     	;# 
  1034  0DA5                     	;# 
  1035  0DA5                     	;# 
  1036  0DA6                     	;# 
  1037  0DA7                     	;# 
  1038  0DA7                     	;# 
  1039  0DA8                     	;# 
  1040  0DA9                     	;# 
  1041  0DA9                     	;# 
  1042  0DAA                     	;# 
  1043  0DAB                     	;# 
  1044  0DAC                     	;# 
  1045  0DAC                     	;# 
  1046  0DAD                     	;# 
  1047  0DAD                     	;# 
  1048  0DAE                     	;# 
  1049  0DAF                     	;# 
  1050  0DB0                     	;# 
  1051  0DB1                     	;# 
  1052  0DB1                     	;# 
  1053  0DB2                     	;# 
  1054  0DB3                     	;# 
  1055  0DB3                     	;# 
  1056  0DB4                     	;# 
  1057  0DB5                     	;# 
  1058  0DB5                     	;# 
  1059  0DB6                     	;# 
  1060  0DB7                     	;# 
  1061  0DB7                     	;# 
  1062  0DB8                     	;# 
  1063  0DB9                     	;# 
  1064  0DB9                     	;# 
  1065  0DBA                     	;# 
  1066  0DBB                     	;# 
  1067  0DBC                     	;# 
  1068  0DBC                     	;# 
  1069  0DBD                     	;# 
  1070  0DBD                     	;# 
  1071  0DBE                     	;# 
  1072  0DBF                     	;# 
  1073  0DC0                     	;# 
  1074  0DC1                     	;# 
  1075  0DC1                     	;# 
  1076  0DC2                     	;# 
  1077  0DC3                     	;# 
  1078  0DC3                     	;# 
  1079  0DC4                     	;# 
  1080  0DC5                     	;# 
  1081  0DC5                     	;# 
  1082  0DC6                     	;# 
  1083  0DC7                     	;# 
  1084  0DC7                     	;# 
  1085  0DC8                     	;# 
  1086  0DC9                     	;# 
  1087  0DC9                     	;# 
  1088  0DCA                     	;# 
  1089  0DCB                     	;# 
  1090  0DCC                     	;# 
  1091  0DCC                     	;# 
  1092  0DCD                     	;# 
  1093  0DCD                     	;# 
  1094  0DCE                     	;# 
  1095  0DCF                     	;# 
  1096  0DD0                     	;# 
  1097  0E0F                     	;# 
  1098  0E10                     	;# 
  1099  0E11                     	;# 
  1100  0E12                     	;# 
  1101  0E13                     	;# 
  1102  0E14                     	;# 
  1103  0E15                     	;# 
  1104  0E16                     	;# 
  1105  0E17                     	;# 
  1106  0E90                     	;# 
  1107  0E91                     	;# 
  1108  0E92                     	;# 
  1109  0E94                     	;# 
  1110  0E95                     	;# 
  1111  0EA0                     	;# 
  1112  0EA1                     	;# 
  1113  0EA2                     	;# 
  1114  0EA3                     	;# 
  1115  0EA4                     	;# 
  1116  0EA5                     	;# 
  1117  0FE4                     	;# 
  1118  0FE5                     	;# 
  1119  0FE6                     	;# 
  1120  0FE7                     	;# 
  1121  0FE8                     	;# 
  1122  0FE8                     	;# 
  1123  0FE9                     	;# 
  1124  0FEA                     	;# 
  1125  0FEA                     	;# 
  1126  0FEB                     	;# 
  1127  0FED                     	;# 
  1128  0FEE                     	;# 
  1129  0FEE                     	;# 
  1130  0FEF                     	;# 
  1131  0FFF                     	;# 
  1132  0000                     	;# 
  1133  0001                     	;# 
  1134  0002                     	;# 
  1135  0003                     	;# 
  1136  0004                     	;# 
  1137  0005                     	;# 
  1138  0006                     	;# 
  1139  0007                     	;# 
  1140  0008                     	;# 
  1141  0009                     	;# 
  1142  000A                     	;# 
  1143  000B                     	;# 
  1144  000C                     	;# 
  1145  000E                     	;# 
  1146  0011                     	;# 
  1147  0012                     	;# 
  1148  0013                     	;# 
  1149  0015                     	;# 
  1150  0016                     	;# 
  1151  0016                     	;# 
  1152  0017                     	;# 
  1153  0018                     	;# 
  1154  0019                     	;# 
  1155  001A                     	;# 
  1156  001B                     	;# 
  1157  001C                     	;# 
  1158  008C                     	;# 
  1159  008E                     	;# 
  1160  0091                     	;# 
  1161  0092                     	;# 
  1162  0093                     	;# 
  1163  0095                     	;# 
  1164  0096                     	;# 
  1165  0097                     	;# 
  1166  0098                     	;# 
  1167  0099                     	;# 
  1168  009A                     	;# 
  1169  009B                     	;# 
  1170  009B                     	;# 
  1171  009C                     	;# 
  1172  009D                     	;# 
  1173  009E                     	;# 
  1174  009F                     	;# 
  1175  010C                     	;# 
  1176  010E                     	;# 
  1177  0111                     	;# 
  1178  0112                     	;# 
  1179  0113                     	;# 
  1180  0114                     	;# 
  1181  0115                     	;# 
  1182  0116                     	;# 
  1183  0117                     	;# 
  1184  0118                     	;# 
  1185  0119                     	;# 
  1186  018C                     	;# 
  1187  018E                     	;# 
  1188  0191                     	;# 
  1189  0191                     	;# 
  1190  0192                     	;# 
  1191  0193                     	;# 
  1192  0193                     	;# 
  1193  0194                     	;# 
  1194  0195                     	;# 
  1195  0196                     	;# 
  1196  0197                     	;# 
  1197  0199                     	;# 
  1198  019A                     	;# 
  1199  019B                     	;# 
  1200  019B                     	;# 
  1201  019C                     	;# 
  1202  019D                     	;# 
  1203  019E                     	;# 
  1204  019F                     	;# 
  1205  020C                     	;# 
  1206  020E                     	;# 
  1207  028C                     	;# 
  1208  028E                     	;# 
  1209  030C                     	;# 
  1210  030E                     	;# 
  1211  038C                     	;# 
  1212  038E                     	;# 
  1213  0391                     	;# 
  1214  0392                     	;# 
  1215  0393                     	;# 
  1216  0397                     	;# 
  1217  0398                     	;# 
  1218  0399                     	;# 
  1219  0691                     	;# 
  1220  0692                     	;# 
  1221  0693                     	;# 
  1222  0694                     	;# 
  1223  0695                     	;# 
  1224  0D8E                     	;# 
  1225  0D8F                     	;# 
  1226  0D90                     	;# 
  1227  0D91                     	;# 
  1228  0D91                     	;# 
  1229  0D92                     	;# 
  1230  0D93                     	;# 
  1231  0D93                     	;# 
  1232  0D94                     	;# 
  1233  0D95                     	;# 
  1234  0D95                     	;# 
  1235  0D96                     	;# 
  1236  0D97                     	;# 
  1237  0D97                     	;# 
  1238  0D98                     	;# 
  1239  0D99                     	;# 
  1240  0D99                     	;# 
  1241  0D9A                     	;# 
  1242  0D9B                     	;# 
  1243  0D9C                     	;# 
  1244  0D9C                     	;# 
  1245  0D9D                     	;# 
  1246  0D9D                     	;# 
  1247  0D9E                     	;# 
  1248  0D9F                     	;# 
  1249  0DA0                     	;# 
  1250  0DA1                     	;# 
  1251  0DA1                     	;# 
  1252  0DA2                     	;# 
  1253  0DA3                     	;# 
  1254  0DA3                     	;# 
  1255  0DA4                     	;# 
  1256  0DA5                     	;# 
  1257  0DA5                     	;# 
  1258  0DA6                     	;# 
  1259  0DA7                     	;# 
  1260  0DA7                     	;# 
  1261  0DA8                     	;# 
  1262  0DA9                     	;# 
  1263  0DA9                     	;# 
  1264  0DAA                     	;# 
  1265  0DAB                     	;# 
  1266  0DAC                     	;# 
  1267  0DAC                     	;# 
  1268  0DAD                     	;# 
  1269  0DAD                     	;# 
  1270  0DAE                     	;# 
  1271  0DAF                     	;# 
  1272  0DB0                     	;# 
  1273  0DB1                     	;# 
  1274  0DB1                     	;# 
  1275  0DB2                     	;# 
  1276  0DB3                     	;# 
  1277  0DB3                     	;# 
  1278  0DB4                     	;# 
  1279  0DB5                     	;# 
  1280  0DB5                     	;# 
  1281  0DB6                     	;# 
  1282  0DB7                     	;# 
  1283  0DB7                     	;# 
  1284  0DB8                     	;# 
  1285  0DB9                     	;# 
  1286  0DB9                     	;# 
  1287  0DBA                     	;# 
  1288  0DBB                     	;# 
  1289  0DBC                     	;# 
  1290  0DBC                     	;# 
  1291  0DBD                     	;# 
  1292  0DBD                     	;# 
  1293  0DBE                     	;# 
  1294  0DBF                     	;# 
  1295  0DC0                     	;# 
  1296  0DC1                     	;# 
  1297  0DC1                     	;# 
  1298  0DC2                     	;# 
  1299  0DC3                     	;# 
  1300  0DC3                     	;# 
  1301  0DC4                     	;# 
  1302  0DC5                     	;# 
  1303  0DC5                     	;# 
  1304  0DC6                     	;# 
  1305  0DC7                     	;# 
  1306  0DC7                     	;# 
  1307  0DC8                     	;# 
  1308  0DC9                     	;# 
  1309  0DC9                     	;# 
  1310  0DCA                     	;# 
  1311  0DCB                     	;# 
  1312  0DCC                     	;# 
  1313  0DCC                     	;# 
  1314  0DCD                     	;# 
  1315  0DCD                     	;# 
  1316  0DCE                     	;# 
  1317  0DCF                     	;# 
  1318  0DD0                     	;# 
  1319  0E0F                     	;# 
  1320  0E10                     	;# 
  1321  0E11                     	;# 
  1322  0E12                     	;# 
  1323  0E13                     	;# 
  1324  0E14                     	;# 
  1325  0E15                     	;# 
  1326  0E16                     	;# 
  1327  0E17                     	;# 
  1328  0E90                     	;# 
  1329  0E91                     	;# 
  1330  0E92                     	;# 
  1331  0E94                     	;# 
  1332  0E95                     	;# 
  1333  0EA0                     	;# 
  1334  0EA1                     	;# 
  1335  0EA2                     	;# 
  1336  0EA3                     	;# 
  1337  0EA4                     	;# 
  1338  0EA5                     	;# 
  1339  0FE4                     	;# 
  1340  0FE5                     	;# 
  1341  0FE6                     	;# 
  1342  0FE7                     	;# 
  1343  0FE8                     	;# 
  1344  0FE8                     	;# 
  1345  0FE9                     	;# 
  1346  0FEA                     	;# 
  1347  0FEA                     	;# 
  1348  0FEB                     	;# 
  1349  0FED                     	;# 
  1350  0FEE                     	;# 
  1351  0FEE                     	;# 
  1352  0FEF                     	;# 
  1353  0000                     	;# 
  1354  0001                     	;# 
  1355  0002                     	;# 
  1356  0003                     	;# 
  1357  0004                     	;# 
  1358  0005                     	;# 
  1359  0006                     	;# 
  1360  0007                     	;# 
  1361  0008                     	;# 
  1362  0009                     	;# 
  1363  000A                     	;# 
  1364  000B                     	;# 
  1365  000C                     	;# 
  1366  000E                     	;# 
  1367  0011                     	;# 
  1368  0012                     	;# 
  1369  0013                     	;# 
  1370  0015                     	;# 
  1371  0016                     	;# 
  1372  0016                     	;# 
  1373  0017                     	;# 
  1374  0018                     	;# 
  1375  0019                     	;# 
  1376  001A                     	;# 
  1377  001B                     	;# 
  1378  001C                     	;# 
  1379  008C                     	;# 
  1380  008E                     	;# 
  1381  0091                     	;# 
  1382  0092                     	;# 
  1383  0093                     	;# 
  1384  0095                     	;# 
  1385  0096                     	;# 
  1386  0097                     	;# 
  1387  0098                     	;# 
  1388  0099                     	;# 
  1389  009A                     	;# 
  1390  009B                     	;# 
  1391  009B                     	;# 
  1392  009C                     	;# 
  1393  009D                     	;# 
  1394  009E                     	;# 
  1395  009F                     	;# 
  1396  010C                     	;# 
  1397  010E                     	;# 
  1398  0111                     	;# 
  1399  0112                     	;# 
  1400  0113                     	;# 
  1401  0114                     	;# 
  1402  0115                     	;# 
  1403  0116                     	;# 
  1404  0117                     	;# 
  1405  0118                     	;# 
  1406  0119                     	;# 
  1407  018C                     	;# 
  1408  018E                     	;# 
  1409  0191                     	;# 
  1410  0191                     	;# 
  1411  0192                     	;# 
  1412  0193                     	;# 
  1413  0193                     	;# 
  1414  0194                     	;# 
  1415  0195                     	;# 
  1416  0196                     	;# 
  1417  0197                     	;# 
  1418  0199                     	;# 
  1419  019A                     	;# 
  1420  019B                     	;# 
  1421  019B                     	;# 
  1422  019C                     	;# 
  1423  019D                     	;# 
  1424  019E                     	;# 
  1425  019F                     	;# 
  1426  020C                     	;# 
  1427  020E                     	;# 
  1428  028C                     	;# 
  1429  028E                     	;# 
  1430  030C                     	;# 
  1431  030E                     	;# 
  1432  038C                     	;# 
  1433  038E                     	;# 
  1434  0391                     	;# 
  1435  0392                     	;# 
  1436  0393                     	;# 
  1437  0397                     	;# 
  1438  0398                     	;# 
  1439  0399                     	;# 
  1440  0691                     	;# 
  1441  0692                     	;# 
  1442  0693                     	;# 
  1443  0694                     	;# 
  1444  0695                     	;# 
  1445  0D8E                     	;# 
  1446  0D8F                     	;# 
  1447  0D90                     	;# 
  1448  0D91                     	;# 
  1449  0D91                     	;# 
  1450  0D92                     	;# 
  1451  0D93                     	;# 
  1452  0D93                     	;# 
  1453  0D94                     	;# 
  1454  0D95                     	;# 
  1455  0D95                     	;# 
  1456  0D96                     	;# 
  1457  0D97                     	;# 
  1458  0D97                     	;# 
  1459  0D98                     	;# 
  1460  0D99                     	;# 
  1461  0D99                     	;# 
  1462  0D9A                     	;# 
  1463  0D9B                     	;# 
  1464  0D9C                     	;# 
  1465  0D9C                     	;# 
  1466  0D9D                     	;# 
  1467  0D9D                     	;# 
  1468  0D9E                     	;# 
  1469  0D9F                     	;# 
  1470  0DA0                     	;# 
  1471  0DA1                     	;# 
  1472  0DA1                     	;# 
  1473  0DA2                     	;# 
  1474  0DA3                     	;# 
  1475  0DA3                     	;# 
  1476  0DA4                     	;# 
  1477  0DA5                     	;# 
  1478  0DA5                     	;# 
  1479  0DA6                     	;# 
  1480  0DA7                     	;# 
  1481  0DA7                     	;# 
  1482  0DA8                     	;# 
  1483  0DA9                     	;# 
  1484  0DA9                     	;# 
  1485  0DAA                     	;# 
  1486  0DAB                     	;# 
  1487  0DAC                     	;# 
  1488  0DAC                     	;# 
  1489  0DAD                     	;# 
  1490  0DAD                     	;# 
  1491  0DAE                     	;# 
  1492  0DAF                     	;# 
  1493  0DB0                     	;# 
  1494  0DB1                     	;# 
  1495  0DB1                     	;# 
  1496  0DB2                     	;# 
  1497  0DB3                     	;# 
  1498  0DB3                     	;# 
  1499  0DB4                     	;# 
  1500  0DB5                     	;# 
  1501  0DB5                     	;# 
  1502  0DB6                     	;# 
  1503  0DB7                     	;# 
  1504  0DB7                     	;# 
  1505  0DB8                     	;# 
  1506  0DB9                     	;# 
  1507  0DB9                     	;# 
  1508  0DBA                     	;# 
  1509  0DBB                     	;# 
  1510  0DBC                     	;# 
  1511  0DBC                     	;# 
  1512  0DBD                     	;# 
  1513  0DBD                     	;# 
  1514  0DBE                     	;# 
  1515  0DBF                     	;# 
  1516  0DC0                     	;# 
  1517  0DC1                     	;# 
  1518  0DC1                     	;# 
  1519  0DC2                     	;# 
  1520  0DC3                     	;# 
  1521  0DC3                     	;# 
  1522  0DC4                     	;# 
  1523  0DC5                     	;# 
  1524  0DC5                     	;# 
  1525  0DC6                     	;# 
  1526  0DC7                     	;# 
  1527  0DC7                     	;# 
  1528  0DC8                     	;# 
  1529  0DC9                     	;# 
  1530  0DC9                     	;# 
  1531  0DCA                     	;# 
  1532  0DCB                     	;# 
  1533  0DCC                     	;# 
  1534  0DCC                     	;# 
  1535  0DCD                     	;# 
  1536  0DCD                     	;# 
  1537  0DCE                     	;# 
  1538  0DCF                     	;# 
  1539  0DD0                     	;# 
  1540  0E0F                     	;# 
  1541  0E10                     	;# 
  1542  0E11                     	;# 
  1543  0E12                     	;# 
  1544  0E13                     	;# 
  1545  0E14                     	;# 
  1546  0E15                     	;# 
  1547  0E16                     	;# 
  1548  0E17                     	;# 
  1549  0E90                     	;# 
  1550  0E91                     	;# 
  1551  0E92                     	;# 
  1552  0E94                     	;# 
  1553  0E95                     	;# 
  1554  0EA0                     	;# 
  1555  0EA1                     	;# 
  1556  0EA2                     	;# 
  1557  0EA3                     	;# 
  1558  0EA4                     	;# 
  1559  0EA5                     	;# 
  1560  0FE4                     	;# 
  1561  0FE5                     	;# 
  1562  0FE6                     	;# 
  1563  0FE7                     	;# 
  1564  0FE8                     	;# 
  1565  0FE8                     	;# 
  1566  0FE9                     	;# 
  1567  0FEA                     	;# 
  1568  0FEA                     	;# 
  1569  0FEB                     	;# 
  1570  0FED                     	;# 
  1571  0FEE                     	;# 
  1572  0FEE                     	;# 
  1573  0FEF                     	;# 
  1574  0000                     	;# 
  1575  0001                     	;# 
  1576  0002                     	;# 
  1577  0003                     	;# 
  1578  0004                     	;# 
  1579  0005                     	;# 
  1580  0006                     	;# 
  1581  0007                     	;# 
  1582  0008                     	;# 
  1583  0009                     	;# 
  1584  000A                     	;# 
  1585  000B                     	;# 
  1586  000C                     	;# 
  1587  000E                     	;# 
  1588  0011                     	;# 
  1589  0012                     	;# 
  1590  0013                     	;# 
  1591  0015                     	;# 
  1592  0016                     	;# 
  1593  0016                     	;# 
  1594  0017                     	;# 
  1595  0018                     	;# 
  1596  0019                     	;# 
  1597  001A                     	;# 
  1598  001B                     	;# 
  1599  001C                     	;# 
  1600  008C                     	;# 
  1601  008E                     	;# 
  1602  0091                     	;# 
  1603  0092                     	;# 
  1604  0093                     	;# 
  1605  0095                     	;# 
  1606  0096                     	;# 
  1607  0097                     	;# 
  1608  0098                     	;# 
  1609  0099                     	;# 
  1610  009A                     	;# 
  1611  009B                     	;# 
  1612  009B                     	;# 
  1613  009C                     	;# 
  1614  009D                     	;# 
  1615  009E                     	;# 
  1616  009F                     	;# 
  1617  010C                     	;# 
  1618  010E                     	;# 
  1619  0111                     	;# 
  1620  0112                     	;# 
  1621  0113                     	;# 
  1622  0114                     	;# 
  1623  0115                     	;# 
  1624  0116                     	;# 
  1625  0117                     	;# 
  1626  0118                     	;# 
  1627  0119                     	;# 
  1628  018C                     	;# 
  1629  018E                     	;# 
  1630  0191                     	;# 
  1631  0191                     	;# 
  1632  0192                     	;# 
  1633  0193                     	;# 
  1634  0193                     	;# 
  1635  0194                     	;# 
  1636  0195                     	;# 
  1637  0196                     	;# 
  1638  0197                     	;# 
  1639  0199                     	;# 
  1640  019A                     	;# 
  1641  019B                     	;# 
  1642  019B                     	;# 
  1643  019C                     	;# 
  1644  019D                     	;# 
  1645  019E                     	;# 
  1646  019F                     	;# 
  1647  020C                     	;# 
  1648  020E                     	;# 
  1649  028C                     	;# 
  1650  028E                     	;# 
  1651  030C                     	;# 
  1652  030E                     	;# 
  1653  038C                     	;# 
  1654  038E                     	;# 
  1655  0391                     	;# 
  1656  0392                     	;# 
  1657  0393                     	;# 
  1658  0397                     	;# 
  1659  0398                     	;# 
  1660  0399                     	;# 
  1661  0691                     	;# 
  1662  0692                     	;# 
  1663  0693                     	;# 
  1664  0694                     	;# 
  1665  0695                     	;# 
  1666  0D8E                     	;# 
  1667  0D8F                     	;# 
  1668  0D90                     	;# 
  1669  0D91                     	;# 
  1670  0D91                     	;# 
  1671  0D92                     	;# 
  1672  0D93                     	;# 
  1673  0D93                     	;# 
  1674  0D94                     	;# 
  1675  0D95                     	;# 
  1676  0D95                     	;# 
  1677  0D96                     	;# 
  1678  0D97                     	;# 
  1679  0D97                     	;# 
  1680  0D98                     	;# 
  1681  0D99                     	;# 
  1682  0D99                     	;# 
  1683  0D9A                     	;# 
  1684  0D9B                     	;# 
  1685  0D9C                     	;# 
  1686  0D9C                     	;# 
  1687  0D9D                     	;# 
  1688  0D9D                     	;# 
  1689  0D9E                     	;# 
  1690  0D9F                     	;# 
  1691  0DA0                     	;# 
  1692  0DA1                     	;# 
  1693  0DA1                     	;# 
  1694  0DA2                     	;# 
  1695  0DA3                     	;# 
  1696  0DA3                     	;# 
  1697  0DA4                     	;# 
  1698  0DA5                     	;# 
  1699  0DA5                     	;# 
  1700  0DA6                     	;# 
  1701  0DA7                     	;# 
  1702  0DA7                     	;# 
  1703  0DA8                     	;# 
  1704  0DA9                     	;# 
  1705  0DA9                     	;# 
  1706  0DAA                     	;# 
  1707  0DAB                     	;# 
  1708  0DAC                     	;# 
  1709  0DAC                     	;# 
  1710  0DAD                     	;# 
  1711  0DAD                     	;# 
  1712  0DAE                     	;# 
  1713  0DAF                     	;# 
  1714  0DB0                     	;# 
  1715  0DB1                     	;# 
  1716  0DB1                     	;# 
  1717  0DB2                     	;# 
  1718  0DB3                     	;# 
  1719  0DB3                     	;# 
  1720  0DB4                     	;# 
  1721  0DB5                     	;# 
  1722  0DB5                     	;# 
  1723  0DB6                     	;# 
  1724  0DB7                     	;# 
  1725  0DB7                     	;# 
  1726  0DB8                     	;# 
  1727  0DB9                     	;# 
  1728  0DB9                     	;# 
  1729  0DBA                     	;# 
  1730  0DBB                     	;# 
  1731  0DBC                     	;# 
  1732  0DBC                     	;# 
  1733  0DBD                     	;# 
  1734  0DBD                     	;# 
  1735  0DBE                     	;# 
  1736  0DBF                     	;# 
  1737  0DC0                     	;# 
  1738  0DC1                     	;# 
  1739  0DC1                     	;# 
  1740  0DC2                     	;# 
  1741  0DC3                     	;# 
  1742  0DC3                     	;# 
  1743  0DC4                     	;# 
  1744  0DC5                     	;# 
  1745  0DC5                     	;# 
  1746  0DC6                     	;# 
  1747  0DC7                     	;# 
  1748  0DC7                     	;# 
  1749  0DC8                     	;# 
  1750  0DC9                     	;# 
  1751  0DC9                     	;# 
  1752  0DCA                     	;# 
  1753  0DCB                     	;# 
  1754  0DCC                     	;# 
  1755  0DCC                     	;# 
  1756  0DCD                     	;# 
  1757  0DCD                     	;# 
  1758  0DCE                     	;# 
  1759  0DCF                     	;# 
  1760  0DD0                     	;# 
  1761  0E0F                     	;# 
  1762  0E10                     	;# 
  1763  0E11                     	;# 
  1764  0E12                     	;# 
  1765  0E13                     	;# 
  1766  0E14                     	;# 
  1767  0E15                     	;# 
  1768  0E16                     	;# 
  1769  0E17                     	;# 
  1770  0E90                     	;# 
  1771  0E91                     	;# 
  1772  0E92                     	;# 
  1773  0E94                     	;# 
  1774  0E95                     	;# 
  1775  0EA0                     	;# 
  1776  0EA1                     	;# 
  1777  0EA2                     	;# 
  1778  0EA3                     	;# 
  1779  0EA4                     	;# 
  1780  0EA5                     	;# 
  1781  0FE4                     	;# 
  1782  0FE5                     	;# 
  1783  0FE6                     	;# 
  1784  0FE7                     	;# 
  1785  0FE8                     	;# 
  1786  0FE8                     	;# 
  1787  0FE9                     	;# 
  1788  0FEA                     	;# 
  1789  0FEA                     	;# 
  1790  0FEB                     	;# 
  1791  0FED                     	;# 
  1792  0FEE                     	;# 
  1793  0FEE                     	;# 
  1794  0FEF                     	;# 
  1795  0000                     	;# 
  1796  0001                     	;# 
  1797  0002                     	;# 
  1798  0003                     	;# 
  1799  0004                     	;# 
  1800  0005                     	;# 
  1801  0006                     	;# 
  1802  0007                     	;# 
  1803  0008                     	;# 
  1804  0009                     	;# 
  1805  000A                     	;# 
  1806  000B                     	;# 
  1807  000C                     	;# 
  1808  000E                     	;# 
  1809  0011                     	;# 
  1810  0012                     	;# 
  1811  0013                     	;# 
  1812  0015                     	;# 
  1813  0016                     	;# 
  1814  0016                     	;# 
  1815  0017                     	;# 
  1816  0018                     	;# 
  1817  0019                     	;# 
  1818  001A                     	;# 
  1819  001B                     	;# 
  1820  001C                     	;# 
  1821  008C                     	;# 
  1822  008E                     	;# 
  1823  0091                     	;# 
  1824  0092                     	;# 
  1825  0093                     	;# 
  1826  0095                     	;# 
  1827  0096                     	;# 
  1828  0097                     	;# 
  1829  0098                     	;# 
  1830  0099                     	;# 
  1831  009A                     	;# 
  1832  009B                     	;# 
  1833  009B                     	;# 
  1834  009C                     	;# 
  1835  009D                     	;# 
  1836  009E                     	;# 
  1837  009F                     	;# 
  1838  010C                     	;# 
  1839  010E                     	;# 
  1840  0111                     	;# 
  1841  0112                     	;# 
  1842  0113                     	;# 
  1843  0114                     	;# 
  1844  0115                     	;# 
  1845  0116                     	;# 
  1846  0117                     	;# 
  1847  0118                     	;# 
  1848  0119                     	;# 
  1849  018C                     	;# 
  1850  018E                     	;# 
  1851  0191                     	;# 
  1852  0191                     	;# 
  1853  0192                     	;# 
  1854  0193                     	;# 
  1855  0193                     	;# 
  1856  0194                     	;# 
  1857  0195                     	;# 
  1858  0196                     	;# 
  1859  0197                     	;# 
  1860  0199                     	;# 
  1861  019A                     	;# 
  1862  019B                     	;# 
  1863  019B                     	;# 
  1864  019C                     	;# 
  1865  019D                     	;# 
  1866  019E                     	;# 
  1867  019F                     	;# 
  1868  020C                     	;# 
  1869  020E                     	;# 
  1870  028C                     	;# 
  1871  028E                     	;# 
  1872  030C                     	;# 
  1873  030E                     	;# 
  1874  038C                     	;# 
  1875  038E                     	;# 
  1876  0391                     	;# 
  1877  0392                     	;# 
  1878  0393                     	;# 
  1879  0397                     	;# 
  1880  0398                     	;# 
  1881  0399                     	;# 
  1882  0691                     	;# 
  1883  0692                     	;# 
  1884  0693                     	;# 
  1885  0694                     	;# 
  1886  0695                     	;# 
  1887  0D8E                     	;# 
  1888  0D8F                     	;# 
  1889  0D90                     	;# 
  1890  0D91                     	;# 
  1891  0D91                     	;# 
  1892  0D92                     	;# 
  1893  0D93                     	;# 
  1894  0D93                     	;# 
  1895  0D94                     	;# 
  1896  0D95                     	;# 
  1897  0D95                     	;# 
  1898  0D96                     	;# 
  1899  0D97                     	;# 
  1900  0D97                     	;# 
  1901  0D98                     	;# 
  1902  0D99                     	;# 
  1903  0D99                     	;# 
  1904  0D9A                     	;# 
  1905  0D9B                     	;# 
  1906  0D9C                     	;# 
  1907  0D9C                     	;# 
  1908  0D9D                     	;# 
  1909  0D9D                     	;# 
  1910  0D9E                     	;# 
  1911  0D9F                     	;# 
  1912  0DA0                     	;# 
  1913  0DA1                     	;# 
  1914  0DA1                     	;# 
  1915  0DA2                     	;# 
  1916  0DA3                     	;# 
  1917  0DA3                     	;# 
  1918  0DA4                     	;# 
  1919  0DA5                     	;# 
  1920  0DA5                     	;# 
  1921  0DA6                     	;# 
  1922  0DA7                     	;# 
  1923  0DA7                     	;# 
  1924  0DA8                     	;# 
  1925  0DA9                     	;# 
  1926  0DA9                     	;# 
  1927  0DAA                     	;# 
  1928  0DAB                     	;# 
  1929  0DAC                     	;# 
  1930  0DAC                     	;# 
  1931  0DAD                     	;# 
  1932  0DAD                     	;# 
  1933  0DAE                     	;# 
  1934  0DAF                     	;# 
  1935  0DB0                     	;# 
  1936  0DB1                     	;# 
  1937  0DB1                     	;# 
  1938  0DB2                     	;# 
  1939  0DB3                     	;# 
  1940  0DB3                     	;# 
  1941  0DB4                     	;# 
  1942  0DB5                     	;# 
  1943  0DB5                     	;# 
  1944  0DB6                     	;# 
  1945  0DB7                     	;# 
  1946  0DB7                     	;# 
  1947  0DB8                     	;# 
  1948  0DB9                     	;# 
  1949  0DB9                     	;# 
  1950  0DBA                     	;# 
  1951  0DBB                     	;# 
  1952  0DBC                     	;# 
  1953  0DBC                     	;# 
  1954  0DBD                     	;# 
  1955  0DBD                     	;# 
  1956  0DBE                     	;# 
  1957  0DBF                     	;# 
  1958  0DC0                     	;# 
  1959  0DC1                     	;# 
  1960  0DC1                     	;# 
  1961  0DC2                     	;# 
  1962  0DC3                     	;# 
  1963  0DC3                     	;# 
  1964  0DC4                     	;# 
  1965  0DC5                     	;# 
  1966  0DC5                     	;# 
  1967  0DC6                     	;# 
  1968  0DC7                     	;# 
  1969  0DC7                     	;# 
  1970  0DC8                     	;# 
  1971  0DC9                     	;# 
  1972  0DC9                     	;# 
  1973  0DCA                     	;# 
  1974  0DCB                     	;# 
  1975  0DCC                     	;# 
  1976  0DCC                     	;# 
  1977  0DCD                     	;# 
  1978  0DCD                     	;# 
  1979  0DCE                     	;# 
  1980  0DCF                     	;# 
  1981  0DD0                     	;# 
  1982  0E0F                     	;# 
  1983  0E10                     	;# 
  1984  0E11                     	;# 
  1985  0E12                     	;# 
  1986  0E13                     	;# 
  1987  0E14                     	;# 
  1988  0E15                     	;# 
  1989  0E16                     	;# 
  1990  0E17                     	;# 
  1991  0E90                     	;# 
  1992  0E91                     	;# 
  1993  0E92                     	;# 
  1994  0E94                     	;# 
  1995  0E95                     	;# 
  1996  0EA0                     	;# 
  1997  0EA1                     	;# 
  1998  0EA2                     	;# 
  1999  0EA3                     	;# 
  2000  0EA4                     	;# 
  2001  0EA5                     	;# 
  2002  0FE4                     	;# 
  2003  0FE5                     	;# 
  2004  0FE6                     	;# 
  2005  0FE7                     	;# 
  2006  0FE8                     	;# 
  2007  0FE8                     	;# 
  2008  0FE9                     	;# 
  2009  0FEA                     	;# 
  2010  0FEA                     	;# 
  2011  0FEB                     	;# 
  2012  0FED                     	;# 
  2013  0FEE                     	;# 
  2014  0FEE                     	;# 
  2015  0FEF                     	;# 
  2016  0000                     	;# 
  2017  0001                     	;# 
  2018  0002                     	;# 
  2019  0003                     	;# 
  2020  0004                     	;# 
  2021  0005                     	;# 
  2022  0006                     	;# 
  2023  0007                     	;# 
  2024  0008                     	;# 
  2025  0009                     	;# 
  2026  000A                     	;# 
  2027  000B                     	;# 
  2028  000C                     	;# 
  2029  000E                     	;# 
  2030  0011                     	;# 
  2031  0012                     	;# 
  2032  0013                     	;# 
  2033  0015                     	;# 
  2034  0016                     	;# 
  2035  0016                     	;# 
  2036  0017                     	;# 
  2037  0018                     	;# 
  2038  0019                     	;# 
  2039  001A                     	;# 
  2040  001B                     	;# 
  2041  001C                     	;# 
  2042  008C                     	;# 
  2043  008E                     	;# 
  2044  0091                     	;# 
  2045  0092                     	;# 
  2046  0093                     	;# 
  2047  0095                     	;# 
  2048  0096                     	;# 
  2049  0097                     	;# 
  2050  0098                     	;# 
  2051  0099                     	;# 
  2052  009A                     	;# 
  2053  009B                     	;# 
  2054  009B                     	;# 
  2055  009C                     	;# 
  2056  009D                     	;# 
  2057  009E                     	;# 
  2058  009F                     	;# 
  2059  010C                     	;# 
  2060  010E                     	;# 
  2061  0111                     	;# 
  2062  0112                     	;# 
  2063  0113                     	;# 
  2064  0114                     	;# 
  2065  0115                     	;# 
  2066  0116                     	;# 
  2067  0117                     	;# 
  2068  0118                     	;# 
  2069  0119                     	;# 
  2070  018C                     	;# 
  2071  018E                     	;# 
  2072  0191                     	;# 
  2073  0191                     	;# 
  2074  0192                     	;# 
  2075  0193                     	;# 
  2076  0193                     	;# 
  2077  0194                     	;# 
  2078  0195                     	;# 
  2079  0196                     	;# 
  2080  0197                     	;# 
  2081  0199                     	;# 
  2082  019A                     	;# 
  2083  019B                     	;# 
  2084  019B                     	;# 
  2085  019C                     	;# 
  2086  019D                     	;# 
  2087  019E                     	;# 
  2088  019F                     	;# 
  2089  020C                     	;# 
  2090  020E                     	;# 
  2091  028C                     	;# 
  2092  028E                     	;# 
  2093  030C                     	;# 
  2094  030E                     	;# 
  2095  038C                     	;# 
  2096  038E                     	;# 
  2097  0391                     	;# 
  2098  0392                     	;# 
  2099  0393                     	;# 
  2100  0397                     	;# 
  2101  0398                     	;# 
  2102  0399                     	;# 
  2103  0691                     	;# 
  2104  0692                     	;# 
  2105  0693                     	;# 
  2106  0694                     	;# 
  2107  0695                     	;# 
  2108  0D8E                     	;# 
  2109  0D8F                     	;# 
  2110  0D90                     	;# 
  2111  0D91                     	;# 
  2112  0D91                     	;# 
  2113  0D92                     	;# 
  2114  0D93                     	;# 
  2115  0D93                     	;# 
  2116  0D94                     	;# 
  2117  0D95                     	;# 
  2118  0D95                     	;# 
  2119  0D96                     	;# 
  2120  0D97                     	;# 
  2121  0D97                     	;# 
  2122  0D98                     	;# 
  2123  0D99                     	;# 
  2124  0D99                     	;# 
  2125  0D9A                     	;# 
  2126  0D9B                     	;# 
  2127  0D9C                     	;# 
  2128  0D9C                     	;# 
  2129  0D9D                     	;# 
  2130  0D9D                     	;# 
  2131  0D9E                     	;# 
  2132  0D9F                     	;# 
  2133  0DA0                     	;# 
  2134  0DA1                     	;# 
  2135  0DA1                     	;# 
  2136  0DA2                     	;# 
  2137  0DA3                     	;# 
  2138  0DA3                     	;# 
  2139  0DA4                     	;# 
  2140  0DA5                     	;# 
  2141  0DA5                     	;# 
  2142  0DA6                     	;# 
  2143  0DA7                     	;# 
  2144  0DA7                     	;# 
  2145  0DA8                     	;# 
  2146  0DA9                     	;# 
  2147  0DA9                     	;# 
  2148  0DAA                     	;# 
  2149  0DAB                     	;# 
  2150  0DAC                     	;# 
  2151  0DAC                     	;# 
  2152  0DAD                     	;# 
  2153  0DAD                     	;# 
  2154  0DAE                     	;# 
  2155  0DAF                     	;# 
  2156  0DB0                     	;# 
  2157  0DB1                     	;# 
  2158  0DB1                     	;# 
  2159  0DB2                     	;# 
  2160  0DB3                     	;# 
  2161  0DB3                     	;# 
  2162  0DB4                     	;# 
  2163  0DB5                     	;# 
  2164  0DB5                     	;# 
  2165  0DB6                     	;# 
  2166  0DB7                     	;# 
  2167  0DB7                     	;# 
  2168  0DB8                     	;# 
  2169  0DB9                     	;# 
  2170  0DB9                     	;# 
  2171  0DBA                     	;# 
  2172  0DBB                     	;# 
  2173  0DBC                     	;# 
  2174  0DBC                     	;# 
  2175  0DBD                     	;# 
  2176  0DBD                     	;# 
  2177  0DBE                     	;# 
  2178  0DBF                     	;# 
  2179  0DC0                     	;# 
  2180  0DC1                     	;# 
  2181  0DC1                     	;# 
  2182  0DC2                     	;# 
  2183  0DC3                     	;# 
  2184  0DC3                     	;# 
  2185  0DC4                     	;# 
  2186  0DC5                     	;# 
  2187  0DC5                     	;# 
  2188  0DC6                     	;# 
  2189  0DC7                     	;# 
  2190  0DC7                     	;# 
  2191  0DC8                     	;# 
  2192  0DC9                     	;# 
  2193  0DC9                     	;# 
  2194  0DCA                     	;# 
  2195  0DCB                     	;# 
  2196  0DCC                     	;# 
  2197  0DCC                     	;# 
  2198  0DCD                     	;# 
  2199  0DCD                     	;# 
  2200  0DCE                     	;# 
  2201  0DCF                     	;# 
  2202  0DD0                     	;# 
  2203  0E0F                     	;# 
  2204  0E10                     	;# 
  2205  0E11                     	;# 
  2206  0E12                     	;# 
  2207  0E13                     	;# 
  2208  0E14                     	;# 
  2209  0E15                     	;# 
  2210  0E16                     	;# 
  2211  0E17                     	;# 
  2212  0E90                     	;# 
  2213  0E91                     	;# 
  2214  0E92                     	;# 
  2215  0E94                     	;# 
  2216  0E95                     	;# 
  2217  0EA0                     	;# 
  2218  0EA1                     	;# 
  2219  0EA2                     	;# 
  2220  0EA3                     	;# 
  2221  0EA4                     	;# 
  2222  0EA5                     	;# 
  2223  0FE4                     	;# 
  2224  0FE5                     	;# 
  2225  0FE6                     	;# 
  2226  0FE7                     	;# 
  2227  0FE8                     	;# 
  2228  0FE8                     	;# 
  2229  0FE9                     	;# 
  2230  0FEA                     	;# 
  2231  0FEA                     	;# 
  2232  0FEB                     	;# 
  2233  0FED                     	;# 
  2234  0FEE                     	;# 
  2235  0FEE                     	;# 
  2236  0FEF                     	;# 
  2237  0000                     	;# 
  2238  0001                     	;# 
  2239  0002                     	;# 
  2240  0003                     	;# 
  2241  0004                     	;# 
  2242  0005                     	;# 
  2243  0006                     	;# 
  2244  0007                     	;# 
  2245  0008                     	;# 
  2246  0009                     	;# 
  2247  000A                     	;# 
  2248  000B                     	;# 
  2249  000C                     	;# 
  2250  000E                     	;# 
  2251  0011                     	;# 
  2252  0012                     	;# 
  2253  0013                     	;# 
  2254  0015                     	;# 
  2255  0016                     	;# 
  2256  0016                     	;# 
  2257  0017                     	;# 
  2258  0018                     	;# 
  2259  0019                     	;# 
  2260  001A                     	;# 
  2261  001B                     	;# 
  2262  001C                     	;# 
  2263  008C                     	;# 
  2264  008E                     	;# 
  2265  0091                     	;# 
  2266  0092                     	;# 
  2267  0093                     	;# 
  2268  0095                     	;# 
  2269  0096                     	;# 
  2270  0097                     	;# 
  2271  0098                     	;# 
  2272  0099                     	;# 
  2273  009A                     	;# 
  2274  009B                     	;# 
  2275  009B                     	;# 
  2276  009C                     	;# 
  2277  009D                     	;# 
  2278  009E                     	;# 
  2279  009F                     	;# 
  2280  010C                     	;# 
  2281  010E                     	;# 
  2282  0111                     	;# 
  2283  0112                     	;# 
  2284  0113                     	;# 
  2285  0114                     	;# 
  2286  0115                     	;# 
  2287  0116                     	;# 
  2288  0117                     	;# 
  2289  0118                     	;# 
  2290  0119                     	;# 
  2291  018C                     	;# 
  2292  018E                     	;# 
  2293  0191                     	;# 
  2294  0191                     	;# 
  2295  0192                     	;# 
  2296  0193                     	;# 
  2297  0193                     	;# 
  2298  0194                     	;# 
  2299  0195                     	;# 
  2300  0196                     	;# 
  2301  0197                     	;# 
  2302  0199                     	;# 
  2303  019A                     	;# 
  2304  019B                     	;# 
  2305  019B                     	;# 
  2306  019C                     	;# 
  2307  019D                     	;# 
  2308  019E                     	;# 
  2309  019F                     	;# 
  2310  020C                     	;# 
  2311  020E                     	;# 
  2312  028C                     	;# 
  2313  028E                     	;# 
  2314  030C                     	;# 
  2315  030E                     	;# 
  2316  038C                     	;# 
  2317  038E                     	;# 
  2318  0391                     	;# 
  2319  0392                     	;# 
  2320  0393                     	;# 
  2321  0397                     	;# 
  2322  0398                     	;# 
  2323  0399                     	;# 
  2324  0691                     	;# 
  2325  0692                     	;# 
  2326  0693                     	;# 
  2327  0694                     	;# 
  2328  0695                     	;# 
  2329  0D8E                     	;# 
  2330  0D8F                     	;# 
  2331  0D90                     	;# 
  2332  0D91                     	;# 
  2333  0D91                     	;# 
  2334  0D92                     	;# 
  2335  0D93                     	;# 
  2336  0D93                     	;# 
  2337  0D94                     	;# 
  2338  0D95                     	;# 
  2339  0D95                     	;# 
  2340  0D96                     	;# 
  2341  0D97                     	;# 
  2342  0D97                     	;# 
  2343  0D98                     	;# 
  2344  0D99                     	;# 
  2345  0D99                     	;# 
  2346  0D9A                     	;# 
  2347  0D9B                     	;# 
  2348  0D9C                     	;# 
  2349  0D9C                     	;# 
  2350  0D9D                     	;# 
  2351  0D9D                     	;# 
  2352  0D9E                     	;# 
  2353  0D9F                     	;# 
  2354  0DA0                     	;# 
  2355  0DA1                     	;# 
  2356  0DA1                     	;# 
  2357  0DA2                     	;# 
  2358  0DA3                     	;# 
  2359  0DA3                     	;# 
  2360  0DA4                     	;# 
  2361  0DA5                     	;# 
  2362  0DA5                     	;# 
  2363  0DA6                     	;# 
  2364  0DA7                     	;# 
  2365  0DA7                     	;# 
  2366  0DA8                     	;# 
  2367  0DA9                     	;# 
  2368  0DA9                     	;# 
  2369  0DAA                     	;# 
  2370  0DAB                     	;# 
  2371  0DAC                     	;# 
  2372  0DAC                     	;# 
  2373  0DAD                     	;# 
  2374  0DAD                     	;# 
  2375  0DAE                     	;# 
  2376  0DAF                     	;# 
  2377  0DB0                     	;# 
  2378  0DB1                     	;# 
  2379  0DB1                     	;# 
  2380  0DB2                     	;# 
  2381  0DB3                     	;# 
  2382  0DB3                     	;# 
  2383  0DB4                     	;# 
  2384  0DB5                     	;# 
  2385  0DB5                     	;# 
  2386  0DB6                     	;# 
  2387  0DB7                     	;# 
  2388  0DB7                     	;# 
  2389  0DB8                     	;# 
  2390  0DB9                     	;# 
  2391  0DB9                     	;# 
  2392  0DBA                     	;# 
  2393  0DBB                     	;# 
  2394  0DBC                     	;# 
  2395  0DBC                     	;# 
  2396  0DBD                     	;# 
  2397  0DBD                     	;# 
  2398  0DBE                     	;# 
  2399  0DBF                     	;# 
  2400  0DC0                     	;# 
  2401  0DC1                     	;# 
  2402  0DC1                     	;# 
  2403  0DC2                     	;# 
  2404  0DC3                     	;# 
  2405  0DC3                     	;# 
  2406  0DC4                     	;# 
  2407  0DC5                     	;# 
  2408  0DC5                     	;# 
  2409  0DC6                     	;# 
  2410  0DC7                     	;# 
  2411  0DC7                     	;# 
  2412  0DC8                     	;# 
  2413  0DC9                     	;# 
  2414  0DC9                     	;# 
  2415  0DCA                     	;# 
  2416  0DCB                     	;# 
  2417  0DCC                     	;# 
  2418  0DCC                     	;# 
  2419  0DCD                     	;# 
  2420  0DCD                     	;# 
  2421  0DCE                     	;# 
  2422  0DCF                     	;# 
  2423  0DD0                     	;# 
  2424  0E0F                     	;# 
  2425  0E10                     	;# 
  2426  0E11                     	;# 
  2427  0E12                     	;# 
  2428  0E13                     	;# 
  2429  0E14                     	;# 
  2430  0E15                     	;# 
  2431  0E16                     	;# 
  2432  0E17                     	;# 
  2433  0E90                     	;# 
  2434  0E91                     	;# 
  2435  0E92                     	;# 
  2436  0E94                     	;# 
  2437  0E95                     	;# 
  2438  0EA0                     	;# 
  2439  0EA1                     	;# 
  2440  0EA2                     	;# 
  2441  0EA3                     	;# 
  2442  0EA4                     	;# 
  2443  0EA5                     	;# 
  2444  0FE4                     	;# 
  2445  0FE5                     	;# 
  2446  0FE6                     	;# 
  2447  0FE7                     	;# 
  2448  0FE8                     	;# 
  2449  0FE8                     	;# 
  2450  0FE9                     	;# 
  2451  0FEA                     	;# 
  2452  0FEA                     	;# 
  2453  0FEB                     	;# 
  2454  0FED                     	;# 
  2455  0FEE                     	;# 
  2456  0FEE                     	;# 
  2457  0FEF                     	;# 
  2458  0FFF                     	;# 
  2459  0000                     	;# 
  2460  0001                     	;# 
  2461  0002                     	;# 
  2462  0003                     	;# 
  2463  0004                     	;# 
  2464  0005                     	;# 
  2465  0006                     	;# 
  2466  0007                     	;# 
  2467  0008                     	;# 
  2468  0009                     	;# 
  2469  000A                     	;# 
  2470  000B                     	;# 
  2471  000C                     	;# 
  2472  000E                     	;# 
  2473  0011                     	;# 
  2474  0012                     	;# 
  2475  0013                     	;# 
  2476  0015                     	;# 
  2477  0016                     	;# 
  2478  0016                     	;# 
  2479  0017                     	;# 
  2480  0018                     	;# 
  2481  0019                     	;# 
  2482  001A                     	;# 
  2483  001B                     	;# 
  2484  001C                     	;# 
  2485  008C                     	;# 
  2486  008E                     	;# 
  2487  0091                     	;# 
  2488  0092                     	;# 
  2489  0093                     	;# 
  2490  0095                     	;# 
  2491  0096                     	;# 
  2492  0097                     	;# 
  2493  0098                     	;# 
  2494  0099                     	;# 
  2495  009A                     	;# 
  2496  009B                     	;# 
  2497  009B                     	;# 
  2498  009C                     	;# 
  2499  009D                     	;# 
  2500  009E                     	;# 
  2501  009F                     	;# 
  2502  010C                     	;# 
  2503  010E                     	;# 
  2504  0111                     	;# 
  2505  0112                     	;# 
  2506  0113                     	;# 
  2507  0114                     	;# 
  2508  0115                     	;# 
  2509  0116                     	;# 
  2510  0117                     	;# 
  2511  0118                     	;# 
  2512  0119                     	;# 
  2513  018C                     	;# 
  2514  018E                     	;# 
  2515  0191                     	;# 
  2516  0191                     	;# 
  2517  0192                     	;# 
  2518  0193                     	;# 
  2519  0193                     	;# 
  2520  0194                     	;# 
  2521  0195                     	;# 
  2522  0196                     	;# 
  2523  0197                     	;# 
  2524  0199                     	;# 
  2525  019A                     	;# 
  2526  019B                     	;# 
  2527  019B                     	;# 
  2528  019C                     	;# 
  2529  019D                     	;# 
  2530  019E                     	;# 
  2531  019F                     	;# 
  2532  020C                     	;# 
  2533  020E                     	;# 
  2534  028C                     	;# 
  2535  028E                     	;# 
  2536  030C                     	;# 
  2537  030E                     	;# 
  2538  038C                     	;# 
  2539  038E                     	;# 
  2540  0391                     	;# 
  2541  0392                     	;# 
  2542  0393                     	;# 
  2543  0397                     	;# 
  2544  0398                     	;# 
  2545  0399                     	;# 
  2546  0691                     	;# 
  2547  0692                     	;# 
  2548  0693                     	;# 
  2549  0694                     	;# 
  2550  0695                     	;# 
  2551  0D8E                     	;# 
  2552  0D8F                     	;# 
  2553  0D90                     	;# 
  2554  0D91                     	;# 
  2555  0D91                     	;# 
  2556  0D92                     	;# 
  2557  0D93                     	;# 
  2558  0D93                     	;# 
  2559  0D94                     	;# 
  2560  0D95                     	;# 
  2561  0D95                     	;# 
  2562  0D96                     	;# 
  2563  0D97                     	;# 
  2564  0D97                     	;# 
  2565  0D98                     	;# 
  2566  0D99                     	;# 
  2567  0D99                     	;# 
  2568  0D9A                     	;# 
  2569  0D9B                     	;# 
  2570  0D9C                     	;# 
  2571  0D9C                     	;# 
  2572  0D9D                     	;# 
  2573  0D9D                     	;# 
  2574  0D9E                     	;# 
  2575  0D9F                     	;# 
  2576  0DA0                     	;# 
  2577  0DA1                     	;# 
  2578  0DA1                     	;# 
  2579  0DA2                     	;# 
  2580  0DA3                     	;# 
  2581  0DA3                     	;# 
  2582  0DA4                     	;# 
  2583  0DA5                     	;# 
  2584  0DA5                     	;# 
  2585  0DA6                     	;# 
  2586  0DA7                     	;# 
  2587  0DA7                     	;# 
  2588  0DA8                     	;# 
  2589  0DA9                     	;# 
  2590  0DA9                     	;# 
  2591  0DAA                     	;# 
  2592  0DAB                     	;# 
  2593  0DAC                     	;# 
  2594  0DAC                     	;# 
  2595  0DAD                     	;# 
  2596  0DAD                     	;# 
  2597  0DAE                     	;# 
  2598  0DAF                     	;# 
  2599  0DB0                     	;# 
  2600  0DB1                     	;# 
  2601  0DB1                     	;# 
  2602  0DB2                     	;# 
  2603  0DB3                     	;# 
  2604  0DB3                     	;# 
  2605  0DB4                     	;# 
  2606  0DB5                     	;# 
  2607  0DB5                     	;# 
  2608  0DB6                     	;# 
  2609  0DB7                     	;# 
  2610  0DB7                     	;# 
  2611  0DB8                     	;# 
  2612  0DB9                     	;# 
  2613  0DB9                     	;# 
  2614  0DBA                     	;# 
  2615  0DBB                     	;# 
  2616  0DBC                     	;# 
  2617  0DBC                     	;# 
  2618  0DBD                     	;# 
  2619  0DBD                     	;# 
  2620  0DBE                     	;# 
  2621  0DBF                     	;# 
  2622  0DC0                     	;# 
  2623  0DC1                     	;# 
  2624  0DC1                     	;# 
  2625  0DC2                     	;# 
  2626  0DC3                     	;# 
  2627  0DC3                     	;# 
  2628  0DC4                     	;# 
  2629  0DC5                     	;# 
  2630  0DC5                     	;# 
  2631  0DC6                     	;# 
  2632  0DC7                     	;# 
  2633  0DC7                     	;# 
  2634  0DC8                     	;# 
  2635  0DC9                     	;# 
  2636  0DC9                     	;# 
  2637  0DCA                     	;# 
  2638  0DCB                     	;# 
  2639  0DCC                     	;# 
  2640  0DCC                     	;# 
  2641  0DCD                     	;# 
  2642  0DCD                     	;# 
  2643  0DCE                     	;# 
  2644  0DCF                     	;# 
  2645  0DD0                     	;# 
  2646  0E0F                     	;# 
  2647  0E10                     	;# 
  2648  0E11                     	;# 
  2649  0E12                     	;# 
  2650  0E13                     	;# 
  2651  0E14                     	;# 
  2652  0E15                     	;# 
  2653  0E16                     	;# 
  2654  0E17                     	;# 
  2655  0E90                     	;# 
  2656  0E91                     	;# 
  2657  0E92                     	;# 
  2658  0E94                     	;# 
  2659  0E95                     	;# 
  2660  0EA0                     	;# 
  2661  0EA1                     	;# 
  2662  0EA2                     	;# 
  2663  0EA3                     	;# 
  2664  0EA4                     	;# 
  2665  0EA5                     	;# 
  2666  0FE4                     	;# 
  2667  0FE5                     	;# 
  2668  0FE6                     	;# 
  2669  0FE7                     	;# 
  2670  0FE8                     	;# 
  2671  0FE8                     	;# 
  2672  0FE9                     	;# 
  2673  0FEA                     	;# 
  2674  0FEA                     	;# 
  2675  0FEB                     	;# 
  2676  0FED                     	;# 
  2677  0FEE                     	;# 
  2678  0FEE                     	;# 
  2679  0FEF                     	;# 
  2680  0FFF                     	;# 
  2681  0000                     	;# 
  2682  0001                     	;# 
  2683  0002                     	;# 
  2684  0003                     	;# 
  2685  0004                     	;# 
  2686  0005                     	;# 
  2687  0006                     	;# 
  2688  0007                     	;# 
  2689  0008                     	;# 
  2690  0009                     	;# 
  2691  000A                     	;# 
  2692  000B                     	;# 
  2693  000C                     	;# 
  2694  000E                     	;# 
  2695  0011                     	;# 
  2696  0012                     	;# 
  2697  0013                     	;# 
  2698  0015                     	;# 
  2699  0016                     	;# 
  2700  0016                     	;# 
  2701  0017                     	;# 
  2702  0018                     	;# 
  2703  0019                     	;# 
  2704  001A                     	;# 
  2705  001B                     	;# 
  2706  001C                     	;# 
  2707  008C                     	;# 
  2708  008E                     	;# 
  2709  0091                     	;# 
  2710  0092                     	;# 
  2711  0093                     	;# 
  2712  0095                     	;# 
  2713  0096                     	;# 
  2714  0097                     	;# 
  2715  0098                     	;# 
  2716  0099                     	;# 
  2717  009A                     	;# 
  2718  009B                     	;# 
  2719  009B                     	;# 
  2720  009C                     	;# 
  2721  009D                     	;# 
  2722  009E                     	;# 
  2723  009F                     	;# 
  2724  010C                     	;# 
  2725  010E                     	;# 
  2726  0111                     	;# 
  2727  0112                     	;# 
  2728  0113                     	;# 
  2729  0114                     	;# 
  2730  0115                     	;# 
  2731  0116                     	;# 
  2732  0117                     	;# 
  2733  0118                     	;# 
  2734  0119                     	;# 
  2735  018C                     	;# 
  2736  018E                     	;# 
  2737  0191                     	;# 
  2738  0191                     	;# 
  2739  0192                     	;# 
  2740  0193                     	;# 
  2741  0193                     	;# 
  2742  0194                     	;# 
  2743  0195                     	;# 
  2744  0196                     	;# 
  2745  0197                     	;# 
  2746  0199                     	;# 
  2747  019A                     	;# 
  2748  019B                     	;# 
  2749  019B                     	;# 
  2750  019C                     	;# 
  2751  019D                     	;# 
  2752  019E                     	;# 
  2753  019F                     	;# 
  2754  020C                     	;# 
  2755  020E                     	;# 
  2756  028C                     	;# 
  2757  028E                     	;# 
  2758  030C                     	;# 
  2759  030E                     	;# 
  2760  038C                     	;# 
  2761  038E                     	;# 
  2762  0391                     	;# 
  2763  0392                     	;# 
  2764  0393                     	;# 
  2765  0397                     	;# 
  2766  0398                     	;# 
  2767  0399                     	;# 
  2768  0691                     	;# 
  2769  0692                     	;# 
  2770  0693                     	;# 
  2771  0694                     	;# 
  2772  0695                     	;# 
  2773  0D8E                     	;# 
  2774  0D8F                     	;# 
  2775  0D90                     	;# 
  2776  0D91                     	;# 
  2777  0D91                     	;# 
  2778  0D92                     	;# 
  2779  0D93                     	;# 
  2780  0D93                     	;# 
  2781  0D94                     	;# 
  2782  0D95                     	;# 
  2783  0D95                     	;# 
  2784  0D96                     	;# 
  2785  0D97                     	;# 
  2786  0D97                     	;# 
  2787  0D98                     	;# 
  2788  0D99                     	;# 
  2789  0D99                     	;# 
  2790  0D9A                     	;# 
  2791  0D9B                     	;# 
  2792  0D9C                     	;# 
  2793  0D9C                     	;# 
  2794  0D9D                     	;# 
  2795  0D9D                     	;# 
  2796  0D9E                     	;# 
  2797  0D9F                     	;# 
  2798  0DA0                     	;# 
  2799  0DA1                     	;# 
  2800  0DA1                     	;# 
  2801  0DA2                     	;# 
  2802  0DA3                     	;# 
  2803  0DA3                     	;# 
  2804  0DA4                     	;# 
  2805  0DA5                     	;# 
  2806  0DA5                     	;# 
  2807  0DA6                     	;# 
  2808  0DA7                     	;# 
  2809  0DA7                     	;# 
  2810  0DA8                     	;# 
  2811  0DA9                     	;# 
  2812  0DA9                     	;# 
  2813  0DAA                     	;# 
  2814  0DAB                     	;# 
  2815  0DAC                     	;# 
  2816  0DAC                     	;# 
  2817  0DAD                     	;# 
  2818  0DAD                     	;# 
  2819  0DAE                     	;# 
  2820  0DAF                     	;# 
  2821  0DB0                     	;# 
  2822  0DB1                     	;# 
  2823  0DB1                     	;# 
  2824  0DB2                     	;# 
  2825  0DB3                     	;# 
  2826  0DB3                     	;# 
  2827  0DB4                     	;# 
  2828  0DB5                     	;# 
  2829  0DB5                     	;# 
  2830  0DB6                     	;# 
  2831  0DB7                     	;# 
  2832  0DB7                     	;# 
  2833  0DB8                     	;# 
  2834  0DB9                     	;# 
  2835  0DB9                     	;# 
  2836  0DBA                     	;# 
  2837  0DBB                     	;# 
  2838  0DBC                     	;# 
  2839  0DBC                     	;# 
  2840  0DBD                     	;# 
  2841  0DBD                     	;# 
  2842  0DBE                     	;# 
  2843  0DBF                     	;# 
  2844  0DC0                     	;# 
  2845  0DC1                     	;# 
  2846  0DC1                     	;# 
  2847  0DC2                     	;# 
  2848  0DC3                     	;# 
  2849  0DC3                     	;# 
  2850  0DC4                     	;# 
  2851  0DC5                     	;# 
  2852  0DC5                     	;# 
  2853  0DC6                     	;# 
  2854  0DC7                     	;# 
  2855  0DC7                     	;# 
  2856  0DC8                     	;# 
  2857  0DC9                     	;# 
  2858  0DC9                     	;# 
  2859  0DCA                     	;# 
  2860  0DCB                     	;# 
  2861  0DCC                     	;# 
  2862  0DCC                     	;# 
  2863  0DCD                     	;# 
  2864  0DCD                     	;# 
  2865  0DCE                     	;# 
  2866  0DCF                     	;# 
  2867  0DD0                     	;# 
  2868  0E0F                     	;# 
  2869  0E10                     	;# 
  2870  0E11                     	;# 
  2871  0E12                     	;# 
  2872  0E13                     	;# 
  2873  0E14                     	;# 
  2874  0E15                     	;# 
  2875  0E16                     	;# 
  2876  0E17                     	;# 
  2877  0E90                     	;# 
  2878  0E91                     	;# 
  2879  0E92                     	;# 
  2880  0E94                     	;# 
  2881  0E95                     	;# 
  2882  0EA0                     	;# 
  2883  0EA1                     	;# 
  2884  0EA2                     	;# 
  2885  0EA3                     	;# 
  2886  0EA4                     	;# 
  2887  0EA5                     	;# 
  2888  0FE4                     	;# 
  2889  0FE5                     	;# 
  2890  0FE6                     	;# 
  2891  0FE7                     	;# 
  2892  0FE8                     	;# 
  2893  0FE8                     	;# 
  2894  0FE9                     	;# 
  2895  0FEA                     	;# 
  2896  0FEA                     	;# 
  2897  0FEB                     	;# 
  2898  0FED                     	;# 
  2899  0FEE                     	;# 
  2900  0FEE                     	;# 
  2901  0FEF                     	;# 
  2902  0FFF                     	;# 
  2903  0000                     	;# 
  2904  0001                     	;# 
  2905  0002                     	;# 
  2906  0003                     	;# 
  2907  0004                     	;# 
  2908  0005                     	;# 
  2909  0006                     	;# 
  2910  0007                     	;# 
  2911  0008                     	;# 
  2912  0009                     	;# 
  2913  000A                     	;# 
  2914  000B                     	;# 
  2915  000C                     	;# 
  2916  000E                     	;# 
  2917  0011                     	;# 
  2918  0012                     	;# 
  2919  0013                     	;# 
  2920  0015                     	;# 
  2921  0016                     	;# 
  2922  0016                     	;# 
  2923  0017                     	;# 
  2924  0018                     	;# 
  2925  0019                     	;# 
  2926  001A                     	;# 
  2927  001B                     	;# 
  2928  001C                     	;# 
  2929  008C                     	;# 
  2930  008E                     	;# 
  2931  0091                     	;# 
  2932  0092                     	;# 
  2933  0093                     	;# 
  2934  0095                     	;# 
  2935  0096                     	;# 
  2936  0097                     	;# 
  2937  0098                     	;# 
  2938  0099                     	;# 
  2939  009A                     	;# 
  2940  009B                     	;# 
  2941  009B                     	;# 
  2942  009C                     	;# 
  2943  009D                     	;# 
  2944  009E                     	;# 
  2945  009F                     	;# 
  2946  010C                     	;# 
  2947  010E                     	;# 
  2948  0111                     	;# 
  2949  0112                     	;# 
  2950  0113                     	;# 
  2951  0114                     	;# 
  2952  0115                     	;# 
  2953  0116                     	;# 
  2954  0117                     	;# 
  2955  0118                     	;# 
  2956  0119                     	;# 
  2957  018C                     	;# 
  2958  018E                     	;# 
  2959  0191                     	;# 
  2960  0191                     	;# 
  2961  0192                     	;# 
  2962  0193                     	;# 
  2963  0193                     	;# 
  2964  0194                     	;# 
  2965  0195                     	;# 
  2966  0196                     	;# 
  2967  0197                     	;# 
  2968  0199                     	;# 
  2969  019A                     	;# 
  2970  019B                     	;# 
  2971  019B                     	;# 
  2972  019C                     	;# 
  2973  019D                     	;# 
  2974  019E                     	;# 
  2975  019F                     	;# 
  2976  020C                     	;# 
  2977  020E                     	;# 
  2978  028C                     	;# 
  2979  028E                     	;# 
  2980  030C                     	;# 
  2981  030E                     	;# 
  2982  038C                     	;# 
  2983  038E                     	;# 
  2984  0391                     	;# 
  2985  0392                     	;# 
  2986  0393                     	;# 
  2987  0397                     	;# 
  2988  0398                     	;# 
  2989  0399                     	;# 
  2990  0691                     	;# 
  2991  0692                     	;# 
  2992  0693                     	;# 
  2993  0694                     	;# 
  2994  0695                     	;# 
  2995  0D8E                     	;# 
  2996  0D8F                     	;# 
  2997  0D90                     	;# 
  2998  0D91                     	;# 
  2999  0D91                     	;# 
  3000  0D92                     	;# 
  3001  0D93                     	;# 
  3002  0D93                     	;# 
  3003  0D94                     	;# 
  3004  0D95                     	;# 
  3005  0D95                     	;# 
  3006  0D96                     	;# 
  3007  0D97                     	;# 
  3008  0D97                     	;# 
  3009  0D98                     	;# 
  3010  0D99                     	;# 
  3011  0D99                     	;# 
  3012  0D9A                     	;# 
  3013  0D9B                     	;# 
  3014  0D9C                     	;# 
  3015  0D9C                     	;# 
  3016  0D9D                     	;# 
  3017  0D9D                     	;# 
  3018  0D9E                     	;# 
  3019  0D9F                     	;# 
  3020  0DA0                     	;# 
  3021  0DA1                     	;# 
  3022  0DA1                     	;# 
  3023  0DA2                     	;# 
  3024  0DA3                     	;# 
  3025  0DA3                     	;# 
  3026  0DA4                     	;# 
  3027  0DA5                     	;# 
  3028  0DA5                     	;# 
  3029  0DA6                     	;# 
  3030  0DA7                     	;# 
  3031  0DA7                     	;# 
  3032  0DA8                     	;# 
  3033  0DA9                     	;# 
  3034  0DA9                     	;# 
  3035  0DAA                     	;# 
  3036  0DAB                     	;# 
  3037  0DAC                     	;# 
  3038  0DAC                     	;# 
  3039  0DAD                     	;# 
  3040  0DAD                     	;# 
  3041  0DAE                     	;# 
  3042  0DAF                     	;# 
  3043  0DB0                     	;# 
  3044  0DB1                     	;# 
  3045  0DB1                     	;# 
  3046  0DB2                     	;# 
  3047  0DB3                     	;# 
  3048  0DB3                     	;# 
  3049  0DB4                     	;# 
  3050  0DB5                     	;# 
  3051  0DB5                     	;# 
  3052  0DB6                     	;# 
  3053  0DB7                     	;# 
  3054  0DB7                     	;# 
  3055  0DB8                     	;# 
  3056  0DB9                     	;# 
  3057  0DB9                     	;# 
  3058  0DBA                     	;# 
  3059  0DBB                     	;# 
  3060  0DBC                     	;# 
  3061  0DBC                     	;# 
  3062  0DBD                     	;# 
  3063  0DBD                     	;# 
  3064  0DBE                     	;# 
  3065  0DBF                     	;# 
  3066  0DC0                     	;# 
  3067  0DC1                     	;# 
  3068  0DC1                     	;# 
  3069  0DC2                     	;# 
  3070  0DC3                     	;# 
  3071  0DC3                     	;# 
  3072  0DC4                     	;# 
  3073  0DC5                     	;# 
  3074  0DC5                     	;# 
  3075  0DC6                     	;# 
  3076  0DC7                     	;# 
  3077  0DC7                     	;# 
  3078  0DC8                     	;# 
  3079  0DC9                     	;# 
  3080  0DC9                     	;# 
  3081  0DCA                     	;# 
  3082  0DCB                     	;# 
  3083  0DCC                     	;# 
  3084  0DCC                     	;# 
  3085  0DCD                     	;# 
  3086  0DCD                     	;# 
  3087  0DCE                     	;# 
  3088  0DCF                     	;# 
  3089  0DD0                     	;# 
  3090  0E0F                     	;# 
  3091  0E10                     	;# 
  3092  0E11                     	;# 
  3093  0E12                     	;# 
  3094  0E13                     	;# 
  3095  0E14                     	;# 
  3096  0E15                     	;# 
  3097  0E16                     	;# 
  3098  0E17                     	;# 
  3099  0E90                     	;# 
  3100  0E91                     	;# 
  3101  0E92                     	;# 
  3102  0E94                     	;# 
  3103  0E95                     	;# 
  3104  0EA0                     	;# 
  3105  0EA1                     	;# 
  3106  0EA2                     	;# 
  3107  0EA3                     	;# 
  3108  0EA4                     	;# 
  3109  0EA5                     	;# 
  3110  0FE4                     	;# 
  3111  0FE5                     	;# 
  3112  0FE6                     	;# 
  3113  0FE7                     	;# 
  3114  0FE8                     	;# 
  3115  0FE8                     	;# 
  3116  0FE9                     	;# 
  3117  0FEA                     	;# 
  3118  0FEA                     	;# 
  3119  0FEB                     	;# 
  3120  0FED                     	;# 
  3121  0FEE                     	;# 
  3122  0FEE                     	;# 
  3123  0FEF                     	;# 
  3124  0FFF                     	;# 
  3125  0000                     	;# 
  3126  0001                     	;# 
  3127  0002                     	;# 
  3128  0003                     	;# 
  3129  0004                     	;# 
  3130  0005                     	;# 
  3131  0006                     	;# 
  3132  0007                     	;# 
  3133  0008                     	;# 
  3134  0009                     	;# 
  3135  000A                     	;# 
  3136  000B                     	;# 
  3137  000C                     	;# 
  3138  000E                     	;# 
  3139  0011                     	;# 
  3140  0012                     	;# 
  3141  0013                     	;# 
  3142  0015                     	;# 
  3143  0016                     	;# 
  3144  0016                     	;# 
  3145  0017                     	;# 
  3146  0018                     	;# 
  3147  0019                     	;# 
  3148  001A                     	;# 
  3149  001B                     	;# 
  3150  001C                     	;# 
  3151  008C                     	;# 
  3152  008E                     	;# 
  3153  0091                     	;# 
  3154  0092                     	;# 
  3155  0093                     	;# 
  3156  0095                     	;# 
  3157  0096                     	;# 
  3158  0097                     	;# 
  3159  0098                     	;# 
  3160  0099                     	;# 
  3161  009A                     	;# 
  3162  009B                     	;# 
  3163  009B                     	;# 
  3164  009C                     	;# 
  3165  009D                     	;# 
  3166  009E                     	;# 
  3167  009F                     	;# 
  3168  010C                     	;# 
  3169  010E                     	;# 
  3170  0111                     	;# 
  3171  0112                     	;# 
  3172  0113                     	;# 
  3173  0114                     	;# 
  3174  0115                     	;# 
  3175  0116                     	;# 
  3176  0117                     	;# 
  3177  0118                     	;# 
  3178  0119                     	;# 
  3179  018C                     	;# 
  3180  018E                     	;# 
  3181  0191                     	;# 
  3182  0191                     	;# 
  3183  0192                     	;# 
  3184  0193                     	;# 
  3185  0193                     	;# 
  3186  0194                     	;# 
  3187  0195                     	;# 
  3188  0196                     	;# 
  3189  0197                     	;# 
  3190  0199                     	;# 
  3191  019A                     	;# 
  3192  019B                     	;# 
  3193  019B                     	;# 
  3194  019C                     	;# 
  3195  019D                     	;# 
  3196  019E                     	;# 
  3197  019F                     	;# 
  3198  020C                     	;# 
  3199  020E                     	;# 
  3200  028C                     	;# 
  3201  028E                     	;# 
  3202  030C                     	;# 
  3203  030E                     	;# 
  3204  038C                     	;# 
  3205  038E                     	;# 
  3206  0391                     	;# 
  3207  0392                     	;# 
  3208  0393                     	;# 
  3209  0397                     	;# 
  3210  0398                     	;# 
  3211  0399                     	;# 
  3212  0691                     	;# 
  3213  0692                     	;# 
  3214  0693                     	;# 
  3215  0694                     	;# 
  3216  0695                     	;# 
  3217  0D8E                     	;# 
  3218  0D8F                     	;# 
  3219  0D90                     	;# 
  3220  0D91                     	;# 
  3221  0D91                     	;# 
  3222  0D92                     	;# 
  3223  0D93                     	;# 
  3224  0D93                     	;# 
  3225  0D94                     	;# 
  3226  0D95                     	;# 
  3227  0D95                     	;# 
  3228  0D96                     	;# 
  3229  0D97                     	;# 
  3230  0D97                     	;# 
  3231  0D98                     	;# 
  3232  0D99                     	;# 
  3233  0D99                     	;# 
  3234  0D9A                     	;# 
  3235  0D9B                     	;# 
  3236  0D9C                     	;# 
  3237  0D9C                     	;# 
  3238  0D9D                     	;# 
  3239  0D9D                     	;# 
  3240  0D9E                     	;# 
  3241  0D9F                     	;# 
  3242  0DA0                     	;# 
  3243  0DA1                     	;# 
  3244  0DA1                     	;# 
  3245  0DA2                     	;# 
  3246  0DA3                     	;# 
  3247  0DA3                     	;# 
  3248  0DA4                     	;# 
  3249  0DA5                     	;# 
  3250  0DA5                     	;# 
  3251  0DA6                     	;# 
  3252  0DA7                     	;# 
  3253  0DA7                     	;# 
  3254  0DA8                     	;# 
  3255  0DA9                     	;# 
  3256  0DA9                     	;# 
  3257  0DAA                     	;# 
  3258  0DAB                     	;# 
  3259  0DAC                     	;# 
  3260  0DAC                     	;# 
  3261  0DAD                     	;# 
  3262  0DAD                     	;# 
  3263  0DAE                     	;# 
  3264  0DAF                     	;# 
  3265  0DB0                     	;# 
  3266  0DB1                     	;# 
  3267  0DB1                     	;# 
  3268  0DB2                     	;# 
  3269  0DB3                     	;# 
  3270  0DB3                     	;# 
  3271  0DB4                     	;# 
  3272  0DB5                     	;# 
  3273  0DB5                     	;# 
  3274  0DB6                     	;# 
  3275  0DB7                     	;# 
  3276  0DB7                     	;# 
  3277  0DB8                     	;# 
  3278  0DB9                     	;# 
  3279  0DB9                     	;# 
  3280  0DBA                     	;# 
  3281  0DBB                     	;# 
  3282  0DBC                     	;# 
  3283  0DBC                     	;# 
  3284  0DBD                     	;# 
  3285  0DBD                     	;# 
  3286  0DBE                     	;# 
  3287  0DBF                     	;# 
  3288  0DC0                     	;# 
  3289  0DC1                     	;# 
  3290  0DC1                     	;# 
  3291  0DC2                     	;# 
  3292  0DC3                     	;# 
  3293  0DC3                     	;# 
  3294  0DC4                     	;# 
  3295  0DC5                     	;# 
  3296  0DC5                     	;# 
  3297  0DC6                     	;# 
  3298  0DC7                     	;# 
  3299  0DC7                     	;# 
  3300  0DC8                     	;# 
  3301  0DC9                     	;# 
  3302  0DC9                     	;# 
  3303  0DCA                     	;# 
  3304  0DCB                     	;# 
  3305  0DCC                     	;# 
  3306  0DCC                     	;# 
  3307  0DCD                     	;# 
  3308  0DCD                     	;# 
  3309  0DCE                     	;# 
  3310  0DCF                     	;# 
  3311  0DD0                     	;# 
  3312  0E0F                     	;# 
  3313  0E10                     	;# 
  3314  0E11                     	;# 
  3315  0E12                     	;# 
  3316  0E13                     	;# 
  3317  0E14                     	;# 
  3318  0E15                     	;# 
  3319  0E16                     	;# 
  3320  0E17                     	;# 
  3321  0E90                     	;# 
  3322  0E91                     	;# 
  3323  0E92                     	;# 
  3324  0E94                     	;# 
  3325  0E95                     	;# 
  3326  0EA0                     	;# 
  3327  0EA1                     	;# 
  3328  0EA2                     	;# 
  3329  0EA3                     	;# 
  3330  0EA4                     	;# 
  3331  0EA5                     	;# 
  3332  0FE4                     	;# 
  3333  0FE5                     	;# 
  3334  0FE6                     	;# 
  3335  0FE7                     	;# 
  3336  0FE8                     	;# 
  3337  0FE8                     	;# 
  3338  0FE9                     	;# 
  3339  0FEA                     	;# 
  3340  0FEA                     	;# 
  3341  0FEB                     	;# 
  3342  0FED                     	;# 
  3343  0FEE                     	;# 
  3344  0FEE                     	;# 
  3345  0FEF                     	;# 
  3346  0FFF                     	;# 
  3347                           
  3348 ;; Function _TMR2_DefaultInterruptHandler is unused but had its address taken
  3349  0000                     
  3350                           	psect	idataBANK0
  3351  013A                     __pidataBANK0:	
  3352                           
  3353                           ;initializer for _bbmax
  3354  013A  34C0               	retlw	192
  3355  013B  34F2               	retlw	242
  3356  013C  34FC               	retlw	252
  3357  013D  34FF               	retlw	255
  3358                           
  3359                           ;initializer for _pidU
  3360  013E  3414               	retlw	20
  3361  013F  3400               	retlw	0
  3362  0140  3400               	retlw	0
  3363  0141  3400               	retlw	0
  3364                           
  3365                           ;initializer for _resRc
  3366  0142  3410               	retlw	16
  3367  0143  3427               	retlw	39
  3368  0144  3400               	retlw	0
  3369  0145  3400               	retlw	0
  3370                           
  3371                           ;initializer for _resRs
  3372  0146  3410               	retlw	16
  3373  0147  3427               	retlw	39
  3374  0148  3400               	retlw	0
  3375  0149  3400               	retlw	0
  3376                           
  3377                           ;initializer for _pwm2DutyForVout
  3378  014A  3410               	retlw	16
  3379  014B  3400               	retlw	0
  3380                           
  3381                           	psect	idataBANK1
  3382  0164                     __pidataBANK1:	
  3383                           
  3384                           ;initializer for _bbmin
  3385  0164  3440               	retlw	64
  3386  0165  340D               	retlw	13
  3387  0166  3403               	retlw	3
  3388  0167  3400               	retlw	0
  3389  0FFF                     _isRunInBoot	set	4095
  3390  000B                     _INTCONbits	set	11
  3391  0011                     _PIR1bits	set	17
  3392  001B                     _PR2	set	27
  3393  001C                     _T2CON	set	28
  3394  001C                     _T2CONbits	set	28
  3395  001A                     _TMR2	set	26
  3396  005F                     _GIE	set	95
  3397  009D                     _ADCON0	set	157
  3398  009D                     _ADCON0bits	set	157
  3399  009E                     _ADCON1	set	158
  3400  009F                     _ADCON2	set	159
  3401  009C                     _ADRESH	set	156
  3402  009B                     _ADRESL	set	155
  3403  0095                     _OPTION_REGbits	set	149
  3404  0099                     _OSCCON	set	153
  3405  0098                     _OSCTUNE	set	152
  3406  0091                     _PIE1bits	set	145
  3407  008C                     _TRISA	set	140
  3408  008E                     _TRISC	set	142
  3409  0097                     _WDTCON	set	151
  3410  0117                     _FVRCON	set	279
  3411  0117                     _FVRCONbits	set	279
  3412  010C                     _LATA	set	268
  3413  010E                     _LATC	set	270
  3414  018C                     _ANSELA	set	396
  3415  018E                     _ANSELC	set	398
  3416  019F                     _BAUDCON	set	415
  3417  019D                     _RCSTA	set	413
  3418  019C                     _SPBRGH	set	412
  3419  019B                     _SPBRGL	set	411
  3420  019A                     _TXREG	set	410
  3421  019E                     _TXSTA	set	414
  3422  019E                     _TXSTAbits	set	414
  3423  020C                     _WPUA	set	524
  3424  020E                     _WPUC	set	526
  3425  028C                     _ODCONA	set	652
  3426  028E                     _ODCONC	set	654
  3427  0D9E                     _PWM1CLKCON	set	3486
  3428  0D9B                     _PWM1CON	set	3483
  3429  0D9B                     _PWM1CONbits	set	3483
  3430  0D94                     _PWM1DCH	set	3476
  3431  0D93                     _PWM1DCL	set	3475
  3432  0D9C                     _PWM1INTE	set	3484
  3433  0D9D                     _PWM1INTF	set	3485
  3434  0D9F                     _PWM1LDCON	set	3487
  3435  0DA0                     _PWM1OFCON	set	3488
  3436  0D98                     _PWM1OFH	set	3480
  3437  0D97                     _PWM1OFL	set	3479
  3438  0D92                     _PWM1PHH	set	3474
  3439  0D91                     _PWM1PHL	set	3473
  3440  0D96                     _PWM1PRH	set	3478
  3441  0D95                     _PWM1PRL	set	3477
  3442  0D9A                     _PWM1TMRH	set	3482
  3443  0D99                     _PWM1TMRL	set	3481
  3444  0DAE                     _PWM2CLKCON	set	3502
  3445  0DAB                     _PWM2CON	set	3499
  3446  0DAB                     _PWM2CONbits	set	3499
  3447  0DA4                     _PWM2DCH	set	3492
  3448  0DA3                     _PWM2DCL	set	3491
  3449  0DAC                     _PWM2INTE	set	3500
  3450  0DAD                     _PWM2INTF	set	3501
  3451  0DAF                     _PWM2LDCON	set	3503
  3452  0DB0                     _PWM2OFCON	set	3504
  3453  0DA8                     _PWM2OFH	set	3496
  3454  0DA7                     _PWM2OFL	set	3495
  3455  0DA2                     _PWM2PHH	set	3490
  3456  0DA1                     _PWM2PHL	set	3489
  3457  0DA6                     _PWM2PRH	set	3494
  3458  0DA5                     _PWM2PRL	set	3493
  3459  0DAA                     _PWM2TMRH	set	3498
  3460  0DA9                     _PWM2TMRL	set	3497
  3461  0E0F                     _PPSLOCK	set	3599
  3462  0E0F                     _PPSLOCKbits	set	3599
  3463  0E15                     _RXPPSbits	set	3605
  3464  0E94                     _RA4PPSbits	set	3732
  3465  0E95                     _RA5PPSbits	set	3733
  3466  0EA5                     _RC5PPSbits	set	3749
  3467                           
  3468                           	psect	stringtext
  3469  00FD                     __pstringtext:	
  3470  00FD                     STR_2:	
  3471  00FD  3409               	retlw	9
  3472  00FE  3472               	retlw	114	;'r'
  3473  00FF  3465               	retlw	101	;'e'
  3474  0100  3473               	retlw	115	;'s'
  3475  0101  3452               	retlw	82	;'R'
  3476  0102  3473               	retlw	115	;'s'
  3477  0103  343D               	retlw	61	;'='
  3478  0104  3400               	retlw	0
  3479  0105                     STR_4:	
  3480  0105  3409               	retlw	9
  3481  0106  3470               	retlw	112	;'p'
  3482  0107  3477               	retlw	119	;'w'
  3483  0108  346D               	retlw	109	;'m'
  3484  0109  3431               	retlw	49	;'1'
  3485  010A  343D               	retlw	61	;'='
  3486  010B  3400               	retlw	0
  3487  010C                     STR_5:	
  3488  010C  3409               	retlw	9
  3489  010D  3470               	retlw	112	;'p'
  3490  010E  3477               	retlw	119	;'w'
  3491  010F  346D               	retlw	109	;'m'
  3492  0110  3432               	retlw	50	;'2'
  3493  0111  343D               	retlw	61	;'='
  3494  0112  3400               	retlw	0
  3495  0113                     STR_1:	
  3496  0113  3472               	retlw	114	;'r'
  3497  0114  3465               	retlw	101	;'e'
  3498  0115  3473               	retlw	115	;'s'
  3499  0116  3452               	retlw	82	;'R'
  3500  0117  3463               	retlw	99	;'c'
  3501  0118  343D               	retlw	61	;'='
  3502  0119  3400               	retlw	0
  3503  011A                     STR_3:	
  3504  011A  3409               	retlw	9
  3505  011B  3469               	retlw	105	;'i'
  3506  011C  3444               	retlw	68	;'D'
  3507  011D  3472               	retlw	114	;'r'
  3508  011E  3476               	retlw	118	;'v'
  3509  011F  343D               	retlw	61	;'='
  3510  0120  3400               	retlw	0
  3511  0121                     STR_6:	
  3512  0121  340D               	retlw	13
  3513  0122  340A               	retlw	10
  3514  0123  3400               	retlw	0
  3515                           
  3516                           ; #config settings
  3517  0000                     
  3518                           	psect	cinit
  3519  0803                     start_initialization:	
  3520  0803                     __initialization:	
  3521  0803  3044               	movlw	low __pbssBANK0
  3522                           
  3523                           ; Clear objects allocated to COMMON
  3524  0804  01FD               	clrf	__pbssCOMMON& (0+127)
  3525                           
  3526                           ; Clear objects allocated to BANK0
  3527  0805  0084               	movwf	4
  3528  0806  3000               	movlw	high __pbssBANK0
  3529  0807  0085               	movwf	5
  3530  0808  301A               	movlw	26
  3531  0809  3181  2158  3188   	fcall	clear_ram0
  3532                           
  3533                           ; Clear objects allocated to BANK1
  3534  080C  30A0               	movlw	low __pbssBANK1
  3535  080D  0084               	movwf	4
  3536  080E  3000               	movlw	high __pbssBANK1
  3537  080F  0085               	movwf	5
  3538  0810  3038               	movlw	56
  3539  0811  3181  2158  3188   	fcall	clear_ram0
  3540                           
  3541                           ; Clear objects allocated to BANK2
  3542  0814  3020               	movlw	low __pbssBANK2
  3543  0815  0084               	movwf	4
  3544  0816  3001               	movlw	high __pbssBANK2
  3545  0817  0085               	movwf	5
  3546  0818  3040               	movlw	64
  3547  0819  3181  2158  3188   	fcall	clear_ram0
  3548                           
  3549                           ; Clear objects allocated to BANK3
  3550  081C  30A0               	movlw	low __pbssBANK3
  3551  081D  0084               	movwf	4
  3552  081E  3001               	movlw	high __pbssBANK3
  3553  081F  0085               	movwf	5
  3554  0820  3040               	movlw	64
  3555  0821  3181  2158  3188   	fcall	clear_ram0
  3556                           
  3557                           ; Initialize objects allocated to BANK0
  3558  0824  303A               	movlw	low __pidataBANK0
  3559  0825  0084               	movwf	4
  3560  0826  3081               	movlw	(high __pidataBANK0)| (0+128)
  3561  0827  0085               	movwf	5
  3562  0828  305E               	movlw	low __pdataBANK0
  3563  0829  0086               	movwf	6
  3564  082A  3000               	movlw	high __pdataBANK0
  3565  082B  0087               	movwf	7
  3566  082C  3012               	movlw	18
  3567  082D  3181  215E  3188   	fcall	init_ram
  3568                           
  3569                           ; Initialize objects allocated to BANK1
  3570  0830  3064               	movlw	low __pidataBANK1
  3571  0831  0084               	movwf	4
  3572  0832  3081               	movlw	(high __pidataBANK1)| (0+128)
  3573  0833  0085               	movwf	5
  3574  0834  30D8               	movlw	low __pdataBANK1
  3575  0835  0086               	movwf	6
  3576  0836  3000               	movlw	high __pdataBANK1
  3577  0837  0087               	movwf	7
  3578  0838  3004               	movlw	4
  3579  0839  3181  215E  3188   	fcall	init_ram
  3580  083C                     end_of_initialization:	
  3581                           ;End of C runtime variable initialization code
  3582                           
  3583  083C                     __end_of__initialization:	
  3584  083C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3585  083D  0020               	movlb	0
  3586  083E  283F               	ljmp	_main	;jump to C main() function
  3587  083F                     __pmaintext:	
  3588 ;;
  3589 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3590 ;;
  3591 ;; *************** function _main *****************
  3592 ;; Defined at:
  3593 ;;		line 57 in file "src/app/main.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;		None
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;		None
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  1    wreg      void 
  3600 ;; Registers used:
  3601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3602 ;; Tracked objects:
  3603 ;;		On entry : B1F/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3607 ;;      Params:         0       0       0       0       0       0       0       0
  3608 ;;      Locals:         0       0       0       0       0       0       0       0
  3609 ;;      Temps:          0       0       0       0       0       0       0       0
  3610 ;;      Totals:         0       0       0       0       0       0       0       0
  3611 ;;Total ram usage:        0 bytes
  3612 ;; Hardware stack levels required when called:    4
  3613 ;; This function calls:
  3614 ;;		_PWM1_Start
  3615 ;;		_SYSTEM_Initialize
  3616 ;;		_adc_sample
  3617 ;;		_cal_voout_pwm_duty
  3618 ;;		_calc_current_rs_avg
  3619 ;;		_calc_temp_rc
  3620 ;;		_calc_temp_rs
  3621 ;;		_m_int_2_str_ex
  3622 ;;		_pid_b_b_process
  3623 ;;		_pid_run_process
  3624 ;;		_set_vout_pwm2_duty
  3625 ;;		_uart_send_str
  3626 ;; This function is called by:
  3627 ;;		Startup code after reset
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           
  3632                           ;psect for function _main
  3633  083F                     _main:	
  3634                           
  3635                           ;main.c: 59: __nop();
  3636                           
  3637                           ;incstack = 0
  3638                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3639  083F  0000               	nop
  3640                           
  3641                           ;main.c: 60: isRunInBoot=0xaa;
  3642  0840  30AA               	movlw	170
  3643  0841  003F               	movlb	31	; select bank31
  3644  0842  00FF               	movwf	127	;volatile
  3645                           
  3646                           ;main.c: 61: SYSTEM_Initialize();
  3647  0843  2211  3188         	fcall	_SYSTEM_Initialize
  3648  0845  178B               	bsf	11,7	;volatile
  3649  0846  170B               	bsf	11,6	;volatile
  3650                           
  3651                           ;main.c: 63: PWM1_Start();
  3652  0847  220E  3188         	fcall	_PWM1_Start
  3653  0849                     l2502:	
  3654                           
  3655                           ;main.c: 66: {
  3656                           ;main.c: 67: if(Event & (1<<1)){
  3657  0849  1CFD               	btfss	_Event,1	;volatile
  3658  084A  28B5               	goto	l2532
  3659                           
  3660                           ;main.c: 68: Event &= ~(1<<1);
  3661  084B  10FD               	bcf	_Event,1	;volatile
  3662  084C  3040               	movlw	64
  3663                           
  3664                           ;main.c: 69: rtAdcValueRsLo=adc_sample(channel_AN6,1,64);
  3665  084D  01F2               	clrf	adc_sample@gfvr
  3666  084E  0AF2               	incf	adc_sample@gfvr,f
  3667  084F  00F3               	movwf	adc_sample@num
  3668  0850  3006               	movlw	6
  3669  0851  215B  3188         	fcall	_adc_sample
  3670  0853  0873               	movf	?_adc_sample+1,w
  3671  0854  0020               	movlb	0	; select bank0
  3672  0855  00D5               	movwf	_rtAdcValueRsLo+1
  3673  0856  0872               	movf	?_adc_sample,w
  3674  0857  00D4               	movwf	_rtAdcValueRsLo
  3675  0858  3003               	movlw	3
  3676                           
  3677                           ;main.c: 70: rtAdcValueRsLo>>=1;
  3678  0859  36D5               	lsrf	_rtAdcValueRsLo+1,f
  3679  085A  0CD4               	rrf	_rtAdcValueRsLo,f
  3680                           
  3681                           ;main.c: 71: rtAdcValueRsHi=adc_sample(channel_AN5,3,64);
  3682  085B  00F2               	movwf	adc_sample@gfvr
  3683  085C  3040               	movlw	64
  3684  085D  00F3               	movwf	adc_sample@num
  3685  085E  3005               	movlw	5
  3686  085F  215B  3188         	fcall	_adc_sample
  3687  0861  0873               	movf	?_adc_sample+1,w
  3688  0862  0020               	movlb	0	; select bank0
  3689  0863  00D3               	movwf	_rtAdcValueRsHi+1
  3690  0864  0872               	movf	?_adc_sample,w
  3691  0865  00D2               	movwf	_rtAdcValueRsHi
  3692  0866  3003               	movlw	3
  3693                           
  3694                           ;main.c: 72: rtAdcValueRsHi>>=1;
  3695  0867  36D3               	lsrf	_rtAdcValueRsHi+1,f
  3696  0868  0CD2               	rrf	_rtAdcValueRsHi,f
  3697                           
  3698                           ;main.c: 74: rtAdcValueRcLo=adc_sample(channel_AN4,3,8);
  3699  0869  00F2               	movwf	adc_sample@gfvr
  3700  086A  3008               	movlw	8
  3701  086B  00F3               	movwf	adc_sample@num
  3702  086C  3004               	movlw	4
  3703  086D  215B  3188         	fcall	_adc_sample
  3704  086F  0873               	movf	?_adc_sample+1,w
  3705  0870  0020               	movlb	0	; select bank0
  3706  0871  00D1               	movwf	_rtAdcValueRcLo+1
  3707  0872  0872               	movf	?_adc_sample,w
  3708  0873  00D0               	movwf	_rtAdcValueRcLo
  3709                           
  3710                           ;main.c: 75: rtAdcValueRcHi=adc_sample(channel_AN2,3,8);
  3711  0874  3003               	movlw	3
  3712  0875  00F2               	movwf	adc_sample@gfvr
  3713  0876  3008               	movlw	8
  3714  0877  00F3               	movwf	adc_sample@num
  3715  0878  3002               	movlw	2
  3716  0879  215B  3188         	fcall	_adc_sample
  3717  087B  0873               	movf	?_adc_sample+1,w
  3718  087C  0020               	movlb	0	; select bank0
  3719  087D  00CF               	movwf	_rtAdcValueRcHi+1
  3720  087E  0872               	movf	?_adc_sample,w
  3721  087F  00CE               	movwf	_rtAdcValueRcHi
  3722                           
  3723                           ;main.c: 77: rtAdcValueVoFb=adc_sample(channel_AN7,3,8);
  3724  0880  3003               	movlw	3
  3725  0881  00F2               	movwf	adc_sample@gfvr
  3726  0882  3008               	movlw	8
  3727  0883  00F3               	movwf	adc_sample@num
  3728  0884  3007               	movlw	7
  3729  0885  215B  3188         	fcall	_adc_sample
  3730                           
  3731                           ;main.c: 78: resRc=calc_temp_rc();
  3732  0887  26BD               	fcall	_calc_temp_rc
  3733  0888  0823               	movf	?_calc_temp_rc+3,w
  3734  0889  00E9               	movwf	_resRc+3
  3735  088A  0822               	movf	?_calc_temp_rc+2,w
  3736  088B  00E8               	movwf	_resRc+2
  3737  088C  0821               	movf	?_calc_temp_rc+1,w
  3738  088D  00E7               	movwf	_resRc+1
  3739  088E  0820               	movf	?_calc_temp_rc,w
  3740  088F  00E6               	movwf	_resRc
  3741                           
  3742                           ;main.c: 79: resRs=calc_temp_rs();
  3743  0890  3180  2028  3188   	fcall	_calc_temp_rs
  3744  0893  0823               	movf	?_calc_temp_rs+3,w
  3745  0894  00ED               	movwf	_resRs+3
  3746  0895  0822               	movf	?_calc_temp_rs+2,w
  3747  0896  00EC               	movwf	_resRs+2
  3748  0897  0821               	movf	?_calc_temp_rs+1,w
  3749  0898  00EB               	movwf	_resRs+1
  3750  0899  0820               	movf	?_calc_temp_rs,w
  3751  089A  00EA               	movwf	_resRs
  3752                           
  3753                           ;main.c: 80: rtAdcValueRsLoAvg=calc_current_rs_avg();
  3754  089B  26B8  3188         	fcall	_calc_current_rs_avg
  3755  089D  0871               	movf	?_calc_current_rs_avg+1,w
  3756  089E  00D7               	movwf	_rtAdcValueRsLoAvg+1
  3757  089F  0870               	movf	?_calc_current_rs_avg,w
  3758  08A0  00D6               	movwf	_rtAdcValueRsLoAvg
  3759                           
  3760                           ;main.c: 81: __nop();
  3761  08A1  0000               	nop
  3762                           
  3763                           ;main.c: 84: if(pidBbSm>=5){
  3764  08A2  3005               	movlw	5
  3765  08A3  0020               	movlb	0	; select bank0
  3766  08A4  025A               	subwf	_pidBbSm,w
  3767  08A5  1C03               	skipc
  3768  08A6  28B5               	goto	l2532
  3769                           
  3770                           ;main.c: 85: pid_run_process();
  3771  08A7  2268  3188         	fcall	_pid_run_process
  3772                           
  3773                           ;main.c: 86: pwm2DutyForVout=cal_voout_pwm_duty();
  3774  08A9  2600  3188         	fcall	_cal_voout_pwm_duty
  3775  08AB  0821               	movf	?_cal_voout_pwm_duty+1,w
  3776  08AC  00EF               	movwf	_pwm2DutyForVout+1
  3777  08AD  0820               	movf	?_cal_voout_pwm_duty,w
  3778  08AE  00EE               	movwf	_pwm2DutyForVout
  3779                           
  3780                           ;main.c: 87: set_vout_pwm2_duty(pwm2DutyForVout);
  3781  08AF  086F               	movf	_pwm2DutyForVout+1,w
  3782  08B0  00F3               	movwf	set_vout_pwm2_duty@duty+1
  3783  08B1  086E               	movf	_pwm2DutyForVout,w
  3784  08B2  00F2               	movwf	set_vout_pwm2_duty@duty
  3785  08B3  27E4  3188         	fcall	_set_vout_pwm2_duty
  3786  08B5                     l2532:	
  3787                           
  3788                           ;main.c: 88: }
  3789                           ;main.c: 89: }
  3790                           ;main.c: 90: if(pidBbSm<5){
  3791  08B5  3005               	movlw	5
  3792  08B6  0020               	movlb	0	; select bank0
  3793  08B7  025A               	subwf	_pidBbSm,w
  3794  08B8  1803               	skipnc
  3795  08B9  28BC               	goto	l2536
  3796                           
  3797                           ;main.c: 91: pid_b_b_process();
  3798  08BA  2367  3188         	fcall	_pid_b_b_process
  3799  08BC                     l2536:	
  3800                           
  3801                           ;main.c: 92: }
  3802                           ;main.c: 93: if(Event & (1<<3)){
  3803  08BC  1DFD               	btfss	_Event,3	;volatile
  3804  08BD  2926               	goto	l2564
  3805                           
  3806                           ;main.c: 94: Event &= ~(1<<3);
  3807  08BE  11FD               	bcf	_Event,3	;volatile
  3808                           
  3809                           ;main.c: 95: uart_send_str((uint8_t*)"resRc=");
  3810  08BF  3013               	movlw	low (STR_1| (0+32768))
  3811  08C0  00F0               	movwf	uart_send_str@str
  3812  08C1  3081               	movlw	high (STR_1| (0+32768))
  3813  08C2  00F1               	movwf	uart_send_str@str+1
  3814  08C3  2128  3188         	fcall	_uart_send_str
  3815                           
  3816                           ;main.c: 96: m_int_2_str_ex(str,resRc,sizeof(str));
  3817  08C5  0869               	movf	_resRc+3,w
  3818  08C6  00B1               	movwf	m_int_2_str_ex@x+3
  3819  08C7  0868               	movf	_resRc+2,w
  3820  08C8  00B0               	movwf	m_int_2_str_ex@x+2
  3821  08C9  0867               	movf	_resRc+1,w
  3822  08CA  00AF               	movwf	m_int_2_str_ex@x+1
  3823  08CB  0866               	movf	_resRc,w
  3824  08CC  27AD  3188         	fcall	PL12	;call to abstracted procedure
  3825  08CE  2193  3188         	fcall	_m_int_2_str_ex
  3826                           
  3827                           ;main.c: 97: uart_send_str(str);
  3828  08D0  27C6  3188         	fcall	PL20	;call to abstracted procedure
  3829  08D2  2128  3188         	fcall	_uart_send_str
  3830                           
  3831                           ;main.c: 99: uart_send_str((uint8_t*)"\tresRs=");
  3832  08D4  30FD               	movlw	low (STR_2| (0+32768))
  3833  08D5  00F0               	movwf	uart_send_str@str
  3834  08D6  3080               	movlw	high (STR_2| (0+32768))
  3835  08D7  00F1               	movwf	uart_send_str@str+1
  3836  08D8  2128  3188         	fcall	_uart_send_str
  3837                           
  3838                           ;main.c: 100: m_int_2_str_ex(str,resRs,sizeof(str));
  3839  08DA  086D               	movf	_resRs+3,w
  3840  08DB  00B1               	movwf	m_int_2_str_ex@x+3
  3841  08DC  086C               	movf	_resRs+2,w
  3842  08DD  00B0               	movwf	m_int_2_str_ex@x+2
  3843  08DE  086B               	movf	_resRs+1,w
  3844  08DF  00AF               	movwf	m_int_2_str_ex@x+1
  3845  08E0  086A               	movf	_resRs,w
  3846  08E1  27AD  3188         	fcall	PL12	;call to abstracted procedure
  3847  08E3  2193  3188         	fcall	_m_int_2_str_ex
  3848                           
  3849                           ;main.c: 101: uart_send_str(str);
  3850  08E5  27C6  3188         	fcall	PL20	;call to abstracted procedure
  3851  08E7  2128  3188         	fcall	_uart_send_str
  3852                           
  3853                           ;main.c: 103: uart_send_str((uint8_t*)"\tiDrv=");
  3854  08E9  301A               	movlw	low (STR_3| (0+32768))
  3855  08EA  00F0               	movwf	uart_send_str@str
  3856  08EB  3081               	movlw	high (STR_3| (0+32768))
  3857  08EC  00F1               	movwf	uart_send_str@str+1
  3858  08ED  2128  3188         	fcall	_uart_send_str
  3859                           
  3860                           ;main.c: 104: m_int_2_str_ex(str,rtAdcValueRsLo,sizeof(str));
  3861  08EF  0854               	movf	_rtAdcValueRsLo,w
  3862  08F0  00AE               	movwf	m_int_2_str_ex@x
  3863  08F1  0855               	movf	_rtAdcValueRsLo+1,w
  3864  08F2  279D  3188         	fcall	PL8	;call to abstracted procedure
  3865  08F4  2193  3188         	fcall	_m_int_2_str_ex
  3866                           
  3867                           ;main.c: 105: uart_send_str(str);
  3868  08F6  27C6  3188         	fcall	PL20	;call to abstracted procedure
  3869  08F8  2128  3188         	fcall	_uart_send_str
  3870                           
  3871                           ;main.c: 107: uart_send_str((uint8_t*)"\tpwm1=");
  3872  08FA  3005               	movlw	low (STR_4| (0+32768))
  3873  08FB  00F0               	movwf	uart_send_str@str
  3874  08FC  3081               	movlw	high (STR_4| (0+32768))
  3875  08FD  00F1               	movwf	uart_send_str@str+1
  3876  08FE  2128  3188         	fcall	_uart_send_str
  3877                           
  3878                           ;main.c: 108: m_int_2_str_ex(str,pidU,sizeof(str));
  3879  0900  0865               	movf	_pidU+3,w
  3880  0901  00B1               	movwf	m_int_2_str_ex@x+3
  3881  0902  0864               	movf	_pidU+2,w
  3882  0903  00B0               	movwf	m_int_2_str_ex@x+2
  3883  0904  0863               	movf	_pidU+1,w
  3884  0905  00AF               	movwf	m_int_2_str_ex@x+1
  3885  0906  0862               	movf	_pidU,w
  3886  0907  27AD  3188         	fcall	PL12	;call to abstracted procedure
  3887  0909  2193  3188         	fcall	_m_int_2_str_ex
  3888                           
  3889                           ;main.c: 109: uart_send_str(str);
  3890  090B  27C6  3188         	fcall	PL20	;call to abstracted procedure
  3891  090D  2128  3188         	fcall	_uart_send_str
  3892                           
  3893                           ;main.c: 111: uart_send_str((uint8_t*)"\tpwm2=");
  3894  090F  300C               	movlw	low (STR_5| (0+32768))
  3895  0910  00F0               	movwf	uart_send_str@str
  3896  0911  3081               	movlw	high (STR_5| (0+32768))
  3897  0912  00F1               	movwf	uart_send_str@str+1
  3898  0913  2128  3188         	fcall	_uart_send_str
  3899                           
  3900                           ;main.c: 112: m_int_2_str_ex(str,pwm2DutyForVout,sizeof(str));
  3901  0915  086E               	movf	_pwm2DutyForVout,w
  3902  0916  00AE               	movwf	m_int_2_str_ex@x
  3903  0917  086F               	movf	_pwm2DutyForVout+1,w
  3904  0918  279D  3188         	fcall	PL8	;call to abstracted procedure
  3905  091A  2193  3188         	fcall	_m_int_2_str_ex
  3906                           
  3907                           ;main.c: 113: uart_send_str(str);
  3908  091C  27C6  3188         	fcall	PL20	;call to abstracted procedure
  3909  091E  2128  3188         	fcall	_uart_send_str
  3910                           
  3911                           ;main.c: 117: uart_send_str((uint8_t*)"\r\n");
  3912  0920  3021               	movlw	low (STR_6| (0+32768))
  3913  0921  00F0               	movwf	uart_send_str@str
  3914  0922  3081               	movlw	high (STR_6| (0+32768))
  3915  0923  00F1               	movwf	uart_send_str@str+1
  3916  0924  2128  3188         	fcall	_uart_send_str
  3917  0926                     l2564:	
  3918                           
  3919                           ;main.c: 121: }
  3920                           ;main.c: 122: __nop();
  3921  0926  0000               	nop
  3922  0927  2849               	goto	l2502
  3923  0928                     __end_of_main:	
  3924  0928                     __ptext1:	
  3925 ;; *************** function _uart_send_str *****************
  3926 ;; Defined at:
  3927 ;;		line 19 in file "src/api/my_uart.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  str             2    0[COMMON] PTR unsigned char 
  3930 ;;		 -> STR_6(3), STR_5(7), STR_4(7), STR_3(7), 
  3931 ;;		 -> STR_2(8), str(16), STR_1(7), 
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;		None
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  1    wreg      void 
  3936 ;; Registers used:
  3937 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3938 ;; Tracked objects:
  3939 ;;		On entry : 1E/0
  3940 ;;		On exit  : 1F/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3943 ;;      Params:         2       0       0       0       0       0       0       0
  3944 ;;      Locals:         0       0       0       0       0       0       0       0
  3945 ;;      Temps:          1       0       0       0       0       0       0       0
  3946 ;;      Totals:         3       0       0       0       0       0       0       0
  3947 ;;Total ram usage:        3 bytes
  3948 ;; Hardware stack levels used:    1
  3949 ;; Hardware stack levels required when called:    1
  3950 ;; This function calls:
  3951 ;;		Nothing
  3952 ;; This function is called by:
  3953 ;;		_main
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           
  3958                           ;psect for function _uart_send_str
  3959  0928                     _uart_send_str:	
  3960                           
  3961                           ;my_uart.c: 22: if(!TXSTAbits.TXEN)TXSTAbits.TXEN=1;
  3962                           
  3963                           ;incstack = 0
  3964                           ; Regs used in _uart_send_str: [wreg-fsr0h+status,2+status,0+pclath]
  3965  0928  0023               	movlb	3	; select bank3
  3966  0929  1E9E               	btfss	30,5	;volatile
  3967  092A  169E               	bsf	30,5	;volatile
  3968  092B                     l459:	
  3969  092B  0020               	movlb	0	; select bank0
  3970  092C  1A11               	btfsc	17,4	;volatile
  3971  092D  2950               	goto	l2242
  3972  092E  292B               	goto	l459
  3973  092F                     l464:	
  3974  092F  0020               	movlb	0	; select bank0
  3975  0930  1E11               	btfss	17,4	;volatile
  3976  0931  292F               	goto	l464
  3977                           
  3978                           ;my_uart.c: 26: TXREG = *str;
  3979  0932  0870               	movf	uart_send_str@str,w
  3980  0933  0084               	movwf	4
  3981  0934  0871               	movf	uart_send_str@str+1,w
  3982  0935  0085               	movwf	5
  3983  0936  0800               	movf	0,w	;code access
  3984  0937  0023               	movlb	3	; select bank3
  3985  0938  009A               	movwf	26	;volatile
  3986                           
  3987                           ;my_uart.c: 27: str++;
  3988  0939  0AF0               	incf	uart_send_str@str,f
  3989  093A  1903               	skipnz
  3990  093B  0AF1               	incf	uart_send_str@str+1,f
  3991                           
  3992                           ;my_uart.c: 28: {__nop();__nop();__nop();__nop();}while(0);;
  3993  093C  0000               	nop
  3994  093D  0000               	nop
  3995  093E  0000               	nop
  3996  093F  0000               	nop
  3997                           
  3998                           ;my_uart.c: 29: {__nop();__nop();__nop();__nop();}while(0);;
  3999  0940  0000               	nop
  4000  0941  0000               	nop
  4001  0942  0000               	nop
  4002  0943  0000               	nop
  4003                           
  4004                           ;my_uart.c: 30: {__nop();__nop();__nop();__nop();}while(0);;
  4005  0944  0000               	nop
  4006  0945  0000               	nop
  4007  0946  0000               	nop
  4008  0947  0000               	nop
  4009                           
  4010                           ;my_uart.c: 31: {__nop();__nop();__nop();__nop();}while(0);;
  4011  0948  0000               	nop
  4012  0949  0000               	nop
  4013  094A  0000               	nop
  4014  094B  0000               	nop
  4015                           
  4016                           ;my_uart.c: 32: {__nop();__nop();__nop();__nop();}while(0);;
  4017  094C  0000               	nop
  4018  094D  0000               	nop
  4019  094E  0000               	nop
  4020  094F  0000               	nop
  4021  0950                     l2242:	
  4022  0950  0870               	movf	uart_send_str@str,w
  4023  0951  0084               	movwf	4
  4024  0952  0871               	movf	uart_send_str@str+1,w
  4025  0953  0085               	movwf	5
  4026  0954  0012               	moviw fsr0++
  4027  0955  1D03               	btfss	3,2
  4028  0956  292F               	goto	l464
  4029  0957                     l483:	
  4030  0957  0020               	movlb	0	; select bank0
  4031  0958  1A11               	btfsc	17,4	;volatile
  4032  0959  0008               	return
  4033  095A  2957               	goto	l483
  4034  095B                     __end_of_uart_send_str:	
  4035  095B                     __ptext19:	
  4036 ;; *************** function _adc_sample *****************
  4037 ;; Defined at:
  4038 ;;		line 74 in file "src/api/sample.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;  ch              1    wreg     unsigned char 
  4041 ;;  gfvr            1    2[COMMON] unsigned char 
  4042 ;;  num             1    3[COMMON] unsigned char 
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;  ch              1    5[COMMON] unsigned char 
  4045 ;;  t16             2    9[COMMON] unsigned int 
  4046 ;;  ret             2    6[COMMON] unsigned int 
  4047 ;;  i               1    8[COMMON] unsigned char 
  4048 ;; Return value:  Size  Location     Type
  4049 ;;                  2    2[COMMON] unsigned int 
  4050 ;; Registers used:
  4051 ;;		wreg, status,2, status,0, pclath, cstack
  4052 ;; Tracked objects:
  4053 ;;		On entry : 0/1B
  4054 ;;		On exit  : 0/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4057 ;;      Params:         2       0       0       0       0       0       0       0
  4058 ;;      Locals:         6       0       0       0       0       0       0       0
  4059 ;;      Temps:          1       0       0       0       0       0       0       0
  4060 ;;      Totals:         9       0       0       0       0       0       0       0
  4061 ;;Total ram usage:        9 bytes
  4062 ;; Hardware stack levels used:    1
  4063 ;; Hardware stack levels required when called:    2
  4064 ;; This function calls:
  4065 ;;		_adc_init
  4066 ;;		_fvr_set_gain
  4067 ;; This function is called by:
  4068 ;;		_main
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           
  4073                           ;psect for function _adc_sample
  4074  095B                     _adc_sample:	
  4075                           
  4076                           ;incstack = 0
  4077                           ; Regs used in _adc_sample: [wreg+status,2+status,0+pclath+cstack]
  4078                           ;adc_sample@ch stored from wreg
  4079  095B  00F5               	movwf	adc_sample@ch
  4080                           
  4081                           ;sample.c: 76: uint8_t i;
  4082                           ;sample.c: 77: uint16_t ret=0;
  4083  095C  01F6               	clrf	adc_sample@ret
  4084  095D  01F7               	clrf	adc_sample@ret+1
  4085                           
  4086                           ;sample.c: 80: fvr_set_gain(gfvr);
  4087  095E  0872               	movf	adc_sample@gfvr,w
  4088  095F  25EF  3188         	fcall	_fvr_set_gain
  4089                           
  4090                           ;sample.c: 81: adc_init((adc_channel_t)ch);
  4091  0961  0875               	movf	adc_sample@ch,w
  4092  0962  25E0  3188         	fcall	_adc_init
  4093                           
  4094                           ;sample.c: 82: _delay((unsigned long)((10)*(16000000/4000000.0)));
  4095  0964  300D               	movlw	13
  4096  0965  00F4               	movwf	??_adc_sample
  4097  0966                     u1357:	
  4098  0966  0BF4               	decfsz	??_adc_sample,f
  4099  0967  2966               	goto	u1357
  4100                           
  4101                           ;sample.c: 83: if(num>64)num=64;
  4102  0968  3041               	movlw	65
  4103  0969  0273               	subwf	adc_sample@num,w
  4104  096A  1C03               	skipc
  4105  096B  296E               	goto	l2266
  4106  096C  3040               	movlw	64
  4107  096D  00F3               	movwf	adc_sample@num
  4108  096E                     l2266:	
  4109                           
  4110                           ;sample.c: 84: for(i=0;i<num;i++){
  4111  096E  01F8               	clrf	adc_sample@i
  4112  096F                     l2274:	
  4113  096F  0873               	movf	adc_sample@num,w
  4114  0970  0278               	subwf	adc_sample@i,w
  4115  0971  1803               	btfsc	3,0
  4116  0972  298E               	goto	l2276
  4117                           
  4118                           ;sample.c: 85: ADCON0bits.GO_nDONE = 1;
  4119  0973  0021               	movlb	1	; select bank1
  4120  0974  149D               	bsf	29,1	;volatile
  4121  0975                     l583:	
  4122                           ;sample.c: 86: while (ADCON0bits.GO_nDONE);
  4123                           
  4124  0975  189D               	btfsc	29,1	;volatile
  4125  0976  2975               	goto	l583
  4126                           
  4127                           ;sample.c: 87: __nop();
  4128  0977  0000               	nop
  4129                           
  4130                           ;sample.c: 88: t16=ADRESH;
  4131  0978  0021               	movlb	1	; select bank1
  4132  0979  081C               	movf	28,w	;volatile
  4133  097A  00F9               	movwf	adc_sample@t16
  4134  097B  01FA               	clrf	adc_sample@t16+1
  4135                           
  4136                           ;sample.c: 89: t16<<=2;
  4137  097C  35F9               	lslf	adc_sample@t16,f
  4138  097D  0DFA               	rlf	adc_sample@t16+1,f
  4139  097E  35F9               	lslf	adc_sample@t16,f
  4140  097F  0DFA               	rlf	adc_sample@t16+1,f
  4141                           
  4142                           ;sample.c: 90: t16|=(ADRESL>>6);
  4143  0980  081B               	movf	27,w	;volatile
  4144  0981  00F4               	movwf	??_adc_sample
  4145  0982  3006               	movlw	6
  4146  0983                     u1045:	
  4147  0983  36F4               	lsrf	??_adc_sample,f
  4148  0984  0B89               	decfsz	9,f
  4149  0985  2983               	goto	u1045
  4150  0986  0874               	movf	??_adc_sample,w
  4151  0987  04F9               	iorwf	adc_sample@t16,f
  4152                           
  4153                           ;sample.c: 91: ret+=t16;
  4154  0988  0879               	movf	adc_sample@t16,w
  4155  0989  07F6               	addwf	adc_sample@ret,f
  4156  098A  087A               	movf	adc_sample@t16+1,w
  4157  098B  3DF7               	addwfc	adc_sample@ret+1,f
  4158  098C  0AF8               	incf	adc_sample@i,f
  4159  098D  296F               	goto	l2274
  4160  098E                     l2276:	
  4161                           
  4162                           ;sample.c: 94: return ret;
  4163  098E  0877               	movf	adc_sample@ret+1,w
  4164  098F  00F3               	movwf	?_adc_sample+1
  4165  0990  0876               	movf	adc_sample@ret,w
  4166  0991  00F2               	movwf	?_adc_sample
  4167  0992  0008               	return
  4168  0993                     __end_of_adc_sample:	
  4169  0993                     __ptext8:	
  4170 ;; *************** function _m_int_2_str_ex *****************
  4171 ;; Defined at:
  4172 ;;		line 140 in file "src/depend/m_string.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  buf             1    wreg     PTR unsigned char 
  4175 ;;		 -> str(16), 
  4176 ;;  x               4   14[BANK0 ] long 
  4177 ;;  ssize           2   18[BANK0 ] unsigned int 
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;  buf             1   30[BANK0 ] PTR unsigned char 
  4180 ;;		 -> str(16), 
  4181 ;;  t               4   24[BANK0 ] long 
  4182 ;;  i               1   29[BANK0 ] unsigned char 
  4183 ;;  sig             1   28[BANK0 ] unsigned char 
  4184 ;;  len             1    0        unsigned char 
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  1    wreg      void 
  4187 ;; Registers used:
  4188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4189 ;; Tracked objects:
  4190 ;;		On entry : 1F/0
  4191 ;;		On exit  : 1F/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4194 ;;      Params:         0       6       0       0       0       0       0       0
  4195 ;;      Locals:         0       7       0       0       0       0       0       0
  4196 ;;      Temps:          0       4       0       0       0       0       0       0
  4197 ;;      Totals:         0      17       0       0       0       0       0       0
  4198 ;;Total ram usage:       17 bytes
  4199 ;; Hardware stack levels used:    1
  4200 ;; Hardware stack levels required when called:    2
  4201 ;; This function calls:
  4202 ;;		___aldiv
  4203 ;;		___almod
  4204 ;;		_m_mem_cpy
  4205 ;;		_m_mem_set
  4206 ;; This function is called by:
  4207 ;;		_main
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           
  4212                           ;psect for function _m_int_2_str_ex
  4213  0993                     _m_int_2_str_ex:	
  4214                           
  4215                           ;incstack = 0
  4216                           ; Regs used in _m_int_2_str_ex: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4217                           ;m_int_2_str_ex@buf stored from wreg
  4218  0993  00BE               	movwf	m_int_2_str_ex@buf
  4219                           
  4220                           ;m_string.c: 142: int32_t t;
  4221                           ;m_string.c: 143: uint8_t len,i;
  4222                           ;m_string.c: 144: uint8_t sig=0;
  4223  0994  01BC               	clrf	m_int_2_str_ex@sig
  4224                           
  4225                           ;m_string.c: 145: if(x<0){
  4226  0995  1FB1               	btfss	m_int_2_str_ex@x+3,7
  4227  0996  29AD               	goto	l2436
  4228                           
  4229                           ;m_string.c: 146: sig=1;
  4230  0997  01BC               	clrf	m_int_2_str_ex@sig
  4231  0998  0ABC               	incf	m_int_2_str_ex@sig,f
  4232                           
  4233                           ;m_string.c: 147: x=0-x;
  4234  0999  01B4               	clrf	??_m_int_2_str_ex
  4235  099A  01B5               	clrf	??_m_int_2_str_ex+1
  4236  099B  01B6               	clrf	??_m_int_2_str_ex+2
  4237  099C  01B7               	clrf	??_m_int_2_str_ex+3
  4238  099D  082E               	movf	m_int_2_str_ex@x,w
  4239  099E  02B4               	subwf	??_m_int_2_str_ex,f
  4240  099F  082F               	movf	m_int_2_str_ex@x+1,w
  4241  09A0  3BB5               	subwfb	??_m_int_2_str_ex+1,f
  4242  09A1  0830               	movf	m_int_2_str_ex@x+2,w
  4243  09A2  3BB6               	subwfb	??_m_int_2_str_ex+2,f
  4244  09A3  0831               	movf	m_int_2_str_ex@x+3,w
  4245  09A4  3BB7               	subwfb	??_m_int_2_str_ex+3,f
  4246  09A5  0837               	movf	??_m_int_2_str_ex+3,w
  4247  09A6  00B1               	movwf	m_int_2_str_ex@x+3
  4248  09A7  0836               	movf	??_m_int_2_str_ex+2,w
  4249  09A8  00B0               	movwf	m_int_2_str_ex@x+2
  4250  09A9  0835               	movf	??_m_int_2_str_ex+1,w
  4251  09AA  00AF               	movwf	m_int_2_str_ex@x+1
  4252  09AB  0834               	movf	??_m_int_2_str_ex,w
  4253  09AC  00AE               	movwf	m_int_2_str_ex@x
  4254  09AD                     l2436:	
  4255                           
  4256                           ;m_string.c: 148: }
  4257                           ;m_string.c: 149: m_mem_set(buf,0,ssize);
  4258  09AD  01F0               	clrf	m_mem_set@x
  4259  09AE  0833               	movf	m_int_2_str_ex@ssize+1,w
  4260  09AF  00F2               	movwf	m_mem_set@len+1
  4261  09B0  0832               	movf	m_int_2_str_ex@ssize,w
  4262  09B1  00F1               	movwf	m_mem_set@len
  4263  09B2  083E               	movf	m_int_2_str_ex@buf,w
  4264  09B3  275D  3188         	fcall	_m_mem_set
  4265                           
  4266                           ;m_string.c: 150: for(i=ssize-2;i>=1;i--){
  4267  09B5  0832               	movf	m_int_2_str_ex@ssize,w
  4268  09B6  3EFE               	addlw	254
  4269  09B7  00BD               	movwf	m_int_2_str_ex@i
  4270  09B8                     l2440:	
  4271  09B8  083D               	movf	m_int_2_str_ex@i,w
  4272  09B9  1903               	btfsc	3,2
  4273  09BA  29FA               	goto	l2458
  4274                           
  4275                           ;m_string.c: 151: t=x%10;
  4276  09BB  300A               	movlw	10
  4277  09BC  00F0               	movwf	___almod@divisor
  4278  09BD  01F1               	clrf	___almod@divisor+1
  4279  09BE  01F2               	clrf	___almod@divisor+2
  4280  09BF  01F3               	clrf	___almod@divisor+3
  4281  09C0  0831               	movf	m_int_2_str_ex@x+3,w
  4282  09C1  00F7               	movwf	___almod@dividend+3
  4283  09C2  0830               	movf	m_int_2_str_ex@x+2,w
  4284  09C3  00F6               	movwf	___almod@dividend+2
  4285  09C4  082F               	movf	m_int_2_str_ex@x+1,w
  4286  09C5  00F5               	movwf	___almod@dividend+1
  4287  09C6  082E               	movf	m_int_2_str_ex@x,w
  4288  09C7  00F4               	movwf	___almod@dividend
  4289  09C8  3180  209D  3188   	fcall	___almod
  4290  09CB  0873               	movf	?___almod+3,w
  4291  09CC  00BB               	movwf	m_int_2_str_ex@t+3
  4292  09CD  0872               	movf	?___almod+2,w
  4293  09CE  00BA               	movwf	m_int_2_str_ex@t+2
  4294  09CF  0871               	movf	?___almod+1,w
  4295  09D0  00B9               	movwf	m_int_2_str_ex@t+1
  4296  09D1  0870               	movf	?___almod,w
  4297  09D2  00B8               	movwf	m_int_2_str_ex@t
  4298                           
  4299                           ;m_string.c: 152: buf[i]=(uint8_t)t+'0';
  4300  09D3  083D               	movf	m_int_2_str_ex@i,w
  4301  09D4  073E               	addwf	m_int_2_str_ex@buf,w
  4302  09D5  00B4               	movwf	??_m_int_2_str_ex
  4303  09D6  0086               	movwf	6
  4304  09D7  0187               	clrf	7
  4305  09D8  0838               	movf	m_int_2_str_ex@t,w
  4306  09D9  3E30               	addlw	48
  4307  09DA  0081               	movwf	1
  4308                           
  4309                           ;m_string.c: 153: x/=10;
  4310  09DB  300A               	movlw	10
  4311  09DC  00A0               	movwf	___aldiv@divisor
  4312  09DD  01A1               	clrf	___aldiv@divisor+1
  4313  09DE  01A2               	clrf	___aldiv@divisor+2
  4314  09DF  01A3               	clrf	___aldiv@divisor+3
  4315  09E0  0831               	movf	m_int_2_str_ex@x+3,w
  4316  09E1  00A7               	movwf	___aldiv@dividend+3
  4317  09E2  0830               	movf	m_int_2_str_ex@x+2,w
  4318  09E3  00A6               	movwf	___aldiv@dividend+2
  4319  09E4  082F               	movf	m_int_2_str_ex@x+1,w
  4320  09E5  00A5               	movwf	___aldiv@dividend+1
  4321  09E6  082E               	movf	m_int_2_str_ex@x,w
  4322  09E7  00A4               	movwf	___aldiv@dividend
  4323  09E8  252D  3188         	fcall	___aldiv
  4324  09EA  0823               	movf	?___aldiv+3,w
  4325  09EB  00B1               	movwf	m_int_2_str_ex@x+3
  4326  09EC  0822               	movf	?___aldiv+2,w
  4327  09ED  00B0               	movwf	m_int_2_str_ex@x+2
  4328  09EE  0821               	movf	?___aldiv+1,w
  4329  09EF  00AF               	movwf	m_int_2_str_ex@x+1
  4330  09F0  0820               	movf	?___aldiv,w
  4331  09F1  00AE               	movwf	m_int_2_str_ex@x
  4332                           
  4333                           ;m_string.c: 154: if(x==0)break;
  4334  09F2  0831               	movf	m_int_2_str_ex@x+3,w
  4335  09F3  0430               	iorwf	m_int_2_str_ex@x+2,w
  4336  09F4  042F               	iorwf	m_int_2_str_ex@x+1,w
  4337  09F5  042E               	iorwf	m_int_2_str_ex@x,w
  4338  09F6  1903               	btfsc	3,2
  4339  09F7  29FA               	goto	l2458
  4340  09F8  03BD               	decf	m_int_2_str_ex@i,f
  4341  09F9  29B8               	goto	l2440
  4342  09FA                     l2458:	
  4343                           
  4344                           ;m_string.c: 155: }
  4345                           ;m_string.c: 156: if(sig){
  4346  09FA  083C               	movf	m_int_2_str_ex@sig,w
  4347  09FB  1903               	btfsc	3,2
  4348  09FC  2A08               	goto	l2466
  4349                           
  4350                           ;m_string.c: 157: if(i>0)buf[i]='-';
  4351  09FD  083D               	movf	m_int_2_str_ex@i,w
  4352  09FE  1903               	btfsc	3,2
  4353  09FF  2A07               	goto	l2464
  4354  0A00  083D               	movf	m_int_2_str_ex@i,w
  4355  0A01  073E               	addwf	m_int_2_str_ex@buf,w
  4356  0A02  00B4               	movwf	??_m_int_2_str_ex
  4357  0A03  0086               	movwf	6
  4358  0A04  302D               	movlw	45
  4359  0A05  0187               	clrf	7
  4360  0A06  0081               	movwf	1
  4361  0A07                     l2464:	
  4362                           
  4363                           ;m_string.c: 158: i--;
  4364  0A07  03BD               	decf	m_int_2_str_ex@i,f
  4365  0A08                     l2466:	
  4366                           
  4367                           ;m_string.c: 159: }
  4368                           ;m_string.c: 160: m_mem_cpy(buf,buf+i);
  4369  0A08  083E               	movf	m_int_2_str_ex@buf,w
  4370  0A09  073D               	addwf	m_int_2_str_ex@i,w
  4371  0A0A  00F0               	movwf	m_mem_cpy@s
  4372  0A0B  083E               	movf	m_int_2_str_ex@buf,w
  4373  0A0C  3181  2924         	ljmp	_m_mem_cpy
  4374  0A0E                     __end_of_m_int_2_str_ex:	
  4375  0A0E                     __ptext34:	
  4376 ;; *************** function _PWM1_Start *****************
  4377 ;; Defined at:
  4378 ;;		line 112 in file "mcc_generated_files/pwm1.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;		None
  4381 ;; Auto vars:     Size  Location     Type
  4382 ;;		None
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  1    wreg      void 
  4385 ;; Registers used:
  4386 ;;		None
  4387 ;; Tracked objects:
  4388 ;;		On entry : 1F/3
  4389 ;;		On exit  : 1F/1B
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4392 ;;      Params:         0       0       0       0       0       0       0       0
  4393 ;;      Locals:         0       0       0       0       0       0       0       0
  4394 ;;      Temps:          0       0       0       0       0       0       0       0
  4395 ;;      Totals:         0       0       0       0       0       0       0       0
  4396 ;;Total ram usage:        0 bytes
  4397 ;; Hardware stack levels used:    1
  4398 ;; Hardware stack levels required when called:    1
  4399 ;; This function calls:
  4400 ;;		Nothing
  4401 ;; This function is called by:
  4402 ;;		_main
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           
  4406                           
  4407                           ;psect for function _PWM1_Start
  4408  0A0E                     _PWM1_Start:	
  4409                           
  4410                           ;pwm1.c: 114: PWM1CONbits.EN = 1;
  4411                           
  4412                           ;incstack = 0
  4413                           ; Regs used in _PWM1_Start: []
  4414  0A0E  003B               	movlb	27	; select bank27
  4415  0A0F  179B               	bsf	27,7	;volatile
  4416  0A10  0008               	return
  4417  0A11                     __end_of_PWM1_Start:	
  4418  0A11                     __ptext22:	
  4419 ;; *************** function _SYSTEM_Initialize *****************
  4420 ;; Defined at:
  4421 ;;		line 68 in file "mcc_generated_files/mcc.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;		None
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;		None
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  1    wreg      void 
  4428 ;; Registers used:
  4429 ;;		wreg, status,2, status,0, pclath, cstack
  4430 ;; Tracked objects:
  4431 ;;		On entry : 1F/1F
  4432 ;;		On exit  : 1F/3
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4435 ;;      Params:         0       0       0       0       0       0       0       0
  4436 ;;      Locals:         0       0       0       0       0       0       0       0
  4437 ;;      Temps:          0       0       0       0       0       0       0       0
  4438 ;;      Totals:         0       0       0       0       0       0       0       0
  4439 ;;Total ram usage:        0 bytes
  4440 ;; Hardware stack levels used:    1
  4441 ;; Hardware stack levels required when called:    3
  4442 ;; This function calls:
  4443 ;;		_ADC1_Initialize
  4444 ;;		_EUSART_Initialize
  4445 ;;		_FVR_Initialize
  4446 ;;		_OSCILLATOR_Initialize
  4447 ;;		_PIN_MANAGER_Initialize
  4448 ;;		_PWM1_Initialize
  4449 ;;		_PWM2_Initialize
  4450 ;;		_TMR2_Initialize
  4451 ;;		_WDT_Initialize
  4452 ;; This function is called by:
  4453 ;;		_main
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           
  4458                           ;psect for function _SYSTEM_Initialize
  4459  0A11                     _SYSTEM_Initialize:	
  4460                           
  4461                           ;mcc.c: 71: PIN_MANAGER_Initialize();
  4462                           
  4463                           ;incstack = 0
  4464                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4465  0A11  222F  3188         	fcall	_PIN_MANAGER_Initialize
  4466                           
  4467                           ;mcc.c: 72: OSCILLATOR_Initialize();
  4468  0A13  222A  3188         	fcall	_OSCILLATOR_Initialize
  4469                           
  4470                           ;mcc.c: 73: WDT_Initialize();
  4471  0A15  25DD  3188         	fcall	_WDT_Initialize
  4472                           
  4473                           ;mcc.c: 74: FVR_Initialize();
  4474  0A17  2226  3188         	fcall	_FVR_Initialize
  4475                           
  4476                           ;mcc.c: 75: PWM1_Initialize();
  4477  0A19  25AE  3188         	fcall	_PWM1_Initialize
  4478                           
  4479                           ;mcc.c: 76: PWM2_Initialize();
  4480  0A1B  25C6  3188         	fcall	_PWM2_Initialize
  4481                           
  4482                           ;mcc.c: 77: ADC1_Initialize();
  4483  0A1D  2222  3188         	fcall	_ADC1_Initialize
  4484                           
  4485                           ;mcc.c: 78: TMR2_Initialize();
  4486  0A1F  27D1  3188         	fcall	_TMR2_Initialize
  4487                           
  4488                           ;mcc.c: 79: EUSART_Initialize();
  4489  0A21  2F75               	ljmp	l2054
  4490  0A22                     __end_of_SYSTEM_Initialize:	
  4491  0A22                     __ptext33:	
  4492 ;; *************** function _ADC1_Initialize *****************
  4493 ;; Defined at:
  4494 ;;		line 64 in file "mcc_generated_files/adc1.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;		None
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;		None
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  1    wreg      void 
  4501 ;; Registers used:
  4502 ;;		wreg, status,2
  4503 ;; Tracked objects:
  4504 ;;		On entry : 1F/1B
  4505 ;;		On exit  : 1F/1
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4508 ;;      Params:         0       0       0       0       0       0       0       0
  4509 ;;      Locals:         0       0       0       0       0       0       0       0
  4510 ;;      Temps:          0       0       0       0       0       0       0       0
  4511 ;;      Totals:         0       0       0       0       0       0       0       0
  4512 ;;Total ram usage:        0 bytes
  4513 ;; Hardware stack levels used:    1
  4514 ;; Hardware stack levels required when called:    1
  4515 ;; This function calls:
  4516 ;;		Nothing
  4517 ;; This function is called by:
  4518 ;;		_SYSTEM_Initialize
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           
  4523                           ;psect for function _ADC1_Initialize
  4524  0A22                     _ADC1_Initialize:	
  4525                           
  4526                           ;adc1.c: 69: ADCON0 = 0x01;
  4527                           
  4528                           ;incstack = 0
  4529                           ; Regs used in _ADC1_Initialize: [wreg+status,2]
  4530  0A22  3001               	movlw	1
  4531  0A23  0021               	movlb	1	; select bank1
  4532  0A24  009D               	movwf	29	;volatile
  4533                           
  4534                           ;adc1.c: 72: ADCON1 = 0x63;
  4535                           
  4536                           ;adc1.c: 75: ADCON2 = 0x00;
  4537                           
  4538                           ;adc1.c: 78: ADRESL = 0x00;
  4539                           
  4540                           ;adc1.c: 81: ADRESH = 0x00;
  4541  0A25  2FB9               	ljmp	PL16	;call to abstracted procedure
  4542  0A26                     __end_of_ADC1_Initialize:	
  4543  0A26                     __ptext31:	
  4544 ;; *************** function _FVR_Initialize *****************
  4545 ;; Defined at:
  4546 ;;		line 57 in file "mcc_generated_files/fvr.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;		None
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;		None
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  1    wreg      void 
  4553 ;; Registers used:
  4554 ;;		wreg
  4555 ;; Tracked objects:
  4556 ;;		On entry : 1F/1
  4557 ;;		On exit  : 1F/2
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4560 ;;      Params:         0       0       0       0       0       0       0       0
  4561 ;;      Locals:         0       0       0       0       0       0       0       0
  4562 ;;      Temps:          0       0       0       0       0       0       0       0
  4563 ;;      Totals:         0       0       0       0       0       0       0       0
  4564 ;;Total ram usage:        0 bytes
  4565 ;; Hardware stack levels used:    1
  4566 ;; Hardware stack levels required when called:    1
  4567 ;; This function calls:
  4568 ;;		Nothing
  4569 ;; This function is called by:
  4570 ;;		_SYSTEM_Initialize
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574                           
  4575                           ;psect for function _FVR_Initialize
  4576  0A26                     _FVR_Initialize:	
  4577                           
  4578                           ;fvr.c: 60: FVRCON = 0x81;
  4579                           
  4580                           ;incstack = 0
  4581                           ; Regs used in _FVR_Initialize: [wreg]
  4582  0A26  3081               	movlw	129
  4583  0A27  0022               	movlb	2	; select bank2
  4584  0A28  0097               	movwf	23	;volatile
  4585  0A29  0008               	return
  4586  0A2A                     __end_of_FVR_Initialize:	
  4587  0A2A                     __ptext30:	
  4588 ;; *************** function _OSCILLATOR_Initialize *****************
  4589 ;; Defined at:
  4590 ;;		line 82 in file "mcc_generated_files/mcc.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;		None
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;		None
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  1    wreg      void 
  4597 ;; Registers used:
  4598 ;;		wreg, status,2
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/1F
  4601 ;;		On exit  : 1F/1
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4604 ;;      Params:         0       0       0       0       0       0       0       0
  4605 ;;      Locals:         0       0       0       0       0       0       0       0
  4606 ;;      Temps:          0       0       0       0       0       0       0       0
  4607 ;;      Totals:         0       0       0       0       0       0       0       0
  4608 ;;Total ram usage:        0 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; Hardware stack levels required when called:    1
  4611 ;; This function calls:
  4612 ;;		Nothing
  4613 ;; This function is called by:
  4614 ;;		_SYSTEM_Initialize
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           
  4619                           ;psect for function _OSCILLATOR_Initialize
  4620  0A2A                     _OSCILLATOR_Initialize:	
  4621                           
  4622                           ;mcc.c: 85: OSCCON = 0x78;
  4623                           
  4624                           ;incstack = 0
  4625                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4626  0A2A  3078               	movlw	120
  4627  0A2B  0021               	movlb	1	; select bank1
  4628  0A2C  0099               	movwf	25	;volatile
  4629                           
  4630                           ;mcc.c: 87: OSCTUNE = 0x00;
  4631  0A2D  0198               	clrf	24	;volatile
  4632  0A2E  0008               	return
  4633  0A2F                     __end_of_OSCILLATOR_Initialize:	
  4634  0A2F                     __ptext29:	
  4635 ;; *************** function _PIN_MANAGER_Initialize *****************
  4636 ;; Defined at:
  4637 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;		None
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;  state           1    0[COMMON] unsigned char 
  4642 ;; Return value:  Size  Location     Type
  4643 ;;                  1    wreg      void 
  4644 ;; Registers used:
  4645 ;;		wreg, status,2, status,0
  4646 ;; Tracked objects:
  4647 ;;		On entry : 1F/1F
  4648 ;;		On exit  : 0/0
  4649 ;;		Unchanged: 0/0
  4650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4651 ;;      Params:         0       0       0       0       0       0       0       0
  4652 ;;      Locals:         1       0       0       0       0       0       0       0
  4653 ;;      Temps:          0       0       0       0       0       0       0       0
  4654 ;;      Totals:         1       0       0       0       0       0       0       0
  4655 ;;Total ram usage:        1 bytes
  4656 ;; Hardware stack levels used:    1
  4657 ;; Hardware stack levels required when called:    1
  4658 ;; This function calls:
  4659 ;;		Nothing
  4660 ;; This function is called by:
  4661 ;;		_SYSTEM_Initialize
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           
  4666                           ;psect for function _PIN_MANAGER_Initialize
  4667  0A2F                     _PIN_MANAGER_Initialize:	
  4668                           
  4669                           ;pin_manager.c: 57: LATA = 0x00;
  4670                           
  4671                           ;incstack = 0
  4672                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  4673  0A2F  0022               	movlb	2	; select bank2
  4674  0A30  018C               	clrf	12	;volatile
  4675                           
  4676                           ;pin_manager.c: 58: LATC = 0x00;
  4677  0A31  018E               	clrf	14	;volatile
  4678                           
  4679                           ;pin_manager.c: 63: TRISA = 0x0F;
  4680  0A32  300F               	movlw	15
  4681  0A33  0021               	movlb	1	; select bank1
  4682  0A34  008C               	movwf	12	;volatile
  4683                           
  4684                           ;pin_manager.c: 64: TRISC = 0x1f;
  4685  0A35  301F               	movlw	31
  4686  0A36  008E               	movwf	14	;volatile
  4687                           
  4688                           ;pin_manager.c: 69: ANSELC = 0x0F;
  4689  0A37  300F               	movlw	15
  4690  0A38  0023               	movlb	3	; select bank3
  4691  0A39  008E               	movwf	14	;volatile
  4692                           
  4693                           ;pin_manager.c: 70: ANSELA = 0x17;
  4694  0A3A  3017               	movlw	23
  4695  0A3B  008C               	movwf	12	;volatile
  4696                           
  4697                           ;pin_manager.c: 75: WPUA = 0x3B;
  4698  0A3C  303B               	movlw	59
  4699  0A3D  0024               	movlb	4	; select bank4
  4700  0A3E  008C               	movwf	12	;volatile
  4701                           
  4702                           ;pin_manager.c: 76: WPUC = 0x30;
  4703  0A3F  3030               	movlw	48
  4704  0A40  008E               	movwf	14	;volatile
  4705                           
  4706                           ;pin_manager.c: 77: OPTION_REGbits.nWPUEN = 0;
  4707  0A41  0021               	movlb	1	; select bank1
  4708  0A42  1395               	bcf	21,7	;volatile
  4709                           
  4710                           ;pin_manager.c: 82: ODCONA = 0x00;
  4711  0A43  0025               	movlb	5	; select bank5
  4712  0A44  018C               	clrf	12	;volatile
  4713                           
  4714                           ;pin_manager.c: 83: ODCONC = 0x00;
  4715  0A45  018E               	clrf	14	;volatile
  4716                           
  4717                           ;pin_manager.c: 90: bool state = (unsigned char)GIE;
  4718  0A46  3000               	movlw	0
  4719  0A47  1B8B               	btfsc	11,7	;volatile
  4720  0A48  3001               	movlw	1
  4721  0A49  00F0               	movwf	PIN_MANAGER_Initialize@state
  4722                           
  4723                           ;pin_manager.c: 91: GIE = 0;
  4724  0A4A  138B               	bcf	11,7	;volatile
  4725                           
  4726                           ;pin_manager.c: 92: PPSLOCK = 0x55;
  4727                           
  4728                           ;pin_manager.c: 93: PPSLOCK = 0xAA;
  4729  0A4B  27CB  3188         	fcall	PL22	;call to abstracted procedure
  4730                           
  4731                           ;pin_manager.c: 94: PPSLOCKbits.PPSLOCKED = 0x00;
  4732  0A4D  100F               	bcf	15,0	;volatile
  4733                           
  4734                           ;pin_manager.c: 96: RXPPSbits.RXPPS = 0x14;
  4735  0A4E  0815               	movf	21,w	;volatile
  4736  0A4F  39E0               	andlw	-32
  4737  0A50  3814               	iorlw	20
  4738  0A51  0095               	movwf	21	;volatile
  4739                           
  4740                           ;pin_manager.c: 97: RA4PPSbits.RA4PPS = 0x04;
  4741  0A52  003D               	movlb	29	; select bank29
  4742  0A53  0814               	movf	20,w	;volatile
  4743  0A54  39F0               	andlw	-16
  4744  0A55  3804               	iorlw	4
  4745  0A56  0094               	movwf	20	;volatile
  4746                           
  4747                           ;pin_manager.c: 98: RA5PPSbits.RA5PPS = 0x03;
  4748  0A57  0815               	movf	21,w	;volatile
  4749  0A58  39F0               	andlw	-16
  4750  0A59  3803               	iorlw	3
  4751  0A5A  0095               	movwf	21	;volatile
  4752                           
  4753                           ;pin_manager.c: 99: RC5PPSbits.RC5PPS = 0x09;
  4754  0A5B  0825               	movf	37,w	;volatile
  4755  0A5C  39F0               	andlw	-16
  4756  0A5D  3809               	iorlw	9
  4757  0A5E  00A5               	movwf	37	;volatile
  4758                           
  4759                           ;pin_manager.c: 101: PPSLOCK = 0x55;
  4760                           
  4761                           ;pin_manager.c: 102: PPSLOCK = 0xAA;
  4762  0A5F  27CB  3188         	fcall	PL22	;call to abstracted procedure
  4763                           
  4764                           ;pin_manager.c: 103: PPSLOCKbits.PPSLOCKED = 0x01;
  4765  0A61  140F               	bsf	15,0	;volatile
  4766                           
  4767                           ;pin_manager.c: 105: GIE = state;
  4768  0A62  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  4769  0A63  2A66               	goto	u680
  4770  0A64  178B               	bsf	11,7	;volatile
  4771  0A65  0008               	return
  4772  0A66                     u680:	
  4773  0A66  138B               	bcf	11,7	;volatile
  4774  0A67  0008               	return
  4775  0A68                     __end_of_PIN_MANAGER_Initialize:	
  4776  0A68                     __ptext4:	
  4777 ;; *************** function _pid_run_process *****************
  4778 ;; Defined at:
  4779 ;;		line 226 in file "src/api/sample.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;		None
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;  t32             4   32[BANK0 ] long 
  4784 ;;  ed              4    0        long 
  4785 ;;  ei              4   22[BANK0 ] long 
  4786 ;;  ep              4   18[BANK0 ] long 
  4787 ;;  t16             2   30[BANK0 ] unsigned int 
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  1    wreg      void 
  4790 ;; Registers used:
  4791 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4792 ;; Tracked objects:
  4793 ;;		On entry : 1F/0
  4794 ;;		On exit  : 1F/1B
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4797 ;;      Params:         0       0       0       0       0       0       0       0
  4798 ;;      Locals:         0      18       0       0       0       0       0       0
  4799 ;;      Temps:          0       4       0       0       0       0       0       0
  4800 ;;      Totals:         0      22       0       0       0       0       0       0
  4801 ;;Total ram usage:       22 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; Hardware stack levels required when called:    3
  4804 ;; This function calls:
  4805 ;;		___aldiv
  4806 ;;		___lmul
  4807 ;;		_set_idrv_pwm1_duty
  4808 ;; This function is called by:
  4809 ;;		_main
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           
  4814                           ;psect for function _pid_run_process
  4815  0A68                     _pid_run_process:	
  4816                           
  4817                           ;sample.c: 229: int32_t ep,ei,ed;
  4818                           ;sample.c: 230: int32_t t32;
  4819                           ;sample.c: 231: t32=(resRs-resRc);
  4820                           
  4821                           ;incstack = 0
  4822                           ; Regs used in _pid_run_process: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4823  0A68  086D               	movf	_resRs+3,w
  4824  0A69  00C3               	movwf	pid_run_process@t32+3
  4825  0A6A  086C               	movf	_resRs+2,w
  4826  0A6B  00C2               	movwf	pid_run_process@t32+2
  4827  0A6C  086B               	movf	_resRs+1,w
  4828  0A6D  00C1               	movwf	pid_run_process@t32+1
  4829  0A6E  086A               	movf	_resRs,w
  4830  0A6F  00C0               	movwf	pid_run_process@t32
  4831  0A70  0866               	movf	_resRc,w
  4832  0A71  02C0               	subwf	pid_run_process@t32,f
  4833  0A72  0867               	movf	_resRc+1,w
  4834  0A73  3BC1               	subwfb	pid_run_process@t32+1,f
  4835  0A74  0868               	movf	_resRc+2,w
  4836  0A75  3BC2               	subwfb	pid_run_process@t32+2,f
  4837  0A76  0869               	movf	_resRc+3,w
  4838  0A77  3BC3               	subwfb	pid_run_process@t32+3,f
  4839                           
  4840                           ;sample.c: 232: t32=2000-t32;
  4841  0A78  30D0               	movlw	208
  4842  0A79  00AE               	movwf	??_pid_run_process
  4843  0A7A  3007               	movlw	7
  4844  0A7B  00AF               	movwf	??_pid_run_process+1
  4845  0A7C  01B0               	clrf	??_pid_run_process+2
  4846  0A7D  01B1               	clrf	??_pid_run_process+3
  4847  0A7E  0840               	movf	pid_run_process@t32,w
  4848  0A7F  02AE               	subwf	??_pid_run_process,f
  4849  0A80  0841               	movf	pid_run_process@t32+1,w
  4850  0A81  3BAF               	subwfb	??_pid_run_process+1,f
  4851  0A82  0842               	movf	pid_run_process@t32+2,w
  4852  0A83  3BB0               	subwfb	??_pid_run_process+2,f
  4853  0A84  0843               	movf	pid_run_process@t32+3,w
  4854  0A85  3BB1               	subwfb	??_pid_run_process+3,f
  4855  0A86  0831               	movf	??_pid_run_process+3,w
  4856  0A87  27A5  3188         	fcall	PL10	;call to abstracted procedure
  4857                           
  4858                           ;sample.c: 234: err[2]=err[1];
  4859  0A89  30A4               	movlw	((low (_err| 0))& (0+255)+4)
  4860  0A8A  0086               	movwf	6
  4861  0A8B  0187               	clrf	7
  4862  0A8C  3F40               	moviw [0]fsr1
  4863  0A8D  0021               	movlb	1	; select bank1
  4864  0A8E  00A8               	movwf	(_err^(0+128)+8)
  4865  0A8F  3F41               	moviw [1]fsr1
  4866  0A90  00A9               	movwf	((_err+1)^(0+128)+8)
  4867  0A91  3F42               	moviw [2]fsr1
  4868  0A92  00AA               	movwf	((_err+2)^(0+128)+8)
  4869  0A93  3F43               	moviw [3]fsr1
  4870  0A94  00AB               	movwf	((_err+3)^(0+128)+8)
  4871                           
  4872                           ;sample.c: 235: err[1]=err[0];
  4873  0A95  0823               	movf	(_err+3)^(0+128),w
  4874  0A96  00A7               	movwf	((_err+3)^(0+128)+4)
  4875  0A97  0822               	movf	(_err+2)^(0+128),w
  4876  0A98  00A6               	movwf	((_err+2)^(0+128)+4)
  4877  0A99  0821               	movf	(_err+1)^(0+128),w
  4878  0A9A  00A5               	movwf	((_err+1)^(0+128)+4)
  4879  0A9B  0820               	movf	_err^(0+128),w
  4880  0A9C  00A4               	movwf	(_err^(0+128)+4)
  4881                           
  4882                           ;sample.c: 236: err[0]=t32;
  4883  0A9D  0020               	movlb	0	; select bank0
  4884  0A9E  0843               	movf	pid_run_process@t32+3,w
  4885  0A9F  0021               	movlb	1	; select bank1
  4886  0AA0  00A3               	movwf	(_err+3)^(0+128)
  4887  0AA1  0020               	movlb	0	; select bank0
  4888  0AA2  0842               	movf	pid_run_process@t32+2,w
  4889  0AA3  0021               	movlb	1	; select bank1
  4890  0AA4  00A2               	movwf	(_err+2)^(0+128)
  4891  0AA5  0020               	movlb	0	; select bank0
  4892  0AA6  0841               	movf	pid_run_process@t32+1,w
  4893  0AA7  0021               	movlb	1	; select bank1
  4894  0AA8  00A1               	movwf	(_err+1)^(0+128)
  4895  0AA9  0020               	movlb	0	; select bank0
  4896  0AAA  0840               	movf	pid_run_process@t32,w
  4897  0AAB  0021               	movlb	1	; select bank1
  4898  0AAC  00A0               	movwf	_err^(0+128)
  4899                           
  4900                           ;sample.c: 239: ep=(err[0]-err[1])*PidKp;
  4901  0AAD  0824               	movf	(_err^(0+128)+4),w
  4902  0AAE  0220               	subwf	_err^(0+128),w
  4903  0AAF  0020               	movlb	0	; select bank0
  4904  0AB0  00AE               	movwf	??_pid_run_process
  4905  0AB1  0021               	movlb	1	; select bank1
  4906  0AB2  0825               	movf	((_err+1)^(0+128)+4),w
  4907  0AB3  3B21               	subwfb	(_err+1)^(0+128),w
  4908  0AB4  0020               	movlb	0	; select bank0
  4909  0AB5  00AF               	movwf	??_pid_run_process+1
  4910  0AB6  0021               	movlb	1	; select bank1
  4911  0AB7  0826               	movf	((_err+2)^(0+128)+4),w
  4912  0AB8  3B22               	subwfb	(_err+2)^(0+128),w
  4913  0AB9  0020               	movlb	0	; select bank0
  4914  0ABA  00B0               	movwf	??_pid_run_process+2
  4915  0ABB  0021               	movlb	1	; select bank1
  4916  0ABC  0827               	movf	((_err+3)^(0+128)+4),w
  4917  0ABD  3B23               	subwfb	(_err+3)^(0+128),w
  4918  0ABE  0020               	movlb	0	; select bank0
  4919  0ABF  00B1               	movwf	??_pid_run_process+3
  4920  0AC0  00F3               	movwf	___lmul@multiplier+3
  4921  0AC1  0830               	movf	??_pid_run_process+2,w
  4922  0AC2  00F2               	movwf	___lmul@multiplier+2
  4923  0AC3  082F               	movf	??_pid_run_process+1,w
  4924  0AC4  00F1               	movwf	___lmul@multiplier+1
  4925  0AC5  082E               	movf	??_pid_run_process,w
  4926  0AC6  00F0               	movwf	___lmul@multiplier
  4927  0AC7  2794  3188         	fcall	PL6	;call to abstracted procedure
  4928  0AC9  2508  3188         	fcall	___lmul
  4929  0ACB  0873               	movf	?___lmul+3,w
  4930  0ACC  0020               	movlb	0	; select bank0
  4931  0ACD  00B5               	movwf	pid_run_process@ep+3
  4932  0ACE  0872               	movf	?___lmul+2,w
  4933  0ACF  00B4               	movwf	pid_run_process@ep+2
  4934  0AD0  0871               	movf	?___lmul+1,w
  4935  0AD1  00B3               	movwf	pid_run_process@ep+1
  4936  0AD2  0870               	movf	?___lmul,w
  4937  0AD3  00B2               	movwf	pid_run_process@ep
  4938                           
  4939                           ;sample.c: 240: ei=PidKp*err[0]/PidTi;
  4940  0AD4  0021               	movlb	1	; select bank1
  4941  0AD5  082F               	movf	(_PidTi+3)^(0+128),w
  4942  0AD6  0020               	movlb	0	; select bank0
  4943  0AD7  00A3               	movwf	___aldiv@divisor+3
  4944  0AD8  0021               	movlb	1	; select bank1
  4945  0AD9  082E               	movf	(_PidTi+2)^(0+128),w
  4946  0ADA  0020               	movlb	0	; select bank0
  4947  0ADB  00A2               	movwf	___aldiv@divisor+2
  4948  0ADC  0021               	movlb	1	; select bank1
  4949  0ADD  082D               	movf	(_PidTi+1)^(0+128),w
  4950  0ADE  0020               	movlb	0	; select bank0
  4951  0ADF  00A1               	movwf	___aldiv@divisor+1
  4952  0AE0  0021               	movlb	1	; select bank1
  4953  0AE1  082C               	movf	_PidTi^(0+128),w
  4954  0AE2  0020               	movlb	0	; select bank0
  4955  0AE3  00A0               	movwf	___aldiv@divisor
  4956  0AE4  0021               	movlb	1	; select bank1
  4957  0AE5  0823               	movf	(_err+3)^(0+128),w
  4958  0AE6  00F3               	movwf	___lmul@multiplier+3
  4959  0AE7  0822               	movf	(_err+2)^(0+128),w
  4960  0AE8  00F2               	movwf	___lmul@multiplier+2
  4961  0AE9  0821               	movf	(_err+1)^(0+128),w
  4962  0AEA  00F1               	movwf	___lmul@multiplier+1
  4963  0AEB  0820               	movf	_err^(0+128),w
  4964  0AEC  00F0               	movwf	___lmul@multiplier
  4965  0AED  0020               	movlb	0	; select bank0
  4966  0AEE  2794  3188         	fcall	PL6	;call to abstracted procedure
  4967  0AF0  2508  3188         	fcall	___lmul
  4968  0AF2  2781  3188         	fcall	PL2	;call to abstracted procedure
  4969  0AF4  252D  3188         	fcall	___aldiv
  4970  0AF6  0823               	movf	?___aldiv+3,w
  4971  0AF7  00B9               	movwf	pid_run_process@ei+3
  4972  0AF8  0822               	movf	?___aldiv+2,w
  4973  0AF9  00B8               	movwf	pid_run_process@ei+2
  4974  0AFA  0821               	movf	?___aldiv+1,w
  4975  0AFB  00B7               	movwf	pid_run_process@ei+1
  4976  0AFC  0820               	movf	?___aldiv,w
  4977  0AFD  00B6               	movwf	pid_run_process@ei
  4978                           
  4979                           ;sample.c: 244: t32=ep+ei+ed;
  4980  0AFE  0832               	movf	pid_run_process@ep,w
  4981  0AFF  0736               	addwf	pid_run_process@ei,w
  4982  0B00  00AE               	movwf	??_pid_run_process
  4983  0B01  0833               	movf	pid_run_process@ep+1,w
  4984  0B02  3D37               	addwfc	pid_run_process@ei+1,w
  4985  0B03  00AF               	movwf	??_pid_run_process+1
  4986  0B04  0834               	movf	pid_run_process@ep+2,w
  4987  0B05  3D38               	addwfc	pid_run_process@ei+2,w
  4988  0B06  00B0               	movwf	??_pid_run_process+2
  4989  0B07  0835               	movf	pid_run_process@ep+3,w
  4990  0B08  3D39               	addwfc	pid_run_process@ei+3,w
  4991  0B09  00B1               	movwf	??_pid_run_process+3
  4992  0B0A  27A5  3188         	fcall	PL10	;call to abstracted procedure
  4993                           
  4994                           ;sample.c: 245: t32/=10000;
  4995  0B0C  3027               	movlw	39
  4996  0B0D  01A3               	clrf	___aldiv@divisor+3
  4997  0B0E  01A2               	clrf	___aldiv@divisor+2
  4998  0B0F  00A1               	movwf	___aldiv@divisor+1
  4999  0B10  3010               	movlw	16
  5000  0B11  00A0               	movwf	___aldiv@divisor
  5001  0B12  0843               	movf	pid_run_process@t32+3,w
  5002  0B13  00A7               	movwf	___aldiv@dividend+3
  5003  0B14  0842               	movf	pid_run_process@t32+2,w
  5004  0B15  00A6               	movwf	___aldiv@dividend+2
  5005  0B16  0841               	movf	pid_run_process@t32+1,w
  5006  0B17  00A5               	movwf	___aldiv@dividend+1
  5007  0B18  0840               	movf	pid_run_process@t32,w
  5008  0B19  00A4               	movwf	___aldiv@dividend
  5009  0B1A  252D  3188         	fcall	___aldiv
  5010  0B1C  0823               	movf	?___aldiv+3,w
  5011  0B1D  00C3               	movwf	pid_run_process@t32+3
  5012  0B1E  0822               	movf	?___aldiv+2,w
  5013  0B1F  00C2               	movwf	pid_run_process@t32+2
  5014  0B20  0821               	movf	?___aldiv+1,w
  5015  0B21  00C1               	movwf	pid_run_process@t32+1
  5016  0B22  0820               	movf	?___aldiv,w
  5017  0B23  00C0               	movwf	pid_run_process@t32
  5018                           
  5019                           ;sample.c: 246: t32+=pidU;
  5020  0B24  0862               	movf	_pidU,w
  5021  0B25  07C0               	addwf	pid_run_process@t32,f
  5022  0B26  0863               	movf	_pidU+1,w
  5023  0B27  3DC1               	addwfc	pid_run_process@t32+1,f
  5024  0B28  0864               	movf	_pidU+2,w
  5025  0B29  3DC2               	addwfc	pid_run_process@t32+2,f
  5026  0B2A  0865               	movf	_pidU+3,w
  5027  0B2B  3DC3               	addwfc	pid_run_process@t32+3,f
  5028                           
  5029                           ;sample.c: 248: __nop();
  5030  0B2C  0000               	nop
  5031                           
  5032                           ;sample.c: 249: if(t32>1200)t32=1200;
  5033  0B2D  0020               	movlb	0	; select bank0
  5034  0B2E  1BC3               	btfsc	pid_run_process@t32+3,7
  5035  0B2F  2B42               	goto	l2400
  5036  0B30  0843               	movf	pid_run_process@t32+3,w
  5037  0B31  1D03               	btfss	3,2
  5038  0B32  2B3C               	goto	l2398
  5039  0B33  0842               	movf	pid_run_process@t32+2,w
  5040  0B34  1D03               	btfss	3,2
  5041  0B35  2B3C               	goto	l2398
  5042  0B36  30B1               	movlw	177
  5043  0B37  0240               	subwf	pid_run_process@t32,w
  5044  0B38  3004               	movlw	4
  5045  0B39  3B41               	subwfb	pid_run_process@t32+1,w
  5046  0B3A  1C03               	btfss	3,0
  5047  0B3B  2B42               	goto	l2400
  5048  0B3C                     l2398:	
  5049  0B3C  3004               	movlw	4
  5050  0B3D  01C3               	clrf	pid_run_process@t32+3
  5051  0B3E  01C2               	clrf	pid_run_process@t32+2
  5052  0B3F  00C1               	movwf	pid_run_process@t32+1
  5053  0B40  30B0               	movlw	176
  5054  0B41  00C0               	movwf	pid_run_process@t32
  5055  0B42                     l2400:	
  5056                           
  5057                           ;sample.c: 250: if(t32<2)t32=2;
  5058  0B42  1BC3               	btfsc	pid_run_process@t32+3,7
  5059  0B43  2B51               	goto	l2402
  5060  0B44  0843               	movf	pid_run_process@t32+3,w
  5061  0B45  1D03               	btfss	3,2
  5062  0B46  2B56               	goto	l650
  5063  0B47  0842               	movf	pid_run_process@t32+2,w
  5064  0B48  1D03               	btfss	3,2
  5065  0B49  2B56               	goto	l650
  5066  0B4A  0841               	movf	pid_run_process@t32+1,w
  5067  0B4B  1D03               	btfss	3,2
  5068  0B4C  2B56               	goto	l650
  5069  0B4D  3002               	movlw	2
  5070  0B4E  0240               	subwf	pid_run_process@t32,w
  5071  0B4F  1803               	btfsc	3,0
  5072  0B50  2B56               	goto	l650
  5073  0B51                     l2402:	
  5074  0B51  3002               	movlw	2
  5075  0B52  00C0               	movwf	pid_run_process@t32
  5076  0B53  01C1               	clrf	pid_run_process@t32+1
  5077  0B54  01C2               	clrf	pid_run_process@t32+2
  5078  0B55  01C3               	clrf	pid_run_process@t32+3
  5079  0B56                     l650:	
  5080                           
  5081                           ;sample.c: 251: pidU=t32;
  5082  0B56  0843               	movf	pid_run_process@t32+3,w
  5083  0B57  00E5               	movwf	_pidU+3
  5084  0B58  0842               	movf	pid_run_process@t32+2,w
  5085  0B59  00E4               	movwf	_pidU+2
  5086  0B5A  0841               	movf	pid_run_process@t32+1,w
  5087  0B5B  00E3               	movwf	_pidU+1
  5088  0B5C  0840               	movf	pid_run_process@t32,w
  5089  0B5D  00E2               	movwf	_pidU
  5090                           
  5091                           ;sample.c: 252: uint16_t t16;
  5092                           ;sample.c: 253: t16=(uint16_t)pidU;
  5093  0B5E  0863               	movf	_pidU+1,w
  5094  0B5F  00BF               	movwf	pid_run_process@t16+1
  5095  0B60  0862               	movf	_pidU,w
  5096  0B61  00BE               	movwf	pid_run_process@t16
  5097                           
  5098                           ;sample.c: 254: set_idrv_pwm1_duty(t16);
  5099  0B62  083F               	movf	pid_run_process@t16+1,w
  5100  0B63  00F3               	movwf	set_idrv_pwm1_duty@duty+1
  5101  0B64  083E               	movf	pid_run_process@t16,w
  5102  0B65  00F2               	movwf	set_idrv_pwm1_duty@duty
  5103  0B66  2D99               	ljmp	l2056
  5104  0B67                     __end_of_pid_run_process:	
  5105  0B67                     __ptext5:	
  5106 ;; *************** function _pid_b_b_process *****************
  5107 ;; Defined at:
  5108 ;;		line 170 in file "src/api/sample.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;		None
  5111 ;; Auto vars:     Size  Location     Type
  5112 ;;  t32             4   14[BANK0 ] long 
  5113 ;; Return value:  Size  Location     Type
  5114 ;;                  1    wreg      void 
  5115 ;; Registers used:
  5116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5117 ;; Tracked objects:
  5118 ;;		On entry : 1F/0
  5119 ;;		On exit  : 1E/0
  5120 ;;		Unchanged: 0/0
  5121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5122 ;;      Params:         0       0       0       0       0       0       0       0
  5123 ;;      Locals:         0       4       0       0       0       0       0       0
  5124 ;;      Temps:          1       0       0       0       0       0       0       0
  5125 ;;      Totals:         1       4       0       0       0       0       0       0
  5126 ;;Total ram usage:        5 bytes
  5127 ;; Hardware stack levels used:    1
  5128 ;; Hardware stack levels required when called:    3
  5129 ;; This function calls:
  5130 ;;		___aldiv
  5131 ;;		___lmul
  5132 ;;		_set_idrv_pwm1_duty
  5133 ;; This function is called by:
  5134 ;;		_main
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           
  5139                           ;psect for function _pid_b_b_process
  5140  0B67                     _pid_b_b_process:	
  5141                           
  5142                           ;sample.c: 172: int32_t t32;
  5143                           ;sample.c: 173: t32=(resRs-resRc);
  5144                           
  5145                           ;incstack = 0
  5146                           ; Regs used in _pid_b_b_process: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5147  0B67  086D               	movf	_resRs+3,w
  5148  0B68  00B1               	movwf	pid_b_b_process@t32+3
  5149  0B69  086C               	movf	_resRs+2,w
  5150  0B6A  00B0               	movwf	pid_b_b_process@t32+2
  5151  0B6B  086B               	movf	_resRs+1,w
  5152  0B6C  00AF               	movwf	pid_b_b_process@t32+1
  5153  0B6D  086A               	movf	_resRs,w
  5154  0B6E  00AE               	movwf	pid_b_b_process@t32
  5155  0B6F  0866               	movf	_resRc,w
  5156  0B70  02AE               	subwf	pid_b_b_process@t32,f
  5157  0B71  0867               	movf	_resRc+1,w
  5158  0B72  3BAF               	subwfb	pid_b_b_process@t32+1,f
  5159  0B73  0868               	movf	_resRc+2,w
  5160  0B74  3BB0               	subwfb	pid_b_b_process@t32+2,f
  5161  0B75  0869               	movf	_resRc+3,w
  5162  0B76  3BB1               	subwfb	pid_b_b_process@t32+3,f
  5163                           
  5164                           ;sample.c: 174: switch(pidBbSm){
  5165  0B77  2CB2               	goto	l2358
  5166  0B78                     l2322:	
  5167                           
  5168                           ;sample.c: 177: case 1:
  5169                           ;sample.c: 178: pidTestNum=0;
  5170  0B78  01DB               	clrf	_pidTestNum
  5171  0B79                     l2324:	
  5172                           
  5173                           ;sample.c: 179: set_idrv_pwm1_duty(1200);
  5174  0B79  30B0               	movlw	176
  5175  0B7A  00F2               	movwf	set_idrv_pwm1_duty@duty
  5176  0B7B  3004               	movlw	4
  5177  0B7C  00F3               	movwf	set_idrv_pwm1_duty@duty+1
  5178  0B7D  2599  3188         	fcall	_set_idrv_pwm1_duty
  5179                           
  5180                           ;sample.c: 180: pidBbSm=2;
  5181  0B7F  3002               	movlw	2
  5182  0B80  2B95               	goto	L1
  5183  0B81                     l2328:	
  5184                           ;sample.c: 181: break;
  5185                           
  5186                           
  5187                           ;sample.c: 183: if(t32>3000){
  5188  0B81  1BB1               	btfsc	pid_b_b_process@t32+3,7
  5189  0B82  2CBC               	goto	l2360
  5190  0B83  0831               	movf	pid_b_b_process@t32+3,w
  5191  0B84  1D03               	btfss	3,2
  5192  0B85  2B8F               	goto	l2330
  5193  0B86  0830               	movf	pid_b_b_process@t32+2,w
  5194  0B87  1D03               	btfss	3,2
  5195  0B88  2B8F               	goto	l2330
  5196  0B89  30B9               	movlw	185
  5197  0B8A  022E               	subwf	pid_b_b_process@t32,w
  5198  0B8B  300B               	movlw	11
  5199  0B8C  3B2F               	subwfb	pid_b_b_process@t32+1,w
  5200  0B8D  1C03               	btfss	3,0
  5201  0B8E  2CBC               	goto	l2360
  5202  0B8F                     l2330:	
  5203                           
  5204                           ;sample.c: 184: set_idrv_pwm1_duty(2);
  5205  0B8F  3002               	movlw	2
  5206  0B90  00F2               	movwf	set_idrv_pwm1_duty@duty
  5207  0B91  01F3               	clrf	set_idrv_pwm1_duty@duty+1
  5208  0B92  2599  3188         	fcall	_set_idrv_pwm1_duty
  5209                           
  5210                           ;sample.c: 185: pidBbSm=3;
  5211  0B94  3003               	movlw	3
  5212  0B95                     L1:	
  5213  0B95  0020               	movlb	0	; select bank0
  5214  0B96  2CB0               	goto	L3
  5215  0B97                     l2334:	
  5216                           ;sample.c: 186: break;
  5217                           
  5218                           
  5219                           ;sample.c: 190: if(t32<500){
  5220  0B97  1BB1               	btfsc	pid_b_b_process@t32+3,7
  5221  0B98  2BA5               	goto	l2336
  5222  0B99  0831               	movf	pid_b_b_process@t32+3,w
  5223  0B9A  1D03               	btfss	3,2
  5224  0B9B  2CBC               	goto	l2360
  5225  0B9C  0830               	movf	pid_b_b_process@t32+2,w
  5226  0B9D  1D03               	btfss	3,2
  5227  0B9E  2CBC               	goto	l2360
  5228  0B9F  30F4               	movlw	244
  5229  0BA0  022E               	subwf	pid_b_b_process@t32,w
  5230  0BA1  3001               	movlw	1
  5231  0BA2  3B2F               	subwfb	pid_b_b_process@t32+1,w
  5232  0BA3  1803               	btfsc	3,0
  5233  0BA4  2CBC               	goto	l2360
  5234  0BA5                     l2336:	
  5235                           
  5236                           ;sample.c: 191: bbt0=bbt1;
  5237  0BA5  0021               	movlb	1	; select bank1
  5238  0BA6  083B               	movf	(_bbt1+3)^(0+128),w
  5239  0BA7  00B7               	movwf	(_bbt0+3)^(0+128)
  5240  0BA8  083A               	movf	(_bbt1+2)^(0+128),w
  5241  0BA9  00B6               	movwf	(_bbt0+2)^(0+128)
  5242  0BAA  0839               	movf	(_bbt1+1)^(0+128),w
  5243  0BAB  00B5               	movwf	(_bbt0+1)^(0+128)
  5244  0BAC  0838               	movf	_bbt1^(0+128),w
  5245  0BAD  00B4               	movwf	_bbt0^(0+128)
  5246                           
  5247                           ;sample.c: 192: bbt1=globalTicker;
  5248  0BAE  0020               	movlb	0	; select bank0
  5249  0BAF  084B               	movf	_globalTicker+3,w	;volatile
  5250  0BB0  0021               	movlb	1	; select bank1
  5251  0BB1  00BB               	movwf	(_bbt1+3)^(0+128)
  5252  0BB2  0020               	movlb	0	; select bank0
  5253  0BB3  084A               	movf	_globalTicker+2,w	;volatile
  5254  0BB4  0021               	movlb	1	; select bank1
  5255  0BB5  00BA               	movwf	(_bbt1+2)^(0+128)
  5256  0BB6  0020               	movlb	0	; select bank0
  5257  0BB7  0849               	movf	_globalTicker+1,w	;volatile
  5258  0BB8  0021               	movlb	1	; select bank1
  5259  0BB9  00B9               	movwf	(_bbt1+1)^(0+128)
  5260  0BBA  0020               	movlb	0	; select bank0
  5261  0BBB  0848               	movf	_globalTicker,w	;volatile
  5262  0BBC  0021               	movlb	1	; select bank1
  5263  0BBD  00B8               	movwf	_bbt1^(0+128)
  5264                           
  5265                           ;sample.c: 193: pidTestNum++;
  5266  0BBE  0020               	movlb	0	; select bank0
  5267  0BBF  3006               	movlw	6
  5268  0BC0  0ADB               	incf	_pidTestNum,f
  5269                           
  5270                           ;sample.c: 194: if(pidTestNum>5){
  5271  0BC1  025B               	subwf	_pidTestNum,w
  5272  0BC2  1C03               	skipc
  5273  0BC3  2B79               	goto	l2324
  5274                           
  5275                           ;sample.c: 195: pidBbSm=4;
  5276  0BC4  3004               	movlw	4
  5277  0BC5  2CB0               	goto	L3
  5278  0BC6                     l2348:	
  5279                           ;sample.c: 196: break;
  5280                           
  5281                           
  5282                           ;sample.c: 204: bbtu=bbt1-bbt0;
  5283  0BC6  0021               	movlb	1	; select bank1
  5284  0BC7  083B               	movf	(_bbt1+3)^(0+128),w
  5285  0BC8  00C3               	movwf	(_bbtu+3)^(0+128)
  5286  0BC9  083A               	movf	(_bbt1+2)^(0+128),w
  5287  0BCA  00C2               	movwf	(_bbtu+2)^(0+128)
  5288  0BCB  0839               	movf	(_bbt1+1)^(0+128),w
  5289  0BCC  00C1               	movwf	(_bbtu+1)^(0+128)
  5290  0BCD  0838               	movf	_bbt1^(0+128),w
  5291  0BCE  00C0               	movwf	_bbtu^(0+128)
  5292  0BCF  0834               	movf	_bbt0^(0+128),w
  5293  0BD0  02C0               	subwf	_bbtu^(0+128),f
  5294  0BD1  0835               	movf	(_bbt0+1)^(0+128),w
  5295  0BD2  3BC1               	subwfb	(_bbtu+1)^(0+128),f
  5296  0BD3  0836               	movf	(_bbt0+2)^(0+128),w
  5297  0BD4  3BC2               	subwfb	(_bbtu+2)^(0+128),f
  5298  0BD5  0837               	movf	(_bbt0+3)^(0+128),w
  5299  0BD6  3BC3               	subwfb	(_bbtu+3)^(0+128),f
  5300                           
  5301                           ;sample.c: 206: bbta=(bbmax-bbmin)/2;
  5302  0BD7  0020               	movlb	0	; select bank0
  5303  0BD8  0861               	movf	_bbmax+3,w
  5304  0BD9  00A7               	movwf	___aldiv@dividend+3
  5305  0BDA  0860               	movf	_bbmax+2,w
  5306  0BDB  00A6               	movwf	___aldiv@dividend+2
  5307  0BDC  085F               	movf	_bbmax+1,w
  5308  0BDD  00A5               	movwf	___aldiv@dividend+1
  5309  0BDE  085E               	movf	_bbmax,w
  5310  0BDF  00A4               	movwf	___aldiv@dividend
  5311  0BE0  0021               	movlb	1	; select bank1
  5312  0BE1  0858               	movf	_bbmin^(0+128),w
  5313  0BE2  0020               	movlb	0	; select bank0
  5314  0BE3  02A4               	subwf	___aldiv@dividend,f
  5315  0BE4  0021               	movlb	1	; select bank1
  5316  0BE5  0859               	movf	(_bbmin+1)^(0+128),w
  5317  0BE6  0020               	movlb	0	; select bank0
  5318  0BE7  3BA5               	subwfb	___aldiv@dividend+1,f
  5319  0BE8  0021               	movlb	1	; select bank1
  5320  0BE9  085A               	movf	(_bbmin+2)^(0+128),w
  5321  0BEA  0020               	movlb	0	; select bank0
  5322  0BEB  3BA6               	subwfb	___aldiv@dividend+2,f
  5323  0BEC  0021               	movlb	1	; select bank1
  5324  0BED  085B               	movf	(_bbmin+3)^(0+128),w
  5325  0BEE  0020               	movlb	0	; select bank0
  5326  0BEF  3BA7               	subwfb	___aldiv@dividend+3,f
  5327  0BF0  3002               	movlw	2
  5328  0BF1  00A0               	movwf	___aldiv@divisor
  5329  0BF2  01A1               	clrf	___aldiv@divisor+1
  5330  0BF3  01A2               	clrf	___aldiv@divisor+2
  5331  0BF4  01A3               	clrf	___aldiv@divisor+3
  5332  0BF5  252D  3188         	fcall	___aldiv
  5333  0BF7  0823               	movf	?___aldiv+3,w
  5334  0BF8  0021               	movlb	1	; select bank1
  5335  0BF9  00BF               	movwf	(_bbta+3)^(0+128)
  5336  0BFA  0020               	movlb	0	; select bank0
  5337  0BFB  0822               	movf	?___aldiv+2,w
  5338  0BFC  0021               	movlb	1	; select bank1
  5339  0BFD  00BE               	movwf	(_bbta+2)^(0+128)
  5340  0BFE  0020               	movlb	0	; select bank0
  5341  0BFF  0821               	movf	?___aldiv+1,w
  5342  0C00  0021               	movlb	1	; select bank1
  5343  0C01  00BD               	movwf	(_bbta+1)^(0+128)
  5344  0C02  0020               	movlb	0	; select bank0
  5345  0C03  0820               	movf	?___aldiv,w
  5346  0C04  0021               	movlb	1	; select bank1
  5347  0C05  00BC               	movwf	_bbta^(0+128)
  5348                           
  5349                           ;sample.c: 207: bbu=(1200-2)/2;
  5350  0C06  3002               	movlw	2
  5351  0C07  01C7               	clrf	(_bbu+3)^(0+128)
  5352  0C08  01C6               	clrf	(_bbu+2)^(0+128)
  5353  0C09  00C5               	movwf	(_bbu+1)^(0+128)
  5354  0C0A  3057               	movlw	87
  5355  0C0B  00C4               	movwf	_bbu^(0+128)
  5356                           
  5357                           ;sample.c: 209: bbku=(bbu*40000)/(bbta*314);
  5358  0C0C  083F               	movf	(_bbta+3)^(0+128),w
  5359  0C0D  00F3               	movwf	___lmul@multiplier+3
  5360  0C0E  083E               	movf	(_bbta+2)^(0+128),w
  5361  0C0F  00F2               	movwf	___lmul@multiplier+2
  5362  0C10  083D               	movf	(_bbta+1)^(0+128),w
  5363  0C11  00F1               	movwf	___lmul@multiplier+1
  5364  0C12  083C               	movf	_bbta^(0+128),w
  5365  0C13  00F0               	movwf	___lmul@multiplier
  5366  0C14  3001               	movlw	1
  5367  0C15  01F7               	clrf	___lmul@multiplicand+3
  5368  0C16  01F6               	clrf	___lmul@multiplicand+2
  5369  0C17  00F5               	movwf	___lmul@multiplicand+1
  5370  0C18  303A               	movlw	58
  5371  0C19  00F4               	movwf	___lmul@multiplicand
  5372  0C1A  2508  3188         	fcall	___lmul
  5373  0C1C  0873               	movf	?___lmul+3,w
  5374  0C1D  0020               	movlb	0	; select bank0
  5375  0C1E  00A3               	movwf	___aldiv@divisor+3
  5376  0C1F  0872               	movf	?___lmul+2,w
  5377  0C20  00A2               	movwf	___aldiv@divisor+2
  5378  0C21  0871               	movf	?___lmul+1,w
  5379  0C22  00A1               	movwf	___aldiv@divisor+1
  5380  0C23  0870               	movf	?___lmul,w
  5381  0C24  00A0               	movwf	___aldiv@divisor
  5382  0C25  3002               	movlw	2
  5383  0C26  01F3               	clrf	___lmul@multiplier+3
  5384  0C27  01F2               	clrf	___lmul@multiplier+2
  5385  0C28  00F1               	movwf	___lmul@multiplier+1
  5386  0C29  3057               	movlw	87
  5387  0C2A  00F0               	movwf	___lmul@multiplier
  5388  0C2B  309C               	movlw	156
  5389  0C2C  01F7               	clrf	___lmul@multiplicand+3
  5390  0C2D  01F6               	clrf	___lmul@multiplicand+2
  5391  0C2E  00F5               	movwf	___lmul@multiplicand+1
  5392  0C2F  3040               	movlw	64
  5393  0C30  00F4               	movwf	___lmul@multiplicand
  5394  0C31  2508  3188         	fcall	___lmul
  5395  0C33  2781  3188         	fcall	PL2	;call to abstracted procedure
  5396  0C35  252D  3188         	fcall	___aldiv
  5397  0C37  0823               	movf	?___aldiv+3,w
  5398  0C38  0021               	movlb	1	; select bank1
  5399  0C39  00B3               	movwf	(_bbku+3)^(0+128)
  5400  0C3A  0020               	movlb	0	; select bank0
  5401  0C3B  0822               	movf	?___aldiv+2,w
  5402  0C3C  0021               	movlb	1	; select bank1
  5403  0C3D  00B2               	movwf	(_bbku+2)^(0+128)
  5404  0C3E  0020               	movlb	0	; select bank0
  5405  0C3F  0821               	movf	?___aldiv+1,w
  5406  0C40  0021               	movlb	1	; select bank1
  5407  0C41  00B1               	movwf	(_bbku+1)^(0+128)
  5408  0C42  0020               	movlb	0	; select bank0
  5409  0C43  0820               	movf	?___aldiv,w
  5410  0C44  0021               	movlb	1	; select bank1
  5411  0C45  00B0               	movwf	_bbku^(0+128)
  5412                           
  5413                           ;sample.c: 210: bbku*=100;
  5414  0C46  3064               	movlw	100
  5415  0C47  00F0               	movwf	___lmul@multiplier
  5416  0C48  01F1               	clrf	___lmul@multiplier+1
  5417  0C49  01F2               	clrf	___lmul@multiplier+2
  5418  0C4A  01F3               	clrf	___lmul@multiplier+3
  5419  0C4B  0833               	movf	(_bbku+3)^(0+128),w
  5420  0C4C  00F7               	movwf	___lmul@multiplicand+3
  5421  0C4D  0832               	movf	(_bbku+2)^(0+128),w
  5422  0C4E  00F6               	movwf	___lmul@multiplicand+2
  5423  0C4F  0831               	movf	(_bbku+1)^(0+128),w
  5424  0C50  00F5               	movwf	___lmul@multiplicand+1
  5425  0C51  0830               	movf	_bbku^(0+128),w
  5426  0C52  00F4               	movwf	___lmul@multiplicand
  5427  0C53  2508  3188         	fcall	___lmul
  5428  0C55  0873               	movf	?___lmul+3,w
  5429  0C56  0021               	movlb	1	; select bank1
  5430  0C57  00B3               	movwf	(_bbku+3)^(0+128)
  5431  0C58  0872               	movf	?___lmul+2,w
  5432  0C59  00B2               	movwf	(_bbku+2)^(0+128)
  5433  0C5A  0871               	movf	?___lmul+1,w
  5434  0C5B  00B1               	movwf	(_bbku+1)^(0+128)
  5435  0C5C  0870               	movf	?___lmul,w
  5436  0C5D  00B0               	movwf	_bbku^(0+128)
  5437                           
  5438                           ;sample.c: 212: PidKp=bbku*10/17;
  5439  0C5E  3011               	movlw	17
  5440  0C5F  0020               	movlb	0	; select bank0
  5441  0C60  27B3  3188         	fcall	PL14	;call to abstracted procedure
  5442  0C62  0833               	movf	(_bbku+3)^(0+128),w
  5443  0C63  00F3               	movwf	___lmul@multiplier+3
  5444  0C64  0832               	movf	(_bbku+2)^(0+128),w
  5445  0C65  00F2               	movwf	___lmul@multiplier+2
  5446  0C66  0831               	movf	(_bbku+1)^(0+128),w
  5447  0C67  00F1               	movwf	___lmul@multiplier+1
  5448  0C68  0830               	movf	_bbku^(0+128),w
  5449  0C69  27BF  3188         	fcall	PL18	;call to abstracted procedure
  5450  0C6B  2508  3188         	fcall	___lmul
  5451  0C6D  2781  3188         	fcall	PL2	;call to abstracted procedure
  5452  0C6F  252D  3188         	fcall	___aldiv
  5453  0C71  0823               	movf	?___aldiv+3,w
  5454  0C72  00C7               	movwf	_PidKp+3
  5455  0C73  0822               	movf	?___aldiv+2,w
  5456  0C74  00C6               	movwf	_PidKp+2
  5457  0C75  0821               	movf	?___aldiv+1,w
  5458  0C76  00C5               	movwf	_PidKp+1
  5459  0C77  0820               	movf	?___aldiv,w
  5460  0C78  00C4               	movwf	_PidKp
  5461                           
  5462                           ;sample.c: 213: PidTi=bbtu*10/40;
  5463  0C79  3028               	movlw	40
  5464  0C7A  27B3  3188         	fcall	PL14	;call to abstracted procedure
  5465  0C7C  0843               	movf	(_bbtu+3)^(0+128),w
  5466  0C7D  00F3               	movwf	___lmul@multiplier+3
  5467  0C7E  0842               	movf	(_bbtu+2)^(0+128),w
  5468  0C7F  00F2               	movwf	___lmul@multiplier+2
  5469  0C80  0841               	movf	(_bbtu+1)^(0+128),w
  5470  0C81  00F1               	movwf	___lmul@multiplier+1
  5471  0C82  0840               	movf	_bbtu^(0+128),w
  5472  0C83  27BF  3188         	fcall	PL18	;call to abstracted procedure
  5473  0C85  2508  3188         	fcall	___lmul
  5474  0C87  2781  3188         	fcall	PL2	;call to abstracted procedure
  5475  0C89  252D  3188         	fcall	___aldiv
  5476  0C8B  0823               	movf	?___aldiv+3,w
  5477  0C8C  0021               	movlb	1	; select bank1
  5478  0C8D  00AF               	movwf	(_PidTi+3)^(0+128)
  5479  0C8E  0020               	movlb	0	; select bank0
  5480  0C8F  0822               	movf	?___aldiv+2,w
  5481  0C90  0021               	movlb	1	; select bank1
  5482  0C91  00AE               	movwf	(_PidTi+2)^(0+128)
  5483  0C92  0020               	movlb	0	; select bank0
  5484  0C93  0821               	movf	?___aldiv+1,w
  5485  0C94  0021               	movlb	1	; select bank1
  5486  0C95  00AD               	movwf	(_PidTi+1)^(0+128)
  5487  0C96  0020               	movlb	0	; select bank0
  5488  0C97  0820               	movf	?___aldiv,w
  5489  0C98  0021               	movlb	1	; select bank1
  5490  0C99  00AC               	movwf	_PidTi^(0+128)
  5491                           
  5492                           ;sample.c: 214: PidTd=bbtu/8;
  5493  0C9A  3008               	movlw	8
  5494  0C9B  0020               	movlb	0	; select bank0
  5495  0C9C  27B3  3188         	fcall	PL14	;call to abstracted procedure
  5496  0C9E  0843               	movf	(_bbtu+3)^(0+128),w
  5497  0C9F  0020               	movlb	0	; select bank0
  5498  0CA0  00A7               	movwf	___aldiv@dividend+3
  5499  0CA1  0021               	movlb	1	; select bank1
  5500  0CA2  0842               	movf	(_bbtu+2)^(0+128),w
  5501  0CA3  0020               	movlb	0	; select bank0
  5502  0CA4  00A6               	movwf	___aldiv@dividend+2
  5503  0CA5  0021               	movlb	1	; select bank1
  5504  0CA6  0841               	movf	(_bbtu+1)^(0+128),w
  5505  0CA7  0020               	movlb	0	; select bank0
  5506  0CA8  00A5               	movwf	___aldiv@dividend+1
  5507  0CA9  0021               	movlb	1	; select bank1
  5508  0CAA  0840               	movf	_bbtu^(0+128),w
  5509  0CAB  0020               	movlb	0	; select bank0
  5510  0CAC  00A4               	movwf	___aldiv@dividend
  5511  0CAD  252D  3188         	fcall	___aldiv
  5512                           
  5513                           ;sample.c: 215: pidBbSm=5;
  5514  0CAF  3005               	movlw	5
  5515  0CB0                     L3:	
  5516  0CB0  00DA               	movwf	_pidBbSm
  5517                           
  5518                           ;sample.c: 216: break;
  5519  0CB1  2CBC               	goto	l2360
  5520  0CB2                     l2358:	
  5521  0CB2  085A               	movf	_pidBbSm,w
  5522                           
  5523                           ; Switch size 1, requested type "space"
  5524                           ; Number of cases is 6, Range of values is 0 to 5
  5525                           ; switch strategies available:
  5526                           ; Name         Instructions Cycles
  5527                           ; direct_byte           18     6 (fixed)
  5528                           ; simple_byte           19    10 (average)
  5529                           ; jumptable            260     6 (fixed)
  5530                           ;	Chosen strategy is direct_byte
  5531  0CB3  0084               	movwf	4
  5532  0CB4  3006               	movlw	6
  5533  0CB5  0204               	subwf	4,w
  5534  0CB6  1803               	skipnc
  5535  0CB7  2CBC               	goto	l2360
  5536  0CB8  3181               	movlp	high S2586
  5537  0CB9  3504               	lslf	4,w
  5538  0CBA  3E4C               	addlw	low S2586
  5539  0CBB  0082               	movwf	2
  5540  0CBC                     l2360:	
  5541                           
  5542                           ;sample.c: 218: if(pidTestNum>2){
  5543  0CBC  3003               	movlw	3
  5544  0CBD  025B               	subwf	_pidTestNum,w
  5545  0CBE  1C03               	skipc
  5546  0CBF  0008               	return
  5547                           
  5548                           ;sample.c: 219: if(bbmax<t32)bbmax=t32;
  5549  0CC0  0861               	movf	_bbmax+3,w
  5550  0CC1  3A80               	xorlw	128
  5551  0CC2  00FC               	movwf	??_pid_b_b_process
  5552  0CC3  0831               	movf	pid_b_b_process@t32+3,w
  5553  0CC4  3A80               	xorlw	128
  5554  0CC5  027C               	subwf	??_pid_b_b_process,w
  5555  0CC6  1D03               	skipz
  5556  0CC7  2CD2               	goto	u1143
  5557  0CC8  0830               	movf	pid_b_b_process@t32+2,w
  5558  0CC9  0260               	subwf	_bbmax+2,w
  5559  0CCA  1D03               	skipz
  5560  0CCB  2CD2               	goto	u1143
  5561  0CCC  082F               	movf	pid_b_b_process@t32+1,w
  5562  0CCD  025F               	subwf	_bbmax+1,w
  5563  0CCE  1D03               	skipz
  5564  0CCF  2CD2               	goto	u1143
  5565  0CD0  082E               	movf	pid_b_b_process@t32,w
  5566  0CD1  025E               	subwf	_bbmax,w
  5567  0CD2                     u1143:	
  5568  0CD2  0831               	movf	pid_b_b_process@t32+3,w
  5569  0CD3  1803               	skipnc
  5570  0CD4  2CDD               	goto	L4
  5571  0CD5  00E1               	movwf	_bbmax+3
  5572  0CD6  0830               	movf	pid_b_b_process@t32+2,w
  5573  0CD7  00E0               	movwf	_bbmax+2
  5574  0CD8  082F               	movf	pid_b_b_process@t32+1,w
  5575  0CD9  00DF               	movwf	_bbmax+1
  5576  0CDA  082E               	movf	pid_b_b_process@t32,w
  5577  0CDB  00DE               	movwf	_bbmax
  5578                           
  5579                           ;sample.c: 220: if(bbmin>t32)bbmin=t32;
  5580  0CDC  0831               	movf	pid_b_b_process@t32+3,w
  5581  0CDD                     L4:	
  5582  0CDD  3A80               	xorlw	128
  5583  0CDE  00FC               	movwf	??_pid_b_b_process
  5584  0CDF  0021               	movlb	1	; select bank1
  5585  0CE0  085B               	movf	(_bbmin+3)^(0+128),w
  5586  0CE1  3A80               	xorlw	128
  5587  0CE2  027C               	subwf	??_pid_b_b_process,w
  5588  0CE3  0020               	movlb	0	; select bank0
  5589  0CE4  1D03               	skipz
  5590  0CE5  2CF6               	goto	u1153
  5591  0CE6  0021               	movlb	1	; select bank1
  5592  0CE7  085A               	movf	(_bbmin+2)^(0+128),w
  5593  0CE8  0020               	movlb	0	; select bank0
  5594  0CE9  0230               	subwf	pid_b_b_process@t32+2,w
  5595  0CEA  1D03               	skipz
  5596  0CEB  2CF6               	goto	u1153
  5597  0CEC  0021               	movlb	1	; select bank1
  5598  0CED  0859               	movf	(_bbmin+1)^(0+128),w
  5599  0CEE  0020               	movlb	0	; select bank0
  5600  0CEF  022F               	subwf	pid_b_b_process@t32+1,w
  5601  0CF0  1D03               	skipz
  5602  0CF1  2CF6               	goto	u1153
  5603  0CF2  0021               	movlb	1	; select bank1
  5604  0CF3  0858               	movf	_bbmin^(0+128),w
  5605  0CF4  0020               	movlb	0	; select bank0
  5606  0CF5  022E               	subwf	pid_b_b_process@t32,w
  5607  0CF6                     u1153:	
  5608  0CF6  1803               	skipnc
  5609  0CF7  0008               	return
  5610  0CF8  0831               	movf	pid_b_b_process@t32+3,w
  5611  0CF9  0021               	movlb	1	; select bank1
  5612  0CFA  00DB               	movwf	(_bbmin+3)^(0+128)
  5613  0CFB  0020               	movlb	0	; select bank0
  5614  0CFC  0830               	movf	pid_b_b_process@t32+2,w
  5615  0CFD  0021               	movlb	1	; select bank1
  5616  0CFE  00DA               	movwf	(_bbmin+2)^(0+128)
  5617  0CFF  0020               	movlb	0	; select bank0
  5618  0D00  082F               	movf	pid_b_b_process@t32+1,w
  5619  0D01  0021               	movlb	1	; select bank1
  5620  0D02  00D9               	movwf	(_bbmin+1)^(0+128)
  5621  0D03  0020               	movlb	0	; select bank0
  5622  0D04  082E               	movf	pid_b_b_process@t32,w
  5623  0D05  0021               	movlb	1	; select bank1
  5624  0D06  00D8               	movwf	_bbmin^(0+128)
  5625  0D07                     l630:	
  5626  0D07  0008               	return
  5627  0D08                     __end_of_pid_b_b_process:	
  5628  0D08                     __ptext17:	
  5629 ;; *************** function ___lmul *****************
  5630 ;; Defined at:
  5631 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul32.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;  multiplier      4    0[COMMON] unsigned long 
  5634 ;;  multiplicand    4    4[COMMON] unsigned long 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;  product         4    8[COMMON] unsigned long 
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  4    0[COMMON] unsigned long 
  5639 ;; Registers used:
  5640 ;;		wreg, status,2, status,0
  5641 ;; Tracked objects:
  5642 ;;		On entry : 1E/0
  5643 ;;		On exit  : 1E/0
  5644 ;;		Unchanged: 1E/0
  5645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5646 ;;      Params:         8       0       0       0       0       0       0       0
  5647 ;;      Locals:         4       0       0       0       0       0       0       0
  5648 ;;      Temps:          0       0       0       0       0       0       0       0
  5649 ;;      Totals:        12       0       0       0       0       0       0       0
  5650 ;;Total ram usage:       12 bytes
  5651 ;; Hardware stack levels used:    1
  5652 ;; Hardware stack levels required when called:    1
  5653 ;; This function calls:
  5654 ;;		Nothing
  5655 ;; This function is called by:
  5656 ;;		_calc_temp_rs
  5657 ;;		_calc_temp_rc
  5658 ;;		_pid_b_b_process
  5659 ;;		_pid_run_process
  5660 ;;		_cal_voout_pwm_duty
  5661 ;; This function uses a non-reentrant model
  5662 ;;
  5663                           
  5664                           
  5665                           ;psect for function ___lmul
  5666  0D08                     ___lmul:	
  5667                           
  5668                           ;incstack = 0
  5669                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5670  0D08  01F8               	clrf	___lmul@product
  5671  0D09  01F9               	clrf	___lmul@product+1
  5672  0D0A  01FA               	clrf	___lmul@product+2
  5673  0D0B  01FB               	clrf	___lmul@product+3
  5674  0D0C                     l901:	
  5675  0D0C  1C70               	btfss	___lmul@multiplier,0
  5676  0D0D  2D16               	goto	l2116
  5677  0D0E  0874               	movf	___lmul@multiplicand,w
  5678  0D0F  07F8               	addwf	___lmul@product,f
  5679  0D10  0875               	movf	___lmul@multiplicand+1,w
  5680  0D11  3DF9               	addwfc	___lmul@product+1,f
  5681  0D12  0876               	movf	___lmul@multiplicand+2,w
  5682  0D13  3DFA               	addwfc	___lmul@product+2,f
  5683  0D14  0877               	movf	___lmul@multiplicand+3,w
  5684  0D15  3DFB               	addwfc	___lmul@product+3,f
  5685  0D16                     l2116:	
  5686  0D16  35F4               	lslf	___lmul@multiplicand,f
  5687  0D17  0DF5               	rlf	___lmul@multiplicand+1,f
  5688  0D18  0DF6               	rlf	___lmul@multiplicand+2,f
  5689  0D19  0DF7               	rlf	___lmul@multiplicand+3,f
  5690  0D1A  36F3               	lsrf	___lmul@multiplier+3,f
  5691  0D1B  0CF2               	rrf	___lmul@multiplier+2,f
  5692  0D1C  0CF1               	rrf	___lmul@multiplier+1,f
  5693  0D1D  0CF0               	rrf	___lmul@multiplier,f
  5694  0D1E  0873               	movf	___lmul@multiplier+3,w
  5695  0D1F  0472               	iorwf	___lmul@multiplier+2,w
  5696  0D20  0471               	iorwf	___lmul@multiplier+1,w
  5697  0D21  0470               	iorwf	___lmul@multiplier,w
  5698  0D22  1D03               	skipz
  5699  0D23  2D0C               	goto	l901
  5700  0D24  087B               	movf	___lmul@product+3,w
  5701  0D25  00F3               	movwf	?___lmul+3
  5702  0D26  087A               	movf	___lmul@product+2,w
  5703  0D27  00F2               	movwf	?___lmul+2
  5704  0D28  0879               	movf	___lmul@product+1,w
  5705  0D29  00F1               	movwf	?___lmul+1
  5706  0D2A  0878               	movf	___lmul@product,w
  5707  0D2B  00F0               	movwf	?___lmul
  5708  0D2C  0008               	return
  5709  0D2D                     __end_of___lmul:	
  5710  0D2D                     __ptext12:	
  5711 ;; *************** function ___aldiv *****************
  5712 ;; Defined at:
  5713 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\aldiv.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;  divisor         4    0[BANK0 ] long 
  5716 ;;  dividend        4    4[BANK0 ] long 
  5717 ;; Auto vars:     Size  Location     Type
  5718 ;;  quotient        4   10[BANK0 ] long 
  5719 ;;  sign            1    9[BANK0 ] unsigned char 
  5720 ;;  counter         1    8[BANK0 ] unsigned char 
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  4    0[BANK0 ] long 
  5723 ;; Registers used:
  5724 ;;		wreg, status,2, status,0
  5725 ;; Tracked objects:
  5726 ;;		On entry : 1F/0
  5727 ;;		On exit  : 1F/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5730 ;;      Params:         0       8       0       0       0       0       0       0
  5731 ;;      Locals:         0       6       0       0       0       0       0       0
  5732 ;;      Temps:          0       0       0       0       0       0       0       0
  5733 ;;      Totals:         0      14       0       0       0       0       0       0
  5734 ;;Total ram usage:       14 bytes
  5735 ;; Hardware stack levels used:    1
  5736 ;; Hardware stack levels required when called:    1
  5737 ;; This function calls:
  5738 ;;		Nothing
  5739 ;; This function is called by:
  5740 ;;		_pid_b_b_process
  5741 ;;		_pid_run_process
  5742 ;;		_m_int_2_str_ex
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           
  5747                           ;psect for function ___aldiv
  5748  0D2D                     ___aldiv:	
  5749                           
  5750                           ;incstack = 0
  5751                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  5752  0D2D  01A9               	clrf	___aldiv@sign
  5753  0D2E  1FA3               	btfss	___aldiv@divisor+3,7
  5754  0D2F  2D3D               	goto	l945
  5755  0D30  09A0               	comf	___aldiv@divisor,f
  5756  0D31  09A1               	comf	___aldiv@divisor+1,f
  5757  0D32  09A2               	comf	___aldiv@divisor+2,f
  5758  0D33  09A3               	comf	___aldiv@divisor+3,f
  5759  0D34  0AA0               	incf	___aldiv@divisor,f
  5760  0D35  1903               	skipnz
  5761  0D36  0AA1               	incf	___aldiv@divisor+1,f
  5762  0D37  1903               	skipnz
  5763  0D38  0AA2               	incf	___aldiv@divisor+2,f
  5764  0D39  1903               	skipnz
  5765  0D3A  0AA3               	incf	___aldiv@divisor+3,f
  5766  0D3B  01A9               	clrf	___aldiv@sign
  5767  0D3C  0AA9               	incf	___aldiv@sign,f
  5768  0D3D                     l945:	
  5769  0D3D  1FA7               	btfss	___aldiv@dividend+3,7
  5770  0D3E  2D4C               	goto	l2134
  5771  0D3F  09A4               	comf	___aldiv@dividend,f
  5772  0D40  09A5               	comf	___aldiv@dividend+1,f
  5773  0D41  09A6               	comf	___aldiv@dividend+2,f
  5774  0D42  09A7               	comf	___aldiv@dividend+3,f
  5775  0D43  0AA4               	incf	___aldiv@dividend,f
  5776  0D44  1903               	skipnz
  5777  0D45  0AA5               	incf	___aldiv@dividend+1,f
  5778  0D46  1903               	skipnz
  5779  0D47  0AA6               	incf	___aldiv@dividend+2,f
  5780  0D48  1903               	skipnz
  5781  0D49  0AA7               	incf	___aldiv@dividend+3,f
  5782  0D4A  3001               	movlw	1
  5783  0D4B  06A9               	xorwf	___aldiv@sign,f
  5784  0D4C                     l2134:	
  5785  0D4C  01AA               	clrf	___aldiv@quotient
  5786  0D4D  01AB               	clrf	___aldiv@quotient+1
  5787  0D4E  01AC               	clrf	___aldiv@quotient+2
  5788  0D4F  01AD               	clrf	___aldiv@quotient+3
  5789  0D50  0823               	movf	___aldiv@divisor+3,w
  5790  0D51  0422               	iorwf	___aldiv@divisor+2,w
  5791  0D52  0421               	iorwf	___aldiv@divisor+1,w
  5792  0D53  0420               	iorwf	___aldiv@divisor,w
  5793  0D54  1903               	skipnz
  5794  0D55  2D82               	goto	l2156
  5795  0D56  01A8               	clrf	___aldiv@counter
  5796  0D57                     L6:	
  5797  0D57  0AA8               	incf	___aldiv@counter,f
  5798  0D58  1BA3               	btfsc	___aldiv@divisor+3,7
  5799  0D59  2D5F               	goto	l2144
  5800  0D5A  35A0               	lslf	___aldiv@divisor,f
  5801  0D5B  0DA1               	rlf	___aldiv@divisor+1,f
  5802  0D5C  0DA2               	rlf	___aldiv@divisor+2,f
  5803  0D5D  0DA3               	rlf	___aldiv@divisor+3,f
  5804  0D5E  2D57               	goto	L6
  5805  0D5F                     l2144:	
  5806  0D5F  35AA               	lslf	___aldiv@quotient,f
  5807  0D60  0DAB               	rlf	___aldiv@quotient+1,f
  5808  0D61  0DAC               	rlf	___aldiv@quotient+2,f
  5809  0D62  0DAD               	rlf	___aldiv@quotient+3,f
  5810  0D63  0823               	movf	___aldiv@divisor+3,w
  5811  0D64  0227               	subwf	___aldiv@dividend+3,w
  5812  0D65  1D03               	skipz
  5813  0D66  2D71               	goto	u825
  5814  0D67  0822               	movf	___aldiv@divisor+2,w
  5815  0D68  0226               	subwf	___aldiv@dividend+2,w
  5816  0D69  1D03               	skipz
  5817  0D6A  2D71               	goto	u825
  5818  0D6B  0821               	movf	___aldiv@divisor+1,w
  5819  0D6C  0225               	subwf	___aldiv@dividend+1,w
  5820  0D6D  1D03               	skipz
  5821  0D6E  2D71               	goto	u825
  5822  0D6F  0820               	movf	___aldiv@divisor,w
  5823  0D70  0224               	subwf	___aldiv@dividend,w
  5824  0D71                     u825:	
  5825  0D71  1C03               	skipc
  5826  0D72  2D7C               	goto	l2152
  5827  0D73  0820               	movf	___aldiv@divisor,w
  5828  0D74  02A4               	subwf	___aldiv@dividend,f
  5829  0D75  0821               	movf	___aldiv@divisor+1,w
  5830  0D76  3BA5               	subwfb	___aldiv@dividend+1,f
  5831  0D77  0822               	movf	___aldiv@divisor+2,w
  5832  0D78  3BA6               	subwfb	___aldiv@dividend+2,f
  5833  0D79  0823               	movf	___aldiv@divisor+3,w
  5834  0D7A  3BA7               	subwfb	___aldiv@dividend+3,f
  5835  0D7B  142A               	bsf	___aldiv@quotient,0
  5836  0D7C                     l2152:	
  5837  0D7C  36A3               	lsrf	___aldiv@divisor+3,f
  5838  0D7D  0CA2               	rrf	___aldiv@divisor+2,f
  5839  0D7E  0CA1               	rrf	___aldiv@divisor+1,f
  5840  0D7F  0CA0               	rrf	___aldiv@divisor,f
  5841  0D80  0BA8               	decfsz	___aldiv@counter,f
  5842  0D81  2D5F               	goto	l2144
  5843  0D82                     l2156:	
  5844  0D82  0829               	movf	___aldiv@sign,w
  5845  0D83  1903               	btfsc	3,2
  5846  0D84  2D90               	goto	l2160
  5847  0D85  09AA               	comf	___aldiv@quotient,f
  5848  0D86  09AB               	comf	___aldiv@quotient+1,f
  5849  0D87  09AC               	comf	___aldiv@quotient+2,f
  5850  0D88  09AD               	comf	___aldiv@quotient+3,f
  5851  0D89  0AAA               	incf	___aldiv@quotient,f
  5852  0D8A  1903               	skipnz
  5853  0D8B  0AAB               	incf	___aldiv@quotient+1,f
  5854  0D8C  1903               	skipnz
  5855  0D8D  0AAC               	incf	___aldiv@quotient+2,f
  5856  0D8E  1903               	skipnz
  5857  0D8F  0AAD               	incf	___aldiv@quotient+3,f
  5858  0D90                     l2160:	
  5859  0D90  082D               	movf	___aldiv@quotient+3,w
  5860  0D91  00A3               	movwf	?___aldiv+3
  5861  0D92  082C               	movf	___aldiv@quotient+2,w
  5862  0D93  00A2               	movwf	?___aldiv+2
  5863  0D94  082B               	movf	___aldiv@quotient+1,w
  5864  0D95  00A1               	movwf	?___aldiv+1
  5865  0D96  082A               	movf	___aldiv@quotient,w
  5866  0D97  00A0               	movwf	?___aldiv
  5867  0D98  0008               	return
  5868  0D99                     __end_of___aldiv:	
  5869  0D99                     __ptext6:	
  5870 ;; *************** function _set_idrv_pwm1_duty *****************
  5871 ;; Defined at:
  5872 ;;		line 24 in file "src/api/sample.c"
  5873 ;; Parameters:    Size  Location     Type
  5874 ;;  duty            2    2[COMMON] unsigned int 
  5875 ;; Auto vars:     Size  Location     Type
  5876 ;;  t16             2    4[COMMON] unsigned int 
  5877 ;; Return value:  Size  Location     Type
  5878 ;;                  1    wreg      void 
  5879 ;; Registers used:
  5880 ;;		wreg, pclath, cstack
  5881 ;; Tracked objects:
  5882 ;;		On entry : 1F/0
  5883 ;;		On exit  : 1F/1B
  5884 ;;		Unchanged: 0/0
  5885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5886 ;;      Params:         2       0       0       0       0       0       0       0
  5887 ;;      Locals:         2       0       0       0       0       0       0       0
  5888 ;;      Temps:          0       0       0       0       0       0       0       0
  5889 ;;      Totals:         4       0       0       0       0       0       0       0
  5890 ;;Total ram usage:        4 bytes
  5891 ;; Hardware stack levels used:    1
  5892 ;; Hardware stack levels required when called:    2
  5893 ;; This function calls:
  5894 ;;		_get_idrv_pwm1_duty
  5895 ;; This function is called by:
  5896 ;;		_pid_b_b_process
  5897 ;;		_pid_run_process
  5898 ;; This function uses a non-reentrant model
  5899 ;;
  5900                           
  5901                           
  5902                           ;psect for function _set_idrv_pwm1_duty
  5903  0D99                     _set_idrv_pwm1_duty:	
  5904  0D99                     l2056:	
  5905                           ;incstack = 0
  5906                           ; Regs used in _set_idrv_pwm1_duty: [wreg+pclath+cstack]
  5907                           
  5908                           
  5909                           ;sample.c: 26: uint16_t t16;
  5910                           ;sample.c: 27: t16=get_idrv_pwm1_duty();
  5911  0D99  276E  3188         	fcall	_get_idrv_pwm1_duty
  5912  0D9B  0871               	movf	?_get_idrv_pwm1_duty+1,w
  5913  0D9C  00F5               	movwf	set_idrv_pwm1_duty@t16+1
  5914  0D9D  0870               	movf	?_get_idrv_pwm1_duty,w
  5915  0D9E  00F4               	movwf	set_idrv_pwm1_duty@t16
  5916                           
  5917                           ;sample.c: 28: if(t16==duty)return;
  5918  0D9F  0873               	movf	set_idrv_pwm1_duty@duty+1,w
  5919  0DA0  0675               	xorwf	set_idrv_pwm1_duty@t16+1,w
  5920  0DA1  1D03               	skipz
  5921  0DA2  2DA5               	goto	u705
  5922  0DA3  0872               	movf	set_idrv_pwm1_duty@duty,w
  5923  0DA4  0674               	xorwf	set_idrv_pwm1_duty@t16,w
  5924  0DA5                     u705:	
  5925  0DA5  1903               	btfsc	3,2
  5926  0DA6  0008               	return
  5927                           
  5928                           ;sample.c: 29: PWM1CONbits.EN = 0;
  5929  0DA7  139B               	bcf	27,7	;volatile
  5930                           
  5931                           ;sample.c: 30: PWM1DCL= (uint8_t)(duty&0xff);
  5932  0DA8  0872               	movf	set_idrv_pwm1_duty@duty,w
  5933  0DA9  0093               	movwf	19	;volatile
  5934                           
  5935                           ;sample.c: 31: PWM1DCH=(uint8_t)(duty>>8);
  5936  0DAA  0873               	movf	set_idrv_pwm1_duty@duty+1,w
  5937  0DAB  0094               	movwf	20	;volatile
  5938                           
  5939                           ;sample.c: 32: PWM1CONbits.EN = 1;
  5940  0DAC  179B               	bsf	27,7	;volatile
  5941  0DAD  0008               	return
  5942  0DAE                     __end_of_set_idrv_pwm1_duty:	
  5943  0DAE                     __ptext28:	
  5944 ;; *************** function _PWM1_Initialize *****************
  5945 ;; Defined at:
  5946 ;;		line 58 in file "mcc_generated_files/pwm1.c"
  5947 ;; Parameters:    Size  Location     Type
  5948 ;;		None
  5949 ;; Auto vars:     Size  Location     Type
  5950 ;;		None
  5951 ;; Return value:  Size  Location     Type
  5952 ;;                  1    wreg      void 
  5953 ;; Registers used:
  5954 ;;		wreg, status,2
  5955 ;; Tracked objects:
  5956 ;;		On entry : 1F/2
  5957 ;;		On exit  : 1F/1B
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5960 ;;      Params:         0       0       0       0       0       0       0       0
  5961 ;;      Locals:         0       0       0       0       0       0       0       0
  5962 ;;      Temps:          0       0       0       0       0       0       0       0
  5963 ;;      Totals:         0       0       0       0       0       0       0       0
  5964 ;;Total ram usage:        0 bytes
  5965 ;; Hardware stack levels used:    1
  5966 ;; Hardware stack levels required when called:    1
  5967 ;; This function calls:
  5968 ;;		Nothing
  5969 ;; This function is called by:
  5970 ;;		_SYSTEM_Initialize
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           
  5975                           ;psect for function _PWM1_Initialize
  5976  0DAE                     _PWM1_Initialize:	
  5977                           
  5978                           ;pwm1.c: 63: PWM1INTE = 0x00;
  5979                           
  5980                           ;incstack = 0
  5981                           ; Regs used in _PWM1_Initialize: [wreg+status,2]
  5982  0DAE  003B               	movlb	27	; select bank27
  5983  0DAF  019C               	clrf	28	;volatile
  5984                           
  5985                           ;pwm1.c: 66: PWM1INTF = 0x00;
  5986  0DB0  019D               	clrf	29	;volatile
  5987                           
  5988                           ;pwm1.c: 69: PWM1CLKCON = 0x00;
  5989  0DB1  019E               	clrf	30	;volatile
  5990                           
  5991                           ;pwm1.c: 72: PWM1LDCON = 0x80;
  5992  0DB2  3080               	movlw	128
  5993  0DB3  009F               	movwf	31	;volatile
  5994                           
  5995                           ;pwm1.c: 75: PWM1OFCON = 0x00;
  5996  0DB4  01A0               	clrf	32	;volatile
  5997                           
  5998                           ;pwm1.c: 78: PWM1PHH = 0x00;
  5999  0DB5  0192               	clrf	18	;volatile
  6000                           
  6001                           ;pwm1.c: 81: PWM1PHL = 0x00;
  6002  0DB6  0191               	clrf	17	;volatile
  6003                           
  6004                           ;pwm1.c: 84: PWM1DCH = 0x00;
  6005  0DB7  0194               	clrf	20	;volatile
  6006                           
  6007                           ;pwm1.c: 87: PWM1DCL = 0xa0;
  6008  0DB8  30A0               	movlw	160
  6009  0DB9  0093               	movwf	19	;volatile
  6010                           
  6011                           ;pwm1.c: 90: PWM1PRH = 0x06;
  6012  0DBA  3006               	movlw	6
  6013  0DBB  0096               	movwf	22	;volatile
  6014                           
  6015                           ;pwm1.c: 93: PWM1PRL = 0x3F;
  6016  0DBC  303F               	movlw	63
  6017  0DBD  0095               	movwf	21	;volatile
  6018                           
  6019                           ;pwm1.c: 96: PWM1OFH = 0x00;
  6020  0DBE  0198               	clrf	24	;volatile
  6021                           
  6022                           ;pwm1.c: 99: PWM1OFL = 0x01;
  6023  0DBF  3001               	movlw	1
  6024  0DC0  0097               	movwf	23	;volatile
  6025                           
  6026                           ;pwm1.c: 102: PWM1TMRH = 0x00;
  6027  0DC1  019A               	clrf	26	;volatile
  6028                           
  6029                           ;pwm1.c: 105: PWM1TMRL = 0x00;
  6030  0DC2  0199               	clrf	25	;volatile
  6031                           
  6032                           ;pwm1.c: 108: PWM1CON = 0x90;
  6033  0DC3  3090               	movlw	144
  6034  0DC4  009B               	movwf	27	;volatile
  6035  0DC5  0008               	return
  6036  0DC6                     __end_of_PWM1_Initialize:	
  6037  0DC6                     __ptext27:	
  6038 ;; *************** function _PWM2_Initialize *****************
  6039 ;; Defined at:
  6040 ;;		line 58 in file "mcc_generated_files/pwm2.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;		None
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;		None
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1    wreg      void 
  6047 ;; Registers used:
  6048 ;;		wreg, status,2
  6049 ;; Tracked objects:
  6050 ;;		On entry : 1F/1B
  6051 ;;		On exit  : 1F/1B
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6054 ;;      Params:         0       0       0       0       0       0       0       0
  6055 ;;      Locals:         0       0       0       0       0       0       0       0
  6056 ;;      Temps:          0       0       0       0       0       0       0       0
  6057 ;;      Totals:         0       0       0       0       0       0       0       0
  6058 ;;Total ram usage:        0 bytes
  6059 ;; Hardware stack levels used:    1
  6060 ;; Hardware stack levels required when called:    1
  6061 ;; This function calls:
  6062 ;;		Nothing
  6063 ;; This function is called by:
  6064 ;;		_SYSTEM_Initialize
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           
  6069                           ;psect for function _PWM2_Initialize
  6070  0DC6                     _PWM2_Initialize:	
  6071                           
  6072                           ;pwm2.c: 63: PWM2INTE = 0x00;
  6073                           
  6074                           ;incstack = 0
  6075                           ; Regs used in _PWM2_Initialize: [wreg+status,2]
  6076  0DC6  01AC               	clrf	44	;volatile
  6077                           
  6078                           ;pwm2.c: 66: PWM2INTF = 0x00;
  6079  0DC7  01AD               	clrf	45	;volatile
  6080                           
  6081                           ;pwm2.c: 69: PWM2CLKCON = 0x00;
  6082  0DC8  01AE               	clrf	46	;volatile
  6083                           
  6084                           ;pwm2.c: 72: PWM2LDCON = 0x80;
  6085  0DC9  3080               	movlw	128
  6086  0DCA  00AF               	movwf	47	;volatile
  6087                           
  6088                           ;pwm2.c: 75: PWM2OFCON = 0x00;
  6089  0DCB  01B0               	clrf	48	;volatile
  6090                           
  6091                           ;pwm2.c: 78: PWM2PHH = 0x00;
  6092  0DCC  01A2               	clrf	34	;volatile
  6093                           
  6094                           ;pwm2.c: 81: PWM2PHL = 0x00;
  6095  0DCD  01A1               	clrf	33	;volatile
  6096                           
  6097                           ;pwm2.c: 84: PWM2DCH = 0x00;
  6098  0DCE  01A4               	clrf	36	;volatile
  6099                           
  6100                           ;pwm2.c: 87: PWM2DCL = 0xA0;
  6101  0DCF  30A0               	movlw	160
  6102  0DD0  00A3               	movwf	35	;volatile
  6103                           
  6104                           ;pwm2.c: 90: PWM2PRH = 0x06;
  6105  0DD1  3006               	movlw	6
  6106  0DD2  00A6               	movwf	38	;volatile
  6107                           
  6108                           ;pwm2.c: 93: PWM2PRL = 0x3F;
  6109  0DD3  303F               	movlw	63
  6110  0DD4  00A5               	movwf	37	;volatile
  6111                           
  6112                           ;pwm2.c: 96: PWM2OFH = 0x00;
  6113  0DD5  01A8               	clrf	40	;volatile
  6114                           
  6115                           ;pwm2.c: 99: PWM2OFL = 0x01;
  6116  0DD6  3001               	movlw	1
  6117  0DD7  00A7               	movwf	39	;volatile
  6118                           
  6119                           ;pwm2.c: 102: PWM2TMRH = 0x00;
  6120  0DD8  01AA               	clrf	42	;volatile
  6121                           
  6122                           ;pwm2.c: 105: PWM2TMRL = 0x00;
  6123  0DD9  01A9               	clrf	41	;volatile
  6124                           
  6125                           ;pwm2.c: 108: PWM2CON = 0x90;
  6126  0DDA  3090               	movlw	144
  6127  0DDB  00AB               	movwf	43	;volatile
  6128  0DDC  0008               	return
  6129  0DDD                     __end_of_PWM2_Initialize:	
  6130  0DDD                     __ptext23:	
  6131 ;; *************** function _WDT_Initialize *****************
  6132 ;; Defined at:
  6133 ;;		line 90 in file "mcc_generated_files/mcc.c"
  6134 ;; Parameters:    Size  Location     Type
  6135 ;;		None
  6136 ;; Auto vars:     Size  Location     Type
  6137 ;;		None
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  1    wreg      void 
  6140 ;; Registers used:
  6141 ;;		wreg
  6142 ;; Tracked objects:
  6143 ;;		On entry : 1F/1
  6144 ;;		On exit  : 1F/1
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6147 ;;      Params:         0       0       0       0       0       0       0       0
  6148 ;;      Locals:         0       0       0       0       0       0       0       0
  6149 ;;      Temps:          0       0       0       0       0       0       0       0
  6150 ;;      Totals:         0       0       0       0       0       0       0       0
  6151 ;;Total ram usage:        0 bytes
  6152 ;; Hardware stack levels used:    1
  6153 ;; Hardware stack levels required when called:    1
  6154 ;; This function calls:
  6155 ;;		Nothing
  6156 ;; This function is called by:
  6157 ;;		_SYSTEM_Initialize
  6158 ;; This function uses a non-reentrant model
  6159 ;;
  6160                           
  6161                           
  6162                           ;psect for function _WDT_Initialize
  6163  0DDD                     _WDT_Initialize:	
  6164                           
  6165                           ;mcc.c: 93: WDTCON = 0x16;
  6166                           
  6167                           ;incstack = 0
  6168                           ; Regs used in _WDT_Initialize: [wreg]
  6169  0DDD  3016               	movlw	22
  6170  0DDE  0097               	movwf	23	;volatile
  6171  0DDF  0008               	return
  6172  0DE0                     __end_of_WDT_Initialize:	
  6173  0DE0                     __ptext21:	
  6174 ;; *************** function _adc_init *****************
  6175 ;; Defined at:
  6176 ;;		line 61 in file "src/api/sample.c"
  6177 ;; Parameters:    Size  Location     Type
  6178 ;;  ch              1    wreg     enum E4968
  6179 ;; Auto vars:     Size  Location     Type
  6180 ;;  ch              1    1[COMMON] enum E4968
  6181 ;; Return value:  Size  Location     Type
  6182 ;;                  1    wreg      void 
  6183 ;; Registers used:
  6184 ;;		wreg, status,2, status,0
  6185 ;; Tracked objects:
  6186 ;;		On entry : 1F/2
  6187 ;;		On exit  : 1F/1
  6188 ;;		Unchanged: 0/0
  6189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6190 ;;      Params:         0       0       0       0       0       0       0       0
  6191 ;;      Locals:         1       0       0       0       0       0       0       0
  6192 ;;      Temps:          1       0       0       0       0       0       0       0
  6193 ;;      Totals:         2       0       0       0       0       0       0       0
  6194 ;;Total ram usage:        2 bytes
  6195 ;; Hardware stack levels used:    1
  6196 ;; Hardware stack levels required when called:    1
  6197 ;; This function calls:
  6198 ;;		Nothing
  6199 ;; This function is called by:
  6200 ;;		_adc_sample
  6201 ;; This function uses a non-reentrant model
  6202 ;;
  6203                           
  6204                           
  6205                           ;psect for function _adc_init
  6206  0DE0                     _adc_init:	
  6207                           
  6208                           ;incstack = 0
  6209                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  6210                           ;adc_init@ch stored from wreg
  6211  0DE0  00F1               	movwf	adc_init@ch
  6212  0DE1                     l574:	
  6213                           ;sample.c: 63: while (ADCON0bits.GO_nDONE);
  6214                           
  6215  0DE1  0021               	movlb	1	; select bank1
  6216  0DE2  189D               	btfsc	29,1	;volatile
  6217  0DE3  2DE1               	goto	l574
  6218                           
  6219                           ;sample.c: 64: ADCON0bits.CHS = ch;
  6220  0DE4  0871               	movf	adc_init@ch,w
  6221  0DE5  00F0               	movwf	??_adc_init
  6222  0DE6  0DF0               	rlf	??_adc_init,f
  6223  0DE7  0DF0               	rlf	??_adc_init,f
  6224  0DE8  081D               	movf	29,w	;volatile
  6225  0DE9  0670               	xorwf	??_adc_init,w
  6226  0DEA  3983               	andlw	-125
  6227  0DEB  0670               	xorwf	??_adc_init,w
  6228  0DEC  009D               	movwf	29	;volatile
  6229                           
  6230                           ;sample.c: 65: ADCON0bits.ADON = 1;
  6231  0DED  141D               	bsf	29,0	;volatile
  6232                           
  6233                           ;sample.c: 66: ADCON1 = 0x63;
  6234                           
  6235                           ;sample.c: 67: ADCON2 = 0x00;
  6236                           
  6237                           ;sample.c: 68: ADRESL = 0x00;
  6238                           
  6239                           ;sample.c: 69: ADRESH = 0x00;
  6240  0DEE  2FB9               	ljmp	PL16	;call to abstracted procedure
  6241  0DEF                     __end_of_adc_init:	
  6242  0DEF                     __ptext20:	
  6243 ;; *************** function _fvr_set_gain *****************
  6244 ;; Defined at:
  6245 ;;		line 52 in file "src/api/sample.c"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;  g               1    wreg     unsigned char 
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;  g               1    1[COMMON] unsigned char 
  6250 ;;  t8              1    0[COMMON] unsigned char 
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  1    wreg      void 
  6253 ;; Registers used:
  6254 ;;		wreg, status,2, status,0
  6255 ;; Tracked objects:
  6256 ;;		On entry : 0/1B
  6257 ;;		On exit  : 1F/2
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6260 ;;      Params:         0       0       0       0       0       0       0       0
  6261 ;;      Locals:         2       0       0       0       0       0       0       0
  6262 ;;      Temps:          0       0       0       0       0       0       0       0
  6263 ;;      Totals:         2       0       0       0       0       0       0       0
  6264 ;;Total ram usage:        2 bytes
  6265 ;; Hardware stack levels used:    1
  6266 ;; Hardware stack levels required when called:    1
  6267 ;; This function calls:
  6268 ;;		Nothing
  6269 ;; This function is called by:
  6270 ;;		_adc_sample
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274                           
  6275                           ;psect for function _fvr_set_gain
  6276  0DEF                     _fvr_set_gain:	
  6277                           
  6278                           ;incstack = 0
  6279                           ; Regs used in _fvr_set_gain: [wreg+status,2+status,0]
  6280                           ;fvr_set_gain@g stored from wreg
  6281  0DEF  00F1               	movwf	fvr_set_gain@g
  6282                           
  6283                           ;sample.c: 54: uint8_t t8=0x80;
  6284  0DF0  3080               	movlw	128
  6285  0DF1  00F0               	movwf	fvr_set_gain@t8
  6286                           
  6287                           ;sample.c: 55: if(g>3)g=3;
  6288  0DF2  3004               	movlw	4
  6289  0DF3  0271               	subwf	fvr_set_gain@g,w
  6290  0DF4  1C03               	skipc
  6291  0DF5  2DF8               	goto	l2074
  6292  0DF6  3003               	movlw	3
  6293  0DF7  00F1               	movwf	fvr_set_gain@g
  6294  0DF8                     l2074:	
  6295                           
  6296                           ;sample.c: 56: t8|=g;
  6297  0DF8  0871               	movf	fvr_set_gain@g,w
  6298  0DF9  04F0               	iorwf	fvr_set_gain@t8,f
  6299                           
  6300                           ;sample.c: 57: FVRCON = t8;
  6301  0DFA  0870               	movf	fvr_set_gain@t8,w
  6302  0DFB  0022               	movlb	2	; select bank2
  6303  0DFC  0097               	movwf	23	;volatile
  6304  0DFD                     l568:	
  6305                           ;sample.c: 58: while(!(FVRCONbits.FVRRDY));
  6306                           
  6307  0DFD  1B17               	btfsc	23,6	;volatile
  6308  0DFE  0008               	return
  6309  0DFF  2DFD               	goto	l568
  6310  0E00                     __end_of_fvr_set_gain:	
  6311  0E00                     __ptext16:	
  6312 ;; *************** function _cal_voout_pwm_duty *****************
  6313 ;; Defined at:
  6314 ;;		line 281 in file "src/api/sample.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;		None
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;  t32             4    2[BANK0 ] unsigned long 
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  2    0[BANK0 ] unsigned int 
  6321 ;; Registers used:
  6322 ;;		wreg, status,2, status,0, pclath, cstack
  6323 ;; Tracked objects:
  6324 ;;		On entry : 1F/1B
  6325 ;;		On exit  : 1F/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6328 ;;      Params:         0       2       0       0       0       0       0       0
  6329 ;;      Locals:         0       4       0       0       0       0       0       0
  6330 ;;      Temps:          0       0       0       0       0       0       0       0
  6331 ;;      Totals:         0       6       0       0       0       0       0       0
  6332 ;;Total ram usage:        6 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    2
  6335 ;; This function calls:
  6336 ;;		___lldiv
  6337 ;;		___lmul
  6338 ;; This function is called by:
  6339 ;;		_main
  6340 ;; This function uses a non-reentrant model
  6341 ;;
  6342                           
  6343                           
  6344                           ;psect for function _cal_voout_pwm_duty
  6345  0E00                     _cal_voout_pwm_duty:	
  6346                           
  6347                           ;sample.c: 283: uint32_t t32;
  6348                           ;sample.c: 284: t32=rtAdcValueRsLoAvg;
  6349                           
  6350                           ;incstack = 0
  6351                           ; Regs used in _cal_voout_pwm_duty: [wreg+status,2+status,0+pclath+cstack]
  6352  0E00  0020               	movlb	0	; select bank0
  6353  0E01  0856               	movf	_rtAdcValueRsLoAvg,w
  6354  0E02  00A2               	movwf	cal_voout_pwm_duty@t32
  6355  0E03  0857               	movf	_rtAdcValueRsLoAvg+1,w
  6356  0E04  00A3               	movwf	cal_voout_pwm_duty@t32+1
  6357  0E05  01A4               	clrf	cal_voout_pwm_duty@t32+2
  6358  0E06  01A5               	clrf	cal_voout_pwm_duty@t32+3
  6359                           
  6360                           ;sample.c: 285: if(t32>7200){
  6361  0E07  0825               	movf	cal_voout_pwm_duty@t32+3,w
  6362  0E08  1D03               	btfss	3,2
  6363  0E09  2E13               	goto	l2414
  6364  0E0A  0824               	movf	cal_voout_pwm_duty@t32+2,w
  6365  0E0B  1D03               	btfss	3,2
  6366  0E0C  2E13               	goto	l2414
  6367  0E0D  3021               	movlw	33
  6368  0E0E  0222               	subwf	cal_voout_pwm_duty@t32,w
  6369  0E0F  301C               	movlw	28
  6370  0E10  3B23               	subwfb	cal_voout_pwm_duty@t32+1,w
  6371  0E11  1C03               	btfss	3,0
  6372  0E12  2E1B               	goto	l663
  6373  0E13                     l2414:	
  6374                           
  6375                           ;sample.c: 286: t32-=7200;
  6376  0E13  3020               	movlw	32
  6377  0E14  02A2               	subwf	cal_voout_pwm_duty@t32,f
  6378  0E15  301C               	movlw	28
  6379  0E16  3BA3               	subwfb	cal_voout_pwm_duty@t32+1,f
  6380  0E17  3000               	movlw	0
  6381  0E18  3BA4               	subwfb	cal_voout_pwm_duty@t32+2,f
  6382  0E19  3BA5               	subwfb	cal_voout_pwm_duty@t32+3,f
  6383                           
  6384                           ;sample.c: 287: }else{
  6385  0E1A  2E1F               	goto	l2416
  6386  0E1B                     l663:	
  6387                           
  6388                           ;sample.c: 288: t32=0;
  6389  0E1B  01A2               	clrf	cal_voout_pwm_duty@t32
  6390  0E1C  01A3               	clrf	cal_voout_pwm_duty@t32+1
  6391  0E1D  01A4               	clrf	cal_voout_pwm_duty@t32+2
  6392  0E1E  01A5               	clrf	cal_voout_pwm_duty@t32+3
  6393  0E1F                     l2416:	
  6394                           
  6395                           ;sample.c: 289: }
  6396                           ;sample.c: 291: t32*=1600;
  6397  0E1F  3006               	movlw	6
  6398  0E20  01F3               	clrf	___lmul@multiplier+3
  6399  0E21  01F2               	clrf	___lmul@multiplier+2
  6400  0E22  00F1               	movwf	___lmul@multiplier+1
  6401  0E23  3040               	movlw	64
  6402  0E24  00F0               	movwf	___lmul@multiplier
  6403  0E25  0825               	movf	cal_voout_pwm_duty@t32+3,w
  6404  0E26  00F7               	movwf	___lmul@multiplicand+3
  6405  0E27  0824               	movf	cal_voout_pwm_duty@t32+2,w
  6406  0E28  00F6               	movwf	___lmul@multiplicand+2
  6407  0E29  0823               	movf	cal_voout_pwm_duty@t32+1,w
  6408  0E2A  00F5               	movwf	___lmul@multiplicand+1
  6409  0E2B  0822               	movf	cal_voout_pwm_duty@t32,w
  6410  0E2C  00F4               	movwf	___lmul@multiplicand
  6411  0E2D  2508  3188         	fcall	___lmul
  6412  0E2F  0873               	movf	?___lmul+3,w
  6413  0E30  0020               	movlb	0	; select bank0
  6414  0E31  00A5               	movwf	cal_voout_pwm_duty@t32+3
  6415  0E32  0872               	movf	?___lmul+2,w
  6416  0E33  00A4               	movwf	cal_voout_pwm_duty@t32+2
  6417  0E34  0871               	movf	?___lmul+1,w
  6418  0E35  00A3               	movwf	cal_voout_pwm_duty@t32+1
  6419  0E36  0870               	movf	?___lmul,w
  6420  0E37  00A2               	movwf	cal_voout_pwm_duty@t32
  6421                           
  6422                           ;sample.c: 292: t32/=30000;
  6423  0E38  3075               	movlw	117
  6424  0E39  01F3               	clrf	___lldiv@divisor+3
  6425  0E3A  01F2               	clrf	___lldiv@divisor+2
  6426  0E3B  00F1               	movwf	___lldiv@divisor+1
  6427  0E3C  3030               	movlw	48
  6428  0E3D  00F0               	movwf	___lldiv@divisor
  6429  0E3E  0825               	movf	cal_voout_pwm_duty@t32+3,w
  6430  0E3F  00F7               	movwf	___lldiv@dividend+3
  6431  0E40  0824               	movf	cal_voout_pwm_duty@t32+2,w
  6432  0E41  00F6               	movwf	___lldiv@dividend+2
  6433  0E42  0823               	movf	cal_voout_pwm_duty@t32+1,w
  6434  0E43  00F5               	movwf	___lldiv@dividend+1
  6435  0E44  0822               	movf	cal_voout_pwm_duty@t32,w
  6436  0E45  00F4               	movwf	___lldiv@dividend
  6437  0E46  2679  3188         	fcall	___lldiv
  6438  0E48  0873               	movf	?___lldiv+3,w
  6439  0E49  00A5               	movwf	cal_voout_pwm_duty@t32+3
  6440  0E4A  0872               	movf	?___lldiv+2,w
  6441  0E4B  00A4               	movwf	cal_voout_pwm_duty@t32+2
  6442  0E4C  0871               	movf	?___lldiv+1,w
  6443  0E4D  00A3               	movwf	cal_voout_pwm_duty@t32+1
  6444  0E4E  0870               	movf	?___lldiv,w
  6445  0E4F  00A2               	movwf	cal_voout_pwm_duty@t32
  6446                           
  6447                           ;sample.c: 293: if(t32>1500)t32=1500;
  6448  0E50  0825               	movf	cal_voout_pwm_duty@t32+3,w
  6449  0E51  1D03               	btfss	3,2
  6450  0E52  2E5C               	goto	l2420
  6451  0E53  0824               	movf	cal_voout_pwm_duty@t32+2,w
  6452  0E54  1D03               	btfss	3,2
  6453  0E55  2E5C               	goto	l2420
  6454  0E56  30DD               	movlw	221
  6455  0E57  0222               	subwf	cal_voout_pwm_duty@t32,w
  6456  0E58  3005               	movlw	5
  6457  0E59  3B23               	subwfb	cal_voout_pwm_duty@t32+1,w
  6458  0E5A  1C03               	btfss	3,0
  6459  0E5B  2E62               	goto	l2422
  6460  0E5C                     l2420:	
  6461  0E5C  3005               	movlw	5
  6462  0E5D  01A5               	clrf	cal_voout_pwm_duty@t32+3
  6463  0E5E  01A4               	clrf	cal_voout_pwm_duty@t32+2
  6464  0E5F  00A3               	movwf	cal_voout_pwm_duty@t32+1
  6465  0E60  30DC               	movlw	220
  6466  0E61  00A2               	movwf	cal_voout_pwm_duty@t32
  6467  0E62                     l2422:	
  6468                           
  6469                           ;sample.c: 294: if(t32<20)t32=20;
  6470  0E62  0825               	movf	cal_voout_pwm_duty@t32+3,w
  6471  0E63  1D03               	btfss	3,2
  6472  0E64  2E74               	goto	l666
  6473  0E65  0824               	movf	cal_voout_pwm_duty@t32+2,w
  6474  0E66  1D03               	btfss	3,2
  6475  0E67  2E74               	goto	l666
  6476  0E68  0823               	movf	cal_voout_pwm_duty@t32+1,w
  6477  0E69  1D03               	btfss	3,2
  6478  0E6A  2E74               	goto	l666
  6479  0E6B  3014               	movlw	20
  6480  0E6C  0222               	subwf	cal_voout_pwm_duty@t32,w
  6481  0E6D  1803               	btfsc	3,0
  6482  0E6E  2E74               	goto	l666
  6483  0E6F  3014               	movlw	20
  6484  0E70  00A2               	movwf	cal_voout_pwm_duty@t32
  6485  0E71  01A3               	clrf	cal_voout_pwm_duty@t32+1
  6486  0E72  01A4               	clrf	cal_voout_pwm_duty@t32+2
  6487  0E73  01A5               	clrf	cal_voout_pwm_duty@t32+3
  6488  0E74                     l666:	
  6489                           
  6490                           ;sample.c: 295: return (uint16_t)t32;
  6491  0E74  0823               	movf	cal_voout_pwm_duty@t32+1,w
  6492  0E75  00A1               	movwf	?_cal_voout_pwm_duty+1
  6493  0E76  0822               	movf	cal_voout_pwm_duty@t32,w
  6494  0E77  00A0               	movwf	?_cal_voout_pwm_duty
  6495  0E78  0008               	return
  6496  0E79                     __end_of_cal_voout_pwm_duty:	
  6497  0E79                     __ptext18:	
  6498 ;; *************** function ___lldiv *****************
  6499 ;; Defined at:
  6500 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lldiv.c"
  6501 ;; Parameters:    Size  Location     Type
  6502 ;;  divisor         4    0[COMMON] unsigned long 
  6503 ;;  dividend        4    4[COMMON] unsigned long 
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;  quotient        4    8[COMMON] unsigned long 
  6506 ;;  counter         1   12[COMMON] unsigned char 
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  4    0[COMMON] unsigned long 
  6509 ;; Registers used:
  6510 ;;		wreg, status,2, status,0
  6511 ;; Tracked objects:
  6512 ;;		On entry : 1F/0
  6513 ;;		On exit  : 1F/0
  6514 ;;		Unchanged: 1F/0
  6515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6516 ;;      Params:         8       0       0       0       0       0       0       0
  6517 ;;      Locals:         5       0       0       0       0       0       0       0
  6518 ;;      Temps:          0       0       0       0       0       0       0       0
  6519 ;;      Totals:        13       0       0       0       0       0       0       0
  6520 ;;Total ram usage:       13 bytes
  6521 ;; Hardware stack levels used:    1
  6522 ;; Hardware stack levels required when called:    1
  6523 ;; This function calls:
  6524 ;;		Nothing
  6525 ;; This function is called by:
  6526 ;;		_calc_temp_rs
  6527 ;;		_calc_temp_rc
  6528 ;;		_cal_voout_pwm_duty
  6529 ;; This function uses a non-reentrant model
  6530 ;;
  6531                           
  6532                           
  6533                           ;psect for function ___lldiv
  6534  0E79                     ___lldiv:	
  6535                           
  6536                           ;incstack = 0
  6537                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6538  0E79  01F8               	clrf	___lldiv@quotient
  6539  0E7A  01F9               	clrf	___lldiv@quotient+1
  6540  0E7B  01FA               	clrf	___lldiv@quotient+2
  6541  0E7C  01FB               	clrf	___lldiv@quotient+3
  6542  0E7D  0873               	movf	___lldiv@divisor+3,w
  6543  0E7E  0472               	iorwf	___lldiv@divisor+2,w
  6544  0E7F  0471               	iorwf	___lldiv@divisor+1,w
  6545  0E80  0470               	iorwf	___lldiv@divisor,w
  6546  0E81  1903               	skipnz
  6547  0E82  2EAF               	goto	l2218
  6548  0E83  01FC               	clrf	___lldiv@counter
  6549  0E84                     L7:	
  6550  0E84  0AFC               	incf	___lldiv@counter,f
  6551  0E85  1BF3               	btfsc	___lldiv@divisor+3,7
  6552  0E86  2E8C               	goto	l2206
  6553  0E87  35F0               	lslf	___lldiv@divisor,f
  6554  0E88  0DF1               	rlf	___lldiv@divisor+1,f
  6555  0E89  0DF2               	rlf	___lldiv@divisor+2,f
  6556  0E8A  0DF3               	rlf	___lldiv@divisor+3,f
  6557  0E8B  2E84               	goto	L7
  6558  0E8C                     l2206:	
  6559  0E8C  35F8               	lslf	___lldiv@quotient,f
  6560  0E8D  0DF9               	rlf	___lldiv@quotient+1,f
  6561  0E8E  0DFA               	rlf	___lldiv@quotient+2,f
  6562  0E8F  0DFB               	rlf	___lldiv@quotient+3,f
  6563  0E90  0873               	movf	___lldiv@divisor+3,w
  6564  0E91  0277               	subwf	___lldiv@dividend+3,w
  6565  0E92  1D03               	skipz
  6566  0E93  2E9E               	goto	u945
  6567  0E94  0872               	movf	___lldiv@divisor+2,w
  6568  0E95  0276               	subwf	___lldiv@dividend+2,w
  6569  0E96  1D03               	skipz
  6570  0E97  2E9E               	goto	u945
  6571  0E98  0871               	movf	___lldiv@divisor+1,w
  6572  0E99  0275               	subwf	___lldiv@dividend+1,w
  6573  0E9A  1D03               	skipz
  6574  0E9B  2E9E               	goto	u945
  6575  0E9C  0870               	movf	___lldiv@divisor,w
  6576  0E9D  0274               	subwf	___lldiv@dividend,w
  6577  0E9E                     u945:	
  6578  0E9E  1C03               	skipc
  6579  0E9F  2EA9               	goto	l2214
  6580  0EA0  0870               	movf	___lldiv@divisor,w
  6581  0EA1  02F4               	subwf	___lldiv@dividend,f
  6582  0EA2  0871               	movf	___lldiv@divisor+1,w
  6583  0EA3  3BF5               	subwfb	___lldiv@dividend+1,f
  6584  0EA4  0872               	movf	___lldiv@divisor+2,w
  6585  0EA5  3BF6               	subwfb	___lldiv@dividend+2,f
  6586  0EA6  0873               	movf	___lldiv@divisor+3,w
  6587  0EA7  3BF7               	subwfb	___lldiv@dividend+3,f
  6588  0EA8  1478               	bsf	___lldiv@quotient,0
  6589  0EA9                     l2214:	
  6590  0EA9  36F3               	lsrf	___lldiv@divisor+3,f
  6591  0EAA  0CF2               	rrf	___lldiv@divisor+2,f
  6592  0EAB  0CF1               	rrf	___lldiv@divisor+1,f
  6593  0EAC  0CF0               	rrf	___lldiv@divisor,f
  6594  0EAD  0BFC               	decfsz	___lldiv@counter,f
  6595  0EAE  2E8C               	goto	l2206
  6596  0EAF                     l2218:	
  6597  0EAF  087B               	movf	___lldiv@quotient+3,w
  6598  0EB0  00F3               	movwf	?___lldiv+3
  6599  0EB1  087A               	movf	___lldiv@quotient+2,w
  6600  0EB2  00F2               	movwf	?___lldiv+2
  6601  0EB3  0879               	movf	___lldiv@quotient+1,w
  6602  0EB4  00F1               	movwf	?___lldiv+1
  6603  0EB5  0878               	movf	___lldiv@quotient,w
  6604  0EB6  00F0               	movwf	?___lldiv
  6605  0EB7  0008               	return
  6606  0EB8                     __end_of___lldiv:	
  6607  0EB8                     __ptext15:	
  6608 ;; *************** function _calc_current_rs_avg *****************
  6609 ;; Defined at:
  6610 ;;		line 258 in file "src/api/sample.c"
  6611 ;; Parameters:    Size  Location     Type
  6612 ;;		None
  6613 ;; Auto vars:     Size  Location     Type
  6614 ;;		None
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  2    0[COMMON] unsigned int 
  6617 ;; Registers used:
  6618 ;;		wreg
  6619 ;; Tracked objects:
  6620 ;;		On entry : 1F/0
  6621 ;;		On exit  : 1F/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6624 ;;      Params:         2       0       0       0       0       0       0       0
  6625 ;;      Locals:         0       0       0       0       0       0       0       0
  6626 ;;      Temps:          0       0       0       0       0       0       0       0
  6627 ;;      Totals:         2       0       0       0       0       0       0       0
  6628 ;;Total ram usage:        2 bytes
  6629 ;; Hardware stack levels used:    1
  6630 ;; Hardware stack levels required when called:    1
  6631 ;; This function calls:
  6632 ;;		Nothing
  6633 ;; This function is called by:
  6634 ;;		_main
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           
  6639                           ;psect for function _calc_current_rs_avg
  6640  0EB8                     _calc_current_rs_avg:	
  6641                           
  6642                           ;sample.c: 274: return rtAdcValueRsLo;
  6643                           
  6644                           ;incstack = 0
  6645                           ; Regs used in _calc_current_rs_avg: [wreg]
  6646  0EB8  0855               	movf	_rtAdcValueRsLo+1,w
  6647  0EB9  00F1               	movwf	?_calc_current_rs_avg+1
  6648  0EBA  0854               	movf	_rtAdcValueRsLo,w
  6649  0EBB  00F0               	movwf	?_calc_current_rs_avg
  6650  0EBC  0008               	return
  6651  0EBD                     __end_of_calc_current_rs_avg:	
  6652  0EBD                     __ptext14:	
  6653 ;; *************** function _calc_temp_rc *****************
  6654 ;; Defined at:
  6655 ;;		line 124 in file "src/api/sample.c"
  6656 ;; Parameters:    Size  Location     Type
  6657 ;;		None
  6658 ;; Auto vars:     Size  Location     Type
  6659 ;;  y               4   12[BANK0 ] unsigned long 
  6660 ;;  x               4    8[BANK0 ] unsigned long 
  6661 ;; Return value:  Size  Location     Type
  6662 ;;                  4    0[BANK0 ] unsigned long 
  6663 ;; Registers used:
  6664 ;;		wreg, status,2, status,0, pclath, cstack
  6665 ;; Tracked objects:
  6666 ;;		On entry : 0/0
  6667 ;;		On exit  : 1F/0
  6668 ;;		Unchanged: 0/0
  6669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6670 ;;      Params:         0       4       0       0       0       0       0       0
  6671 ;;      Locals:         0       8       0       0       0       0       0       0
  6672 ;;      Temps:          0       4       0       0       0       0       0       0
  6673 ;;      Totals:         0      16       0       0       0       0       0       0
  6674 ;;Total ram usage:       16 bytes
  6675 ;; Hardware stack levels used:    1
  6676 ;; Hardware stack levels required when called:    2
  6677 ;; This function calls:
  6678 ;;		___lldiv
  6679 ;;		___lmul
  6680 ;; This function is called by:
  6681 ;;		_main
  6682 ;; This function uses a non-reentrant model
  6683 ;;
  6684                           
  6685                           
  6686                           ;psect for function _calc_temp_rc
  6687  0EBD                     _calc_temp_rc:	
  6688                           
  6689                           ;sample.c: 127: uint32_t x,y;
  6690                           ;sample.c: 128: x=300000UL;
  6691                           
  6692                           ;incstack = 0
  6693                           ; Regs used in _calc_temp_rc: [wreg+status,2+status,0+pclath+cstack]
  6694  0EBD  0020               	movlb	0	; select bank0
  6695  0EBE  3004               	movlw	4
  6696  0EBF  01AB               	clrf	calc_temp_rc@x+3
  6697  0EC0  00AA               	movwf	calc_temp_rc@x+2
  6698  0EC1  3093               	movlw	147
  6699  0EC2  00A9               	movwf	calc_temp_rc@x+1
  6700  0EC3  30E0               	movlw	224
  6701  0EC4  00A8               	movwf	calc_temp_rc@x
  6702                           
  6703                           ;sample.c: 129: x=x*rtAdcValueRcLo;
  6704  0EC5  0850               	movf	_rtAdcValueRcLo,w
  6705  0EC6  00F0               	movwf	___lmul@multiplier
  6706  0EC7  0851               	movf	_rtAdcValueRcLo+1,w
  6707  0EC8  00F1               	movwf	___lmul@multiplier+1
  6708  0EC9  01F2               	clrf	___lmul@multiplier+2
  6709  0ECA  01F3               	clrf	___lmul@multiplier+3
  6710  0ECB  082B               	movf	calc_temp_rc@x+3,w
  6711  0ECC  00F7               	movwf	___lmul@multiplicand+3
  6712  0ECD  082A               	movf	calc_temp_rc@x+2,w
  6713  0ECE  00F6               	movwf	___lmul@multiplicand+2
  6714  0ECF  0829               	movf	calc_temp_rc@x+1,w
  6715  0ED0  00F5               	movwf	___lmul@multiplicand+1
  6716  0ED1  0828               	movf	calc_temp_rc@x,w
  6717  0ED2  00F4               	movwf	___lmul@multiplicand
  6718  0ED3  2508  3188         	fcall	___lmul
  6719  0ED5  0873               	movf	?___lmul+3,w
  6720  0ED6  0020               	movlb	0	; select bank0
  6721  0ED7  00AB               	movwf	calc_temp_rc@x+3
  6722  0ED8  0872               	movf	?___lmul+2,w
  6723  0ED9  00AA               	movwf	calc_temp_rc@x+2
  6724  0EDA  0871               	movf	?___lmul+1,w
  6725  0EDB  00A9               	movwf	calc_temp_rc@x+1
  6726  0EDC  0870               	movf	?___lmul,w
  6727  0EDD  00A8               	movwf	calc_temp_rc@x
  6728                           
  6729                           ;sample.c: 132: y=rtAdcValueRcHi;
  6730  0EDE  084E               	movf	_rtAdcValueRcHi,w
  6731  0EDF  00AC               	movwf	calc_temp_rc@y
  6732  0EE0  084F               	movf	_rtAdcValueRcHi+1,w
  6733  0EE1  00AD               	movwf	calc_temp_rc@y+1
  6734  0EE2  300C               	movlw	12
  6735  0EE3  01AE               	clrf	calc_temp_rc@y+2
  6736  0EE4  01AF               	clrf	calc_temp_rc@y+3
  6737                           
  6738                           ;sample.c: 133: y=y*3140;
  6739  0EE5  01F3               	clrf	___lmul@multiplier+3
  6740  0EE6  01F2               	clrf	___lmul@multiplier+2
  6741  0EE7  00F1               	movwf	___lmul@multiplier+1
  6742  0EE8  3044               	movlw	68
  6743  0EE9  00F0               	movwf	___lmul@multiplier
  6744  0EEA  082F               	movf	calc_temp_rc@y+3,w
  6745  0EEB  00F7               	movwf	___lmul@multiplicand+3
  6746  0EEC  082E               	movf	calc_temp_rc@y+2,w
  6747  0EED  00F6               	movwf	___lmul@multiplicand+2
  6748  0EEE  082D               	movf	calc_temp_rc@y+1,w
  6749  0EEF  00F5               	movwf	___lmul@multiplicand+1
  6750  0EF0  082C               	movf	calc_temp_rc@y,w
  6751  0EF1  00F4               	movwf	___lmul@multiplicand
  6752  0EF2  2508  3188         	fcall	___lmul
  6753  0EF4  0873               	movf	?___lmul+3,w
  6754  0EF5  0020               	movlb	0	; select bank0
  6755  0EF6  00AF               	movwf	calc_temp_rc@y+3
  6756  0EF7  0872               	movf	?___lmul+2,w
  6757  0EF8  00AE               	movwf	calc_temp_rc@y+2
  6758  0EF9  0871               	movf	?___lmul+1,w
  6759  0EFA  00AD               	movwf	calc_temp_rc@y+1
  6760  0EFB  0870               	movf	?___lmul,w
  6761  0EFC  00AC               	movwf	calc_temp_rc@y
  6762                           
  6763                           ;sample.c: 134: y=y/100;
  6764  0EFD  3064               	movlw	100
  6765  0EFE  00F0               	movwf	___lldiv@divisor
  6766  0EFF  01F1               	clrf	___lldiv@divisor+1
  6767  0F00  01F2               	clrf	___lldiv@divisor+2
  6768  0F01  01F3               	clrf	___lldiv@divisor+3
  6769  0F02  082F               	movf	calc_temp_rc@y+3,w
  6770  0F03  00F7               	movwf	___lldiv@dividend+3
  6771  0F04  082E               	movf	calc_temp_rc@y+2,w
  6772  0F05  00F6               	movwf	___lldiv@dividend+2
  6773  0F06  082D               	movf	calc_temp_rc@y+1,w
  6774  0F07  00F5               	movwf	___lldiv@dividend+1
  6775  0F08  082C               	movf	calc_temp_rc@y,w
  6776  0F09  00F4               	movwf	___lldiv@dividend
  6777  0F0A  2679  3188         	fcall	___lldiv
  6778  0F0C  278B  3188         	fcall	PL4	;call to abstracted procedure
  6779                           
  6780                           ;sample.c: 135: y=y-rtAdcValueRcLo;
  6781  0F0E  0850               	movf	_rtAdcValueRcLo,w
  6782  0F0F  00A4               	movwf	??_calc_temp_rc
  6783  0F10  0851               	movf	_rtAdcValueRcLo+1,w
  6784  0F11  00A5               	movwf	??_calc_temp_rc+1
  6785  0F12  01A6               	clrf	??_calc_temp_rc+2
  6786  0F13  01A7               	clrf	??_calc_temp_rc+3
  6787  0F14  0824               	movf	??_calc_temp_rc,w
  6788  0F15  02AC               	subwf	calc_temp_rc@y,f
  6789  0F16  0825               	movf	??_calc_temp_rc+1,w
  6790  0F17  3BAD               	subwfb	calc_temp_rc@y+1,f
  6791  0F18  0826               	movf	??_calc_temp_rc+2,w
  6792  0F19  3BAE               	subwfb	calc_temp_rc@y+2,f
  6793  0F1A  0827               	movf	??_calc_temp_rc+3,w
  6794  0F1B  3BAF               	subwfb	calc_temp_rc@y+3,f
  6795                           
  6796                           ;sample.c: 138: y=x/y;
  6797  0F1C  082F               	movf	calc_temp_rc@y+3,w
  6798  0F1D  00F3               	movwf	___lldiv@divisor+3
  6799  0F1E  082E               	movf	calc_temp_rc@y+2,w
  6800  0F1F  00F2               	movwf	___lldiv@divisor+2
  6801  0F20  082D               	movf	calc_temp_rc@y+1,w
  6802  0F21  00F1               	movwf	___lldiv@divisor+1
  6803  0F22  082C               	movf	calc_temp_rc@y,w
  6804  0F23  00F0               	movwf	___lldiv@divisor
  6805  0F24  082B               	movf	calc_temp_rc@x+3,w
  6806  0F25  00F7               	movwf	___lldiv@dividend+3
  6807  0F26  082A               	movf	calc_temp_rc@x+2,w
  6808  0F27  00F6               	movwf	___lldiv@dividend+2
  6809  0F28  0829               	movf	calc_temp_rc@x+1,w
  6810  0F29  00F5               	movwf	___lldiv@dividend+1
  6811  0F2A  0828               	movf	calc_temp_rc@x,w
  6812  0F2B  00F4               	movwf	___lldiv@dividend
  6813  0F2C  2679  3188         	fcall	___lldiv
  6814  0F2E  278B  3188         	fcall	PL4	;call to abstracted procedure
  6815                           
  6816                           ;sample.c: 139: if(y<2000)y=2000;
  6817  0F30  082F               	movf	calc_temp_rc@y+3,w
  6818  0F31  1D03               	btfss	3,2
  6819  0F32  2F42               	goto	l2314
  6820  0F33  082E               	movf	calc_temp_rc@y+2,w
  6821  0F34  1D03               	btfss	3,2
  6822  0F35  2F42               	goto	l2314
  6823  0F36  30D0               	movlw	208
  6824  0F37  022C               	subwf	calc_temp_rc@y,w
  6825  0F38  3007               	movlw	7
  6826  0F39  3B2D               	subwfb	calc_temp_rc@y+1,w
  6827  0F3A  1803               	btfsc	3,0
  6828  0F3B  2F42               	goto	l2314
  6829  0F3C  3007               	movlw	7
  6830  0F3D  01AF               	clrf	calc_temp_rc@y+3
  6831  0F3E  01AE               	clrf	calc_temp_rc@y+2
  6832  0F3F  00AD               	movwf	calc_temp_rc@y+1
  6833  0F40  30D0               	movlw	208
  6834  0F41  00AC               	movwf	calc_temp_rc@y
  6835  0F42                     l2314:	
  6836                           
  6837                           ;sample.c: 140: if(y>25000)y=25000;
  6838  0F42  082F               	movf	calc_temp_rc@y+3,w
  6839  0F43  1D03               	btfss	3,2
  6840  0F44  2F4E               	goto	l2316
  6841  0F45  082E               	movf	calc_temp_rc@y+2,w
  6842  0F46  1D03               	btfss	3,2
  6843  0F47  2F4E               	goto	l2316
  6844  0F48  30A9               	movlw	169
  6845  0F49  022C               	subwf	calc_temp_rc@y,w
  6846  0F4A  3061               	movlw	97
  6847  0F4B  3B2D               	subwfb	calc_temp_rc@y+1,w
  6848  0F4C  1C03               	btfss	3,0
  6849  0F4D  2F54               	goto	l596
  6850  0F4E                     l2316:	
  6851  0F4E  3061               	movlw	97
  6852  0F4F  01AF               	clrf	calc_temp_rc@y+3
  6853  0F50  01AE               	clrf	calc_temp_rc@y+2
  6854  0F51  00AD               	movwf	calc_temp_rc@y+1
  6855  0F52  30A8               	movlw	168
  6856  0F53  00AC               	movwf	calc_temp_rc@y
  6857  0F54                     l596:	
  6858                           
  6859                           ;sample.c: 142: return y;
  6860  0F54  082F               	movf	calc_temp_rc@y+3,w
  6861  0F55  00A3               	movwf	?_calc_temp_rc+3
  6862  0F56  082E               	movf	calc_temp_rc@y+2,w
  6863  0F57  00A2               	movwf	?_calc_temp_rc+2
  6864  0F58  082D               	movf	calc_temp_rc@y+1,w
  6865  0F59  00A1               	movwf	?_calc_temp_rc+1
  6866  0F5A  082C               	movf	calc_temp_rc@y,w
  6867  0F5B  00A0               	movwf	?_calc_temp_rc
  6868  0F5C  0008               	return
  6869  0F5D                     __end_of_calc_temp_rc:	
  6870  0F5D                     __ptext9:	
  6871 ;; *************** function _m_mem_set *****************
  6872 ;; Defined at:
  6873 ;;		line 32 in file "src/depend/m_string.c"
  6874 ;; Parameters:    Size  Location     Type
  6875 ;;  buf             1    wreg     PTR unsigned char 
  6876 ;;		 -> str(16), 
  6877 ;;  x               1    0[COMMON] unsigned char 
  6878 ;;  len             2    1[COMMON] unsigned int 
  6879 ;; Auto vars:     Size  Location     Type
  6880 ;;  buf             1    3[COMMON] PTR unsigned char 
  6881 ;;		 -> str(16), 
  6882 ;; Return value:  Size  Location     Type
  6883 ;;                  1    wreg      void 
  6884 ;; Registers used:
  6885 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6886 ;; Tracked objects:
  6887 ;;		On entry : 1F/0
  6888 ;;		On exit  : 1F/0
  6889 ;;		Unchanged: 1F/0
  6890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6891 ;;      Params:         3       0       0       0       0       0       0       0
  6892 ;;      Locals:         1       0       0       0       0       0       0       0
  6893 ;;      Temps:          0       0       0       0       0       0       0       0
  6894 ;;      Totals:         4       0       0       0       0       0       0       0
  6895 ;;Total ram usage:        4 bytes
  6896 ;; Hardware stack levels used:    1
  6897 ;; Hardware stack levels required when called:    1
  6898 ;; This function calls:
  6899 ;;		Nothing
  6900 ;; This function is called by:
  6901 ;;		_m_int_2_str_ex
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           
  6906                           ;psect for function _m_mem_set
  6907  0F5D                     _m_mem_set:	
  6908                           
  6909                           ;incstack = 0
  6910                           ; Regs used in _m_mem_set: [wreg+fsr1l+fsr1h+status,2+status,0]
  6911                           ;m_mem_set@buf stored from wreg
  6912  0F5D  00F3               	movwf	m_mem_set@buf
  6913  0F5E                     l2098:	
  6914                           ;m_string.c: 34: while(len--)
  6915                           
  6916  0F5E  3001               	movlw	1
  6917  0F5F  02F1               	subwf	m_mem_set@len,f
  6918  0F60  3000               	movlw	0
  6919  0F61  3BF2               	subwfb	m_mem_set@len+1,f
  6920  0F62  0F71               	incfsz	m_mem_set@len,w
  6921  0F63  2F67               	goto	l2094
  6922  0F64  0A72               	incf	m_mem_set@len+1,w
  6923  0F65  1903               	btfsc	3,2
  6924  0F66  0008               	return
  6925  0F67                     l2094:	
  6926                           
  6927                           ;m_string.c: 35: {
  6928                           ;m_string.c: 36: *buf++=x;
  6929  0F67  0873               	movf	m_mem_set@buf,w
  6930  0F68  0086               	movwf	6
  6931  0F69  0187               	clrf	7
  6932  0F6A  0870               	movf	m_mem_set@x,w
  6933  0F6B  0081               	movwf	1
  6934  0F6C  0AF3               	incf	m_mem_set@buf,f
  6935  0F6D  2F5E               	goto	l2098
  6936  0F6E                     __end_of_m_mem_set:	
  6937  0F6E                     __ptext7:	
  6938 ;; *************** function _get_idrv_pwm1_duty *****************
  6939 ;; Defined at:
  6940 ;;		line 19 in file "src/api/sample.c"
  6941 ;; Parameters:    Size  Location     Type
  6942 ;;		None
  6943 ;; Auto vars:     Size  Location     Type
  6944 ;;		None
  6945 ;; Return value:  Size  Location     Type
  6946 ;;                  2    0[COMMON] unsigned int 
  6947 ;; Registers used:
  6948 ;;		wreg
  6949 ;; Tracked objects:
  6950 ;;		On entry : 1F/0
  6951 ;;		On exit  : 1F/1B
  6952 ;;		Unchanged: 0/0
  6953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6954 ;;      Params:         2       0       0       0       0       0       0       0
  6955 ;;      Locals:         0       0       0       0       0       0       0       0
  6956 ;;      Temps:          0       0       0       0       0       0       0       0
  6957 ;;      Totals:         2       0       0       0       0       0       0       0
  6958 ;;Total ram usage:        2 bytes
  6959 ;; Hardware stack levels used:    1
  6960 ;; Hardware stack levels required when called:    1
  6961 ;; This function calls:
  6962 ;;		Nothing
  6963 ;; This function is called by:
  6964 ;;		_set_idrv_pwm1_duty
  6965 ;; This function uses a non-reentrant model
  6966 ;;
  6967                           
  6968                           
  6969                           ;psect for function _get_idrv_pwm1_duty
  6970  0F6E                     _get_idrv_pwm1_duty:	
  6971                           
  6972                           ;sample.c: 21: return ((PWM1DCH<<8)|PWM1DCL);
  6973                           
  6974                           ;incstack = 0
  6975                           ; Regs used in _get_idrv_pwm1_duty: [wreg]
  6976  0F6E  003B               	movlb	27	; select bank27
  6977  0F6F  0814               	movf	20,w	;volatile
  6978  0F70  00F1               	movwf	?_get_idrv_pwm1_duty+1
  6979  0F71  01F0               	clrf	?_get_idrv_pwm1_duty
  6980  0F72  0813               	movf	19,w	;volatile
  6981  0F73  04F0               	iorwf	?_get_idrv_pwm1_duty,f
  6982  0F74  0008               	return
  6983  0F75                     __end_of_get_idrv_pwm1_duty:	
  6984  0F75                     __ptext32:	
  6985 ;; *************** function _EUSART_Initialize *****************
  6986 ;; Defined at:
  6987 ;;		line 55 in file "mcc_generated_files/eusart.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;		None
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;		None
  6992 ;; Return value:  Size  Location     Type
  6993 ;;                  1    wreg      void 
  6994 ;; Registers used:
  6995 ;;		wreg
  6996 ;; Tracked objects:
  6997 ;;		On entry : 1F/0
  6998 ;;		On exit  : 1F/3
  6999 ;;		Unchanged: 0/0
  7000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7001 ;;      Params:         0       0       0       0       0       0       0       0
  7002 ;;      Locals:         0       0       0       0       0       0       0       0
  7003 ;;      Temps:          0       0       0       0       0       0       0       0
  7004 ;;      Totals:         0       0       0       0       0       0       0       0
  7005 ;;Total ram usage:        0 bytes
  7006 ;; Hardware stack levels used:    1
  7007 ;; Hardware stack levels required when called:    1
  7008 ;; This function calls:
  7009 ;;		Nothing
  7010 ;; This function is called by:
  7011 ;;		_SYSTEM_Initialize
  7012 ;; This function uses a non-reentrant model
  7013 ;;
  7014                           
  7015                           
  7016                           ;psect for function _EUSART_Initialize
  7017  0F75                     _EUSART_Initialize:	
  7018  0F75                     l2054:	
  7019                           ;incstack = 0
  7020                           ; Regs used in _EUSART_Initialize: [wreg]
  7021                           
  7022                           
  7023                           ;eusart.c: 60: BAUDCON = 0x08;
  7024  0F75  3008               	movlw	8
  7025  0F76  0023               	movlb	3	; select bank3
  7026  0F77  009F               	movwf	31	;volatile
  7027                           
  7028                           ;eusart.c: 63: RCSTA = 0x90;
  7029  0F78  3090               	movlw	144
  7030  0F79  009D               	movwf	29	;volatile
  7031                           
  7032                           ;eusart.c: 66: TXSTA = 0x24;
  7033  0F7A  3024               	movlw	36
  7034  0F7B  009E               	movwf	30	;volatile
  7035                           
  7036                           ;eusart.c: 70: SPBRGL = 0xA0;
  7037  0F7C  30A0               	movlw	160
  7038  0F7D  009B               	movwf	27	;volatile
  7039                           
  7040                           ;eusart.c: 75: SPBRGH = 0x01;
  7041  0F7E  3001               	movlw	1
  7042  0F7F  009C               	movwf	28	;volatile
  7043  0F80  0008               	return
  7044  0F81                     __end_of_EUSART_Initialize:	
  7045  0F81                     PL2:	
  7046  0F81  0873               	movf	?___lmul+3,w
  7047  0F82  0020               	movlb	0	; select bank0
  7048  0F83  00A7               	movwf	___aldiv@dividend+3
  7049  0F84  0872               	movf	?___lmul+2,w
  7050  0F85  00A6               	movwf	___aldiv@dividend+2
  7051  0F86  0871               	movf	?___lmul+1,w
  7052  0F87  00A5               	movwf	___aldiv@dividend+1
  7053  0F88  0870               	movf	?___lmul,w
  7054  0F89  00A4               	movwf	___aldiv@dividend
  7055  0F8A  0008               	return
  7056  0F8B                     __end_ofPL2:	
  7057  0F8B                     PL4:	
  7058  0F8B  0873               	movf	?___lldiv+3,w
  7059  0F8C  00AF               	movwf	calc_temp_rc@y+3
  7060  0F8D  0872               	movf	?___lldiv+2,w
  7061  0F8E  00AE               	movwf	calc_temp_rc@y+2
  7062  0F8F  0871               	movf	?___lldiv+1,w
  7063  0F90  00AD               	movwf	calc_temp_rc@y+1
  7064  0F91  0870               	movf	?___lldiv,w
  7065  0F92  00AC               	movwf	calc_temp_rc@y
  7066  0F93  0008               	return
  7067  0F94                     __end_ofPL4:	
  7068  0F94                     PL6:	
  7069  0F94  0847               	movf	_PidKp+3,w
  7070  0F95  00F7               	movwf	___lmul@multiplicand+3
  7071  0F96  0846               	movf	_PidKp+2,w
  7072  0F97  00F6               	movwf	___lmul@multiplicand+2
  7073  0F98  0845               	movf	_PidKp+1,w
  7074  0F99  00F5               	movwf	___lmul@multiplicand+1
  7075  0F9A  0844               	movf	_PidKp,w
  7076  0F9B  00F4               	movwf	___lmul@multiplicand
  7077  0F9C  0008               	return
  7078  0F9D                     __end_ofPL6:	
  7079  0F9D                     PL8:	
  7080  0F9D  00AF               	movwf	m_int_2_str_ex@x+1
  7081  0F9E  3010               	movlw	16
  7082  0F9F  01B0               	clrf	m_int_2_str_ex@x+2
  7083  0FA0  01B1               	clrf	m_int_2_str_ex@x+3
  7084  0FA1  00B2               	movwf	m_int_2_str_ex@ssize
  7085  0FA2  30C8               	movlw	(low (_str| 0))& (0+255)
  7086  0FA3  01B3               	clrf	m_int_2_str_ex@ssize+1
  7087  0FA4  0008               	return
  7088  0FA5                     __end_ofPL8:	
  7089  0FA5                     PL10:	
  7090  0FA5  00C3               	movwf	pid_run_process@t32+3
  7091  0FA6  0830               	movf	??_pid_run_process+2,w
  7092  0FA7  00C2               	movwf	pid_run_process@t32+2
  7093  0FA8  082F               	movf	??_pid_run_process+1,w
  7094  0FA9  00C1               	movwf	pid_run_process@t32+1
  7095  0FAA  082E               	movf	??_pid_run_process,w
  7096  0FAB  00C0               	movwf	pid_run_process@t32
  7097  0FAC  0008               	return
  7098  0FAD                     __end_ofPL10:	
  7099  0FAD                     PL12:	
  7100  0FAD  00AE               	movwf	m_int_2_str_ex@x
  7101  0FAE  3010               	movlw	16
  7102  0FAF  00B2               	movwf	m_int_2_str_ex@ssize
  7103  0FB0  30C8               	movlw	(low (_str| 0))& (0+255)
  7104  0FB1  01B3               	clrf	m_int_2_str_ex@ssize+1
  7105  0FB2  0008               	return
  7106  0FB3                     __end_ofPL12:	
  7107  0FB3                     PL14:	
  7108  0FB3  00A0               	movwf	___aldiv@divisor
  7109  0FB4  01A1               	clrf	___aldiv@divisor+1
  7110  0FB5  01A2               	clrf	___aldiv@divisor+2
  7111  0FB6  01A3               	clrf	___aldiv@divisor+3
  7112  0FB7  0021               	movlb	1	; select bank1
  7113  0FB8  0008               	return
  7114  0FB9                     __end_ofPL14:	
  7115  0FB9                     PL16:	
  7116  0FB9  3063               	movlw	99
  7117  0FBA  009E               	movwf	30	;volatile
  7118  0FBB  019F               	clrf	31	;volatile
  7119  0FBC  019B               	clrf	27	;volatile
  7120  0FBD  019C               	clrf	28	;volatile
  7121  0FBE  0008               	return
  7122  0FBF                     __end_ofPL16:	
  7123  0FBF                     PL18:	
  7124  0FBF  00F0               	movwf	___lmul@multiplier
  7125  0FC0  300A               	movlw	10
  7126  0FC1  00F4               	movwf	___lmul@multiplicand
  7127  0FC2  01F5               	clrf	___lmul@multiplicand+1
  7128  0FC3  01F6               	clrf	___lmul@multiplicand+2
  7129  0FC4  01F7               	clrf	___lmul@multiplicand+3
  7130  0FC5  0008               	return
  7131  0FC6                     __end_ofPL18:	
  7132  0FC6                     PL20:	
  7133  0FC6  30C8               	movlw	low _str
  7134  0FC7  00F0               	movwf	uart_send_str@str
  7135  0FC8  3000               	movlw	high _str
  7136  0FC9  00F1               	movwf	uart_send_str@str+1
  7137  0FCA  0008               	return
  7138  0FCB                     __end_ofPL20:	
  7139  0FCB                     PL22:	
  7140  0FCB  3055               	movlw	85
  7141  0FCC  003C               	movlb	28	; select bank28
  7142  0FCD  008F               	movwf	15	;volatile
  7143  0FCE  30AA               	movlw	170
  7144  0FCF  008F               	movwf	15	;volatile
  7145  0FD0  0008               	return
  7146  0FD1                     __end_ofPL22:	
  7147  0FD1                     __ptext24:	
  7148 ;; *************** function _TMR2_Initialize *****************
  7149 ;; Defined at:
  7150 ;;		line 63 in file "mcc_generated_files/tmr2.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;		None
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;		None
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  1    wreg      void 
  7157 ;; Registers used:
  7158 ;;		wreg, status,2, status,0, pclath, cstack
  7159 ;; Tracked objects:
  7160 ;;		On entry : 1F/1
  7161 ;;		On exit  : 1F/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7164 ;;      Params:         0       0       0       0       0       0       0       0
  7165 ;;      Locals:         0       0       0       0       0       0       0       0
  7166 ;;      Temps:          0       0       0       0       0       0       0       0
  7167 ;;      Totals:         0       0       0       0       0       0       0       0
  7168 ;;Total ram usage:        0 bytes
  7169 ;; Hardware stack levels used:    1
  7170 ;; Hardware stack levels required when called:    2
  7171 ;; This function calls:
  7172 ;;		_TMR2_SetInterruptHandler
  7173 ;;		_TMR2_StartTimer
  7174 ;; This function is called by:
  7175 ;;		_SYSTEM_Initialize
  7176 ;; This function uses a non-reentrant model
  7177 ;;
  7178                           
  7179                           
  7180                           ;psect for function _TMR2_Initialize
  7181  0FD1                     _TMR2_Initialize:	
  7182                           
  7183                           ;tmr2.c: 68: T2CON = 0x4B;
  7184                           
  7185                           ;incstack = 0
  7186                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7187  0FD1  304B               	movlw	75
  7188  0FD2  0020               	movlb	0	; select bank0
  7189  0FD3  009C               	movwf	28	;volatile
  7190                           
  7191                           ;tmr2.c: 71: PR2 = 0x7C;
  7192  0FD4  307C               	movlw	124
  7193  0FD5  009B               	movwf	27	;volatile
  7194                           
  7195                           ;tmr2.c: 74: TMR2 = 0x00;
  7196  0FD6  019A               	clrf	26	;volatile
  7197                           
  7198                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
  7199  0FD7  1091               	bcf	17,1	;volatile
  7200                           
  7201                           ;tmr2.c: 80: PIE1bits.TMR2IE = 1;
  7202  0FD8  0021               	movlb	1	; select bank1
  7203  0FD9  1491               	bsf	17,1	;volatile
  7204                           
  7205                           ;tmr2.c: 83: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  7206  0FDA  3000               	movlw	0
  7207  0FDB  01F0               	clrf	TMR2_SetInterruptHandler@InterruptHandler
  7208  0FDC  01F1               	clrf	TMR2_SetInterruptHandler@InterruptHandler+1
  7209  0FDD  27E0  3188         	fcall	_TMR2_SetInterruptHandler
  7210                           
  7211                           ;tmr2.c: 86: TMR2_StartTimer();
  7212  0FDF  2FE1               	ljmp	l1934
  7213  0FE0                     __end_of_TMR2_Initialize:	
  7214  0FE0                     __ptext26:	
  7215 ;; *************** function _TMR2_SetInterruptHandler *****************
  7216 ;; Defined at:
  7217 ;;		line 142 in file "mcc_generated_files/tmr2.c"
  7218 ;; Parameters:    Size  Location     Type
  7219 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  7220 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;		None
  7223 ;; Return value:  Size  Location     Type
  7224 ;;                  1    wreg      void 
  7225 ;; Registers used:
  7226 ;;		None
  7227 ;; Tracked objects:
  7228 ;;		On entry : 1F/1
  7229 ;;		On exit  : 1F/1
  7230 ;;		Unchanged: 1F/0
  7231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7232 ;;      Params:         2       0       0       0       0       0       0       0
  7233 ;;      Locals:         0       0       0       0       0       0       0       0
  7234 ;;      Temps:          0       0       0       0       0       0       0       0
  7235 ;;      Totals:         2       0       0       0       0       0       0       0
  7236 ;;Total ram usage:        2 bytes
  7237 ;; Hardware stack levels used:    1
  7238 ;; Hardware stack levels required when called:    1
  7239 ;; This function calls:
  7240 ;;		Nothing
  7241 ;; This function is called by:
  7242 ;;		_TMR2_Initialize
  7243 ;; This function uses a non-reentrant model
  7244 ;;
  7245                           
  7246                           
  7247                           ;psect for function _TMR2_SetInterruptHandler
  7248  0FE0                     _TMR2_SetInterruptHandler:	
  7249                           
  7250                           ;incstack = 0
  7251                           ; Regs used in _TMR2_SetInterruptHandler: []
  7252  0FE0  0008               	return
  7253  0FE1                     __end_of_TMR2_SetInterruptHandler:	
  7254  0FE1                     __ptext25:	
  7255 ;; *************** function _TMR2_StartTimer *****************
  7256 ;; Defined at:
  7257 ;;		line 89 in file "mcc_generated_files/tmr2.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;		None
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;		None
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  1    wreg      void 
  7264 ;; Registers used:
  7265 ;;		None
  7266 ;; Tracked objects:
  7267 ;;		On entry : 1F/1
  7268 ;;		On exit  : 1F/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7271 ;;      Params:         0       0       0       0       0       0       0       0
  7272 ;;      Locals:         0       0       0       0       0       0       0       0
  7273 ;;      Temps:          0       0       0       0       0       0       0       0
  7274 ;;      Totals:         0       0       0       0       0       0       0       0
  7275 ;;Total ram usage:        0 bytes
  7276 ;; Hardware stack levels used:    1
  7277 ;; Hardware stack levels required when called:    1
  7278 ;; This function calls:
  7279 ;;		Nothing
  7280 ;; This function is called by:
  7281 ;;		_TMR2_Initialize
  7282 ;; This function uses a non-reentrant model
  7283 ;;
  7284                           
  7285                           
  7286                           ;psect for function _TMR2_StartTimer
  7287  0FE1                     _TMR2_StartTimer:	
  7288  0FE1                     l1934:	
  7289                           ;incstack = 0
  7290                           ; Regs used in _TMR2_StartTimer: []
  7291                           
  7292                           
  7293                           ;tmr2.c: 92: T2CONbits.TMR2ON = 1;
  7294  0FE1  0020               	movlb	0	; select bank0
  7295  0FE2  151C               	bsf	28,2	;volatile
  7296  0FE3  0008               	return
  7297  0FE4                     __end_of_TMR2_StartTimer:	
  7298  0FE4                     __ptext2:	
  7299 ;; *************** function _set_vout_pwm2_duty *****************
  7300 ;; Defined at:
  7301 ;;		line 40 in file "src/api/sample.c"
  7302 ;; Parameters:    Size  Location     Type
  7303 ;;  duty            2    2[COMMON] unsigned int 
  7304 ;; Auto vars:     Size  Location     Type
  7305 ;;  t16             2    4[COMMON] unsigned int 
  7306 ;; Return value:  Size  Location     Type
  7307 ;;                  1    wreg      void 
  7308 ;; Registers used:
  7309 ;;		wreg, pclath, cstack
  7310 ;; Tracked objects:
  7311 ;;		On entry : 1F/0
  7312 ;;		On exit  : 1F/1B
  7313 ;;		Unchanged: 0/0
  7314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7315 ;;      Params:         2       0       0       0       0       0       0       0
  7316 ;;      Locals:         2       0       0       0       0       0       0       0
  7317 ;;      Temps:          0       0       0       0       0       0       0       0
  7318 ;;      Totals:         4       0       0       0       0       0       0       0
  7319 ;;Total ram usage:        4 bytes
  7320 ;; Hardware stack levels used:    1
  7321 ;; Hardware stack levels required when called:    2
  7322 ;; This function calls:
  7323 ;;		_get_vout_pwm2_duty
  7324 ;; This function is called by:
  7325 ;;		_main
  7326 ;; This function uses a non-reentrant model
  7327 ;;
  7328                           
  7329                           
  7330                           ;psect for function _set_vout_pwm2_duty
  7331  0FE4                     _set_vout_pwm2_duty:	
  7332                           
  7333                           ;sample.c: 42: uint16_t t16;
  7334                           ;sample.c: 43: t16=get_vout_pwm2_duty();
  7335                           
  7336                           ;incstack = 0
  7337                           ; Regs used in _set_vout_pwm2_duty: [wreg+pclath+cstack]
  7338  0FE4  27F9  3188         	fcall	_get_vout_pwm2_duty
  7339  0FE6  0871               	movf	?_get_vout_pwm2_duty+1,w
  7340  0FE7  00F5               	movwf	set_vout_pwm2_duty@t16+1
  7341  0FE8  0870               	movf	?_get_vout_pwm2_duty,w
  7342  0FE9  00F4               	movwf	set_vout_pwm2_duty@t16
  7343                           
  7344                           ;sample.c: 44: if(t16==duty)return;
  7345  0FEA  0873               	movf	set_vout_pwm2_duty@duty+1,w
  7346  0FEB  0675               	xorwf	set_vout_pwm2_duty@t16+1,w
  7347  0FEC  1D03               	skipz
  7348  0FED  2FF0               	goto	u1015
  7349  0FEE  0872               	movf	set_vout_pwm2_duty@duty,w
  7350  0FEF  0674               	xorwf	set_vout_pwm2_duty@t16,w
  7351  0FF0                     u1015:	
  7352  0FF0  1903               	btfsc	3,2
  7353  0FF1  0008               	return
  7354                           
  7355                           ;sample.c: 45: PWM2CONbits.EN = 0;
  7356  0FF2  13AB               	bcf	43,7	;volatile
  7357                           
  7358                           ;sample.c: 46: PWM2DCL= (uint8_t)(duty&0xff);
  7359  0FF3  0872               	movf	set_vout_pwm2_duty@duty,w
  7360  0FF4  00A3               	movwf	35	;volatile
  7361                           
  7362                           ;sample.c: 47: PWM2DCH=(uint8_t)(duty>>8);
  7363  0FF5  0873               	movf	set_vout_pwm2_duty@duty+1,w
  7364  0FF6  00A4               	movwf	36	;volatile
  7365                           
  7366                           ;sample.c: 48: PWM2CONbits.EN = 1;
  7367  0FF7  17AB               	bsf	43,7	;volatile
  7368  0FF8  0008               	return
  7369  0FF9                     __end_of_set_vout_pwm2_duty:	
  7370  0FF9                     __ptext3:	
  7371 ;; *************** function _get_vout_pwm2_duty *****************
  7372 ;; Defined at:
  7373 ;;		line 35 in file "src/api/sample.c"
  7374 ;; Parameters:    Size  Location     Type
  7375 ;;		None
  7376 ;; Auto vars:     Size  Location     Type
  7377 ;;		None
  7378 ;; Return value:  Size  Location     Type
  7379 ;;                  2    0[COMMON] unsigned int 
  7380 ;; Registers used:
  7381 ;;		wreg
  7382 ;; Tracked objects:
  7383 ;;		On entry : 1F/0
  7384 ;;		On exit  : 1F/1B
  7385 ;;		Unchanged: 0/0
  7386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7387 ;;      Params:         2       0       0       0       0       0       0       0
  7388 ;;      Locals:         0       0       0       0       0       0       0       0
  7389 ;;      Temps:          0       0       0       0       0       0       0       0
  7390 ;;      Totals:         2       0       0       0       0       0       0       0
  7391 ;;Total ram usage:        2 bytes
  7392 ;; Hardware stack levels used:    1
  7393 ;; Hardware stack levels required when called:    1
  7394 ;; This function calls:
  7395 ;;		Nothing
  7396 ;; This function is called by:
  7397 ;;		_set_vout_pwm2_duty
  7398 ;; This function uses a non-reentrant model
  7399 ;;
  7400                           
  7401                           
  7402                           ;psect for function _get_vout_pwm2_duty
  7403  0FF9                     _get_vout_pwm2_duty:	
  7404                           
  7405                           ;sample.c: 37: return ((PWM2DCH<<8)|PWM2DCL);
  7406                           
  7407                           ;incstack = 0
  7408                           ; Regs used in _get_vout_pwm2_duty: [wreg]
  7409  0FF9  003B               	movlb	27	; select bank27
  7410  0FFA  0824               	movf	36,w	;volatile
  7411  0FFB  00F1               	movwf	?_get_vout_pwm2_duty+1
  7412  0FFC  01F0               	clrf	?_get_vout_pwm2_duty
  7413  0FFD  0823               	movf	35,w	;volatile
  7414  0FFE  04F0               	iorwf	?_get_vout_pwm2_duty,f
  7415  0FFF  0008               	return
  7416  1000                     __end_of_get_vout_pwm2_duty:	
  7417                           
  7418                           	psect	bssCOMMON
  7419  007D                     __pbssCOMMON:	
  7420  007D                     _Event:	
  7421  007D                     	ds	1
  7422                           
  7423                           	psect	bssBANK0
  7424  0044                     __pbssBANK0:	
  7425  0044                     _PidKp:	
  7426  0044                     	ds	4
  7427  0048                     _globalTicker:	
  7428  0048                     	ds	4
  7429  004C                     _eusartRxIdleTime_ms:	
  7430  004C                     	ds	2
  7431  004E                     _rtAdcValueRcHi:	
  7432  004E                     	ds	2
  7433  0050                     _rtAdcValueRcLo:	
  7434  0050                     	ds	2
  7435  0052                     _rtAdcValueRsHi:	
  7436  0052                     	ds	2
  7437  0054                     _rtAdcValueRsLo:	
  7438  0054                     	ds	2
  7439  0056                     _rtAdcValueRsLoAvg:	
  7440  0056                     	ds	2
  7441  0058                     _eusartRxCount:	
  7442  0058                     	ds	1
  7443  0059                     _eusartTxLen:	
  7444  0059                     	ds	1
  7445  005A                     _pidBbSm:	
  7446  005A                     	ds	1
  7447  005B                     _pidTestNum:	
  7448  005B                     	ds	1
  7449  005C                     _subTickerX:	
  7450  005C                     	ds	1
  7451  005D                     _subTickerX_1s:	
  7452  005D                     	ds	1
  7453                           
  7454                           	psect	dataBANK0
  7455  005E                     __pdataBANK0:	
  7456  005E                     _bbmax:	
  7457  005E                     	ds	4
  7458  0062                     _pidU:	
  7459  0062                     	ds	4
  7460  0066                     _resRc:	
  7461  0066                     	ds	4
  7462  006A                     _resRs:	
  7463  006A                     	ds	4
  7464  006E                     _pwm2DutyForVout:	
  7465  006E                     	ds	2
  7466                           
  7467                           	psect	bssBANK1
  7468  00A0                     __pbssBANK1:	
  7469  00A0                     _err:	
  7470  00A0                     	ds	12
  7471  00AC                     _PidTi:	
  7472  00AC                     	ds	4
  7473  00B0                     _bbku:	
  7474  00B0                     	ds	4
  7475  00B4                     _bbt0:	
  7476  00B4                     	ds	4
  7477  00B8                     _bbt1:	
  7478  00B8                     	ds	4
  7479  00BC                     _bbta:	
  7480  00BC                     	ds	4
  7481  00C0                     _bbtu:	
  7482  00C0                     	ds	4
  7483  00C4                     _bbu:	
  7484  00C4                     	ds	4
  7485  00C8                     _str:	
  7486  00C8                     	ds	16
  7487                           
  7488                           	psect	dataBANK1
  7489  00D8                     __pdataBANK1:	
  7490  00D8                     _bbmin:	
  7491  00D8                     	ds	4
  7492                           
  7493                           	psect	bssBANK2
  7494  0120                     __pbssBANK2:	
  7495  0120                     _eusartTxBuffer:	
  7496  0120                     	ds	64
  7497                           
  7498                           	psect	bssBANK3
  7499  01A0                     __pbssBANK3:	
  7500  01A0                     _eusartRxBuffer:	
  7501  01A0                     	ds	64
  7502                           
  7503                           	psect	clrtext
  7504  0158                     clear_ram0:	
  7505                           ;	Called with FSR0 containing the base address, and
  7506                           ;	WREG with the size to clear
  7507                           
  7508  0158  0064               	clrwdt	;clear the watchdog before getting into this loop
  7509  0159                     clrloop0:	
  7510  0159  0180               	clrf	0	;clear RAM location pointed to by FSR
  7511  015A  3101               	addfsr 0,1
  7512  015B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7513  015C  2959               	goto	clrloop0	;have we reached the end yet?
  7514  015D  3400               	retlw	0	;all done for this memory range, return
  7515                           
  7516                           	psect	inittext
  7517  015E                     init_ram:	
  7518  015E  00FE               	movwf	126
  7519  015F                     initloop:	
  7520  015F  0012               	moviw fsr0++
  7521  0160  001E               	movwi fsr1++
  7522  0161  0BFE               	decfsz	126,f
  7523  0162  295F               	goto	initloop
  7524  0163  3400               	retlw	0
  7525                           
  7526                           	psect	cstackCOMMON
  7527  0070                     __pcstackCOMMON:	
  7528  0070                     ?_TMR2_SetInterruptHandler:	
  7529  0070                     ?_TMR2_StartTimer:	
  7530                           ; 1 bytes @ 0x0
  7531                           
  7532  0070                     ??_TMR2_StartTimer:	
  7533                           ; 1 bytes @ 0x0
  7534                           
  7535  0070                     ?_PIN_MANAGER_Initialize:	
  7536                           ; 1 bytes @ 0x0
  7537                           
  7538  0070                     ??_PIN_MANAGER_Initialize:	
  7539                           ; 1 bytes @ 0x0
  7540                           
  7541  0070                     ?_OSCILLATOR_Initialize:	
  7542                           ; 1 bytes @ 0x0
  7543                           
  7544  0070                     ??_OSCILLATOR_Initialize:	
  7545                           ; 1 bytes @ 0x0
  7546                           
  7547  0070                     ?_WDT_Initialize:	
  7548                           ; 1 bytes @ 0x0
  7549                           
  7550  0070                     ??_WDT_Initialize:	
  7551                           ; 1 bytes @ 0x0
  7552                           
  7553  0070                     ?_ADC1_Initialize:	
  7554                           ; 1 bytes @ 0x0
  7555                           
  7556  0070                     ??_ADC1_Initialize:	
  7557                           ; 1 bytes @ 0x0
  7558                           
  7559  0070                     ?_EUSART_Initialize:	
  7560                           ; 1 bytes @ 0x0
  7561                           
  7562  0070                     ??_EUSART_Initialize:	
  7563                           ; 1 bytes @ 0x0
  7564                           
  7565  0070                     ?_PWM2_Initialize:	
  7566                           ; 1 bytes @ 0x0
  7567                           
  7568  0070                     ??_PWM2_Initialize:	
  7569                           ; 1 bytes @ 0x0
  7570                           
  7571  0070                     ?_PWM1_Initialize:	
  7572                           ; 1 bytes @ 0x0
  7573                           
  7574  0070                     ??_PWM1_Initialize:	
  7575                           ; 1 bytes @ 0x0
  7576                           
  7577  0070                     ?_PWM1_Start:	
  7578                           ; 1 bytes @ 0x0
  7579                           
  7580  0070                     ??_PWM1_Start:	
  7581                           ; 1 bytes @ 0x0
  7582                           
  7583  0070                     ?_TMR2_Initialize:	
  7584                           ; 1 bytes @ 0x0
  7585                           
  7586  0070                     ?_INTERRUPT_InterruptManager:	
  7587                           ; 1 bytes @ 0x0
  7588                           
  7589  0070                     ??_INTERRUPT_InterruptManager:	
  7590                           ; 1 bytes @ 0x0
  7591                           
  7592  0070                     ?_FVR_Initialize:	
  7593                           ; 1 bytes @ 0x0
  7594                           
  7595  0070                     ??_FVR_Initialize:	
  7596                           ; 1 bytes @ 0x0
  7597                           
  7598  0070                     ?_SYSTEM_Initialize:	
  7599                           ; 1 bytes @ 0x0
  7600                           
  7601  0070                     ?_uart_send_str:	
  7602                           ; 1 bytes @ 0x0
  7603                           
  7604  0070                     ?_fvr_set_gain:	
  7605                           ; 1 bytes @ 0x0
  7606                           
  7607  0070                     ??_fvr_set_gain:	
  7608                           ; 1 bytes @ 0x0
  7609                           
  7610  0070                     ?_adc_init:	
  7611                           ; 1 bytes @ 0x0
  7612                           
  7613  0070                     ??_adc_init:	
  7614                           ; 1 bytes @ 0x0
  7615                           
  7616  0070                     ?_pid_b_b_process:	
  7617                           ; 1 bytes @ 0x0
  7618                           
  7619  0070                     ?_pid_run_process:	
  7620                           ; 1 bytes @ 0x0
  7621                           
  7622  0070                     ?_main:	
  7623                           ; 1 bytes @ 0x0
  7624                           
  7625  0070                     ?_m_mem_set:	
  7626                           ; 1 bytes @ 0x0
  7627                           
  7628  0070                     ?_m_mem_cpy:	
  7629                           ; 1 bytes @ 0x0
  7630                           
  7631  0070                     ?_get_idrv_pwm1_duty:	
  7632                           ; 1 bytes @ 0x0
  7633                           
  7634  0070                     ?_get_vout_pwm2_duty:	
  7635                           ; 2 bytes @ 0x0
  7636                           
  7637  0070                     ?_calc_current_rs_avg:	
  7638                           ; 2 bytes @ 0x0
  7639                           
  7640  0070                     ?___lmul:	
  7641                           ; 2 bytes @ 0x0
  7642                           
  7643  0070                     ?___almod:	
  7644                           ; 4 bytes @ 0x0
  7645                           
  7646  0070                     ?___lldiv:	
  7647                           ; 4 bytes @ 0x0
  7648                           
  7649  0070                     PIN_MANAGER_Initialize@state:	
  7650                           ; 4 bytes @ 0x0
  7651                           
  7652  0070                     fvr_set_gain@t8:	
  7653                           ; 1 bytes @ 0x0
  7654                           
  7655  0070                     m_mem_set@x:	
  7656                           ; 1 bytes @ 0x0
  7657                           
  7658  0070                     m_mem_cpy@s:	
  7659                           ; 1 bytes @ 0x0
  7660                           
  7661  0070                     TMR2_SetInterruptHandler@InterruptHandler:	
  7662                           ; 1 bytes @ 0x0
  7663                           
  7664  0070                     uart_send_str@str:	
  7665                           ; 2 bytes @ 0x0
  7666                           
  7667  0070                     ___lmul@multiplier:	
  7668                           ; 2 bytes @ 0x0
  7669                           
  7670  0070                     ___almod@divisor:	
  7671                           ; 4 bytes @ 0x0
  7672                           
  7673  0070                     ___lldiv@divisor:	
  7674                           ; 4 bytes @ 0x0
  7675                           
  7676                           
  7677                           ; 4 bytes @ 0x0
  7678  0070                     	ds	1
  7679  0071                     ??_m_mem_cpy:	
  7680  0071                     fvr_set_gain@g:	
  7681                           ; 1 bytes @ 0x1
  7682                           
  7683  0071                     adc_init@ch:	
  7684                           ; 1 bytes @ 0x1
  7685                           
  7686  0071                     m_mem_cpy@d:	
  7687                           ; 1 bytes @ 0x1
  7688                           
  7689  0071                     m_mem_set@len:	
  7690                           ; 1 bytes @ 0x1
  7691                           
  7692                           
  7693                           ; 2 bytes @ 0x1
  7694  0071                     	ds	1
  7695  0072                     ??_TMR2_SetInterruptHandler:	
  7696  0072                     ??_TMR2_Initialize:	
  7697                           ; 1 bytes @ 0x2
  7698                           
  7699  0072                     ??_SYSTEM_Initialize:	
  7700                           ; 1 bytes @ 0x2
  7701                           
  7702  0072                     ??_uart_send_str:	
  7703                           ; 1 bytes @ 0x2
  7704                           
  7705  0072                     ??_get_idrv_pwm1_duty:	
  7706                           ; 1 bytes @ 0x2
  7707                           
  7708  0072                     ?_set_idrv_pwm1_duty:	
  7709                           ; 1 bytes @ 0x2
  7710                           
  7711  0072                     ??_get_vout_pwm2_duty:	
  7712                           ; 1 bytes @ 0x2
  7713                           
  7714  0072                     ?_set_vout_pwm2_duty:	
  7715                           ; 1 bytes @ 0x2
  7716                           
  7717  0072                     ??_calc_current_rs_avg:	
  7718                           ; 1 bytes @ 0x2
  7719                           
  7720  0072                     ?_adc_sample:	
  7721                           ; 1 bytes @ 0x2
  7722                           
  7723  0072                     adc_sample@gfvr:	
  7724                           ; 2 bytes @ 0x2
  7725                           
  7726  0072                     set_idrv_pwm1_duty@duty:	
  7727                           ; 1 bytes @ 0x2
  7728                           
  7729  0072                     set_vout_pwm2_duty@duty:	
  7730                           ; 2 bytes @ 0x2
  7731                           
  7732                           
  7733                           ; 2 bytes @ 0x2
  7734  0072                     	ds	1
  7735  0073                     ??_m_mem_set:	
  7736  0073                     adc_sample@num:	
  7737                           ; 1 bytes @ 0x3
  7738                           
  7739  0073                     m_mem_set@buf:	
  7740                           ; 1 bytes @ 0x3
  7741                           
  7742                           
  7743                           ; 1 bytes @ 0x3
  7744  0073                     	ds	1
  7745  0074                     ??_set_idrv_pwm1_duty:	
  7746  0074                     ??_set_vout_pwm2_duty:	
  7747                           ; 1 bytes @ 0x4
  7748                           
  7749  0074                     ??_adc_sample:	
  7750                           ; 1 bytes @ 0x4
  7751                           
  7752  0074                     set_idrv_pwm1_duty@t16:	
  7753                           ; 1 bytes @ 0x4
  7754                           
  7755  0074                     set_vout_pwm2_duty@t16:	
  7756                           ; 2 bytes @ 0x4
  7757                           
  7758  0074                     ___lmul@multiplicand:	
  7759                           ; 2 bytes @ 0x4
  7760                           
  7761  0074                     ___almod@dividend:	
  7762                           ; 4 bytes @ 0x4
  7763                           
  7764  0074                     ___lldiv@dividend:	
  7765                           ; 4 bytes @ 0x4
  7766                           
  7767                           
  7768                           ; 4 bytes @ 0x4
  7769  0074                     	ds	1
  7770  0075                     adc_sample@ch:	
  7771                           
  7772                           ; 1 bytes @ 0x5
  7773  0075                     	ds	1
  7774  0076                     adc_sample@ret:	
  7775                           
  7776                           ; 2 bytes @ 0x6
  7777  0076                     	ds	2
  7778  0078                     ??___lmul:	
  7779  0078                     ??___almod:	
  7780                           ; 1 bytes @ 0x8
  7781                           
  7782  0078                     ??___lldiv:	
  7783                           ; 1 bytes @ 0x8
  7784                           
  7785  0078                     adc_sample@i:	
  7786                           ; 1 bytes @ 0x8
  7787                           
  7788  0078                     ___almod@counter:	
  7789                           ; 1 bytes @ 0x8
  7790                           
  7791  0078                     ___lmul@product:	
  7792                           ; 1 bytes @ 0x8
  7793                           
  7794  0078                     ___lldiv@quotient:	
  7795                           ; 4 bytes @ 0x8
  7796                           
  7797                           
  7798                           ; 4 bytes @ 0x8
  7799  0078                     	ds	1
  7800  0079                     ___almod@sign:	
  7801  0079                     adc_sample@t16:	
  7802                           ; 1 bytes @ 0x9
  7803                           
  7804                           
  7805                           ; 2 bytes @ 0x9
  7806  0079                     	ds	3
  7807  007C                     ??_pid_b_b_process:	
  7808  007C                     ??___aldiv:	
  7809                           ; 1 bytes @ 0xC
  7810                           
  7811  007C                     ___lldiv@counter:	
  7812                           ; 1 bytes @ 0xC
  7813                           
  7814                           
  7815                           ; 1 bytes @ 0xC
  7816  007C                     	ds	1
  7817  007D                     ??_calc_temp_rs:	
  7818  007D                     ??_cal_voout_pwm_duty:	
  7819                           ; 1 bytes @ 0xD
  7820                           
  7821  007D                     ??_main:	
  7822                           ; 1 bytes @ 0xD
  7823                           
  7824                           
  7825                           	psect	cstackBANK0
  7826  0020                     __pcstackBANK0:	
  7827                           ; 1 bytes @ 0xD
  7828                           
  7829  0020                     ?_cal_voout_pwm_duty:	
  7830  0020                     ?_calc_temp_rs:	
  7831                           ; 2 bytes @ 0x0
  7832                           
  7833  0020                     ?_calc_temp_rc:	
  7834                           ; 4 bytes @ 0x0
  7835                           
  7836  0020                     ?___aldiv:	
  7837                           ; 4 bytes @ 0x0
  7838                           
  7839  0020                     ___aldiv@divisor:	
  7840                           ; 4 bytes @ 0x0
  7841                           
  7842                           
  7843                           ; 4 bytes @ 0x0
  7844  0020                     	ds	2
  7845  0022                     cal_voout_pwm_duty@t32:	
  7846                           
  7847                           ; 4 bytes @ 0x2
  7848  0022                     	ds	2
  7849  0024                     ??_calc_temp_rc:	
  7850  0024                     calc_temp_rs@x:	
  7851                           ; 1 bytes @ 0x4
  7852                           
  7853  0024                     ___aldiv@dividend:	
  7854                           ; 4 bytes @ 0x4
  7855                           
  7856                           
  7857                           ; 4 bytes @ 0x4
  7858  0024                     	ds	4
  7859  0028                     ___aldiv@counter:	
  7860  0028                     calc_temp_rs@y:	
  7861                           ; 1 bytes @ 0x8
  7862                           
  7863  0028                     calc_temp_rc@x:	
  7864                           ; 4 bytes @ 0x8
  7865                           
  7866                           
  7867                           ; 4 bytes @ 0x8
  7868  0028                     	ds	1
  7869  0029                     ___aldiv@sign:	
  7870                           
  7871                           ; 1 bytes @ 0x9
  7872  0029                     	ds	1
  7873  002A                     ___aldiv@quotient:	
  7874                           
  7875                           ; 4 bytes @ 0xA
  7876  002A                     	ds	2
  7877  002C                     calc_temp_rc@y:	
  7878                           
  7879                           ; 4 bytes @ 0xC
  7880  002C                     	ds	2
  7881  002E                     ?_m_int_2_str_ex:	
  7882  002E                     ??_pid_run_process:	
  7883                           ; 1 bytes @ 0xE
  7884                           
  7885  002E                     pid_b_b_process@t32:	
  7886                           ; 1 bytes @ 0xE
  7887                           
  7888  002E                     m_int_2_str_ex@x:	
  7889                           ; 4 bytes @ 0xE
  7890                           
  7891                           
  7892                           ; 4 bytes @ 0xE
  7893  002E                     	ds	4
  7894  0032                     m_int_2_str_ex@ssize:	
  7895  0032                     pid_run_process@ep:	
  7896                           ; 2 bytes @ 0x12
  7897                           
  7898                           
  7899                           ; 4 bytes @ 0x12
  7900  0032                     	ds	2
  7901  0034                     ??_m_int_2_str_ex:	
  7902                           
  7903                           ; 1 bytes @ 0x14
  7904  0034                     	ds	2
  7905  0036                     pid_run_process@ei:	
  7906                           
  7907                           ; 4 bytes @ 0x16
  7908  0036                     	ds	2
  7909  0038                     m_int_2_str_ex@t:	
  7910                           
  7911                           ; 4 bytes @ 0x18
  7912  0038                     	ds	4
  7913  003C                     m_int_2_str_ex@sig:	
  7914                           
  7915                           ; 1 bytes @ 0x1C
  7916  003C                     	ds	1
  7917  003D                     m_int_2_str_ex@i:	
  7918                           
  7919                           ; 1 bytes @ 0x1D
  7920  003D                     	ds	1
  7921  003E                     m_int_2_str_ex@buf:	
  7922  003E                     pid_run_process@t16:	
  7923                           ; 1 bytes @ 0x1E
  7924                           
  7925                           
  7926                           ; 2 bytes @ 0x1E
  7927  003E                     	ds	2
  7928  0040                     pid_run_process@t32:	
  7929                           
  7930                           ; 4 bytes @ 0x20
  7931  0040                     	ds	4
  7932                           
  7933                           	psect	swtext1
  7934  014C                     __pswtext1:	
  7935  014C                     S2586:	
  7936  014C  318B  2B78         	ljmp	l2322
  7937  014E  318B  2B78         	ljmp	l2322
  7938  0150  318B  2B81         	ljmp	l2328
  7939  0152  318B  2B97         	ljmp	l2334
  7940  0154  318B  2BC6         	ljmp	l2348
  7941  0156  318D  2D07         	ljmp	l630
  7942                           
  7943                           	psect	text10
  7944  0124                     __ptext10:	
  7945 ;; *************** function _m_mem_cpy *****************
  7946 ;; Defined at:
  7947 ;;		line 39 in file "src/depend/m_string.c"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;  d               1    wreg     PTR unsigned char 
  7950 ;;		 -> str(16), 
  7951 ;;  s               1    0[COMMON] PTR unsigned char 
  7952 ;;		 -> str(16), 
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;  d               1    1[COMMON] PTR unsigned char 
  7955 ;;		 -> str(16), 
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  1    wreg      void 
  7958 ;; Registers used:
  7959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7960 ;; Tracked objects:
  7961 ;;		On entry : 1F/0
  7962 ;;		On exit  : 1F/0
  7963 ;;		Unchanged: 1F/0
  7964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7965 ;;      Params:         1       0       0       0       0       0       0       0
  7966 ;;      Locals:         1       0       0       0       0       0       0       0
  7967 ;;      Temps:          0       0       0       0       0       0       0       0
  7968 ;;      Totals:         2       0       0       0       0       0       0       0
  7969 ;;Total ram usage:        2 bytes
  7970 ;; Hardware stack levels used:    1
  7971 ;; Hardware stack levels required when called:    1
  7972 ;; This function calls:
  7973 ;;		Nothing
  7974 ;; This function is called by:
  7975 ;;		_m_int_2_str_ex
  7976 ;; This function uses a non-reentrant model
  7977 ;;
  7978                           
  7979                           
  7980                           ;psect for function _m_mem_cpy
  7981  0124                     _m_mem_cpy:	
  7982                           
  7983                           ;incstack = 0
  7984                           ; Regs used in _m_mem_cpy: [wreg-fsr1h+status,2+status,0]
  7985                           ;m_mem_cpy@d stored from wreg
  7986  0124  00F1               	movwf	m_mem_cpy@d
  7987  0125                     l2108:	
  7988                           ;m_string.c: 41: while(*s!='\0')
  7989                           
  7990  0125  0870               	movf	m_mem_cpy@s,w
  7991  0126  0086               	movwf	6
  7992  0127  0187               	clrf	7
  7993  0128  0801               	movf	1,w
  7994  0129  1903               	btfsc	3,2
  7995  012A  2935               	goto	l2110
  7996                           
  7997                           ;m_string.c: 42: {
  7998                           ;m_string.c: 43: *d++=*s++;
  7999  012B  0871               	movf	m_mem_cpy@d,w
  8000  012C  0086               	movwf	6
  8001  012D  0870               	movf	m_mem_cpy@s,w
  8002  012E  0084               	movwf	4
  8003  012F  0185               	clrf	5
  8004  0130  0800               	movf	0,w
  8005  0131  0081               	movwf	1
  8006  0132  0AF0               	incf	m_mem_cpy@s,f
  8007  0133  0AF1               	incf	m_mem_cpy@d,f
  8008  0134  2925               	goto	l2108
  8009  0135                     l2110:	
  8010                           
  8011                           ;m_string.c: 44: }
  8012                           ;m_string.c: 45: *d='\0';
  8013  0135  0871               	movf	m_mem_cpy@d,w
  8014  0136  0086               	movwf	6
  8015  0137  0187               	clrf	7
  8016  0138  0181               	clrf	1
  8017  0139  0008               	return
  8018  013A                     __end_of_m_mem_cpy:	
  8019                           
  8020                           	psect	text11
  8021  009D                     __ptext11:	
  8022 ;; *************** function ___almod *****************
  8023 ;; Defined at:
  8024 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\almod.c"
  8025 ;; Parameters:    Size  Location     Type
  8026 ;;  divisor         4    0[COMMON] long 
  8027 ;;  dividend        4    4[COMMON] long 
  8028 ;; Auto vars:     Size  Location     Type
  8029 ;;  sign            1    9[COMMON] unsigned char 
  8030 ;;  counter         1    8[COMMON] unsigned char 
  8031 ;; Return value:  Size  Location     Type
  8032 ;;                  4    0[COMMON] long 
  8033 ;; Registers used:
  8034 ;;		wreg, status,2, status,0
  8035 ;; Tracked objects:
  8036 ;;		On entry : 1F/0
  8037 ;;		On exit  : 1F/0
  8038 ;;		Unchanged: 1F/0
  8039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8040 ;;      Params:         8       0       0       0       0       0       0       0
  8041 ;;      Locals:         2       0       0       0       0       0       0       0
  8042 ;;      Temps:          0       0       0       0       0       0       0       0
  8043 ;;      Totals:        10       0       0       0       0       0       0       0
  8044 ;;Total ram usage:       10 bytes
  8045 ;; Hardware stack levels used:    1
  8046 ;; Hardware stack levels required when called:    1
  8047 ;; This function calls:
  8048 ;;		Nothing
  8049 ;; This function is called by:
  8050 ;;		_m_int_2_str_ex
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           
  8054                           
  8055                           ;psect for function ___almod
  8056  009D                     ___almod:	
  8057                           
  8058                           ;incstack = 0
  8059                           ; Regs used in ___almod: [wreg+status,2+status,0]
  8060  009D  01F9               	clrf	___almod@sign
  8061  009E  1FF7               	btfss	___almod@dividend+3,7
  8062  009F  28AA               	goto	l958
  8063  00A0  20F7  3180         	fcall	PL24	;call to abstracted procedure
  8064  00A2  1903               	skipnz
  8065  00A3  0AF5               	incf	___almod@dividend+1,f
  8066  00A4  1903               	skipnz
  8067  00A5  0AF6               	incf	___almod@dividend+2,f
  8068  00A6  1903               	skipnz
  8069  00A7  0AF7               	incf	___almod@dividend+3,f
  8070  00A8  01F9               	clrf	___almod@sign
  8071  00A9  0AF9               	incf	___almod@sign,f
  8072  00AA                     l958:	
  8073  00AA  1FF3               	btfss	___almod@divisor+3,7
  8074  00AB  28B7               	goto	l2172
  8075  00AC  09F0               	comf	___almod@divisor,f
  8076  00AD  09F1               	comf	___almod@divisor+1,f
  8077  00AE  09F2               	comf	___almod@divisor+2,f
  8078  00AF  09F3               	comf	___almod@divisor+3,f
  8079  00B0  0AF0               	incf	___almod@divisor,f
  8080  00B1  1903               	skipnz
  8081  00B2  0AF1               	incf	___almod@divisor+1,f
  8082  00B3  1903               	skipnz
  8083  00B4  0AF2               	incf	___almod@divisor+2,f
  8084  00B5  1903               	skipnz
  8085  00B6  0AF3               	incf	___almod@divisor+3,f
  8086  00B7                     l2172:	
  8087  00B7  0873               	movf	___almod@divisor+3,w
  8088  00B8  0472               	iorwf	___almod@divisor+2,w
  8089  00B9  0471               	iorwf	___almod@divisor+1,w
  8090  00BA  0470               	iorwf	___almod@divisor,w
  8091  00BB  1903               	skipnz
  8092  00BC  28E4               	goto	l2188
  8093  00BD  01F8               	clrf	___almod@counter
  8094  00BE                     L5:	
  8095  00BE  0AF8               	incf	___almod@counter,f
  8096  00BF  1BF3               	btfsc	___almod@divisor+3,7
  8097  00C0  28C6               	goto	l2180
  8098  00C1  35F0               	lslf	___almod@divisor,f
  8099  00C2  0DF1               	rlf	___almod@divisor+1,f
  8100  00C3  0DF2               	rlf	___almod@divisor+2,f
  8101  00C4  0DF3               	rlf	___almod@divisor+3,f
  8102  00C5  28BE               	goto	L5
  8103  00C6                     l2180:	
  8104  00C6  0873               	movf	___almod@divisor+3,w
  8105  00C7  0277               	subwf	___almod@dividend+3,w
  8106  00C8  1D03               	skipz
  8107  00C9  28D4               	goto	u895
  8108  00CA  0872               	movf	___almod@divisor+2,w
  8109  00CB  0276               	subwf	___almod@dividend+2,w
  8110  00CC  1D03               	skipz
  8111  00CD  28D4               	goto	u895
  8112  00CE  0871               	movf	___almod@divisor+1,w
  8113  00CF  0275               	subwf	___almod@dividend+1,w
  8114  00D0  1D03               	skipz
  8115  00D1  28D4               	goto	u895
  8116  00D2  0870               	movf	___almod@divisor,w
  8117  00D3  0274               	subwf	___almod@dividend,w
  8118  00D4                     u895:	
  8119  00D4  1C03               	skipc
  8120  00D5  28DE               	goto	l2184
  8121  00D6  0870               	movf	___almod@divisor,w
  8122  00D7  02F4               	subwf	___almod@dividend,f
  8123  00D8  0871               	movf	___almod@divisor+1,w
  8124  00D9  3BF5               	subwfb	___almod@dividend+1,f
  8125  00DA  0872               	movf	___almod@divisor+2,w
  8126  00DB  3BF6               	subwfb	___almod@dividend+2,f
  8127  00DC  0873               	movf	___almod@divisor+3,w
  8128  00DD  3BF7               	subwfb	___almod@dividend+3,f
  8129  00DE                     l2184:	
  8130  00DE  36F3               	lsrf	___almod@divisor+3,f
  8131  00DF  0CF2               	rrf	___almod@divisor+2,f
  8132  00E0  0CF1               	rrf	___almod@divisor+1,f
  8133  00E1  0CF0               	rrf	___almod@divisor,f
  8134  00E2  0BF8               	decfsz	___almod@counter,f
  8135  00E3  28C6               	goto	l2180
  8136  00E4                     l2188:	
  8137  00E4  0879               	movf	___almod@sign,w
  8138  00E5  1903               	btfsc	3,2
  8139  00E6  28EE               	goto	l2192
  8140  00E7  20F7               	fcall	PL24	;call to abstracted procedure
  8141  00E8  1903               	skipnz
  8142  00E9  0AF5               	incf	___almod@dividend+1,f
  8143  00EA  1903               	skipnz
  8144  00EB  0AF6               	incf	___almod@dividend+2,f
  8145  00EC  1903               	skipnz
  8146  00ED  0AF7               	incf	___almod@dividend+3,f
  8147  00EE                     l2192:	
  8148  00EE  0877               	movf	___almod@dividend+3,w
  8149  00EF  00F3               	movwf	?___almod+3
  8150  00F0  0876               	movf	___almod@dividend+2,w
  8151  00F1  00F2               	movwf	?___almod+2
  8152  00F2  0875               	movf	___almod@dividend+1,w
  8153  00F3  00F1               	movwf	?___almod+1
  8154  00F4  0874               	movf	___almod@dividend,w
  8155  00F5  00F0               	movwf	?___almod
  8156  00F6  0008               	return
  8157  00F7                     __end_of___almod:	
  8158  00F7                     PL24:	
  8159  00F7  09F4               	comf	___almod@dividend,f
  8160  00F8  09F5               	comf	___almod@dividend+1,f
  8161  00F9  09F6               	comf	___almod@dividend+2,f
  8162  00FA  09F7               	comf	___almod@dividend+3,f
  8163  00FB  0AF4               	incf	___almod@dividend,f
  8164  00FC  0008               	return
  8165  00FD                     __end_ofPL24:	
  8166                           
  8167                           	psect	text13
  8168  0028                     __ptext13:	
  8169 ;; *************** function _calc_temp_rs *****************
  8170 ;; Defined at:
  8171 ;;		line 98 in file "src/api/sample.c"
  8172 ;; Parameters:    Size  Location     Type
  8173 ;;		None
  8174 ;; Auto vars:     Size  Location     Type
  8175 ;;  y               4    8[BANK0 ] unsigned long 
  8176 ;;  x               4    4[BANK0 ] unsigned long 
  8177 ;; Return value:  Size  Location     Type
  8178 ;;                  4    0[BANK0 ] unsigned long 
  8179 ;; Registers used:
  8180 ;;		wreg, status,2, status,0, pclath, cstack
  8181 ;; Tracked objects:
  8182 ;;		On entry : 1F/0
  8183 ;;		On exit  : 1F/0
  8184 ;;		Unchanged: 0/0
  8185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8186 ;;      Params:         0       4       0       0       0       0       0       0
  8187 ;;      Locals:         0       8       0       0       0       0       0       0
  8188 ;;      Temps:          0       0       0       0       0       0       0       0
  8189 ;;      Totals:         0      12       0       0       0       0       0       0
  8190 ;;Total ram usage:       12 bytes
  8191 ;; Hardware stack levels used:    1
  8192 ;; Hardware stack levels required when called:    2
  8193 ;; This function calls:
  8194 ;;		___lldiv
  8195 ;;		___lmul
  8196 ;; This function is called by:
  8197 ;;		_main
  8198 ;; This function uses a non-reentrant model
  8199 ;;
  8200                           
  8201                           
  8202                           ;psect for function _calc_temp_rs
  8203  0028                     _calc_temp_rs:	
  8204                           
  8205                           ;sample.c: 111: uint32_t x,y;
  8206                           ;sample.c: 112: y=12000UL;
  8207                           
  8208                           ;incstack = 0
  8209                           ; Regs used in _calc_temp_rs: [wreg+status,2+status,0+pclath+cstack]
  8210  0028  302E               	movlw	46
  8211  0029  01AB               	clrf	calc_temp_rs@y+3
  8212  002A  01AA               	clrf	calc_temp_rs@y+2
  8213  002B  00A9               	movwf	calc_temp_rs@y+1
  8214  002C  30E0               	movlw	224
  8215  002D  00A8               	movwf	calc_temp_rs@y
  8216                           
  8217                           ;sample.c: 113: y=y*rtAdcValueRsHi;
  8218  002E  0852               	movf	_rtAdcValueRsHi,w
  8219  002F  00F0               	movwf	___lmul@multiplier
  8220  0030  0853               	movf	_rtAdcValueRsHi+1,w
  8221  0031  00F1               	movwf	___lmul@multiplier+1
  8222  0032  01F2               	clrf	___lmul@multiplier+2
  8223  0033  01F3               	clrf	___lmul@multiplier+3
  8224  0034  082B               	movf	calc_temp_rs@y+3,w
  8225  0035  00F7               	movwf	___lmul@multiplicand+3
  8226  0036  082A               	movf	calc_temp_rs@y+2,w
  8227  0037  00F6               	movwf	___lmul@multiplicand+2
  8228  0038  0829               	movf	calc_temp_rs@y+1,w
  8229  0039  00F5               	movwf	___lmul@multiplicand+1
  8230  003A  0828               	movf	calc_temp_rs@y,w
  8231  003B  00F4               	movwf	___lmul@multiplicand
  8232  003C  318D  2508  3180   	fcall	___lmul
  8233  003F  0873               	movf	?___lmul+3,w
  8234  0040  0020               	movlb	0	; select bank0
  8235  0041  00AB               	movwf	calc_temp_rs@y+3
  8236  0042  0872               	movf	?___lmul+2,w
  8237  0043  00AA               	movwf	calc_temp_rs@y+2
  8238  0044  0871               	movf	?___lmul+1,w
  8239  0045  00A9               	movwf	calc_temp_rs@y+1
  8240  0046  0870               	movf	?___lmul,w
  8241  0047  00A8               	movwf	calc_temp_rs@y
  8242                           
  8243                           ;sample.c: 114: x=rtAdcValueRsLo;
  8244  0048  0854               	movf	_rtAdcValueRsLo,w
  8245  0049  00A4               	movwf	calc_temp_rs@x
  8246  004A  0855               	movf	_rtAdcValueRsLo+1,w
  8247  004B  00A5               	movwf	calc_temp_rs@x+1
  8248  004C  01A6               	clrf	calc_temp_rs@x+2
  8249  004D  01A7               	clrf	calc_temp_rs@x+3
  8250                           
  8251                           ;sample.c: 115: y=y/x;
  8252  004E  0827               	movf	calc_temp_rs@x+3,w
  8253  004F  00F3               	movwf	___lldiv@divisor+3
  8254  0050  0826               	movf	calc_temp_rs@x+2,w
  8255  0051  00F2               	movwf	___lldiv@divisor+2
  8256  0052  0825               	movf	calc_temp_rs@x+1,w
  8257  0053  00F1               	movwf	___lldiv@divisor+1
  8258  0054  0824               	movf	calc_temp_rs@x,w
  8259  0055  00F0               	movwf	___lldiv@divisor
  8260  0056  082B               	movf	calc_temp_rs@y+3,w
  8261  0057  00F7               	movwf	___lldiv@dividend+3
  8262  0058  082A               	movf	calc_temp_rs@y+2,w
  8263  0059  00F6               	movwf	___lldiv@dividend+2
  8264  005A  0829               	movf	calc_temp_rs@y+1,w
  8265  005B  00F5               	movwf	___lldiv@dividend+1
  8266  005C  0828               	movf	calc_temp_rs@y,w
  8267  005D  00F4               	movwf	___lldiv@dividend
  8268  005E  318E  2679  3180   	fcall	___lldiv
  8269  0061  0873               	movf	?___lldiv+3,w
  8270  0062  00AB               	movwf	calc_temp_rs@y+3
  8271  0063  0872               	movf	?___lldiv+2,w
  8272  0064  00AA               	movwf	calc_temp_rs@y+2
  8273  0065  0871               	movf	?___lldiv+1,w
  8274  0066  00A9               	movwf	calc_temp_rs@y+1
  8275  0067  0870               	movf	?___lldiv,w
  8276  0068  00A8               	movwf	calc_temp_rs@y
  8277                           
  8278                           ;sample.c: 116: if(y<2000)y=2000;
  8279  0069  082B               	movf	calc_temp_rs@y+3,w
  8280  006A  1D03               	btfss	3,2
  8281  006B  287B               	goto	l2290
  8282  006C  082A               	movf	calc_temp_rs@y+2,w
  8283  006D  1D03               	btfss	3,2
  8284  006E  287B               	goto	l2290
  8285  006F  30D0               	movlw	208
  8286  0070  0228               	subwf	calc_temp_rs@y,w
  8287  0071  3007               	movlw	7
  8288  0072  3B29               	subwfb	calc_temp_rs@y+1,w
  8289  0073  1803               	btfsc	3,0
  8290  0074  287B               	goto	l2290
  8291  0075  3007               	movlw	7
  8292  0076  01AB               	clrf	calc_temp_rs@y+3
  8293  0077  01AA               	clrf	calc_temp_rs@y+2
  8294  0078  00A9               	movwf	calc_temp_rs@y+1
  8295  0079  30D0               	movlw	208
  8296  007A  00A8               	movwf	calc_temp_rs@y
  8297  007B                     l2290:	
  8298                           
  8299                           ;sample.c: 117: if(y>25000)y=25000;
  8300  007B  082B               	movf	calc_temp_rs@y+3,w
  8301  007C  1D03               	btfss	3,2
  8302  007D  2887               	goto	l2292
  8303  007E  082A               	movf	calc_temp_rs@y+2,w
  8304  007F  1D03               	btfss	3,2
  8305  0080  2887               	goto	l2292
  8306  0081  30A9               	movlw	169
  8307  0082  0228               	subwf	calc_temp_rs@y,w
  8308  0083  3061               	movlw	97
  8309  0084  3B29               	subwfb	calc_temp_rs@y+1,w
  8310  0085  1C03               	btfss	3,0
  8311  0086  288D               	goto	l2294
  8312  0087                     l2292:	
  8313  0087  3061               	movlw	97
  8314  0088  01AB               	clrf	calc_temp_rs@y+3
  8315  0089  01AA               	clrf	calc_temp_rs@y+2
  8316  008A  00A9               	movwf	calc_temp_rs@y+1
  8317  008B  30A8               	movlw	168
  8318  008C  00A8               	movwf	calc_temp_rs@y
  8319  008D                     l2294:	
  8320                           
  8321                           ;sample.c: 118: y=y-1000;
  8322  008D  3018               	movlw	24
  8323  008E  07A8               	addwf	calc_temp_rs@y,f
  8324  008F  30FC               	movlw	252
  8325  0090  3DA9               	addwfc	calc_temp_rs@y+1,f
  8326  0091  30FF               	movlw	255
  8327  0092  3DAA               	addwfc	calc_temp_rs@y+2,f
  8328  0093  3DAB               	addwfc	calc_temp_rs@y+3,f
  8329                           
  8330                           ;sample.c: 120: return y;
  8331  0094  082B               	movf	calc_temp_rs@y+3,w
  8332  0095  00A3               	movwf	?_calc_temp_rs+3
  8333  0096  082A               	movf	calc_temp_rs@y+2,w
  8334  0097  00A2               	movwf	?_calc_temp_rs+2
  8335  0098  0829               	movf	calc_temp_rs@y+1,w
  8336  0099  00A1               	movwf	?_calc_temp_rs+1
  8337  009A  0828               	movf	calc_temp_rs@y,w
  8338  009B  00A0               	movwf	?_calc_temp_rs
  8339  009C  0008               	return
  8340  009D                     __end_of_calc_temp_rs:	
  8341                           
  8342                           	psect	intentry
  8343  0004                     __pintentry:	
  8344 ;; *************** function _INTERRUPT_InterruptManager *****************
  8345 ;; Defined at:
  8346 ;;		line 53 in file "mcc_generated_files/interrupt_manager.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;		None
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;		None
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  1    wreg      void 
  8353 ;; Registers used:
  8354 ;;		wreg, status,2, status,0
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8360 ;;      Params:         0       0       0       0       0       0       0       0
  8361 ;;      Locals:         0       0       0       0       0       0       0       0
  8362 ;;      Temps:          0       0       0       0       0       0       0       0
  8363 ;;      Totals:         0       0       0       0       0       0       0       0
  8364 ;;Total ram usage:        0 bytes
  8365 ;; Hardware stack levels used:    1
  8366 ;; This function calls:
  8367 ;;		Nothing
  8368 ;; This function is called by:
  8369 ;;		Interrupt level 1
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           
  8373  0004                     _INTERRUPT_InterruptManager:	
  8374                           
  8375                           ;incstack = 0
  8376                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0]
  8377  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8378  0005  3180               	pagesel	$
  8379                           
  8380                           ;interrupt_manager.c: 56: if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bits.TM
      +                          R2IF == 1)
  8381  0006  1F0B               	btfss	11,6	;volatile
  8382  0007  2824               	goto	i1l272
  8383  0008  0021               	movlb	1	; select bank1
  8384  0009  1C91               	btfss	17,1	;volatile
  8385  000A  2824               	goto	i1l272
  8386  000B  0020               	movlb	0	; select bank0
  8387  000C  1C91               	btfss	17,1	;volatile
  8388  000D  2824               	goto	i1l272
  8389                           
  8390                           ;interrupt_manager.c: 57: {
  8391                           ;interrupt_manager.c: 59: PIR1bits.TMR2IF = 0;
  8392  000E  1091               	bcf	17,1	;volatile
  8393                           
  8394                           ;interrupt_manager.c: 60: Event |= (1<<1);
  8395  000F  14FD               	bsf	_Event,1	;volatile
  8396  0010  3005               	movlw	5
  8397                           
  8398                           ;interrupt_manager.c: 61: subTickerX++;
  8399  0011  0ADC               	incf	_subTickerX,f
  8400                           
  8401                           ;interrupt_manager.c: 62: subTickerX_1s++;
  8402  0012  0ADD               	incf	_subTickerX_1s,f
  8403                           
  8404                           ;interrupt_manager.c: 63: if(subTickerX>=5){
  8405  0013  025C               	subwf	_subTickerX,w
  8406  0014  1C03               	skipc
  8407  0015  2818               	goto	i1l2484
  8408                           
  8409                           ;interrupt_manager.c: 64: subTickerX=0;
  8410  0016  01DC               	clrf	_subTickerX
  8411                           
  8412                           ;interrupt_manager.c: 65: Event |= (1<<2);
  8413  0017  157D               	bsf	_Event,2	;volatile
  8414  0018                     i1l2484:	
  8415                           
  8416                           ;interrupt_manager.c: 66: }
  8417                           ;interrupt_manager.c: 67: if(subTickerX_1s>=50){
  8418  0018  3032               	movlw	50
  8419  0019  025D               	subwf	_subTickerX_1s,w
  8420  001A  1C03               	skipc
  8421  001B  281E               	goto	i1l2490
  8422                           
  8423                           ;interrupt_manager.c: 68: subTickerX_1s=0;
  8424  001C  01DD               	clrf	_subTickerX_1s
  8425                           
  8426                           ;interrupt_manager.c: 69: Event |= (1<<3);
  8427  001D  15FD               	bsf	_Event,3	;volatile
  8428  001E                     i1l2490:	
  8429                           
  8430                           ;interrupt_manager.c: 70: }
  8431                           ;interrupt_manager.c: 71: globalTicker++;
  8432  001E  3001               	movlw	1
  8433  001F  07C8               	addwf	_globalTicker,f	;volatile
  8434  0020  3000               	movlw	0
  8435  0021  3DC9               	addwfc	_globalTicker+1,f	;volatile
  8436  0022  3DCA               	addwfc	_globalTicker+2,f	;volatile
  8437  0023  3DCB               	addwfc	_globalTicker+3,f	;volatile
  8438  0024                     i1l272:	
  8439                           ;interrupt_manager.c: 72: }
  8440                           
  8441  0024  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8442  0025  0009               	retfie
  8443  0026                     __end_of_INTERRUPT_InterruptManager:	
  8444  007E                     btemp	set	126	;btemp
  8445  007E                     int$flags	set	126
  8446  007E                     wtemp	set	126
  8447  007E                     wtemp0	set	126
  8448  0080                     wtemp1	set	128
  8449  0082                     wtemp2	set	130
  8450  0084                     wtemp3	set	132
  8451  0086                     wtemp4	set	134
  8452  0088                     wtemp5	set	136
  8453  007F                     wtemp6	set	127
  8454  007E                     ttemp	set	126
  8455  007E                     ttemp0	set	126
  8456  0081                     ttemp1	set	129
  8457  0084                     ttemp2	set	132
  8458  0087                     ttemp3	set	135
  8459  007F                     ttemp4	set	127
  8460  007E                     ltemp	set	126
  8461  007E                     ltemp0	set	126
  8462  0082                     ltemp1	set	130
  8463  0086                     ltemp2	set	134
  8464  0080                     ltemp3	set	128


Data Sizes:
    Strings     39
    Constant    0
    Data        22
    BSS         211
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     36      80
    BANK1            80      0      60
    BANK2            80      0      64
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    m_int_2_str_ex@buf	PTR unsigned char  size(1) Largest target is 16
		 -> str(BANK1[16]), 

    m_mem_cpy@s	PTR unsigned char  size(1) Largest target is 16
		 -> str(BANK1[16]), 

    m_mem_cpy@d	PTR unsigned char  size(1) Largest target is 16
		 -> str(BANK1[16]), 

    m_mem_set@buf	PTR unsigned char  size(1) Largest target is 16
		 -> str(BANK1[16]), 

    uart_send_str@str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_6(CODE[3]), STR_5(CODE[7]), STR_4(CODE[7]), STR_3(CODE[7]), 
		 -> STR_2(CODE[8]), str(BANK1[16]), STR_1(CODE[7]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_pid_b_b_process
    _set_vout_pwm2_duty->_get_vout_pwm2_duty
    _pid_run_process->___lmul
    _pid_b_b_process->___lmul
    _set_idrv_pwm1_duty->_get_idrv_pwm1_duty
    ___aldiv->___lmul
    _calc_temp_rs->___lldiv
    _calc_temp_rc->___lldiv
    _cal_voout_pwm_duty->___lldiv
    _adc_sample->_adc_init
    _adc_sample->_fvr_set_gain
    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_pid_run_process
    _pid_run_process->___aldiv
    _pid_b_b_process->___aldiv
    _m_int_2_str_ex->___aldiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   19966
                         _PWM1_Start
                  _SYSTEM_Initialize
                         _adc_sample
                 _cal_voout_pwm_duty
                _calc_current_rs_avg
                       _calc_temp_rc
                       _calc_temp_rs
                     _m_int_2_str_ex
                    _pid_b_b_process
                    _pid_run_process
                 _set_vout_pwm2_duty
                      _uart_send_str
 ---------------------------------------------------------------------------------
 (1) _uart_send_str                                        3     1      2     749
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _set_vout_pwm2_duty                                   4     2      2     154
                                              2 COMMON     4     2      2
                 _get_vout_pwm2_duty
 ---------------------------------------------------------------------------------
 (2) _get_vout_pwm2_duty                                   2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _pid_run_process                                     22    22      0    3629
                                             14 BANK0     22    22      0
                            ___aldiv
                             ___lmul
                 _set_idrv_pwm1_duty
 ---------------------------------------------------------------------------------
 (1) _pid_b_b_process                                      5     5      0    3530
                                             12 COMMON     1     1      0
                                             14 BANK0      4     4      0
                            ___aldiv
                             ___lmul
                 _set_idrv_pwm1_duty
 ---------------------------------------------------------------------------------
 (2) _set_idrv_pwm1_duty                                   4     2      2     346
                                              2 COMMON     4     2      2
                 _get_idrv_pwm1_duty
 ---------------------------------------------------------------------------------
 (3) _get_idrv_pwm1_duty                                   2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _m_int_2_str_ex                                      18    12      6    3621
                                             14 BANK0     17    11      6
                            ___aldiv
                            ___almod
                          _m_mem_cpy
                          _m_mem_set
 ---------------------------------------------------------------------------------
 (2) _m_mem_set                                            4     1      3     225
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _m_mem_cpy                                            2     1      1     184
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     526
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8    1448
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _calc_temp_rs                                        12     8      4    2415
                                              0 BANK0     12     8      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _calc_temp_rc                                        16    12      4    2461
                                              0 BANK0     16    12      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _calc_current_rs_avg                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _cal_voout_pwm_duty                                   6     4      2    2415
                                              0 BANK0      6     4      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1602
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     674
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) _adc_sample                                           9     7      2     894
                                              2 COMMON     9     7      2
                           _adc_init
                       _fvr_set_gain
 ---------------------------------------------------------------------------------
 (2) _fvr_set_gain                                         2     2      0      69
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                    _ADC1_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      75
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1_Start
   _SYSTEM_Initialize
     _ADC1_Initialize
     _EUSART_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _WDT_Initialize
   _adc_sample
     _adc_init
     _fvr_set_gain
   _cal_voout_pwm_duty
     ___lldiv
     ___lmul
   _calc_current_rs_avg
   _calc_temp_rc
     ___lldiv
     ___lmul
   _calc_temp_rs
     ___lldiv
     ___lmul
   _m_int_2_str_ex
     ___aldiv
       ___lmul (ARG)
     ___almod
     _m_mem_cpy
     _m_mem_set
   _pid_b_b_process
     ___aldiv
       ___lmul (ARG)
     ___lmul
     _set_idrv_pwm1_duty
       _get_idrv_pwm1_duty
   _pid_run_process
     ___aldiv
       ___lmul (ARG)
     ___lmul
     _set_idrv_pwm1_duty
       _get_idrv_pwm1_duty
   _set_vout_pwm2_duty
     _get_vout_pwm2_duty
   _uart_send_str

 _INTERRUPT_InterruptManager (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     11A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     24      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      3C       8       75.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     11A      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Mon Nov 12 20:58:27 2018

        __end_of_TMR2_SetInterruptHandler 0FE1                                         pc 0002  
                             __CFG_CP$OFF 0000                                        PL2 0F81  
                                      PL4 0F8B                                        PL6 0F94  
                                      PL8 0F9D                    __end_of_FVR_Initialize 0A2A  
                                     PL10 0FA5                                       PL20 0FC6  
                                     PL12 0FAD                                       PL22 0FCB  
                                     PL14 0FB3                                       PL24 00F7  
                                     PL16 0FB9                                       PL18 0FBF  
                             __CFG_LVP$ON 0000                                       l630 0D07  
                                     l464 092F                                       l650 0B56  
                                     l483 0957                                       l459 092B  
                                     l901 0D0C                                       l574 0DE1  
                                     l583 0975                                       l663 0E1B  
                                     l568 0DFD                                       l666 0E74  
                                     l596 0F54                                       l945 0D3D  
                                     l958 00AA                                       _GIE 005F  
                                     _PR2 001B                                       u705 0DA5  
                                     u680 0A66                                       u825 0D71  
                                     u945 0E9E                                       u895 00D4  
                                     _bbu 00C4                                       _err 00A0  
                                     _str 00C8                           _TMR2_Initialize 0FD1  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                    ??_get_vout_pwm2_duty 0072                      ??_set_vout_pwm2_duty 0074  
                         ??_uart_send_str 0072                                      S2586 014C  
                           calc_temp_rc@x 0028                                      l2110 0135  
                           calc_temp_rc@y 002C                                      l2116 0D16  
                                    l2108 0125                                      l2054 0F75  
                                    l2214 0EA9                                      l2206 0E8C  
                                    l2134 0D4C                                      l2160 0D90  
                                    l2152 0D7C                                      l2144 0D5F  
                                    l2056 0D99                                      l2400 0B42  
                                    l2074 0DF8                                      l2218 0EAF  
                                    l2314 0F42                                      l2330 0B8F  
                                    l2322 0B78                                      l2402 0B51  
                                    l2242 0950                                      l2420 0E5C  
                                    l2316 0F4E                                      l2156 0D82  
                                    l2180 00C6                                      l2172 00B7  
                                    l2324 0B79                                      l2422 0E62  
                                    l2414 0E13                                      l2094 0F67  
                                    l2334 0B97                                      l2502 0849  
                                    l2416 0E1F                                      l2192 00EE  
                                    l2184 00DE                                      l2440 09B8  
                                    l2336 0BA5                                      l2328 0B81  
                                    l2360 0CBC                                      l2274 096F  
                                    l2266 096E                                      l2290 007B  
                                    l2098 0F5E                                      l2276 098E  
                                    l2292 0087                                      l2188 00E4  
                                    l2436 09AD                                      l2348 0BC6  
                                    l2532 08B5                                      l2294 008D  
                                    l2358 0CB2                                      l2464 0A07  
                                    l2536 08BC                                      l2466 0A08  
                                    l2458 09FA                                      l2564 0926  
                                    l1934 0FE1                                      l2398 0B3C  
                           calc_temp_rs@x 0024                             calc_temp_rs@y 0028  
                                    STR_1 0113                                      STR_2 00FD  
                                    STR_3 011A                                      STR_4 0105  
                                    STR_5 010C                                      STR_6 0121  
                 __end_of_PWM1_Initialize 0DC6                                      u1015 0FF0  
                                    u1045 0983                                      u1143 0CD2  
                                    u1153 0CF6                                      _LATA 010C  
                                    _LATC 010E                                      u1357 0966  
                                    _TMR2 001A                                      _WPUA 020C  
                                    _WPUC 020E                              __CFG_WRT$OFF 0000  
                          _m_int_2_str_ex 0993                                      _bbt0 00B4  
                                    _bbt1 00B8                                      _bbta 00BC  
                                    _bbku 00B0                                      _bbtu 00C0  
                                    _main 083F                                      _pidU 0062  
                                    fsr0h 0005                                      fsr1h 0007  
                                    fsr0l 0004                                      indf0 0000  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                                    ltemp 007E                                      start 0026  
                         _pwm2DutyForVout 006E                                      ttemp 007E  
                                    wtemp 007E                             __CFG_MCLRE$ON 0000  
                       ??_pid_b_b_process 007C                          ?_pid_run_process 0070  
                 __end_of_PWM2_Initialize 0DDD                           ?_FVR_Initialize 0070  
          __size_of_OSCILLATOR_Initialize 0005             __end_of_OSCILLATOR_Initialize 0A2F  
                         __end_of___aldiv 0D99                           __end_of___almod 00F7  
                                   ?_main 0070                             __CFG_WDTE$OFF 0000  
                         __end_of___lldiv 0EB8                                     _T2CON 001C  
                                   i1l272 0024                                     _RCSTA 019D  
                                   _TRISA 008C                                     _TRISC 008E  
                                   _TXREG 019A                                     _TXSTA 019E  
                     ___lmul@multiplicand 0074                                     _PidKp 0044  
                                   _Event 007D                                     _PidTi 00AC  
                             ?_PWM1_Start 0070                                     _bbmax 005E  
                                   _bbmin 00D8                            _WDT_Initialize 0DDD  
                                   _resRc 0066                                     _resRs 006A  
                  __end_of_m_int_2_str_ex 0A0E                                     ltemp0 007E  
                                   ltemp1 0082                                     ltemp2 0086  
                                   ltemp3 0080                __end_of_get_idrv_pwm1_duty 0F75  
              __end_of_set_idrv_pwm1_duty 0DAE                         m_int_2_str_ex@buf 003E  
                       m_int_2_str_ex@sig 003C                                     ttemp0 007E  
                                   ttemp1 0081                                     ttemp2 0084  
                                   ttemp3 0087                                     ttemp4 007F  
                                   status 0003                                     wtemp0 007E  
                                   wtemp1 0080                                     wtemp2 0082  
                                   wtemp3 0084                                     wtemp4 0086  
                                   wtemp5 0088                                     wtemp6 007F  
                         _TMR2_StartTimer 0FE1                             fvr_set_gain@g 0071  
                         __initialization 0803                              __end_of_main 0928  
                   __size_of_calc_temp_rc 00A0                     __size_of_calc_temp_rs 0075  
                 __end_of_TMR2_Initialize 0FE0               ?_INTERRUPT_InterruptManager 0070  
                _TMR2_SetInterruptHandler 0FE0                                    ??_main 007D  
                          __CFG_PLLEN$OFF 0000                    __end_of_WDT_Initialize 0DE0  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _ADCON2 009F                                    _ADRESH 009C  
                                  _ADRESL 009B                           ?_m_int_2_str_ex 002E  
                                  _ANSELA 018C                                    _ANSELC 018E  
                        __end_of_adc_init 0DEF                          ?_PWM1_Initialize 0070  
                                  _ODCONA 028C                                    _ODCONC 028E  
                                  i1l2490 001E                                    i1l2484 0018  
                                  _FVRCON 0117                                    _OSCCON 0099  
                                  _SPBRGH 019C                                    _SPBRGL 019B  
                                  _WDTCON 0097                              m_mem_set@buf 0073  
                            m_mem_set@len 0071                              _calc_temp_rc 0EBD  
                            _calc_temp_rs 0028                            __CFG_PWRTE$OFF 0000  
                                  ___lmul 0D08                                 ??___aldiv 007C  
                               ??___almod 0078                            __CFG_STVREN$ON 0000  
                     __size_of_PWM1_Start 0003                                 ??___lldiv 0078  
                        ?_PWM2_Initialize 0070               __end_of_calc_current_rs_avg 0EBD  
                __size_of_ADC1_Initialize 0004                           ?_WDT_Initialize 0070  
                 __end_of_TMR2_StartTimer 0FE4  TMR2_SetInterruptHandler@InterruptHandler 0070  
                           ?_fvr_set_gain 0070                            fvr_set_gain@t8 0070  
                       _SYSTEM_Initialize 0A11                   __end_of__initialization 083C  
                      ?_SYSTEM_Initialize 0070                            __pcstackCOMMON 0070  
                            __pidataBANK0 013A                              __pidataBANK1 0164  
                     ??_SYSTEM_Initialize 0072                                _adc_sample 095B  
                         m_int_2_str_ex@i 003D                           m_int_2_str_ex@t 0038  
                         m_int_2_str_ex@x 002E                          ?_TMR2_Initialize 0070  
                              __end_ofPL2 0F8B                                __end_ofPL4 0F94  
                              __end_ofPL6 0F9D                                __end_ofPL8 0FA5  
                          _OPTION_REGbits 0095                __end_of_cal_voout_pwm_duty 0E79  
               __end_of_SYSTEM_Initialize 0A22                            ??_fvr_set_gain 0070  
                      __size_of_m_mem_cpy 0016                        __size_of_m_mem_set 0011  
                              __pbssBANK0 0044                                __pbssBANK1 00A0  
                              __pbssBANK2 0120                                __pbssBANK3 01A0  
                         _pid_b_b_process 0B67                                adc_init@ch 0071  
                        ??_FVR_Initialize 0070                                __pmaintext 083F  
                                 ?___lmul 0070                           __CFG_PPS1WAY$ON 0000  
                              __pintentry 0004                                   _BAUDCON 019F  
                          ___lmul@product 0078                                 ?_adc_init 0070  
                            adc_sample@ch 0075                             _eusartRxCount 0058  
             __size_of_get_vout_pwm2_duty 0007               __size_of_set_vout_pwm2_duty 0015  
                                 _PWM1DCH 0D94                              ??_PWM1_Start 0070  
                                 _PWM1DCL 0D93                                   _PWM2DCH 0DA4  
                                 _PWM2DCL 0DA3                                   _OSCTUNE 0098  
                                 _PWM1CON 0D9B                                   _PWM2CON 0DAB  
                                 _PWM1OFH 0D98                                   _PWM1OFL 0D97  
                                 _PWM2OFH 0DA8                                   _PWM1PHH 0D92  
                                 _PWM2OFL 0DA7                                   _PWM1PHL 0D91  
                                 _PWM2PHH 0DA2                                   _PWM2PHL 0DA1  
                                 _PWM1PRH 0D96                                   _PWM1PRL 0D95  
                                 _PWM2PRH 0DA6                                   _PWM2PRL 0DA5  
                                 _PPSLOCK 0E0F                         ??_ADC1_Initialize 0070  
                        ?_TMR2_StartTimer 0070                    set_idrv_pwm1_duty@duty 0072  
                   __end_of_uart_send_str 095B                         _rtAdcValueRsLoAvg 0056  
              ??_TMR2_SetInterruptHandler 0072                                   ___aldiv 0D2D  
                                 ___almod 009D                           __size_of___lmul 0025  
                                 ___lldiv 0E79                        _get_idrv_pwm1_duty 0F6E  
                      _set_idrv_pwm1_duty 0D99                               ?_adc_sample 0072  
                      __end_of_PWM1_Start 0A11                         __end_of_m_mem_cpy 013A  
                          adc_sample@gfvr 0072                         __end_of_m_mem_set 0F6E  
                              _pidTestNum 005B                                ??_adc_init 0070  
                                 __ptext1 0928                                   __ptext2 0FE4  
                                 __ptext3 0FF9                                   __ptext4 0A68  
                                 __ptext5 0B67                                   __ptext6 0D99  
                                 __ptext7 0F6E                                   __ptext8 0993  
                                 __ptext9 0F5D                                   _pidBbSm 005A  
                     ?_get_idrv_pwm1_duty 0070                       ?_set_idrv_pwm1_duty 0072  
                   _OSCILLATOR_Initialize 0A2A                                 _T2CONbits 001C  
                __size_of_pid_run_process 00FF                          ??_m_int_2_str_ex 0034  
                        ___aldiv@dividend 0024                  ??_PIN_MANAGER_Initialize 0070  
                 __end_of_pid_b_b_process 0D08                __size_of_SYSTEM_Initialize 0011  
                                 clrloop0 0159                      end_of_initialization 083C  
                                 init_ram 015E                                   initloop 015F  
                    ??_get_idrv_pwm1_duty 0072                      ??_set_idrv_pwm1_duty 0074  
                       _EUSART_Initialize 0F75                           ___lldiv@divisor 0070  
                         ___lldiv@counter 007C                        ?_EUSART_Initialize 0070  
                        ___aldiv@quotient 002A                                 _PWM1LDCON 0D9F  
                               _PWM2LDCON 0DAF                                 _PWM1OFCON 0DA0  
                               _PWM2OFCON 0DB0                              __pstringtext 00FD  
                     m_int_2_str_ex@ssize 0032                      __end_of_fvr_set_gain 0E00  
                              _subTickerX 005C                       ??_EUSART_Initialize 0070  
                        ??_WDT_Initialize 0070                          __CFG_FOSC$INTOSC 0000  
                               _RXPPSbits 0E15                       __size_of_adc_sample 0038  
               __end_of_EUSART_Initialize 0F81                              _globalTicker 0048  
                               _TXSTAbits 019E                  __size_of_PWM1_Initialize 0018  
            _TMR2_DefaultInterruptHandler 0000                                m_mem_cpy@d 0071  
                              m_mem_cpy@s 0070                            __end_of___lmul 0D2D  
                              m_mem_set@x 0070                            _rtAdcValueRcHi 004E  
                          _rtAdcValueRcLo 0050                            _rtAdcValueRsHi 0052  
                          _rtAdcValueRsLo 0054                    ?_OSCILLATOR_Initialize 0070  
                             __end_ofPL10 0FAD                               __end_ofPL20 0FCB  
                             __end_ofPL12 0FB3                               __end_ofPL22 0FD1  
                             __end_ofPL14 0FB9                               __end_ofPL24 00FD  
                             __end_ofPL16 0FBF                               __end_ofPL18 0FC6  
                     start_initialization 0803                          ?_pid_b_b_process 0070  
                __size_of_PWM2_Initialize 0017           __size_of_PIN_MANAGER_Initialize 0039  
            __size_of_calc_current_rs_avg 0005                         ??_pid_run_process 002E  
                      _cal_voout_pwm_duty 0E00                          __CFG_LPBOREN$OFF 0000  
                                ??___lmul 0078                       ?_cal_voout_pwm_duty 0020  
                             __pdataBANK0 005E                               __pdataBANK1 00D8  
                         _ADC1_Initialize 0A22                         __size_of_adc_init 000F  
                             __pbssCOMMON 007D                                 ___latbits 0001  
                           __pcstackBANK0 0020                  __size_of_TMR2_Initialize 000F  
                    ??_cal_voout_pwm_duty 007D                __size_of_EUSART_Initialize 000C  
                   cal_voout_pwm_duty@t32 0022                     __size_of_fvr_set_gain 0011  
                  _PIN_MANAGER_Initialize 0A2F                        pid_b_b_process@t32 002E  
                                ?___aldiv 0020                                  ?___almod 0070  
                                ?___lldiv 0070                              ??_adc_sample 0074  
                             adc_sample@i 0078                         ??_PWM1_Initialize 0070  
            ??_INTERRUPT_InterruptManager 0070                          ___almod@dividend 0074  
                   set_idrv_pwm1_duty@t16 0074                                 __pswtext1 014C  
              __end_of_get_vout_pwm2_duty 1000                __end_of_set_vout_pwm2_duty 0FF9  
                               _m_mem_cpy 0124                                 _m_mem_set 0F5D  
                           adc_sample@t16 0079                             adc_sample@ret 0076  
                           adc_sample@num 0073                          uart_send_str@str 0070  
                            _fvr_set_gain 0DEF                            _eusartRxBuffer 01A0  
                         ___aldiv@divisor 0020                         ??_PWM2_Initialize 0070  
                          _eusartTxBuffer 0120                        __end_of_adc_sample 0993  
                         ___aldiv@counter 0028                                 clear_ram0 0158  
                           ?_calc_temp_rc 0020                             ?_calc_temp_rs 0020  
                                _PIE1bits 0091                  __size_of_TMR2_StartTimer 0003  
                  set_vout_pwm2_duty@duty 0072       __size_of_INTERRUPT_InterruptManager 0022  
                 __end_of_ADC1_Initialize 0A26                                  _PIR1bits 0011  
                                _PWM1INTE 0D9C                                  _PWM1INTF 0D9D  
                                _PWM2INTE 0DAC                                  _PWM2INTF 0DAD  
                                _PWM1TMRH 0D9A                                  _PWM1TMRL 0D99  
                                _PWM2TMRH 0DAA                                  _PWM2TMRL 0DA9  
                  __size_of_uart_send_str 0033                                _ADCON0bits 009D  
                              ?_m_mem_cpy 0070                   __size_of_FVR_Initialize 0004  
                              ?_m_mem_set 0070         __size_of_TMR2_SetInterruptHandler 0001  
               ?_TMR2_SetInterruptHandler 0070                               _isRunInBoot 0FFF  
                       ___lmul@multiplier 0070                         ??_TMR2_Initialize 0072  
                          ??_calc_temp_rc 0024                            ??_calc_temp_rs 007D  
             __size_of_get_idrv_pwm1_duty 0007               __size_of_set_idrv_pwm1_duty 0015  
                      pid_run_process@t32 0040                        pid_run_process@t16 003E  
                     _calc_current_rs_avg 0EB8                   ??_OSCILLATOR_Initialize 0070  
                        __size_of___aldiv 006C                          __size_of___almod 005A  
                        __size_of___lldiv 003F                                  _adc_init 0DE0  
                         _pid_run_process 0A68                       _eusartRxIdleTime_ms 004C  
                    ?_calc_current_rs_avg 0070                                  __ptext10 0124  
                                __ptext11 009D                                  __ptext20 0DEF  
                                __ptext12 0D2D                                  __ptext21 0DE0  
                                __ptext13 0028                                  __ptext30 0A2A  
                                __ptext22 0A11                                  __ptext14 0EBD  
                                __ptext31 0A26                                  __ptext23 0DDD  
                                __ptext15 0EB8                                  __ptext32 0F75  
                                __ptext24 0FD1                                  __ptext16 0E00  
                                __ptext33 0A22                                  __ptext25 0FE1  
                                __ptext17 0D08                                  __ptext34 0A0E  
                                __ptext26 0FE0                                  __ptext18 0E79  
                                __ptext27 0DC6                                  __ptext19 095B  
                                __ptext28 0DAE                                  __ptext29 0A2F  
                             _eusartTxLen 0059                           ___almod@divisor 0070  
                         ___almod@counter 0078                             _uart_send_str 0928  
                 __size_of_m_int_2_str_ex 007B                             __size_of_main 00E9  
                           _subTickerX_1s 005D                     set_vout_pwm2_duty@t16 0074  
                              _RA4PPSbits 0E94                                _RA5PPSbits 0E95  
                        ?_ADC1_Initialize 0070                                  int$flags 007E  
                              _RC5PPSbits 0EA5                         ??_TMR2_StartTimer 0070  
      __end_of_INTERRUPT_InterruptManager 0026                _INTERRUPT_InterruptManager 0004  
             PIN_MANAGER_Initialize@state 0070                               ??_m_mem_cpy 0071  
                             ??_m_mem_set 0073                                _INTCONbits 000B  
                             _PWM1CONbits 0D9B                         pid_run_process@ei 0036  
                       pid_run_process@ep 0032                                _FVRCONbits 0117  
                             _PWM2CONbits 0DAB                     ??_calc_current_rs_avg 0072  
                 __size_of_WDT_Initialize 0003                            ?_uart_send_str 0070  
                                intlevel1 0000                  __size_of_pid_b_b_process 01A1  
                        ___lldiv@dividend 0074                   ?_PIN_MANAGER_Initialize 0070  
                       __CFG_CLKOUTEN$OFF 0000                               _PPSLOCKbits 0E0F  
                         _PWM1_Initialize 0DAE                   __end_of_pid_run_process 0B67  
                              _PWM1CLKCON 0D9E                                _PWM2CLKCON 0DAE  
                          _FVR_Initialize 0A26                      __end_of_calc_temp_rc 0F5D  
                    __end_of_calc_temp_rs 009D                          ___lldiv@quotient 0078  
                         _PWM2_Initialize 0DC6                              ___aldiv@sign 0029  
                              _PWM1_Start 0A0E               __size_of_cal_voout_pwm_duty 0079  
          __end_of_PIN_MANAGER_Initialize 0A68                              ___almod@sign 0079  
                      _get_vout_pwm2_duty 0FF9                        _set_vout_pwm2_duty 0FE4  
                     ?_get_vout_pwm2_duty 0070                       ?_set_vout_pwm2_duty 0072  
