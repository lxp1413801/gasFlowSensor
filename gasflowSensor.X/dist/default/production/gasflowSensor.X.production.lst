

Microchip Technology PIC PRO Macro Assembler V1.37 build -260352376 
                                                                                               Mon Nov 12 22:28:06 2018

Microchip Technology Omniscient Code Generator v1.37 (PRO mode) build 201603110536
     1                           	processor	16F1574
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	swtext1,local,class=CONST,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	pa_nodes,global,class=CODE,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     	;# 
    27  0001                     	;# 
    28  0002                     	;# 
    29  0003                     	;# 
    30  0004                     	;# 
    31  0005                     	;# 
    32  0006                     	;# 
    33  0007                     	;# 
    34  0008                     	;# 
    35  0009                     	;# 
    36  000A                     	;# 
    37  000B                     	;# 
    38  000C                     	;# 
    39  000E                     	;# 
    40  0011                     	;# 
    41  0012                     	;# 
    42  0013                     	;# 
    43  0015                     	;# 
    44  0016                     	;# 
    45  0016                     	;# 
    46  0017                     	;# 
    47  0018                     	;# 
    48  0019                     	;# 
    49  001A                     	;# 
    50  001B                     	;# 
    51  001C                     	;# 
    52  008C                     	;# 
    53  008E                     	;# 
    54  0091                     	;# 
    55  0092                     	;# 
    56  0093                     	;# 
    57  0095                     	;# 
    58  0096                     	;# 
    59  0097                     	;# 
    60  0098                     	;# 
    61  0099                     	;# 
    62  009A                     	;# 
    63  009B                     	;# 
    64  009B                     	;# 
    65  009C                     	;# 
    66  009D                     	;# 
    67  009E                     	;# 
    68  009F                     	;# 
    69  010C                     	;# 
    70  010E                     	;# 
    71  0111                     	;# 
    72  0112                     	;# 
    73  0113                     	;# 
    74  0114                     	;# 
    75  0115                     	;# 
    76  0116                     	;# 
    77  0117                     	;# 
    78  0118                     	;# 
    79  0119                     	;# 
    80  018C                     	;# 
    81  018E                     	;# 
    82  0191                     	;# 
    83  0191                     	;# 
    84  0192                     	;# 
    85  0193                     	;# 
    86  0193                     	;# 
    87  0194                     	;# 
    88  0195                     	;# 
    89  0196                     	;# 
    90  0197                     	;# 
    91  0199                     	;# 
    92  019A                     	;# 
    93  019B                     	;# 
    94  019B                     	;# 
    95  019C                     	;# 
    96  019D                     	;# 
    97  019E                     	;# 
    98  019F                     	;# 
    99  020C                     	;# 
   100  020E                     	;# 
   101  028C                     	;# 
   102  028E                     	;# 
   103  030C                     	;# 
   104  030E                     	;# 
   105  038C                     	;# 
   106  038E                     	;# 
   107  0391                     	;# 
   108  0392                     	;# 
   109  0393                     	;# 
   110  0397                     	;# 
   111  0398                     	;# 
   112  0399                     	;# 
   113  0691                     	;# 
   114  0692                     	;# 
   115  0693                     	;# 
   116  0694                     	;# 
   117  0695                     	;# 
   118  0D8E                     	;# 
   119  0D8F                     	;# 
   120  0D90                     	;# 
   121  0D91                     	;# 
   122  0D91                     	;# 
   123  0D92                     	;# 
   124  0D93                     	;# 
   125  0D93                     	;# 
   126  0D94                     	;# 
   127  0D95                     	;# 
   128  0D95                     	;# 
   129  0D96                     	;# 
   130  0D97                     	;# 
   131  0D97                     	;# 
   132  0D98                     	;# 
   133  0D99                     	;# 
   134  0D99                     	;# 
   135  0D9A                     	;# 
   136  0D9B                     	;# 
   137  0D9C                     	;# 
   138  0D9C                     	;# 
   139  0D9D                     	;# 
   140  0D9D                     	;# 
   141  0D9E                     	;# 
   142  0D9F                     	;# 
   143  0DA0                     	;# 
   144  0DA1                     	;# 
   145  0DA1                     	;# 
   146  0DA2                     	;# 
   147  0DA3                     	;# 
   148  0DA3                     	;# 
   149  0DA4                     	;# 
   150  0DA5                     	;# 
   151  0DA5                     	;# 
   152  0DA6                     	;# 
   153  0DA7                     	;# 
   154  0DA7                     	;# 
   155  0DA8                     	;# 
   156  0DA9                     	;# 
   157  0DA9                     	;# 
   158  0DAA                     	;# 
   159  0DAB                     	;# 
   160  0DAC                     	;# 
   161  0DAC                     	;# 
   162  0DAD                     	;# 
   163  0DAD                     	;# 
   164  0DAE                     	;# 
   165  0DAF                     	;# 
   166  0DB0                     	;# 
   167  0DB1                     	;# 
   168  0DB1                     	;# 
   169  0DB2                     	;# 
   170  0DB3                     	;# 
   171  0DB3                     	;# 
   172  0DB4                     	;# 
   173  0DB5                     	;# 
   174  0DB5                     	;# 
   175  0DB6                     	;# 
   176  0DB7                     	;# 
   177  0DB7                     	;# 
   178  0DB8                     	;# 
   179  0DB9                     	;# 
   180  0DB9                     	;# 
   181  0DBA                     	;# 
   182  0DBB                     	;# 
   183  0DBC                     	;# 
   184  0DBC                     	;# 
   185  0DBD                     	;# 
   186  0DBD                     	;# 
   187  0DBE                     	;# 
   188  0DBF                     	;# 
   189  0DC0                     	;# 
   190  0DC1                     	;# 
   191  0DC1                     	;# 
   192  0DC2                     	;# 
   193  0DC3                     	;# 
   194  0DC3                     	;# 
   195  0DC4                     	;# 
   196  0DC5                     	;# 
   197  0DC5                     	;# 
   198  0DC6                     	;# 
   199  0DC7                     	;# 
   200  0DC7                     	;# 
   201  0DC8                     	;# 
   202  0DC9                     	;# 
   203  0DC9                     	;# 
   204  0DCA                     	;# 
   205  0DCB                     	;# 
   206  0DCC                     	;# 
   207  0DCC                     	;# 
   208  0DCD                     	;# 
   209  0DCD                     	;# 
   210  0DCE                     	;# 
   211  0DCF                     	;# 
   212  0DD0                     	;# 
   213  0E0F                     	;# 
   214  0E10                     	;# 
   215  0E11                     	;# 
   216  0E12                     	;# 
   217  0E13                     	;# 
   218  0E14                     	;# 
   219  0E15                     	;# 
   220  0E16                     	;# 
   221  0E17                     	;# 
   222  0E90                     	;# 
   223  0E91                     	;# 
   224  0E92                     	;# 
   225  0E94                     	;# 
   226  0E95                     	;# 
   227  0EA0                     	;# 
   228  0EA1                     	;# 
   229  0EA2                     	;# 
   230  0EA3                     	;# 
   231  0EA4                     	;# 
   232  0EA5                     	;# 
   233  0FE4                     	;# 
   234  0FE5                     	;# 
   235  0FE6                     	;# 
   236  0FE7                     	;# 
   237  0FE8                     	;# 
   238  0FE8                     	;# 
   239  0FE9                     	;# 
   240  0FEA                     	;# 
   241  0FEA                     	;# 
   242  0FEB                     	;# 
   243  0FED                     	;# 
   244  0FEE                     	;# 
   245  0FEE                     	;# 
   246  0FEF                     	;# 
   247  0000                     	;# 
   248  0001                     	;# 
   249  0002                     	;# 
   250  0003                     	;# 
   251  0004                     	;# 
   252  0005                     	;# 
   253  0006                     	;# 
   254  0007                     	;# 
   255  0008                     	;# 
   256  0009                     	;# 
   257  000A                     	;# 
   258  000B                     	;# 
   259  000C                     	;# 
   260  000E                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  008C                     	;# 
   274  008E                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0095                     	;# 
   279  0096                     	;# 
   280  0097                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009A                     	;# 
   284  009B                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  010C                     	;# 
   291  010E                     	;# 
   292  0111                     	;# 
   293  0112                     	;# 
   294  0113                     	;# 
   295  0114                     	;# 
   296  0115                     	;# 
   297  0116                     	;# 
   298  0117                     	;# 
   299  0118                     	;# 
   300  0119                     	;# 
   301  018C                     	;# 
   302  018E                     	;# 
   303  0191                     	;# 
   304  0191                     	;# 
   305  0192                     	;# 
   306  0193                     	;# 
   307  0193                     	;# 
   308  0194                     	;# 
   309  0195                     	;# 
   310  0196                     	;# 
   311  0197                     	;# 
   312  0199                     	;# 
   313  019A                     	;# 
   314  019B                     	;# 
   315  019B                     	;# 
   316  019C                     	;# 
   317  019D                     	;# 
   318  019E                     	;# 
   319  019F                     	;# 
   320  020C                     	;# 
   321  020E                     	;# 
   322  028C                     	;# 
   323  028E                     	;# 
   324  030C                     	;# 
   325  030E                     	;# 
   326  038C                     	;# 
   327  038E                     	;# 
   328  0391                     	;# 
   329  0392                     	;# 
   330  0393                     	;# 
   331  0397                     	;# 
   332  0398                     	;# 
   333  0399                     	;# 
   334  0691                     	;# 
   335  0692                     	;# 
   336  0693                     	;# 
   337  0694                     	;# 
   338  0695                     	;# 
   339  0D8E                     	;# 
   340  0D8F                     	;# 
   341  0D90                     	;# 
   342  0D91                     	;# 
   343  0D91                     	;# 
   344  0D92                     	;# 
   345  0D93                     	;# 
   346  0D93                     	;# 
   347  0D94                     	;# 
   348  0D95                     	;# 
   349  0D95                     	;# 
   350  0D96                     	;# 
   351  0D97                     	;# 
   352  0D97                     	;# 
   353  0D98                     	;# 
   354  0D99                     	;# 
   355  0D99                     	;# 
   356  0D9A                     	;# 
   357  0D9B                     	;# 
   358  0D9C                     	;# 
   359  0D9C                     	;# 
   360  0D9D                     	;# 
   361  0D9D                     	;# 
   362  0D9E                     	;# 
   363  0D9F                     	;# 
   364  0DA0                     	;# 
   365  0DA1                     	;# 
   366  0DA1                     	;# 
   367  0DA2                     	;# 
   368  0DA3                     	;# 
   369  0DA3                     	;# 
   370  0DA4                     	;# 
   371  0DA5                     	;# 
   372  0DA5                     	;# 
   373  0DA6                     	;# 
   374  0DA7                     	;# 
   375  0DA7                     	;# 
   376  0DA8                     	;# 
   377  0DA9                     	;# 
   378  0DA9                     	;# 
   379  0DAA                     	;# 
   380  0DAB                     	;# 
   381  0DAC                     	;# 
   382  0DAC                     	;# 
   383  0DAD                     	;# 
   384  0DAD                     	;# 
   385  0DAE                     	;# 
   386  0DAF                     	;# 
   387  0DB0                     	;# 
   388  0DB1                     	;# 
   389  0DB1                     	;# 
   390  0DB2                     	;# 
   391  0DB3                     	;# 
   392  0DB3                     	;# 
   393  0DB4                     	;# 
   394  0DB5                     	;# 
   395  0DB5                     	;# 
   396  0DB6                     	;# 
   397  0DB7                     	;# 
   398  0DB7                     	;# 
   399  0DB8                     	;# 
   400  0DB9                     	;# 
   401  0DB9                     	;# 
   402  0DBA                     	;# 
   403  0DBB                     	;# 
   404  0DBC                     	;# 
   405  0DBC                     	;# 
   406  0DBD                     	;# 
   407  0DBD                     	;# 
   408  0DBE                     	;# 
   409  0DBF                     	;# 
   410  0DC0                     	;# 
   411  0DC1                     	;# 
   412  0DC1                     	;# 
   413  0DC2                     	;# 
   414  0DC3                     	;# 
   415  0DC3                     	;# 
   416  0DC4                     	;# 
   417  0DC5                     	;# 
   418  0DC5                     	;# 
   419  0DC6                     	;# 
   420  0DC7                     	;# 
   421  0DC7                     	;# 
   422  0DC8                     	;# 
   423  0DC9                     	;# 
   424  0DC9                     	;# 
   425  0DCA                     	;# 
   426  0DCB                     	;# 
   427  0DCC                     	;# 
   428  0DCC                     	;# 
   429  0DCD                     	;# 
   430  0DCD                     	;# 
   431  0DCE                     	;# 
   432  0DCF                     	;# 
   433  0DD0                     	;# 
   434  0E0F                     	;# 
   435  0E10                     	;# 
   436  0E11                     	;# 
   437  0E12                     	;# 
   438  0E13                     	;# 
   439  0E14                     	;# 
   440  0E15                     	;# 
   441  0E16                     	;# 
   442  0E17                     	;# 
   443  0E90                     	;# 
   444  0E91                     	;# 
   445  0E92                     	;# 
   446  0E94                     	;# 
   447  0E95                     	;# 
   448  0EA0                     	;# 
   449  0EA1                     	;# 
   450  0EA2                     	;# 
   451  0EA3                     	;# 
   452  0EA4                     	;# 
   453  0EA5                     	;# 
   454  0FE4                     	;# 
   455  0FE5                     	;# 
   456  0FE6                     	;# 
   457  0FE7                     	;# 
   458  0FE8                     	;# 
   459  0FE8                     	;# 
   460  0FE9                     	;# 
   461  0FEA                     	;# 
   462  0FEA                     	;# 
   463  0FEB                     	;# 
   464  0FED                     	;# 
   465  0FEE                     	;# 
   466  0FEE                     	;# 
   467  0FEF                     	;# 
   468  0000                     	;# 
   469  0001                     	;# 
   470  0002                     	;# 
   471  0003                     	;# 
   472  0004                     	;# 
   473  0005                     	;# 
   474  0006                     	;# 
   475  0007                     	;# 
   476  0008                     	;# 
   477  0009                     	;# 
   478  000A                     	;# 
   479  000B                     	;# 
   480  000C                     	;# 
   481  000E                     	;# 
   482  0011                     	;# 
   483  0012                     	;# 
   484  0013                     	;# 
   485  0015                     	;# 
   486  0016                     	;# 
   487  0016                     	;# 
   488  0017                     	;# 
   489  0018                     	;# 
   490  0019                     	;# 
   491  001A                     	;# 
   492  001B                     	;# 
   493  001C                     	;# 
   494  008C                     	;# 
   495  008E                     	;# 
   496  0091                     	;# 
   497  0092                     	;# 
   498  0093                     	;# 
   499  0095                     	;# 
   500  0096                     	;# 
   501  0097                     	;# 
   502  0098                     	;# 
   503  0099                     	;# 
   504  009A                     	;# 
   505  009B                     	;# 
   506  009B                     	;# 
   507  009C                     	;# 
   508  009D                     	;# 
   509  009E                     	;# 
   510  009F                     	;# 
   511  010C                     	;# 
   512  010E                     	;# 
   513  0111                     	;# 
   514  0112                     	;# 
   515  0113                     	;# 
   516  0114                     	;# 
   517  0115                     	;# 
   518  0116                     	;# 
   519  0117                     	;# 
   520  0118                     	;# 
   521  0119                     	;# 
   522  018C                     	;# 
   523  018E                     	;# 
   524  0191                     	;# 
   525  0191                     	;# 
   526  0192                     	;# 
   527  0193                     	;# 
   528  0193                     	;# 
   529  0194                     	;# 
   530  0195                     	;# 
   531  0196                     	;# 
   532  0197                     	;# 
   533  0199                     	;# 
   534  019A                     	;# 
   535  019B                     	;# 
   536  019B                     	;# 
   537  019C                     	;# 
   538  019D                     	;# 
   539  019E                     	;# 
   540  019F                     	;# 
   541  020C                     	;# 
   542  020E                     	;# 
   543  028C                     	;# 
   544  028E                     	;# 
   545  030C                     	;# 
   546  030E                     	;# 
   547  038C                     	;# 
   548  038E                     	;# 
   549  0391                     	;# 
   550  0392                     	;# 
   551  0393                     	;# 
   552  0397                     	;# 
   553  0398                     	;# 
   554  0399                     	;# 
   555  0691                     	;# 
   556  0692                     	;# 
   557  0693                     	;# 
   558  0694                     	;# 
   559  0695                     	;# 
   560  0D8E                     	;# 
   561  0D8F                     	;# 
   562  0D90                     	;# 
   563  0D91                     	;# 
   564  0D91                     	;# 
   565  0D92                     	;# 
   566  0D93                     	;# 
   567  0D93                     	;# 
   568  0D94                     	;# 
   569  0D95                     	;# 
   570  0D95                     	;# 
   571  0D96                     	;# 
   572  0D97                     	;# 
   573  0D97                     	;# 
   574  0D98                     	;# 
   575  0D99                     	;# 
   576  0D99                     	;# 
   577  0D9A                     	;# 
   578  0D9B                     	;# 
   579  0D9C                     	;# 
   580  0D9C                     	;# 
   581  0D9D                     	;# 
   582  0D9D                     	;# 
   583  0D9E                     	;# 
   584  0D9F                     	;# 
   585  0DA0                     	;# 
   586  0DA1                     	;# 
   587  0DA1                     	;# 
   588  0DA2                     	;# 
   589  0DA3                     	;# 
   590  0DA3                     	;# 
   591  0DA4                     	;# 
   592  0DA5                     	;# 
   593  0DA5                     	;# 
   594  0DA6                     	;# 
   595  0DA7                     	;# 
   596  0DA7                     	;# 
   597  0DA8                     	;# 
   598  0DA9                     	;# 
   599  0DA9                     	;# 
   600  0DAA                     	;# 
   601  0DAB                     	;# 
   602  0DAC                     	;# 
   603  0DAC                     	;# 
   604  0DAD                     	;# 
   605  0DAD                     	;# 
   606  0DAE                     	;# 
   607  0DAF                     	;# 
   608  0DB0                     	;# 
   609  0DB1                     	;# 
   610  0DB1                     	;# 
   611  0DB2                     	;# 
   612  0DB3                     	;# 
   613  0DB3                     	;# 
   614  0DB4                     	;# 
   615  0DB5                     	;# 
   616  0DB5                     	;# 
   617  0DB6                     	;# 
   618  0DB7                     	;# 
   619  0DB7                     	;# 
   620  0DB8                     	;# 
   621  0DB9                     	;# 
   622  0DB9                     	;# 
   623  0DBA                     	;# 
   624  0DBB                     	;# 
   625  0DBC                     	;# 
   626  0DBC                     	;# 
   627  0DBD                     	;# 
   628  0DBD                     	;# 
   629  0DBE                     	;# 
   630  0DBF                     	;# 
   631  0DC0                     	;# 
   632  0DC1                     	;# 
   633  0DC1                     	;# 
   634  0DC2                     	;# 
   635  0DC3                     	;# 
   636  0DC3                     	;# 
   637  0DC4                     	;# 
   638  0DC5                     	;# 
   639  0DC5                     	;# 
   640  0DC6                     	;# 
   641  0DC7                     	;# 
   642  0DC7                     	;# 
   643  0DC8                     	;# 
   644  0DC9                     	;# 
   645  0DC9                     	;# 
   646  0DCA                     	;# 
   647  0DCB                     	;# 
   648  0DCC                     	;# 
   649  0DCC                     	;# 
   650  0DCD                     	;# 
   651  0DCD                     	;# 
   652  0DCE                     	;# 
   653  0DCF                     	;# 
   654  0DD0                     	;# 
   655  0E0F                     	;# 
   656  0E10                     	;# 
   657  0E11                     	;# 
   658  0E12                     	;# 
   659  0E13                     	;# 
   660  0E14                     	;# 
   661  0E15                     	;# 
   662  0E16                     	;# 
   663  0E17                     	;# 
   664  0E90                     	;# 
   665  0E91                     	;# 
   666  0E92                     	;# 
   667  0E94                     	;# 
   668  0E95                     	;# 
   669  0EA0                     	;# 
   670  0EA1                     	;# 
   671  0EA2                     	;# 
   672  0EA3                     	;# 
   673  0EA4                     	;# 
   674  0EA5                     	;# 
   675  0FE4                     	;# 
   676  0FE5                     	;# 
   677  0FE6                     	;# 
   678  0FE7                     	;# 
   679  0FE8                     	;# 
   680  0FE8                     	;# 
   681  0FE9                     	;# 
   682  0FEA                     	;# 
   683  0FEA                     	;# 
   684  0FEB                     	;# 
   685  0FED                     	;# 
   686  0FEE                     	;# 
   687  0FEE                     	;# 
   688  0FEF                     	;# 
   689  0000                     	;# 
   690  0001                     	;# 
   691  0002                     	;# 
   692  0003                     	;# 
   693  0004                     	;# 
   694  0005                     	;# 
   695  0006                     	;# 
   696  0007                     	;# 
   697  0008                     	;# 
   698  0009                     	;# 
   699  000A                     	;# 
   700  000B                     	;# 
   701  000C                     	;# 
   702  000E                     	;# 
   703  0011                     	;# 
   704  0012                     	;# 
   705  0013                     	;# 
   706  0015                     	;# 
   707  0016                     	;# 
   708  0016                     	;# 
   709  0017                     	;# 
   710  0018                     	;# 
   711  0019                     	;# 
   712  001A                     	;# 
   713  001B                     	;# 
   714  001C                     	;# 
   715  008C                     	;# 
   716  008E                     	;# 
   717  0091                     	;# 
   718  0092                     	;# 
   719  0093                     	;# 
   720  0095                     	;# 
   721  0096                     	;# 
   722  0097                     	;# 
   723  0098                     	;# 
   724  0099                     	;# 
   725  009A                     	;# 
   726  009B                     	;# 
   727  009B                     	;# 
   728  009C                     	;# 
   729  009D                     	;# 
   730  009E                     	;# 
   731  009F                     	;# 
   732  010C                     	;# 
   733  010E                     	;# 
   734  0111                     	;# 
   735  0112                     	;# 
   736  0113                     	;# 
   737  0114                     	;# 
   738  0115                     	;# 
   739  0116                     	;# 
   740  0117                     	;# 
   741  0118                     	;# 
   742  0119                     	;# 
   743  018C                     	;# 
   744  018E                     	;# 
   745  0191                     	;# 
   746  0191                     	;# 
   747  0192                     	;# 
   748  0193                     	;# 
   749  0193                     	;# 
   750  0194                     	;# 
   751  0195                     	;# 
   752  0196                     	;# 
   753  0197                     	;# 
   754  0199                     	;# 
   755  019A                     	;# 
   756  019B                     	;# 
   757  019B                     	;# 
   758  019C                     	;# 
   759  019D                     	;# 
   760  019E                     	;# 
   761  019F                     	;# 
   762  020C                     	;# 
   763  020E                     	;# 
   764  028C                     	;# 
   765  028E                     	;# 
   766  030C                     	;# 
   767  030E                     	;# 
   768  038C                     	;# 
   769  038E                     	;# 
   770  0391                     	;# 
   771  0392                     	;# 
   772  0393                     	;# 
   773  0397                     	;# 
   774  0398                     	;# 
   775  0399                     	;# 
   776  0691                     	;# 
   777  0692                     	;# 
   778  0693                     	;# 
   779  0694                     	;# 
   780  0695                     	;# 
   781  0D8E                     	;# 
   782  0D8F                     	;# 
   783  0D90                     	;# 
   784  0D91                     	;# 
   785  0D91                     	;# 
   786  0D92                     	;# 
   787  0D93                     	;# 
   788  0D93                     	;# 
   789  0D94                     	;# 
   790  0D95                     	;# 
   791  0D95                     	;# 
   792  0D96                     	;# 
   793  0D97                     	;# 
   794  0D97                     	;# 
   795  0D98                     	;# 
   796  0D99                     	;# 
   797  0D99                     	;# 
   798  0D9A                     	;# 
   799  0D9B                     	;# 
   800  0D9C                     	;# 
   801  0D9C                     	;# 
   802  0D9D                     	;# 
   803  0D9D                     	;# 
   804  0D9E                     	;# 
   805  0D9F                     	;# 
   806  0DA0                     	;# 
   807  0DA1                     	;# 
   808  0DA1                     	;# 
   809  0DA2                     	;# 
   810  0DA3                     	;# 
   811  0DA3                     	;# 
   812  0DA4                     	;# 
   813  0DA5                     	;# 
   814  0DA5                     	;# 
   815  0DA6                     	;# 
   816  0DA7                     	;# 
   817  0DA7                     	;# 
   818  0DA8                     	;# 
   819  0DA9                     	;# 
   820  0DA9                     	;# 
   821  0DAA                     	;# 
   822  0DAB                     	;# 
   823  0DAC                     	;# 
   824  0DAC                     	;# 
   825  0DAD                     	;# 
   826  0DAD                     	;# 
   827  0DAE                     	;# 
   828  0DAF                     	;# 
   829  0DB0                     	;# 
   830  0DB1                     	;# 
   831  0DB1                     	;# 
   832  0DB2                     	;# 
   833  0DB3                     	;# 
   834  0DB3                     	;# 
   835  0DB4                     	;# 
   836  0DB5                     	;# 
   837  0DB5                     	;# 
   838  0DB6                     	;# 
   839  0DB7                     	;# 
   840  0DB7                     	;# 
   841  0DB8                     	;# 
   842  0DB9                     	;# 
   843  0DB9                     	;# 
   844  0DBA                     	;# 
   845  0DBB                     	;# 
   846  0DBC                     	;# 
   847  0DBC                     	;# 
   848  0DBD                     	;# 
   849  0DBD                     	;# 
   850  0DBE                     	;# 
   851  0DBF                     	;# 
   852  0DC0                     	;# 
   853  0DC1                     	;# 
   854  0DC1                     	;# 
   855  0DC2                     	;# 
   856  0DC3                     	;# 
   857  0DC3                     	;# 
   858  0DC4                     	;# 
   859  0DC5                     	;# 
   860  0DC5                     	;# 
   861  0DC6                     	;# 
   862  0DC7                     	;# 
   863  0DC7                     	;# 
   864  0DC8                     	;# 
   865  0DC9                     	;# 
   866  0DC9                     	;# 
   867  0DCA                     	;# 
   868  0DCB                     	;# 
   869  0DCC                     	;# 
   870  0DCC                     	;# 
   871  0DCD                     	;# 
   872  0DCD                     	;# 
   873  0DCE                     	;# 
   874  0DCF                     	;# 
   875  0DD0                     	;# 
   876  0E0F                     	;# 
   877  0E10                     	;# 
   878  0E11                     	;# 
   879  0E12                     	;# 
   880  0E13                     	;# 
   881  0E14                     	;# 
   882  0E15                     	;# 
   883  0E16                     	;# 
   884  0E17                     	;# 
   885  0E90                     	;# 
   886  0E91                     	;# 
   887  0E92                     	;# 
   888  0E94                     	;# 
   889  0E95                     	;# 
   890  0EA0                     	;# 
   891  0EA1                     	;# 
   892  0EA2                     	;# 
   893  0EA3                     	;# 
   894  0EA4                     	;# 
   895  0EA5                     	;# 
   896  0FE4                     	;# 
   897  0FE5                     	;# 
   898  0FE6                     	;# 
   899  0FE7                     	;# 
   900  0FE8                     	;# 
   901  0FE8                     	;# 
   902  0FE9                     	;# 
   903  0FEA                     	;# 
   904  0FEA                     	;# 
   905  0FEB                     	;# 
   906  0FED                     	;# 
   907  0FEE                     	;# 
   908  0FEE                     	;# 
   909  0FEF                     	;# 
   910  0000                     	;# 
   911  0001                     	;# 
   912  0002                     	;# 
   913  0003                     	;# 
   914  0004                     	;# 
   915  0005                     	;# 
   916  0006                     	;# 
   917  0007                     	;# 
   918  0008                     	;# 
   919  0009                     	;# 
   920  000A                     	;# 
   921  000B                     	;# 
   922  000C                     	;# 
   923  000E                     	;# 
   924  0011                     	;# 
   925  0012                     	;# 
   926  0013                     	;# 
   927  0015                     	;# 
   928  0016                     	;# 
   929  0016                     	;# 
   930  0017                     	;# 
   931  0018                     	;# 
   932  0019                     	;# 
   933  001A                     	;# 
   934  001B                     	;# 
   935  001C                     	;# 
   936  008C                     	;# 
   937  008E                     	;# 
   938  0091                     	;# 
   939  0092                     	;# 
   940  0093                     	;# 
   941  0095                     	;# 
   942  0096                     	;# 
   943  0097                     	;# 
   944  0098                     	;# 
   945  0099                     	;# 
   946  009A                     	;# 
   947  009B                     	;# 
   948  009B                     	;# 
   949  009C                     	;# 
   950  009D                     	;# 
   951  009E                     	;# 
   952  009F                     	;# 
   953  010C                     	;# 
   954  010E                     	;# 
   955  0111                     	;# 
   956  0112                     	;# 
   957  0113                     	;# 
   958  0114                     	;# 
   959  0115                     	;# 
   960  0116                     	;# 
   961  0117                     	;# 
   962  0118                     	;# 
   963  0119                     	;# 
   964  018C                     	;# 
   965  018E                     	;# 
   966  0191                     	;# 
   967  0191                     	;# 
   968  0192                     	;# 
   969  0193                     	;# 
   970  0193                     	;# 
   971  0194                     	;# 
   972  0195                     	;# 
   973  0196                     	;# 
   974  0197                     	;# 
   975  0199                     	;# 
   976  019A                     	;# 
   977  019B                     	;# 
   978  019B                     	;# 
   979  019C                     	;# 
   980  019D                     	;# 
   981  019E                     	;# 
   982  019F                     	;# 
   983  020C                     	;# 
   984  020E                     	;# 
   985  028C                     	;# 
   986  028E                     	;# 
   987  030C                     	;# 
   988  030E                     	;# 
   989  038C                     	;# 
   990  038E                     	;# 
   991  0391                     	;# 
   992  0392                     	;# 
   993  0393                     	;# 
   994  0397                     	;# 
   995  0398                     	;# 
   996  0399                     	;# 
   997  0691                     	;# 
   998  0692                     	;# 
   999  0693                     	;# 
  1000  0694                     	;# 
  1001  0695                     	;# 
  1002  0D8E                     	;# 
  1003  0D8F                     	;# 
  1004  0D90                     	;# 
  1005  0D91                     	;# 
  1006  0D91                     	;# 
  1007  0D92                     	;# 
  1008  0D93                     	;# 
  1009  0D93                     	;# 
  1010  0D94                     	;# 
  1011  0D95                     	;# 
  1012  0D95                     	;# 
  1013  0D96                     	;# 
  1014  0D97                     	;# 
  1015  0D97                     	;# 
  1016  0D98                     	;# 
  1017  0D99                     	;# 
  1018  0D99                     	;# 
  1019  0D9A                     	;# 
  1020  0D9B                     	;# 
  1021  0D9C                     	;# 
  1022  0D9C                     	;# 
  1023  0D9D                     	;# 
  1024  0D9D                     	;# 
  1025  0D9E                     	;# 
  1026  0D9F                     	;# 
  1027  0DA0                     	;# 
  1028  0DA1                     	;# 
  1029  0DA1                     	;# 
  1030  0DA2                     	;# 
  1031  0DA3                     	;# 
  1032  0DA3                     	;# 
  1033  0DA4                     	;# 
  1034  0DA5                     	;# 
  1035  0DA5                     	;# 
  1036  0DA6                     	;# 
  1037  0DA7                     	;# 
  1038  0DA7                     	;# 
  1039  0DA8                     	;# 
  1040  0DA9                     	;# 
  1041  0DA9                     	;# 
  1042  0DAA                     	;# 
  1043  0DAB                     	;# 
  1044  0DAC                     	;# 
  1045  0DAC                     	;# 
  1046  0DAD                     	;# 
  1047  0DAD                     	;# 
  1048  0DAE                     	;# 
  1049  0DAF                     	;# 
  1050  0DB0                     	;# 
  1051  0DB1                     	;# 
  1052  0DB1                     	;# 
  1053  0DB2                     	;# 
  1054  0DB3                     	;# 
  1055  0DB3                     	;# 
  1056  0DB4                     	;# 
  1057  0DB5                     	;# 
  1058  0DB5                     	;# 
  1059  0DB6                     	;# 
  1060  0DB7                     	;# 
  1061  0DB7                     	;# 
  1062  0DB8                     	;# 
  1063  0DB9                     	;# 
  1064  0DB9                     	;# 
  1065  0DBA                     	;# 
  1066  0DBB                     	;# 
  1067  0DBC                     	;# 
  1068  0DBC                     	;# 
  1069  0DBD                     	;# 
  1070  0DBD                     	;# 
  1071  0DBE                     	;# 
  1072  0DBF                     	;# 
  1073  0DC0                     	;# 
  1074  0DC1                     	;# 
  1075  0DC1                     	;# 
  1076  0DC2                     	;# 
  1077  0DC3                     	;# 
  1078  0DC3                     	;# 
  1079  0DC4                     	;# 
  1080  0DC5                     	;# 
  1081  0DC5                     	;# 
  1082  0DC6                     	;# 
  1083  0DC7                     	;# 
  1084  0DC7                     	;# 
  1085  0DC8                     	;# 
  1086  0DC9                     	;# 
  1087  0DC9                     	;# 
  1088  0DCA                     	;# 
  1089  0DCB                     	;# 
  1090  0DCC                     	;# 
  1091  0DCC                     	;# 
  1092  0DCD                     	;# 
  1093  0DCD                     	;# 
  1094  0DCE                     	;# 
  1095  0DCF                     	;# 
  1096  0DD0                     	;# 
  1097  0E0F                     	;# 
  1098  0E10                     	;# 
  1099  0E11                     	;# 
  1100  0E12                     	;# 
  1101  0E13                     	;# 
  1102  0E14                     	;# 
  1103  0E15                     	;# 
  1104  0E16                     	;# 
  1105  0E17                     	;# 
  1106  0E90                     	;# 
  1107  0E91                     	;# 
  1108  0E92                     	;# 
  1109  0E94                     	;# 
  1110  0E95                     	;# 
  1111  0EA0                     	;# 
  1112  0EA1                     	;# 
  1113  0EA2                     	;# 
  1114  0EA3                     	;# 
  1115  0EA4                     	;# 
  1116  0EA5                     	;# 
  1117  0FE4                     	;# 
  1118  0FE5                     	;# 
  1119  0FE6                     	;# 
  1120  0FE7                     	;# 
  1121  0FE8                     	;# 
  1122  0FE8                     	;# 
  1123  0FE9                     	;# 
  1124  0FEA                     	;# 
  1125  0FEA                     	;# 
  1126  0FEB                     	;# 
  1127  0FED                     	;# 
  1128  0FEE                     	;# 
  1129  0FEE                     	;# 
  1130  0FEF                     	;# 
  1131  0FFF                     	;# 
  1132  0000                     	;# 
  1133  0001                     	;# 
  1134  0002                     	;# 
  1135  0003                     	;# 
  1136  0004                     	;# 
  1137  0005                     	;# 
  1138  0006                     	;# 
  1139  0007                     	;# 
  1140  0008                     	;# 
  1141  0009                     	;# 
  1142  000A                     	;# 
  1143  000B                     	;# 
  1144  000C                     	;# 
  1145  000E                     	;# 
  1146  0011                     	;# 
  1147  0012                     	;# 
  1148  0013                     	;# 
  1149  0015                     	;# 
  1150  0016                     	;# 
  1151  0016                     	;# 
  1152  0017                     	;# 
  1153  0018                     	;# 
  1154  0019                     	;# 
  1155  001A                     	;# 
  1156  001B                     	;# 
  1157  001C                     	;# 
  1158  008C                     	;# 
  1159  008E                     	;# 
  1160  0091                     	;# 
  1161  0092                     	;# 
  1162  0093                     	;# 
  1163  0095                     	;# 
  1164  0096                     	;# 
  1165  0097                     	;# 
  1166  0098                     	;# 
  1167  0099                     	;# 
  1168  009A                     	;# 
  1169  009B                     	;# 
  1170  009B                     	;# 
  1171  009C                     	;# 
  1172  009D                     	;# 
  1173  009E                     	;# 
  1174  009F                     	;# 
  1175  010C                     	;# 
  1176  010E                     	;# 
  1177  0111                     	;# 
  1178  0112                     	;# 
  1179  0113                     	;# 
  1180  0114                     	;# 
  1181  0115                     	;# 
  1182  0116                     	;# 
  1183  0117                     	;# 
  1184  0118                     	;# 
  1185  0119                     	;# 
  1186  018C                     	;# 
  1187  018E                     	;# 
  1188  0191                     	;# 
  1189  0191                     	;# 
  1190  0192                     	;# 
  1191  0193                     	;# 
  1192  0193                     	;# 
  1193  0194                     	;# 
  1194  0195                     	;# 
  1195  0196                     	;# 
  1196  0197                     	;# 
  1197  0199                     	;# 
  1198  019A                     	;# 
  1199  019B                     	;# 
  1200  019B                     	;# 
  1201  019C                     	;# 
  1202  019D                     	;# 
  1203  019E                     	;# 
  1204  019F                     	;# 
  1205  020C                     	;# 
  1206  020E                     	;# 
  1207  028C                     	;# 
  1208  028E                     	;# 
  1209  030C                     	;# 
  1210  030E                     	;# 
  1211  038C                     	;# 
  1212  038E                     	;# 
  1213  0391                     	;# 
  1214  0392                     	;# 
  1215  0393                     	;# 
  1216  0397                     	;# 
  1217  0398                     	;# 
  1218  0399                     	;# 
  1219  0691                     	;# 
  1220  0692                     	;# 
  1221  0693                     	;# 
  1222  0694                     	;# 
  1223  0695                     	;# 
  1224  0D8E                     	;# 
  1225  0D8F                     	;# 
  1226  0D90                     	;# 
  1227  0D91                     	;# 
  1228  0D91                     	;# 
  1229  0D92                     	;# 
  1230  0D93                     	;# 
  1231  0D93                     	;# 
  1232  0D94                     	;# 
  1233  0D95                     	;# 
  1234  0D95                     	;# 
  1235  0D96                     	;# 
  1236  0D97                     	;# 
  1237  0D97                     	;# 
  1238  0D98                     	;# 
  1239  0D99                     	;# 
  1240  0D99                     	;# 
  1241  0D9A                     	;# 
  1242  0D9B                     	;# 
  1243  0D9C                     	;# 
  1244  0D9C                     	;# 
  1245  0D9D                     	;# 
  1246  0D9D                     	;# 
  1247  0D9E                     	;# 
  1248  0D9F                     	;# 
  1249  0DA0                     	;# 
  1250  0DA1                     	;# 
  1251  0DA1                     	;# 
  1252  0DA2                     	;# 
  1253  0DA3                     	;# 
  1254  0DA3                     	;# 
  1255  0DA4                     	;# 
  1256  0DA5                     	;# 
  1257  0DA5                     	;# 
  1258  0DA6                     	;# 
  1259  0DA7                     	;# 
  1260  0DA7                     	;# 
  1261  0DA8                     	;# 
  1262  0DA9                     	;# 
  1263  0DA9                     	;# 
  1264  0DAA                     	;# 
  1265  0DAB                     	;# 
  1266  0DAC                     	;# 
  1267  0DAC                     	;# 
  1268  0DAD                     	;# 
  1269  0DAD                     	;# 
  1270  0DAE                     	;# 
  1271  0DAF                     	;# 
  1272  0DB0                     	;# 
  1273  0DB1                     	;# 
  1274  0DB1                     	;# 
  1275  0DB2                     	;# 
  1276  0DB3                     	;# 
  1277  0DB3                     	;# 
  1278  0DB4                     	;# 
  1279  0DB5                     	;# 
  1280  0DB5                     	;# 
  1281  0DB6                     	;# 
  1282  0DB7                     	;# 
  1283  0DB7                     	;# 
  1284  0DB8                     	;# 
  1285  0DB9                     	;# 
  1286  0DB9                     	;# 
  1287  0DBA                     	;# 
  1288  0DBB                     	;# 
  1289  0DBC                     	;# 
  1290  0DBC                     	;# 
  1291  0DBD                     	;# 
  1292  0DBD                     	;# 
  1293  0DBE                     	;# 
  1294  0DBF                     	;# 
  1295  0DC0                     	;# 
  1296  0DC1                     	;# 
  1297  0DC1                     	;# 
  1298  0DC2                     	;# 
  1299  0DC3                     	;# 
  1300  0DC3                     	;# 
  1301  0DC4                     	;# 
  1302  0DC5                     	;# 
  1303  0DC5                     	;# 
  1304  0DC6                     	;# 
  1305  0DC7                     	;# 
  1306  0DC7                     	;# 
  1307  0DC8                     	;# 
  1308  0DC9                     	;# 
  1309  0DC9                     	;# 
  1310  0DCA                     	;# 
  1311  0DCB                     	;# 
  1312  0DCC                     	;# 
  1313  0DCC                     	;# 
  1314  0DCD                     	;# 
  1315  0DCD                     	;# 
  1316  0DCE                     	;# 
  1317  0DCF                     	;# 
  1318  0DD0                     	;# 
  1319  0E0F                     	;# 
  1320  0E10                     	;# 
  1321  0E11                     	;# 
  1322  0E12                     	;# 
  1323  0E13                     	;# 
  1324  0E14                     	;# 
  1325  0E15                     	;# 
  1326  0E16                     	;# 
  1327  0E17                     	;# 
  1328  0E90                     	;# 
  1329  0E91                     	;# 
  1330  0E92                     	;# 
  1331  0E94                     	;# 
  1332  0E95                     	;# 
  1333  0EA0                     	;# 
  1334  0EA1                     	;# 
  1335  0EA2                     	;# 
  1336  0EA3                     	;# 
  1337  0EA4                     	;# 
  1338  0EA5                     	;# 
  1339  0FE4                     	;# 
  1340  0FE5                     	;# 
  1341  0FE6                     	;# 
  1342  0FE7                     	;# 
  1343  0FE8                     	;# 
  1344  0FE8                     	;# 
  1345  0FE9                     	;# 
  1346  0FEA                     	;# 
  1347  0FEA                     	;# 
  1348  0FEB                     	;# 
  1349  0FED                     	;# 
  1350  0FEE                     	;# 
  1351  0FEE                     	;# 
  1352  0FEF                     	;# 
  1353  0000                     	;# 
  1354  0001                     	;# 
  1355  0002                     	;# 
  1356  0003                     	;# 
  1357  0004                     	;# 
  1358  0005                     	;# 
  1359  0006                     	;# 
  1360  0007                     	;# 
  1361  0008                     	;# 
  1362  0009                     	;# 
  1363  000A                     	;# 
  1364  000B                     	;# 
  1365  000C                     	;# 
  1366  000E                     	;# 
  1367  0011                     	;# 
  1368  0012                     	;# 
  1369  0013                     	;# 
  1370  0015                     	;# 
  1371  0016                     	;# 
  1372  0016                     	;# 
  1373  0017                     	;# 
  1374  0018                     	;# 
  1375  0019                     	;# 
  1376  001A                     	;# 
  1377  001B                     	;# 
  1378  001C                     	;# 
  1379  008C                     	;# 
  1380  008E                     	;# 
  1381  0091                     	;# 
  1382  0092                     	;# 
  1383  0093                     	;# 
  1384  0095                     	;# 
  1385  0096                     	;# 
  1386  0097                     	;# 
  1387  0098                     	;# 
  1388  0099                     	;# 
  1389  009A                     	;# 
  1390  009B                     	;# 
  1391  009B                     	;# 
  1392  009C                     	;# 
  1393  009D                     	;# 
  1394  009E                     	;# 
  1395  009F                     	;# 
  1396  010C                     	;# 
  1397  010E                     	;# 
  1398  0111                     	;# 
  1399  0112                     	;# 
  1400  0113                     	;# 
  1401  0114                     	;# 
  1402  0115                     	;# 
  1403  0116                     	;# 
  1404  0117                     	;# 
  1405  0118                     	;# 
  1406  0119                     	;# 
  1407  018C                     	;# 
  1408  018E                     	;# 
  1409  0191                     	;# 
  1410  0191                     	;# 
  1411  0192                     	;# 
  1412  0193                     	;# 
  1413  0193                     	;# 
  1414  0194                     	;# 
  1415  0195                     	;# 
  1416  0196                     	;# 
  1417  0197                     	;# 
  1418  0199                     	;# 
  1419  019A                     	;# 
  1420  019B                     	;# 
  1421  019B                     	;# 
  1422  019C                     	;# 
  1423  019D                     	;# 
  1424  019E                     	;# 
  1425  019F                     	;# 
  1426  020C                     	;# 
  1427  020E                     	;# 
  1428  028C                     	;# 
  1429  028E                     	;# 
  1430  030C                     	;# 
  1431  030E                     	;# 
  1432  038C                     	;# 
  1433  038E                     	;# 
  1434  0391                     	;# 
  1435  0392                     	;# 
  1436  0393                     	;# 
  1437  0397                     	;# 
  1438  0398                     	;# 
  1439  0399                     	;# 
  1440  0691                     	;# 
  1441  0692                     	;# 
  1442  0693                     	;# 
  1443  0694                     	;# 
  1444  0695                     	;# 
  1445  0D8E                     	;# 
  1446  0D8F                     	;# 
  1447  0D90                     	;# 
  1448  0D91                     	;# 
  1449  0D91                     	;# 
  1450  0D92                     	;# 
  1451  0D93                     	;# 
  1452  0D93                     	;# 
  1453  0D94                     	;# 
  1454  0D95                     	;# 
  1455  0D95                     	;# 
  1456  0D96                     	;# 
  1457  0D97                     	;# 
  1458  0D97                     	;# 
  1459  0D98                     	;# 
  1460  0D99                     	;# 
  1461  0D99                     	;# 
  1462  0D9A                     	;# 
  1463  0D9B                     	;# 
  1464  0D9C                     	;# 
  1465  0D9C                     	;# 
  1466  0D9D                     	;# 
  1467  0D9D                     	;# 
  1468  0D9E                     	;# 
  1469  0D9F                     	;# 
  1470  0DA0                     	;# 
  1471  0DA1                     	;# 
  1472  0DA1                     	;# 
  1473  0DA2                     	;# 
  1474  0DA3                     	;# 
  1475  0DA3                     	;# 
  1476  0DA4                     	;# 
  1477  0DA5                     	;# 
  1478  0DA5                     	;# 
  1479  0DA6                     	;# 
  1480  0DA7                     	;# 
  1481  0DA7                     	;# 
  1482  0DA8                     	;# 
  1483  0DA9                     	;# 
  1484  0DA9                     	;# 
  1485  0DAA                     	;# 
  1486  0DAB                     	;# 
  1487  0DAC                     	;# 
  1488  0DAC                     	;# 
  1489  0DAD                     	;# 
  1490  0DAD                     	;# 
  1491  0DAE                     	;# 
  1492  0DAF                     	;# 
  1493  0DB0                     	;# 
  1494  0DB1                     	;# 
  1495  0DB1                     	;# 
  1496  0DB2                     	;# 
  1497  0DB3                     	;# 
  1498  0DB3                     	;# 
  1499  0DB4                     	;# 
  1500  0DB5                     	;# 
  1501  0DB5                     	;# 
  1502  0DB6                     	;# 
  1503  0DB7                     	;# 
  1504  0DB7                     	;# 
  1505  0DB8                     	;# 
  1506  0DB9                     	;# 
  1507  0DB9                     	;# 
  1508  0DBA                     	;# 
  1509  0DBB                     	;# 
  1510  0DBC                     	;# 
  1511  0DBC                     	;# 
  1512  0DBD                     	;# 
  1513  0DBD                     	;# 
  1514  0DBE                     	;# 
  1515  0DBF                     	;# 
  1516  0DC0                     	;# 
  1517  0DC1                     	;# 
  1518  0DC1                     	;# 
  1519  0DC2                     	;# 
  1520  0DC3                     	;# 
  1521  0DC3                     	;# 
  1522  0DC4                     	;# 
  1523  0DC5                     	;# 
  1524  0DC5                     	;# 
  1525  0DC6                     	;# 
  1526  0DC7                     	;# 
  1527  0DC7                     	;# 
  1528  0DC8                     	;# 
  1529  0DC9                     	;# 
  1530  0DC9                     	;# 
  1531  0DCA                     	;# 
  1532  0DCB                     	;# 
  1533  0DCC                     	;# 
  1534  0DCC                     	;# 
  1535  0DCD                     	;# 
  1536  0DCD                     	;# 
  1537  0DCE                     	;# 
  1538  0DCF                     	;# 
  1539  0DD0                     	;# 
  1540  0E0F                     	;# 
  1541  0E10                     	;# 
  1542  0E11                     	;# 
  1543  0E12                     	;# 
  1544  0E13                     	;# 
  1545  0E14                     	;# 
  1546  0E15                     	;# 
  1547  0E16                     	;# 
  1548  0E17                     	;# 
  1549  0E90                     	;# 
  1550  0E91                     	;# 
  1551  0E92                     	;# 
  1552  0E94                     	;# 
  1553  0E95                     	;# 
  1554  0EA0                     	;# 
  1555  0EA1                     	;# 
  1556  0EA2                     	;# 
  1557  0EA3                     	;# 
  1558  0EA4                     	;# 
  1559  0EA5                     	;# 
  1560  0FE4                     	;# 
  1561  0FE5                     	;# 
  1562  0FE6                     	;# 
  1563  0FE7                     	;# 
  1564  0FE8                     	;# 
  1565  0FE8                     	;# 
  1566  0FE9                     	;# 
  1567  0FEA                     	;# 
  1568  0FEA                     	;# 
  1569  0FEB                     	;# 
  1570  0FED                     	;# 
  1571  0FEE                     	;# 
  1572  0FEE                     	;# 
  1573  0FEF                     	;# 
  1574  0000                     	;# 
  1575  0001                     	;# 
  1576  0002                     	;# 
  1577  0003                     	;# 
  1578  0004                     	;# 
  1579  0005                     	;# 
  1580  0006                     	;# 
  1581  0007                     	;# 
  1582  0008                     	;# 
  1583  0009                     	;# 
  1584  000A                     	;# 
  1585  000B                     	;# 
  1586  000C                     	;# 
  1587  000E                     	;# 
  1588  0011                     	;# 
  1589  0012                     	;# 
  1590  0013                     	;# 
  1591  0015                     	;# 
  1592  0016                     	;# 
  1593  0016                     	;# 
  1594  0017                     	;# 
  1595  0018                     	;# 
  1596  0019                     	;# 
  1597  001A                     	;# 
  1598  001B                     	;# 
  1599  001C                     	;# 
  1600  008C                     	;# 
  1601  008E                     	;# 
  1602  0091                     	;# 
  1603  0092                     	;# 
  1604  0093                     	;# 
  1605  0095                     	;# 
  1606  0096                     	;# 
  1607  0097                     	;# 
  1608  0098                     	;# 
  1609  0099                     	;# 
  1610  009A                     	;# 
  1611  009B                     	;# 
  1612  009B                     	;# 
  1613  009C                     	;# 
  1614  009D                     	;# 
  1615  009E                     	;# 
  1616  009F                     	;# 
  1617  010C                     	;# 
  1618  010E                     	;# 
  1619  0111                     	;# 
  1620  0112                     	;# 
  1621  0113                     	;# 
  1622  0114                     	;# 
  1623  0115                     	;# 
  1624  0116                     	;# 
  1625  0117                     	;# 
  1626  0118                     	;# 
  1627  0119                     	;# 
  1628  018C                     	;# 
  1629  018E                     	;# 
  1630  0191                     	;# 
  1631  0191                     	;# 
  1632  0192                     	;# 
  1633  0193                     	;# 
  1634  0193                     	;# 
  1635  0194                     	;# 
  1636  0195                     	;# 
  1637  0196                     	;# 
  1638  0197                     	;# 
  1639  0199                     	;# 
  1640  019A                     	;# 
  1641  019B                     	;# 
  1642  019B                     	;# 
  1643  019C                     	;# 
  1644  019D                     	;# 
  1645  019E                     	;# 
  1646  019F                     	;# 
  1647  020C                     	;# 
  1648  020E                     	;# 
  1649  028C                     	;# 
  1650  028E                     	;# 
  1651  030C                     	;# 
  1652  030E                     	;# 
  1653  038C                     	;# 
  1654  038E                     	;# 
  1655  0391                     	;# 
  1656  0392                     	;# 
  1657  0393                     	;# 
  1658  0397                     	;# 
  1659  0398                     	;# 
  1660  0399                     	;# 
  1661  0691                     	;# 
  1662  0692                     	;# 
  1663  0693                     	;# 
  1664  0694                     	;# 
  1665  0695                     	;# 
  1666  0D8E                     	;# 
  1667  0D8F                     	;# 
  1668  0D90                     	;# 
  1669  0D91                     	;# 
  1670  0D91                     	;# 
  1671  0D92                     	;# 
  1672  0D93                     	;# 
  1673  0D93                     	;# 
  1674  0D94                     	;# 
  1675  0D95                     	;# 
  1676  0D95                     	;# 
  1677  0D96                     	;# 
  1678  0D97                     	;# 
  1679  0D97                     	;# 
  1680  0D98                     	;# 
  1681  0D99                     	;# 
  1682  0D99                     	;# 
  1683  0D9A                     	;# 
  1684  0D9B                     	;# 
  1685  0D9C                     	;# 
  1686  0D9C                     	;# 
  1687  0D9D                     	;# 
  1688  0D9D                     	;# 
  1689  0D9E                     	;# 
  1690  0D9F                     	;# 
  1691  0DA0                     	;# 
  1692  0DA1                     	;# 
  1693  0DA1                     	;# 
  1694  0DA2                     	;# 
  1695  0DA3                     	;# 
  1696  0DA3                     	;# 
  1697  0DA4                     	;# 
  1698  0DA5                     	;# 
  1699  0DA5                     	;# 
  1700  0DA6                     	;# 
  1701  0DA7                     	;# 
  1702  0DA7                     	;# 
  1703  0DA8                     	;# 
  1704  0DA9                     	;# 
  1705  0DA9                     	;# 
  1706  0DAA                     	;# 
  1707  0DAB                     	;# 
  1708  0DAC                     	;# 
  1709  0DAC                     	;# 
  1710  0DAD                     	;# 
  1711  0DAD                     	;# 
  1712  0DAE                     	;# 
  1713  0DAF                     	;# 
  1714  0DB0                     	;# 
  1715  0DB1                     	;# 
  1716  0DB1                     	;# 
  1717  0DB2                     	;# 
  1718  0DB3                     	;# 
  1719  0DB3                     	;# 
  1720  0DB4                     	;# 
  1721  0DB5                     	;# 
  1722  0DB5                     	;# 
  1723  0DB6                     	;# 
  1724  0DB7                     	;# 
  1725  0DB7                     	;# 
  1726  0DB8                     	;# 
  1727  0DB9                     	;# 
  1728  0DB9                     	;# 
  1729  0DBA                     	;# 
  1730  0DBB                     	;# 
  1731  0DBC                     	;# 
  1732  0DBC                     	;# 
  1733  0DBD                     	;# 
  1734  0DBD                     	;# 
  1735  0DBE                     	;# 
  1736  0DBF                     	;# 
  1737  0DC0                     	;# 
  1738  0DC1                     	;# 
  1739  0DC1                     	;# 
  1740  0DC2                     	;# 
  1741  0DC3                     	;# 
  1742  0DC3                     	;# 
  1743  0DC4                     	;# 
  1744  0DC5                     	;# 
  1745  0DC5                     	;# 
  1746  0DC6                     	;# 
  1747  0DC7                     	;# 
  1748  0DC7                     	;# 
  1749  0DC8                     	;# 
  1750  0DC9                     	;# 
  1751  0DC9                     	;# 
  1752  0DCA                     	;# 
  1753  0DCB                     	;# 
  1754  0DCC                     	;# 
  1755  0DCC                     	;# 
  1756  0DCD                     	;# 
  1757  0DCD                     	;# 
  1758  0DCE                     	;# 
  1759  0DCF                     	;# 
  1760  0DD0                     	;# 
  1761  0E0F                     	;# 
  1762  0E10                     	;# 
  1763  0E11                     	;# 
  1764  0E12                     	;# 
  1765  0E13                     	;# 
  1766  0E14                     	;# 
  1767  0E15                     	;# 
  1768  0E16                     	;# 
  1769  0E17                     	;# 
  1770  0E90                     	;# 
  1771  0E91                     	;# 
  1772  0E92                     	;# 
  1773  0E94                     	;# 
  1774  0E95                     	;# 
  1775  0EA0                     	;# 
  1776  0EA1                     	;# 
  1777  0EA2                     	;# 
  1778  0EA3                     	;# 
  1779  0EA4                     	;# 
  1780  0EA5                     	;# 
  1781  0FE4                     	;# 
  1782  0FE5                     	;# 
  1783  0FE6                     	;# 
  1784  0FE7                     	;# 
  1785  0FE8                     	;# 
  1786  0FE8                     	;# 
  1787  0FE9                     	;# 
  1788  0FEA                     	;# 
  1789  0FEA                     	;# 
  1790  0FEB                     	;# 
  1791  0FED                     	;# 
  1792  0FEE                     	;# 
  1793  0FEE                     	;# 
  1794  0FEF                     	;# 
  1795  0000                     	;# 
  1796  0001                     	;# 
  1797  0002                     	;# 
  1798  0003                     	;# 
  1799  0004                     	;# 
  1800  0005                     	;# 
  1801  0006                     	;# 
  1802  0007                     	;# 
  1803  0008                     	;# 
  1804  0009                     	;# 
  1805  000A                     	;# 
  1806  000B                     	;# 
  1807  000C                     	;# 
  1808  000E                     	;# 
  1809  0011                     	;# 
  1810  0012                     	;# 
  1811  0013                     	;# 
  1812  0015                     	;# 
  1813  0016                     	;# 
  1814  0016                     	;# 
  1815  0017                     	;# 
  1816  0018                     	;# 
  1817  0019                     	;# 
  1818  001A                     	;# 
  1819  001B                     	;# 
  1820  001C                     	;# 
  1821  008C                     	;# 
  1822  008E                     	;# 
  1823  0091                     	;# 
  1824  0092                     	;# 
  1825  0093                     	;# 
  1826  0095                     	;# 
  1827  0096                     	;# 
  1828  0097                     	;# 
  1829  0098                     	;# 
  1830  0099                     	;# 
  1831  009A                     	;# 
  1832  009B                     	;# 
  1833  009B                     	;# 
  1834  009C                     	;# 
  1835  009D                     	;# 
  1836  009E                     	;# 
  1837  009F                     	;# 
  1838  010C                     	;# 
  1839  010E                     	;# 
  1840  0111                     	;# 
  1841  0112                     	;# 
  1842  0113                     	;# 
  1843  0114                     	;# 
  1844  0115                     	;# 
  1845  0116                     	;# 
  1846  0117                     	;# 
  1847  0118                     	;# 
  1848  0119                     	;# 
  1849  018C                     	;# 
  1850  018E                     	;# 
  1851  0191                     	;# 
  1852  0191                     	;# 
  1853  0192                     	;# 
  1854  0193                     	;# 
  1855  0193                     	;# 
  1856  0194                     	;# 
  1857  0195                     	;# 
  1858  0196                     	;# 
  1859  0197                     	;# 
  1860  0199                     	;# 
  1861  019A                     	;# 
  1862  019B                     	;# 
  1863  019B                     	;# 
  1864  019C                     	;# 
  1865  019D                     	;# 
  1866  019E                     	;# 
  1867  019F                     	;# 
  1868  020C                     	;# 
  1869  020E                     	;# 
  1870  028C                     	;# 
  1871  028E                     	;# 
  1872  030C                     	;# 
  1873  030E                     	;# 
  1874  038C                     	;# 
  1875  038E                     	;# 
  1876  0391                     	;# 
  1877  0392                     	;# 
  1878  0393                     	;# 
  1879  0397                     	;# 
  1880  0398                     	;# 
  1881  0399                     	;# 
  1882  0691                     	;# 
  1883  0692                     	;# 
  1884  0693                     	;# 
  1885  0694                     	;# 
  1886  0695                     	;# 
  1887  0D8E                     	;# 
  1888  0D8F                     	;# 
  1889  0D90                     	;# 
  1890  0D91                     	;# 
  1891  0D91                     	;# 
  1892  0D92                     	;# 
  1893  0D93                     	;# 
  1894  0D93                     	;# 
  1895  0D94                     	;# 
  1896  0D95                     	;# 
  1897  0D95                     	;# 
  1898  0D96                     	;# 
  1899  0D97                     	;# 
  1900  0D97                     	;# 
  1901  0D98                     	;# 
  1902  0D99                     	;# 
  1903  0D99                     	;# 
  1904  0D9A                     	;# 
  1905  0D9B                     	;# 
  1906  0D9C                     	;# 
  1907  0D9C                     	;# 
  1908  0D9D                     	;# 
  1909  0D9D                     	;# 
  1910  0D9E                     	;# 
  1911  0D9F                     	;# 
  1912  0DA0                     	;# 
  1913  0DA1                     	;# 
  1914  0DA1                     	;# 
  1915  0DA2                     	;# 
  1916  0DA3                     	;# 
  1917  0DA3                     	;# 
  1918  0DA4                     	;# 
  1919  0DA5                     	;# 
  1920  0DA5                     	;# 
  1921  0DA6                     	;# 
  1922  0DA7                     	;# 
  1923  0DA7                     	;# 
  1924  0DA8                     	;# 
  1925  0DA9                     	;# 
  1926  0DA9                     	;# 
  1927  0DAA                     	;# 
  1928  0DAB                     	;# 
  1929  0DAC                     	;# 
  1930  0DAC                     	;# 
  1931  0DAD                     	;# 
  1932  0DAD                     	;# 
  1933  0DAE                     	;# 
  1934  0DAF                     	;# 
  1935  0DB0                     	;# 
  1936  0DB1                     	;# 
  1937  0DB1                     	;# 
  1938  0DB2                     	;# 
  1939  0DB3                     	;# 
  1940  0DB3                     	;# 
  1941  0DB4                     	;# 
  1942  0DB5                     	;# 
  1943  0DB5                     	;# 
  1944  0DB6                     	;# 
  1945  0DB7                     	;# 
  1946  0DB7                     	;# 
  1947  0DB8                     	;# 
  1948  0DB9                     	;# 
  1949  0DB9                     	;# 
  1950  0DBA                     	;# 
  1951  0DBB                     	;# 
  1952  0DBC                     	;# 
  1953  0DBC                     	;# 
  1954  0DBD                     	;# 
  1955  0DBD                     	;# 
  1956  0DBE                     	;# 
  1957  0DBF                     	;# 
  1958  0DC0                     	;# 
  1959  0DC1                     	;# 
  1960  0DC1                     	;# 
  1961  0DC2                     	;# 
  1962  0DC3                     	;# 
  1963  0DC3                     	;# 
  1964  0DC4                     	;# 
  1965  0DC5                     	;# 
  1966  0DC5                     	;# 
  1967  0DC6                     	;# 
  1968  0DC7                     	;# 
  1969  0DC7                     	;# 
  1970  0DC8                     	;# 
  1971  0DC9                     	;# 
  1972  0DC9                     	;# 
  1973  0DCA                     	;# 
  1974  0DCB                     	;# 
  1975  0DCC                     	;# 
  1976  0DCC                     	;# 
  1977  0DCD                     	;# 
  1978  0DCD                     	;# 
  1979  0DCE                     	;# 
  1980  0DCF                     	;# 
  1981  0DD0                     	;# 
  1982  0E0F                     	;# 
  1983  0E10                     	;# 
  1984  0E11                     	;# 
  1985  0E12                     	;# 
  1986  0E13                     	;# 
  1987  0E14                     	;# 
  1988  0E15                     	;# 
  1989  0E16                     	;# 
  1990  0E17                     	;# 
  1991  0E90                     	;# 
  1992  0E91                     	;# 
  1993  0E92                     	;# 
  1994  0E94                     	;# 
  1995  0E95                     	;# 
  1996  0EA0                     	;# 
  1997  0EA1                     	;# 
  1998  0EA2                     	;# 
  1999  0EA3                     	;# 
  2000  0EA4                     	;# 
  2001  0EA5                     	;# 
  2002  0FE4                     	;# 
  2003  0FE5                     	;# 
  2004  0FE6                     	;# 
  2005  0FE7                     	;# 
  2006  0FE8                     	;# 
  2007  0FE8                     	;# 
  2008  0FE9                     	;# 
  2009  0FEA                     	;# 
  2010  0FEA                     	;# 
  2011  0FEB                     	;# 
  2012  0FED                     	;# 
  2013  0FEE                     	;# 
  2014  0FEE                     	;# 
  2015  0FEF                     	;# 
  2016  0000                     	;# 
  2017  0001                     	;# 
  2018  0002                     	;# 
  2019  0003                     	;# 
  2020  0004                     	;# 
  2021  0005                     	;# 
  2022  0006                     	;# 
  2023  0007                     	;# 
  2024  0008                     	;# 
  2025  0009                     	;# 
  2026  000A                     	;# 
  2027  000B                     	;# 
  2028  000C                     	;# 
  2029  000E                     	;# 
  2030  0011                     	;# 
  2031  0012                     	;# 
  2032  0013                     	;# 
  2033  0015                     	;# 
  2034  0016                     	;# 
  2035  0016                     	;# 
  2036  0017                     	;# 
  2037  0018                     	;# 
  2038  0019                     	;# 
  2039  001A                     	;# 
  2040  001B                     	;# 
  2041  001C                     	;# 
  2042  008C                     	;# 
  2043  008E                     	;# 
  2044  0091                     	;# 
  2045  0092                     	;# 
  2046  0093                     	;# 
  2047  0095                     	;# 
  2048  0096                     	;# 
  2049  0097                     	;# 
  2050  0098                     	;# 
  2051  0099                     	;# 
  2052  009A                     	;# 
  2053  009B                     	;# 
  2054  009B                     	;# 
  2055  009C                     	;# 
  2056  009D                     	;# 
  2057  009E                     	;# 
  2058  009F                     	;# 
  2059  010C                     	;# 
  2060  010E                     	;# 
  2061  0111                     	;# 
  2062  0112                     	;# 
  2063  0113                     	;# 
  2064  0114                     	;# 
  2065  0115                     	;# 
  2066  0116                     	;# 
  2067  0117                     	;# 
  2068  0118                     	;# 
  2069  0119                     	;# 
  2070  018C                     	;# 
  2071  018E                     	;# 
  2072  0191                     	;# 
  2073  0191                     	;# 
  2074  0192                     	;# 
  2075  0193                     	;# 
  2076  0193                     	;# 
  2077  0194                     	;# 
  2078  0195                     	;# 
  2079  0196                     	;# 
  2080  0197                     	;# 
  2081  0199                     	;# 
  2082  019A                     	;# 
  2083  019B                     	;# 
  2084  019B                     	;# 
  2085  019C                     	;# 
  2086  019D                     	;# 
  2087  019E                     	;# 
  2088  019F                     	;# 
  2089  020C                     	;# 
  2090  020E                     	;# 
  2091  028C                     	;# 
  2092  028E                     	;# 
  2093  030C                     	;# 
  2094  030E                     	;# 
  2095  038C                     	;# 
  2096  038E                     	;# 
  2097  0391                     	;# 
  2098  0392                     	;# 
  2099  0393                     	;# 
  2100  0397                     	;# 
  2101  0398                     	;# 
  2102  0399                     	;# 
  2103  0691                     	;# 
  2104  0692                     	;# 
  2105  0693                     	;# 
  2106  0694                     	;# 
  2107  0695                     	;# 
  2108  0D8E                     	;# 
  2109  0D8F                     	;# 
  2110  0D90                     	;# 
  2111  0D91                     	;# 
  2112  0D91                     	;# 
  2113  0D92                     	;# 
  2114  0D93                     	;# 
  2115  0D93                     	;# 
  2116  0D94                     	;# 
  2117  0D95                     	;# 
  2118  0D95                     	;# 
  2119  0D96                     	;# 
  2120  0D97                     	;# 
  2121  0D97                     	;# 
  2122  0D98                     	;# 
  2123  0D99                     	;# 
  2124  0D99                     	;# 
  2125  0D9A                     	;# 
  2126  0D9B                     	;# 
  2127  0D9C                     	;# 
  2128  0D9C                     	;# 
  2129  0D9D                     	;# 
  2130  0D9D                     	;# 
  2131  0D9E                     	;# 
  2132  0D9F                     	;# 
  2133  0DA0                     	;# 
  2134  0DA1                     	;# 
  2135  0DA1                     	;# 
  2136  0DA2                     	;# 
  2137  0DA3                     	;# 
  2138  0DA3                     	;# 
  2139  0DA4                     	;# 
  2140  0DA5                     	;# 
  2141  0DA5                     	;# 
  2142  0DA6                     	;# 
  2143  0DA7                     	;# 
  2144  0DA7                     	;# 
  2145  0DA8                     	;# 
  2146  0DA9                     	;# 
  2147  0DA9                     	;# 
  2148  0DAA                     	;# 
  2149  0DAB                     	;# 
  2150  0DAC                     	;# 
  2151  0DAC                     	;# 
  2152  0DAD                     	;# 
  2153  0DAD                     	;# 
  2154  0DAE                     	;# 
  2155  0DAF                     	;# 
  2156  0DB0                     	;# 
  2157  0DB1                     	;# 
  2158  0DB1                     	;# 
  2159  0DB2                     	;# 
  2160  0DB3                     	;# 
  2161  0DB3                     	;# 
  2162  0DB4                     	;# 
  2163  0DB5                     	;# 
  2164  0DB5                     	;# 
  2165  0DB6                     	;# 
  2166  0DB7                     	;# 
  2167  0DB7                     	;# 
  2168  0DB8                     	;# 
  2169  0DB9                     	;# 
  2170  0DB9                     	;# 
  2171  0DBA                     	;# 
  2172  0DBB                     	;# 
  2173  0DBC                     	;# 
  2174  0DBC                     	;# 
  2175  0DBD                     	;# 
  2176  0DBD                     	;# 
  2177  0DBE                     	;# 
  2178  0DBF                     	;# 
  2179  0DC0                     	;# 
  2180  0DC1                     	;# 
  2181  0DC1                     	;# 
  2182  0DC2                     	;# 
  2183  0DC3                     	;# 
  2184  0DC3                     	;# 
  2185  0DC4                     	;# 
  2186  0DC5                     	;# 
  2187  0DC5                     	;# 
  2188  0DC6                     	;# 
  2189  0DC7                     	;# 
  2190  0DC7                     	;# 
  2191  0DC8                     	;# 
  2192  0DC9                     	;# 
  2193  0DC9                     	;# 
  2194  0DCA                     	;# 
  2195  0DCB                     	;# 
  2196  0DCC                     	;# 
  2197  0DCC                     	;# 
  2198  0DCD                     	;# 
  2199  0DCD                     	;# 
  2200  0DCE                     	;# 
  2201  0DCF                     	;# 
  2202  0DD0                     	;# 
  2203  0E0F                     	;# 
  2204  0E10                     	;# 
  2205  0E11                     	;# 
  2206  0E12                     	;# 
  2207  0E13                     	;# 
  2208  0E14                     	;# 
  2209  0E15                     	;# 
  2210  0E16                     	;# 
  2211  0E17                     	;# 
  2212  0E90                     	;# 
  2213  0E91                     	;# 
  2214  0E92                     	;# 
  2215  0E94                     	;# 
  2216  0E95                     	;# 
  2217  0EA0                     	;# 
  2218  0EA1                     	;# 
  2219  0EA2                     	;# 
  2220  0EA3                     	;# 
  2221  0EA4                     	;# 
  2222  0EA5                     	;# 
  2223  0FE4                     	;# 
  2224  0FE5                     	;# 
  2225  0FE6                     	;# 
  2226  0FE7                     	;# 
  2227  0FE8                     	;# 
  2228  0FE8                     	;# 
  2229  0FE9                     	;# 
  2230  0FEA                     	;# 
  2231  0FEA                     	;# 
  2232  0FEB                     	;# 
  2233  0FED                     	;# 
  2234  0FEE                     	;# 
  2235  0FEE                     	;# 
  2236  0FEF                     	;# 
  2237  0000                     	;# 
  2238  0001                     	;# 
  2239  0002                     	;# 
  2240  0003                     	;# 
  2241  0004                     	;# 
  2242  0005                     	;# 
  2243  0006                     	;# 
  2244  0007                     	;# 
  2245  0008                     	;# 
  2246  0009                     	;# 
  2247  000A                     	;# 
  2248  000B                     	;# 
  2249  000C                     	;# 
  2250  000E                     	;# 
  2251  0011                     	;# 
  2252  0012                     	;# 
  2253  0013                     	;# 
  2254  0015                     	;# 
  2255  0016                     	;# 
  2256  0016                     	;# 
  2257  0017                     	;# 
  2258  0018                     	;# 
  2259  0019                     	;# 
  2260  001A                     	;# 
  2261  001B                     	;# 
  2262  001C                     	;# 
  2263  008C                     	;# 
  2264  008E                     	;# 
  2265  0091                     	;# 
  2266  0092                     	;# 
  2267  0093                     	;# 
  2268  0095                     	;# 
  2269  0096                     	;# 
  2270  0097                     	;# 
  2271  0098                     	;# 
  2272  0099                     	;# 
  2273  009A                     	;# 
  2274  009B                     	;# 
  2275  009B                     	;# 
  2276  009C                     	;# 
  2277  009D                     	;# 
  2278  009E                     	;# 
  2279  009F                     	;# 
  2280  010C                     	;# 
  2281  010E                     	;# 
  2282  0111                     	;# 
  2283  0112                     	;# 
  2284  0113                     	;# 
  2285  0114                     	;# 
  2286  0115                     	;# 
  2287  0116                     	;# 
  2288  0117                     	;# 
  2289  0118                     	;# 
  2290  0119                     	;# 
  2291  018C                     	;# 
  2292  018E                     	;# 
  2293  0191                     	;# 
  2294  0191                     	;# 
  2295  0192                     	;# 
  2296  0193                     	;# 
  2297  0193                     	;# 
  2298  0194                     	;# 
  2299  0195                     	;# 
  2300  0196                     	;# 
  2301  0197                     	;# 
  2302  0199                     	;# 
  2303  019A                     	;# 
  2304  019B                     	;# 
  2305  019B                     	;# 
  2306  019C                     	;# 
  2307  019D                     	;# 
  2308  019E                     	;# 
  2309  019F                     	;# 
  2310  020C                     	;# 
  2311  020E                     	;# 
  2312  028C                     	;# 
  2313  028E                     	;# 
  2314  030C                     	;# 
  2315  030E                     	;# 
  2316  038C                     	;# 
  2317  038E                     	;# 
  2318  0391                     	;# 
  2319  0392                     	;# 
  2320  0393                     	;# 
  2321  0397                     	;# 
  2322  0398                     	;# 
  2323  0399                     	;# 
  2324  0691                     	;# 
  2325  0692                     	;# 
  2326  0693                     	;# 
  2327  0694                     	;# 
  2328  0695                     	;# 
  2329  0D8E                     	;# 
  2330  0D8F                     	;# 
  2331  0D90                     	;# 
  2332  0D91                     	;# 
  2333  0D91                     	;# 
  2334  0D92                     	;# 
  2335  0D93                     	;# 
  2336  0D93                     	;# 
  2337  0D94                     	;# 
  2338  0D95                     	;# 
  2339  0D95                     	;# 
  2340  0D96                     	;# 
  2341  0D97                     	;# 
  2342  0D97                     	;# 
  2343  0D98                     	;# 
  2344  0D99                     	;# 
  2345  0D99                     	;# 
  2346  0D9A                     	;# 
  2347  0D9B                     	;# 
  2348  0D9C                     	;# 
  2349  0D9C                     	;# 
  2350  0D9D                     	;# 
  2351  0D9D                     	;# 
  2352  0D9E                     	;# 
  2353  0D9F                     	;# 
  2354  0DA0                     	;# 
  2355  0DA1                     	;# 
  2356  0DA1                     	;# 
  2357  0DA2                     	;# 
  2358  0DA3                     	;# 
  2359  0DA3                     	;# 
  2360  0DA4                     	;# 
  2361  0DA5                     	;# 
  2362  0DA5                     	;# 
  2363  0DA6                     	;# 
  2364  0DA7                     	;# 
  2365  0DA7                     	;# 
  2366  0DA8                     	;# 
  2367  0DA9                     	;# 
  2368  0DA9                     	;# 
  2369  0DAA                     	;# 
  2370  0DAB                     	;# 
  2371  0DAC                     	;# 
  2372  0DAC                     	;# 
  2373  0DAD                     	;# 
  2374  0DAD                     	;# 
  2375  0DAE                     	;# 
  2376  0DAF                     	;# 
  2377  0DB0                     	;# 
  2378  0DB1                     	;# 
  2379  0DB1                     	;# 
  2380  0DB2                     	;# 
  2381  0DB3                     	;# 
  2382  0DB3                     	;# 
  2383  0DB4                     	;# 
  2384  0DB5                     	;# 
  2385  0DB5                     	;# 
  2386  0DB6                     	;# 
  2387  0DB7                     	;# 
  2388  0DB7                     	;# 
  2389  0DB8                     	;# 
  2390  0DB9                     	;# 
  2391  0DB9                     	;# 
  2392  0DBA                     	;# 
  2393  0DBB                     	;# 
  2394  0DBC                     	;# 
  2395  0DBC                     	;# 
  2396  0DBD                     	;# 
  2397  0DBD                     	;# 
  2398  0DBE                     	;# 
  2399  0DBF                     	;# 
  2400  0DC0                     	;# 
  2401  0DC1                     	;# 
  2402  0DC1                     	;# 
  2403  0DC2                     	;# 
  2404  0DC3                     	;# 
  2405  0DC3                     	;# 
  2406  0DC4                     	;# 
  2407  0DC5                     	;# 
  2408  0DC5                     	;# 
  2409  0DC6                     	;# 
  2410  0DC7                     	;# 
  2411  0DC7                     	;# 
  2412  0DC8                     	;# 
  2413  0DC9                     	;# 
  2414  0DC9                     	;# 
  2415  0DCA                     	;# 
  2416  0DCB                     	;# 
  2417  0DCC                     	;# 
  2418  0DCC                     	;# 
  2419  0DCD                     	;# 
  2420  0DCD                     	;# 
  2421  0DCE                     	;# 
  2422  0DCF                     	;# 
  2423  0DD0                     	;# 
  2424  0E0F                     	;# 
  2425  0E10                     	;# 
  2426  0E11                     	;# 
  2427  0E12                     	;# 
  2428  0E13                     	;# 
  2429  0E14                     	;# 
  2430  0E15                     	;# 
  2431  0E16                     	;# 
  2432  0E17                     	;# 
  2433  0E90                     	;# 
  2434  0E91                     	;# 
  2435  0E92                     	;# 
  2436  0E94                     	;# 
  2437  0E95                     	;# 
  2438  0EA0                     	;# 
  2439  0EA1                     	;# 
  2440  0EA2                     	;# 
  2441  0EA3                     	;# 
  2442  0EA4                     	;# 
  2443  0EA5                     	;# 
  2444  0FE4                     	;# 
  2445  0FE5                     	;# 
  2446  0FE6                     	;# 
  2447  0FE7                     	;# 
  2448  0FE8                     	;# 
  2449  0FE8                     	;# 
  2450  0FE9                     	;# 
  2451  0FEA                     	;# 
  2452  0FEA                     	;# 
  2453  0FEB                     	;# 
  2454  0FED                     	;# 
  2455  0FEE                     	;# 
  2456  0FEE                     	;# 
  2457  0FEF                     	;# 
  2458  0FFF                     	;# 
  2459  0000                     	;# 
  2460  0001                     	;# 
  2461  0002                     	;# 
  2462  0003                     	;# 
  2463  0004                     	;# 
  2464  0005                     	;# 
  2465  0006                     	;# 
  2466  0007                     	;# 
  2467  0008                     	;# 
  2468  0009                     	;# 
  2469  000A                     	;# 
  2470  000B                     	;# 
  2471  000C                     	;# 
  2472  000E                     	;# 
  2473  0011                     	;# 
  2474  0012                     	;# 
  2475  0013                     	;# 
  2476  0015                     	;# 
  2477  0016                     	;# 
  2478  0016                     	;# 
  2479  0017                     	;# 
  2480  0018                     	;# 
  2481  0019                     	;# 
  2482  001A                     	;# 
  2483  001B                     	;# 
  2484  001C                     	;# 
  2485  008C                     	;# 
  2486  008E                     	;# 
  2487  0091                     	;# 
  2488  0092                     	;# 
  2489  0093                     	;# 
  2490  0095                     	;# 
  2491  0096                     	;# 
  2492  0097                     	;# 
  2493  0098                     	;# 
  2494  0099                     	;# 
  2495  009A                     	;# 
  2496  009B                     	;# 
  2497  009B                     	;# 
  2498  009C                     	;# 
  2499  009D                     	;# 
  2500  009E                     	;# 
  2501  009F                     	;# 
  2502  010C                     	;# 
  2503  010E                     	;# 
  2504  0111                     	;# 
  2505  0112                     	;# 
  2506  0113                     	;# 
  2507  0114                     	;# 
  2508  0115                     	;# 
  2509  0116                     	;# 
  2510  0117                     	;# 
  2511  0118                     	;# 
  2512  0119                     	;# 
  2513  018C                     	;# 
  2514  018E                     	;# 
  2515  0191                     	;# 
  2516  0191                     	;# 
  2517  0192                     	;# 
  2518  0193                     	;# 
  2519  0193                     	;# 
  2520  0194                     	;# 
  2521  0195                     	;# 
  2522  0196                     	;# 
  2523  0197                     	;# 
  2524  0199                     	;# 
  2525  019A                     	;# 
  2526  019B                     	;# 
  2527  019B                     	;# 
  2528  019C                     	;# 
  2529  019D                     	;# 
  2530  019E                     	;# 
  2531  019F                     	;# 
  2532  020C                     	;# 
  2533  020E                     	;# 
  2534  028C                     	;# 
  2535  028E                     	;# 
  2536  030C                     	;# 
  2537  030E                     	;# 
  2538  038C                     	;# 
  2539  038E                     	;# 
  2540  0391                     	;# 
  2541  0392                     	;# 
  2542  0393                     	;# 
  2543  0397                     	;# 
  2544  0398                     	;# 
  2545  0399                     	;# 
  2546  0691                     	;# 
  2547  0692                     	;# 
  2548  0693                     	;# 
  2549  0694                     	;# 
  2550  0695                     	;# 
  2551  0D8E                     	;# 
  2552  0D8F                     	;# 
  2553  0D90                     	;# 
  2554  0D91                     	;# 
  2555  0D91                     	;# 
  2556  0D92                     	;# 
  2557  0D93                     	;# 
  2558  0D93                     	;# 
  2559  0D94                     	;# 
  2560  0D95                     	;# 
  2561  0D95                     	;# 
  2562  0D96                     	;# 
  2563  0D97                     	;# 
  2564  0D97                     	;# 
  2565  0D98                     	;# 
  2566  0D99                     	;# 
  2567  0D99                     	;# 
  2568  0D9A                     	;# 
  2569  0D9B                     	;# 
  2570  0D9C                     	;# 
  2571  0D9C                     	;# 
  2572  0D9D                     	;# 
  2573  0D9D                     	;# 
  2574  0D9E                     	;# 
  2575  0D9F                     	;# 
  2576  0DA0                     	;# 
  2577  0DA1                     	;# 
  2578  0DA1                     	;# 
  2579  0DA2                     	;# 
  2580  0DA3                     	;# 
  2581  0DA3                     	;# 
  2582  0DA4                     	;# 
  2583  0DA5                     	;# 
  2584  0DA5                     	;# 
  2585  0DA6                     	;# 
  2586  0DA7                     	;# 
  2587  0DA7                     	;# 
  2588  0DA8                     	;# 
  2589  0DA9                     	;# 
  2590  0DA9                     	;# 
  2591  0DAA                     	;# 
  2592  0DAB                     	;# 
  2593  0DAC                     	;# 
  2594  0DAC                     	;# 
  2595  0DAD                     	;# 
  2596  0DAD                     	;# 
  2597  0DAE                     	;# 
  2598  0DAF                     	;# 
  2599  0DB0                     	;# 
  2600  0DB1                     	;# 
  2601  0DB1                     	;# 
  2602  0DB2                     	;# 
  2603  0DB3                     	;# 
  2604  0DB3                     	;# 
  2605  0DB4                     	;# 
  2606  0DB5                     	;# 
  2607  0DB5                     	;# 
  2608  0DB6                     	;# 
  2609  0DB7                     	;# 
  2610  0DB7                     	;# 
  2611  0DB8                     	;# 
  2612  0DB9                     	;# 
  2613  0DB9                     	;# 
  2614  0DBA                     	;# 
  2615  0DBB                     	;# 
  2616  0DBC                     	;# 
  2617  0DBC                     	;# 
  2618  0DBD                     	;# 
  2619  0DBD                     	;# 
  2620  0DBE                     	;# 
  2621  0DBF                     	;# 
  2622  0DC0                     	;# 
  2623  0DC1                     	;# 
  2624  0DC1                     	;# 
  2625  0DC2                     	;# 
  2626  0DC3                     	;# 
  2627  0DC3                     	;# 
  2628  0DC4                     	;# 
  2629  0DC5                     	;# 
  2630  0DC5                     	;# 
  2631  0DC6                     	;# 
  2632  0DC7                     	;# 
  2633  0DC7                     	;# 
  2634  0DC8                     	;# 
  2635  0DC9                     	;# 
  2636  0DC9                     	;# 
  2637  0DCA                     	;# 
  2638  0DCB                     	;# 
  2639  0DCC                     	;# 
  2640  0DCC                     	;# 
  2641  0DCD                     	;# 
  2642  0DCD                     	;# 
  2643  0DCE                     	;# 
  2644  0DCF                     	;# 
  2645  0DD0                     	;# 
  2646  0E0F                     	;# 
  2647  0E10                     	;# 
  2648  0E11                     	;# 
  2649  0E12                     	;# 
  2650  0E13                     	;# 
  2651  0E14                     	;# 
  2652  0E15                     	;# 
  2653  0E16                     	;# 
  2654  0E17                     	;# 
  2655  0E90                     	;# 
  2656  0E91                     	;# 
  2657  0E92                     	;# 
  2658  0E94                     	;# 
  2659  0E95                     	;# 
  2660  0EA0                     	;# 
  2661  0EA1                     	;# 
  2662  0EA2                     	;# 
  2663  0EA3                     	;# 
  2664  0EA4                     	;# 
  2665  0EA5                     	;# 
  2666  0FE4                     	;# 
  2667  0FE5                     	;# 
  2668  0FE6                     	;# 
  2669  0FE7                     	;# 
  2670  0FE8                     	;# 
  2671  0FE8                     	;# 
  2672  0FE9                     	;# 
  2673  0FEA                     	;# 
  2674  0FEA                     	;# 
  2675  0FEB                     	;# 
  2676  0FED                     	;# 
  2677  0FEE                     	;# 
  2678  0FEE                     	;# 
  2679  0FEF                     	;# 
  2680  0FFF                     	;# 
  2681  0000                     	;# 
  2682  0001                     	;# 
  2683  0002                     	;# 
  2684  0003                     	;# 
  2685  0004                     	;# 
  2686  0005                     	;# 
  2687  0006                     	;# 
  2688  0007                     	;# 
  2689  0008                     	;# 
  2690  0009                     	;# 
  2691  000A                     	;# 
  2692  000B                     	;# 
  2693  000C                     	;# 
  2694  000E                     	;# 
  2695  0011                     	;# 
  2696  0012                     	;# 
  2697  0013                     	;# 
  2698  0015                     	;# 
  2699  0016                     	;# 
  2700  0016                     	;# 
  2701  0017                     	;# 
  2702  0018                     	;# 
  2703  0019                     	;# 
  2704  001A                     	;# 
  2705  001B                     	;# 
  2706  001C                     	;# 
  2707  008C                     	;# 
  2708  008E                     	;# 
  2709  0091                     	;# 
  2710  0092                     	;# 
  2711  0093                     	;# 
  2712  0095                     	;# 
  2713  0096                     	;# 
  2714  0097                     	;# 
  2715  0098                     	;# 
  2716  0099                     	;# 
  2717  009A                     	;# 
  2718  009B                     	;# 
  2719  009B                     	;# 
  2720  009C                     	;# 
  2721  009D                     	;# 
  2722  009E                     	;# 
  2723  009F                     	;# 
  2724  010C                     	;# 
  2725  010E                     	;# 
  2726  0111                     	;# 
  2727  0112                     	;# 
  2728  0113                     	;# 
  2729  0114                     	;# 
  2730  0115                     	;# 
  2731  0116                     	;# 
  2732  0117                     	;# 
  2733  0118                     	;# 
  2734  0119                     	;# 
  2735  018C                     	;# 
  2736  018E                     	;# 
  2737  0191                     	;# 
  2738  0191                     	;# 
  2739  0192                     	;# 
  2740  0193                     	;# 
  2741  0193                     	;# 
  2742  0194                     	;# 
  2743  0195                     	;# 
  2744  0196                     	;# 
  2745  0197                     	;# 
  2746  0199                     	;# 
  2747  019A                     	;# 
  2748  019B                     	;# 
  2749  019B                     	;# 
  2750  019C                     	;# 
  2751  019D                     	;# 
  2752  019E                     	;# 
  2753  019F                     	;# 
  2754  020C                     	;# 
  2755  020E                     	;# 
  2756  028C                     	;# 
  2757  028E                     	;# 
  2758  030C                     	;# 
  2759  030E                     	;# 
  2760  038C                     	;# 
  2761  038E                     	;# 
  2762  0391                     	;# 
  2763  0392                     	;# 
  2764  0393                     	;# 
  2765  0397                     	;# 
  2766  0398                     	;# 
  2767  0399                     	;# 
  2768  0691                     	;# 
  2769  0692                     	;# 
  2770  0693                     	;# 
  2771  0694                     	;# 
  2772  0695                     	;# 
  2773  0D8E                     	;# 
  2774  0D8F                     	;# 
  2775  0D90                     	;# 
  2776  0D91                     	;# 
  2777  0D91                     	;# 
  2778  0D92                     	;# 
  2779  0D93                     	;# 
  2780  0D93                     	;# 
  2781  0D94                     	;# 
  2782  0D95                     	;# 
  2783  0D95                     	;# 
  2784  0D96                     	;# 
  2785  0D97                     	;# 
  2786  0D97                     	;# 
  2787  0D98                     	;# 
  2788  0D99                     	;# 
  2789  0D99                     	;# 
  2790  0D9A                     	;# 
  2791  0D9B                     	;# 
  2792  0D9C                     	;# 
  2793  0D9C                     	;# 
  2794  0D9D                     	;# 
  2795  0D9D                     	;# 
  2796  0D9E                     	;# 
  2797  0D9F                     	;# 
  2798  0DA0                     	;# 
  2799  0DA1                     	;# 
  2800  0DA1                     	;# 
  2801  0DA2                     	;# 
  2802  0DA3                     	;# 
  2803  0DA3                     	;# 
  2804  0DA4                     	;# 
  2805  0DA5                     	;# 
  2806  0DA5                     	;# 
  2807  0DA6                     	;# 
  2808  0DA7                     	;# 
  2809  0DA7                     	;# 
  2810  0DA8                     	;# 
  2811  0DA9                     	;# 
  2812  0DA9                     	;# 
  2813  0DAA                     	;# 
  2814  0DAB                     	;# 
  2815  0DAC                     	;# 
  2816  0DAC                     	;# 
  2817  0DAD                     	;# 
  2818  0DAD                     	;# 
  2819  0DAE                     	;# 
  2820  0DAF                     	;# 
  2821  0DB0                     	;# 
  2822  0DB1                     	;# 
  2823  0DB1                     	;# 
  2824  0DB2                     	;# 
  2825  0DB3                     	;# 
  2826  0DB3                     	;# 
  2827  0DB4                     	;# 
  2828  0DB5                     	;# 
  2829  0DB5                     	;# 
  2830  0DB6                     	;# 
  2831  0DB7                     	;# 
  2832  0DB7                     	;# 
  2833  0DB8                     	;# 
  2834  0DB9                     	;# 
  2835  0DB9                     	;# 
  2836  0DBA                     	;# 
  2837  0DBB                     	;# 
  2838  0DBC                     	;# 
  2839  0DBC                     	;# 
  2840  0DBD                     	;# 
  2841  0DBD                     	;# 
  2842  0DBE                     	;# 
  2843  0DBF                     	;# 
  2844  0DC0                     	;# 
  2845  0DC1                     	;# 
  2846  0DC1                     	;# 
  2847  0DC2                     	;# 
  2848  0DC3                     	;# 
  2849  0DC3                     	;# 
  2850  0DC4                     	;# 
  2851  0DC5                     	;# 
  2852  0DC5                     	;# 
  2853  0DC6                     	;# 
  2854  0DC7                     	;# 
  2855  0DC7                     	;# 
  2856  0DC8                     	;# 
  2857  0DC9                     	;# 
  2858  0DC9                     	;# 
  2859  0DCA                     	;# 
  2860  0DCB                     	;# 
  2861  0DCC                     	;# 
  2862  0DCC                     	;# 
  2863  0DCD                     	;# 
  2864  0DCD                     	;# 
  2865  0DCE                     	;# 
  2866  0DCF                     	;# 
  2867  0DD0                     	;# 
  2868  0E0F                     	;# 
  2869  0E10                     	;# 
  2870  0E11                     	;# 
  2871  0E12                     	;# 
  2872  0E13                     	;# 
  2873  0E14                     	;# 
  2874  0E15                     	;# 
  2875  0E16                     	;# 
  2876  0E17                     	;# 
  2877  0E90                     	;# 
  2878  0E91                     	;# 
  2879  0E92                     	;# 
  2880  0E94                     	;# 
  2881  0E95                     	;# 
  2882  0EA0                     	;# 
  2883  0EA1                     	;# 
  2884  0EA2                     	;# 
  2885  0EA3                     	;# 
  2886  0EA4                     	;# 
  2887  0EA5                     	;# 
  2888  0FE4                     	;# 
  2889  0FE5                     	;# 
  2890  0FE6                     	;# 
  2891  0FE7                     	;# 
  2892  0FE8                     	;# 
  2893  0FE8                     	;# 
  2894  0FE9                     	;# 
  2895  0FEA                     	;# 
  2896  0FEA                     	;# 
  2897  0FEB                     	;# 
  2898  0FED                     	;# 
  2899  0FEE                     	;# 
  2900  0FEE                     	;# 
  2901  0FEF                     	;# 
  2902  0FFF                     	;# 
  2903  0000                     	;# 
  2904  0001                     	;# 
  2905  0002                     	;# 
  2906  0003                     	;# 
  2907  0004                     	;# 
  2908  0005                     	;# 
  2909  0006                     	;# 
  2910  0007                     	;# 
  2911  0008                     	;# 
  2912  0009                     	;# 
  2913  000A                     	;# 
  2914  000B                     	;# 
  2915  000C                     	;# 
  2916  000E                     	;# 
  2917  0011                     	;# 
  2918  0012                     	;# 
  2919  0013                     	;# 
  2920  0015                     	;# 
  2921  0016                     	;# 
  2922  0016                     	;# 
  2923  0017                     	;# 
  2924  0018                     	;# 
  2925  0019                     	;# 
  2926  001A                     	;# 
  2927  001B                     	;# 
  2928  001C                     	;# 
  2929  008C                     	;# 
  2930  008E                     	;# 
  2931  0091                     	;# 
  2932  0092                     	;# 
  2933  0093                     	;# 
  2934  0095                     	;# 
  2935  0096                     	;# 
  2936  0097                     	;# 
  2937  0098                     	;# 
  2938  0099                     	;# 
  2939  009A                     	;# 
  2940  009B                     	;# 
  2941  009B                     	;# 
  2942  009C                     	;# 
  2943  009D                     	;# 
  2944  009E                     	;# 
  2945  009F                     	;# 
  2946  010C                     	;# 
  2947  010E                     	;# 
  2948  0111                     	;# 
  2949  0112                     	;# 
  2950  0113                     	;# 
  2951  0114                     	;# 
  2952  0115                     	;# 
  2953  0116                     	;# 
  2954  0117                     	;# 
  2955  0118                     	;# 
  2956  0119                     	;# 
  2957  018C                     	;# 
  2958  018E                     	;# 
  2959  0191                     	;# 
  2960  0191                     	;# 
  2961  0192                     	;# 
  2962  0193                     	;# 
  2963  0193                     	;# 
  2964  0194                     	;# 
  2965  0195                     	;# 
  2966  0196                     	;# 
  2967  0197                     	;# 
  2968  0199                     	;# 
  2969  019A                     	;# 
  2970  019B                     	;# 
  2971  019B                     	;# 
  2972  019C                     	;# 
  2973  019D                     	;# 
  2974  019E                     	;# 
  2975  019F                     	;# 
  2976  020C                     	;# 
  2977  020E                     	;# 
  2978  028C                     	;# 
  2979  028E                     	;# 
  2980  030C                     	;# 
  2981  030E                     	;# 
  2982  038C                     	;# 
  2983  038E                     	;# 
  2984  0391                     	;# 
  2985  0392                     	;# 
  2986  0393                     	;# 
  2987  0397                     	;# 
  2988  0398                     	;# 
  2989  0399                     	;# 
  2990  0691                     	;# 
  2991  0692                     	;# 
  2992  0693                     	;# 
  2993  0694                     	;# 
  2994  0695                     	;# 
  2995  0D8E                     	;# 
  2996  0D8F                     	;# 
  2997  0D90                     	;# 
  2998  0D91                     	;# 
  2999  0D91                     	;# 
  3000  0D92                     	;# 
  3001  0D93                     	;# 
  3002  0D93                     	;# 
  3003  0D94                     	;# 
  3004  0D95                     	;# 
  3005  0D95                     	;# 
  3006  0D96                     	;# 
  3007  0D97                     	;# 
  3008  0D97                     	;# 
  3009  0D98                     	;# 
  3010  0D99                     	;# 
  3011  0D99                     	;# 
  3012  0D9A                     	;# 
  3013  0D9B                     	;# 
  3014  0D9C                     	;# 
  3015  0D9C                     	;# 
  3016  0D9D                     	;# 
  3017  0D9D                     	;# 
  3018  0D9E                     	;# 
  3019  0D9F                     	;# 
  3020  0DA0                     	;# 
  3021  0DA1                     	;# 
  3022  0DA1                     	;# 
  3023  0DA2                     	;# 
  3024  0DA3                     	;# 
  3025  0DA3                     	;# 
  3026  0DA4                     	;# 
  3027  0DA5                     	;# 
  3028  0DA5                     	;# 
  3029  0DA6                     	;# 
  3030  0DA7                     	;# 
  3031  0DA7                     	;# 
  3032  0DA8                     	;# 
  3033  0DA9                     	;# 
  3034  0DA9                     	;# 
  3035  0DAA                     	;# 
  3036  0DAB                     	;# 
  3037  0DAC                     	;# 
  3038  0DAC                     	;# 
  3039  0DAD                     	;# 
  3040  0DAD                     	;# 
  3041  0DAE                     	;# 
  3042  0DAF                     	;# 
  3043  0DB0                     	;# 
  3044  0DB1                     	;# 
  3045  0DB1                     	;# 
  3046  0DB2                     	;# 
  3047  0DB3                     	;# 
  3048  0DB3                     	;# 
  3049  0DB4                     	;# 
  3050  0DB5                     	;# 
  3051  0DB5                     	;# 
  3052  0DB6                     	;# 
  3053  0DB7                     	;# 
  3054  0DB7                     	;# 
  3055  0DB8                     	;# 
  3056  0DB9                     	;# 
  3057  0DB9                     	;# 
  3058  0DBA                     	;# 
  3059  0DBB                     	;# 
  3060  0DBC                     	;# 
  3061  0DBC                     	;# 
  3062  0DBD                     	;# 
  3063  0DBD                     	;# 
  3064  0DBE                     	;# 
  3065  0DBF                     	;# 
  3066  0DC0                     	;# 
  3067  0DC1                     	;# 
  3068  0DC1                     	;# 
  3069  0DC2                     	;# 
  3070  0DC3                     	;# 
  3071  0DC3                     	;# 
  3072  0DC4                     	;# 
  3073  0DC5                     	;# 
  3074  0DC5                     	;# 
  3075  0DC6                     	;# 
  3076  0DC7                     	;# 
  3077  0DC7                     	;# 
  3078  0DC8                     	;# 
  3079  0DC9                     	;# 
  3080  0DC9                     	;# 
  3081  0DCA                     	;# 
  3082  0DCB                     	;# 
  3083  0DCC                     	;# 
  3084  0DCC                     	;# 
  3085  0DCD                     	;# 
  3086  0DCD                     	;# 
  3087  0DCE                     	;# 
  3088  0DCF                     	;# 
  3089  0DD0                     	;# 
  3090  0E0F                     	;# 
  3091  0E10                     	;# 
  3092  0E11                     	;# 
  3093  0E12                     	;# 
  3094  0E13                     	;# 
  3095  0E14                     	;# 
  3096  0E15                     	;# 
  3097  0E16                     	;# 
  3098  0E17                     	;# 
  3099  0E90                     	;# 
  3100  0E91                     	;# 
  3101  0E92                     	;# 
  3102  0E94                     	;# 
  3103  0E95                     	;# 
  3104  0EA0                     	;# 
  3105  0EA1                     	;# 
  3106  0EA2                     	;# 
  3107  0EA3                     	;# 
  3108  0EA4                     	;# 
  3109  0EA5                     	;# 
  3110  0FE4                     	;# 
  3111  0FE5                     	;# 
  3112  0FE6                     	;# 
  3113  0FE7                     	;# 
  3114  0FE8                     	;# 
  3115  0FE8                     	;# 
  3116  0FE9                     	;# 
  3117  0FEA                     	;# 
  3118  0FEA                     	;# 
  3119  0FEB                     	;# 
  3120  0FED                     	;# 
  3121  0FEE                     	;# 
  3122  0FEE                     	;# 
  3123  0FEF                     	;# 
  3124  0FFF                     	;# 
  3125  0000                     	;# 
  3126  0001                     	;# 
  3127  0002                     	;# 
  3128  0003                     	;# 
  3129  0004                     	;# 
  3130  0005                     	;# 
  3131  0006                     	;# 
  3132  0007                     	;# 
  3133  0008                     	;# 
  3134  0009                     	;# 
  3135  000A                     	;# 
  3136  000B                     	;# 
  3137  000C                     	;# 
  3138  000E                     	;# 
  3139  0011                     	;# 
  3140  0012                     	;# 
  3141  0013                     	;# 
  3142  0015                     	;# 
  3143  0016                     	;# 
  3144  0016                     	;# 
  3145  0017                     	;# 
  3146  0018                     	;# 
  3147  0019                     	;# 
  3148  001A                     	;# 
  3149  001B                     	;# 
  3150  001C                     	;# 
  3151  008C                     	;# 
  3152  008E                     	;# 
  3153  0091                     	;# 
  3154  0092                     	;# 
  3155  0093                     	;# 
  3156  0095                     	;# 
  3157  0096                     	;# 
  3158  0097                     	;# 
  3159  0098                     	;# 
  3160  0099                     	;# 
  3161  009A                     	;# 
  3162  009B                     	;# 
  3163  009B                     	;# 
  3164  009C                     	;# 
  3165  009D                     	;# 
  3166  009E                     	;# 
  3167  009F                     	;# 
  3168  010C                     	;# 
  3169  010E                     	;# 
  3170  0111                     	;# 
  3171  0112                     	;# 
  3172  0113                     	;# 
  3173  0114                     	;# 
  3174  0115                     	;# 
  3175  0116                     	;# 
  3176  0117                     	;# 
  3177  0118                     	;# 
  3178  0119                     	;# 
  3179  018C                     	;# 
  3180  018E                     	;# 
  3181  0191                     	;# 
  3182  0191                     	;# 
  3183  0192                     	;# 
  3184  0193                     	;# 
  3185  0193                     	;# 
  3186  0194                     	;# 
  3187  0195                     	;# 
  3188  0196                     	;# 
  3189  0197                     	;# 
  3190  0199                     	;# 
  3191  019A                     	;# 
  3192  019B                     	;# 
  3193  019B                     	;# 
  3194  019C                     	;# 
  3195  019D                     	;# 
  3196  019E                     	;# 
  3197  019F                     	;# 
  3198  020C                     	;# 
  3199  020E                     	;# 
  3200  028C                     	;# 
  3201  028E                     	;# 
  3202  030C                     	;# 
  3203  030E                     	;# 
  3204  038C                     	;# 
  3205  038E                     	;# 
  3206  0391                     	;# 
  3207  0392                     	;# 
  3208  0393                     	;# 
  3209  0397                     	;# 
  3210  0398                     	;# 
  3211  0399                     	;# 
  3212  0691                     	;# 
  3213  0692                     	;# 
  3214  0693                     	;# 
  3215  0694                     	;# 
  3216  0695                     	;# 
  3217  0D8E                     	;# 
  3218  0D8F                     	;# 
  3219  0D90                     	;# 
  3220  0D91                     	;# 
  3221  0D91                     	;# 
  3222  0D92                     	;# 
  3223  0D93                     	;# 
  3224  0D93                     	;# 
  3225  0D94                     	;# 
  3226  0D95                     	;# 
  3227  0D95                     	;# 
  3228  0D96                     	;# 
  3229  0D97                     	;# 
  3230  0D97                     	;# 
  3231  0D98                     	;# 
  3232  0D99                     	;# 
  3233  0D99                     	;# 
  3234  0D9A                     	;# 
  3235  0D9B                     	;# 
  3236  0D9C                     	;# 
  3237  0D9C                     	;# 
  3238  0D9D                     	;# 
  3239  0D9D                     	;# 
  3240  0D9E                     	;# 
  3241  0D9F                     	;# 
  3242  0DA0                     	;# 
  3243  0DA1                     	;# 
  3244  0DA1                     	;# 
  3245  0DA2                     	;# 
  3246  0DA3                     	;# 
  3247  0DA3                     	;# 
  3248  0DA4                     	;# 
  3249  0DA5                     	;# 
  3250  0DA5                     	;# 
  3251  0DA6                     	;# 
  3252  0DA7                     	;# 
  3253  0DA7                     	;# 
  3254  0DA8                     	;# 
  3255  0DA9                     	;# 
  3256  0DA9                     	;# 
  3257  0DAA                     	;# 
  3258  0DAB                     	;# 
  3259  0DAC                     	;# 
  3260  0DAC                     	;# 
  3261  0DAD                     	;# 
  3262  0DAD                     	;# 
  3263  0DAE                     	;# 
  3264  0DAF                     	;# 
  3265  0DB0                     	;# 
  3266  0DB1                     	;# 
  3267  0DB1                     	;# 
  3268  0DB2                     	;# 
  3269  0DB3                     	;# 
  3270  0DB3                     	;# 
  3271  0DB4                     	;# 
  3272  0DB5                     	;# 
  3273  0DB5                     	;# 
  3274  0DB6                     	;# 
  3275  0DB7                     	;# 
  3276  0DB7                     	;# 
  3277  0DB8                     	;# 
  3278  0DB9                     	;# 
  3279  0DB9                     	;# 
  3280  0DBA                     	;# 
  3281  0DBB                     	;# 
  3282  0DBC                     	;# 
  3283  0DBC                     	;# 
  3284  0DBD                     	;# 
  3285  0DBD                     	;# 
  3286  0DBE                     	;# 
  3287  0DBF                     	;# 
  3288  0DC0                     	;# 
  3289  0DC1                     	;# 
  3290  0DC1                     	;# 
  3291  0DC2                     	;# 
  3292  0DC3                     	;# 
  3293  0DC3                     	;# 
  3294  0DC4                     	;# 
  3295  0DC5                     	;# 
  3296  0DC5                     	;# 
  3297  0DC6                     	;# 
  3298  0DC7                     	;# 
  3299  0DC7                     	;# 
  3300  0DC8                     	;# 
  3301  0DC9                     	;# 
  3302  0DC9                     	;# 
  3303  0DCA                     	;# 
  3304  0DCB                     	;# 
  3305  0DCC                     	;# 
  3306  0DCC                     	;# 
  3307  0DCD                     	;# 
  3308  0DCD                     	;# 
  3309  0DCE                     	;# 
  3310  0DCF                     	;# 
  3311  0DD0                     	;# 
  3312  0E0F                     	;# 
  3313  0E10                     	;# 
  3314  0E11                     	;# 
  3315  0E12                     	;# 
  3316  0E13                     	;# 
  3317  0E14                     	;# 
  3318  0E15                     	;# 
  3319  0E16                     	;# 
  3320  0E17                     	;# 
  3321  0E90                     	;# 
  3322  0E91                     	;# 
  3323  0E92                     	;# 
  3324  0E94                     	;# 
  3325  0E95                     	;# 
  3326  0EA0                     	;# 
  3327  0EA1                     	;# 
  3328  0EA2                     	;# 
  3329  0EA3                     	;# 
  3330  0EA4                     	;# 
  3331  0EA5                     	;# 
  3332  0FE4                     	;# 
  3333  0FE5                     	;# 
  3334  0FE6                     	;# 
  3335  0FE7                     	;# 
  3336  0FE8                     	;# 
  3337  0FE8                     	;# 
  3338  0FE9                     	;# 
  3339  0FEA                     	;# 
  3340  0FEA                     	;# 
  3341  0FEB                     	;# 
  3342  0FED                     	;# 
  3343  0FEE                     	;# 
  3344  0FEE                     	;# 
  3345  0FEF                     	;# 
  3346  0FFF                     	;# 
  3347                           
  3348 ;; Function _TMR2_DefaultInterruptHandler is unused but had its address taken
  3349  0000                     
  3350                           	psect	idataBANK0
  3351  0170                     __pidataBANK0:	
  3352                           
  3353                           ;initializer for _pidU
  3354  0170  3414               	retlw	20
  3355  0171  3400               	retlw	0
  3356  0172  3400               	retlw	0
  3357  0173  3400               	retlw	0
  3358                           
  3359                           ;initializer for _resRc
  3360  0174  3410               	retlw	16
  3361  0175  3427               	retlw	39
  3362  0176  3400               	retlw	0
  3363  0177  3400               	retlw	0
  3364                           
  3365                           ;initializer for _resRs
  3366  0178  3410               	retlw	16
  3367  0179  3427               	retlw	39
  3368  017A  3400               	retlw	0
  3369  017B  3400               	retlw	0
  3370                           
  3371                           ;initializer for _pwm2DutyForVout
  3372  017C  3410               	retlw	16
  3373  017D  3400               	retlw	0
  3374                           
  3375                           	psect	idataBANK1
  3376  018A                     __pidataBANK1:	
  3377                           
  3378                           ;initializer for _bbmax
  3379  018A  34C0               	retlw	192
  3380  018B  34F2               	retlw	242
  3381  018C  34FC               	retlw	252
  3382  018D  34FF               	retlw	255
  3383                           
  3384                           ;initializer for _bbmin
  3385  018E  3440               	retlw	64
  3386  018F  340D               	retlw	13
  3387  0190  3403               	retlw	3
  3388  0191  3400               	retlw	0
  3389  0FFF                     _isRunInBoot	set	4095
  3390  000B                     _INTCONbits	set	11
  3391  0011                     _PIR1bits	set	17
  3392  001B                     _PR2	set	27
  3393  001C                     _T2CON	set	28
  3394  001C                     _T2CONbits	set	28
  3395  001A                     _TMR2	set	26
  3396  005F                     _GIE	set	95
  3397  009D                     _ADCON0	set	157
  3398  009D                     _ADCON0bits	set	157
  3399  009E                     _ADCON1	set	158
  3400  009F                     _ADCON2	set	159
  3401  009C                     _ADRESH	set	156
  3402  009B                     _ADRESL	set	155
  3403  0095                     _OPTION_REGbits	set	149
  3404  0099                     _OSCCON	set	153
  3405  0098                     _OSCTUNE	set	152
  3406  0091                     _PIE1bits	set	145
  3407  008C                     _TRISA	set	140
  3408  008E                     _TRISC	set	142
  3409  0097                     _WDTCON	set	151
  3410  0117                     _FVRCON	set	279
  3411  0117                     _FVRCONbits	set	279
  3412  010C                     _LATA	set	268
  3413  010E                     _LATC	set	270
  3414  018C                     _ANSELA	set	396
  3415  018E                     _ANSELC	set	398
  3416  019F                     _BAUDCON	set	415
  3417  019D                     _RCSTA	set	413
  3418  019C                     _SPBRGH	set	412
  3419  019B                     _SPBRGL	set	411
  3420  019A                     _TXREG	set	410
  3421  019E                     _TXSTA	set	414
  3422  019E                     _TXSTAbits	set	414
  3423  020C                     _WPUA	set	524
  3424  020E                     _WPUC	set	526
  3425  028C                     _ODCONA	set	652
  3426  028E                     _ODCONC	set	654
  3427  0D9E                     _PWM1CLKCON	set	3486
  3428  0D9B                     _PWM1CON	set	3483
  3429  0D9B                     _PWM1CONbits	set	3483
  3430  0D94                     _PWM1DCH	set	3476
  3431  0D93                     _PWM1DCL	set	3475
  3432  0D9C                     _PWM1INTE	set	3484
  3433  0D9D                     _PWM1INTF	set	3485
  3434  0D9F                     _PWM1LDCON	set	3487
  3435  0DA0                     _PWM1OFCON	set	3488
  3436  0D98                     _PWM1OFH	set	3480
  3437  0D97                     _PWM1OFL	set	3479
  3438  0D92                     _PWM1PHH	set	3474
  3439  0D91                     _PWM1PHL	set	3473
  3440  0D96                     _PWM1PRH	set	3478
  3441  0D95                     _PWM1PRL	set	3477
  3442  0D9A                     _PWM1TMRH	set	3482
  3443  0D99                     _PWM1TMRL	set	3481
  3444  0DAE                     _PWM2CLKCON	set	3502
  3445  0DAB                     _PWM2CON	set	3499
  3446  0DAB                     _PWM2CONbits	set	3499
  3447  0DA4                     _PWM2DCH	set	3492
  3448  0DA3                     _PWM2DCL	set	3491
  3449  0DAC                     _PWM2INTE	set	3500
  3450  0DAD                     _PWM2INTF	set	3501
  3451  0DAF                     _PWM2LDCON	set	3503
  3452  0DB0                     _PWM2OFCON	set	3504
  3453  0DA8                     _PWM2OFH	set	3496
  3454  0DA7                     _PWM2OFL	set	3495
  3455  0DA2                     _PWM2PHH	set	3490
  3456  0DA1                     _PWM2PHL	set	3489
  3457  0DA6                     _PWM2PRH	set	3494
  3458  0DA5                     _PWM2PRL	set	3493
  3459  0DAA                     _PWM2TMRH	set	3498
  3460  0DA9                     _PWM2TMRL	set	3497
  3461  0E0F                     _PPSLOCK	set	3599
  3462  0E0F                     _PPSLOCKbits	set	3599
  3463  0E15                     _RXPPSbits	set	3605
  3464  0E94                     _RA4PPSbits	set	3732
  3465  0E95                     _RA5PPSbits	set	3733
  3466  0EA5                     _RC5PPSbits	set	3749
  3467                           
  3468                           	psect	stringtext
  3469  0133                     __pstringtext:	
  3470  0133                     STR_2:	
  3471  0133  3409               	retlw	9
  3472  0134  3472               	retlw	114	;'r'
  3473  0135  3465               	retlw	101	;'e'
  3474  0136  3473               	retlw	115	;'s'
  3475  0137  3452               	retlw	82	;'R'
  3476  0138  3473               	retlw	115	;'s'
  3477  0139  343D               	retlw	61	;'='
  3478  013A  3400               	retlw	0
  3479  013B                     STR_4:	
  3480  013B  3409               	retlw	9
  3481  013C  3470               	retlw	112	;'p'
  3482  013D  3477               	retlw	119	;'w'
  3483  013E  346D               	retlw	109	;'m'
  3484  013F  3431               	retlw	49	;'1'
  3485  0140  343D               	retlw	61	;'='
  3486  0141  3400               	retlw	0
  3487  0142                     STR_5:	
  3488  0142  3409               	retlw	9
  3489  0143  3470               	retlw	112	;'p'
  3490  0144  3477               	retlw	119	;'w'
  3491  0145  346D               	retlw	109	;'m'
  3492  0146  3432               	retlw	50	;'2'
  3493  0147  343D               	retlw	61	;'='
  3494  0148  3400               	retlw	0
  3495  0149                     STR_1:	
  3496  0149  3472               	retlw	114	;'r'
  3497  014A  3465               	retlw	101	;'e'
  3498  014B  3473               	retlw	115	;'s'
  3499  014C  3452               	retlw	82	;'R'
  3500  014D  3463               	retlw	99	;'c'
  3501  014E  343D               	retlw	61	;'='
  3502  014F  3400               	retlw	0
  3503  0150                     STR_3:	
  3504  0150  3409               	retlw	9
  3505  0151  3469               	retlw	105	;'i'
  3506  0152  3444               	retlw	68	;'D'
  3507  0153  3472               	retlw	114	;'r'
  3508  0154  3476               	retlw	118	;'v'
  3509  0155  343D               	retlw	61	;'='
  3510  0156  3400               	retlw	0
  3511  0157                     STR_6:	
  3512  0157  340D               	retlw	13
  3513  0158  340A               	retlw	10
  3514  0159  3400               	retlw	0
  3515                           
  3516                           ; #config settings
  3517  0000                     
  3518                           	psect	cinit
  3519  0811                     start_initialization:	
  3520  0811                     __initialization:	
  3521  0811  3044               	movlw	low __pbssBANK0
  3522                           
  3523                           ; Clear objects allocated to COMMON
  3524  0812  01FD               	clrf	__pbssCOMMON& (0+127)
  3525                           
  3526                           ; Clear objects allocated to BANK0
  3527  0813  0084               	movwf	4
  3528  0814  3000               	movlw	high __pbssBANK0
  3529  0815  0085               	movwf	5
  3530  0816  301E               	movlw	30
  3531  0817  3181  2192  3188   	fcall	clear_ram0
  3532                           
  3533                           ; Clear objects allocated to BANK1
  3534  081A  30A0               	movlw	low __pbssBANK1
  3535  081B  0084               	movwf	4
  3536  081C  3000               	movlw	high __pbssBANK1
  3537  081D  0085               	movwf	5
  3538  081E  3034               	movlw	52
  3539  081F  3181  2192  3188   	fcall	clear_ram0
  3540                           
  3541                           ; Clear objects allocated to BANK2
  3542  0822  3020               	movlw	low __pbssBANK2
  3543  0823  0084               	movwf	4
  3544  0824  3001               	movlw	high __pbssBANK2
  3545  0825  0085               	movwf	5
  3546  0826  3040               	movlw	64
  3547  0827  3181  2192  3188   	fcall	clear_ram0
  3548                           
  3549                           ; Clear objects allocated to BANK3
  3550  082A  30A0               	movlw	low __pbssBANK3
  3551  082B  0084               	movwf	4
  3552  082C  3001               	movlw	high __pbssBANK3
  3553  082D  0085               	movwf	5
  3554  082E  3040               	movlw	64
  3555  082F  3181  2192  3188   	fcall	clear_ram0
  3556                           
  3557                           ; Initialize objects allocated to BANK0
  3558  0832  3070               	movlw	low __pidataBANK0
  3559  0833  0084               	movwf	4
  3560  0834  3081               	movlw	(high __pidataBANK0)| (0+128)
  3561  0835  0085               	movwf	5
  3562  0836  3062               	movlw	low __pdataBANK0
  3563  0837  0086               	movwf	6
  3564  0838  3000               	movlw	high __pdataBANK0
  3565  0839  0087               	movwf	7
  3566  083A  300E               	movlw	14
  3567  083B  3181  2198  3188   	fcall	init_ram
  3568                           
  3569                           ; Initialize objects allocated to BANK1
  3570  083E  308A               	movlw	low __pidataBANK1
  3571  083F  0084               	movwf	4
  3572  0840  3081               	movlw	(high __pidataBANK1)| (0+128)
  3573  0841  0085               	movwf	5
  3574  0842  30D4               	movlw	low __pdataBANK1
  3575  0843  0086               	movwf	6
  3576  0844  3000               	movlw	high __pdataBANK1
  3577  0845  0087               	movwf	7
  3578  0846  3008               	movlw	8
  3579  0847  3181  2198  3188   	fcall	init_ram
  3580  084A                     end_of_initialization:	
  3581                           ;End of C runtime variable initialization code
  3582                           
  3583  084A                     __end_of__initialization:	
  3584  084A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3585  084B  0020               	movlb	0
  3586  084C  284D               	ljmp	_main	;jump to C main() function
  3587  084D                     __pmaintext:	
  3588 ;;
  3589 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3590 ;;
  3591 ;; *************** function _main *****************
  3592 ;; Defined at:
  3593 ;;		line 57 in file "src/app/main.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;		None
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;		None
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  1    wreg      void 
  3600 ;; Registers used:
  3601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3602 ;; Tracked objects:
  3603 ;;		On entry : B1F/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3607 ;;      Params:         0       0       0       0       0       0       0       0
  3608 ;;      Locals:         0       0       0       0       0       0       0       0
  3609 ;;      Temps:          0       0       0       0       0       0       0       0
  3610 ;;      Totals:         0       0       0       0       0       0       0       0
  3611 ;;Total ram usage:        0 bytes
  3612 ;; Hardware stack levels required when called:    4
  3613 ;; This function calls:
  3614 ;;		_PWM1_Start
  3615 ;;		_SYSTEM_Initialize
  3616 ;;		_adc_sample
  3617 ;;		_cal_voout_pwm_duty
  3618 ;;		_calc_current_rs_avg
  3619 ;;		_calc_temp_rc
  3620 ;;		_calc_temp_rs
  3621 ;;		_m_int_2_str_ex
  3622 ;;		_pid_b_b_process
  3623 ;;		_pid_run_process
  3624 ;;		_set_vout_pwm2_duty
  3625 ;;		_uart_send_str
  3626 ;; This function is called by:
  3627 ;;		Startup code after reset
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           
  3632                           ;psect for function _main
  3633  084D                     _main:	
  3634                           
  3635                           ;main.c: 59: __nop();
  3636                           
  3637                           ;incstack = 0
  3638                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3639  084D  0000               	nop
  3640                           
  3641                           ;main.c: 60: isRunInBoot=0xaa;
  3642  084E  30AA               	movlw	170
  3643  084F  003F               	movlb	31	; select bank31
  3644  0850  00FF               	movwf	127	;volatile
  3645                           
  3646                           ;main.c: 61: SYSTEM_Initialize();
  3647  0851  2214  3188         	fcall	_SYSTEM_Initialize
  3648  0853  178B               	bsf	11,7	;volatile
  3649  0854  170B               	bsf	11,6	;volatile
  3650                           
  3651                           ;main.c: 63: PWM1_Start();
  3652  0855  2211  3188         	fcall	_PWM1_Start
  3653  0857                     l2518:	
  3654                           
  3655                           ;main.c: 66: {
  3656                           ;main.c: 67: if(Event & (1<<2)){
  3657  0857  1D7D               	btfss	_Event,2	;volatile
  3658  0858  28BF               	goto	l2550
  3659                           
  3660                           ;main.c: 68: Event &= ~(1<<2);
  3661  0859  117D               	bcf	_Event,2	;volatile
  3662  085A  3040               	movlw	64
  3663                           
  3664                           ;main.c: 69: rtAdcValueRsLo=adc_sample(channel_AN6,1,64);
  3665  085B  01F2               	clrf	adc_sample@gfvr
  3666  085C  0AF2               	incf	adc_sample@gfvr,f
  3667  085D  00F3               	movwf	adc_sample@num
  3668  085E  3006               	movlw	6
  3669  085F  21D9  3188         	fcall	_adc_sample
  3670  0861  0873               	movf	?_adc_sample+1,w
  3671  0862  0020               	movlb	0	; select bank0
  3672  0863  00D9               	movwf	_rtAdcValueRsLo+1
  3673  0864  0872               	movf	?_adc_sample,w
  3674  0865  00D8               	movwf	_rtAdcValueRsLo
  3675  0866  3003               	movlw	3
  3676                           
  3677                           ;main.c: 70: rtAdcValueRsLo>>=1;
  3678  0867  36D9               	lsrf	_rtAdcValueRsLo+1,f
  3679  0868  0CD8               	rrf	_rtAdcValueRsLo,f
  3680                           
  3681                           ;main.c: 71: rtAdcValueRsHi=adc_sample(channel_AN5,3,64);
  3682  0869  00F2               	movwf	adc_sample@gfvr
  3683  086A  3040               	movlw	64
  3684  086B  00F3               	movwf	adc_sample@num
  3685  086C  3005               	movlw	5
  3686  086D  21D9  3188         	fcall	_adc_sample
  3687  086F  0873               	movf	?_adc_sample+1,w
  3688  0870  0020               	movlb	0	; select bank0
  3689  0871  00D7               	movwf	_rtAdcValueRsHi+1
  3690  0872  0872               	movf	?_adc_sample,w
  3691  0873  00D6               	movwf	_rtAdcValueRsHi
  3692  0874  3003               	movlw	3
  3693                           
  3694                           ;main.c: 72: rtAdcValueRsHi>>=1;
  3695  0875  36D7               	lsrf	_rtAdcValueRsHi+1,f
  3696  0876  0CD6               	rrf	_rtAdcValueRsHi,f
  3697                           
  3698                           ;main.c: 74: rtAdcValueRcLo=adc_sample(channel_AN4,3,16);
  3699  0877  00F2               	movwf	adc_sample@gfvr
  3700  0878  3010               	movlw	16
  3701  0879  00F3               	movwf	adc_sample@num
  3702  087A  3004               	movlw	4
  3703  087B  21D9  3188         	fcall	_adc_sample
  3704  087D  0873               	movf	?_adc_sample+1,w
  3705  087E  0020               	movlb	0	; select bank0
  3706  087F  00D5               	movwf	_rtAdcValueRcLo+1
  3707  0880  0872               	movf	?_adc_sample,w
  3708  0881  00D4               	movwf	_rtAdcValueRcLo
  3709                           
  3710                           ;main.c: 75: rtAdcValueRcHi=adc_sample(channel_AN2,3,16);
  3711  0882  3003               	movlw	3
  3712  0883  00F2               	movwf	adc_sample@gfvr
  3713  0884  3010               	movlw	16
  3714  0885  00F3               	movwf	adc_sample@num
  3715  0886  3002               	movlw	2
  3716  0887  21D9               	fcall	_adc_sample
  3717  0888  0873               	movf	?_adc_sample+1,w
  3718  0889  0020               	movlb	0	; select bank0
  3719  088A  00D3               	movwf	_rtAdcValueRcHi+1
  3720  088B  0872               	movf	?_adc_sample,w
  3721  088C  00D2               	movwf	_rtAdcValueRcHi
  3722                           
  3723                           ;main.c: 78: resRc=calc_temp_rc();
  3724  088D  3180  2028  3188   	fcall	_calc_temp_rc
  3725  0890  0823               	movf	?_calc_temp_rc+3,w
  3726  0891  00E9               	movwf	_resRc+3
  3727  0892  0822               	movf	?_calc_temp_rc+2,w
  3728  0893  00E8               	movwf	_resRc+2
  3729  0894  0821               	movf	?_calc_temp_rc+1,w
  3730  0895  00E7               	movwf	_resRc+1
  3731  0896  0820               	movf	?_calc_temp_rc,w
  3732  0897  00E6               	movwf	_resRc
  3733                           
  3734                           ;main.c: 79: resRs=calc_temp_rs();
  3735  0898  26ED  3188         	fcall	_calc_temp_rs
  3736  089A  0823               	movf	?_calc_temp_rs+3,w
  3737  089B  00ED               	movwf	_resRs+3
  3738  089C  0822               	movf	?_calc_temp_rs+2,w
  3739  089D  00EC               	movwf	_resRs+2
  3740  089E  0821               	movf	?_calc_temp_rs+1,w
  3741  089F  00EB               	movwf	_resRs+1
  3742  08A0  0820               	movf	?_calc_temp_rs,w
  3743  08A1  00EA               	movwf	_resRs
  3744                           
  3745                           ;main.c: 80: rtAdcValueRsLoAvg=calc_current_rs_avg();
  3746  08A2  26E8  3188         	fcall	_calc_current_rs_avg
  3747  08A4  0871               	movf	?_calc_current_rs_avg+1,w
  3748  08A5  00DB               	movwf	_rtAdcValueRsLoAvg+1
  3749  08A6  0870               	movf	?_calc_current_rs_avg,w
  3750  08A7  00DA               	movwf	_rtAdcValueRsLoAvg
  3751                           
  3752                           ;main.c: 81: __nop();
  3753  08A8  0000               	nop
  3754                           
  3755                           ;main.c: 84: if(pidBbSm>=5){
  3756  08A9  3005               	movlw	5
  3757  08AA  0020               	movlb	0	; select bank0
  3758  08AB  025E               	subwf	_pidBbSm,w
  3759  08AC  1C03               	skipc
  3760  08AD  28BD               	goto	l2548
  3761                           
  3762                           ;main.c: 85: pid_run_process();
  3763  08AE  226B  3188         	fcall	_pid_run_process
  3764                           
  3765                           ;main.c: 86: pwm2DutyForVout=cal_voout_pwm_duty();
  3766  08B0  2630  3188         	fcall	_cal_voout_pwm_duty
  3767  08B2  0821               	movf	?_cal_voout_pwm_duty+1,w
  3768  08B3  00EF               	movwf	_pwm2DutyForVout+1
  3769  08B4  0820               	movf	?_cal_voout_pwm_duty,w
  3770  08B5  00EE               	movwf	_pwm2DutyForVout
  3771                           
  3772                           ;main.c: 87: set_vout_pwm2_duty(pwm2DutyForVout);
  3773  08B6  086F               	movf	_pwm2DutyForVout+1,w
  3774  08B7  00F3               	movwf	set_vout_pwm2_duty@duty+1
  3775  08B8  086E               	movf	_pwm2DutyForVout,w
  3776  08B9  00F2               	movwf	set_vout_pwm2_duty@duty
  3777  08BA  2778  3188         	fcall	_set_vout_pwm2_duty
  3778                           
  3779                           ;main.c: 89: }else{
  3780  08BC  28BF               	goto	l2550
  3781  08BD                     l2548:	
  3782                           
  3783                           ;main.c: 90: pid_b_b_process();
  3784  08BD  236A  3188         	fcall	_pid_b_b_process
  3785  08BF                     l2550:	
  3786                           
  3787                           ;main.c: 91: }
  3788                           ;main.c: 93: }
  3789                           ;main.c: 94: if(Event & (1<<3)){
  3790  08BF  1DFD               	btfss	_Event,3	;volatile
  3791  08C0  2929               	goto	l2578
  3792                           
  3793                           ;main.c: 96: Event &= ~(1<<3);
  3794  08C1  11FD               	bcf	_Event,3	;volatile
  3795                           
  3796                           ;main.c: 97: uart_send_str((uint8_t*)"resRc=");
  3797  08C2  3049               	movlw	low (STR_1| (0+32768))
  3798  08C3  00F0               	movwf	uart_send_str@str
  3799  08C4  3081               	movlw	high (STR_1| (0+32768))
  3800  08C5  00F1               	movwf	uart_send_str@str+1
  3801  08C6  212B  3188         	fcall	_uart_send_str
  3802                           
  3803                           ;main.c: 98: m_int_2_str_ex(str,resRc,sizeof(str));
  3804  08C8  0869               	movf	_resRc+3,w
  3805  08C9  00B1               	movwf	m_int_2_str_ex@x+3
  3806  08CA  0868               	movf	_resRc+2,w
  3807  08CB  00B0               	movwf	m_int_2_str_ex@x+2
  3808  08CC  0867               	movf	_resRc+1,w
  3809  08CD  00AF               	movwf	m_int_2_str_ex@x+1
  3810  08CE  0866               	movf	_resRc,w
  3811  08CF  27C3  3188         	fcall	PL14	;call to abstracted procedure
  3812  08D1  215E  3188         	fcall	_m_int_2_str_ex
  3813                           
  3814                           ;main.c: 99: uart_send_str(str);
  3815  08D3  27D6  3188         	fcall	PL20	;call to abstracted procedure
  3816  08D5  212B  3188         	fcall	_uart_send_str
  3817                           
  3818                           ;main.c: 101: uart_send_str((uint8_t*)"\tresRs=");
  3819  08D7  3033               	movlw	low (STR_2| (0+32768))
  3820  08D8  00F0               	movwf	uart_send_str@str
  3821  08D9  3081               	movlw	high (STR_2| (0+32768))
  3822  08DA  00F1               	movwf	uart_send_str@str+1
  3823  08DB  212B  3188         	fcall	_uart_send_str
  3824                           
  3825                           ;main.c: 102: m_int_2_str_ex(str,resRs,sizeof(str));
  3826  08DD  086D               	movf	_resRs+3,w
  3827  08DE  00B1               	movwf	m_int_2_str_ex@x+3
  3828  08DF  086C               	movf	_resRs+2,w
  3829  08E0  00B0               	movwf	m_int_2_str_ex@x+2
  3830  08E1  086B               	movf	_resRs+1,w
  3831  08E2  00AF               	movwf	m_int_2_str_ex@x+1
  3832  08E3  086A               	movf	_resRs,w
  3833  08E4  27C3  3188         	fcall	PL14	;call to abstracted procedure
  3834  08E6  215E  3188         	fcall	_m_int_2_str_ex
  3835                           
  3836                           ;main.c: 103: uart_send_str(str);
  3837  08E8  27D6  3188         	fcall	PL20	;call to abstracted procedure
  3838  08EA  212B  3188         	fcall	_uart_send_str
  3839                           
  3840                           ;main.c: 105: uart_send_str((uint8_t*)"\tiDrv=");
  3841  08EC  3050               	movlw	low (STR_3| (0+32768))
  3842  08ED  00F0               	movwf	uart_send_str@str
  3843  08EE  3081               	movlw	high (STR_3| (0+32768))
  3844  08EF  00F1               	movwf	uart_send_str@str+1
  3845  08F0  212B  3188         	fcall	_uart_send_str
  3846                           
  3847                           ;main.c: 106: m_int_2_str_ex(str,rtAdcValueRsLo,sizeof(str));
  3848  08F2  0858               	movf	_rtAdcValueRsLo,w
  3849  08F3  00AE               	movwf	m_int_2_str_ex@x
  3850  08F4  0859               	movf	_rtAdcValueRsLo+1,w
  3851  08F5  27B3  3188         	fcall	PL10	;call to abstracted procedure
  3852  08F7  215E  3188         	fcall	_m_int_2_str_ex
  3853                           
  3854                           ;main.c: 107: uart_send_str(str);
  3855  08F9  27D6  3188         	fcall	PL20	;call to abstracted procedure
  3856  08FB  212B  3188         	fcall	_uart_send_str
  3857                           
  3858                           ;main.c: 109: uart_send_str((uint8_t*)"\tpwm1=");
  3859  08FD  303B               	movlw	low (STR_4| (0+32768))
  3860  08FE  00F0               	movwf	uart_send_str@str
  3861  08FF  3081               	movlw	high (STR_4| (0+32768))
  3862  0900  00F1               	movwf	uart_send_str@str+1
  3863  0901  212B  3188         	fcall	_uart_send_str
  3864                           
  3865                           ;main.c: 110: m_int_2_str_ex(str,pidU,sizeof(str));
  3866  0903  0865               	movf	_pidU+3,w
  3867  0904  00B1               	movwf	m_int_2_str_ex@x+3
  3868  0905  0864               	movf	_pidU+2,w
  3869  0906  00B0               	movwf	m_int_2_str_ex@x+2
  3870  0907  0863               	movf	_pidU+1,w
  3871  0908  00AF               	movwf	m_int_2_str_ex@x+1
  3872  0909  0862               	movf	_pidU,w
  3873  090A  27C3  3188         	fcall	PL14	;call to abstracted procedure
  3874  090C  215E  3188         	fcall	_m_int_2_str_ex
  3875                           
  3876                           ;main.c: 111: uart_send_str(str);
  3877  090E  27D6  3188         	fcall	PL20	;call to abstracted procedure
  3878  0910  212B  3188         	fcall	_uart_send_str
  3879                           
  3880                           ;main.c: 113: uart_send_str((uint8_t*)"\tpwm2=");
  3881  0912  3042               	movlw	low (STR_5| (0+32768))
  3882  0913  00F0               	movwf	uart_send_str@str
  3883  0914  3081               	movlw	high (STR_5| (0+32768))
  3884  0915  00F1               	movwf	uart_send_str@str+1
  3885  0916  212B  3188         	fcall	_uart_send_str
  3886                           
  3887                           ;main.c: 114: m_int_2_str_ex(str,pwm2DutyForVout,sizeof(str));
  3888  0918  086E               	movf	_pwm2DutyForVout,w
  3889  0919  00AE               	movwf	m_int_2_str_ex@x
  3890  091A  086F               	movf	_pwm2DutyForVout+1,w
  3891  091B  27B3  3188         	fcall	PL10	;call to abstracted procedure
  3892  091D  215E  3188         	fcall	_m_int_2_str_ex
  3893                           
  3894                           ;main.c: 115: uart_send_str(str);
  3895  091F  27D6  3188         	fcall	PL20	;call to abstracted procedure
  3896  0921  212B  3188         	fcall	_uart_send_str
  3897                           
  3898                           ;main.c: 119: uart_send_str((uint8_t*)"\r\n");
  3899  0923  3057               	movlw	low (STR_6| (0+32768))
  3900  0924  00F0               	movwf	uart_send_str@str
  3901  0925  3081               	movlw	high (STR_6| (0+32768))
  3902  0926  00F1               	movwf	uart_send_str@str+1
  3903  0927  212B  3188         	fcall	_uart_send_str
  3904  0929                     l2578:	
  3905                           
  3906                           ;main.c: 121: }
  3907                           ;main.c: 122: __nop();
  3908  0929  0000               	nop
  3909  092A  2857               	goto	l2518
  3910  092B                     __end_of_main:	
  3911  092B                     __ptext1:	
  3912 ;; *************** function _uart_send_str *****************
  3913 ;; Defined at:
  3914 ;;		line 19 in file "src/api/my_uart.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  str             2    0[COMMON] PTR unsigned char 
  3917 ;;		 -> STR_6(3), STR_5(7), STR_4(7), STR_3(7), 
  3918 ;;		 -> STR_2(8), str(16), STR_1(7), 
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;		None
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  1    wreg      void 
  3923 ;; Registers used:
  3924 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/1B
  3927 ;;		On exit  : 1F/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3930 ;;      Params:         2       0       0       0       0       0       0       0
  3931 ;;      Locals:         0       0       0       0       0       0       0       0
  3932 ;;      Temps:          1       0       0       0       0       0       0       0
  3933 ;;      Totals:         3       0       0       0       0       0       0       0
  3934 ;;Total ram usage:        3 bytes
  3935 ;; Hardware stack levels used:    1
  3936 ;; Hardware stack levels required when called:    1
  3937 ;; This function calls:
  3938 ;;		Nothing
  3939 ;; This function is called by:
  3940 ;;		_main
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           
  3945                           ;psect for function _uart_send_str
  3946  092B                     _uart_send_str:	
  3947                           
  3948                           ;my_uart.c: 22: if(!TXSTAbits.TXEN)TXSTAbits.TXEN=1;
  3949                           
  3950                           ;incstack = 0
  3951                           ; Regs used in _uart_send_str: [wreg-fsr0h+status,2+status,0+pclath]
  3952  092B  0023               	movlb	3	; select bank3
  3953  092C  1E9E               	btfss	30,5	;volatile
  3954  092D  169E               	bsf	30,5	;volatile
  3955  092E                     l459:	
  3956  092E  0020               	movlb	0	; select bank0
  3957  092F  1A11               	btfsc	17,4	;volatile
  3958  0930  2953               	goto	l2248
  3959  0931  292E               	goto	l459
  3960  0932                     l464:	
  3961  0932  0020               	movlb	0	; select bank0
  3962  0933  1E11               	btfss	17,4	;volatile
  3963  0934  2932               	goto	l464
  3964                           
  3965                           ;my_uart.c: 26: TXREG = *str;
  3966  0935  0870               	movf	uart_send_str@str,w
  3967  0936  0084               	movwf	4
  3968  0937  0871               	movf	uart_send_str@str+1,w
  3969  0938  0085               	movwf	5
  3970  0939  0800               	movf	0,w	;code access
  3971  093A  0023               	movlb	3	; select bank3
  3972  093B  009A               	movwf	26	;volatile
  3973                           
  3974                           ;my_uart.c: 27: str++;
  3975  093C  0AF0               	incf	uart_send_str@str,f
  3976  093D  1903               	skipnz
  3977  093E  0AF1               	incf	uart_send_str@str+1,f
  3978                           
  3979                           ;my_uart.c: 28: {__nop();__nop();__nop();__nop();}while(0);;
  3980  093F  0000               	nop
  3981  0940  0000               	nop
  3982  0941  0000               	nop
  3983  0942  0000               	nop
  3984                           
  3985                           ;my_uart.c: 29: {__nop();__nop();__nop();__nop();}while(0);;
  3986  0943  0000               	nop
  3987  0944  0000               	nop
  3988  0945  0000               	nop
  3989  0946  0000               	nop
  3990                           
  3991                           ;my_uart.c: 30: {__nop();__nop();__nop();__nop();}while(0);;
  3992  0947  0000               	nop
  3993  0948  0000               	nop
  3994  0949  0000               	nop
  3995  094A  0000               	nop
  3996                           
  3997                           ;my_uart.c: 31: {__nop();__nop();__nop();__nop();}while(0);;
  3998  094B  0000               	nop
  3999  094C  0000               	nop
  4000  094D  0000               	nop
  4001  094E  0000               	nop
  4002                           
  4003                           ;my_uart.c: 32: {__nop();__nop();__nop();__nop();}while(0);;
  4004  094F  0000               	nop
  4005  0950  0000               	nop
  4006  0951  0000               	nop
  4007  0952  0000               	nop
  4008  0953                     l2248:	
  4009  0953  0870               	movf	uart_send_str@str,w
  4010  0954  0084               	movwf	4
  4011  0955  0871               	movf	uart_send_str@str+1,w
  4012  0956  0085               	movwf	5
  4013  0957  0012               	moviw fsr0++
  4014  0958  1D03               	btfss	3,2
  4015  0959  2932               	goto	l464
  4016  095A                     l483:	
  4017  095A  0020               	movlb	0	; select bank0
  4018  095B  1A11               	btfsc	17,4	;volatile
  4019  095C  0008               	return
  4020  095D  295A               	goto	l483
  4021  095E                     __end_of_uart_send_str:	
  4022  095E                     __ptext8:	
  4023 ;; *************** function _m_int_2_str_ex *****************
  4024 ;; Defined at:
  4025 ;;		line 140 in file "src/depend/m_string.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;  buf             1    wreg     PTR unsigned char 
  4028 ;;		 -> str(16), 
  4029 ;;  x               4   14[BANK0 ] long 
  4030 ;;  ssize           2   18[BANK0 ] unsigned int 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;  buf             1   30[BANK0 ] PTR unsigned char 
  4033 ;;		 -> str(16), 
  4034 ;;  t               4   24[BANK0 ] long 
  4035 ;;  i               1   29[BANK0 ] unsigned char 
  4036 ;;  sig             1   28[BANK0 ] unsigned char 
  4037 ;;  len             1    0        unsigned char 
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  1    wreg      void 
  4040 ;; Registers used:
  4041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4042 ;; Tracked objects:
  4043 ;;		On entry : 1F/0
  4044 ;;		On exit  : 1F/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4047 ;;      Params:         0       6       0       0       0       0       0       0
  4048 ;;      Locals:         0       7       0       0       0       0       0       0
  4049 ;;      Temps:          0       4       0       0       0       0       0       0
  4050 ;;      Totals:         0      17       0       0       0       0       0       0
  4051 ;;Total ram usage:       17 bytes
  4052 ;; Hardware stack levels used:    1
  4053 ;; Hardware stack levels required when called:    2
  4054 ;; This function calls:
  4055 ;;		___aldiv
  4056 ;;		___almod
  4057 ;;		_m_mem_cpy
  4058 ;;		_m_mem_set
  4059 ;; This function is called by:
  4060 ;;		_main
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           
  4065                           ;psect for function _m_int_2_str_ex
  4066  095E                     _m_int_2_str_ex:	
  4067                           
  4068                           ;incstack = 0
  4069                           ; Regs used in _m_int_2_str_ex: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4070                           ;m_int_2_str_ex@buf stored from wreg
  4071  095E  00BE               	movwf	m_int_2_str_ex@buf
  4072                           
  4073                           ;m_string.c: 142: int32_t t;
  4074                           ;m_string.c: 143: uint8_t len,i;
  4075                           ;m_string.c: 144: uint8_t sig=0;
  4076  095F  01BC               	clrf	m_int_2_str_ex@sig
  4077                           
  4078                           ;m_string.c: 145: if(x<0){
  4079  0960  1FB1               	btfss	m_int_2_str_ex@x+3,7
  4080  0961  2978               	goto	l2452
  4081                           
  4082                           ;m_string.c: 146: sig=1;
  4083  0962  01BC               	clrf	m_int_2_str_ex@sig
  4084  0963  0ABC               	incf	m_int_2_str_ex@sig,f
  4085                           
  4086                           ;m_string.c: 147: x=0-x;
  4087  0964  01B4               	clrf	??_m_int_2_str_ex
  4088  0965  01B5               	clrf	??_m_int_2_str_ex+1
  4089  0966  01B6               	clrf	??_m_int_2_str_ex+2
  4090  0967  01B7               	clrf	??_m_int_2_str_ex+3
  4091  0968  082E               	movf	m_int_2_str_ex@x,w
  4092  0969  02B4               	subwf	??_m_int_2_str_ex,f
  4093  096A  082F               	movf	m_int_2_str_ex@x+1,w
  4094  096B  3BB5               	subwfb	??_m_int_2_str_ex+1,f
  4095  096C  0830               	movf	m_int_2_str_ex@x+2,w
  4096  096D  3BB6               	subwfb	??_m_int_2_str_ex+2,f
  4097  096E  0831               	movf	m_int_2_str_ex@x+3,w
  4098  096F  3BB7               	subwfb	??_m_int_2_str_ex+3,f
  4099  0970  0837               	movf	??_m_int_2_str_ex+3,w
  4100  0971  00B1               	movwf	m_int_2_str_ex@x+3
  4101  0972  0836               	movf	??_m_int_2_str_ex+2,w
  4102  0973  00B0               	movwf	m_int_2_str_ex@x+2
  4103  0974  0835               	movf	??_m_int_2_str_ex+1,w
  4104  0975  00AF               	movwf	m_int_2_str_ex@x+1
  4105  0976  0834               	movf	??_m_int_2_str_ex,w
  4106  0977  00AE               	movwf	m_int_2_str_ex@x
  4107  0978                     l2452:	
  4108                           
  4109                           ;m_string.c: 148: }
  4110                           ;m_string.c: 149: m_mem_set(buf,0,ssize);
  4111  0978  01F0               	clrf	m_mem_set@x
  4112  0979  0833               	movf	m_int_2_str_ex@ssize+1,w
  4113  097A  00F2               	movwf	m_mem_set@len+1
  4114  097B  0832               	movf	m_int_2_str_ex@ssize,w
  4115  097C  00F1               	movwf	m_mem_set@len
  4116  097D  083E               	movf	m_int_2_str_ex@buf,w
  4117  097E  2760  3188         	fcall	_m_mem_set
  4118                           
  4119                           ;m_string.c: 150: for(i=ssize-2;i>=1;i--){
  4120  0980  0832               	movf	m_int_2_str_ex@ssize,w
  4121  0981  3EFE               	addlw	254
  4122  0982  00BD               	movwf	m_int_2_str_ex@i
  4123  0983                     l2456:	
  4124  0983  083D               	movf	m_int_2_str_ex@i,w
  4125  0984  1903               	btfsc	3,2
  4126  0985  29C5               	goto	l2474
  4127                           
  4128                           ;m_string.c: 151: t=x%10;
  4129  0986  300A               	movlw	10
  4130  0987  00F0               	movwf	___almod@divisor
  4131  0988  01F1               	clrf	___almod@divisor+1
  4132  0989  01F2               	clrf	___almod@divisor+2
  4133  098A  01F3               	clrf	___almod@divisor+3
  4134  098B  0831               	movf	m_int_2_str_ex@x+3,w
  4135  098C  00F7               	movwf	___almod@dividend+3
  4136  098D  0830               	movf	m_int_2_str_ex@x+2,w
  4137  098E  00F6               	movwf	___almod@dividend+2
  4138  098F  082F               	movf	m_int_2_str_ex@x+1,w
  4139  0990  00F5               	movwf	___almod@dividend+1
  4140  0991  082E               	movf	m_int_2_str_ex@x,w
  4141  0992  00F4               	movwf	___almod@dividend
  4142  0993  3180  20D3  3188   	fcall	___almod
  4143  0996  0873               	movf	?___almod+3,w
  4144  0997  00BB               	movwf	m_int_2_str_ex@t+3
  4145  0998  0872               	movf	?___almod+2,w
  4146  0999  00BA               	movwf	m_int_2_str_ex@t+2
  4147  099A  0871               	movf	?___almod+1,w
  4148  099B  00B9               	movwf	m_int_2_str_ex@t+1
  4149  099C  0870               	movf	?___almod,w
  4150  099D  00B8               	movwf	m_int_2_str_ex@t
  4151                           
  4152                           ;m_string.c: 152: buf[i]=(uint8_t)t+'0';
  4153  099E  083D               	movf	m_int_2_str_ex@i,w
  4154  099F  073E               	addwf	m_int_2_str_ex@buf,w
  4155  09A0  00B4               	movwf	??_m_int_2_str_ex
  4156  09A1  0086               	movwf	6
  4157  09A2  0187               	clrf	7
  4158  09A3  0838               	movf	m_int_2_str_ex@t,w
  4159  09A4  3E30               	addlw	48
  4160  09A5  0081               	movwf	1
  4161                           
  4162                           ;m_string.c: 153: x/=10;
  4163  09A6  300A               	movlw	10
  4164  09A7  00A0               	movwf	___aldiv@divisor
  4165  09A8  01A1               	clrf	___aldiv@divisor+1
  4166  09A9  01A2               	clrf	___aldiv@divisor+2
  4167  09AA  01A3               	clrf	___aldiv@divisor+3
  4168  09AB  0831               	movf	m_int_2_str_ex@x+3,w
  4169  09AC  00A7               	movwf	___aldiv@dividend+3
  4170  09AD  0830               	movf	m_int_2_str_ex@x+2,w
  4171  09AE  00A6               	movwf	___aldiv@dividend+2
  4172  09AF  082F               	movf	m_int_2_str_ex@x+1,w
  4173  09B0  00A5               	movwf	___aldiv@dividend+1
  4174  09B1  082E               	movf	m_int_2_str_ex@x,w
  4175  09B2  00A4               	movwf	___aldiv@dividend
  4176  09B3  2538  3188         	fcall	___aldiv
  4177  09B5  0823               	movf	?___aldiv+3,w
  4178  09B6  00B1               	movwf	m_int_2_str_ex@x+3
  4179  09B7  0822               	movf	?___aldiv+2,w
  4180  09B8  00B0               	movwf	m_int_2_str_ex@x+2
  4181  09B9  0821               	movf	?___aldiv+1,w
  4182  09BA  00AF               	movwf	m_int_2_str_ex@x+1
  4183  09BB  0820               	movf	?___aldiv,w
  4184  09BC  00AE               	movwf	m_int_2_str_ex@x
  4185                           
  4186                           ;m_string.c: 154: if(x==0)break;
  4187  09BD  0831               	movf	m_int_2_str_ex@x+3,w
  4188  09BE  0430               	iorwf	m_int_2_str_ex@x+2,w
  4189  09BF  042F               	iorwf	m_int_2_str_ex@x+1,w
  4190  09C0  042E               	iorwf	m_int_2_str_ex@x,w
  4191  09C1  1903               	btfsc	3,2
  4192  09C2  29C5               	goto	l2474
  4193  09C3  03BD               	decf	m_int_2_str_ex@i,f
  4194  09C4  2983               	goto	l2456
  4195  09C5                     l2474:	
  4196                           
  4197                           ;m_string.c: 155: }
  4198                           ;m_string.c: 156: if(sig){
  4199  09C5  083C               	movf	m_int_2_str_ex@sig,w
  4200  09C6  1903               	btfsc	3,2
  4201  09C7  29D3               	goto	l2482
  4202                           
  4203                           ;m_string.c: 157: if(i>0)buf[i]='-';
  4204  09C8  083D               	movf	m_int_2_str_ex@i,w
  4205  09C9  1903               	btfsc	3,2
  4206  09CA  29D2               	goto	l2480
  4207  09CB  083D               	movf	m_int_2_str_ex@i,w
  4208  09CC  073E               	addwf	m_int_2_str_ex@buf,w
  4209  09CD  00B4               	movwf	??_m_int_2_str_ex
  4210  09CE  0086               	movwf	6
  4211  09CF  302D               	movlw	45
  4212  09D0  0187               	clrf	7
  4213  09D1  0081               	movwf	1
  4214  09D2                     l2480:	
  4215                           
  4216                           ;m_string.c: 158: i--;
  4217  09D2  03BD               	decf	m_int_2_str_ex@i,f
  4218  09D3                     l2482:	
  4219                           
  4220                           ;m_string.c: 159: }
  4221                           ;m_string.c: 160: m_mem_cpy(buf,buf+i);
  4222  09D3  083E               	movf	m_int_2_str_ex@buf,w
  4223  09D4  073D               	addwf	m_int_2_str_ex@i,w
  4224  09D5  00F0               	movwf	m_mem_cpy@s
  4225  09D6  083E               	movf	m_int_2_str_ex@buf,w
  4226  09D7  3181  295A         	ljmp	_m_mem_cpy
  4227  09D9                     __end_of_m_int_2_str_ex:	
  4228  09D9                     __ptext19:	
  4229 ;; *************** function _adc_sample *****************
  4230 ;; Defined at:
  4231 ;;		line 74 in file "src/api/sample.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;  ch              1    wreg     unsigned char 
  4234 ;;  gfvr            1    2[COMMON] unsigned char 
  4235 ;;  num             1    3[COMMON] unsigned char 
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;  ch              1    5[COMMON] unsigned char 
  4238 ;;  t16             2    9[COMMON] unsigned int 
  4239 ;;  ret             2    6[COMMON] unsigned int 
  4240 ;;  i               1    8[COMMON] unsigned char 
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  2    2[COMMON] unsigned int 
  4243 ;; Registers used:
  4244 ;;		wreg, status,2, status,0, pclath, cstack
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/1B
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4250 ;;      Params:         2       0       0       0       0       0       0       0
  4251 ;;      Locals:         6       0       0       0       0       0       0       0
  4252 ;;      Temps:          1       0       0       0       0       0       0       0
  4253 ;;      Totals:         9       0       0       0       0       0       0       0
  4254 ;;Total ram usage:        9 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; Hardware stack levels required when called:    2
  4257 ;; This function calls:
  4258 ;;		_adc_init
  4259 ;;		_fvr_set_gain
  4260 ;; This function is called by:
  4261 ;;		_main
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           
  4266                           ;psect for function _adc_sample
  4267  09D9                     _adc_sample:	
  4268                           
  4269                           ;incstack = 0
  4270                           ; Regs used in _adc_sample: [wreg+status,2+status,0+pclath+cstack]
  4271                           ;adc_sample@ch stored from wreg
  4272  09D9  00F5               	movwf	adc_sample@ch
  4273                           
  4274                           ;sample.c: 76: uint8_t i;
  4275                           ;sample.c: 77: uint16_t ret=0;
  4276  09DA  01F6               	clrf	adc_sample@ret
  4277  09DB  01F7               	clrf	adc_sample@ret+1
  4278                           
  4279                           ;sample.c: 80: fvr_set_gain(gfvr);
  4280  09DC  0872               	movf	adc_sample@gfvr,w
  4281  09DD  261F  3188         	fcall	_fvr_set_gain
  4282                           
  4283                           ;sample.c: 81: adc_init((adc_channel_t)ch);
  4284  09DF  0875               	movf	adc_sample@ch,w
  4285  09E0  2610  3188         	fcall	_adc_init
  4286                           
  4287                           ;sample.c: 82: _delay((unsigned long)((10)*(16000000/4000000.0)));
  4288  09E2  300D               	movlw	13
  4289  09E3  00F4               	movwf	??_adc_sample
  4290  09E4                     u1337:	
  4291  09E4  0BF4               	decfsz	??_adc_sample,f
  4292  09E5  29E4               	goto	u1337
  4293                           
  4294                           ;sample.c: 83: if(num>64)num=64;
  4295  09E6  3041               	movlw	65
  4296  09E7  0273               	subwf	adc_sample@num,w
  4297  09E8  1C03               	skipc
  4298  09E9  29EC               	goto	l2272
  4299  09EA  3040               	movlw	64
  4300  09EB  00F3               	movwf	adc_sample@num
  4301  09EC                     l2272:	
  4302                           
  4303                           ;sample.c: 84: for(i=0;i<num;i++){
  4304  09EC  01F8               	clrf	adc_sample@i
  4305  09ED                     l2280:	
  4306  09ED  0873               	movf	adc_sample@num,w
  4307  09EE  0278               	subwf	adc_sample@i,w
  4308  09EF  1803               	btfsc	3,0
  4309  09F0  2A0C               	goto	l2282
  4310                           
  4311                           ;sample.c: 85: ADCON0bits.GO_nDONE = 1;
  4312  09F1  0021               	movlb	1	; select bank1
  4313  09F2  149D               	bsf	29,1	;volatile
  4314  09F3                     l583:	
  4315                           ;sample.c: 86: while (ADCON0bits.GO_nDONE);
  4316                           
  4317  09F3  189D               	btfsc	29,1	;volatile
  4318  09F4  29F3               	goto	l583
  4319                           
  4320                           ;sample.c: 87: __nop();
  4321  09F5  0000               	nop
  4322                           
  4323                           ;sample.c: 88: t16=ADRESH;
  4324  09F6  0021               	movlb	1	; select bank1
  4325  09F7  081C               	movf	28,w	;volatile
  4326  09F8  00F9               	movwf	adc_sample@t16
  4327  09F9  01FA               	clrf	adc_sample@t16+1
  4328                           
  4329                           ;sample.c: 89: t16<<=2;
  4330  09FA  35F9               	lslf	adc_sample@t16,f
  4331  09FB  0DFA               	rlf	adc_sample@t16+1,f
  4332  09FC  35F9               	lslf	adc_sample@t16,f
  4333  09FD  0DFA               	rlf	adc_sample@t16+1,f
  4334                           
  4335                           ;sample.c: 90: t16|=(ADRESL>>6);
  4336  09FE  081B               	movf	27,w	;volatile
  4337  09FF  00F4               	movwf	??_adc_sample
  4338  0A00  3006               	movlw	6
  4339  0A01                     u1035:	
  4340  0A01  36F4               	lsrf	??_adc_sample,f
  4341  0A02  0B89               	decfsz	9,f
  4342  0A03  2A01               	goto	u1035
  4343  0A04  0874               	movf	??_adc_sample,w
  4344  0A05  04F9               	iorwf	adc_sample@t16,f
  4345                           
  4346                           ;sample.c: 91: ret+=t16;
  4347  0A06  0879               	movf	adc_sample@t16,w
  4348  0A07  07F6               	addwf	adc_sample@ret,f
  4349  0A08  087A               	movf	adc_sample@t16+1,w
  4350  0A09  3DF7               	addwfc	adc_sample@ret+1,f
  4351  0A0A  0AF8               	incf	adc_sample@i,f
  4352  0A0B  29ED               	goto	l2280
  4353  0A0C                     l2282:	
  4354                           
  4355                           ;sample.c: 94: return ret;
  4356  0A0C  0877               	movf	adc_sample@ret+1,w
  4357  0A0D  00F3               	movwf	?_adc_sample+1
  4358  0A0E  0876               	movf	adc_sample@ret,w
  4359  0A0F  00F2               	movwf	?_adc_sample
  4360  0A10  0008               	return
  4361  0A11                     __end_of_adc_sample:	
  4362  0A11                     __ptext34:	
  4363 ;; *************** function _PWM1_Start *****************
  4364 ;; Defined at:
  4365 ;;		line 112 in file "mcc_generated_files/pwm1.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;		None
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;		None
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1    wreg      void 
  4372 ;; Registers used:
  4373 ;;		None
  4374 ;; Tracked objects:
  4375 ;;		On entry : 1F/3
  4376 ;;		On exit  : 1F/1B
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4379 ;;      Params:         0       0       0       0       0       0       0       0
  4380 ;;      Locals:         0       0       0       0       0       0       0       0
  4381 ;;      Temps:          0       0       0       0       0       0       0       0
  4382 ;;      Totals:         0       0       0       0       0       0       0       0
  4383 ;;Total ram usage:        0 bytes
  4384 ;; Hardware stack levels used:    1
  4385 ;; Hardware stack levels required when called:    1
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_main
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           
  4394                           ;psect for function _PWM1_Start
  4395  0A11                     _PWM1_Start:	
  4396                           
  4397                           ;pwm1.c: 114: PWM1CONbits.EN = 1;
  4398                           
  4399                           ;incstack = 0
  4400                           ; Regs used in _PWM1_Start: []
  4401  0A11  003B               	movlb	27	; select bank27
  4402  0A12  179B               	bsf	27,7	;volatile
  4403  0A13  0008               	return
  4404  0A14                     __end_of_PWM1_Start:	
  4405  0A14                     __ptext22:	
  4406 ;; *************** function _SYSTEM_Initialize *****************
  4407 ;; Defined at:
  4408 ;;		line 68 in file "mcc_generated_files/mcc.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;		None
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;		None
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  1    wreg      void 
  4415 ;; Registers used:
  4416 ;;		wreg, status,2, status,0, pclath, cstack
  4417 ;; Tracked objects:
  4418 ;;		On entry : 1F/1F
  4419 ;;		On exit  : 1F/3
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4422 ;;      Params:         0       0       0       0       0       0       0       0
  4423 ;;      Locals:         0       0       0       0       0       0       0       0
  4424 ;;      Temps:          0       0       0       0       0       0       0       0
  4425 ;;      Totals:         0       0       0       0       0       0       0       0
  4426 ;;Total ram usage:        0 bytes
  4427 ;; Hardware stack levels used:    1
  4428 ;; Hardware stack levels required when called:    3
  4429 ;; This function calls:
  4430 ;;		_ADC1_Initialize
  4431 ;;		_EUSART_Initialize
  4432 ;;		_FVR_Initialize
  4433 ;;		_OSCILLATOR_Initialize
  4434 ;;		_PIN_MANAGER_Initialize
  4435 ;;		_PWM1_Initialize
  4436 ;;		_PWM2_Initialize
  4437 ;;		_TMR2_Initialize
  4438 ;;		_WDT_Initialize
  4439 ;; This function is called by:
  4440 ;;		_main
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           
  4445                           ;psect for function _SYSTEM_Initialize
  4446  0A14                     _SYSTEM_Initialize:	
  4447                           
  4448                           ;mcc.c: 71: PIN_MANAGER_Initialize();
  4449                           
  4450                           ;incstack = 0
  4451                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4452  0A14  2232  3188         	fcall	_PIN_MANAGER_Initialize
  4453                           
  4454                           ;mcc.c: 72: OSCILLATOR_Initialize();
  4455  0A16  222D  3188         	fcall	_OSCILLATOR_Initialize
  4456                           
  4457                           ;mcc.c: 73: WDT_Initialize();
  4458  0A18  260D  3188         	fcall	_WDT_Initialize
  4459                           
  4460                           ;mcc.c: 74: FVR_Initialize();
  4461  0A1A  2229  3188         	fcall	_FVR_Initialize
  4462                           
  4463                           ;mcc.c: 75: PWM1_Initialize();
  4464  0A1C  25DE  3188         	fcall	_PWM1_Initialize
  4465                           
  4466                           ;mcc.c: 76: PWM2_Initialize();
  4467  0A1E  25F6  3188         	fcall	_PWM2_Initialize
  4468                           
  4469                           ;mcc.c: 77: ADC1_Initialize();
  4470  0A20  2225  3188         	fcall	_ADC1_Initialize
  4471                           
  4472                           ;mcc.c: 78: TMR2_Initialize();
  4473  0A22  27ED  3188         	fcall	_TMR2_Initialize
  4474                           
  4475                           ;mcc.c: 79: EUSART_Initialize();
  4476  0A24  2FE1               	ljmp	l2060
  4477  0A25                     __end_of_SYSTEM_Initialize:	
  4478  0A25                     __ptext33:	
  4479 ;; *************** function _ADC1_Initialize *****************
  4480 ;; Defined at:
  4481 ;;		line 64 in file "mcc_generated_files/adc1.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;		None
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;		None
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  1    wreg      void 
  4488 ;; Registers used:
  4489 ;;		wreg, status,2
  4490 ;; Tracked objects:
  4491 ;;		On entry : 1F/1B
  4492 ;;		On exit  : 1F/1
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4495 ;;      Params:         0       0       0       0       0       0       0       0
  4496 ;;      Locals:         0       0       0       0       0       0       0       0
  4497 ;;      Temps:          0       0       0       0       0       0       0       0
  4498 ;;      Totals:         0       0       0       0       0       0       0       0
  4499 ;;Total ram usage:        0 bytes
  4500 ;; Hardware stack levels used:    1
  4501 ;; Hardware stack levels required when called:    1
  4502 ;; This function calls:
  4503 ;;		Nothing
  4504 ;; This function is called by:
  4505 ;;		_SYSTEM_Initialize
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           
  4510                           ;psect for function _ADC1_Initialize
  4511  0A25                     _ADC1_Initialize:	
  4512                           
  4513                           ;adc1.c: 69: ADCON0 = 0x01;
  4514                           
  4515                           ;incstack = 0
  4516                           ; Regs used in _ADC1_Initialize: [wreg+status,2]
  4517  0A25  3001               	movlw	1
  4518  0A26  0021               	movlb	1	; select bank1
  4519  0A27  009D               	movwf	29	;volatile
  4520                           
  4521                           ;adc1.c: 72: ADCON1 = 0x63;
  4522                           
  4523                           ;adc1.c: 75: ADCON2 = 0x00;
  4524                           
  4525                           ;adc1.c: 78: ADRESL = 0x00;
  4526                           
  4527                           ;adc1.c: 81: ADRESH = 0x00;
  4528  0A28  2FD0               	ljmp	PL18	;call to abstracted procedure
  4529  0A29                     __end_of_ADC1_Initialize:	
  4530  0A29                     __ptext31:	
  4531 ;; *************** function _FVR_Initialize *****************
  4532 ;; Defined at:
  4533 ;;		line 57 in file "mcc_generated_files/fvr.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;		None
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;		None
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  1    wreg      void 
  4540 ;; Registers used:
  4541 ;;		wreg
  4542 ;; Tracked objects:
  4543 ;;		On entry : 1F/1
  4544 ;;		On exit  : 1F/2
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4547 ;;      Params:         0       0       0       0       0       0       0       0
  4548 ;;      Locals:         0       0       0       0       0       0       0       0
  4549 ;;      Temps:          0       0       0       0       0       0       0       0
  4550 ;;      Totals:         0       0       0       0       0       0       0       0
  4551 ;;Total ram usage:        0 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:    1
  4554 ;; This function calls:
  4555 ;;		Nothing
  4556 ;; This function is called by:
  4557 ;;		_SYSTEM_Initialize
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           
  4562                           ;psect for function _FVR_Initialize
  4563  0A29                     _FVR_Initialize:	
  4564                           
  4565                           ;fvr.c: 60: FVRCON = 0x81;
  4566                           
  4567                           ;incstack = 0
  4568                           ; Regs used in _FVR_Initialize: [wreg]
  4569  0A29  3081               	movlw	129
  4570  0A2A  0022               	movlb	2	; select bank2
  4571  0A2B  0097               	movwf	23	;volatile
  4572  0A2C  0008               	return
  4573  0A2D                     __end_of_FVR_Initialize:	
  4574  0A2D                     __ptext30:	
  4575 ;; *************** function _OSCILLATOR_Initialize *****************
  4576 ;; Defined at:
  4577 ;;		line 82 in file "mcc_generated_files/mcc.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;		None
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;		None
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  1    wreg      void 
  4584 ;; Registers used:
  4585 ;;		wreg, status,2
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/1F
  4588 ;;		On exit  : 1F/1
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4591 ;;      Params:         0       0       0       0       0       0       0       0
  4592 ;;      Locals:         0       0       0       0       0       0       0       0
  4593 ;;      Temps:          0       0       0       0       0       0       0       0
  4594 ;;      Totals:         0       0       0       0       0       0       0       0
  4595 ;;Total ram usage:        0 bytes
  4596 ;; Hardware stack levels used:    1
  4597 ;; Hardware stack levels required when called:    1
  4598 ;; This function calls:
  4599 ;;		Nothing
  4600 ;; This function is called by:
  4601 ;;		_SYSTEM_Initialize
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           
  4605                           
  4606                           ;psect for function _OSCILLATOR_Initialize
  4607  0A2D                     _OSCILLATOR_Initialize:	
  4608                           
  4609                           ;mcc.c: 85: OSCCON = 0x78;
  4610                           
  4611                           ;incstack = 0
  4612                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4613  0A2D  3078               	movlw	120
  4614  0A2E  0021               	movlb	1	; select bank1
  4615  0A2F  0099               	movwf	25	;volatile
  4616                           
  4617                           ;mcc.c: 87: OSCTUNE = 0x00;
  4618  0A30  0198               	clrf	24	;volatile
  4619  0A31  0008               	return
  4620  0A32                     __end_of_OSCILLATOR_Initialize:	
  4621  0A32                     __ptext29:	
  4622 ;; *************** function _PIN_MANAGER_Initialize *****************
  4623 ;; Defined at:
  4624 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;		None
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;  state           1    0[COMMON] unsigned char 
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  1    wreg      void 
  4631 ;; Registers used:
  4632 ;;		wreg, status,2, status,0
  4633 ;; Tracked objects:
  4634 ;;		On entry : 1F/1F
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4638 ;;      Params:         0       0       0       0       0       0       0       0
  4639 ;;      Locals:         1       0       0       0       0       0       0       0
  4640 ;;      Temps:          0       0       0       0       0       0       0       0
  4641 ;;      Totals:         1       0       0       0       0       0       0       0
  4642 ;;Total ram usage:        1 bytes
  4643 ;; Hardware stack levels used:    1
  4644 ;; Hardware stack levels required when called:    1
  4645 ;; This function calls:
  4646 ;;		Nothing
  4647 ;; This function is called by:
  4648 ;;		_SYSTEM_Initialize
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           
  4653                           ;psect for function _PIN_MANAGER_Initialize
  4654  0A32                     _PIN_MANAGER_Initialize:	
  4655                           
  4656                           ;pin_manager.c: 57: LATA = 0x00;
  4657                           
  4658                           ;incstack = 0
  4659                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  4660  0A32  0022               	movlb	2	; select bank2
  4661  0A33  018C               	clrf	12	;volatile
  4662                           
  4663                           ;pin_manager.c: 58: LATC = 0x00;
  4664  0A34  018E               	clrf	14	;volatile
  4665                           
  4666                           ;pin_manager.c: 63: TRISA = 0x0F;
  4667  0A35  300F               	movlw	15
  4668  0A36  0021               	movlb	1	; select bank1
  4669  0A37  008C               	movwf	12	;volatile
  4670                           
  4671                           ;pin_manager.c: 64: TRISC = 0x1f;
  4672  0A38  301F               	movlw	31
  4673  0A39  008E               	movwf	14	;volatile
  4674                           
  4675                           ;pin_manager.c: 69: ANSELC = 0x0F;
  4676  0A3A  300F               	movlw	15
  4677  0A3B  0023               	movlb	3	; select bank3
  4678  0A3C  008E               	movwf	14	;volatile
  4679                           
  4680                           ;pin_manager.c: 70: ANSELA = 0x17;
  4681  0A3D  3017               	movlw	23
  4682  0A3E  008C               	movwf	12	;volatile
  4683                           
  4684                           ;pin_manager.c: 75: WPUA = 0x3B;
  4685  0A3F  303B               	movlw	59
  4686  0A40  0024               	movlb	4	; select bank4
  4687  0A41  008C               	movwf	12	;volatile
  4688                           
  4689                           ;pin_manager.c: 76: WPUC = 0x30;
  4690  0A42  3030               	movlw	48
  4691  0A43  008E               	movwf	14	;volatile
  4692                           
  4693                           ;pin_manager.c: 77: OPTION_REGbits.nWPUEN = 0;
  4694  0A44  0021               	movlb	1	; select bank1
  4695  0A45  1395               	bcf	21,7	;volatile
  4696                           
  4697                           ;pin_manager.c: 82: ODCONA = 0x00;
  4698  0A46  0025               	movlb	5	; select bank5
  4699  0A47  018C               	clrf	12	;volatile
  4700                           
  4701                           ;pin_manager.c: 83: ODCONC = 0x00;
  4702  0A48  018E               	clrf	14	;volatile
  4703                           
  4704                           ;pin_manager.c: 90: bool state = (unsigned char)GIE;
  4705  0A49  3000               	movlw	0
  4706  0A4A  1B8B               	btfsc	11,7	;volatile
  4707  0A4B  3001               	movlw	1
  4708  0A4C  00F0               	movwf	PIN_MANAGER_Initialize@state
  4709                           
  4710                           ;pin_manager.c: 91: GIE = 0;
  4711  0A4D  138B               	bcf	11,7	;volatile
  4712                           
  4713                           ;pin_manager.c: 92: PPSLOCK = 0x55;
  4714                           
  4715                           ;pin_manager.c: 93: PPSLOCK = 0xAA;
  4716  0A4E  27DB  3188         	fcall	PL24	;call to abstracted procedure
  4717                           
  4718                           ;pin_manager.c: 94: PPSLOCKbits.PPSLOCKED = 0x00;
  4719  0A50  100F               	bcf	15,0	;volatile
  4720                           
  4721                           ;pin_manager.c: 96: RXPPSbits.RXPPS = 0x14;
  4722  0A51  0815               	movf	21,w	;volatile
  4723  0A52  39E0               	andlw	-32
  4724  0A53  3814               	iorlw	20
  4725  0A54  0095               	movwf	21	;volatile
  4726                           
  4727                           ;pin_manager.c: 97: RA4PPSbits.RA4PPS = 0x04;
  4728  0A55  003D               	movlb	29	; select bank29
  4729  0A56  0814               	movf	20,w	;volatile
  4730  0A57  39F0               	andlw	-16
  4731  0A58  3804               	iorlw	4
  4732  0A59  0094               	movwf	20	;volatile
  4733                           
  4734                           ;pin_manager.c: 98: RA5PPSbits.RA5PPS = 0x03;
  4735  0A5A  0815               	movf	21,w	;volatile
  4736  0A5B  39F0               	andlw	-16
  4737  0A5C  3803               	iorlw	3
  4738  0A5D  0095               	movwf	21	;volatile
  4739                           
  4740                           ;pin_manager.c: 99: RC5PPSbits.RC5PPS = 0x09;
  4741  0A5E  0825               	movf	37,w	;volatile
  4742  0A5F  39F0               	andlw	-16
  4743  0A60  3809               	iorlw	9
  4744  0A61  00A5               	movwf	37	;volatile
  4745                           
  4746                           ;pin_manager.c: 101: PPSLOCK = 0x55;
  4747                           
  4748                           ;pin_manager.c: 102: PPSLOCK = 0xAA;
  4749  0A62  27DB  3188         	fcall	PL24	;call to abstracted procedure
  4750                           
  4751                           ;pin_manager.c: 103: PPSLOCKbits.PPSLOCKED = 0x01;
  4752  0A64  140F               	bsf	15,0	;volatile
  4753                           
  4754                           ;pin_manager.c: 105: GIE = state;
  4755  0A65  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  4756  0A66  2A69               	goto	u670
  4757  0A67  178B               	bsf	11,7	;volatile
  4758  0A68  0008               	return
  4759  0A69                     u670:	
  4760  0A69  138B               	bcf	11,7	;volatile
  4761  0A6A  0008               	return
  4762  0A6B                     __end_of_PIN_MANAGER_Initialize:	
  4763  0A6B                     __ptext4:	
  4764 ;; *************** function _pid_run_process *****************
  4765 ;; Defined at:
  4766 ;;		line 225 in file "src/api/sample.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;		None
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;  t32             4   32[BANK0 ] long 
  4771 ;;  ed              4    0        long 
  4772 ;;  ei              4   22[BANK0 ] long 
  4773 ;;  ep              4   18[BANK0 ] long 
  4774 ;;  t16             2   30[BANK0 ] unsigned int 
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  1    wreg      void 
  4777 ;; Registers used:
  4778 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4779 ;; Tracked objects:
  4780 ;;		On entry : 1F/0
  4781 ;;		On exit  : 1F/1B
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4784 ;;      Params:         0       0       0       0       0       0       0       0
  4785 ;;      Locals:         0      18       0       0       0       0       0       0
  4786 ;;      Temps:          0       4       0       0       0       0       0       0
  4787 ;;      Totals:         0      22       0       0       0       0       0       0
  4788 ;;Total ram usage:       22 bytes
  4789 ;; Hardware stack levels used:    1
  4790 ;; Hardware stack levels required when called:    3
  4791 ;; This function calls:
  4792 ;;		___aldiv
  4793 ;;		___lmul
  4794 ;;		_set_idrv_pwm1_duty
  4795 ;; This function is called by:
  4796 ;;		_main
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           
  4801                           ;psect for function _pid_run_process
  4802  0A6B                     _pid_run_process:	
  4803                           
  4804                           ;sample.c: 228: int32_t ep,ei,ed;
  4805                           ;sample.c: 229: int32_t t32;
  4806                           ;sample.c: 230: t32=(resRs-resRc);
  4807                           
  4808                           ;incstack = 0
  4809                           ; Regs used in _pid_run_process: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4810  0A6B  086D               	movf	_resRs+3,w
  4811  0A6C  00C3               	movwf	pid_run_process@t32+3
  4812  0A6D  086C               	movf	_resRs+2,w
  4813  0A6E  00C2               	movwf	pid_run_process@t32+2
  4814  0A6F  086B               	movf	_resRs+1,w
  4815  0A70  00C1               	movwf	pid_run_process@t32+1
  4816  0A71  086A               	movf	_resRs,w
  4817  0A72  00C0               	movwf	pid_run_process@t32
  4818  0A73  0866               	movf	_resRc,w
  4819  0A74  02C0               	subwf	pid_run_process@t32,f
  4820  0A75  0867               	movf	_resRc+1,w
  4821  0A76  3BC1               	subwfb	pid_run_process@t32+1,f
  4822  0A77  0868               	movf	_resRc+2,w
  4823  0A78  3BC2               	subwfb	pid_run_process@t32+2,f
  4824  0A79  0869               	movf	_resRc+3,w
  4825  0A7A  3BC3               	subwfb	pid_run_process@t32+3,f
  4826                           
  4827                           ;sample.c: 231: t32=2000-t32;
  4828  0A7B  30D0               	movlw	208
  4829  0A7C  00AE               	movwf	??_pid_run_process
  4830  0A7D  3007               	movlw	7
  4831  0A7E  00AF               	movwf	??_pid_run_process+1
  4832  0A7F  01B0               	clrf	??_pid_run_process+2
  4833  0A80  01B1               	clrf	??_pid_run_process+3
  4834  0A81  0840               	movf	pid_run_process@t32,w
  4835  0A82  02AE               	subwf	??_pid_run_process,f
  4836  0A83  0841               	movf	pid_run_process@t32+1,w
  4837  0A84  3BAF               	subwfb	??_pid_run_process+1,f
  4838  0A85  0842               	movf	pid_run_process@t32+2,w
  4839  0A86  3BB0               	subwfb	??_pid_run_process+2,f
  4840  0A87  0843               	movf	pid_run_process@t32+3,w
  4841  0A88  3BB1               	subwfb	??_pid_run_process+3,f
  4842  0A89  0831               	movf	??_pid_run_process+3,w
  4843  0A8A  27BB  3188         	fcall	PL12	;call to abstracted procedure
  4844                           
  4845                           ;sample.c: 233: err[2]=err[1];
  4846  0A8C  30A4               	movlw	((low (_err| 0))& (0+255)+4)
  4847  0A8D  0086               	movwf	6
  4848  0A8E  0187               	clrf	7
  4849  0A8F  3F40               	moviw [0]fsr1
  4850  0A90  0021               	movlb	1	; select bank1
  4851  0A91  00A8               	movwf	(_err^(0+128)+8)
  4852  0A92  3F41               	moviw [1]fsr1
  4853  0A93  00A9               	movwf	((_err+1)^(0+128)+8)
  4854  0A94  3F42               	moviw [2]fsr1
  4855  0A95  00AA               	movwf	((_err+2)^(0+128)+8)
  4856  0A96  3F43               	moviw [3]fsr1
  4857  0A97  00AB               	movwf	((_err+3)^(0+128)+8)
  4858                           
  4859                           ;sample.c: 234: err[1]=err[0];
  4860  0A98  0823               	movf	(_err+3)^(0+128),w
  4861  0A99  00A7               	movwf	((_err+3)^(0+128)+4)
  4862  0A9A  0822               	movf	(_err+2)^(0+128),w
  4863  0A9B  00A6               	movwf	((_err+2)^(0+128)+4)
  4864  0A9C  0821               	movf	(_err+1)^(0+128),w
  4865  0A9D  00A5               	movwf	((_err+1)^(0+128)+4)
  4866  0A9E  0820               	movf	_err^(0+128),w
  4867  0A9F  00A4               	movwf	(_err^(0+128)+4)
  4868                           
  4869                           ;sample.c: 235: err[0]=t32;
  4870  0AA0  0020               	movlb	0	; select bank0
  4871  0AA1  0843               	movf	pid_run_process@t32+3,w
  4872  0AA2  0021               	movlb	1	; select bank1
  4873  0AA3  00A3               	movwf	(_err+3)^(0+128)
  4874  0AA4  0020               	movlb	0	; select bank0
  4875  0AA5  0842               	movf	pid_run_process@t32+2,w
  4876  0AA6  0021               	movlb	1	; select bank1
  4877  0AA7  00A2               	movwf	(_err+2)^(0+128)
  4878  0AA8  0020               	movlb	0	; select bank0
  4879  0AA9  0841               	movf	pid_run_process@t32+1,w
  4880  0AAA  0021               	movlb	1	; select bank1
  4881  0AAB  00A1               	movwf	(_err+1)^(0+128)
  4882  0AAC  0020               	movlb	0	; select bank0
  4883  0AAD  0840               	movf	pid_run_process@t32,w
  4884  0AAE  0021               	movlb	1	; select bank1
  4885  0AAF  00A0               	movwf	_err^(0+128)
  4886                           
  4887                           ;sample.c: 238: ep=(err[0]-err[1])*PidKp;
  4888  0AB0  0824               	movf	(_err^(0+128)+4),w
  4889  0AB1  0220               	subwf	_err^(0+128),w
  4890  0AB2  0020               	movlb	0	; select bank0
  4891  0AB3  00AE               	movwf	??_pid_run_process
  4892  0AB4  0021               	movlb	1	; select bank1
  4893  0AB5  0825               	movf	((_err+1)^(0+128)+4),w
  4894  0AB6  3B21               	subwfb	(_err+1)^(0+128),w
  4895  0AB7  0020               	movlb	0	; select bank0
  4896  0AB8  00AF               	movwf	??_pid_run_process+1
  4897  0AB9  0021               	movlb	1	; select bank1
  4898  0ABA  0826               	movf	((_err+2)^(0+128)+4),w
  4899  0ABB  3B22               	subwfb	(_err+2)^(0+128),w
  4900  0ABC  0020               	movlb	0	; select bank0
  4901  0ABD  00B0               	movwf	??_pid_run_process+2
  4902  0ABE  0021               	movlb	1	; select bank1
  4903  0ABF  0827               	movf	((_err+3)^(0+128)+4),w
  4904  0AC0  3B23               	subwfb	(_err+3)^(0+128),w
  4905  0AC1  0020               	movlb	0	; select bank0
  4906  0AC2  00B1               	movwf	??_pid_run_process+3
  4907  0AC3  00F3               	movwf	___lmul@multiplier+3
  4908  0AC4  0830               	movf	??_pid_run_process+2,w
  4909  0AC5  00F2               	movwf	___lmul@multiplier+2
  4910  0AC6  082F               	movf	??_pid_run_process+1,w
  4911  0AC7  00F1               	movwf	___lmul@multiplier+1
  4912  0AC8  082E               	movf	??_pid_run_process,w
  4913  0AC9  00F0               	movwf	___lmul@multiplier
  4914  0ACA  27AA  3188         	fcall	PL6	;call to abstracted procedure
  4915  0ACC  25A4  3188         	fcall	___lmul
  4916  0ACE  0873               	movf	?___lmul+3,w
  4917  0ACF  0020               	movlb	0	; select bank0
  4918  0AD0  00B5               	movwf	pid_run_process@ep+3
  4919  0AD1  0872               	movf	?___lmul+2,w
  4920  0AD2  00B4               	movwf	pid_run_process@ep+2
  4921  0AD3  0871               	movf	?___lmul+1,w
  4922  0AD4  00B3               	movwf	pid_run_process@ep+1
  4923  0AD5  0870               	movf	?___lmul,w
  4924  0AD6  00B2               	movwf	pid_run_process@ep
  4925                           
  4926                           ;sample.c: 239: ei=PidKp*err[0]/PidTi;
  4927  0AD7  0021               	movlb	1	; select bank1
  4928  0AD8  082F               	movf	(_PidTi+3)^(0+128),w
  4929  0AD9  0020               	movlb	0	; select bank0
  4930  0ADA  00A3               	movwf	___aldiv@divisor+3
  4931  0ADB  0021               	movlb	1	; select bank1
  4932  0ADC  082E               	movf	(_PidTi+2)^(0+128),w
  4933  0ADD  0020               	movlb	0	; select bank0
  4934  0ADE  00A2               	movwf	___aldiv@divisor+2
  4935  0ADF  0021               	movlb	1	; select bank1
  4936  0AE0  082D               	movf	(_PidTi+1)^(0+128),w
  4937  0AE1  0020               	movlb	0	; select bank0
  4938  0AE2  00A1               	movwf	___aldiv@divisor+1
  4939  0AE3  0021               	movlb	1	; select bank1
  4940  0AE4  082C               	movf	_PidTi^(0+128),w
  4941  0AE5  0020               	movlb	0	; select bank0
  4942  0AE6  00A0               	movwf	___aldiv@divisor
  4943  0AE7  0021               	movlb	1	; select bank1
  4944  0AE8  0823               	movf	(_err+3)^(0+128),w
  4945  0AE9  00F3               	movwf	___lmul@multiplier+3
  4946  0AEA  0822               	movf	(_err+2)^(0+128),w
  4947  0AEB  00F2               	movwf	___lmul@multiplier+2
  4948  0AEC  0821               	movf	(_err+1)^(0+128),w
  4949  0AED  00F1               	movwf	___lmul@multiplier+1
  4950  0AEE  0820               	movf	_err^(0+128),w
  4951  0AEF  00F0               	movwf	___lmul@multiplier
  4952  0AF0  0020               	movlb	0	; select bank0
  4953  0AF1  27AA  3188         	fcall	PL6	;call to abstracted procedure
  4954  0AF3  25A4  3188         	fcall	___lmul
  4955  0AF5  2794  3188         	fcall	PL2	;call to abstracted procedure
  4956  0AF7  2538  3188         	fcall	___aldiv
  4957  0AF9  0823               	movf	?___aldiv+3,w
  4958  0AFA  00B9               	movwf	pid_run_process@ei+3
  4959  0AFB  0822               	movf	?___aldiv+2,w
  4960  0AFC  00B8               	movwf	pid_run_process@ei+2
  4961  0AFD  0821               	movf	?___aldiv+1,w
  4962  0AFE  00B7               	movwf	pid_run_process@ei+1
  4963  0AFF  0820               	movf	?___aldiv,w
  4964  0B00  00B6               	movwf	pid_run_process@ei
  4965                           
  4966                           ;sample.c: 243: t32=ep+ei+ed;
  4967  0B01  0832               	movf	pid_run_process@ep,w
  4968  0B02  0736               	addwf	pid_run_process@ei,w
  4969  0B03  00AE               	movwf	??_pid_run_process
  4970  0B04  0833               	movf	pid_run_process@ep+1,w
  4971  0B05  3D37               	addwfc	pid_run_process@ei+1,w
  4972  0B06  00AF               	movwf	??_pid_run_process+1
  4973  0B07  0834               	movf	pid_run_process@ep+2,w
  4974  0B08  3D38               	addwfc	pid_run_process@ei+2,w
  4975  0B09  00B0               	movwf	??_pid_run_process+2
  4976  0B0A  0835               	movf	pid_run_process@ep+3,w
  4977  0B0B  3D39               	addwfc	pid_run_process@ei+3,w
  4978  0B0C  00B1               	movwf	??_pid_run_process+3
  4979  0B0D  27BB  3188         	fcall	PL12	;call to abstracted procedure
  4980                           
  4981                           ;sample.c: 244: t32/=10000;
  4982  0B0F  3027               	movlw	39
  4983  0B10  01A3               	clrf	___aldiv@divisor+3
  4984  0B11  01A2               	clrf	___aldiv@divisor+2
  4985  0B12  00A1               	movwf	___aldiv@divisor+1
  4986  0B13  3010               	movlw	16
  4987  0B14  00A0               	movwf	___aldiv@divisor
  4988  0B15  0843               	movf	pid_run_process@t32+3,w
  4989  0B16  00A7               	movwf	___aldiv@dividend+3
  4990  0B17  0842               	movf	pid_run_process@t32+2,w
  4991  0B18  00A6               	movwf	___aldiv@dividend+2
  4992  0B19  0841               	movf	pid_run_process@t32+1,w
  4993  0B1A  00A5               	movwf	___aldiv@dividend+1
  4994  0B1B  0840               	movf	pid_run_process@t32,w
  4995  0B1C  00A4               	movwf	___aldiv@dividend
  4996  0B1D  2538  3188         	fcall	___aldiv
  4997  0B1F  0823               	movf	?___aldiv+3,w
  4998  0B20  00C3               	movwf	pid_run_process@t32+3
  4999  0B21  0822               	movf	?___aldiv+2,w
  5000  0B22  00C2               	movwf	pid_run_process@t32+2
  5001  0B23  0821               	movf	?___aldiv+1,w
  5002  0B24  00C1               	movwf	pid_run_process@t32+1
  5003  0B25  0820               	movf	?___aldiv,w
  5004  0B26  00C0               	movwf	pid_run_process@t32
  5005                           
  5006                           ;sample.c: 245: t32+=pidU;
  5007  0B27  0862               	movf	_pidU,w
  5008  0B28  07C0               	addwf	pid_run_process@t32,f
  5009  0B29  0863               	movf	_pidU+1,w
  5010  0B2A  3DC1               	addwfc	pid_run_process@t32+1,f
  5011  0B2B  0864               	movf	_pidU+2,w
  5012  0B2C  3DC2               	addwfc	pid_run_process@t32+2,f
  5013  0B2D  0865               	movf	_pidU+3,w
  5014  0B2E  3DC3               	addwfc	pid_run_process@t32+3,f
  5015                           
  5016                           ;sample.c: 247: __nop();
  5017  0B2F  0000               	nop
  5018                           
  5019                           ;sample.c: 248: if(t32>1200)t32=1200;
  5020  0B30  0020               	movlb	0	; select bank0
  5021  0B31  1BC3               	btfsc	pid_run_process@t32+3,7
  5022  0B32  2B45               	goto	l2416
  5023  0B33  0843               	movf	pid_run_process@t32+3,w
  5024  0B34  1D03               	btfss	3,2
  5025  0B35  2B3F               	goto	l2414
  5026  0B36  0842               	movf	pid_run_process@t32+2,w
  5027  0B37  1D03               	btfss	3,2
  5028  0B38  2B3F               	goto	l2414
  5029  0B39  30B1               	movlw	177
  5030  0B3A  0240               	subwf	pid_run_process@t32,w
  5031  0B3B  3004               	movlw	4
  5032  0B3C  3B41               	subwfb	pid_run_process@t32+1,w
  5033  0B3D  1C03               	btfss	3,0
  5034  0B3E  2B45               	goto	l2416
  5035  0B3F                     l2414:	
  5036  0B3F  3004               	movlw	4
  5037  0B40  01C3               	clrf	pid_run_process@t32+3
  5038  0B41  01C2               	clrf	pid_run_process@t32+2
  5039  0B42  00C1               	movwf	pid_run_process@t32+1
  5040  0B43  30B0               	movlw	176
  5041  0B44  00C0               	movwf	pid_run_process@t32
  5042  0B45                     l2416:	
  5043                           
  5044                           ;sample.c: 249: if(t32<2)t32=2;
  5045  0B45  1BC3               	btfsc	pid_run_process@t32+3,7
  5046  0B46  2B54               	goto	l2418
  5047  0B47  0843               	movf	pid_run_process@t32+3,w
  5048  0B48  1D03               	btfss	3,2
  5049  0B49  2B59               	goto	l650
  5050  0B4A  0842               	movf	pid_run_process@t32+2,w
  5051  0B4B  1D03               	btfss	3,2
  5052  0B4C  2B59               	goto	l650
  5053  0B4D  0841               	movf	pid_run_process@t32+1,w
  5054  0B4E  1D03               	btfss	3,2
  5055  0B4F  2B59               	goto	l650
  5056  0B50  3002               	movlw	2
  5057  0B51  0240               	subwf	pid_run_process@t32,w
  5058  0B52  1803               	btfsc	3,0
  5059  0B53  2B59               	goto	l650
  5060  0B54                     l2418:	
  5061  0B54  3002               	movlw	2
  5062  0B55  00C0               	movwf	pid_run_process@t32
  5063  0B56  01C1               	clrf	pid_run_process@t32+1
  5064  0B57  01C2               	clrf	pid_run_process@t32+2
  5065  0B58  01C3               	clrf	pid_run_process@t32+3
  5066  0B59                     l650:	
  5067                           
  5068                           ;sample.c: 250: pidU=t32;
  5069  0B59  0843               	movf	pid_run_process@t32+3,w
  5070  0B5A  00E5               	movwf	_pidU+3
  5071  0B5B  0842               	movf	pid_run_process@t32+2,w
  5072  0B5C  00E4               	movwf	_pidU+2
  5073  0B5D  0841               	movf	pid_run_process@t32+1,w
  5074  0B5E  00E3               	movwf	_pidU+1
  5075  0B5F  0840               	movf	pid_run_process@t32,w
  5076  0B60  00E2               	movwf	_pidU
  5077                           
  5078                           ;sample.c: 251: uint16_t t16;
  5079                           ;sample.c: 252: t16=(uint16_t)pidU;
  5080  0B61  0863               	movf	_pidU+1,w
  5081  0B62  00BF               	movwf	pid_run_process@t16+1
  5082  0B63  0862               	movf	_pidU,w
  5083  0B64  00BE               	movwf	pid_run_process@t16
  5084                           
  5085                           ;sample.c: 253: set_idrv_pwm1_duty(t16);
  5086  0B65  083F               	movf	pid_run_process@t16+1,w
  5087  0B66  00F3               	movwf	set_idrv_pwm1_duty@duty+1
  5088  0B67  083E               	movf	pid_run_process@t16,w
  5089  0B68  00F2               	movwf	set_idrv_pwm1_duty@duty
  5090  0B69  2DC9               	ljmp	l2062
  5091  0B6A                     __end_of_pid_run_process:	
  5092  0B6A                     __ptext5:	
  5093 ;; *************** function _pid_b_b_process *****************
  5094 ;; Defined at:
  5095 ;;		line 169 in file "src/api/sample.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;		None
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;  t32             4   14[BANK0 ] long 
  5100 ;; Return value:  Size  Location     Type
  5101 ;;                  1    wreg      void 
  5102 ;; Registers used:
  5103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5104 ;; Tracked objects:
  5105 ;;		On entry : 1F/0
  5106 ;;		On exit  : 1E/0
  5107 ;;		Unchanged: 0/0
  5108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5109 ;;      Params:         0       0       0       0       0       0       0       0
  5110 ;;      Locals:         0       4       0       0       0       0       0       0
  5111 ;;      Temps:          1       0       0       0       0       0       0       0
  5112 ;;      Totals:         1       4       0       0       0       0       0       0
  5113 ;;Total ram usage:        5 bytes
  5114 ;; Hardware stack levels used:    1
  5115 ;; Hardware stack levels required when called:    3
  5116 ;; This function calls:
  5117 ;;		___aldiv
  5118 ;;		___lmul
  5119 ;;		_set_idrv_pwm1_duty
  5120 ;; This function is called by:
  5121 ;;		_main
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125                           
  5126                           ;psect for function _pid_b_b_process
  5127  0B6A                     _pid_b_b_process:	
  5128                           
  5129                           ;sample.c: 171: int32_t t32;
  5130                           ;sample.c: 172: t32=(resRs-resRc);
  5131                           
  5132                           ;incstack = 0
  5133                           ; Regs used in _pid_b_b_process: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5134  0B6A  086D               	movf	_resRs+3,w
  5135  0B6B  00B1               	movwf	pid_b_b_process@t32+3
  5136  0B6C  086C               	movf	_resRs+2,w
  5137  0B6D  00B0               	movwf	pid_b_b_process@t32+2
  5138  0B6E  086B               	movf	_resRs+1,w
  5139  0B6F  00AF               	movwf	pid_b_b_process@t32+1
  5140  0B70  086A               	movf	_resRs,w
  5141  0B71  00AE               	movwf	pid_b_b_process@t32
  5142  0B72  0866               	movf	_resRc,w
  5143  0B73  02AE               	subwf	pid_b_b_process@t32,f
  5144  0B74  0867               	movf	_resRc+1,w
  5145  0B75  3BAF               	subwfb	pid_b_b_process@t32+1,f
  5146  0B76  0868               	movf	_resRc+2,w
  5147  0B77  3BB0               	subwfb	pid_b_b_process@t32+2,f
  5148  0B78  0869               	movf	_resRc+3,w
  5149  0B79  3BB1               	subwfb	pid_b_b_process@t32+3,f
  5150                           
  5151                           ;sample.c: 173: switch(pidBbSm){
  5152  0B7A  2CD0               	goto	l2374
  5153  0B7B                     l2328:	
  5154                           
  5155                           ;sample.c: 176: case 1:
  5156                           ;sample.c: 177: pidTestNum=0;
  5157  0B7B  01DF               	clrf	_pidTestNum
  5158  0B7C                     l2330:	
  5159                           
  5160                           ;sample.c: 178: set_idrv_pwm1_duty(1200);
  5161  0B7C  30B0               	movlw	176
  5162  0B7D  00F2               	movwf	set_idrv_pwm1_duty@duty
  5163  0B7E  3004               	movlw	4
  5164  0B7F  00F3               	movwf	set_idrv_pwm1_duty@duty+1
  5165  0B80  25C9  3188         	fcall	_set_idrv_pwm1_duty
  5166                           
  5167                           ;sample.c: 179: pidBbSm=2;
  5168  0B82  3002               	movlw	2
  5169  0B83  2B98               	goto	L1
  5170  0B84                     l2334:	
  5171                           ;sample.c: 180: break;
  5172                           
  5173                           
  5174                           ;sample.c: 182: if(t32>3500){
  5175  0B84  1BB1               	btfsc	pid_b_b_process@t32+3,7
  5176  0B85  2CDA               	goto	l2376
  5177  0B86  0831               	movf	pid_b_b_process@t32+3,w
  5178  0B87  1D03               	btfss	3,2
  5179  0B88  2B92               	goto	l2336
  5180  0B89  0830               	movf	pid_b_b_process@t32+2,w
  5181  0B8A  1D03               	btfss	3,2
  5182  0B8B  2B92               	goto	l2336
  5183  0B8C  30AD               	movlw	173
  5184  0B8D  022E               	subwf	pid_b_b_process@t32,w
  5185  0B8E  300D               	movlw	13
  5186  0B8F  3B2F               	subwfb	pid_b_b_process@t32+1,w
  5187  0B90  1C03               	btfss	3,0
  5188  0B91  2CDA               	goto	l2376
  5189  0B92                     l2336:	
  5190                           
  5191                           ;sample.c: 183: set_idrv_pwm1_duty(2);
  5192  0B92  3002               	movlw	2
  5193  0B93  00F2               	movwf	set_idrv_pwm1_duty@duty
  5194  0B94  01F3               	clrf	set_idrv_pwm1_duty@duty+1
  5195  0B95  25C9  3188         	fcall	_set_idrv_pwm1_duty
  5196                           
  5197                           ;sample.c: 184: pidBbSm=3;
  5198  0B97  3003               	movlw	3
  5199  0B98                     L1:	
  5200  0B98  0020               	movlb	0	; select bank0
  5201  0B99  2CCE               	goto	L3
  5202  0B9A                     l2340:	
  5203                           ;sample.c: 185: break;
  5204                           
  5205                           
  5206                           ;sample.c: 189: if(t32<500){
  5207  0B9A  1BB1               	btfsc	pid_b_b_process@t32+3,7
  5208  0B9B  2BA8               	goto	l2342
  5209  0B9C  0831               	movf	pid_b_b_process@t32+3,w
  5210  0B9D  1D03               	btfss	3,2
  5211  0B9E  2CDA               	goto	l2376
  5212  0B9F  0830               	movf	pid_b_b_process@t32+2,w
  5213  0BA0  1D03               	btfss	3,2
  5214  0BA1  2CDA               	goto	l2376
  5215  0BA2  30F4               	movlw	244
  5216  0BA3  022E               	subwf	pid_b_b_process@t32,w
  5217  0BA4  3001               	movlw	1
  5218  0BA5  3B2F               	subwfb	pid_b_b_process@t32+1,w
  5219  0BA6  1803               	btfsc	3,0
  5220  0BA7  2CDA               	goto	l2376
  5221  0BA8                     l2342:	
  5222                           
  5223                           ;sample.c: 190: bbt0=bbt1;
  5224  0BA8  0021               	movlb	1	; select bank1
  5225  0BA9  083B               	movf	(_bbt1+3)^(0+128),w
  5226  0BAA  00B7               	movwf	(_bbt0+3)^(0+128)
  5227  0BAB  083A               	movf	(_bbt1+2)^(0+128),w
  5228  0BAC  00B6               	movwf	(_bbt0+2)^(0+128)
  5229  0BAD  0839               	movf	(_bbt1+1)^(0+128),w
  5230  0BAE  00B5               	movwf	(_bbt0+1)^(0+128)
  5231  0BAF  0838               	movf	_bbt1^(0+128),w
  5232  0BB0  00B4               	movwf	_bbt0^(0+128)
  5233                           
  5234                           ;sample.c: 191: bbt1=globalTicker;
  5235  0BB1  0020               	movlb	0	; select bank0
  5236  0BB2  084F               	movf	_globalTicker+3,w	;volatile
  5237  0BB3  0021               	movlb	1	; select bank1
  5238  0BB4  00BB               	movwf	(_bbt1+3)^(0+128)
  5239  0BB5  0020               	movlb	0	; select bank0
  5240  0BB6  084E               	movf	_globalTicker+2,w	;volatile
  5241  0BB7  0021               	movlb	1	; select bank1
  5242  0BB8  00BA               	movwf	(_bbt1+2)^(0+128)
  5243  0BB9  0020               	movlb	0	; select bank0
  5244  0BBA  084D               	movf	_globalTicker+1,w	;volatile
  5245  0BBB  0021               	movlb	1	; select bank1
  5246  0BBC  00B9               	movwf	(_bbt1+1)^(0+128)
  5247  0BBD  0020               	movlb	0	; select bank0
  5248  0BBE  084C               	movf	_globalTicker,w	;volatile
  5249  0BBF  0021               	movlb	1	; select bank1
  5250  0BC0  00B8               	movwf	_bbt1^(0+128)
  5251                           
  5252                           ;sample.c: 192: pidTestNum++;
  5253  0BC1  0020               	movlb	0	; select bank0
  5254  0BC2  3006               	movlw	6
  5255  0BC3  0ADF               	incf	_pidTestNum,f
  5256                           
  5257                           ;sample.c: 193: if(pidTestNum>5){
  5258  0BC4  025F               	subwf	_pidTestNum,w
  5259  0BC5  1C03               	skipc
  5260  0BC6  2B7C               	goto	l2330
  5261                           
  5262                           ;sample.c: 194: pidBbSm=4;
  5263  0BC7  3004               	movlw	4
  5264  0BC8  2CCE               	goto	L3
  5265  0BC9                     l2354:	
  5266                           ;sample.c: 195: break;
  5267                           
  5268                           
  5269                           ;sample.c: 203: bbtu=bbt1-bbt0;
  5270  0BC9  0021               	movlb	1	; select bank1
  5271  0BCA  083B               	movf	(_bbt1+3)^(0+128),w
  5272  0BCB  0020               	movlb	0	; select bank0
  5273  0BCC  00CB               	movwf	_bbtu+3
  5274  0BCD  0021               	movlb	1	; select bank1
  5275  0BCE  083A               	movf	(_bbt1+2)^(0+128),w
  5276  0BCF  0020               	movlb	0	; select bank0
  5277  0BD0  00CA               	movwf	_bbtu+2
  5278  0BD1  0021               	movlb	1	; select bank1
  5279  0BD2  0839               	movf	(_bbt1+1)^(0+128),w
  5280  0BD3  0020               	movlb	0	; select bank0
  5281  0BD4  00C9               	movwf	_bbtu+1
  5282  0BD5  0021               	movlb	1	; select bank1
  5283  0BD6  0838               	movf	_bbt1^(0+128),w
  5284  0BD7  0020               	movlb	0	; select bank0
  5285  0BD8  00C8               	movwf	_bbtu
  5286  0BD9  0021               	movlb	1	; select bank1
  5287  0BDA  0834               	movf	_bbt0^(0+128),w
  5288  0BDB  0020               	movlb	0	; select bank0
  5289  0BDC  02C8               	subwf	_bbtu,f
  5290  0BDD  0021               	movlb	1	; select bank1
  5291  0BDE  0835               	movf	(_bbt0+1)^(0+128),w
  5292  0BDF  0020               	movlb	0	; select bank0
  5293  0BE0  3BC9               	subwfb	_bbtu+1,f
  5294  0BE1  0021               	movlb	1	; select bank1
  5295  0BE2  0836               	movf	(_bbt0+2)^(0+128),w
  5296  0BE3  0020               	movlb	0	; select bank0
  5297  0BE4  3BCA               	subwfb	_bbtu+2,f
  5298  0BE5  0021               	movlb	1	; select bank1
  5299  0BE6  0837               	movf	(_bbt0+3)^(0+128),w
  5300  0BE7  0020               	movlb	0	; select bank0
  5301  0BE8  3BCB               	subwfb	_bbtu+3,f
  5302                           
  5303                           ;sample.c: 204: bbtu=bbtu/5;
  5304  0BE9  3005               	movlw	5
  5305  0BEA  00A0               	movwf	___aldiv@divisor
  5306  0BEB  279E  3188         	fcall	PL4	;call to abstracted procedure
  5307  0BED  2538  3188         	fcall	___aldiv
  5308  0BEF  0823               	movf	?___aldiv+3,w
  5309  0BF0  00CB               	movwf	_bbtu+3
  5310  0BF1  0822               	movf	?___aldiv+2,w
  5311  0BF2  00CA               	movwf	_bbtu+2
  5312  0BF3  0821               	movf	?___aldiv+1,w
  5313  0BF4  00C9               	movwf	_bbtu+1
  5314  0BF5  0820               	movf	?___aldiv,w
  5315  0BF6  00C8               	movwf	_bbtu
  5316                           
  5317                           ;sample.c: 205: bbta=(bbmax-bbmin)/2;
  5318  0BF7  0021               	movlb	1	; select bank1
  5319  0BF8  0857               	movf	(_bbmax+3)^(0+128),w
  5320  0BF9  0020               	movlb	0	; select bank0
  5321  0BFA  00A7               	movwf	___aldiv@dividend+3
  5322  0BFB  0021               	movlb	1	; select bank1
  5323  0BFC  0856               	movf	(_bbmax+2)^(0+128),w
  5324  0BFD  0020               	movlb	0	; select bank0
  5325  0BFE  00A6               	movwf	___aldiv@dividend+2
  5326  0BFF  0021               	movlb	1	; select bank1
  5327  0C00  0855               	movf	(_bbmax+1)^(0+128),w
  5328  0C01  0020               	movlb	0	; select bank0
  5329  0C02  00A5               	movwf	___aldiv@dividend+1
  5330  0C03  0021               	movlb	1	; select bank1
  5331  0C04  0854               	movf	_bbmax^(0+128),w
  5332  0C05  0020               	movlb	0	; select bank0
  5333  0C06  00A4               	movwf	___aldiv@dividend
  5334  0C07  0021               	movlb	1	; select bank1
  5335  0C08  0858               	movf	_bbmin^(0+128),w
  5336  0C09  0020               	movlb	0	; select bank0
  5337  0C0A  02A4               	subwf	___aldiv@dividend,f
  5338  0C0B  0021               	movlb	1	; select bank1
  5339  0C0C  0859               	movf	(_bbmin+1)^(0+128),w
  5340  0C0D  0020               	movlb	0	; select bank0
  5341  0C0E  3BA5               	subwfb	___aldiv@dividend+1,f
  5342  0C0F  0021               	movlb	1	; select bank1
  5343  0C10  085A               	movf	(_bbmin+2)^(0+128),w
  5344  0C11  0020               	movlb	0	; select bank0
  5345  0C12  3BA6               	subwfb	___aldiv@dividend+2,f
  5346  0C13  0021               	movlb	1	; select bank1
  5347  0C14  085B               	movf	(_bbmin+3)^(0+128),w
  5348  0C15  0020               	movlb	0	; select bank0
  5349  0C16  3BA7               	subwfb	___aldiv@dividend+3,f
  5350  0C17  3002               	movlw	2
  5351  0C18  00A0               	movwf	___aldiv@divisor
  5352  0C19  01A1               	clrf	___aldiv@divisor+1
  5353  0C1A  01A2               	clrf	___aldiv@divisor+2
  5354  0C1B  01A3               	clrf	___aldiv@divisor+3
  5355  0C1C  2538  3188         	fcall	___aldiv
  5356  0C1E  0823               	movf	?___aldiv+3,w
  5357  0C1F  0021               	movlb	1	; select bank1
  5358  0C20  00BF               	movwf	(_bbta+3)^(0+128)
  5359  0C21  0020               	movlb	0	; select bank0
  5360  0C22  0822               	movf	?___aldiv+2,w
  5361  0C23  0021               	movlb	1	; select bank1
  5362  0C24  00BE               	movwf	(_bbta+2)^(0+128)
  5363  0C25  0020               	movlb	0	; select bank0
  5364  0C26  0821               	movf	?___aldiv+1,w
  5365  0C27  0021               	movlb	1	; select bank1
  5366  0C28  00BD               	movwf	(_bbta+1)^(0+128)
  5367  0C29  0020               	movlb	0	; select bank0
  5368  0C2A  0820               	movf	?___aldiv,w
  5369  0C2B  0021               	movlb	1	; select bank1
  5370  0C2C  00BC               	movwf	_bbta^(0+128)
  5371                           
  5372                           ;sample.c: 206: bbu=(1200-2)/2;
  5373  0C2D  3002               	movlw	2
  5374  0C2E  01C3               	clrf	(_bbu+3)^(0+128)
  5375  0C2F  01C2               	clrf	(_bbu+2)^(0+128)
  5376  0C30  00C1               	movwf	(_bbu+1)^(0+128)
  5377  0C31  3057               	movlw	87
  5378  0C32  00C0               	movwf	_bbu^(0+128)
  5379                           
  5380                           ;sample.c: 208: bbku=(bbu*40000)/(bbta*314);
  5381  0C33  083F               	movf	(_bbta+3)^(0+128),w
  5382  0C34  00F3               	movwf	___lmul@multiplier+3
  5383  0C35  083E               	movf	(_bbta+2)^(0+128),w
  5384  0C36  00F2               	movwf	___lmul@multiplier+2
  5385  0C37  083D               	movf	(_bbta+1)^(0+128),w
  5386  0C38  00F1               	movwf	___lmul@multiplier+1
  5387  0C39  083C               	movf	_bbta^(0+128),w
  5388  0C3A  00F0               	movwf	___lmul@multiplier
  5389  0C3B  3001               	movlw	1
  5390  0C3C  01F7               	clrf	___lmul@multiplicand+3
  5391  0C3D  01F6               	clrf	___lmul@multiplicand+2
  5392  0C3E  00F5               	movwf	___lmul@multiplicand+1
  5393  0C3F  303A               	movlw	58
  5394  0C40  00F4               	movwf	___lmul@multiplicand
  5395  0C41  25A4  3188         	fcall	___lmul
  5396  0C43  0873               	movf	?___lmul+3,w
  5397  0C44  0020               	movlb	0	; select bank0
  5398  0C45  00A3               	movwf	___aldiv@divisor+3
  5399  0C46  0872               	movf	?___lmul+2,w
  5400  0C47  00A2               	movwf	___aldiv@divisor+2
  5401  0C48  0871               	movf	?___lmul+1,w
  5402  0C49  00A1               	movwf	___aldiv@divisor+1
  5403  0C4A  0870               	movf	?___lmul,w
  5404  0C4B  00A0               	movwf	___aldiv@divisor
  5405  0C4C  3002               	movlw	2
  5406  0C4D  01F3               	clrf	___lmul@multiplier+3
  5407  0C4E  01F2               	clrf	___lmul@multiplier+2
  5408  0C4F  00F1               	movwf	___lmul@multiplier+1
  5409  0C50  3057               	movlw	87
  5410  0C51  00F0               	movwf	___lmul@multiplier
  5411  0C52  309C               	movlw	156
  5412  0C53  01F7               	clrf	___lmul@multiplicand+3
  5413  0C54  01F6               	clrf	___lmul@multiplicand+2
  5414  0C55  00F5               	movwf	___lmul@multiplicand+1
  5415  0C56  3040               	movlw	64
  5416  0C57  00F4               	movwf	___lmul@multiplicand
  5417  0C58  25A4  3188         	fcall	___lmul
  5418  0C5A  2794  3188         	fcall	PL2	;call to abstracted procedure
  5419  0C5C  2538  3188         	fcall	___aldiv
  5420  0C5E  0823               	movf	?___aldiv+3,w
  5421  0C5F  0021               	movlb	1	; select bank1
  5422  0C60  00B3               	movwf	(_bbku+3)^(0+128)
  5423  0C61  0020               	movlb	0	; select bank0
  5424  0C62  0822               	movf	?___aldiv+2,w
  5425  0C63  0021               	movlb	1	; select bank1
  5426  0C64  00B2               	movwf	(_bbku+2)^(0+128)
  5427  0C65  0020               	movlb	0	; select bank0
  5428  0C66  0821               	movf	?___aldiv+1,w
  5429  0C67  0021               	movlb	1	; select bank1
  5430  0C68  00B1               	movwf	(_bbku+1)^(0+128)
  5431  0C69  0020               	movlb	0	; select bank0
  5432  0C6A  0820               	movf	?___aldiv,w
  5433  0C6B  0021               	movlb	1	; select bank1
  5434  0C6C  00B0               	movwf	_bbku^(0+128)
  5435                           
  5436                           ;sample.c: 209: bbku*=100;
  5437  0C6D  3064               	movlw	100
  5438  0C6E  00F0               	movwf	___lmul@multiplier
  5439  0C6F  01F1               	clrf	___lmul@multiplier+1
  5440  0C70  01F2               	clrf	___lmul@multiplier+2
  5441  0C71  01F3               	clrf	___lmul@multiplier+3
  5442  0C72  0833               	movf	(_bbku+3)^(0+128),w
  5443  0C73  00F7               	movwf	___lmul@multiplicand+3
  5444  0C74  0832               	movf	(_bbku+2)^(0+128),w
  5445  0C75  00F6               	movwf	___lmul@multiplicand+2
  5446  0C76  0831               	movf	(_bbku+1)^(0+128),w
  5447  0C77  00F5               	movwf	___lmul@multiplicand+1
  5448  0C78  0830               	movf	_bbku^(0+128),w
  5449  0C79  00F4               	movwf	___lmul@multiplicand
  5450  0C7A  25A4  3188         	fcall	___lmul
  5451  0C7C  0873               	movf	?___lmul+3,w
  5452  0C7D  0021               	movlb	1	; select bank1
  5453  0C7E  00B3               	movwf	(_bbku+3)^(0+128)
  5454  0C7F  0872               	movf	?___lmul+2,w
  5455  0C80  00B2               	movwf	(_bbku+2)^(0+128)
  5456  0C81  0871               	movf	?___lmul+1,w
  5457  0C82  00B1               	movwf	(_bbku+1)^(0+128)
  5458  0C83  0870               	movf	?___lmul,w
  5459  0C84  00B0               	movwf	_bbku^(0+128)
  5460                           
  5461                           ;sample.c: 211: PidKp=bbku*10/17;
  5462  0C85  3011               	movlw	17
  5463  0C86  0020               	movlb	0	; select bank0
  5464  0C87  00A0               	movwf	___aldiv@divisor
  5465  0C88  01A1               	clrf	___aldiv@divisor+1
  5466  0C89  01A2               	clrf	___aldiv@divisor+2
  5467  0C8A  01A3               	clrf	___aldiv@divisor+3
  5468  0C8B  0021               	movlb	1	; select bank1
  5469  0C8C  0833               	movf	(_bbku+3)^(0+128),w
  5470  0C8D  00F3               	movwf	___lmul@multiplier+3
  5471  0C8E  0832               	movf	(_bbku+2)^(0+128),w
  5472  0C8F  00F2               	movwf	___lmul@multiplier+2
  5473  0C90  0831               	movf	(_bbku+1)^(0+128),w
  5474  0C91  00F1               	movwf	___lmul@multiplier+1
  5475  0C92  0830               	movf	_bbku^(0+128),w
  5476  0C93  27C9  3188         	fcall	PL16	;call to abstracted procedure
  5477  0C95  25A4  3188         	fcall	___lmul
  5478  0C97  2794  3188         	fcall	PL2	;call to abstracted procedure
  5479  0C99  2538  3188         	fcall	___aldiv
  5480  0C9B  0823               	movf	?___aldiv+3,w
  5481  0C9C  00C7               	movwf	_PidKp+3
  5482  0C9D  0822               	movf	?___aldiv+2,w
  5483  0C9E  00C6               	movwf	_PidKp+2
  5484  0C9F  0821               	movf	?___aldiv+1,w
  5485  0CA0  00C5               	movwf	_PidKp+1
  5486  0CA1  0820               	movf	?___aldiv,w
  5487  0CA2  00C4               	movwf	_PidKp
  5488                           
  5489                           ;sample.c: 212: PidTi=bbtu*10/20;
  5490  0CA3  3014               	movlw	20
  5491  0CA4  00A0               	movwf	___aldiv@divisor
  5492  0CA5  01A1               	clrf	___aldiv@divisor+1
  5493  0CA6  01A2               	clrf	___aldiv@divisor+2
  5494  0CA7  01A3               	clrf	___aldiv@divisor+3
  5495  0CA8  084B               	movf	_bbtu+3,w
  5496  0CA9  00F3               	movwf	___lmul@multiplier+3
  5497  0CAA  084A               	movf	_bbtu+2,w
  5498  0CAB  00F2               	movwf	___lmul@multiplier+2
  5499  0CAC  0849               	movf	_bbtu+1,w
  5500  0CAD  00F1               	movwf	___lmul@multiplier+1
  5501  0CAE  0848               	movf	_bbtu,w
  5502  0CAF  27C9  3188         	fcall	PL16	;call to abstracted procedure
  5503  0CB1  25A4  3188         	fcall	___lmul
  5504  0CB3  2794  3188         	fcall	PL2	;call to abstracted procedure
  5505  0CB5  2538  3188         	fcall	___aldiv
  5506  0CB7  0823               	movf	?___aldiv+3,w
  5507  0CB8  0021               	movlb	1	; select bank1
  5508  0CB9  00AF               	movwf	(_PidTi+3)^(0+128)
  5509  0CBA  0020               	movlb	0	; select bank0
  5510  0CBB  0822               	movf	?___aldiv+2,w
  5511  0CBC  0021               	movlb	1	; select bank1
  5512  0CBD  00AE               	movwf	(_PidTi+2)^(0+128)
  5513  0CBE  0020               	movlb	0	; select bank0
  5514  0CBF  0821               	movf	?___aldiv+1,w
  5515  0CC0  0021               	movlb	1	; select bank1
  5516  0CC1  00AD               	movwf	(_PidTi+1)^(0+128)
  5517  0CC2  0020               	movlb	0	; select bank0
  5518  0CC3  0820               	movf	?___aldiv,w
  5519  0CC4  0021               	movlb	1	; select bank1
  5520  0CC5  00AC               	movwf	_PidTi^(0+128)
  5521                           
  5522                           ;sample.c: 213: PidTd=bbtu/8;
  5523  0CC6  3008               	movlw	8
  5524  0CC7  0020               	movlb	0	; select bank0
  5525  0CC8  00A0               	movwf	___aldiv@divisor
  5526  0CC9  279E  3188         	fcall	PL4	;call to abstracted procedure
  5527  0CCB  2538  3188         	fcall	___aldiv
  5528                           
  5529                           ;sample.c: 214: pidBbSm=5;
  5530  0CCD  3005               	movlw	5
  5531  0CCE                     L3:	
  5532  0CCE  00DE               	movwf	_pidBbSm
  5533                           
  5534                           ;sample.c: 215: break;
  5535  0CCF  2CDA               	goto	l2376
  5536  0CD0                     l2374:	
  5537  0CD0  085E               	movf	_pidBbSm,w
  5538                           
  5539                           ; Switch size 1, requested type "space"
  5540                           ; Number of cases is 6, Range of values is 0 to 5
  5541                           ; switch strategies available:
  5542                           ; Name         Instructions Cycles
  5543                           ; direct_byte           18     6 (fixed)
  5544                           ; simple_byte           19    10 (average)
  5545                           ; jumptable            260     6 (fixed)
  5546                           ;	Chosen strategy is direct_byte
  5547  0CD1  0084               	movwf	4
  5548  0CD2  3006               	movlw	6
  5549  0CD3  0204               	subwf	4,w
  5550  0CD4  1803               	skipnc
  5551  0CD5  2CDA               	goto	l2376
  5552  0CD6  3181               	movlp	high S2600
  5553  0CD7  3504               	lslf	4,w
  5554  0CD8  3E7E               	addlw	low S2600
  5555  0CD9  0082               	movwf	2
  5556  0CDA                     l2376:	
  5557                           
  5558                           ;sample.c: 217: if(pidTestNum>2){
  5559  0CDA  3003               	movlw	3
  5560  0CDB  025F               	subwf	_pidTestNum,w
  5561  0CDC  1C03               	skipc
  5562  0CDD  0008               	return
  5563                           
  5564                           ;sample.c: 218: if(bbmax<t32)bbmax=t32;
  5565  0CDE  0021               	movlb	1	; select bank1
  5566  0CDF  0857               	movf	(_bbmax+3)^(0+128),w
  5567  0CE0  3A80               	xorlw	128
  5568  0CE1  00FC               	movwf	??_pid_b_b_process
  5569  0CE2  0020               	movlb	0	; select bank0
  5570  0CE3  0831               	movf	pid_b_b_process@t32+3,w
  5571  0CE4  3A80               	xorlw	128
  5572  0CE5  027C               	subwf	??_pid_b_b_process,w
  5573  0CE6  0021               	movlb	1	; select bank1
  5574  0CE7  1D03               	skipz
  5575  0CE8  2CF9               	goto	u1133
  5576  0CE9  0020               	movlb	0	; select bank0
  5577  0CEA  0830               	movf	pid_b_b_process@t32+2,w
  5578  0CEB  0021               	movlb	1	; select bank1
  5579  0CEC  0256               	subwf	(_bbmax+2)^(0+128),w
  5580  0CED  1D03               	skipz
  5581  0CEE  2CF9               	goto	u1133
  5582  0CEF  0020               	movlb	0	; select bank0
  5583  0CF0  082F               	movf	pid_b_b_process@t32+1,w
  5584  0CF1  0021               	movlb	1	; select bank1
  5585  0CF2  0255               	subwf	(_bbmax+1)^(0+128),w
  5586  0CF3  1D03               	skipz
  5587  0CF4  2CF9               	goto	u1133
  5588  0CF5  0020               	movlb	0	; select bank0
  5589  0CF6  082E               	movf	pid_b_b_process@t32,w
  5590  0CF7  0021               	movlb	1	; select bank1
  5591  0CF8  0254               	subwf	_bbmax^(0+128),w
  5592  0CF9                     u1133:	
  5593  0CF9  1803               	skipnc
  5594  0CFA  2D0B               	goto	l641
  5595  0CFB  0020               	movlb	0	; select bank0
  5596  0CFC  0831               	movf	pid_b_b_process@t32+3,w
  5597  0CFD  0021               	movlb	1	; select bank1
  5598  0CFE  00D7               	movwf	(_bbmax+3)^(0+128)
  5599  0CFF  0020               	movlb	0	; select bank0
  5600  0D00  0830               	movf	pid_b_b_process@t32+2,w
  5601  0D01  0021               	movlb	1	; select bank1
  5602  0D02  00D6               	movwf	(_bbmax+2)^(0+128)
  5603  0D03  0020               	movlb	0	; select bank0
  5604  0D04  082F               	movf	pid_b_b_process@t32+1,w
  5605  0D05  0021               	movlb	1	; select bank1
  5606  0D06  00D5               	movwf	(_bbmax+1)^(0+128)
  5607  0D07  0020               	movlb	0	; select bank0
  5608  0D08  082E               	movf	pid_b_b_process@t32,w
  5609  0D09  0021               	movlb	1	; select bank1
  5610  0D0A  00D4               	movwf	_bbmax^(0+128)
  5611  0D0B                     l641:	
  5612                           
  5613                           ;sample.c: 219: if(bbmin>t32)bbmin=t32;
  5614  0D0B  0020               	movlb	0	; select bank0
  5615  0D0C  0831               	movf	pid_b_b_process@t32+3,w
  5616  0D0D  3A80               	xorlw	128
  5617  0D0E  00FC               	movwf	??_pid_b_b_process
  5618  0D0F  0021               	movlb	1	; select bank1
  5619  0D10  085B               	movf	(_bbmin+3)^(0+128),w
  5620  0D11  3A80               	xorlw	128
  5621  0D12  027C               	subwf	??_pid_b_b_process,w
  5622  0D13  0020               	movlb	0	; select bank0
  5623  0D14  1D03               	skipz
  5624  0D15  2D26               	goto	u1143
  5625  0D16  0021               	movlb	1	; select bank1
  5626  0D17  085A               	movf	(_bbmin+2)^(0+128),w
  5627  0D18  0020               	movlb	0	; select bank0
  5628  0D19  0230               	subwf	pid_b_b_process@t32+2,w
  5629  0D1A  1D03               	skipz
  5630  0D1B  2D26               	goto	u1143
  5631  0D1C  0021               	movlb	1	; select bank1
  5632  0D1D  0859               	movf	(_bbmin+1)^(0+128),w
  5633  0D1E  0020               	movlb	0	; select bank0
  5634  0D1F  022F               	subwf	pid_b_b_process@t32+1,w
  5635  0D20  1D03               	skipz
  5636  0D21  2D26               	goto	u1143
  5637  0D22  0021               	movlb	1	; select bank1
  5638  0D23  0858               	movf	_bbmin^(0+128),w
  5639  0D24  0020               	movlb	0	; select bank0
  5640  0D25  022E               	subwf	pid_b_b_process@t32,w
  5641  0D26                     u1143:	
  5642  0D26  1803               	skipnc
  5643  0D27  0008               	return
  5644  0D28  0831               	movf	pid_b_b_process@t32+3,w
  5645  0D29  0021               	movlb	1	; select bank1
  5646  0D2A  00DB               	movwf	(_bbmin+3)^(0+128)
  5647  0D2B  0020               	movlb	0	; select bank0
  5648  0D2C  0830               	movf	pid_b_b_process@t32+2,w
  5649  0D2D  0021               	movlb	1	; select bank1
  5650  0D2E  00DA               	movwf	(_bbmin+2)^(0+128)
  5651  0D2F  0020               	movlb	0	; select bank0
  5652  0D30  082F               	movf	pid_b_b_process@t32+1,w
  5653  0D31  0021               	movlb	1	; select bank1
  5654  0D32  00D9               	movwf	(_bbmin+1)^(0+128)
  5655  0D33  0020               	movlb	0	; select bank0
  5656  0D34  082E               	movf	pid_b_b_process@t32,w
  5657  0D35  0021               	movlb	1	; select bank1
  5658  0D36  00D8               	movwf	_bbmin^(0+128)
  5659  0D37                     l630:	
  5660  0D37  0008               	return
  5661  0D38                     __end_of_pid_b_b_process:	
  5662  0D38                     __ptext12:	
  5663 ;; *************** function ___aldiv *****************
  5664 ;; Defined at:
  5665 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\aldiv.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;  divisor         4    0[BANK0 ] long 
  5668 ;;  dividend        4    4[BANK0 ] long 
  5669 ;; Auto vars:     Size  Location     Type
  5670 ;;  quotient        4   10[BANK0 ] long 
  5671 ;;  sign            1    9[BANK0 ] unsigned char 
  5672 ;;  counter         1    8[BANK0 ] unsigned char 
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  4    0[BANK0 ] long 
  5675 ;; Registers used:
  5676 ;;		wreg, status,2, status,0
  5677 ;; Tracked objects:
  5678 ;;		On entry : 1F/0
  5679 ;;		On exit  : 1F/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5682 ;;      Params:         0       8       0       0       0       0       0       0
  5683 ;;      Locals:         0       6       0       0       0       0       0       0
  5684 ;;      Temps:          0       0       0       0       0       0       0       0
  5685 ;;      Totals:         0      14       0       0       0       0       0       0
  5686 ;;Total ram usage:       14 bytes
  5687 ;; Hardware stack levels used:    1
  5688 ;; Hardware stack levels required when called:    1
  5689 ;; This function calls:
  5690 ;;		Nothing
  5691 ;; This function is called by:
  5692 ;;		_pid_b_b_process
  5693 ;;		_pid_run_process
  5694 ;;		_m_int_2_str_ex
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698                           
  5699                           ;psect for function ___aldiv
  5700  0D38                     ___aldiv:	
  5701                           
  5702                           ;incstack = 0
  5703                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  5704  0D38  01A9               	clrf	___aldiv@sign
  5705  0D39  1FA3               	btfss	___aldiv@divisor+3,7
  5706  0D3A  2D48               	goto	l943
  5707  0D3B  09A0               	comf	___aldiv@divisor,f
  5708  0D3C  09A1               	comf	___aldiv@divisor+1,f
  5709  0D3D  09A2               	comf	___aldiv@divisor+2,f
  5710  0D3E  09A3               	comf	___aldiv@divisor+3,f
  5711  0D3F  0AA0               	incf	___aldiv@divisor,f
  5712  0D40  1903               	skipnz
  5713  0D41  0AA1               	incf	___aldiv@divisor+1,f
  5714  0D42  1903               	skipnz
  5715  0D43  0AA2               	incf	___aldiv@divisor+2,f
  5716  0D44  1903               	skipnz
  5717  0D45  0AA3               	incf	___aldiv@divisor+3,f
  5718  0D46  01A9               	clrf	___aldiv@sign
  5719  0D47  0AA9               	incf	___aldiv@sign,f
  5720  0D48                     l943:	
  5721  0D48  1FA7               	btfss	___aldiv@dividend+3,7
  5722  0D49  2D57               	goto	l2140
  5723  0D4A  09A4               	comf	___aldiv@dividend,f
  5724  0D4B  09A5               	comf	___aldiv@dividend+1,f
  5725  0D4C  09A6               	comf	___aldiv@dividend+2,f
  5726  0D4D  09A7               	comf	___aldiv@dividend+3,f
  5727  0D4E  0AA4               	incf	___aldiv@dividend,f
  5728  0D4F  1903               	skipnz
  5729  0D50  0AA5               	incf	___aldiv@dividend+1,f
  5730  0D51  1903               	skipnz
  5731  0D52  0AA6               	incf	___aldiv@dividend+2,f
  5732  0D53  1903               	skipnz
  5733  0D54  0AA7               	incf	___aldiv@dividend+3,f
  5734  0D55  3001               	movlw	1
  5735  0D56  06A9               	xorwf	___aldiv@sign,f
  5736  0D57                     l2140:	
  5737  0D57  01AA               	clrf	___aldiv@quotient
  5738  0D58  01AB               	clrf	___aldiv@quotient+1
  5739  0D59  01AC               	clrf	___aldiv@quotient+2
  5740  0D5A  01AD               	clrf	___aldiv@quotient+3
  5741  0D5B  0823               	movf	___aldiv@divisor+3,w
  5742  0D5C  0422               	iorwf	___aldiv@divisor+2,w
  5743  0D5D  0421               	iorwf	___aldiv@divisor+1,w
  5744  0D5E  0420               	iorwf	___aldiv@divisor,w
  5745  0D5F  1903               	skipnz
  5746  0D60  2D8D               	goto	l2162
  5747  0D61  01A8               	clrf	___aldiv@counter
  5748  0D62                     L5:	
  5749  0D62  0AA8               	incf	___aldiv@counter,f
  5750  0D63  1BA3               	btfsc	___aldiv@divisor+3,7
  5751  0D64  2D6A               	goto	l2150
  5752  0D65  35A0               	lslf	___aldiv@divisor,f
  5753  0D66  0DA1               	rlf	___aldiv@divisor+1,f
  5754  0D67  0DA2               	rlf	___aldiv@divisor+2,f
  5755  0D68  0DA3               	rlf	___aldiv@divisor+3,f
  5756  0D69  2D62               	goto	L5
  5757  0D6A                     l2150:	
  5758  0D6A  35AA               	lslf	___aldiv@quotient,f
  5759  0D6B  0DAB               	rlf	___aldiv@quotient+1,f
  5760  0D6C  0DAC               	rlf	___aldiv@quotient+2,f
  5761  0D6D  0DAD               	rlf	___aldiv@quotient+3,f
  5762  0D6E  0823               	movf	___aldiv@divisor+3,w
  5763  0D6F  0227               	subwf	___aldiv@dividend+3,w
  5764  0D70  1D03               	skipz
  5765  0D71  2D7C               	goto	u815
  5766  0D72  0822               	movf	___aldiv@divisor+2,w
  5767  0D73  0226               	subwf	___aldiv@dividend+2,w
  5768  0D74  1D03               	skipz
  5769  0D75  2D7C               	goto	u815
  5770  0D76  0821               	movf	___aldiv@divisor+1,w
  5771  0D77  0225               	subwf	___aldiv@dividend+1,w
  5772  0D78  1D03               	skipz
  5773  0D79  2D7C               	goto	u815
  5774  0D7A  0820               	movf	___aldiv@divisor,w
  5775  0D7B  0224               	subwf	___aldiv@dividend,w
  5776  0D7C                     u815:	
  5777  0D7C  1C03               	skipc
  5778  0D7D  2D87               	goto	l2158
  5779  0D7E  0820               	movf	___aldiv@divisor,w
  5780  0D7F  02A4               	subwf	___aldiv@dividend,f
  5781  0D80  0821               	movf	___aldiv@divisor+1,w
  5782  0D81  3BA5               	subwfb	___aldiv@dividend+1,f
  5783  0D82  0822               	movf	___aldiv@divisor+2,w
  5784  0D83  3BA6               	subwfb	___aldiv@dividend+2,f
  5785  0D84  0823               	movf	___aldiv@divisor+3,w
  5786  0D85  3BA7               	subwfb	___aldiv@dividend+3,f
  5787  0D86  142A               	bsf	___aldiv@quotient,0
  5788  0D87                     l2158:	
  5789  0D87  36A3               	lsrf	___aldiv@divisor+3,f
  5790  0D88  0CA2               	rrf	___aldiv@divisor+2,f
  5791  0D89  0CA1               	rrf	___aldiv@divisor+1,f
  5792  0D8A  0CA0               	rrf	___aldiv@divisor,f
  5793  0D8B  0BA8               	decfsz	___aldiv@counter,f
  5794  0D8C  2D6A               	goto	l2150
  5795  0D8D                     l2162:	
  5796  0D8D  0829               	movf	___aldiv@sign,w
  5797  0D8E  1903               	btfsc	3,2
  5798  0D8F  2D9B               	goto	l2166
  5799  0D90  09AA               	comf	___aldiv@quotient,f
  5800  0D91  09AB               	comf	___aldiv@quotient+1,f
  5801  0D92  09AC               	comf	___aldiv@quotient+2,f
  5802  0D93  09AD               	comf	___aldiv@quotient+3,f
  5803  0D94  0AAA               	incf	___aldiv@quotient,f
  5804  0D95  1903               	skipnz
  5805  0D96  0AAB               	incf	___aldiv@quotient+1,f
  5806  0D97  1903               	skipnz
  5807  0D98  0AAC               	incf	___aldiv@quotient+2,f
  5808  0D99  1903               	skipnz
  5809  0D9A  0AAD               	incf	___aldiv@quotient+3,f
  5810  0D9B                     l2166:	
  5811  0D9B  082D               	movf	___aldiv@quotient+3,w
  5812  0D9C  00A3               	movwf	?___aldiv+3
  5813  0D9D  082C               	movf	___aldiv@quotient+2,w
  5814  0D9E  00A2               	movwf	?___aldiv+2
  5815  0D9F  082B               	movf	___aldiv@quotient+1,w
  5816  0DA0  00A1               	movwf	?___aldiv+1
  5817  0DA1  082A               	movf	___aldiv@quotient,w
  5818  0DA2  00A0               	movwf	?___aldiv
  5819  0DA3  0008               	return
  5820  0DA4                     __end_of___aldiv:	
  5821  0DA4                     __ptext17:	
  5822 ;; *************** function ___lmul *****************
  5823 ;; Defined at:
  5824 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul32.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;  multiplier      4    0[COMMON] unsigned long 
  5827 ;;  multiplicand    4    4[COMMON] unsigned long 
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;  product         4    8[COMMON] unsigned long 
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  4    0[COMMON] unsigned long 
  5832 ;; Registers used:
  5833 ;;		wreg, status,2, status,0
  5834 ;; Tracked objects:
  5835 ;;		On entry : 1E/0
  5836 ;;		On exit  : 1E/0
  5837 ;;		Unchanged: 1E/0
  5838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5839 ;;      Params:         8       0       0       0       0       0       0       0
  5840 ;;      Locals:         4       0       0       0       0       0       0       0
  5841 ;;      Temps:          0       0       0       0       0       0       0       0
  5842 ;;      Totals:        12       0       0       0       0       0       0       0
  5843 ;;Total ram usage:       12 bytes
  5844 ;; Hardware stack levels used:    1
  5845 ;; Hardware stack levels required when called:    1
  5846 ;; This function calls:
  5847 ;;		Nothing
  5848 ;; This function is called by:
  5849 ;;		_calc_temp_rs
  5850 ;;		_calc_temp_rc
  5851 ;;		_pid_b_b_process
  5852 ;;		_pid_run_process
  5853 ;;		_cal_voout_pwm_duty
  5854 ;; This function uses a non-reentrant model
  5855 ;;
  5856                           
  5857                           
  5858                           ;psect for function ___lmul
  5859  0DA4                     ___lmul:	
  5860                           
  5861                           ;incstack = 0
  5862                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5863  0DA4  01F8               	clrf	___lmul@product
  5864  0DA5  01F9               	clrf	___lmul@product+1
  5865  0DA6  01FA               	clrf	___lmul@product+2
  5866  0DA7  01FB               	clrf	___lmul@product+3
  5867  0DA8                     l899:	
  5868  0DA8  1C70               	btfss	___lmul@multiplier,0
  5869  0DA9  2DB2               	goto	l2122
  5870  0DAA  0874               	movf	___lmul@multiplicand,w
  5871  0DAB  07F8               	addwf	___lmul@product,f
  5872  0DAC  0875               	movf	___lmul@multiplicand+1,w
  5873  0DAD  3DF9               	addwfc	___lmul@product+1,f
  5874  0DAE  0876               	movf	___lmul@multiplicand+2,w
  5875  0DAF  3DFA               	addwfc	___lmul@product+2,f
  5876  0DB0  0877               	movf	___lmul@multiplicand+3,w
  5877  0DB1  3DFB               	addwfc	___lmul@product+3,f
  5878  0DB2                     l2122:	
  5879  0DB2  35F4               	lslf	___lmul@multiplicand,f
  5880  0DB3  0DF5               	rlf	___lmul@multiplicand+1,f
  5881  0DB4  0DF6               	rlf	___lmul@multiplicand+2,f
  5882  0DB5  0DF7               	rlf	___lmul@multiplicand+3,f
  5883  0DB6  36F3               	lsrf	___lmul@multiplier+3,f
  5884  0DB7  0CF2               	rrf	___lmul@multiplier+2,f
  5885  0DB8  0CF1               	rrf	___lmul@multiplier+1,f
  5886  0DB9  0CF0               	rrf	___lmul@multiplier,f
  5887  0DBA  0873               	movf	___lmul@multiplier+3,w
  5888  0DBB  0472               	iorwf	___lmul@multiplier+2,w
  5889  0DBC  0471               	iorwf	___lmul@multiplier+1,w
  5890  0DBD  0470               	iorwf	___lmul@multiplier,w
  5891  0DBE  1D03               	skipz
  5892  0DBF  2DA8               	goto	l899
  5893  0DC0  087B               	movf	___lmul@product+3,w
  5894  0DC1  00F3               	movwf	?___lmul+3
  5895  0DC2  087A               	movf	___lmul@product+2,w
  5896  0DC3  00F2               	movwf	?___lmul+2
  5897  0DC4  0879               	movf	___lmul@product+1,w
  5898  0DC5  00F1               	movwf	?___lmul+1
  5899  0DC6  0878               	movf	___lmul@product,w
  5900  0DC7  00F0               	movwf	?___lmul
  5901  0DC8  0008               	return
  5902  0DC9                     __end_of___lmul:	
  5903  0DC9                     __ptext6:	
  5904 ;; *************** function _set_idrv_pwm1_duty *****************
  5905 ;; Defined at:
  5906 ;;		line 24 in file "src/api/sample.c"
  5907 ;; Parameters:    Size  Location     Type
  5908 ;;  duty            2    2[COMMON] unsigned int 
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;  t16             2    4[COMMON] unsigned int 
  5911 ;; Return value:  Size  Location     Type
  5912 ;;                  1    wreg      void 
  5913 ;; Registers used:
  5914 ;;		wreg, pclath, cstack
  5915 ;; Tracked objects:
  5916 ;;		On entry : 1F/0
  5917 ;;		On exit  : 1F/1B
  5918 ;;		Unchanged: 0/0
  5919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5920 ;;      Params:         2       0       0       0       0       0       0       0
  5921 ;;      Locals:         2       0       0       0       0       0       0       0
  5922 ;;      Temps:          0       0       0       0       0       0       0       0
  5923 ;;      Totals:         4       0       0       0       0       0       0       0
  5924 ;;Total ram usage:        4 bytes
  5925 ;; Hardware stack levels used:    1
  5926 ;; Hardware stack levels required when called:    2
  5927 ;; This function calls:
  5928 ;;		_get_idrv_pwm1_duty
  5929 ;; This function is called by:
  5930 ;;		_pid_b_b_process
  5931 ;;		_pid_run_process
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           
  5936                           ;psect for function _set_idrv_pwm1_duty
  5937  0DC9                     _set_idrv_pwm1_duty:	
  5938  0DC9                     l2062:	
  5939                           ;incstack = 0
  5940                           ; Regs used in _set_idrv_pwm1_duty: [wreg+pclath+cstack]
  5941                           
  5942                           
  5943                           ;sample.c: 26: uint16_t t16;
  5944                           ;sample.c: 27: t16=get_idrv_pwm1_duty();
  5945  0DC9  2771  3188         	fcall	_get_idrv_pwm1_duty
  5946  0DCB  0871               	movf	?_get_idrv_pwm1_duty+1,w
  5947  0DCC  00F5               	movwf	set_idrv_pwm1_duty@t16+1
  5948  0DCD  0870               	movf	?_get_idrv_pwm1_duty,w
  5949  0DCE  00F4               	movwf	set_idrv_pwm1_duty@t16
  5950                           
  5951                           ;sample.c: 28: if(t16==duty)return;
  5952  0DCF  0873               	movf	set_idrv_pwm1_duty@duty+1,w
  5953  0DD0  0675               	xorwf	set_idrv_pwm1_duty@t16+1,w
  5954  0DD1  1D03               	skipz
  5955  0DD2  2DD5               	goto	u695
  5956  0DD3  0872               	movf	set_idrv_pwm1_duty@duty,w
  5957  0DD4  0674               	xorwf	set_idrv_pwm1_duty@t16,w
  5958  0DD5                     u695:	
  5959  0DD5  1903               	btfsc	3,2
  5960  0DD6  0008               	return
  5961                           
  5962                           ;sample.c: 29: PWM1CONbits.EN = 0;
  5963  0DD7  139B               	bcf	27,7	;volatile
  5964                           
  5965                           ;sample.c: 30: PWM1DCL= (uint8_t)(duty&0xff);
  5966  0DD8  0872               	movf	set_idrv_pwm1_duty@duty,w
  5967  0DD9  0093               	movwf	19	;volatile
  5968                           
  5969                           ;sample.c: 31: PWM1DCH=(uint8_t)(duty>>8);
  5970  0DDA  0873               	movf	set_idrv_pwm1_duty@duty+1,w
  5971  0DDB  0094               	movwf	20	;volatile
  5972                           
  5973                           ;sample.c: 32: PWM1CONbits.EN = 1;
  5974  0DDC  179B               	bsf	27,7	;volatile
  5975  0DDD  0008               	return
  5976  0DDE                     __end_of_set_idrv_pwm1_duty:	
  5977  0DDE                     __ptext28:	
  5978 ;; *************** function _PWM1_Initialize *****************
  5979 ;; Defined at:
  5980 ;;		line 58 in file "mcc_generated_files/pwm1.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;		None
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;		None
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  1    wreg      void 
  5987 ;; Registers used:
  5988 ;;		wreg, status,2
  5989 ;; Tracked objects:
  5990 ;;		On entry : 1F/2
  5991 ;;		On exit  : 1F/1B
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5994 ;;      Params:         0       0       0       0       0       0       0       0
  5995 ;;      Locals:         0       0       0       0       0       0       0       0
  5996 ;;      Temps:          0       0       0       0       0       0       0       0
  5997 ;;      Totals:         0       0       0       0       0       0       0       0
  5998 ;;Total ram usage:        0 bytes
  5999 ;; Hardware stack levels used:    1
  6000 ;; Hardware stack levels required when called:    1
  6001 ;; This function calls:
  6002 ;;		Nothing
  6003 ;; This function is called by:
  6004 ;;		_SYSTEM_Initialize
  6005 ;; This function uses a non-reentrant model
  6006 ;;
  6007                           
  6008                           
  6009                           ;psect for function _PWM1_Initialize
  6010  0DDE                     _PWM1_Initialize:	
  6011                           
  6012                           ;pwm1.c: 63: PWM1INTE = 0x00;
  6013                           
  6014                           ;incstack = 0
  6015                           ; Regs used in _PWM1_Initialize: [wreg+status,2]
  6016  0DDE  003B               	movlb	27	; select bank27
  6017  0DDF  019C               	clrf	28	;volatile
  6018                           
  6019                           ;pwm1.c: 66: PWM1INTF = 0x00;
  6020  0DE0  019D               	clrf	29	;volatile
  6021                           
  6022                           ;pwm1.c: 69: PWM1CLKCON = 0x00;
  6023  0DE1  019E               	clrf	30	;volatile
  6024                           
  6025                           ;pwm1.c: 72: PWM1LDCON = 0x80;
  6026  0DE2  3080               	movlw	128
  6027  0DE3  009F               	movwf	31	;volatile
  6028                           
  6029                           ;pwm1.c: 75: PWM1OFCON = 0x00;
  6030  0DE4  01A0               	clrf	32	;volatile
  6031                           
  6032                           ;pwm1.c: 78: PWM1PHH = 0x00;
  6033  0DE5  0192               	clrf	18	;volatile
  6034                           
  6035                           ;pwm1.c: 81: PWM1PHL = 0x00;
  6036  0DE6  0191               	clrf	17	;volatile
  6037                           
  6038                           ;pwm1.c: 84: PWM1DCH = 0x00;
  6039  0DE7  0194               	clrf	20	;volatile
  6040                           
  6041                           ;pwm1.c: 87: PWM1DCL = 0xa0;
  6042  0DE8  30A0               	movlw	160
  6043  0DE9  0093               	movwf	19	;volatile
  6044                           
  6045                           ;pwm1.c: 90: PWM1PRH = 0x06;
  6046  0DEA  3006               	movlw	6
  6047  0DEB  0096               	movwf	22	;volatile
  6048                           
  6049                           ;pwm1.c: 93: PWM1PRL = 0x3F;
  6050  0DEC  303F               	movlw	63
  6051  0DED  0095               	movwf	21	;volatile
  6052                           
  6053                           ;pwm1.c: 96: PWM1OFH = 0x00;
  6054  0DEE  0198               	clrf	24	;volatile
  6055                           
  6056                           ;pwm1.c: 99: PWM1OFL = 0x01;
  6057  0DEF  3001               	movlw	1
  6058  0DF0  0097               	movwf	23	;volatile
  6059                           
  6060                           ;pwm1.c: 102: PWM1TMRH = 0x00;
  6061  0DF1  019A               	clrf	26	;volatile
  6062                           
  6063                           ;pwm1.c: 105: PWM1TMRL = 0x00;
  6064  0DF2  0199               	clrf	25	;volatile
  6065                           
  6066                           ;pwm1.c: 108: PWM1CON = 0x90;
  6067  0DF3  3090               	movlw	144
  6068  0DF4  009B               	movwf	27	;volatile
  6069  0DF5  0008               	return
  6070  0DF6                     __end_of_PWM1_Initialize:	
  6071  0DF6                     __ptext27:	
  6072 ;; *************** function _PWM2_Initialize *****************
  6073 ;; Defined at:
  6074 ;;		line 58 in file "mcc_generated_files/pwm2.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;		None
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;		None
  6079 ;; Return value:  Size  Location     Type
  6080 ;;                  1    wreg      void 
  6081 ;; Registers used:
  6082 ;;		wreg, status,2
  6083 ;; Tracked objects:
  6084 ;;		On entry : 1F/1B
  6085 ;;		On exit  : 1F/1B
  6086 ;;		Unchanged: 0/0
  6087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6088 ;;      Params:         0       0       0       0       0       0       0       0
  6089 ;;      Locals:         0       0       0       0       0       0       0       0
  6090 ;;      Temps:          0       0       0       0       0       0       0       0
  6091 ;;      Totals:         0       0       0       0       0       0       0       0
  6092 ;;Total ram usage:        0 bytes
  6093 ;; Hardware stack levels used:    1
  6094 ;; Hardware stack levels required when called:    1
  6095 ;; This function calls:
  6096 ;;		Nothing
  6097 ;; This function is called by:
  6098 ;;		_SYSTEM_Initialize
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           
  6103                           ;psect for function _PWM2_Initialize
  6104  0DF6                     _PWM2_Initialize:	
  6105                           
  6106                           ;pwm2.c: 63: PWM2INTE = 0x00;
  6107                           
  6108                           ;incstack = 0
  6109                           ; Regs used in _PWM2_Initialize: [wreg+status,2]
  6110  0DF6  01AC               	clrf	44	;volatile
  6111                           
  6112                           ;pwm2.c: 66: PWM2INTF = 0x00;
  6113  0DF7  01AD               	clrf	45	;volatile
  6114                           
  6115                           ;pwm2.c: 69: PWM2CLKCON = 0x00;
  6116  0DF8  01AE               	clrf	46	;volatile
  6117                           
  6118                           ;pwm2.c: 72: PWM2LDCON = 0x80;
  6119  0DF9  3080               	movlw	128
  6120  0DFA  00AF               	movwf	47	;volatile
  6121                           
  6122                           ;pwm2.c: 75: PWM2OFCON = 0x00;
  6123  0DFB  01B0               	clrf	48	;volatile
  6124                           
  6125                           ;pwm2.c: 78: PWM2PHH = 0x00;
  6126  0DFC  01A2               	clrf	34	;volatile
  6127                           
  6128                           ;pwm2.c: 81: PWM2PHL = 0x00;
  6129  0DFD  01A1               	clrf	33	;volatile
  6130                           
  6131                           ;pwm2.c: 84: PWM2DCH = 0x00;
  6132  0DFE  01A4               	clrf	36	;volatile
  6133                           
  6134                           ;pwm2.c: 87: PWM2DCL = 0xA0;
  6135  0DFF  30A0               	movlw	160
  6136  0E00  00A3               	movwf	35	;volatile
  6137                           
  6138                           ;pwm2.c: 90: PWM2PRH = 0x06;
  6139  0E01  3006               	movlw	6
  6140  0E02  00A6               	movwf	38	;volatile
  6141                           
  6142                           ;pwm2.c: 93: PWM2PRL = 0x3F;
  6143  0E03  303F               	movlw	63
  6144  0E04  00A5               	movwf	37	;volatile
  6145                           
  6146                           ;pwm2.c: 96: PWM2OFH = 0x00;
  6147  0E05  01A8               	clrf	40	;volatile
  6148                           
  6149                           ;pwm2.c: 99: PWM2OFL = 0x01;
  6150  0E06  3001               	movlw	1
  6151  0E07  00A7               	movwf	39	;volatile
  6152                           
  6153                           ;pwm2.c: 102: PWM2TMRH = 0x00;
  6154  0E08  01AA               	clrf	42	;volatile
  6155                           
  6156                           ;pwm2.c: 105: PWM2TMRL = 0x00;
  6157  0E09  01A9               	clrf	41	;volatile
  6158                           
  6159                           ;pwm2.c: 108: PWM2CON = 0x90;
  6160  0E0A  3090               	movlw	144
  6161  0E0B  00AB               	movwf	43	;volatile
  6162  0E0C  0008               	return
  6163  0E0D                     __end_of_PWM2_Initialize:	
  6164  0E0D                     __ptext23:	
  6165 ;; *************** function _WDT_Initialize *****************
  6166 ;; Defined at:
  6167 ;;		line 90 in file "mcc_generated_files/mcc.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;		None
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;		None
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  1    wreg      void 
  6174 ;; Registers used:
  6175 ;;		wreg
  6176 ;; Tracked objects:
  6177 ;;		On entry : 1F/1
  6178 ;;		On exit  : 1F/1
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6181 ;;      Params:         0       0       0       0       0       0       0       0
  6182 ;;      Locals:         0       0       0       0       0       0       0       0
  6183 ;;      Temps:          0       0       0       0       0       0       0       0
  6184 ;;      Totals:         0       0       0       0       0       0       0       0
  6185 ;;Total ram usage:        0 bytes
  6186 ;; Hardware stack levels used:    1
  6187 ;; Hardware stack levels required when called:    1
  6188 ;; This function calls:
  6189 ;;		Nothing
  6190 ;; This function is called by:
  6191 ;;		_SYSTEM_Initialize
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           
  6196                           ;psect for function _WDT_Initialize
  6197  0E0D                     _WDT_Initialize:	
  6198                           
  6199                           ;mcc.c: 93: WDTCON = 0x16;
  6200                           
  6201                           ;incstack = 0
  6202                           ; Regs used in _WDT_Initialize: [wreg]
  6203  0E0D  3016               	movlw	22
  6204  0E0E  0097               	movwf	23	;volatile
  6205  0E0F  0008               	return
  6206  0E10                     __end_of_WDT_Initialize:	
  6207  0E10                     __ptext21:	
  6208 ;; *************** function _adc_init *****************
  6209 ;; Defined at:
  6210 ;;		line 61 in file "src/api/sample.c"
  6211 ;; Parameters:    Size  Location     Type
  6212 ;;  ch              1    wreg     enum E4968
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;  ch              1    1[COMMON] enum E4968
  6215 ;; Return value:  Size  Location     Type
  6216 ;;                  1    wreg      void 
  6217 ;; Registers used:
  6218 ;;		wreg, status,2, status,0
  6219 ;; Tracked objects:
  6220 ;;		On entry : 1F/2
  6221 ;;		On exit  : 1F/1
  6222 ;;		Unchanged: 0/0
  6223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6224 ;;      Params:         0       0       0       0       0       0       0       0
  6225 ;;      Locals:         1       0       0       0       0       0       0       0
  6226 ;;      Temps:          1       0       0       0       0       0       0       0
  6227 ;;      Totals:         2       0       0       0       0       0       0       0
  6228 ;;Total ram usage:        2 bytes
  6229 ;; Hardware stack levels used:    1
  6230 ;; Hardware stack levels required when called:    1
  6231 ;; This function calls:
  6232 ;;		Nothing
  6233 ;; This function is called by:
  6234 ;;		_adc_sample
  6235 ;; This function uses a non-reentrant model
  6236 ;;
  6237                           
  6238                           
  6239                           ;psect for function _adc_init
  6240  0E10                     _adc_init:	
  6241                           
  6242                           ;incstack = 0
  6243                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  6244                           ;adc_init@ch stored from wreg
  6245  0E10  00F1               	movwf	adc_init@ch
  6246  0E11                     l574:	
  6247                           ;sample.c: 63: while (ADCON0bits.GO_nDONE);
  6248                           
  6249  0E11  0021               	movlb	1	; select bank1
  6250  0E12  189D               	btfsc	29,1	;volatile
  6251  0E13  2E11               	goto	l574
  6252                           
  6253                           ;sample.c: 64: ADCON0bits.CHS = ch;
  6254  0E14  0871               	movf	adc_init@ch,w
  6255  0E15  00F0               	movwf	??_adc_init
  6256  0E16  0DF0               	rlf	??_adc_init,f
  6257  0E17  0DF0               	rlf	??_adc_init,f
  6258  0E18  081D               	movf	29,w	;volatile
  6259  0E19  0670               	xorwf	??_adc_init,w
  6260  0E1A  3983               	andlw	-125
  6261  0E1B  0670               	xorwf	??_adc_init,w
  6262  0E1C  009D               	movwf	29	;volatile
  6263                           
  6264                           ;sample.c: 65: ADCON0bits.ADON = 1;
  6265  0E1D  141D               	bsf	29,0	;volatile
  6266                           
  6267                           ;sample.c: 66: ADCON1 = 0x63;
  6268                           
  6269                           ;sample.c: 67: ADCON2 = 0x00;
  6270                           
  6271                           ;sample.c: 68: ADRESL = 0x00;
  6272                           
  6273                           ;sample.c: 69: ADRESH = 0x00;
  6274  0E1E  2FD0               	ljmp	PL18	;call to abstracted procedure
  6275  0E1F                     __end_of_adc_init:	
  6276  0E1F                     __ptext20:	
  6277 ;; *************** function _fvr_set_gain *****************
  6278 ;; Defined at:
  6279 ;;		line 52 in file "src/api/sample.c"
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;  g               1    wreg     unsigned char 
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;  g               1    1[COMMON] unsigned char 
  6284 ;;  t8              1    0[COMMON] unsigned char 
  6285 ;; Return value:  Size  Location     Type
  6286 ;;                  1    wreg      void 
  6287 ;; Registers used:
  6288 ;;		wreg, status,2, status,0
  6289 ;; Tracked objects:
  6290 ;;		On entry : 0/1B
  6291 ;;		On exit  : 1F/2
  6292 ;;		Unchanged: 0/0
  6293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6294 ;;      Params:         0       0       0       0       0       0       0       0
  6295 ;;      Locals:         2       0       0       0       0       0       0       0
  6296 ;;      Temps:          0       0       0       0       0       0       0       0
  6297 ;;      Totals:         2       0       0       0       0       0       0       0
  6298 ;;Total ram usage:        2 bytes
  6299 ;; Hardware stack levels used:    1
  6300 ;; Hardware stack levels required when called:    1
  6301 ;; This function calls:
  6302 ;;		Nothing
  6303 ;; This function is called by:
  6304 ;;		_adc_sample
  6305 ;; This function uses a non-reentrant model
  6306 ;;
  6307                           
  6308                           
  6309                           ;psect for function _fvr_set_gain
  6310  0E1F                     _fvr_set_gain:	
  6311                           
  6312                           ;incstack = 0
  6313                           ; Regs used in _fvr_set_gain: [wreg+status,2+status,0]
  6314                           ;fvr_set_gain@g stored from wreg
  6315  0E1F  00F1               	movwf	fvr_set_gain@g
  6316                           
  6317                           ;sample.c: 54: uint8_t t8=0x80;
  6318  0E20  3080               	movlw	128
  6319  0E21  00F0               	movwf	fvr_set_gain@t8
  6320                           
  6321                           ;sample.c: 55: if(g>3)g=3;
  6322  0E22  3004               	movlw	4
  6323  0E23  0271               	subwf	fvr_set_gain@g,w
  6324  0E24  1C03               	skipc
  6325  0E25  2E28               	goto	l2080
  6326  0E26  3003               	movlw	3
  6327  0E27  00F1               	movwf	fvr_set_gain@g
  6328  0E28                     l2080:	
  6329                           
  6330                           ;sample.c: 56: t8|=g;
  6331  0E28  0871               	movf	fvr_set_gain@g,w
  6332  0E29  04F0               	iorwf	fvr_set_gain@t8,f
  6333                           
  6334                           ;sample.c: 57: FVRCON = t8;
  6335  0E2A  0870               	movf	fvr_set_gain@t8,w
  6336  0E2B  0022               	movlb	2	; select bank2
  6337  0E2C  0097               	movwf	23	;volatile
  6338  0E2D                     l568:	
  6339                           ;sample.c: 58: while(!(FVRCONbits.FVRRDY));
  6340                           
  6341  0E2D  1B17               	btfsc	23,6	;volatile
  6342  0E2E  0008               	return
  6343  0E2F  2E2D               	goto	l568
  6344  0E30                     __end_of_fvr_set_gain:	
  6345  0E30                     __ptext16:	
  6346 ;; *************** function _cal_voout_pwm_duty *****************
  6347 ;; Defined at:
  6348 ;;		line 280 in file "src/api/sample.c"
  6349 ;; Parameters:    Size  Location     Type
  6350 ;;		None
  6351 ;; Auto vars:     Size  Location     Type
  6352 ;;  t32             4    2[BANK0 ] unsigned long 
  6353 ;; Return value:  Size  Location     Type
  6354 ;;                  2    0[BANK0 ] unsigned int 
  6355 ;; Registers used:
  6356 ;;		wreg, status,2, status,0, pclath, cstack
  6357 ;; Tracked objects:
  6358 ;;		On entry : 1F/1B
  6359 ;;		On exit  : 1F/0
  6360 ;;		Unchanged: 0/0
  6361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6362 ;;      Params:         0       2       0       0       0       0       0       0
  6363 ;;      Locals:         0       4       0       0       0       0       0       0
  6364 ;;      Temps:          0       0       0       0       0       0       0       0
  6365 ;;      Totals:         0       6       0       0       0       0       0       0
  6366 ;;Total ram usage:        6 bytes
  6367 ;; Hardware stack levels used:    1
  6368 ;; Hardware stack levels required when called:    2
  6369 ;; This function calls:
  6370 ;;		___lldiv
  6371 ;;		___lmul
  6372 ;; This function is called by:
  6373 ;;		_main
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           
  6378                           ;psect for function _cal_voout_pwm_duty
  6379  0E30                     _cal_voout_pwm_duty:	
  6380                           
  6381                           ;sample.c: 282: uint32_t t32;
  6382                           ;sample.c: 283: t32=rtAdcValueRsLoAvg;
  6383                           
  6384                           ;incstack = 0
  6385                           ; Regs used in _cal_voout_pwm_duty: [wreg+status,2+status,0+pclath+cstack]
  6386  0E30  0020               	movlb	0	; select bank0
  6387  0E31  085A               	movf	_rtAdcValueRsLoAvg,w
  6388  0E32  00A2               	movwf	cal_voout_pwm_duty@t32
  6389  0E33  085B               	movf	_rtAdcValueRsLoAvg+1,w
  6390  0E34  00A3               	movwf	cal_voout_pwm_duty@t32+1
  6391  0E35  01A4               	clrf	cal_voout_pwm_duty@t32+2
  6392  0E36  01A5               	clrf	cal_voout_pwm_duty@t32+3
  6393                           
  6394                           ;sample.c: 284: if(t32>7200){
  6395  0E37  0825               	movf	cal_voout_pwm_duty@t32+3,w
  6396  0E38  1D03               	btfss	3,2
  6397  0E39  2E43               	goto	l2430
  6398  0E3A  0824               	movf	cal_voout_pwm_duty@t32+2,w
  6399  0E3B  1D03               	btfss	3,2
  6400  0E3C  2E43               	goto	l2430
  6401  0E3D  3021               	movlw	33
  6402  0E3E  0222               	subwf	cal_voout_pwm_duty@t32,w
  6403  0E3F  301C               	movlw	28
  6404  0E40  3B23               	subwfb	cal_voout_pwm_duty@t32+1,w
  6405  0E41  1C03               	btfss	3,0
  6406  0E42  2E4B               	goto	l663
  6407  0E43                     l2430:	
  6408                           
  6409                           ;sample.c: 285: t32-=7200;
  6410  0E43  3020               	movlw	32
  6411  0E44  02A2               	subwf	cal_voout_pwm_duty@t32,f
  6412  0E45  301C               	movlw	28
  6413  0E46  3BA3               	subwfb	cal_voout_pwm_duty@t32+1,f
  6414  0E47  3000               	movlw	0
  6415  0E48  3BA4               	subwfb	cal_voout_pwm_duty@t32+2,f
  6416  0E49  3BA5               	subwfb	cal_voout_pwm_duty@t32+3,f
  6417                           
  6418                           ;sample.c: 286: }else{
  6419  0E4A  2E4F               	goto	l2432
  6420  0E4B                     l663:	
  6421                           
  6422                           ;sample.c: 287: t32=0;
  6423  0E4B  01A2               	clrf	cal_voout_pwm_duty@t32
  6424  0E4C  01A3               	clrf	cal_voout_pwm_duty@t32+1
  6425  0E4D  01A4               	clrf	cal_voout_pwm_duty@t32+2
  6426  0E4E  01A5               	clrf	cal_voout_pwm_duty@t32+3
  6427  0E4F                     l2432:	
  6428                           
  6429                           ;sample.c: 288: }
  6430                           ;sample.c: 290: t32*=1600;
  6431  0E4F  3006               	movlw	6
  6432  0E50  01F3               	clrf	___lmul@multiplier+3
  6433  0E51  01F2               	clrf	___lmul@multiplier+2
  6434  0E52  00F1               	movwf	___lmul@multiplier+1
  6435  0E53  3040               	movlw	64
  6436  0E54  00F0               	movwf	___lmul@multiplier
  6437  0E55  0825               	movf	cal_voout_pwm_duty@t32+3,w
  6438  0E56  00F7               	movwf	___lmul@multiplicand+3
  6439  0E57  0824               	movf	cal_voout_pwm_duty@t32+2,w
  6440  0E58  00F6               	movwf	___lmul@multiplicand+2
  6441  0E59  0823               	movf	cal_voout_pwm_duty@t32+1,w
  6442  0E5A  00F5               	movwf	___lmul@multiplicand+1
  6443  0E5B  0822               	movf	cal_voout_pwm_duty@t32,w
  6444  0E5C  00F4               	movwf	___lmul@multiplicand
  6445  0E5D  25A4  3188         	fcall	___lmul
  6446  0E5F  0873               	movf	?___lmul+3,w
  6447  0E60  0020               	movlb	0	; select bank0
  6448  0E61  00A5               	movwf	cal_voout_pwm_duty@t32+3
  6449  0E62  0872               	movf	?___lmul+2,w
  6450  0E63  00A4               	movwf	cal_voout_pwm_duty@t32+2
  6451  0E64  0871               	movf	?___lmul+1,w
  6452  0E65  00A3               	movwf	cal_voout_pwm_duty@t32+1
  6453  0E66  0870               	movf	?___lmul,w
  6454  0E67  00A2               	movwf	cal_voout_pwm_duty@t32
  6455                           
  6456                           ;sample.c: 291: t32/=13000;
  6457  0E68  3032               	movlw	50
  6458  0E69  01F3               	clrf	___lldiv@divisor+3
  6459  0E6A  01F2               	clrf	___lldiv@divisor+2
  6460  0E6B  00F1               	movwf	___lldiv@divisor+1
  6461  0E6C  30C8               	movlw	200
  6462  0E6D  00F0               	movwf	___lldiv@divisor
  6463  0E6E  0825               	movf	cal_voout_pwm_duty@t32+3,w
  6464  0E6F  00F7               	movwf	___lldiv@dividend+3
  6465  0E70  0824               	movf	cal_voout_pwm_duty@t32+2,w
  6466  0E71  00F6               	movwf	___lldiv@dividend+2
  6467  0E72  0823               	movf	cal_voout_pwm_duty@t32+1,w
  6468  0E73  00F5               	movwf	___lldiv@dividend+1
  6469  0E74  0822               	movf	cal_voout_pwm_duty@t32,w
  6470  0E75  00F4               	movwf	___lldiv@dividend
  6471  0E76  26A9  3188         	fcall	___lldiv
  6472  0E78  0873               	movf	?___lldiv+3,w
  6473  0E79  00A5               	movwf	cal_voout_pwm_duty@t32+3
  6474  0E7A  0872               	movf	?___lldiv+2,w
  6475  0E7B  00A4               	movwf	cal_voout_pwm_duty@t32+2
  6476  0E7C  0871               	movf	?___lldiv+1,w
  6477  0E7D  00A3               	movwf	cal_voout_pwm_duty@t32+1
  6478  0E7E  0870               	movf	?___lldiv,w
  6479  0E7F  00A2               	movwf	cal_voout_pwm_duty@t32
  6480                           
  6481                           ;sample.c: 292: if(t32>1580)t32=1580;
  6482  0E80  0825               	movf	cal_voout_pwm_duty@t32+3,w
  6483  0E81  1D03               	btfss	3,2
  6484  0E82  2E8C               	goto	l2436
  6485  0E83  0824               	movf	cal_voout_pwm_duty@t32+2,w
  6486  0E84  1D03               	btfss	3,2
  6487  0E85  2E8C               	goto	l2436
  6488  0E86  302D               	movlw	45
  6489  0E87  0222               	subwf	cal_voout_pwm_duty@t32,w
  6490  0E88  3006               	movlw	6
  6491  0E89  3B23               	subwfb	cal_voout_pwm_duty@t32+1,w
  6492  0E8A  1C03               	btfss	3,0
  6493  0E8B  2E92               	goto	l2438
  6494  0E8C                     l2436:	
  6495  0E8C  3006               	movlw	6
  6496  0E8D  01A5               	clrf	cal_voout_pwm_duty@t32+3
  6497  0E8E  01A4               	clrf	cal_voout_pwm_duty@t32+2
  6498  0E8F  00A3               	movwf	cal_voout_pwm_duty@t32+1
  6499  0E90  302C               	movlw	44
  6500  0E91  00A2               	movwf	cal_voout_pwm_duty@t32
  6501  0E92                     l2438:	
  6502                           
  6503                           ;sample.c: 293: if(t32<20)t32=20;
  6504  0E92  0825               	movf	cal_voout_pwm_duty@t32+3,w
  6505  0E93  1D03               	btfss	3,2
  6506  0E94  2EA4               	goto	l666
  6507  0E95  0824               	movf	cal_voout_pwm_duty@t32+2,w
  6508  0E96  1D03               	btfss	3,2
  6509  0E97  2EA4               	goto	l666
  6510  0E98  0823               	movf	cal_voout_pwm_duty@t32+1,w
  6511  0E99  1D03               	btfss	3,2
  6512  0E9A  2EA4               	goto	l666
  6513  0E9B  3014               	movlw	20
  6514  0E9C  0222               	subwf	cal_voout_pwm_duty@t32,w
  6515  0E9D  1803               	btfsc	3,0
  6516  0E9E  2EA4               	goto	l666
  6517  0E9F  3014               	movlw	20
  6518  0EA0  00A2               	movwf	cal_voout_pwm_duty@t32
  6519  0EA1  01A3               	clrf	cal_voout_pwm_duty@t32+1
  6520  0EA2  01A4               	clrf	cal_voout_pwm_duty@t32+2
  6521  0EA3  01A5               	clrf	cal_voout_pwm_duty@t32+3
  6522  0EA4                     l666:	
  6523                           
  6524                           ;sample.c: 294: return (uint16_t)t32;
  6525  0EA4  0823               	movf	cal_voout_pwm_duty@t32+1,w
  6526  0EA5  00A1               	movwf	?_cal_voout_pwm_duty+1
  6527  0EA6  0822               	movf	cal_voout_pwm_duty@t32,w
  6528  0EA7  00A0               	movwf	?_cal_voout_pwm_duty
  6529  0EA8  0008               	return
  6530  0EA9                     __end_of_cal_voout_pwm_duty:	
  6531  0EA9                     __ptext18:	
  6532 ;; *************** function ___lldiv *****************
  6533 ;; Defined at:
  6534 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lldiv.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;  divisor         4    0[COMMON] unsigned long 
  6537 ;;  dividend        4    4[COMMON] unsigned long 
  6538 ;; Auto vars:     Size  Location     Type
  6539 ;;  quotient        4    8[COMMON] unsigned long 
  6540 ;;  counter         1   12[COMMON] unsigned char 
  6541 ;; Return value:  Size  Location     Type
  6542 ;;                  4    0[COMMON] unsigned long 
  6543 ;; Registers used:
  6544 ;;		wreg, status,2, status,0
  6545 ;; Tracked objects:
  6546 ;;		On entry : 1F/0
  6547 ;;		On exit  : 1F/0
  6548 ;;		Unchanged: 1F/0
  6549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6550 ;;      Params:         8       0       0       0       0       0       0       0
  6551 ;;      Locals:         5       0       0       0       0       0       0       0
  6552 ;;      Temps:          0       0       0       0       0       0       0       0
  6553 ;;      Totals:        13       0       0       0       0       0       0       0
  6554 ;;Total ram usage:       13 bytes
  6555 ;; Hardware stack levels used:    1
  6556 ;; Hardware stack levels required when called:    1
  6557 ;; This function calls:
  6558 ;;		Nothing
  6559 ;; This function is called by:
  6560 ;;		_calc_temp_rs
  6561 ;;		_calc_temp_rc
  6562 ;;		_cal_voout_pwm_duty
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566                           
  6567                           ;psect for function ___lldiv
  6568  0EA9                     ___lldiv:	
  6569                           
  6570                           ;incstack = 0
  6571                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6572  0EA9  01F8               	clrf	___lldiv@quotient
  6573  0EAA  01F9               	clrf	___lldiv@quotient+1
  6574  0EAB  01FA               	clrf	___lldiv@quotient+2
  6575  0EAC  01FB               	clrf	___lldiv@quotient+3
  6576  0EAD  0873               	movf	___lldiv@divisor+3,w
  6577  0EAE  0472               	iorwf	___lldiv@divisor+2,w
  6578  0EAF  0471               	iorwf	___lldiv@divisor+1,w
  6579  0EB0  0470               	iorwf	___lldiv@divisor,w
  6580  0EB1  1903               	skipnz
  6581  0EB2  2EDF               	goto	l2224
  6582  0EB3  01FC               	clrf	___lldiv@counter
  6583  0EB4                     L6:	
  6584  0EB4  0AFC               	incf	___lldiv@counter,f
  6585  0EB5  1BF3               	btfsc	___lldiv@divisor+3,7
  6586  0EB6  2EBC               	goto	l2212
  6587  0EB7  35F0               	lslf	___lldiv@divisor,f
  6588  0EB8  0DF1               	rlf	___lldiv@divisor+1,f
  6589  0EB9  0DF2               	rlf	___lldiv@divisor+2,f
  6590  0EBA  0DF3               	rlf	___lldiv@divisor+3,f
  6591  0EBB  2EB4               	goto	L6
  6592  0EBC                     l2212:	
  6593  0EBC  35F8               	lslf	___lldiv@quotient,f
  6594  0EBD  0DF9               	rlf	___lldiv@quotient+1,f
  6595  0EBE  0DFA               	rlf	___lldiv@quotient+2,f
  6596  0EBF  0DFB               	rlf	___lldiv@quotient+3,f
  6597  0EC0  0873               	movf	___lldiv@divisor+3,w
  6598  0EC1  0277               	subwf	___lldiv@dividend+3,w
  6599  0EC2  1D03               	skipz
  6600  0EC3  2ECE               	goto	u935
  6601  0EC4  0872               	movf	___lldiv@divisor+2,w
  6602  0EC5  0276               	subwf	___lldiv@dividend+2,w
  6603  0EC6  1D03               	skipz
  6604  0EC7  2ECE               	goto	u935
  6605  0EC8  0871               	movf	___lldiv@divisor+1,w
  6606  0EC9  0275               	subwf	___lldiv@dividend+1,w
  6607  0ECA  1D03               	skipz
  6608  0ECB  2ECE               	goto	u935
  6609  0ECC  0870               	movf	___lldiv@divisor,w
  6610  0ECD  0274               	subwf	___lldiv@dividend,w
  6611  0ECE                     u935:	
  6612  0ECE  1C03               	skipc
  6613  0ECF  2ED9               	goto	l2220
  6614  0ED0  0870               	movf	___lldiv@divisor,w
  6615  0ED1  02F4               	subwf	___lldiv@dividend,f
  6616  0ED2  0871               	movf	___lldiv@divisor+1,w
  6617  0ED3  3BF5               	subwfb	___lldiv@dividend+1,f
  6618  0ED4  0872               	movf	___lldiv@divisor+2,w
  6619  0ED5  3BF6               	subwfb	___lldiv@dividend+2,f
  6620  0ED6  0873               	movf	___lldiv@divisor+3,w
  6621  0ED7  3BF7               	subwfb	___lldiv@dividend+3,f
  6622  0ED8  1478               	bsf	___lldiv@quotient,0
  6623  0ED9                     l2220:	
  6624  0ED9  36F3               	lsrf	___lldiv@divisor+3,f
  6625  0EDA  0CF2               	rrf	___lldiv@divisor+2,f
  6626  0EDB  0CF1               	rrf	___lldiv@divisor+1,f
  6627  0EDC  0CF0               	rrf	___lldiv@divisor,f
  6628  0EDD  0BFC               	decfsz	___lldiv@counter,f
  6629  0EDE  2EBC               	goto	l2212
  6630  0EDF                     l2224:	
  6631  0EDF  087B               	movf	___lldiv@quotient+3,w
  6632  0EE0  00F3               	movwf	?___lldiv+3
  6633  0EE1  087A               	movf	___lldiv@quotient+2,w
  6634  0EE2  00F2               	movwf	?___lldiv+2
  6635  0EE3  0879               	movf	___lldiv@quotient+1,w
  6636  0EE4  00F1               	movwf	?___lldiv+1
  6637  0EE5  0878               	movf	___lldiv@quotient,w
  6638  0EE6  00F0               	movwf	?___lldiv
  6639  0EE7  0008               	return
  6640  0EE8                     __end_of___lldiv:	
  6641  0EE8                     __ptext15:	
  6642 ;; *************** function _calc_current_rs_avg *****************
  6643 ;; Defined at:
  6644 ;;		line 257 in file "src/api/sample.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;		None
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;		None
  6649 ;; Return value:  Size  Location     Type
  6650 ;;                  2    0[COMMON] unsigned int 
  6651 ;; Registers used:
  6652 ;;		wreg
  6653 ;; Tracked objects:
  6654 ;;		On entry : 1F/0
  6655 ;;		On exit  : 1F/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6658 ;;      Params:         2       0       0       0       0       0       0       0
  6659 ;;      Locals:         0       0       0       0       0       0       0       0
  6660 ;;      Temps:          0       0       0       0       0       0       0       0
  6661 ;;      Totals:         2       0       0       0       0       0       0       0
  6662 ;;Total ram usage:        2 bytes
  6663 ;; Hardware stack levels used:    1
  6664 ;; Hardware stack levels required when called:    1
  6665 ;; This function calls:
  6666 ;;		Nothing
  6667 ;; This function is called by:
  6668 ;;		_main
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           
  6673                           ;psect for function _calc_current_rs_avg
  6674  0EE8                     _calc_current_rs_avg:	
  6675                           
  6676                           ;sample.c: 273: return rtAdcValueRsLo;
  6677                           
  6678                           ;incstack = 0
  6679                           ; Regs used in _calc_current_rs_avg: [wreg]
  6680  0EE8  0859               	movf	_rtAdcValueRsLo+1,w
  6681  0EE9  00F1               	movwf	?_calc_current_rs_avg+1
  6682  0EEA  0858               	movf	_rtAdcValueRsLo,w
  6683  0EEB  00F0               	movwf	?_calc_current_rs_avg
  6684  0EEC  0008               	return
  6685  0EED                     __end_of_calc_current_rs_avg:	
  6686  0EED                     __ptext13:	
  6687 ;; *************** function _calc_temp_rs *****************
  6688 ;; Defined at:
  6689 ;;		line 98 in file "src/api/sample.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;		None
  6692 ;; Auto vars:     Size  Location     Type
  6693 ;;  y               4    8[BANK0 ] unsigned long 
  6694 ;;  x               4    4[BANK0 ] unsigned long 
  6695 ;; Return value:  Size  Location     Type
  6696 ;;                  4    0[BANK0 ] unsigned long 
  6697 ;; Registers used:
  6698 ;;		wreg, status,2, status,0, pclath, cstack
  6699 ;; Tracked objects:
  6700 ;;		On entry : 1F/0
  6701 ;;		On exit  : 1F/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6704 ;;      Params:         0       4       0       0       0       0       0       0
  6705 ;;      Locals:         0       8       0       0       0       0       0       0
  6706 ;;      Temps:          0       0       0       0       0       0       0       0
  6707 ;;      Totals:         0      12       0       0       0       0       0       0
  6708 ;;Total ram usage:       12 bytes
  6709 ;; Hardware stack levels used:    1
  6710 ;; Hardware stack levels required when called:    2
  6711 ;; This function calls:
  6712 ;;		___lldiv
  6713 ;;		___lmul
  6714 ;; This function is called by:
  6715 ;;		_main
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719                           
  6720                           ;psect for function _calc_temp_rs
  6721  0EED                     _calc_temp_rs:	
  6722                           
  6723                           ;sample.c: 111: uint32_t x,y;
  6724                           ;sample.c: 112: y=12000UL;
  6725                           
  6726                           ;incstack = 0
  6727                           ; Regs used in _calc_temp_rs: [wreg+status,2+status,0+pclath+cstack]
  6728  0EED  302E               	movlw	46
  6729  0EEE  01AB               	clrf	calc_temp_rs@y+3
  6730  0EEF  01AA               	clrf	calc_temp_rs@y+2
  6731  0EF0  00A9               	movwf	calc_temp_rs@y+1
  6732  0EF1  30E0               	movlw	224
  6733  0EF2  00A8               	movwf	calc_temp_rs@y
  6734                           
  6735                           ;sample.c: 113: y=y*rtAdcValueRsHi;
  6736  0EF3  0856               	movf	_rtAdcValueRsHi,w
  6737  0EF4  00F0               	movwf	___lmul@multiplier
  6738  0EF5  0857               	movf	_rtAdcValueRsHi+1,w
  6739  0EF6  00F1               	movwf	___lmul@multiplier+1
  6740  0EF7  01F2               	clrf	___lmul@multiplier+2
  6741  0EF8  01F3               	clrf	___lmul@multiplier+3
  6742  0EF9  082B               	movf	calc_temp_rs@y+3,w
  6743  0EFA  00F7               	movwf	___lmul@multiplicand+3
  6744  0EFB  082A               	movf	calc_temp_rs@y+2,w
  6745  0EFC  00F6               	movwf	___lmul@multiplicand+2
  6746  0EFD  0829               	movf	calc_temp_rs@y+1,w
  6747  0EFE  00F5               	movwf	___lmul@multiplicand+1
  6748  0EFF  0828               	movf	calc_temp_rs@y,w
  6749  0F00  00F4               	movwf	___lmul@multiplicand
  6750  0F01  25A4  3188         	fcall	___lmul
  6751  0F03  0873               	movf	?___lmul+3,w
  6752  0F04  0020               	movlb	0	; select bank0
  6753  0F05  00AB               	movwf	calc_temp_rs@y+3
  6754  0F06  0872               	movf	?___lmul+2,w
  6755  0F07  00AA               	movwf	calc_temp_rs@y+2
  6756  0F08  0871               	movf	?___lmul+1,w
  6757  0F09  00A9               	movwf	calc_temp_rs@y+1
  6758  0F0A  0870               	movf	?___lmul,w
  6759  0F0B  00A8               	movwf	calc_temp_rs@y
  6760                           
  6761                           ;sample.c: 114: x=rtAdcValueRsLo;
  6762  0F0C  0858               	movf	_rtAdcValueRsLo,w
  6763  0F0D  00A4               	movwf	calc_temp_rs@x
  6764  0F0E  0859               	movf	_rtAdcValueRsLo+1,w
  6765  0F0F  00A5               	movwf	calc_temp_rs@x+1
  6766  0F10  01A6               	clrf	calc_temp_rs@x+2
  6767  0F11  01A7               	clrf	calc_temp_rs@x+3
  6768                           
  6769                           ;sample.c: 115: y=y/x;
  6770  0F12  0827               	movf	calc_temp_rs@x+3,w
  6771  0F13  00F3               	movwf	___lldiv@divisor+3
  6772  0F14  0826               	movf	calc_temp_rs@x+2,w
  6773  0F15  00F2               	movwf	___lldiv@divisor+2
  6774  0F16  0825               	movf	calc_temp_rs@x+1,w
  6775  0F17  00F1               	movwf	___lldiv@divisor+1
  6776  0F18  0824               	movf	calc_temp_rs@x,w
  6777  0F19  00F0               	movwf	___lldiv@divisor
  6778  0F1A  082B               	movf	calc_temp_rs@y+3,w
  6779  0F1B  00F7               	movwf	___lldiv@dividend+3
  6780  0F1C  082A               	movf	calc_temp_rs@y+2,w
  6781  0F1D  00F6               	movwf	___lldiv@dividend+2
  6782  0F1E  0829               	movf	calc_temp_rs@y+1,w
  6783  0F1F  00F5               	movwf	___lldiv@dividend+1
  6784  0F20  0828               	movf	calc_temp_rs@y,w
  6785  0F21  00F4               	movwf	___lldiv@dividend
  6786  0F22  26A9  3188         	fcall	___lldiv
  6787  0F24  0873               	movf	?___lldiv+3,w
  6788  0F25  00AB               	movwf	calc_temp_rs@y+3
  6789  0F26  0872               	movf	?___lldiv+2,w
  6790  0F27  00AA               	movwf	calc_temp_rs@y+2
  6791  0F28  0871               	movf	?___lldiv+1,w
  6792  0F29  00A9               	movwf	calc_temp_rs@y+1
  6793  0F2A  0870               	movf	?___lldiv,w
  6794  0F2B  00A8               	movwf	calc_temp_rs@y
  6795                           
  6796                           ;sample.c: 116: if(y<2000)y=2000;
  6797  0F2C  082B               	movf	calc_temp_rs@y+3,w
  6798  0F2D  1D03               	btfss	3,2
  6799  0F2E  2F3E               	goto	l2296
  6800  0F2F  082A               	movf	calc_temp_rs@y+2,w
  6801  0F30  1D03               	btfss	3,2
  6802  0F31  2F3E               	goto	l2296
  6803  0F32  30D0               	movlw	208
  6804  0F33  0228               	subwf	calc_temp_rs@y,w
  6805  0F34  3007               	movlw	7
  6806  0F35  3B29               	subwfb	calc_temp_rs@y+1,w
  6807  0F36  1803               	btfsc	3,0
  6808  0F37  2F3E               	goto	l2296
  6809  0F38  3007               	movlw	7
  6810  0F39  01AB               	clrf	calc_temp_rs@y+3
  6811  0F3A  01AA               	clrf	calc_temp_rs@y+2
  6812  0F3B  00A9               	movwf	calc_temp_rs@y+1
  6813  0F3C  30D0               	movlw	208
  6814  0F3D  00A8               	movwf	calc_temp_rs@y
  6815  0F3E                     l2296:	
  6816                           
  6817                           ;sample.c: 117: if(y>25000)y=25000;
  6818  0F3E  082B               	movf	calc_temp_rs@y+3,w
  6819  0F3F  1D03               	btfss	3,2
  6820  0F40  2F4A               	goto	l2298
  6821  0F41  082A               	movf	calc_temp_rs@y+2,w
  6822  0F42  1D03               	btfss	3,2
  6823  0F43  2F4A               	goto	l2298
  6824  0F44  30A9               	movlw	169
  6825  0F45  0228               	subwf	calc_temp_rs@y,w
  6826  0F46  3061               	movlw	97
  6827  0F47  3B29               	subwfb	calc_temp_rs@y+1,w
  6828  0F48  1C03               	btfss	3,0
  6829  0F49  2F50               	goto	l2300
  6830  0F4A                     l2298:	
  6831  0F4A  3061               	movlw	97
  6832  0F4B  01AB               	clrf	calc_temp_rs@y+3
  6833  0F4C  01AA               	clrf	calc_temp_rs@y+2
  6834  0F4D  00A9               	movwf	calc_temp_rs@y+1
  6835  0F4E  30A8               	movlw	168
  6836  0F4F  00A8               	movwf	calc_temp_rs@y
  6837  0F50                     l2300:	
  6838                           
  6839                           ;sample.c: 118: y=y-1000;
  6840  0F50  3018               	movlw	24
  6841  0F51  07A8               	addwf	calc_temp_rs@y,f
  6842  0F52  30FC               	movlw	252
  6843  0F53  3DA9               	addwfc	calc_temp_rs@y+1,f
  6844  0F54  30FF               	movlw	255
  6845  0F55  3DAA               	addwfc	calc_temp_rs@y+2,f
  6846  0F56  3DAB               	addwfc	calc_temp_rs@y+3,f
  6847                           
  6848                           ;sample.c: 120: return y;
  6849  0F57  082B               	movf	calc_temp_rs@y+3,w
  6850  0F58  00A3               	movwf	?_calc_temp_rs+3
  6851  0F59  082A               	movf	calc_temp_rs@y+2,w
  6852  0F5A  00A2               	movwf	?_calc_temp_rs+2
  6853  0F5B  0829               	movf	calc_temp_rs@y+1,w
  6854  0F5C  00A1               	movwf	?_calc_temp_rs+1
  6855  0F5D  0828               	movf	calc_temp_rs@y,w
  6856  0F5E  00A0               	movwf	?_calc_temp_rs
  6857  0F5F  0008               	return
  6858  0F60                     __end_of_calc_temp_rs:	
  6859  0F60                     __ptext9:	
  6860 ;; *************** function _m_mem_set *****************
  6861 ;; Defined at:
  6862 ;;		line 32 in file "src/depend/m_string.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;  buf             1    wreg     PTR unsigned char 
  6865 ;;		 -> str(16), 
  6866 ;;  x               1    0[COMMON] unsigned char 
  6867 ;;  len             2    1[COMMON] unsigned int 
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;  buf             1    3[COMMON] PTR unsigned char 
  6870 ;;		 -> str(16), 
  6871 ;; Return value:  Size  Location     Type
  6872 ;;                  1    wreg      void 
  6873 ;; Registers used:
  6874 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6875 ;; Tracked objects:
  6876 ;;		On entry : 1F/0
  6877 ;;		On exit  : 1F/0
  6878 ;;		Unchanged: 1F/0
  6879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6880 ;;      Params:         3       0       0       0       0       0       0       0
  6881 ;;      Locals:         1       0       0       0       0       0       0       0
  6882 ;;      Temps:          0       0       0       0       0       0       0       0
  6883 ;;      Totals:         4       0       0       0       0       0       0       0
  6884 ;;Total ram usage:        4 bytes
  6885 ;; Hardware stack levels used:    1
  6886 ;; Hardware stack levels required when called:    1
  6887 ;; This function calls:
  6888 ;;		Nothing
  6889 ;; This function is called by:
  6890 ;;		_m_int_2_str_ex
  6891 ;; This function uses a non-reentrant model
  6892 ;;
  6893                           
  6894                           
  6895                           ;psect for function _m_mem_set
  6896  0F60                     _m_mem_set:	
  6897                           
  6898                           ;incstack = 0
  6899                           ; Regs used in _m_mem_set: [wreg+fsr1l+fsr1h+status,2+status,0]
  6900                           ;m_mem_set@buf stored from wreg
  6901  0F60  00F3               	movwf	m_mem_set@buf
  6902  0F61                     l2104:	
  6903                           ;m_string.c: 34: while(len--)
  6904                           
  6905  0F61  3001               	movlw	1
  6906  0F62  02F1               	subwf	m_mem_set@len,f
  6907  0F63  3000               	movlw	0
  6908  0F64  3BF2               	subwfb	m_mem_set@len+1,f
  6909  0F65  0F71               	incfsz	m_mem_set@len,w
  6910  0F66  2F6A               	goto	l2100
  6911  0F67  0A72               	incf	m_mem_set@len+1,w
  6912  0F68  1903               	btfsc	3,2
  6913  0F69  0008               	return
  6914  0F6A                     l2100:	
  6915                           
  6916                           ;m_string.c: 35: {
  6917                           ;m_string.c: 36: *buf++=x;
  6918  0F6A  0873               	movf	m_mem_set@buf,w
  6919  0F6B  0086               	movwf	6
  6920  0F6C  0187               	clrf	7
  6921  0F6D  0870               	movf	m_mem_set@x,w
  6922  0F6E  0081               	movwf	1
  6923  0F6F  0AF3               	incf	m_mem_set@buf,f
  6924  0F70  2F61               	goto	l2104
  6925  0F71                     __end_of_m_mem_set:	
  6926  0F71                     __ptext7:	
  6927 ;; *************** function _get_idrv_pwm1_duty *****************
  6928 ;; Defined at:
  6929 ;;		line 19 in file "src/api/sample.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;		None
  6932 ;; Auto vars:     Size  Location     Type
  6933 ;;		None
  6934 ;; Return value:  Size  Location     Type
  6935 ;;                  2    0[COMMON] unsigned int 
  6936 ;; Registers used:
  6937 ;;		wreg
  6938 ;; Tracked objects:
  6939 ;;		On entry : 1F/0
  6940 ;;		On exit  : 1F/1B
  6941 ;;		Unchanged: 0/0
  6942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6943 ;;      Params:         2       0       0       0       0       0       0       0
  6944 ;;      Locals:         0       0       0       0       0       0       0       0
  6945 ;;      Temps:          0       0       0       0       0       0       0       0
  6946 ;;      Totals:         2       0       0       0       0       0       0       0
  6947 ;;Total ram usage:        2 bytes
  6948 ;; Hardware stack levels used:    1
  6949 ;; Hardware stack levels required when called:    1
  6950 ;; This function calls:
  6951 ;;		Nothing
  6952 ;; This function is called by:
  6953 ;;		_set_idrv_pwm1_duty
  6954 ;; This function uses a non-reentrant model
  6955 ;;
  6956                           
  6957                           
  6958                           ;psect for function _get_idrv_pwm1_duty
  6959  0F71                     _get_idrv_pwm1_duty:	
  6960                           
  6961                           ;sample.c: 21: return ((PWM1DCH<<8)|PWM1DCL);
  6962                           
  6963                           ;incstack = 0
  6964                           ; Regs used in _get_idrv_pwm1_duty: [wreg]
  6965  0F71  003B               	movlb	27	; select bank27
  6966  0F72  0814               	movf	20,w	;volatile
  6967  0F73  00F1               	movwf	?_get_idrv_pwm1_duty+1
  6968  0F74  01F0               	clrf	?_get_idrv_pwm1_duty
  6969  0F75  0813               	movf	19,w	;volatile
  6970  0F76  04F0               	iorwf	?_get_idrv_pwm1_duty,f
  6971  0F77  0008               	return
  6972  0F78                     __end_of_get_idrv_pwm1_duty:	
  6973  0F78                     __ptext2:	
  6974 ;; *************** function _set_vout_pwm2_duty *****************
  6975 ;; Defined at:
  6976 ;;		line 40 in file "src/api/sample.c"
  6977 ;; Parameters:    Size  Location     Type
  6978 ;;  duty            2    2[COMMON] unsigned int 
  6979 ;; Auto vars:     Size  Location     Type
  6980 ;;  t16             2    4[COMMON] unsigned int 
  6981 ;; Return value:  Size  Location     Type
  6982 ;;                  1    wreg      void 
  6983 ;; Registers used:
  6984 ;;		wreg, pclath, cstack
  6985 ;; Tracked objects:
  6986 ;;		On entry : 1F/0
  6987 ;;		On exit  : 1F/1B
  6988 ;;		Unchanged: 0/0
  6989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6990 ;;      Params:         2       0       0       0       0       0       0       0
  6991 ;;      Locals:         2       0       0       0       0       0       0       0
  6992 ;;      Temps:          0       0       0       0       0       0       0       0
  6993 ;;      Totals:         4       0       0       0       0       0       0       0
  6994 ;;Total ram usage:        4 bytes
  6995 ;; Hardware stack levels used:    1
  6996 ;; Hardware stack levels required when called:    2
  6997 ;; This function calls:
  6998 ;;		_get_vout_pwm2_duty
  6999 ;; This function is called by:
  7000 ;;		_main
  7001 ;; This function uses a non-reentrant model
  7002 ;;
  7003                           
  7004                           
  7005                           ;psect for function _set_vout_pwm2_duty
  7006  0F78                     _set_vout_pwm2_duty:	
  7007                           
  7008                           ;sample.c: 42: uint16_t t16;
  7009                           ;sample.c: 43: t16=get_vout_pwm2_duty();
  7010                           
  7011                           ;incstack = 0
  7012                           ; Regs used in _set_vout_pwm2_duty: [wreg+pclath+cstack]
  7013  0F78  278D  3188         	fcall	_get_vout_pwm2_duty
  7014  0F7A  0871               	movf	?_get_vout_pwm2_duty+1,w
  7015  0F7B  00F5               	movwf	set_vout_pwm2_duty@t16+1
  7016  0F7C  0870               	movf	?_get_vout_pwm2_duty,w
  7017  0F7D  00F4               	movwf	set_vout_pwm2_duty@t16
  7018                           
  7019                           ;sample.c: 44: if(t16==duty)return;
  7020  0F7E  0873               	movf	set_vout_pwm2_duty@duty+1,w
  7021  0F7F  0675               	xorwf	set_vout_pwm2_duty@t16+1,w
  7022  0F80  1D03               	skipz
  7023  0F81  2F84               	goto	u1005
  7024  0F82  0872               	movf	set_vout_pwm2_duty@duty,w
  7025  0F83  0674               	xorwf	set_vout_pwm2_duty@t16,w
  7026  0F84                     u1005:	
  7027  0F84  1903               	btfsc	3,2
  7028  0F85  0008               	return
  7029                           
  7030                           ;sample.c: 45: PWM2CONbits.EN = 0;
  7031  0F86  13AB               	bcf	43,7	;volatile
  7032                           
  7033                           ;sample.c: 46: PWM2DCL= (uint8_t)(duty&0xff);
  7034  0F87  0872               	movf	set_vout_pwm2_duty@duty,w
  7035  0F88  00A3               	movwf	35	;volatile
  7036                           
  7037                           ;sample.c: 47: PWM2DCH=(uint8_t)(duty>>8);
  7038  0F89  0873               	movf	set_vout_pwm2_duty@duty+1,w
  7039  0F8A  00A4               	movwf	36	;volatile
  7040                           
  7041                           ;sample.c: 48: PWM2CONbits.EN = 1;
  7042  0F8B  17AB               	bsf	43,7	;volatile
  7043  0F8C  0008               	return
  7044  0F8D                     __end_of_set_vout_pwm2_duty:	
  7045  0F8D                     __ptext3:	
  7046 ;; *************** function _get_vout_pwm2_duty *****************
  7047 ;; Defined at:
  7048 ;;		line 35 in file "src/api/sample.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;		None
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;		None
  7053 ;; Return value:  Size  Location     Type
  7054 ;;                  2    0[COMMON] unsigned int 
  7055 ;; Registers used:
  7056 ;;		wreg
  7057 ;; Tracked objects:
  7058 ;;		On entry : 1F/0
  7059 ;;		On exit  : 1F/1B
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7062 ;;      Params:         2       0       0       0       0       0       0       0
  7063 ;;      Locals:         0       0       0       0       0       0       0       0
  7064 ;;      Temps:          0       0       0       0       0       0       0       0
  7065 ;;      Totals:         2       0       0       0       0       0       0       0
  7066 ;;Total ram usage:        2 bytes
  7067 ;; Hardware stack levels used:    1
  7068 ;; Hardware stack levels required when called:    1
  7069 ;; This function calls:
  7070 ;;		Nothing
  7071 ;; This function is called by:
  7072 ;;		_set_vout_pwm2_duty
  7073 ;; This function uses a non-reentrant model
  7074 ;;
  7075                           
  7076                           
  7077                           ;psect for function _get_vout_pwm2_duty
  7078  0F8D                     _get_vout_pwm2_duty:	
  7079                           
  7080                           ;sample.c: 37: return ((PWM2DCH<<8)|PWM2DCL);
  7081                           
  7082                           ;incstack = 0
  7083                           ; Regs used in _get_vout_pwm2_duty: [wreg]
  7084  0F8D  003B               	movlb	27	; select bank27
  7085  0F8E  0824               	movf	36,w	;volatile
  7086  0F8F  00F1               	movwf	?_get_vout_pwm2_duty+1
  7087  0F90  01F0               	clrf	?_get_vout_pwm2_duty
  7088  0F91  0823               	movf	35,w	;volatile
  7089  0F92  04F0               	iorwf	?_get_vout_pwm2_duty,f
  7090  0F93  0008               	return
  7091  0F94                     __end_of_get_vout_pwm2_duty:	
  7092  0F94                     PL2:	
  7093  0F94  0873               	movf	?___lmul+3,w
  7094  0F95  0020               	movlb	0	; select bank0
  7095  0F96  00A7               	movwf	___aldiv@dividend+3
  7096  0F97  0872               	movf	?___lmul+2,w
  7097  0F98  00A6               	movwf	___aldiv@dividend+2
  7098  0F99  0871               	movf	?___lmul+1,w
  7099  0F9A  00A5               	movwf	___aldiv@dividend+1
  7100  0F9B  0870               	movf	?___lmul,w
  7101  0F9C  00A4               	movwf	___aldiv@dividend
  7102  0F9D  0008               	return
  7103  0F9E                     __end_ofPL2:	
  7104  0F9E                     PL4:	
  7105  0F9E  01A1               	clrf	___aldiv@divisor+1
  7106  0F9F  01A2               	clrf	___aldiv@divisor+2
  7107  0FA0  01A3               	clrf	___aldiv@divisor+3
  7108  0FA1  084B               	movf	_bbtu+3,w
  7109  0FA2  00A7               	movwf	___aldiv@dividend+3
  7110  0FA3  084A               	movf	_bbtu+2,w
  7111  0FA4  00A6               	movwf	___aldiv@dividend+2
  7112  0FA5  0849               	movf	_bbtu+1,w
  7113  0FA6  00A5               	movwf	___aldiv@dividend+1
  7114  0FA7  0848               	movf	_bbtu,w
  7115  0FA8  00A4               	movwf	___aldiv@dividend
  7116  0FA9  0008               	return
  7117  0FAA                     __end_ofPL4:	
  7118  0FAA                     PL6:	
  7119  0FAA  0847               	movf	_PidKp+3,w
  7120  0FAB  00F7               	movwf	___lmul@multiplicand+3
  7121  0FAC  0846               	movf	_PidKp+2,w
  7122  0FAD  00F6               	movwf	___lmul@multiplicand+2
  7123  0FAE  0845               	movf	_PidKp+1,w
  7124  0FAF  00F5               	movwf	___lmul@multiplicand+1
  7125  0FB0  0844               	movf	_PidKp,w
  7126  0FB1  00F4               	movwf	___lmul@multiplicand
  7127  0FB2  0008               	return
  7128  0FB3                     __end_ofPL6:	
  7129  0FB3                     PL10:	
  7130  0FB3  00AF               	movwf	m_int_2_str_ex@x+1
  7131  0FB4  3010               	movlw	16
  7132  0FB5  01B0               	clrf	m_int_2_str_ex@x+2
  7133  0FB6  01B1               	clrf	m_int_2_str_ex@x+3
  7134  0FB7  00B2               	movwf	m_int_2_str_ex@ssize
  7135  0FB8  30C4               	movlw	(low (_str| 0))& (0+255)
  7136  0FB9  01B3               	clrf	m_int_2_str_ex@ssize+1
  7137  0FBA  0008               	return
  7138  0FBB                     __end_ofPL10:	
  7139  0FBB                     PL12:	
  7140  0FBB  00C3               	movwf	pid_run_process@t32+3
  7141  0FBC  0830               	movf	??_pid_run_process+2,w
  7142  0FBD  00C2               	movwf	pid_run_process@t32+2
  7143  0FBE  082F               	movf	??_pid_run_process+1,w
  7144  0FBF  00C1               	movwf	pid_run_process@t32+1
  7145  0FC0  082E               	movf	??_pid_run_process,w
  7146  0FC1  00C0               	movwf	pid_run_process@t32
  7147  0FC2  0008               	return
  7148  0FC3                     __end_ofPL12:	
  7149  0FC3                     PL14:	
  7150  0FC3  00AE               	movwf	m_int_2_str_ex@x
  7151  0FC4  3010               	movlw	16
  7152  0FC5  00B2               	movwf	m_int_2_str_ex@ssize
  7153  0FC6  30C4               	movlw	(low (_str| 0))& (0+255)
  7154  0FC7  01B3               	clrf	m_int_2_str_ex@ssize+1
  7155  0FC8  0008               	return
  7156  0FC9                     __end_ofPL14:	
  7157  0FC9                     PL16:	
  7158  0FC9  00F0               	movwf	___lmul@multiplier
  7159  0FCA  300A               	movlw	10
  7160  0FCB  00F4               	movwf	___lmul@multiplicand
  7161  0FCC  01F5               	clrf	___lmul@multiplicand+1
  7162  0FCD  01F6               	clrf	___lmul@multiplicand+2
  7163  0FCE  01F7               	clrf	___lmul@multiplicand+3
  7164  0FCF  0008               	return
  7165  0FD0                     __end_ofPL16:	
  7166  0FD0                     PL18:	
  7167  0FD0  3063               	movlw	99
  7168  0FD1  009E               	movwf	30	;volatile
  7169  0FD2  019F               	clrf	31	;volatile
  7170  0FD3  019B               	clrf	27	;volatile
  7171  0FD4  019C               	clrf	28	;volatile
  7172  0FD5  0008               	return
  7173  0FD6                     __end_ofPL18:	
  7174  0FD6                     PL20:	
  7175  0FD6  30C4               	movlw	low _str
  7176  0FD7  00F0               	movwf	uart_send_str@str
  7177  0FD8  3000               	movlw	high _str
  7178  0FD9  00F1               	movwf	uart_send_str@str+1
  7179  0FDA  0008               	return
  7180  0FDB                     __end_ofPL20:	
  7181  0FDB                     PL24:	
  7182  0FDB  3055               	movlw	85
  7183  0FDC  003C               	movlb	28	; select bank28
  7184  0FDD  008F               	movwf	15	;volatile
  7185  0FDE  30AA               	movlw	170
  7186  0FDF  008F               	movwf	15	;volatile
  7187  0FE0  0008               	return
  7188  0FE1                     __end_ofPL24:	
  7189  0FE1                     __ptext32:	
  7190 ;; *************** function _EUSART_Initialize *****************
  7191 ;; Defined at:
  7192 ;;		line 55 in file "mcc_generated_files/eusart.c"
  7193 ;; Parameters:    Size  Location     Type
  7194 ;;		None
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;		None
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  1    wreg      void 
  7199 ;; Registers used:
  7200 ;;		wreg
  7201 ;; Tracked objects:
  7202 ;;		On entry : 1F/0
  7203 ;;		On exit  : 1F/3
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7206 ;;      Params:         0       0       0       0       0       0       0       0
  7207 ;;      Locals:         0       0       0       0       0       0       0       0
  7208 ;;      Temps:          0       0       0       0       0       0       0       0
  7209 ;;      Totals:         0       0       0       0       0       0       0       0
  7210 ;;Total ram usage:        0 bytes
  7211 ;; Hardware stack levels used:    1
  7212 ;; Hardware stack levels required when called:    1
  7213 ;; This function calls:
  7214 ;;		Nothing
  7215 ;; This function is called by:
  7216 ;;		_SYSTEM_Initialize
  7217 ;; This function uses a non-reentrant model
  7218 ;;
  7219                           
  7220                           
  7221                           ;psect for function _EUSART_Initialize
  7222  0FE1                     _EUSART_Initialize:	
  7223  0FE1                     l2060:	
  7224                           ;incstack = 0
  7225                           ; Regs used in _EUSART_Initialize: [wreg]
  7226                           
  7227                           
  7228                           ;eusart.c: 60: BAUDCON = 0x08;
  7229  0FE1  3008               	movlw	8
  7230  0FE2  0023               	movlb	3	; select bank3
  7231  0FE3  009F               	movwf	31	;volatile
  7232                           
  7233                           ;eusart.c: 63: RCSTA = 0x90;
  7234  0FE4  3090               	movlw	144
  7235  0FE5  009D               	movwf	29	;volatile
  7236                           
  7237                           ;eusart.c: 66: TXSTA = 0x24;
  7238  0FE6  3024               	movlw	36
  7239  0FE7  009E               	movwf	30	;volatile
  7240                           
  7241                           ;eusart.c: 70: SPBRGL = 0xA0;
  7242  0FE8  30A0               	movlw	160
  7243  0FE9  009B               	movwf	27	;volatile
  7244                           
  7245                           ;eusart.c: 75: SPBRGH = 0x01;
  7246  0FEA  3001               	movlw	1
  7247  0FEB  009C               	movwf	28	;volatile
  7248  0FEC  0008               	return
  7249  0FED                     __end_of_EUSART_Initialize:	
  7250  0FED                     __ptext24:	
  7251 ;; *************** function _TMR2_Initialize *****************
  7252 ;; Defined at:
  7253 ;;		line 63 in file "mcc_generated_files/tmr2.c"
  7254 ;; Parameters:    Size  Location     Type
  7255 ;;		None
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;		None
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  1    wreg      void 
  7260 ;; Registers used:
  7261 ;;		wreg, status,2, status,0, pclath, cstack
  7262 ;; Tracked objects:
  7263 ;;		On entry : 1F/1
  7264 ;;		On exit  : 1F/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7267 ;;      Params:         0       0       0       0       0       0       0       0
  7268 ;;      Locals:         0       0       0       0       0       0       0       0
  7269 ;;      Temps:          0       0       0       0       0       0       0       0
  7270 ;;      Totals:         0       0       0       0       0       0       0       0
  7271 ;;Total ram usage:        0 bytes
  7272 ;; Hardware stack levels used:    1
  7273 ;; Hardware stack levels required when called:    2
  7274 ;; This function calls:
  7275 ;;		_TMR2_SetInterruptHandler
  7276 ;;		_TMR2_StartTimer
  7277 ;; This function is called by:
  7278 ;;		_SYSTEM_Initialize
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           
  7283                           ;psect for function _TMR2_Initialize
  7284  0FED                     _TMR2_Initialize:	
  7285                           
  7286                           ;tmr2.c: 68: T2CON = 0x4B;
  7287                           
  7288                           ;incstack = 0
  7289                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7290  0FED  304B               	movlw	75
  7291  0FEE  0020               	movlb	0	; select bank0
  7292  0FEF  009C               	movwf	28	;volatile
  7293                           
  7294                           ;tmr2.c: 71: PR2 = 0x7C;
  7295  0FF0  307C               	movlw	124
  7296  0FF1  009B               	movwf	27	;volatile
  7297                           
  7298                           ;tmr2.c: 74: TMR2 = 0x00;
  7299  0FF2  019A               	clrf	26	;volatile
  7300                           
  7301                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
  7302  0FF3  1091               	bcf	17,1	;volatile
  7303                           
  7304                           ;tmr2.c: 80: PIE1bits.TMR2IE = 1;
  7305  0FF4  0021               	movlb	1	; select bank1
  7306  0FF5  1491               	bsf	17,1	;volatile
  7307                           
  7308                           ;tmr2.c: 83: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  7309  0FF6  3000               	movlw	0
  7310  0FF7  01F0               	clrf	TMR2_SetInterruptHandler@InterruptHandler
  7311  0FF8  01F1               	clrf	TMR2_SetInterruptHandler@InterruptHandler+1
  7312  0FF9  27FC  3188         	fcall	_TMR2_SetInterruptHandler
  7313                           
  7314                           ;tmr2.c: 86: TMR2_StartTimer();
  7315  0FFB  2FFD               	ljmp	l1940
  7316  0FFC                     __end_of_TMR2_Initialize:	
  7317  0FFC                     __ptext26:	
  7318 ;; *************** function _TMR2_SetInterruptHandler *****************
  7319 ;; Defined at:
  7320 ;;		line 142 in file "mcc_generated_files/tmr2.c"
  7321 ;; Parameters:    Size  Location     Type
  7322 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  7323 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  7324 ;; Auto vars:     Size  Location     Type
  7325 ;;		None
  7326 ;; Return value:  Size  Location     Type
  7327 ;;                  1    wreg      void 
  7328 ;; Registers used:
  7329 ;;		None
  7330 ;; Tracked objects:
  7331 ;;		On entry : 1F/1
  7332 ;;		On exit  : 1F/1
  7333 ;;		Unchanged: 1F/0
  7334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7335 ;;      Params:         2       0       0       0       0       0       0       0
  7336 ;;      Locals:         0       0       0       0       0       0       0       0
  7337 ;;      Temps:          0       0       0       0       0       0       0       0
  7338 ;;      Totals:         2       0       0       0       0       0       0       0
  7339 ;;Total ram usage:        2 bytes
  7340 ;; Hardware stack levels used:    1
  7341 ;; Hardware stack levels required when called:    1
  7342 ;; This function calls:
  7343 ;;		Nothing
  7344 ;; This function is called by:
  7345 ;;		_TMR2_Initialize
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349                           
  7350                           ;psect for function _TMR2_SetInterruptHandler
  7351  0FFC                     _TMR2_SetInterruptHandler:	
  7352                           
  7353                           ;incstack = 0
  7354                           ; Regs used in _TMR2_SetInterruptHandler: []
  7355  0FFC  0008               	return
  7356  0FFD                     __end_of_TMR2_SetInterruptHandler:	
  7357  0FFD                     __ptext25:	
  7358 ;; *************** function _TMR2_StartTimer *****************
  7359 ;; Defined at:
  7360 ;;		line 89 in file "mcc_generated_files/tmr2.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;		None
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;		None
  7365 ;; Return value:  Size  Location     Type
  7366 ;;                  1    wreg      void 
  7367 ;; Registers used:
  7368 ;;		None
  7369 ;; Tracked objects:
  7370 ;;		On entry : 1F/1
  7371 ;;		On exit  : 1F/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7374 ;;      Params:         0       0       0       0       0       0       0       0
  7375 ;;      Locals:         0       0       0       0       0       0       0       0
  7376 ;;      Temps:          0       0       0       0       0       0       0       0
  7377 ;;      Totals:         0       0       0       0       0       0       0       0
  7378 ;;Total ram usage:        0 bytes
  7379 ;; Hardware stack levels used:    1
  7380 ;; Hardware stack levels required when called:    1
  7381 ;; This function calls:
  7382 ;;		Nothing
  7383 ;; This function is called by:
  7384 ;;		_TMR2_Initialize
  7385 ;; This function uses a non-reentrant model
  7386 ;;
  7387                           
  7388                           
  7389                           ;psect for function _TMR2_StartTimer
  7390  0FFD                     _TMR2_StartTimer:	
  7391  0FFD                     l1940:	
  7392                           ;incstack = 0
  7393                           ; Regs used in _TMR2_StartTimer: []
  7394                           
  7395                           
  7396                           ;tmr2.c: 92: T2CONbits.TMR2ON = 1;
  7397  0FFD  0020               	movlb	0	; select bank0
  7398  0FFE  151C               	bsf	28,2	;volatile
  7399  0FFF  0008               	return
  7400  1000                     __end_of_TMR2_StartTimer:	
  7401                           
  7402                           	psect	bssCOMMON
  7403  007D                     __pbssCOMMON:	
  7404  007D                     _Event:	
  7405  007D                     	ds	1
  7406                           
  7407                           	psect	bssBANK0
  7408  0044                     __pbssBANK0:	
  7409  0044                     _PidKp:	
  7410  0044                     	ds	4
  7411  0048                     _bbtu:	
  7412  0048                     	ds	4
  7413  004C                     _globalTicker:	
  7414  004C                     	ds	4
  7415  0050                     _eusartRxIdleTime_ms:	
  7416  0050                     	ds	2
  7417  0052                     _rtAdcValueRcHi:	
  7418  0052                     	ds	2
  7419  0054                     _rtAdcValueRcLo:	
  7420  0054                     	ds	2
  7421  0056                     _rtAdcValueRsHi:	
  7422  0056                     	ds	2
  7423  0058                     _rtAdcValueRsLo:	
  7424  0058                     	ds	2
  7425  005A                     _rtAdcValueRsLoAvg:	
  7426  005A                     	ds	2
  7427  005C                     _eusartRxCount:	
  7428  005C                     	ds	1
  7429  005D                     _eusartTxLen:	
  7430  005D                     	ds	1
  7431  005E                     _pidBbSm:	
  7432  005E                     	ds	1
  7433  005F                     _pidTestNum:	
  7434  005F                     	ds	1
  7435  0060                     _subTickerX:	
  7436  0060                     	ds	1
  7437  0061                     _subTickerX_1s:	
  7438  0061                     	ds	1
  7439                           
  7440                           	psect	dataBANK0
  7441  0062                     __pdataBANK0:	
  7442  0062                     _pidU:	
  7443  0062                     	ds	4
  7444  0066                     _resRc:	
  7445  0066                     	ds	4
  7446  006A                     _resRs:	
  7447  006A                     	ds	4
  7448  006E                     _pwm2DutyForVout:	
  7449  006E                     	ds	2
  7450                           
  7451                           	psect	bssBANK1
  7452  00A0                     __pbssBANK1:	
  7453  00A0                     _err:	
  7454  00A0                     	ds	12
  7455  00AC                     _PidTi:	
  7456  00AC                     	ds	4
  7457  00B0                     _bbku:	
  7458  00B0                     	ds	4
  7459  00B4                     _bbt0:	
  7460  00B4                     	ds	4
  7461  00B8                     _bbt1:	
  7462  00B8                     	ds	4
  7463  00BC                     _bbta:	
  7464  00BC                     	ds	4
  7465  00C0                     _bbu:	
  7466  00C0                     	ds	4
  7467  00C4                     _str:	
  7468  00C4                     	ds	16
  7469                           
  7470                           	psect	dataBANK1
  7471  00D4                     __pdataBANK1:	
  7472  00D4                     _bbmax:	
  7473  00D4                     	ds	4
  7474  00D8                     _bbmin:	
  7475  00D8                     	ds	4
  7476                           
  7477                           	psect	bssBANK2
  7478  0120                     __pbssBANK2:	
  7479  0120                     _eusartTxBuffer:	
  7480  0120                     	ds	64
  7481                           
  7482                           	psect	bssBANK3
  7483  01A0                     __pbssBANK3:	
  7484  01A0                     _eusartRxBuffer:	
  7485  01A0                     	ds	64
  7486                           
  7487                           	psect	clrtext
  7488  0192                     clear_ram0:	
  7489                           ;	Called with FSR0 containing the base address, and
  7490                           ;	WREG with the size to clear
  7491                           
  7492  0192  0064               	clrwdt	;clear the watchdog before getting into this loop
  7493  0193                     clrloop0:	
  7494  0193  0180               	clrf	0	;clear RAM location pointed to by FSR
  7495  0194  3101               	addfsr 0,1
  7496  0195  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7497  0196  2993               	goto	clrloop0	;have we reached the end yet?
  7498  0197  3400               	retlw	0	;all done for this memory range, return
  7499                           
  7500                           	psect	inittext
  7501  0198                     init_ram:	
  7502  0198  00FE               	movwf	126
  7503  0199                     initloop:	
  7504  0199  0012               	moviw fsr0++
  7505  019A  001E               	movwi fsr1++
  7506  019B  0BFE               	decfsz	126,f
  7507  019C  2999               	goto	initloop
  7508  019D  3400               	retlw	0
  7509                           
  7510                           	psect	cstackCOMMON
  7511  0070                     __pcstackCOMMON:	
  7512  0070                     ?_TMR2_SetInterruptHandler:	
  7513  0070                     ?_TMR2_StartTimer:	
  7514                           ; 1 bytes @ 0x0
  7515                           
  7516  0070                     ??_TMR2_StartTimer:	
  7517                           ; 1 bytes @ 0x0
  7518                           
  7519  0070                     ?_PIN_MANAGER_Initialize:	
  7520                           ; 1 bytes @ 0x0
  7521                           
  7522  0070                     ??_PIN_MANAGER_Initialize:	
  7523                           ; 1 bytes @ 0x0
  7524                           
  7525  0070                     ?_OSCILLATOR_Initialize:	
  7526                           ; 1 bytes @ 0x0
  7527                           
  7528  0070                     ??_OSCILLATOR_Initialize:	
  7529                           ; 1 bytes @ 0x0
  7530                           
  7531  0070                     ?_WDT_Initialize:	
  7532                           ; 1 bytes @ 0x0
  7533                           
  7534  0070                     ??_WDT_Initialize:	
  7535                           ; 1 bytes @ 0x0
  7536                           
  7537  0070                     ?_ADC1_Initialize:	
  7538                           ; 1 bytes @ 0x0
  7539                           
  7540  0070                     ??_ADC1_Initialize:	
  7541                           ; 1 bytes @ 0x0
  7542                           
  7543  0070                     ?_EUSART_Initialize:	
  7544                           ; 1 bytes @ 0x0
  7545                           
  7546  0070                     ??_EUSART_Initialize:	
  7547                           ; 1 bytes @ 0x0
  7548                           
  7549  0070                     ?_PWM2_Initialize:	
  7550                           ; 1 bytes @ 0x0
  7551                           
  7552  0070                     ??_PWM2_Initialize:	
  7553                           ; 1 bytes @ 0x0
  7554                           
  7555  0070                     ?_PWM1_Initialize:	
  7556                           ; 1 bytes @ 0x0
  7557                           
  7558  0070                     ??_PWM1_Initialize:	
  7559                           ; 1 bytes @ 0x0
  7560                           
  7561  0070                     ?_PWM1_Start:	
  7562                           ; 1 bytes @ 0x0
  7563                           
  7564  0070                     ??_PWM1_Start:	
  7565                           ; 1 bytes @ 0x0
  7566                           
  7567  0070                     ?_TMR2_Initialize:	
  7568                           ; 1 bytes @ 0x0
  7569                           
  7570  0070                     ?_INTERRUPT_InterruptManager:	
  7571                           ; 1 bytes @ 0x0
  7572                           
  7573  0070                     ??_INTERRUPT_InterruptManager:	
  7574                           ; 1 bytes @ 0x0
  7575                           
  7576  0070                     ?_FVR_Initialize:	
  7577                           ; 1 bytes @ 0x0
  7578                           
  7579  0070                     ??_FVR_Initialize:	
  7580                           ; 1 bytes @ 0x0
  7581                           
  7582  0070                     ?_SYSTEM_Initialize:	
  7583                           ; 1 bytes @ 0x0
  7584                           
  7585  0070                     ?_uart_send_str:	
  7586                           ; 1 bytes @ 0x0
  7587                           
  7588  0070                     ?_fvr_set_gain:	
  7589                           ; 1 bytes @ 0x0
  7590                           
  7591  0070                     ??_fvr_set_gain:	
  7592                           ; 1 bytes @ 0x0
  7593                           
  7594  0070                     ?_adc_init:	
  7595                           ; 1 bytes @ 0x0
  7596                           
  7597  0070                     ??_adc_init:	
  7598                           ; 1 bytes @ 0x0
  7599                           
  7600  0070                     ?_pid_b_b_process:	
  7601                           ; 1 bytes @ 0x0
  7602                           
  7603  0070                     ?_pid_run_process:	
  7604                           ; 1 bytes @ 0x0
  7605                           
  7606  0070                     ?_main:	
  7607                           ; 1 bytes @ 0x0
  7608                           
  7609  0070                     ?_m_mem_set:	
  7610                           ; 1 bytes @ 0x0
  7611                           
  7612  0070                     ?_m_mem_cpy:	
  7613                           ; 1 bytes @ 0x0
  7614                           
  7615  0070                     ?_get_idrv_pwm1_duty:	
  7616                           ; 1 bytes @ 0x0
  7617                           
  7618  0070                     ?_get_vout_pwm2_duty:	
  7619                           ; 2 bytes @ 0x0
  7620                           
  7621  0070                     ?_calc_current_rs_avg:	
  7622                           ; 2 bytes @ 0x0
  7623                           
  7624  0070                     ?___lmul:	
  7625                           ; 2 bytes @ 0x0
  7626                           
  7627  0070                     ?___almod:	
  7628                           ; 4 bytes @ 0x0
  7629                           
  7630  0070                     ?___lldiv:	
  7631                           ; 4 bytes @ 0x0
  7632                           
  7633  0070                     PIN_MANAGER_Initialize@state:	
  7634                           ; 4 bytes @ 0x0
  7635                           
  7636  0070                     fvr_set_gain@t8:	
  7637                           ; 1 bytes @ 0x0
  7638                           
  7639  0070                     m_mem_set@x:	
  7640                           ; 1 bytes @ 0x0
  7641                           
  7642  0070                     m_mem_cpy@s:	
  7643                           ; 1 bytes @ 0x0
  7644                           
  7645  0070                     TMR2_SetInterruptHandler@InterruptHandler:	
  7646                           ; 1 bytes @ 0x0
  7647                           
  7648  0070                     uart_send_str@str:	
  7649                           ; 2 bytes @ 0x0
  7650                           
  7651  0070                     ___lmul@multiplier:	
  7652                           ; 2 bytes @ 0x0
  7653                           
  7654  0070                     ___almod@divisor:	
  7655                           ; 4 bytes @ 0x0
  7656                           
  7657  0070                     ___lldiv@divisor:	
  7658                           ; 4 bytes @ 0x0
  7659                           
  7660                           
  7661                           ; 4 bytes @ 0x0
  7662  0070                     	ds	1
  7663  0071                     ??_m_mem_cpy:	
  7664  0071                     fvr_set_gain@g:	
  7665                           ; 1 bytes @ 0x1
  7666                           
  7667  0071                     adc_init@ch:	
  7668                           ; 1 bytes @ 0x1
  7669                           
  7670  0071                     m_mem_cpy@d:	
  7671                           ; 1 bytes @ 0x1
  7672                           
  7673  0071                     m_mem_set@len:	
  7674                           ; 1 bytes @ 0x1
  7675                           
  7676                           
  7677                           ; 2 bytes @ 0x1
  7678  0071                     	ds	1
  7679  0072                     ??_TMR2_SetInterruptHandler:	
  7680  0072                     ??_TMR2_Initialize:	
  7681                           ; 1 bytes @ 0x2
  7682                           
  7683  0072                     ??_SYSTEM_Initialize:	
  7684                           ; 1 bytes @ 0x2
  7685                           
  7686  0072                     ??_uart_send_str:	
  7687                           ; 1 bytes @ 0x2
  7688                           
  7689  0072                     ??_get_idrv_pwm1_duty:	
  7690                           ; 1 bytes @ 0x2
  7691                           
  7692  0072                     ?_set_idrv_pwm1_duty:	
  7693                           ; 1 bytes @ 0x2
  7694                           
  7695  0072                     ??_get_vout_pwm2_duty:	
  7696                           ; 1 bytes @ 0x2
  7697                           
  7698  0072                     ?_set_vout_pwm2_duty:	
  7699                           ; 1 bytes @ 0x2
  7700                           
  7701  0072                     ??_calc_current_rs_avg:	
  7702                           ; 1 bytes @ 0x2
  7703                           
  7704  0072                     ?_adc_sample:	
  7705                           ; 1 bytes @ 0x2
  7706                           
  7707  0072                     adc_sample@gfvr:	
  7708                           ; 2 bytes @ 0x2
  7709                           
  7710  0072                     set_idrv_pwm1_duty@duty:	
  7711                           ; 1 bytes @ 0x2
  7712                           
  7713  0072                     set_vout_pwm2_duty@duty:	
  7714                           ; 2 bytes @ 0x2
  7715                           
  7716                           
  7717                           ; 2 bytes @ 0x2
  7718  0072                     	ds	1
  7719  0073                     ??_m_mem_set:	
  7720  0073                     adc_sample@num:	
  7721                           ; 1 bytes @ 0x3
  7722                           
  7723  0073                     m_mem_set@buf:	
  7724                           ; 1 bytes @ 0x3
  7725                           
  7726                           
  7727                           ; 1 bytes @ 0x3
  7728  0073                     	ds	1
  7729  0074                     ??_set_idrv_pwm1_duty:	
  7730  0074                     ??_set_vout_pwm2_duty:	
  7731                           ; 1 bytes @ 0x4
  7732                           
  7733  0074                     ??_adc_sample:	
  7734                           ; 1 bytes @ 0x4
  7735                           
  7736  0074                     set_idrv_pwm1_duty@t16:	
  7737                           ; 1 bytes @ 0x4
  7738                           
  7739  0074                     set_vout_pwm2_duty@t16:	
  7740                           ; 2 bytes @ 0x4
  7741                           
  7742  0074                     ___lmul@multiplicand:	
  7743                           ; 2 bytes @ 0x4
  7744                           
  7745  0074                     ___almod@dividend:	
  7746                           ; 4 bytes @ 0x4
  7747                           
  7748  0074                     ___lldiv@dividend:	
  7749                           ; 4 bytes @ 0x4
  7750                           
  7751                           
  7752                           ; 4 bytes @ 0x4
  7753  0074                     	ds	1
  7754  0075                     adc_sample@ch:	
  7755                           
  7756                           ; 1 bytes @ 0x5
  7757  0075                     	ds	1
  7758  0076                     adc_sample@ret:	
  7759                           
  7760                           ; 2 bytes @ 0x6
  7761  0076                     	ds	2
  7762  0078                     ??___lmul:	
  7763  0078                     ??___almod:	
  7764                           ; 1 bytes @ 0x8
  7765                           
  7766  0078                     ??___lldiv:	
  7767                           ; 1 bytes @ 0x8
  7768                           
  7769  0078                     adc_sample@i:	
  7770                           ; 1 bytes @ 0x8
  7771                           
  7772  0078                     ___almod@counter:	
  7773                           ; 1 bytes @ 0x8
  7774                           
  7775  0078                     ___lmul@product:	
  7776                           ; 1 bytes @ 0x8
  7777                           
  7778  0078                     ___lldiv@quotient:	
  7779                           ; 4 bytes @ 0x8
  7780                           
  7781                           
  7782                           ; 4 bytes @ 0x8
  7783  0078                     	ds	1
  7784  0079                     ___almod@sign:	
  7785  0079                     adc_sample@t16:	
  7786                           ; 1 bytes @ 0x9
  7787                           
  7788                           
  7789                           ; 2 bytes @ 0x9
  7790  0079                     	ds	3
  7791  007C                     ??_pid_b_b_process:	
  7792  007C                     ??___aldiv:	
  7793                           ; 1 bytes @ 0xC
  7794                           
  7795  007C                     ___lldiv@counter:	
  7796                           ; 1 bytes @ 0xC
  7797                           
  7798                           
  7799                           ; 1 bytes @ 0xC
  7800  007C                     	ds	1
  7801  007D                     ??_calc_temp_rs:	
  7802  007D                     ??_cal_voout_pwm_duty:	
  7803                           ; 1 bytes @ 0xD
  7804                           
  7805  007D                     ??_main:	
  7806                           ; 1 bytes @ 0xD
  7807                           
  7808                           
  7809                           	psect	cstackBANK0
  7810  0020                     __pcstackBANK0:	
  7811                           ; 1 bytes @ 0xD
  7812                           
  7813  0020                     ?_cal_voout_pwm_duty:	
  7814  0020                     ?_calc_temp_rs:	
  7815                           ; 2 bytes @ 0x0
  7816                           
  7817  0020                     ?_calc_temp_rc:	
  7818                           ; 4 bytes @ 0x0
  7819                           
  7820  0020                     ?___aldiv:	
  7821                           ; 4 bytes @ 0x0
  7822                           
  7823  0020                     ___aldiv@divisor:	
  7824                           ; 4 bytes @ 0x0
  7825                           
  7826                           
  7827                           ; 4 bytes @ 0x0
  7828  0020                     	ds	2
  7829  0022                     cal_voout_pwm_duty@t32:	
  7830                           
  7831                           ; 4 bytes @ 0x2
  7832  0022                     	ds	2
  7833  0024                     ??_calc_temp_rc:	
  7834  0024                     calc_temp_rs@x:	
  7835                           ; 1 bytes @ 0x4
  7836                           
  7837  0024                     ___aldiv@dividend:	
  7838                           ; 4 bytes @ 0x4
  7839                           
  7840                           
  7841                           ; 4 bytes @ 0x4
  7842  0024                     	ds	4
  7843  0028                     ___aldiv@counter:	
  7844  0028                     calc_temp_rs@y:	
  7845                           ; 1 bytes @ 0x8
  7846                           
  7847  0028                     calc_temp_rc@x:	
  7848                           ; 4 bytes @ 0x8
  7849                           
  7850                           
  7851                           ; 4 bytes @ 0x8
  7852  0028                     	ds	1
  7853  0029                     ___aldiv@sign:	
  7854                           
  7855                           ; 1 bytes @ 0x9
  7856  0029                     	ds	1
  7857  002A                     ___aldiv@quotient:	
  7858                           
  7859                           ; 4 bytes @ 0xA
  7860  002A                     	ds	2
  7861  002C                     calc_temp_rc@y:	
  7862                           
  7863                           ; 4 bytes @ 0xC
  7864  002C                     	ds	2
  7865  002E                     ?_m_int_2_str_ex:	
  7866  002E                     ??_pid_run_process:	
  7867                           ; 1 bytes @ 0xE
  7868                           
  7869  002E                     pid_b_b_process@t32:	
  7870                           ; 1 bytes @ 0xE
  7871                           
  7872  002E                     m_int_2_str_ex@x:	
  7873                           ; 4 bytes @ 0xE
  7874                           
  7875                           
  7876                           ; 4 bytes @ 0xE
  7877  002E                     	ds	4
  7878  0032                     m_int_2_str_ex@ssize:	
  7879  0032                     pid_run_process@ep:	
  7880                           ; 2 bytes @ 0x12
  7881                           
  7882                           
  7883                           ; 4 bytes @ 0x12
  7884  0032                     	ds	2
  7885  0034                     ??_m_int_2_str_ex:	
  7886                           
  7887                           ; 1 bytes @ 0x14
  7888  0034                     	ds	2
  7889  0036                     pid_run_process@ei:	
  7890                           
  7891                           ; 4 bytes @ 0x16
  7892  0036                     	ds	2
  7893  0038                     m_int_2_str_ex@t:	
  7894                           
  7895                           ; 4 bytes @ 0x18
  7896  0038                     	ds	4
  7897  003C                     m_int_2_str_ex@sig:	
  7898                           
  7899                           ; 1 bytes @ 0x1C
  7900  003C                     	ds	1
  7901  003D                     m_int_2_str_ex@i:	
  7902                           
  7903                           ; 1 bytes @ 0x1D
  7904  003D                     	ds	1
  7905  003E                     m_int_2_str_ex@buf:	
  7906  003E                     pid_run_process@t16:	
  7907                           ; 1 bytes @ 0x1E
  7908                           
  7909                           
  7910                           ; 2 bytes @ 0x1E
  7911  003E                     	ds	2
  7912  0040                     pid_run_process@t32:	
  7913                           
  7914                           ; 4 bytes @ 0x20
  7915  0040                     	ds	4
  7916                           
  7917                           	psect	swtext1
  7918  017E                     __pswtext1:	
  7919  017E                     S2600:	
  7920  017E  318B  2B7B         	ljmp	l2328
  7921  0180  318B  2B7B         	ljmp	l2328
  7922  0182  318B  2B84         	ljmp	l2334
  7923  0184  318B  2B9A         	ljmp	l2340
  7924  0186  318B  2BC9         	ljmp	l2354
  7925  0188  318D  2D37         	ljmp	l630
  7926                           
  7927                           	psect	text10
  7928  015A                     __ptext10:	
  7929 ;; *************** function _m_mem_cpy *****************
  7930 ;; Defined at:
  7931 ;;		line 39 in file "src/depend/m_string.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  d               1    wreg     PTR unsigned char 
  7934 ;;		 -> str(16), 
  7935 ;;  s               1    0[COMMON] PTR unsigned char 
  7936 ;;		 -> str(16), 
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;  d               1    1[COMMON] PTR unsigned char 
  7939 ;;		 -> str(16), 
  7940 ;; Return value:  Size  Location     Type
  7941 ;;                  1    wreg      void 
  7942 ;; Registers used:
  7943 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7944 ;; Tracked objects:
  7945 ;;		On entry : 1F/0
  7946 ;;		On exit  : 1F/0
  7947 ;;		Unchanged: 1F/0
  7948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7949 ;;      Params:         1       0       0       0       0       0       0       0
  7950 ;;      Locals:         1       0       0       0       0       0       0       0
  7951 ;;      Temps:          0       0       0       0       0       0       0       0
  7952 ;;      Totals:         2       0       0       0       0       0       0       0
  7953 ;;Total ram usage:        2 bytes
  7954 ;; Hardware stack levels used:    1
  7955 ;; Hardware stack levels required when called:    1
  7956 ;; This function calls:
  7957 ;;		Nothing
  7958 ;; This function is called by:
  7959 ;;		_m_int_2_str_ex
  7960 ;; This function uses a non-reentrant model
  7961 ;;
  7962                           
  7963                           
  7964                           ;psect for function _m_mem_cpy
  7965  015A                     _m_mem_cpy:	
  7966                           
  7967                           ;incstack = 0
  7968                           ; Regs used in _m_mem_cpy: [wreg-fsr1h+status,2+status,0]
  7969                           ;m_mem_cpy@d stored from wreg
  7970  015A  00F1               	movwf	m_mem_cpy@d
  7971  015B                     l2114:	
  7972                           ;m_string.c: 41: while(*s!='\0')
  7973                           
  7974  015B  0870               	movf	m_mem_cpy@s,w
  7975  015C  0086               	movwf	6
  7976  015D  0187               	clrf	7
  7977  015E  0801               	movf	1,w
  7978  015F  1903               	btfsc	3,2
  7979  0160  296B               	goto	l2116
  7980                           
  7981                           ;m_string.c: 42: {
  7982                           ;m_string.c: 43: *d++=*s++;
  7983  0161  0871               	movf	m_mem_cpy@d,w
  7984  0162  0086               	movwf	6
  7985  0163  0870               	movf	m_mem_cpy@s,w
  7986  0164  0084               	movwf	4
  7987  0165  0185               	clrf	5
  7988  0166  0800               	movf	0,w
  7989  0167  0081               	movwf	1
  7990  0168  0AF0               	incf	m_mem_cpy@s,f
  7991  0169  0AF1               	incf	m_mem_cpy@d,f
  7992  016A  295B               	goto	l2114
  7993  016B                     l2116:	
  7994                           
  7995                           ;m_string.c: 44: }
  7996                           ;m_string.c: 45: *d='\0';
  7997  016B  0871               	movf	m_mem_cpy@d,w
  7998  016C  0086               	movwf	6
  7999  016D  0187               	clrf	7
  8000  016E  0181               	clrf	1
  8001  016F  0008               	return
  8002  0170                     __end_of_m_mem_cpy:	
  8003                           
  8004                           	psect	text11
  8005  00D3                     __ptext11:	
  8006 ;; *************** function ___almod *****************
  8007 ;; Defined at:
  8008 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\almod.c"
  8009 ;; Parameters:    Size  Location     Type
  8010 ;;  divisor         4    0[COMMON] long 
  8011 ;;  dividend        4    4[COMMON] long 
  8012 ;; Auto vars:     Size  Location     Type
  8013 ;;  sign            1    9[COMMON] unsigned char 
  8014 ;;  counter         1    8[COMMON] unsigned char 
  8015 ;; Return value:  Size  Location     Type
  8016 ;;                  4    0[COMMON] long 
  8017 ;; Registers used:
  8018 ;;		wreg, status,2, status,0
  8019 ;; Tracked objects:
  8020 ;;		On entry : 1F/0
  8021 ;;		On exit  : 1F/0
  8022 ;;		Unchanged: 1F/0
  8023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8024 ;;      Params:         8       0       0       0       0       0       0       0
  8025 ;;      Locals:         2       0       0       0       0       0       0       0
  8026 ;;      Temps:          0       0       0       0       0       0       0       0
  8027 ;;      Totals:        10       0       0       0       0       0       0       0
  8028 ;;Total ram usage:       10 bytes
  8029 ;; Hardware stack levels used:    1
  8030 ;; Hardware stack levels required when called:    1
  8031 ;; This function calls:
  8032 ;;		Nothing
  8033 ;; This function is called by:
  8034 ;;		_m_int_2_str_ex
  8035 ;; This function uses a non-reentrant model
  8036 ;;
  8037                           
  8038                           
  8039                           ;psect for function ___almod
  8040  00D3                     ___almod:	
  8041                           
  8042                           ;incstack = 0
  8043                           ; Regs used in ___almod: [wreg+status,2+status,0]
  8044  00D3  01F9               	clrf	___almod@sign
  8045  00D4  1FF7               	btfss	___almod@dividend+3,7
  8046  00D5  28E0               	goto	l956
  8047  00D6  212D  3180         	fcall	PL22	;call to abstracted procedure
  8048  00D8  1903               	skipnz
  8049  00D9  0AF5               	incf	___almod@dividend+1,f
  8050  00DA  1903               	skipnz
  8051  00DB  0AF6               	incf	___almod@dividend+2,f
  8052  00DC  1903               	skipnz
  8053  00DD  0AF7               	incf	___almod@dividend+3,f
  8054  00DE  01F9               	clrf	___almod@sign
  8055  00DF  0AF9               	incf	___almod@sign,f
  8056  00E0                     l956:	
  8057  00E0  1FF3               	btfss	___almod@divisor+3,7
  8058  00E1  28ED               	goto	l2178
  8059  00E2  09F0               	comf	___almod@divisor,f
  8060  00E3  09F1               	comf	___almod@divisor+1,f
  8061  00E4  09F2               	comf	___almod@divisor+2,f
  8062  00E5  09F3               	comf	___almod@divisor+3,f
  8063  00E6  0AF0               	incf	___almod@divisor,f
  8064  00E7  1903               	skipnz
  8065  00E8  0AF1               	incf	___almod@divisor+1,f
  8066  00E9  1903               	skipnz
  8067  00EA  0AF2               	incf	___almod@divisor+2,f
  8068  00EB  1903               	skipnz
  8069  00EC  0AF3               	incf	___almod@divisor+3,f
  8070  00ED                     l2178:	
  8071  00ED  0873               	movf	___almod@divisor+3,w
  8072  00EE  0472               	iorwf	___almod@divisor+2,w
  8073  00EF  0471               	iorwf	___almod@divisor+1,w
  8074  00F0  0470               	iorwf	___almod@divisor,w
  8075  00F1  1903               	skipnz
  8076  00F2  291A               	goto	l2194
  8077  00F3  01F8               	clrf	___almod@counter
  8078  00F4                     L4:	
  8079  00F4  0AF8               	incf	___almod@counter,f
  8080  00F5  1BF3               	btfsc	___almod@divisor+3,7
  8081  00F6  28FC               	goto	l2186
  8082  00F7  35F0               	lslf	___almod@divisor,f
  8083  00F8  0DF1               	rlf	___almod@divisor+1,f
  8084  00F9  0DF2               	rlf	___almod@divisor+2,f
  8085  00FA  0DF3               	rlf	___almod@divisor+3,f
  8086  00FB  28F4               	goto	L4
  8087  00FC                     l2186:	
  8088  00FC  0873               	movf	___almod@divisor+3,w
  8089  00FD  0277               	subwf	___almod@dividend+3,w
  8090  00FE  1D03               	skipz
  8091  00FF  290A               	goto	u885
  8092  0100  0872               	movf	___almod@divisor+2,w
  8093  0101  0276               	subwf	___almod@dividend+2,w
  8094  0102  1D03               	skipz
  8095  0103  290A               	goto	u885
  8096  0104  0871               	movf	___almod@divisor+1,w
  8097  0105  0275               	subwf	___almod@dividend+1,w
  8098  0106  1D03               	skipz
  8099  0107  290A               	goto	u885
  8100  0108  0870               	movf	___almod@divisor,w
  8101  0109  0274               	subwf	___almod@dividend,w
  8102  010A                     u885:	
  8103  010A  1C03               	skipc
  8104  010B  2914               	goto	l2190
  8105  010C  0870               	movf	___almod@divisor,w
  8106  010D  02F4               	subwf	___almod@dividend,f
  8107  010E  0871               	movf	___almod@divisor+1,w
  8108  010F  3BF5               	subwfb	___almod@dividend+1,f
  8109  0110  0872               	movf	___almod@divisor+2,w
  8110  0111  3BF6               	subwfb	___almod@dividend+2,f
  8111  0112  0873               	movf	___almod@divisor+3,w
  8112  0113  3BF7               	subwfb	___almod@dividend+3,f
  8113  0114                     l2190:	
  8114  0114  36F3               	lsrf	___almod@divisor+3,f
  8115  0115  0CF2               	rrf	___almod@divisor+2,f
  8116  0116  0CF1               	rrf	___almod@divisor+1,f
  8117  0117  0CF0               	rrf	___almod@divisor,f
  8118  0118  0BF8               	decfsz	___almod@counter,f
  8119  0119  28FC               	goto	l2186
  8120  011A                     l2194:	
  8121  011A  0879               	movf	___almod@sign,w
  8122  011B  1903               	btfsc	3,2
  8123  011C  2924               	goto	l2198
  8124  011D  212D               	fcall	PL22	;call to abstracted procedure
  8125  011E  1903               	skipnz
  8126  011F  0AF5               	incf	___almod@dividend+1,f
  8127  0120  1903               	skipnz
  8128  0121  0AF6               	incf	___almod@dividend+2,f
  8129  0122  1903               	skipnz
  8130  0123  0AF7               	incf	___almod@dividend+3,f
  8131  0124                     l2198:	
  8132  0124  0877               	movf	___almod@dividend+3,w
  8133  0125  00F3               	movwf	?___almod+3
  8134  0126  0876               	movf	___almod@dividend+2,w
  8135  0127  00F2               	movwf	?___almod+2
  8136  0128  0875               	movf	___almod@dividend+1,w
  8137  0129  00F1               	movwf	?___almod+1
  8138  012A  0874               	movf	___almod@dividend,w
  8139  012B  00F0               	movwf	?___almod
  8140  012C  0008               	return
  8141  012D                     __end_of___almod:	
  8142  012D                     PL22:	
  8143  012D  09F4               	comf	___almod@dividend,f
  8144  012E  09F5               	comf	___almod@dividend+1,f
  8145  012F  09F6               	comf	___almod@dividend+2,f
  8146  0130  09F7               	comf	___almod@dividend+3,f
  8147  0131  0AF4               	incf	___almod@dividend,f
  8148  0132  0008               	return
  8149  0133                     __end_ofPL22:	
  8150                           
  8151                           	psect	text14
  8152  0028                     __ptext14:	
  8153 ;; *************** function _calc_temp_rc *****************
  8154 ;; Defined at:
  8155 ;;		line 124 in file "src/api/sample.c"
  8156 ;; Parameters:    Size  Location     Type
  8157 ;;		None
  8158 ;; Auto vars:     Size  Location     Type
  8159 ;;  y               4   12[BANK0 ] unsigned long 
  8160 ;;  x               4    8[BANK0 ] unsigned long 
  8161 ;; Return value:  Size  Location     Type
  8162 ;;                  4    0[BANK0 ] unsigned long 
  8163 ;; Registers used:
  8164 ;;		wreg, status,2, status,0, pclath, cstack
  8165 ;; Tracked objects:
  8166 ;;		On entry : 1F/0
  8167 ;;		On exit  : 1F/0
  8168 ;;		Unchanged: 0/0
  8169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8170 ;;      Params:         0       4       0       0       0       0       0       0
  8171 ;;      Locals:         0       8       0       0       0       0       0       0
  8172 ;;      Temps:          0       4       0       0       0       0       0       0
  8173 ;;      Totals:         0      16       0       0       0       0       0       0
  8174 ;;Total ram usage:       16 bytes
  8175 ;; Hardware stack levels used:    1
  8176 ;; Hardware stack levels required when called:    2
  8177 ;; This function calls:
  8178 ;;		___lldiv
  8179 ;;		___lmul
  8180 ;; This function is called by:
  8181 ;;		_main
  8182 ;; This function uses a non-reentrant model
  8183 ;;
  8184                           
  8185                           
  8186                           ;psect for function _calc_temp_rc
  8187  0028                     _calc_temp_rc:	
  8188                           
  8189                           ;sample.c: 127: uint32_t x,y;
  8190                           ;sample.c: 128: x=300000UL;
  8191                           
  8192                           ;incstack = 0
  8193                           ; Regs used in _calc_temp_rc: [wreg+status,2+status,0+pclath+cstack]
  8194  0028  3004               	movlw	4
  8195  0029  01AB               	clrf	calc_temp_rc@x+3
  8196  002A  00AA               	movwf	calc_temp_rc@x+2
  8197  002B  3093               	movlw	147
  8198  002C  00A9               	movwf	calc_temp_rc@x+1
  8199  002D  30E0               	movlw	224
  8200  002E  00A8               	movwf	calc_temp_rc@x
  8201                           
  8202                           ;sample.c: 129: x=x*rtAdcValueRcLo;
  8203  002F  0854               	movf	_rtAdcValueRcLo,w
  8204  0030  00F0               	movwf	___lmul@multiplier
  8205  0031  0855               	movf	_rtAdcValueRcLo+1,w
  8206  0032  00F1               	movwf	___lmul@multiplier+1
  8207  0033  01F2               	clrf	___lmul@multiplier+2
  8208  0034  01F3               	clrf	___lmul@multiplier+3
  8209  0035  082B               	movf	calc_temp_rc@x+3,w
  8210  0036  00F7               	movwf	___lmul@multiplicand+3
  8211  0037  082A               	movf	calc_temp_rc@x+2,w
  8212  0038  00F6               	movwf	___lmul@multiplicand+2
  8213  0039  0829               	movf	calc_temp_rc@x+1,w
  8214  003A  00F5               	movwf	___lmul@multiplicand+1
  8215  003B  0828               	movf	calc_temp_rc@x,w
  8216  003C  00F4               	movwf	___lmul@multiplicand
  8217  003D  318D  25A4  3180   	fcall	___lmul
  8218  0040  0873               	movf	?___lmul+3,w
  8219  0041  0020               	movlb	0	; select bank0
  8220  0042  00AB               	movwf	calc_temp_rc@x+3
  8221  0043  0872               	movf	?___lmul+2,w
  8222  0044  00AA               	movwf	calc_temp_rc@x+2
  8223  0045  0871               	movf	?___lmul+1,w
  8224  0046  00A9               	movwf	calc_temp_rc@x+1
  8225  0047  0870               	movf	?___lmul,w
  8226  0048  00A8               	movwf	calc_temp_rc@x
  8227                           
  8228                           ;sample.c: 132: y=rtAdcValueRcHi;
  8229  0049  0852               	movf	_rtAdcValueRcHi,w
  8230  004A  00AC               	movwf	calc_temp_rc@y
  8231  004B  0853               	movf	_rtAdcValueRcHi+1,w
  8232  004C  00AD               	movwf	calc_temp_rc@y+1
  8233  004D  300C               	movlw	12
  8234  004E  01AE               	clrf	calc_temp_rc@y+2
  8235  004F  01AF               	clrf	calc_temp_rc@y+3
  8236                           
  8237                           ;sample.c: 133: y=y*3140;
  8238  0050  01F3               	clrf	___lmul@multiplier+3
  8239  0051  01F2               	clrf	___lmul@multiplier+2
  8240  0052  00F1               	movwf	___lmul@multiplier+1
  8241  0053  3044               	movlw	68
  8242  0054  00F0               	movwf	___lmul@multiplier
  8243  0055  082F               	movf	calc_temp_rc@y+3,w
  8244  0056  00F7               	movwf	___lmul@multiplicand+3
  8245  0057  082E               	movf	calc_temp_rc@y+2,w
  8246  0058  00F6               	movwf	___lmul@multiplicand+2
  8247  0059  082D               	movf	calc_temp_rc@y+1,w
  8248  005A  00F5               	movwf	___lmul@multiplicand+1
  8249  005B  082C               	movf	calc_temp_rc@y,w
  8250  005C  00F4               	movwf	___lmul@multiplicand
  8251  005D  318D  25A4  3180   	fcall	___lmul
  8252  0060  0873               	movf	?___lmul+3,w
  8253  0061  0020               	movlb	0	; select bank0
  8254  0062  00AF               	movwf	calc_temp_rc@y+3
  8255  0063  0872               	movf	?___lmul+2,w
  8256  0064  00AE               	movwf	calc_temp_rc@y+2
  8257  0065  0871               	movf	?___lmul+1,w
  8258  0066  00AD               	movwf	calc_temp_rc@y+1
  8259  0067  0870               	movf	?___lmul,w
  8260  0068  00AC               	movwf	calc_temp_rc@y
  8261                           
  8262                           ;sample.c: 134: y=y/100;
  8263  0069  3064               	movlw	100
  8264  006A  00F0               	movwf	___lldiv@divisor
  8265  006B  01F1               	clrf	___lldiv@divisor+1
  8266  006C  01F2               	clrf	___lldiv@divisor+2
  8267  006D  01F3               	clrf	___lldiv@divisor+3
  8268  006E  082F               	movf	calc_temp_rc@y+3,w
  8269  006F  00F7               	movwf	___lldiv@dividend+3
  8270  0070  082E               	movf	calc_temp_rc@y+2,w
  8271  0071  00F6               	movwf	___lldiv@dividend+2
  8272  0072  082D               	movf	calc_temp_rc@y+1,w
  8273  0073  00F5               	movwf	___lldiv@dividend+1
  8274  0074  082C               	movf	calc_temp_rc@y,w
  8275  0075  00F4               	movwf	___lldiv@dividend
  8276  0076  318E  26A9  3180   	fcall	___lldiv
  8277  0079  20CA               	fcall	PL8	;call to abstracted procedure
  8278                           
  8279                           ;sample.c: 135: y=y-rtAdcValueRcLo;
  8280  007A  0854               	movf	_rtAdcValueRcLo,w
  8281  007B  00A4               	movwf	??_calc_temp_rc
  8282  007C  0855               	movf	_rtAdcValueRcLo+1,w
  8283  007D  00A5               	movwf	??_calc_temp_rc+1
  8284  007E  01A6               	clrf	??_calc_temp_rc+2
  8285  007F  01A7               	clrf	??_calc_temp_rc+3
  8286  0080  0824               	movf	??_calc_temp_rc,w
  8287  0081  02AC               	subwf	calc_temp_rc@y,f
  8288  0082  0825               	movf	??_calc_temp_rc+1,w
  8289  0083  3BAD               	subwfb	calc_temp_rc@y+1,f
  8290  0084  0826               	movf	??_calc_temp_rc+2,w
  8291  0085  3BAE               	subwfb	calc_temp_rc@y+2,f
  8292  0086  0827               	movf	??_calc_temp_rc+3,w
  8293  0087  3BAF               	subwfb	calc_temp_rc@y+3,f
  8294                           
  8295                           ;sample.c: 138: y=x/y;
  8296  0088  082F               	movf	calc_temp_rc@y+3,w
  8297  0089  00F3               	movwf	___lldiv@divisor+3
  8298  008A  082E               	movf	calc_temp_rc@y+2,w
  8299  008B  00F2               	movwf	___lldiv@divisor+2
  8300  008C  082D               	movf	calc_temp_rc@y+1,w
  8301  008D  00F1               	movwf	___lldiv@divisor+1
  8302  008E  082C               	movf	calc_temp_rc@y,w
  8303  008F  00F0               	movwf	___lldiv@divisor
  8304  0090  082B               	movf	calc_temp_rc@x+3,w
  8305  0091  00F7               	movwf	___lldiv@dividend+3
  8306  0092  082A               	movf	calc_temp_rc@x+2,w
  8307  0093  00F6               	movwf	___lldiv@dividend+2
  8308  0094  0829               	movf	calc_temp_rc@x+1,w
  8309  0095  00F5               	movwf	___lldiv@dividend+1
  8310  0096  0828               	movf	calc_temp_rc@x,w
  8311  0097  00F4               	movwf	___lldiv@dividend
  8312  0098  318E  26A9  3180   	fcall	___lldiv
  8313  009B  20CA  3180         	fcall	PL8	;call to abstracted procedure
  8314                           
  8315                           ;sample.c: 139: if(y<2000)y=2000;
  8316  009D  082F               	movf	calc_temp_rc@y+3,w
  8317  009E  1D03               	btfss	3,2
  8318  009F  28AF               	goto	l2320
  8319  00A0  082E               	movf	calc_temp_rc@y+2,w
  8320  00A1  1D03               	btfss	3,2
  8321  00A2  28AF               	goto	l2320
  8322  00A3  30D0               	movlw	208
  8323  00A4  022C               	subwf	calc_temp_rc@y,w
  8324  00A5  3007               	movlw	7
  8325  00A6  3B2D               	subwfb	calc_temp_rc@y+1,w
  8326  00A7  1803               	btfsc	3,0
  8327  00A8  28AF               	goto	l2320
  8328  00A9  3007               	movlw	7
  8329  00AA  01AF               	clrf	calc_temp_rc@y+3
  8330  00AB  01AE               	clrf	calc_temp_rc@y+2
  8331  00AC  00AD               	movwf	calc_temp_rc@y+1
  8332  00AD  30D0               	movlw	208
  8333  00AE  00AC               	movwf	calc_temp_rc@y
  8334  00AF                     l2320:	
  8335                           
  8336                           ;sample.c: 140: if(y>25000)y=25000;
  8337  00AF  082F               	movf	calc_temp_rc@y+3,w
  8338  00B0  1D03               	btfss	3,2
  8339  00B1  28BB               	goto	l2322
  8340  00B2  082E               	movf	calc_temp_rc@y+2,w
  8341  00B3  1D03               	btfss	3,2
  8342  00B4  28BB               	goto	l2322
  8343  00B5  30A9               	movlw	169
  8344  00B6  022C               	subwf	calc_temp_rc@y,w
  8345  00B7  3061               	movlw	97
  8346  00B8  3B2D               	subwfb	calc_temp_rc@y+1,w
  8347  00B9  1C03               	btfss	3,0
  8348  00BA  28C1               	goto	l596
  8349  00BB                     l2322:	
  8350  00BB  3061               	movlw	97
  8351  00BC  01AF               	clrf	calc_temp_rc@y+3
  8352  00BD  01AE               	clrf	calc_temp_rc@y+2
  8353  00BE  00AD               	movwf	calc_temp_rc@y+1
  8354  00BF  30A8               	movlw	168
  8355  00C0  00AC               	movwf	calc_temp_rc@y
  8356  00C1                     l596:	
  8357                           
  8358                           ;sample.c: 142: return y;
  8359  00C1  082F               	movf	calc_temp_rc@y+3,w
  8360  00C2  00A3               	movwf	?_calc_temp_rc+3
  8361  00C3  082E               	movf	calc_temp_rc@y+2,w
  8362  00C4  00A2               	movwf	?_calc_temp_rc+2
  8363  00C5  082D               	movf	calc_temp_rc@y+1,w
  8364  00C6  00A1               	movwf	?_calc_temp_rc+1
  8365  00C7  082C               	movf	calc_temp_rc@y,w
  8366  00C8  00A0               	movwf	?_calc_temp_rc
  8367  00C9  0008               	return
  8368  00CA                     __end_of_calc_temp_rc:	
  8369  00CA                     PL8:	
  8370  00CA  0873               	movf	?___lldiv+3,w
  8371  00CB  00AF               	movwf	calc_temp_rc@y+3
  8372  00CC  0872               	movf	?___lldiv+2,w
  8373  00CD  00AE               	movwf	calc_temp_rc@y+2
  8374  00CE  0871               	movf	?___lldiv+1,w
  8375  00CF  00AD               	movwf	calc_temp_rc@y+1
  8376  00D0  0870               	movf	?___lldiv,w
  8377  00D1  00AC               	movwf	calc_temp_rc@y
  8378  00D2  0008               	return
  8379  00D3                     __end_ofPL8:	
  8380                           
  8381                           	psect	intentry
  8382  0004                     __pintentry:	
  8383 ;; *************** function _INTERRUPT_InterruptManager *****************
  8384 ;; Defined at:
  8385 ;;		line 53 in file "mcc_generated_files/interrupt_manager.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;		None
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;		None
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  1    wreg      void 
  8392 ;; Registers used:
  8393 ;;		wreg, status,2, status,0
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/0
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8399 ;;      Params:         0       0       0       0       0       0       0       0
  8400 ;;      Locals:         0       0       0       0       0       0       0       0
  8401 ;;      Temps:          0       0       0       0       0       0       0       0
  8402 ;;      Totals:         0       0       0       0       0       0       0       0
  8403 ;;Total ram usage:        0 bytes
  8404 ;; Hardware stack levels used:    1
  8405 ;; This function calls:
  8406 ;;		Nothing
  8407 ;; This function is called by:
  8408 ;;		Interrupt level 1
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412  0004                     _INTERRUPT_InterruptManager:	
  8413                           
  8414                           ;incstack = 0
  8415                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0]
  8416  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8417  0005  3180               	pagesel	$
  8418                           
  8419                           ;interrupt_manager.c: 56: if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bits.TM
      +                          R2IF == 1)
  8420  0006  1F0B               	btfss	11,6	;volatile
  8421  0007  2824               	goto	i1l272
  8422  0008  0021               	movlb	1	; select bank1
  8423  0009  1C91               	btfss	17,1	;volatile
  8424  000A  2824               	goto	i1l272
  8425  000B  0020               	movlb	0	; select bank0
  8426  000C  1C91               	btfss	17,1	;volatile
  8427  000D  2824               	goto	i1l272
  8428                           
  8429                           ;interrupt_manager.c: 57: {
  8430                           ;interrupt_manager.c: 59: PIR1bits.TMR2IF = 0;
  8431  000E  1091               	bcf	17,1	;volatile
  8432                           
  8433                           ;interrupt_manager.c: 60: Event |= (1<<1);
  8434  000F  14FD               	bsf	_Event,1	;volatile
  8435  0010  3005               	movlw	5
  8436                           
  8437                           ;interrupt_manager.c: 61: subTickerX++;
  8438  0011  0AE0               	incf	_subTickerX,f
  8439                           
  8440                           ;interrupt_manager.c: 62: subTickerX_1s++;
  8441  0012  0AE1               	incf	_subTickerX_1s,f
  8442                           
  8443                           ;interrupt_manager.c: 63: if(subTickerX>=5){
  8444  0013  0260               	subwf	_subTickerX,w
  8445  0014  1C03               	skipc
  8446  0015  2818               	goto	i1l2500
  8447                           
  8448                           ;interrupt_manager.c: 64: subTickerX=0;
  8449  0016  01E0               	clrf	_subTickerX
  8450                           
  8451                           ;interrupt_manager.c: 65: Event |= (1<<2);
  8452  0017  157D               	bsf	_Event,2	;volatile
  8453  0018                     i1l2500:	
  8454                           
  8455                           ;interrupt_manager.c: 66: }
  8456                           ;interrupt_manager.c: 67: if(subTickerX_1s>=50){
  8457  0018  3032               	movlw	50
  8458  0019  0261               	subwf	_subTickerX_1s,w
  8459  001A  1C03               	skipc
  8460  001B  281E               	goto	i1l2506
  8461                           
  8462                           ;interrupt_manager.c: 68: subTickerX_1s=0;
  8463  001C  01E1               	clrf	_subTickerX_1s
  8464                           
  8465                           ;interrupt_manager.c: 69: Event |= (1<<3);
  8466  001D  15FD               	bsf	_Event,3	;volatile
  8467  001E                     i1l2506:	
  8468                           
  8469                           ;interrupt_manager.c: 70: }
  8470                           ;interrupt_manager.c: 71: globalTicker++;
  8471  001E  3001               	movlw	1
  8472  001F  07CC               	addwf	_globalTicker,f	;volatile
  8473  0020  3000               	movlw	0
  8474  0021  3DCD               	addwfc	_globalTicker+1,f	;volatile
  8475  0022  3DCE               	addwfc	_globalTicker+2,f	;volatile
  8476  0023  3DCF               	addwfc	_globalTicker+3,f	;volatile
  8477  0024                     i1l272:	
  8478                           ;interrupt_manager.c: 72: }
  8479                           
  8480  0024  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8481  0025  0009               	retfie
  8482  0026                     __end_of_INTERRUPT_InterruptManager:	
  8483  007E                     btemp	set	126	;btemp
  8484  007E                     int$flags	set	126
  8485  007E                     wtemp	set	126
  8486  007E                     wtemp0	set	126
  8487  0080                     wtemp1	set	128
  8488  0082                     wtemp2	set	130
  8489  0084                     wtemp3	set	132
  8490  0086                     wtemp4	set	134
  8491  0088                     wtemp5	set	136
  8492  007F                     wtemp6	set	127
  8493  007E                     ttemp	set	126
  8494  007E                     ttemp0	set	126
  8495  0081                     ttemp1	set	129
  8496  0084                     ttemp2	set	132
  8497  0087                     ttemp3	set	135
  8498  007F                     ttemp4	set	127
  8499  007E                     ltemp	set	126
  8500  007E                     ltemp0	set	126
  8501  0082                     ltemp1	set	130
  8502  0086                     ltemp2	set	134
  8503  0080                     ltemp3	set	128


Data Sizes:
    Strings     39
    Constant    0
    Data        22
    BSS         211
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     36      80
    BANK1            80      0      60
    BANK2            80      0      64
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    m_int_2_str_ex@buf	PTR unsigned char  size(1) Largest target is 16
		 -> str(BANK1[16]), 

    m_mem_cpy@s	PTR unsigned char  size(1) Largest target is 16
		 -> str(BANK1[16]), 

    m_mem_cpy@d	PTR unsigned char  size(1) Largest target is 16
		 -> str(BANK1[16]), 

    m_mem_set@buf	PTR unsigned char  size(1) Largest target is 16
		 -> str(BANK1[16]), 

    uart_send_str@str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_6(CODE[3]), STR_5(CODE[7]), STR_4(CODE[7]), STR_3(CODE[7]), 
		 -> STR_2(CODE[8]), str(BANK1[16]), STR_1(CODE[7]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_pid_b_b_process
    _set_vout_pwm2_duty->_get_vout_pwm2_duty
    _pid_run_process->___lmul
    _pid_b_b_process->___lmul
    _set_idrv_pwm1_duty->_get_idrv_pwm1_duty
    ___aldiv->___lmul
    _calc_temp_rs->___lldiv
    _calc_temp_rc->___lldiv
    _cal_voout_pwm_duty->___lldiv
    _adc_sample->_adc_init
    _adc_sample->_fvr_set_gain
    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_pid_run_process
    _pid_run_process->___aldiv
    _pid_b_b_process->___aldiv
    _m_int_2_str_ex->___aldiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   20222
                         _PWM1_Start
                  _SYSTEM_Initialize
                         _adc_sample
                 _cal_voout_pwm_duty
                _calc_current_rs_avg
                       _calc_temp_rc
                       _calc_temp_rs
                     _m_int_2_str_ex
                    _pid_b_b_process
                    _pid_run_process
                 _set_vout_pwm2_duty
                      _uart_send_str
 ---------------------------------------------------------------------------------
 (1) _uart_send_str                                        3     1      2     749
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _set_vout_pwm2_duty                                   4     2      2     154
                                              2 COMMON     4     2      2
                 _get_vout_pwm2_duty
 ---------------------------------------------------------------------------------
 (2) _get_vout_pwm2_duty                                   2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _pid_run_process                                     22    22      0    3757
                                             14 BANK0     22    22      0
                            ___aldiv
                             ___lmul
                 _set_idrv_pwm1_duty
 ---------------------------------------------------------------------------------
 (1) _pid_b_b_process                                      5     5      0    3658
                                             12 COMMON     1     1      0
                                             14 BANK0      4     4      0
                            ___aldiv
                             ___lmul
                 _set_idrv_pwm1_duty
 ---------------------------------------------------------------------------------
 (2) _set_idrv_pwm1_duty                                   4     2      2     346
                                              2 COMMON     4     2      2
                 _get_idrv_pwm1_duty
 ---------------------------------------------------------------------------------
 (3) _get_idrv_pwm1_duty                                   2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _m_int_2_str_ex                                      18    12      6    3749
                                             14 BANK0     17    11      6
                            ___aldiv
                            ___almod
                          _m_mem_cpy
                          _m_mem_set
 ---------------------------------------------------------------------------------
 (2) _m_mem_set                                            4     1      3     225
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _m_mem_cpy                                            2     1      1     184
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     526
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8    1576
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _calc_temp_rs                                        12     8      4    2415
                                              0 BANK0     12     8      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _calc_temp_rc                                        16    12      4    2461
                                              0 BANK0     16    12      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _calc_current_rs_avg                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _cal_voout_pwm_duty                                   6     4      2    2415
                                              0 BANK0      6     4      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1602
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     674
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) _adc_sample                                           9     7      2     766
                                              2 COMMON     9     7      2
                           _adc_init
                       _fvr_set_gain
 ---------------------------------------------------------------------------------
 (2) _fvr_set_gain                                         2     2      0      69
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                    _ADC1_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      75
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1_Start
   _SYSTEM_Initialize
     _ADC1_Initialize
     _EUSART_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _WDT_Initialize
   _adc_sample
     _adc_init
     _fvr_set_gain
   _cal_voout_pwm_duty
     ___lldiv
     ___lmul
   _calc_current_rs_avg
   _calc_temp_rc
     ___lldiv
     ___lmul
   _calc_temp_rs
     ___lldiv
     ___lmul
   _m_int_2_str_ex
     ___aldiv
       ___lmul (ARG)
     ___almod
     _m_mem_cpy
     _m_mem_set
   _pid_b_b_process
     ___aldiv
       ___lmul (ARG)
     ___lmul
     _set_idrv_pwm1_duty
       _get_idrv_pwm1_duty
   _pid_run_process
     ___aldiv
       ___lmul (ARG)
     ___lmul
     _set_idrv_pwm1_duty
       _get_idrv_pwm1_duty
   _set_vout_pwm2_duty
     _get_vout_pwm2_duty
   _uart_send_str

 _INTERRUPT_InterruptManager (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     11A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     24      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      3C       8       75.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     11A      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Mon Nov 12 22:28:06 2018

        __end_of_TMR2_SetInterruptHandler 0FFD                                         pc 0002  
                             __CFG_CP$OFF 0000                                        PL2 0F94  
                                      PL4 0F9E                                        PL6 0FAA  
                                      PL8 00CA                    __end_of_FVR_Initialize 0A2D  
                                     PL10 0FB3                                       PL20 0FD6  
                                     PL12 0FBB                                       PL22 012D  
                                     PL14 0FC3                                       PL24 0FDB  
                                     PL16 0FC9                                       PL18 0FD0  
                             __CFG_LVP$ON 0000                                       l630 0D37  
                                     l464 0932                                       l641 0D0B  
                                     l650 0B59                                       l483 095A  
                                     l459 092E                                       l574 0E11  
                                     l583 09F3                                       l663 0E4B  
                                     l568 0E2D                                       l666 0EA4  
                                     l596 00C1                                       l943 0D48  
                                     l956 00E0                                       l899 0DA8  
                                     _GIE 005F                                       _PR2 001B  
                                     u670 0A69                                       u815 0D7C  
                                     u935 0ECE                                       u695 0DD5  
                                     u885 010A                                       _bbu 00C0  
                                     _err 00A0                                       _str 00C4  
                         _TMR2_Initialize 0FED                              __CFG_BORV$LO 0000  
                                     wreg 0009                      ??_get_vout_pwm2_duty 0072  
                    ??_set_vout_pwm2_duty 0074                           ??_uart_send_str 0072  
                                    S2600 017E                                      l2100 0F6A  
                           calc_temp_rc@x 0028                             calc_temp_rc@y 002C  
                                    l2104 0F61                                      l2122 0DB2  
                                    l2114 015B                                      l2060 0FE1  
                                    l2220 0ED9                                      l2212 0EBC  
                                    l2300 0F50                                      l2140 0D57  
                                    l2116 016B                                      l2150 0D6A  
                                    l2062 0DC9                                      l2080 0E28  
                                    l2224 0EDF                                      l2320 00AF  
                                    l2322 00BB                                      l2162 0D8D  
                                    l2330 0B7C                                      l2340 0B9A  
                                    l2430 0E43                                      l2166 0D9B  
                                    l2158 0D87                                      l2190 0114  
                                    l2342 0BA8                                      l2334 0B84  
                                    l2414 0B3F                                      l2280 09ED  
                                    l2272 09EC                                      l2432 0E4F  
                                    l2336 0B92                                      l2328 0B7B  
                                    l2416 0B45                                      l2248 0953  
                                    l2282 0A0C                                      l2186 00FC  
                                    l2194 011A                                      l2178 00ED  
                                    l2354 0BC9                                      l2418 0B54  
                                    l2436 0E8C                                      l2452 0978  
                                    l2438 0E92                                      l2198 0124  
                                    l2374 0CD0                                      l2550 08BF  
                                    l2518 0857                                      l2296 0F3E  
                                    l2480 09D2                                      l2456 0983  
                                    l2376 0CDA                                      l2298 0F4A  
                                    l2482 09D3                                      l2474 09C5  
                                    l1940 0FFD                                      l2548 08BD  
                                    l2578 0929                             calc_temp_rs@x 0024  
                           calc_temp_rs@y 0028                                      STR_1 0149  
                                    STR_2 0133                                      STR_3 0150  
                                    STR_4 013B                                      STR_5 0142  
                                    STR_6 0157                   __end_of_PWM1_Initialize 0DF6  
                                    u1005 0F84                                      u1035 0A01  
                                    u1133 0CF9                                      u1143 0D26  
                                    _LATA 010C                                      _LATC 010E  
                                    u1337 09E4                                      _TMR2 001A  
                                    _WPUA 020C                                      _WPUC 020E  
                            __CFG_WRT$OFF 0000                            _m_int_2_str_ex 095E  
                                    _bbt0 00B4                                      _bbt1 00B8  
                                    _bbta 00BC                                      _bbku 00B0  
                                    _bbtu 0048                                      _main 084D  
                                    _pidU 0062                                      fsr0h 0005  
                                    fsr1h 0007                                      fsr0l 0004  
                                    indf0 0000                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                           __CFG_BOREN$ON 0000                                      ltemp 007E  
                                    start 0026                           _pwm2DutyForVout 006E  
                                    ttemp 007E                                      wtemp 007E  
                           __CFG_MCLRE$ON 0000                         ??_pid_b_b_process 007C  
                        ?_pid_run_process 0070                   __end_of_PWM2_Initialize 0E0D  
                         ?_FVR_Initialize 0070            __size_of_OSCILLATOR_Initialize 0005  
           __end_of_OSCILLATOR_Initialize 0A32                           __end_of___aldiv 0DA4  
                         __end_of___almod 012D                                     ?_main 0070  
                           __CFG_WDTE$OFF 0000                           __end_of___lldiv 0EE8  
                                   _T2CON 001C                                     i1l272 0024  
                                   _RCSTA 019D                                     _TRISA 008C  
                                   _TRISC 008E                                     _TXREG 019A  
                                   _TXSTA 019E                       ___lmul@multiplicand 0074  
                                   _PidKp 0044                                     _Event 007D  
                                   _PidTi 00AC                               ?_PWM1_Start 0070  
                                   _bbmax 00D4                                     _bbmin 00D8  
                          _WDT_Initialize 0E0D                                     _resRc 0066  
                                   _resRs 006A                    __end_of_m_int_2_str_ex 09D9  
                                   ltemp0 007E                                     ltemp1 0082  
                                   ltemp2 0086                                     ltemp3 0080  
              __end_of_get_idrv_pwm1_duty 0F78                __end_of_set_idrv_pwm1_duty 0DDE  
                       m_int_2_str_ex@buf 003E                         m_int_2_str_ex@sig 003C  
                                   ttemp0 007E                                     ttemp1 0081  
                                   ttemp2 0084                                     ttemp3 0087  
                                   ttemp4 007F                                     status 0003  
                                   wtemp0 007E                                     wtemp1 0080  
                                   wtemp2 0082                                     wtemp3 0084  
                                   wtemp4 0086                                     wtemp5 0088  
                                   wtemp6 007F                           _TMR2_StartTimer 0FFD  
                           fvr_set_gain@g 0071                           __initialization 0811  
                            __end_of_main 092B                     __size_of_calc_temp_rc 00A2  
                   __size_of_calc_temp_rs 0073                   __end_of_TMR2_Initialize 0FFC  
             ?_INTERRUPT_InterruptManager 0070                  _TMR2_SetInterruptHandler 0FFC  
                                  ??_main 007D                            __CFG_PLLEN$OFF 0000  
                  __end_of_WDT_Initialize 0E10                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _ADCON2 009F  
                                  _ADRESH 009C                                    _ADRESL 009B  
                         ?_m_int_2_str_ex 002E                                    _ANSELA 018C  
                                  _ANSELC 018E                          __end_of_adc_init 0E1F  
                        ?_PWM1_Initialize 0070                                    _ODCONA 028C  
                                  _ODCONC 028E                                    i1l2500 0018  
                                  i1l2506 001E                                    _FVRCON 0117  
                                  _OSCCON 0099                                    _SPBRGH 019C  
                                  _SPBRGL 019B                                    _WDTCON 0097  
                            m_mem_set@buf 0073                              m_mem_set@len 0071  
                            _calc_temp_rc 0028                              _calc_temp_rs 0EED  
                          __CFG_PWRTE$OFF 0000                                    ___lmul 0DA4  
                               ??___aldiv 007C                                 ??___almod 0078  
                          __CFG_STVREN$ON 0000                       __size_of_PWM1_Start 0003  
                               ??___lldiv 0078                          ?_PWM2_Initialize 0070  
             __end_of_calc_current_rs_avg 0EED                  __size_of_ADC1_Initialize 0004  
                         ?_WDT_Initialize 0070                   __end_of_TMR2_StartTimer 1000  
TMR2_SetInterruptHandler@InterruptHandler 0070                             ?_fvr_set_gain 0070  
                          fvr_set_gain@t8 0070                         _SYSTEM_Initialize 0A14  
                 __end_of__initialization 084A                        ?_SYSTEM_Initialize 0070  
                          __pcstackCOMMON 0070                              __pidataBANK0 0170  
                            __pidataBANK1 018A                       ??_SYSTEM_Initialize 0072  
                              _adc_sample 09D9                           m_int_2_str_ex@i 003D  
                         m_int_2_str_ex@t 0038                           m_int_2_str_ex@x 002E  
                        ?_TMR2_Initialize 0070                                __end_ofPL2 0F9E  
                              __end_ofPL4 0FAA                                __end_ofPL6 0FB3  
                              __end_ofPL8 00D3                            _OPTION_REGbits 0095  
              __end_of_cal_voout_pwm_duty 0EA9                 __end_of_SYSTEM_Initialize 0A25  
                          ??_fvr_set_gain 0070                        __size_of_m_mem_cpy 0016  
                      __size_of_m_mem_set 0011                                __pbssBANK0 0044  
                              __pbssBANK1 00A0                                __pbssBANK2 0120  
                              __pbssBANK3 01A0                           _pid_b_b_process 0B6A  
                              adc_init@ch 0071                          ??_FVR_Initialize 0070  
                              __pmaintext 084D                                   ?___lmul 0070  
                         __CFG_PPS1WAY$ON 0000                                __pintentry 0004  
                                 _BAUDCON 019F                            ___lmul@product 0078  
                               ?_adc_init 0070                              adc_sample@ch 0075  
                           _eusartRxCount 005C               __size_of_get_vout_pwm2_duty 0007  
             __size_of_set_vout_pwm2_duty 0015                                   _PWM1DCH 0D94  
                            ??_PWM1_Start 0070                                   _PWM1DCL 0D93  
                                 _PWM2DCH 0DA4                                   _PWM2DCL 0DA3  
                                 _OSCTUNE 0098                                   _PWM1CON 0D9B  
                                 _PWM2CON 0DAB                                   _PWM1OFH 0D98  
                                 _PWM1OFL 0D97                                   _PWM2OFH 0DA8  
                                 _PWM1PHH 0D92                                   _PWM2OFL 0DA7  
                                 _PWM1PHL 0D91                                   _PWM2PHH 0DA2  
                                 _PWM2PHL 0DA1                                   _PWM1PRH 0D96  
                                 _PWM1PRL 0D95                                   _PWM2PRH 0DA6  
                                 _PWM2PRL 0DA5                                   _PPSLOCK 0E0F  
                       ??_ADC1_Initialize 0070                          ?_TMR2_StartTimer 0070  
                  set_idrv_pwm1_duty@duty 0072                     __end_of_uart_send_str 095E  
                       _rtAdcValueRsLoAvg 005A                ??_TMR2_SetInterruptHandler 0072  
                                 ___aldiv 0D38                                   ___almod 00D3  
                         __size_of___lmul 0025                                   ___lldiv 0EA9  
                      _get_idrv_pwm1_duty 0F71                        _set_idrv_pwm1_duty 0DC9  
                             ?_adc_sample 0072                        __end_of_PWM1_Start 0A14  
                       __end_of_m_mem_cpy 0170                            adc_sample@gfvr 0072  
                       __end_of_m_mem_set 0F71                                _pidTestNum 005F  
                              ??_adc_init 0070                                   __ptext1 092B  
                                 __ptext2 0F78                                   __ptext3 0F8D  
                                 __ptext4 0A6B                                   __ptext5 0B6A  
                                 __ptext6 0DC9                                   __ptext7 0F71  
                                 __ptext8 095E                                   __ptext9 0F60  
                                 _pidBbSm 005E                       ?_get_idrv_pwm1_duty 0070  
                     ?_set_idrv_pwm1_duty 0072                     _OSCILLATOR_Initialize 0A2D  
                               _T2CONbits 001C                  __size_of_pid_run_process 00FF  
                        ??_m_int_2_str_ex 0034                          ___aldiv@dividend 0024  
                ??_PIN_MANAGER_Initialize 0070                   __end_of_pid_b_b_process 0D38  
              __size_of_SYSTEM_Initialize 0011                                   clrloop0 0193  
                    end_of_initialization 084A                                   init_ram 0198  
                                 initloop 0199                      ??_get_idrv_pwm1_duty 0072  
                    ??_set_idrv_pwm1_duty 0074                         _EUSART_Initialize 0FE1  
                         ___lldiv@divisor 0070                           ___lldiv@counter 007C  
                      ?_EUSART_Initialize 0070                          ___aldiv@quotient 002A  
                               _PWM1LDCON 0D9F                                 _PWM2LDCON 0DAF  
                               _PWM1OFCON 0DA0                                 _PWM2OFCON 0DB0  
                            __pstringtext 0133                       m_int_2_str_ex@ssize 0032  
                    __end_of_fvr_set_gain 0E30                                _subTickerX 0060  
                     ??_EUSART_Initialize 0070                          ??_WDT_Initialize 0070  
                        __CFG_FOSC$INTOSC 0000                                 _RXPPSbits 0E15  
                     __size_of_adc_sample 0038                 __end_of_EUSART_Initialize 0FED  
                            _globalTicker 004C                                 _TXSTAbits 019E  
                __size_of_PWM1_Initialize 0018              _TMR2_DefaultInterruptHandler 0000  
                              m_mem_cpy@d 0071                                m_mem_cpy@s 0070  
                          __end_of___lmul 0DC9                                m_mem_set@x 0070  
                          _rtAdcValueRcHi 0052                            _rtAdcValueRcLo 0054  
                          _rtAdcValueRsHi 0056                            _rtAdcValueRsLo 0058  
                  ?_OSCILLATOR_Initialize 0070                               __end_ofPL10 0FBB  
                             __end_ofPL20 0FDB                               __end_ofPL12 0FC3  
                             __end_ofPL22 0133                               __end_ofPL14 0FC9  
                             __end_ofPL24 0FE1                               __end_ofPL16 0FD0  
                             __end_ofPL18 0FD6                       start_initialization 0811  
                        ?_pid_b_b_process 0070                  __size_of_PWM2_Initialize 0017  
         __size_of_PIN_MANAGER_Initialize 0039              __size_of_calc_current_rs_avg 0005  
                       ??_pid_run_process 002E                        _cal_voout_pwm_duty 0E30  
                        __CFG_LPBOREN$OFF 0000                                  ??___lmul 0078  
                     ?_cal_voout_pwm_duty 0020                               __pdataBANK0 0062  
                             __pdataBANK1 00D4                           _ADC1_Initialize 0A25  
                       __size_of_adc_init 000F                               __pbssCOMMON 007D  
                               ___latbits 0001                             __pcstackBANK0 0020  
                __size_of_TMR2_Initialize 000F                      ??_cal_voout_pwm_duty 007D  
              __size_of_EUSART_Initialize 000C                     cal_voout_pwm_duty@t32 0022  
                   __size_of_fvr_set_gain 0011                    _PIN_MANAGER_Initialize 0A32  
                      pid_b_b_process@t32 002E                                  ?___aldiv 0020  
                                ?___almod 0070                                  ?___lldiv 0070  
                            ??_adc_sample 0074                               adc_sample@i 0078  
                       ??_PWM1_Initialize 0070              ??_INTERRUPT_InterruptManager 0070  
                        ___almod@dividend 0074                     set_idrv_pwm1_duty@t16 0074  
                               __pswtext1 017E                __end_of_get_vout_pwm2_duty 0F94  
              __end_of_set_vout_pwm2_duty 0F8D                                 _m_mem_cpy 015A  
                               _m_mem_set 0F60                             adc_sample@t16 0079  
                           adc_sample@ret 0076                             adc_sample@num 0073  
                        uart_send_str@str 0070                              _fvr_set_gain 0E1F  
                          _eusartRxBuffer 01A0                           ___aldiv@divisor 0020  
                       ??_PWM2_Initialize 0070                            _eusartTxBuffer 0120  
                      __end_of_adc_sample 0A11                           ___aldiv@counter 0028  
                               clear_ram0 0192                             ?_calc_temp_rc 0020  
                           ?_calc_temp_rs 0020                                  _PIE1bits 0091  
                __size_of_TMR2_StartTimer 0003                    set_vout_pwm2_duty@duty 0072  
     __size_of_INTERRUPT_InterruptManager 0022                   __end_of_ADC1_Initialize 0A29  
                                _PIR1bits 0011                                  _PWM1INTE 0D9C  
                                _PWM1INTF 0D9D                                  _PWM2INTE 0DAC  
                                _PWM2INTF 0DAD                                  _PWM1TMRH 0D9A  
                                _PWM1TMRL 0D99                                  _PWM2TMRH 0DAA  
                                _PWM2TMRL 0DA9                    __size_of_uart_send_str 0033  
                              _ADCON0bits 009D                                ?_m_mem_cpy 0070  
                 __size_of_FVR_Initialize 0004                                ?_m_mem_set 0070  
       __size_of_TMR2_SetInterruptHandler 0001                 ?_TMR2_SetInterruptHandler 0070  
                             _isRunInBoot 0FFF                         ___lmul@multiplier 0070  
                       ??_TMR2_Initialize 0072                            ??_calc_temp_rc 0024  
                          ??_calc_temp_rs 007D               __size_of_get_idrv_pwm1_duty 0007  
             __size_of_set_idrv_pwm1_duty 0015                        pid_run_process@t32 0040  
                      pid_run_process@t16 003E                       _calc_current_rs_avg 0EE8  
                 ??_OSCILLATOR_Initialize 0070                          __size_of___aldiv 006C  
                        __size_of___almod 005A                          __size_of___lldiv 003F  
                                _adc_init 0E10                           _pid_run_process 0A6B  
                     _eusartRxIdleTime_ms 0050                      ?_calc_current_rs_avg 0070  
                                __ptext10 015A                                  __ptext11 00D3  
                                __ptext20 0E1F                                  __ptext12 0D38  
                                __ptext21 0E10                                  __ptext13 0EED  
                                __ptext30 0A2D                                  __ptext22 0A14  
                                __ptext14 0028                                  __ptext31 0A29  
                                __ptext23 0E0D                                  __ptext15 0EE8  
                                __ptext32 0FE1                                  __ptext24 0FED  
                                __ptext16 0E30                                  __ptext33 0A25  
                                __ptext25 0FFD                                  __ptext17 0DA4  
                                __ptext34 0A11                                  __ptext26 0FFC  
                                __ptext18 0EA9                                  __ptext27 0DF6  
                                __ptext19 09D9                                  __ptext28 0DDE  
                                __ptext29 0A32                               _eusartTxLen 005D  
                         ___almod@divisor 0070                           ___almod@counter 0078  
                           _uart_send_str 092B                   __size_of_m_int_2_str_ex 007B  
                           __size_of_main 00DE                             _subTickerX_1s 0061  
                   set_vout_pwm2_duty@t16 0074                                _RA4PPSbits 0E94  
                              _RA5PPSbits 0E95                          ?_ADC1_Initialize 0070  
                                int$flags 007E                                _RC5PPSbits 0EA5  
                       ??_TMR2_StartTimer 0070        __end_of_INTERRUPT_InterruptManager 0026  
              _INTERRUPT_InterruptManager 0004               PIN_MANAGER_Initialize@state 0070  
                             ??_m_mem_cpy 0071                               ??_m_mem_set 0073  
                              _INTCONbits 000B                               _PWM1CONbits 0D9B  
                       pid_run_process@ei 0036                         pid_run_process@ep 0032  
                              _FVRCONbits 0117                               _PWM2CONbits 0DAB  
                   ??_calc_current_rs_avg 0072                   __size_of_WDT_Initialize 0003  
                          ?_uart_send_str 0070                                  intlevel1 0000  
                __size_of_pid_b_b_process 01CE                          ___lldiv@dividend 0074  
                 ?_PIN_MANAGER_Initialize 0070                         __CFG_CLKOUTEN$OFF 0000  
                             _PPSLOCKbits 0E0F                           _PWM1_Initialize 0DDE  
                 __end_of_pid_run_process 0B6A                                _PWM1CLKCON 0D9E  
                              _PWM2CLKCON 0DAE                            _FVR_Initialize 0A29  
                    __end_of_calc_temp_rc 00CA                      __end_of_calc_temp_rs 0F60  
                        ___lldiv@quotient 0078                           _PWM2_Initialize 0DF6  
                            ___aldiv@sign 0029                                _PWM1_Start 0A11  
             __size_of_cal_voout_pwm_duty 0079            __end_of_PIN_MANAGER_Initialize 0A6B  
                            ___almod@sign 0079                        _get_vout_pwm2_duty 0F8D  
                      _set_vout_pwm2_duty 0F78                       ?_get_vout_pwm2_duty 0070  
                     ?_set_vout_pwm2_duty 0072  
