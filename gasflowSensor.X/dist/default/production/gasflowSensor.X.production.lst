

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Mar 30 11:16:19 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F1575
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	swtext1,local,class=CONST,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,delta=2
    67                           	psect	text47,local,class=CODE,merge=1,delta=2
    68                           	psect	text48,local,class=CODE,merge=1,delta=2
    69                           	psect	text49,local,class=CODE,merge=1,delta=2
    70                           	psect	intentry,global,class=CODE,delta=2
    71                           	dabs	1,0x620,32
    72                           	dabs	1,0x5A0,80
    73                           	dabs	1,0x55C,20
    74                           	dabs	1,0xFFF,1,_isRunInBoot
    75                           	dabs	1,0x235C,0,_sysData
    76                           	dabs	1,0x7E,2
    77  0000                     
    78                           ; Version 2.00
    79                           ; Generated 27/05/2018 GMT
    80                           ; 
    81                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC16F1575 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000E                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  008C                     	;# 
   139  008E                     	;# 
   140  0091                     	;# 
   141  0092                     	;# 
   142  0093                     	;# 
   143  0095                     	;# 
   144  0096                     	;# 
   145  0097                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009A                     	;# 
   149  009B                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  010C                     	;# 
   156  010E                     	;# 
   157  0111                     	;# 
   158  0112                     	;# 
   159  0113                     	;# 
   160  0114                     	;# 
   161  0115                     	;# 
   162  0116                     	;# 
   163  0117                     	;# 
   164  0118                     	;# 
   165  0119                     	;# 
   166  018C                     	;# 
   167  018E                     	;# 
   168  0191                     	;# 
   169  0191                     	;# 
   170  0192                     	;# 
   171  0193                     	;# 
   172  0193                     	;# 
   173  0194                     	;# 
   174  0195                     	;# 
   175  0196                     	;# 
   176  0197                     	;# 
   177  0199                     	;# 
   178  019A                     	;# 
   179  019B                     	;# 
   180  019B                     	;# 
   181  019C                     	;# 
   182  019D                     	;# 
   183  019E                     	;# 
   184  019F                     	;# 
   185  020C                     	;# 
   186  020E                     	;# 
   187  028C                     	;# 
   188  028E                     	;# 
   189  030C                     	;# 
   190  030E                     	;# 
   191  038C                     	;# 
   192  038E                     	;# 
   193  0391                     	;# 
   194  0392                     	;# 
   195  0393                     	;# 
   196  0397                     	;# 
   197  0398                     	;# 
   198  0399                     	;# 
   199  0691                     	;# 
   200  0692                     	;# 
   201  0693                     	;# 
   202  0694                     	;# 
   203  0695                     	;# 
   204  0D8E                     	;# 
   205  0D8F                     	;# 
   206  0D90                     	;# 
   207  0D91                     	;# 
   208  0D91                     	;# 
   209  0D92                     	;# 
   210  0D93                     	;# 
   211  0D93                     	;# 
   212  0D94                     	;# 
   213  0D95                     	;# 
   214  0D95                     	;# 
   215  0D96                     	;# 
   216  0D97                     	;# 
   217  0D97                     	;# 
   218  0D98                     	;# 
   219  0D99                     	;# 
   220  0D99                     	;# 
   221  0D9A                     	;# 
   222  0D9B                     	;# 
   223  0D9C                     	;# 
   224  0D9C                     	;# 
   225  0D9D                     	;# 
   226  0D9D                     	;# 
   227  0D9E                     	;# 
   228  0D9F                     	;# 
   229  0DA0                     	;# 
   230  0DA1                     	;# 
   231  0DA1                     	;# 
   232  0DA2                     	;# 
   233  0DA3                     	;# 
   234  0DA3                     	;# 
   235  0DA4                     	;# 
   236  0DA5                     	;# 
   237  0DA5                     	;# 
   238  0DA6                     	;# 
   239  0DA7                     	;# 
   240  0DA7                     	;# 
   241  0DA8                     	;# 
   242  0DA9                     	;# 
   243  0DA9                     	;# 
   244  0DAA                     	;# 
   245  0DAB                     	;# 
   246  0DAC                     	;# 
   247  0DAC                     	;# 
   248  0DAD                     	;# 
   249  0DAD                     	;# 
   250  0DAE                     	;# 
   251  0DAF                     	;# 
   252  0DB0                     	;# 
   253  0DB1                     	;# 
   254  0DB1                     	;# 
   255  0DB2                     	;# 
   256  0DB3                     	;# 
   257  0DB3                     	;# 
   258  0DB4                     	;# 
   259  0DB5                     	;# 
   260  0DB5                     	;# 
   261  0DB6                     	;# 
   262  0DB7                     	;# 
   263  0DB7                     	;# 
   264  0DB8                     	;# 
   265  0DB9                     	;# 
   266  0DB9                     	;# 
   267  0DBA                     	;# 
   268  0DBB                     	;# 
   269  0DBC                     	;# 
   270  0DBC                     	;# 
   271  0DBD                     	;# 
   272  0DBD                     	;# 
   273  0DBE                     	;# 
   274  0DBF                     	;# 
   275  0DC0                     	;# 
   276  0DC1                     	;# 
   277  0DC1                     	;# 
   278  0DC2                     	;# 
   279  0DC3                     	;# 
   280  0DC3                     	;# 
   281  0DC4                     	;# 
   282  0DC5                     	;# 
   283  0DC5                     	;# 
   284  0DC6                     	;# 
   285  0DC7                     	;# 
   286  0DC7                     	;# 
   287  0DC8                     	;# 
   288  0DC9                     	;# 
   289  0DC9                     	;# 
   290  0DCA                     	;# 
   291  0DCB                     	;# 
   292  0DCC                     	;# 
   293  0DCC                     	;# 
   294  0DCD                     	;# 
   295  0DCD                     	;# 
   296  0DCE                     	;# 
   297  0DCF                     	;# 
   298  0DD0                     	;# 
   299  0E0F                     	;# 
   300  0E10                     	;# 
   301  0E11                     	;# 
   302  0E12                     	;# 
   303  0E13                     	;# 
   304  0E14                     	;# 
   305  0E15                     	;# 
   306  0E16                     	;# 
   307  0E17                     	;# 
   308  0E90                     	;# 
   309  0E91                     	;# 
   310  0E92                     	;# 
   311  0E94                     	;# 
   312  0E95                     	;# 
   313  0EA0                     	;# 
   314  0EA1                     	;# 
   315  0EA2                     	;# 
   316  0EA3                     	;# 
   317  0EA4                     	;# 
   318  0EA5                     	;# 
   319  0FE4                     	;# 
   320  0FE5                     	;# 
   321  0FE6                     	;# 
   322  0FE7                     	;# 
   323  0FE8                     	;# 
   324  0FE8                     	;# 
   325  0FE9                     	;# 
   326  0FEA                     	;# 
   327  0FEA                     	;# 
   328  0FEB                     	;# 
   329  0FED                     	;# 
   330  0FEE                     	;# 
   331  0FEE                     	;# 
   332  0FEF                     	;# 
   333  0000                     	;# 
   334  0001                     	;# 
   335  0002                     	;# 
   336  0003                     	;# 
   337  0004                     	;# 
   338  0005                     	;# 
   339  0006                     	;# 
   340  0007                     	;# 
   341  0008                     	;# 
   342  0009                     	;# 
   343  000A                     	;# 
   344  000B                     	;# 
   345  000C                     	;# 
   346  000E                     	;# 
   347  0011                     	;# 
   348  0012                     	;# 
   349  0013                     	;# 
   350  0015                     	;# 
   351  0016                     	;# 
   352  0016                     	;# 
   353  0017                     	;# 
   354  0018                     	;# 
   355  0019                     	;# 
   356  001A                     	;# 
   357  001B                     	;# 
   358  001C                     	;# 
   359  008C                     	;# 
   360  008E                     	;# 
   361  0091                     	;# 
   362  0092                     	;# 
   363  0093                     	;# 
   364  0095                     	;# 
   365  0096                     	;# 
   366  0097                     	;# 
   367  0098                     	;# 
   368  0099                     	;# 
   369  009A                     	;# 
   370  009B                     	;# 
   371  009B                     	;# 
   372  009C                     	;# 
   373  009D                     	;# 
   374  009E                     	;# 
   375  009F                     	;# 
   376  010C                     	;# 
   377  010E                     	;# 
   378  0111                     	;# 
   379  0112                     	;# 
   380  0113                     	;# 
   381  0114                     	;# 
   382  0115                     	;# 
   383  0116                     	;# 
   384  0117                     	;# 
   385  0118                     	;# 
   386  0119                     	;# 
   387  018C                     	;# 
   388  018E                     	;# 
   389  0191                     	;# 
   390  0191                     	;# 
   391  0192                     	;# 
   392  0193                     	;# 
   393  0193                     	;# 
   394  0194                     	;# 
   395  0195                     	;# 
   396  0196                     	;# 
   397  0197                     	;# 
   398  0199                     	;# 
   399  019A                     	;# 
   400  019B                     	;# 
   401  019B                     	;# 
   402  019C                     	;# 
   403  019D                     	;# 
   404  019E                     	;# 
   405  019F                     	;# 
   406  020C                     	;# 
   407  020E                     	;# 
   408  028C                     	;# 
   409  028E                     	;# 
   410  030C                     	;# 
   411  030E                     	;# 
   412  038C                     	;# 
   413  038E                     	;# 
   414  0391                     	;# 
   415  0392                     	;# 
   416  0393                     	;# 
   417  0397                     	;# 
   418  0398                     	;# 
   419  0399                     	;# 
   420  0691                     	;# 
   421  0692                     	;# 
   422  0693                     	;# 
   423  0694                     	;# 
   424  0695                     	;# 
   425  0D8E                     	;# 
   426  0D8F                     	;# 
   427  0D90                     	;# 
   428  0D91                     	;# 
   429  0D91                     	;# 
   430  0D92                     	;# 
   431  0D93                     	;# 
   432  0D93                     	;# 
   433  0D94                     	;# 
   434  0D95                     	;# 
   435  0D95                     	;# 
   436  0D96                     	;# 
   437  0D97                     	;# 
   438  0D97                     	;# 
   439  0D98                     	;# 
   440  0D99                     	;# 
   441  0D99                     	;# 
   442  0D9A                     	;# 
   443  0D9B                     	;# 
   444  0D9C                     	;# 
   445  0D9C                     	;# 
   446  0D9D                     	;# 
   447  0D9D                     	;# 
   448  0D9E                     	;# 
   449  0D9F                     	;# 
   450  0DA0                     	;# 
   451  0DA1                     	;# 
   452  0DA1                     	;# 
   453  0DA2                     	;# 
   454  0DA3                     	;# 
   455  0DA3                     	;# 
   456  0DA4                     	;# 
   457  0DA5                     	;# 
   458  0DA5                     	;# 
   459  0DA6                     	;# 
   460  0DA7                     	;# 
   461  0DA7                     	;# 
   462  0DA8                     	;# 
   463  0DA9                     	;# 
   464  0DA9                     	;# 
   465  0DAA                     	;# 
   466  0DAB                     	;# 
   467  0DAC                     	;# 
   468  0DAC                     	;# 
   469  0DAD                     	;# 
   470  0DAD                     	;# 
   471  0DAE                     	;# 
   472  0DAF                     	;# 
   473  0DB0                     	;# 
   474  0DB1                     	;# 
   475  0DB1                     	;# 
   476  0DB2                     	;# 
   477  0DB3                     	;# 
   478  0DB3                     	;# 
   479  0DB4                     	;# 
   480  0DB5                     	;# 
   481  0DB5                     	;# 
   482  0DB6                     	;# 
   483  0DB7                     	;# 
   484  0DB7                     	;# 
   485  0DB8                     	;# 
   486  0DB9                     	;# 
   487  0DB9                     	;# 
   488  0DBA                     	;# 
   489  0DBB                     	;# 
   490  0DBC                     	;# 
   491  0DBC                     	;# 
   492  0DBD                     	;# 
   493  0DBD                     	;# 
   494  0DBE                     	;# 
   495  0DBF                     	;# 
   496  0DC0                     	;# 
   497  0DC1                     	;# 
   498  0DC1                     	;# 
   499  0DC2                     	;# 
   500  0DC3                     	;# 
   501  0DC3                     	;# 
   502  0DC4                     	;# 
   503  0DC5                     	;# 
   504  0DC5                     	;# 
   505  0DC6                     	;# 
   506  0DC7                     	;# 
   507  0DC7                     	;# 
   508  0DC8                     	;# 
   509  0DC9                     	;# 
   510  0DC9                     	;# 
   511  0DCA                     	;# 
   512  0DCB                     	;# 
   513  0DCC                     	;# 
   514  0DCC                     	;# 
   515  0DCD                     	;# 
   516  0DCD                     	;# 
   517  0DCE                     	;# 
   518  0DCF                     	;# 
   519  0DD0                     	;# 
   520  0E0F                     	;# 
   521  0E10                     	;# 
   522  0E11                     	;# 
   523  0E12                     	;# 
   524  0E13                     	;# 
   525  0E14                     	;# 
   526  0E15                     	;# 
   527  0E16                     	;# 
   528  0E17                     	;# 
   529  0E90                     	;# 
   530  0E91                     	;# 
   531  0E92                     	;# 
   532  0E94                     	;# 
   533  0E95                     	;# 
   534  0EA0                     	;# 
   535  0EA1                     	;# 
   536  0EA2                     	;# 
   537  0EA3                     	;# 
   538  0EA4                     	;# 
   539  0EA5                     	;# 
   540  0FE4                     	;# 
   541  0FE5                     	;# 
   542  0FE6                     	;# 
   543  0FE7                     	;# 
   544  0FE8                     	;# 
   545  0FE8                     	;# 
   546  0FE9                     	;# 
   547  0FEA                     	;# 
   548  0FEA                     	;# 
   549  0FEB                     	;# 
   550  0FED                     	;# 
   551  0FEE                     	;# 
   552  0FEE                     	;# 
   553  0FEF                     	;# 
   554  0000                     	;# 
   555  0001                     	;# 
   556  0002                     	;# 
   557  0003                     	;# 
   558  0004                     	;# 
   559  0005                     	;# 
   560  0006                     	;# 
   561  0007                     	;# 
   562  0008                     	;# 
   563  0009                     	;# 
   564  000A                     	;# 
   565  000B                     	;# 
   566  000C                     	;# 
   567  000E                     	;# 
   568  0011                     	;# 
   569  0012                     	;# 
   570  0013                     	;# 
   571  0015                     	;# 
   572  0016                     	;# 
   573  0016                     	;# 
   574  0017                     	;# 
   575  0018                     	;# 
   576  0019                     	;# 
   577  001A                     	;# 
   578  001B                     	;# 
   579  001C                     	;# 
   580  008C                     	;# 
   581  008E                     	;# 
   582  0091                     	;# 
   583  0092                     	;# 
   584  0093                     	;# 
   585  0095                     	;# 
   586  0096                     	;# 
   587  0097                     	;# 
   588  0098                     	;# 
   589  0099                     	;# 
   590  009A                     	;# 
   591  009B                     	;# 
   592  009B                     	;# 
   593  009C                     	;# 
   594  009D                     	;# 
   595  009E                     	;# 
   596  009F                     	;# 
   597  010C                     	;# 
   598  010E                     	;# 
   599  0111                     	;# 
   600  0112                     	;# 
   601  0113                     	;# 
   602  0114                     	;# 
   603  0115                     	;# 
   604  0116                     	;# 
   605  0117                     	;# 
   606  0118                     	;# 
   607  0119                     	;# 
   608  018C                     	;# 
   609  018E                     	;# 
   610  0191                     	;# 
   611  0191                     	;# 
   612  0192                     	;# 
   613  0193                     	;# 
   614  0193                     	;# 
   615  0194                     	;# 
   616  0195                     	;# 
   617  0196                     	;# 
   618  0197                     	;# 
   619  0199                     	;# 
   620  019A                     	;# 
   621  019B                     	;# 
   622  019B                     	;# 
   623  019C                     	;# 
   624  019D                     	;# 
   625  019E                     	;# 
   626  019F                     	;# 
   627  020C                     	;# 
   628  020E                     	;# 
   629  028C                     	;# 
   630  028E                     	;# 
   631  030C                     	;# 
   632  030E                     	;# 
   633  038C                     	;# 
   634  038E                     	;# 
   635  0391                     	;# 
   636  0392                     	;# 
   637  0393                     	;# 
   638  0397                     	;# 
   639  0398                     	;# 
   640  0399                     	;# 
   641  0691                     	;# 
   642  0692                     	;# 
   643  0693                     	;# 
   644  0694                     	;# 
   645  0695                     	;# 
   646  0D8E                     	;# 
   647  0D8F                     	;# 
   648  0D90                     	;# 
   649  0D91                     	;# 
   650  0D91                     	;# 
   651  0D92                     	;# 
   652  0D93                     	;# 
   653  0D93                     	;# 
   654  0D94                     	;# 
   655  0D95                     	;# 
   656  0D95                     	;# 
   657  0D96                     	;# 
   658  0D97                     	;# 
   659  0D97                     	;# 
   660  0D98                     	;# 
   661  0D99                     	;# 
   662  0D99                     	;# 
   663  0D9A                     	;# 
   664  0D9B                     	;# 
   665  0D9C                     	;# 
   666  0D9C                     	;# 
   667  0D9D                     	;# 
   668  0D9D                     	;# 
   669  0D9E                     	;# 
   670  0D9F                     	;# 
   671  0DA0                     	;# 
   672  0DA1                     	;# 
   673  0DA1                     	;# 
   674  0DA2                     	;# 
   675  0DA3                     	;# 
   676  0DA3                     	;# 
   677  0DA4                     	;# 
   678  0DA5                     	;# 
   679  0DA5                     	;# 
   680  0DA6                     	;# 
   681  0DA7                     	;# 
   682  0DA7                     	;# 
   683  0DA8                     	;# 
   684  0DA9                     	;# 
   685  0DA9                     	;# 
   686  0DAA                     	;# 
   687  0DAB                     	;# 
   688  0DAC                     	;# 
   689  0DAC                     	;# 
   690  0DAD                     	;# 
   691  0DAD                     	;# 
   692  0DAE                     	;# 
   693  0DAF                     	;# 
   694  0DB0                     	;# 
   695  0DB1                     	;# 
   696  0DB1                     	;# 
   697  0DB2                     	;# 
   698  0DB3                     	;# 
   699  0DB3                     	;# 
   700  0DB4                     	;# 
   701  0DB5                     	;# 
   702  0DB5                     	;# 
   703  0DB6                     	;# 
   704  0DB7                     	;# 
   705  0DB7                     	;# 
   706  0DB8                     	;# 
   707  0DB9                     	;# 
   708  0DB9                     	;# 
   709  0DBA                     	;# 
   710  0DBB                     	;# 
   711  0DBC                     	;# 
   712  0DBC                     	;# 
   713  0DBD                     	;# 
   714  0DBD                     	;# 
   715  0DBE                     	;# 
   716  0DBF                     	;# 
   717  0DC0                     	;# 
   718  0DC1                     	;# 
   719  0DC1                     	;# 
   720  0DC2                     	;# 
   721  0DC3                     	;# 
   722  0DC3                     	;# 
   723  0DC4                     	;# 
   724  0DC5                     	;# 
   725  0DC5                     	;# 
   726  0DC6                     	;# 
   727  0DC7                     	;# 
   728  0DC7                     	;# 
   729  0DC8                     	;# 
   730  0DC9                     	;# 
   731  0DC9                     	;# 
   732  0DCA                     	;# 
   733  0DCB                     	;# 
   734  0DCC                     	;# 
   735  0DCC                     	;# 
   736  0DCD                     	;# 
   737  0DCD                     	;# 
   738  0DCE                     	;# 
   739  0DCF                     	;# 
   740  0DD0                     	;# 
   741  0E0F                     	;# 
   742  0E10                     	;# 
   743  0E11                     	;# 
   744  0E12                     	;# 
   745  0E13                     	;# 
   746  0E14                     	;# 
   747  0E15                     	;# 
   748  0E16                     	;# 
   749  0E17                     	;# 
   750  0E90                     	;# 
   751  0E91                     	;# 
   752  0E92                     	;# 
   753  0E94                     	;# 
   754  0E95                     	;# 
   755  0EA0                     	;# 
   756  0EA1                     	;# 
   757  0EA2                     	;# 
   758  0EA3                     	;# 
   759  0EA4                     	;# 
   760  0EA5                     	;# 
   761  0FE4                     	;# 
   762  0FE5                     	;# 
   763  0FE6                     	;# 
   764  0FE7                     	;# 
   765  0FE8                     	;# 
   766  0FE8                     	;# 
   767  0FE9                     	;# 
   768  0FEA                     	;# 
   769  0FEA                     	;# 
   770  0FEB                     	;# 
   771  0FED                     	;# 
   772  0FEE                     	;# 
   773  0FEE                     	;# 
   774  0FEF                     	;# 
   775  0000                     	;# 
   776  0001                     	;# 
   777  0002                     	;# 
   778  0003                     	;# 
   779  0004                     	;# 
   780  0005                     	;# 
   781  0006                     	;# 
   782  0007                     	;# 
   783  0008                     	;# 
   784  0009                     	;# 
   785  000A                     	;# 
   786  000B                     	;# 
   787  000C                     	;# 
   788  000E                     	;# 
   789  0011                     	;# 
   790  0012                     	;# 
   791  0013                     	;# 
   792  0015                     	;# 
   793  0016                     	;# 
   794  0016                     	;# 
   795  0017                     	;# 
   796  0018                     	;# 
   797  0019                     	;# 
   798  001A                     	;# 
   799  001B                     	;# 
   800  001C                     	;# 
   801  008C                     	;# 
   802  008E                     	;# 
   803  0091                     	;# 
   804  0092                     	;# 
   805  0093                     	;# 
   806  0095                     	;# 
   807  0096                     	;# 
   808  0097                     	;# 
   809  0098                     	;# 
   810  0099                     	;# 
   811  009A                     	;# 
   812  009B                     	;# 
   813  009B                     	;# 
   814  009C                     	;# 
   815  009D                     	;# 
   816  009E                     	;# 
   817  009F                     	;# 
   818  010C                     	;# 
   819  010E                     	;# 
   820  0111                     	;# 
   821  0112                     	;# 
   822  0113                     	;# 
   823  0114                     	;# 
   824  0115                     	;# 
   825  0116                     	;# 
   826  0117                     	;# 
   827  0118                     	;# 
   828  0119                     	;# 
   829  018C                     	;# 
   830  018E                     	;# 
   831  0191                     	;# 
   832  0191                     	;# 
   833  0192                     	;# 
   834  0193                     	;# 
   835  0193                     	;# 
   836  0194                     	;# 
   837  0195                     	;# 
   838  0196                     	;# 
   839  0197                     	;# 
   840  0199                     	;# 
   841  019A                     	;# 
   842  019B                     	;# 
   843  019B                     	;# 
   844  019C                     	;# 
   845  019D                     	;# 
   846  019E                     	;# 
   847  019F                     	;# 
   848  020C                     	;# 
   849  020E                     	;# 
   850  028C                     	;# 
   851  028E                     	;# 
   852  030C                     	;# 
   853  030E                     	;# 
   854  038C                     	;# 
   855  038E                     	;# 
   856  0391                     	;# 
   857  0392                     	;# 
   858  0393                     	;# 
   859  0397                     	;# 
   860  0398                     	;# 
   861  0399                     	;# 
   862  0691                     	;# 
   863  0692                     	;# 
   864  0693                     	;# 
   865  0694                     	;# 
   866  0695                     	;# 
   867  0D8E                     	;# 
   868  0D8F                     	;# 
   869  0D90                     	;# 
   870  0D91                     	;# 
   871  0D91                     	;# 
   872  0D92                     	;# 
   873  0D93                     	;# 
   874  0D93                     	;# 
   875  0D94                     	;# 
   876  0D95                     	;# 
   877  0D95                     	;# 
   878  0D96                     	;# 
   879  0D97                     	;# 
   880  0D97                     	;# 
   881  0D98                     	;# 
   882  0D99                     	;# 
   883  0D99                     	;# 
   884  0D9A                     	;# 
   885  0D9B                     	;# 
   886  0D9C                     	;# 
   887  0D9C                     	;# 
   888  0D9D                     	;# 
   889  0D9D                     	;# 
   890  0D9E                     	;# 
   891  0D9F                     	;# 
   892  0DA0                     	;# 
   893  0DA1                     	;# 
   894  0DA1                     	;# 
   895  0DA2                     	;# 
   896  0DA3                     	;# 
   897  0DA3                     	;# 
   898  0DA4                     	;# 
   899  0DA5                     	;# 
   900  0DA5                     	;# 
   901  0DA6                     	;# 
   902  0DA7                     	;# 
   903  0DA7                     	;# 
   904  0DA8                     	;# 
   905  0DA9                     	;# 
   906  0DA9                     	;# 
   907  0DAA                     	;# 
   908  0DAB                     	;# 
   909  0DAC                     	;# 
   910  0DAC                     	;# 
   911  0DAD                     	;# 
   912  0DAD                     	;# 
   913  0DAE                     	;# 
   914  0DAF                     	;# 
   915  0DB0                     	;# 
   916  0DB1                     	;# 
   917  0DB1                     	;# 
   918  0DB2                     	;# 
   919  0DB3                     	;# 
   920  0DB3                     	;# 
   921  0DB4                     	;# 
   922  0DB5                     	;# 
   923  0DB5                     	;# 
   924  0DB6                     	;# 
   925  0DB7                     	;# 
   926  0DB7                     	;# 
   927  0DB8                     	;# 
   928  0DB9                     	;# 
   929  0DB9                     	;# 
   930  0DBA                     	;# 
   931  0DBB                     	;# 
   932  0DBC                     	;# 
   933  0DBC                     	;# 
   934  0DBD                     	;# 
   935  0DBD                     	;# 
   936  0DBE                     	;# 
   937  0DBF                     	;# 
   938  0DC0                     	;# 
   939  0DC1                     	;# 
   940  0DC1                     	;# 
   941  0DC2                     	;# 
   942  0DC3                     	;# 
   943  0DC3                     	;# 
   944  0DC4                     	;# 
   945  0DC5                     	;# 
   946  0DC5                     	;# 
   947  0DC6                     	;# 
   948  0DC7                     	;# 
   949  0DC7                     	;# 
   950  0DC8                     	;# 
   951  0DC9                     	;# 
   952  0DC9                     	;# 
   953  0DCA                     	;# 
   954  0DCB                     	;# 
   955  0DCC                     	;# 
   956  0DCC                     	;# 
   957  0DCD                     	;# 
   958  0DCD                     	;# 
   959  0DCE                     	;# 
   960  0DCF                     	;# 
   961  0DD0                     	;# 
   962  0E0F                     	;# 
   963  0E10                     	;# 
   964  0E11                     	;# 
   965  0E12                     	;# 
   966  0E13                     	;# 
   967  0E14                     	;# 
   968  0E15                     	;# 
   969  0E16                     	;# 
   970  0E17                     	;# 
   971  0E90                     	;# 
   972  0E91                     	;# 
   973  0E92                     	;# 
   974  0E94                     	;# 
   975  0E95                     	;# 
   976  0EA0                     	;# 
   977  0EA1                     	;# 
   978  0EA2                     	;# 
   979  0EA3                     	;# 
   980  0EA4                     	;# 
   981  0EA5                     	;# 
   982  0FE4                     	;# 
   983  0FE5                     	;# 
   984  0FE6                     	;# 
   985  0FE7                     	;# 
   986  0FE8                     	;# 
   987  0FE8                     	;# 
   988  0FE9                     	;# 
   989  0FEA                     	;# 
   990  0FEA                     	;# 
   991  0FEB                     	;# 
   992  0FED                     	;# 
   993  0FEE                     	;# 
   994  0FEE                     	;# 
   995  0FEF                     	;# 
   996  0000                     	;# 
   997  0001                     	;# 
   998  0002                     	;# 
   999  0003                     	;# 
  1000  0004                     	;# 
  1001  0005                     	;# 
  1002  0006                     	;# 
  1003  0007                     	;# 
  1004  0008                     	;# 
  1005  0009                     	;# 
  1006  000A                     	;# 
  1007  000B                     	;# 
  1008  000C                     	;# 
  1009  000E                     	;# 
  1010  0011                     	;# 
  1011  0012                     	;# 
  1012  0013                     	;# 
  1013  0015                     	;# 
  1014  0016                     	;# 
  1015  0016                     	;# 
  1016  0017                     	;# 
  1017  0018                     	;# 
  1018  0019                     	;# 
  1019  001A                     	;# 
  1020  001B                     	;# 
  1021  001C                     	;# 
  1022  008C                     	;# 
  1023  008E                     	;# 
  1024  0091                     	;# 
  1025  0092                     	;# 
  1026  0093                     	;# 
  1027  0095                     	;# 
  1028  0096                     	;# 
  1029  0097                     	;# 
  1030  0098                     	;# 
  1031  0099                     	;# 
  1032  009A                     	;# 
  1033  009B                     	;# 
  1034  009B                     	;# 
  1035  009C                     	;# 
  1036  009D                     	;# 
  1037  009E                     	;# 
  1038  009F                     	;# 
  1039  010C                     	;# 
  1040  010E                     	;# 
  1041  0111                     	;# 
  1042  0112                     	;# 
  1043  0113                     	;# 
  1044  0114                     	;# 
  1045  0115                     	;# 
  1046  0116                     	;# 
  1047  0117                     	;# 
  1048  0118                     	;# 
  1049  0119                     	;# 
  1050  018C                     	;# 
  1051  018E                     	;# 
  1052  0191                     	;# 
  1053  0191                     	;# 
  1054  0192                     	;# 
  1055  0193                     	;# 
  1056  0193                     	;# 
  1057  0194                     	;# 
  1058  0195                     	;# 
  1059  0196                     	;# 
  1060  0197                     	;# 
  1061  0199                     	;# 
  1062  019A                     	;# 
  1063  019B                     	;# 
  1064  019B                     	;# 
  1065  019C                     	;# 
  1066  019D                     	;# 
  1067  019E                     	;# 
  1068  019F                     	;# 
  1069  020C                     	;# 
  1070  020E                     	;# 
  1071  028C                     	;# 
  1072  028E                     	;# 
  1073  030C                     	;# 
  1074  030E                     	;# 
  1075  038C                     	;# 
  1076  038E                     	;# 
  1077  0391                     	;# 
  1078  0392                     	;# 
  1079  0393                     	;# 
  1080  0397                     	;# 
  1081  0398                     	;# 
  1082  0399                     	;# 
  1083  0691                     	;# 
  1084  0692                     	;# 
  1085  0693                     	;# 
  1086  0694                     	;# 
  1087  0695                     	;# 
  1088  0D8E                     	;# 
  1089  0D8F                     	;# 
  1090  0D90                     	;# 
  1091  0D91                     	;# 
  1092  0D91                     	;# 
  1093  0D92                     	;# 
  1094  0D93                     	;# 
  1095  0D93                     	;# 
  1096  0D94                     	;# 
  1097  0D95                     	;# 
  1098  0D95                     	;# 
  1099  0D96                     	;# 
  1100  0D97                     	;# 
  1101  0D97                     	;# 
  1102  0D98                     	;# 
  1103  0D99                     	;# 
  1104  0D99                     	;# 
  1105  0D9A                     	;# 
  1106  0D9B                     	;# 
  1107  0D9C                     	;# 
  1108  0D9C                     	;# 
  1109  0D9D                     	;# 
  1110  0D9D                     	;# 
  1111  0D9E                     	;# 
  1112  0D9F                     	;# 
  1113  0DA0                     	;# 
  1114  0DA1                     	;# 
  1115  0DA1                     	;# 
  1116  0DA2                     	;# 
  1117  0DA3                     	;# 
  1118  0DA3                     	;# 
  1119  0DA4                     	;# 
  1120  0DA5                     	;# 
  1121  0DA5                     	;# 
  1122  0DA6                     	;# 
  1123  0DA7                     	;# 
  1124  0DA7                     	;# 
  1125  0DA8                     	;# 
  1126  0DA9                     	;# 
  1127  0DA9                     	;# 
  1128  0DAA                     	;# 
  1129  0DAB                     	;# 
  1130  0DAC                     	;# 
  1131  0DAC                     	;# 
  1132  0DAD                     	;# 
  1133  0DAD                     	;# 
  1134  0DAE                     	;# 
  1135  0DAF                     	;# 
  1136  0DB0                     	;# 
  1137  0DB1                     	;# 
  1138  0DB1                     	;# 
  1139  0DB2                     	;# 
  1140  0DB3                     	;# 
  1141  0DB3                     	;# 
  1142  0DB4                     	;# 
  1143  0DB5                     	;# 
  1144  0DB5                     	;# 
  1145  0DB6                     	;# 
  1146  0DB7                     	;# 
  1147  0DB7                     	;# 
  1148  0DB8                     	;# 
  1149  0DB9                     	;# 
  1150  0DB9                     	;# 
  1151  0DBA                     	;# 
  1152  0DBB                     	;# 
  1153  0DBC                     	;# 
  1154  0DBC                     	;# 
  1155  0DBD                     	;# 
  1156  0DBD                     	;# 
  1157  0DBE                     	;# 
  1158  0DBF                     	;# 
  1159  0DC0                     	;# 
  1160  0DC1                     	;# 
  1161  0DC1                     	;# 
  1162  0DC2                     	;# 
  1163  0DC3                     	;# 
  1164  0DC3                     	;# 
  1165  0DC4                     	;# 
  1166  0DC5                     	;# 
  1167  0DC5                     	;# 
  1168  0DC6                     	;# 
  1169  0DC7                     	;# 
  1170  0DC7                     	;# 
  1171  0DC8                     	;# 
  1172  0DC9                     	;# 
  1173  0DC9                     	;# 
  1174  0DCA                     	;# 
  1175  0DCB                     	;# 
  1176  0DCC                     	;# 
  1177  0DCC                     	;# 
  1178  0DCD                     	;# 
  1179  0DCD                     	;# 
  1180  0DCE                     	;# 
  1181  0DCF                     	;# 
  1182  0DD0                     	;# 
  1183  0E0F                     	;# 
  1184  0E10                     	;# 
  1185  0E11                     	;# 
  1186  0E12                     	;# 
  1187  0E13                     	;# 
  1188  0E14                     	;# 
  1189  0E15                     	;# 
  1190  0E16                     	;# 
  1191  0E17                     	;# 
  1192  0E90                     	;# 
  1193  0E91                     	;# 
  1194  0E92                     	;# 
  1195  0E94                     	;# 
  1196  0E95                     	;# 
  1197  0EA0                     	;# 
  1198  0EA1                     	;# 
  1199  0EA2                     	;# 
  1200  0EA3                     	;# 
  1201  0EA4                     	;# 
  1202  0EA5                     	;# 
  1203  0FE4                     	;# 
  1204  0FE5                     	;# 
  1205  0FE6                     	;# 
  1206  0FE7                     	;# 
  1207  0FE8                     	;# 
  1208  0FE8                     	;# 
  1209  0FE9                     	;# 
  1210  0FEA                     	;# 
  1211  0FEA                     	;# 
  1212  0FEB                     	;# 
  1213  0FED                     	;# 
  1214  0FEE                     	;# 
  1215  0FEE                     	;# 
  1216  0FEF                     	;# 
  1217  0FFF                     	;# 
  1218  0000                     	;# 
  1219  0001                     	;# 
  1220  0002                     	;# 
  1221  0003                     	;# 
  1222  0004                     	;# 
  1223  0005                     	;# 
  1224  0006                     	;# 
  1225  0007                     	;# 
  1226  0008                     	;# 
  1227  0009                     	;# 
  1228  000A                     	;# 
  1229  000B                     	;# 
  1230  000C                     	;# 
  1231  000E                     	;# 
  1232  0011                     	;# 
  1233  0012                     	;# 
  1234  0013                     	;# 
  1235  0015                     	;# 
  1236  0016                     	;# 
  1237  0016                     	;# 
  1238  0017                     	;# 
  1239  0018                     	;# 
  1240  0019                     	;# 
  1241  001A                     	;# 
  1242  001B                     	;# 
  1243  001C                     	;# 
  1244  008C                     	;# 
  1245  008E                     	;# 
  1246  0091                     	;# 
  1247  0092                     	;# 
  1248  0093                     	;# 
  1249  0095                     	;# 
  1250  0096                     	;# 
  1251  0097                     	;# 
  1252  0098                     	;# 
  1253  0099                     	;# 
  1254  009A                     	;# 
  1255  009B                     	;# 
  1256  009B                     	;# 
  1257  009C                     	;# 
  1258  009D                     	;# 
  1259  009E                     	;# 
  1260  009F                     	;# 
  1261  010C                     	;# 
  1262  010E                     	;# 
  1263  0111                     	;# 
  1264  0112                     	;# 
  1265  0113                     	;# 
  1266  0114                     	;# 
  1267  0115                     	;# 
  1268  0116                     	;# 
  1269  0117                     	;# 
  1270  0118                     	;# 
  1271  0119                     	;# 
  1272  018C                     	;# 
  1273  018E                     	;# 
  1274  0191                     	;# 
  1275  0191                     	;# 
  1276  0192                     	;# 
  1277  0193                     	;# 
  1278  0193                     	;# 
  1279  0194                     	;# 
  1280  0195                     	;# 
  1281  0196                     	;# 
  1282  0197                     	;# 
  1283  0199                     	;# 
  1284  019A                     	;# 
  1285  019B                     	;# 
  1286  019B                     	;# 
  1287  019C                     	;# 
  1288  019D                     	;# 
  1289  019E                     	;# 
  1290  019F                     	;# 
  1291  020C                     	;# 
  1292  020E                     	;# 
  1293  028C                     	;# 
  1294  028E                     	;# 
  1295  030C                     	;# 
  1296  030E                     	;# 
  1297  038C                     	;# 
  1298  038E                     	;# 
  1299  0391                     	;# 
  1300  0392                     	;# 
  1301  0393                     	;# 
  1302  0397                     	;# 
  1303  0398                     	;# 
  1304  0399                     	;# 
  1305  0691                     	;# 
  1306  0692                     	;# 
  1307  0693                     	;# 
  1308  0694                     	;# 
  1309  0695                     	;# 
  1310  0D8E                     	;# 
  1311  0D8F                     	;# 
  1312  0D90                     	;# 
  1313  0D91                     	;# 
  1314  0D91                     	;# 
  1315  0D92                     	;# 
  1316  0D93                     	;# 
  1317  0D93                     	;# 
  1318  0D94                     	;# 
  1319  0D95                     	;# 
  1320  0D95                     	;# 
  1321  0D96                     	;# 
  1322  0D97                     	;# 
  1323  0D97                     	;# 
  1324  0D98                     	;# 
  1325  0D99                     	;# 
  1326  0D99                     	;# 
  1327  0D9A                     	;# 
  1328  0D9B                     	;# 
  1329  0D9C                     	;# 
  1330  0D9C                     	;# 
  1331  0D9D                     	;# 
  1332  0D9D                     	;# 
  1333  0D9E                     	;# 
  1334  0D9F                     	;# 
  1335  0DA0                     	;# 
  1336  0DA1                     	;# 
  1337  0DA1                     	;# 
  1338  0DA2                     	;# 
  1339  0DA3                     	;# 
  1340  0DA3                     	;# 
  1341  0DA4                     	;# 
  1342  0DA5                     	;# 
  1343  0DA5                     	;# 
  1344  0DA6                     	;# 
  1345  0DA7                     	;# 
  1346  0DA7                     	;# 
  1347  0DA8                     	;# 
  1348  0DA9                     	;# 
  1349  0DA9                     	;# 
  1350  0DAA                     	;# 
  1351  0DAB                     	;# 
  1352  0DAC                     	;# 
  1353  0DAC                     	;# 
  1354  0DAD                     	;# 
  1355  0DAD                     	;# 
  1356  0DAE                     	;# 
  1357  0DAF                     	;# 
  1358  0DB0                     	;# 
  1359  0DB1                     	;# 
  1360  0DB1                     	;# 
  1361  0DB2                     	;# 
  1362  0DB3                     	;# 
  1363  0DB3                     	;# 
  1364  0DB4                     	;# 
  1365  0DB5                     	;# 
  1366  0DB5                     	;# 
  1367  0DB6                     	;# 
  1368  0DB7                     	;# 
  1369  0DB7                     	;# 
  1370  0DB8                     	;# 
  1371  0DB9                     	;# 
  1372  0DB9                     	;# 
  1373  0DBA                     	;# 
  1374  0DBB                     	;# 
  1375  0DBC                     	;# 
  1376  0DBC                     	;# 
  1377  0DBD                     	;# 
  1378  0DBD                     	;# 
  1379  0DBE                     	;# 
  1380  0DBF                     	;# 
  1381  0DC0                     	;# 
  1382  0DC1                     	;# 
  1383  0DC1                     	;# 
  1384  0DC2                     	;# 
  1385  0DC3                     	;# 
  1386  0DC3                     	;# 
  1387  0DC4                     	;# 
  1388  0DC5                     	;# 
  1389  0DC5                     	;# 
  1390  0DC6                     	;# 
  1391  0DC7                     	;# 
  1392  0DC7                     	;# 
  1393  0DC8                     	;# 
  1394  0DC9                     	;# 
  1395  0DC9                     	;# 
  1396  0DCA                     	;# 
  1397  0DCB                     	;# 
  1398  0DCC                     	;# 
  1399  0DCC                     	;# 
  1400  0DCD                     	;# 
  1401  0DCD                     	;# 
  1402  0DCE                     	;# 
  1403  0DCF                     	;# 
  1404  0DD0                     	;# 
  1405  0E0F                     	;# 
  1406  0E10                     	;# 
  1407  0E11                     	;# 
  1408  0E12                     	;# 
  1409  0E13                     	;# 
  1410  0E14                     	;# 
  1411  0E15                     	;# 
  1412  0E16                     	;# 
  1413  0E17                     	;# 
  1414  0E90                     	;# 
  1415  0E91                     	;# 
  1416  0E92                     	;# 
  1417  0E94                     	;# 
  1418  0E95                     	;# 
  1419  0EA0                     	;# 
  1420  0EA1                     	;# 
  1421  0EA2                     	;# 
  1422  0EA3                     	;# 
  1423  0EA4                     	;# 
  1424  0EA5                     	;# 
  1425  0FE4                     	;# 
  1426  0FE5                     	;# 
  1427  0FE6                     	;# 
  1428  0FE7                     	;# 
  1429  0FE8                     	;# 
  1430  0FE8                     	;# 
  1431  0FE9                     	;# 
  1432  0FEA                     	;# 
  1433  0FEA                     	;# 
  1434  0FEB                     	;# 
  1435  0FED                     	;# 
  1436  0FEE                     	;# 
  1437  0FEE                     	;# 
  1438  0FEF                     	;# 
  1439  0000                     	;# 
  1440  0001                     	;# 
  1441  0002                     	;# 
  1442  0003                     	;# 
  1443  0004                     	;# 
  1444  0005                     	;# 
  1445  0006                     	;# 
  1446  0007                     	;# 
  1447  0008                     	;# 
  1448  0009                     	;# 
  1449  000A                     	;# 
  1450  000B                     	;# 
  1451  000C                     	;# 
  1452  000E                     	;# 
  1453  0011                     	;# 
  1454  0012                     	;# 
  1455  0013                     	;# 
  1456  0015                     	;# 
  1457  0016                     	;# 
  1458  0016                     	;# 
  1459  0017                     	;# 
  1460  0018                     	;# 
  1461  0019                     	;# 
  1462  001A                     	;# 
  1463  001B                     	;# 
  1464  001C                     	;# 
  1465  008C                     	;# 
  1466  008E                     	;# 
  1467  0091                     	;# 
  1468  0092                     	;# 
  1469  0093                     	;# 
  1470  0095                     	;# 
  1471  0096                     	;# 
  1472  0097                     	;# 
  1473  0098                     	;# 
  1474  0099                     	;# 
  1475  009A                     	;# 
  1476  009B                     	;# 
  1477  009B                     	;# 
  1478  009C                     	;# 
  1479  009D                     	;# 
  1480  009E                     	;# 
  1481  009F                     	;# 
  1482  010C                     	;# 
  1483  010E                     	;# 
  1484  0111                     	;# 
  1485  0112                     	;# 
  1486  0113                     	;# 
  1487  0114                     	;# 
  1488  0115                     	;# 
  1489  0116                     	;# 
  1490  0117                     	;# 
  1491  0118                     	;# 
  1492  0119                     	;# 
  1493  018C                     	;# 
  1494  018E                     	;# 
  1495  0191                     	;# 
  1496  0191                     	;# 
  1497  0192                     	;# 
  1498  0193                     	;# 
  1499  0193                     	;# 
  1500  0194                     	;# 
  1501  0195                     	;# 
  1502  0196                     	;# 
  1503  0197                     	;# 
  1504  0199                     	;# 
  1505  019A                     	;# 
  1506  019B                     	;# 
  1507  019B                     	;# 
  1508  019C                     	;# 
  1509  019D                     	;# 
  1510  019E                     	;# 
  1511  019F                     	;# 
  1512  020C                     	;# 
  1513  020E                     	;# 
  1514  028C                     	;# 
  1515  028E                     	;# 
  1516  030C                     	;# 
  1517  030E                     	;# 
  1518  038C                     	;# 
  1519  038E                     	;# 
  1520  0391                     	;# 
  1521  0392                     	;# 
  1522  0393                     	;# 
  1523  0397                     	;# 
  1524  0398                     	;# 
  1525  0399                     	;# 
  1526  0691                     	;# 
  1527  0692                     	;# 
  1528  0693                     	;# 
  1529  0694                     	;# 
  1530  0695                     	;# 
  1531  0D8E                     	;# 
  1532  0D8F                     	;# 
  1533  0D90                     	;# 
  1534  0D91                     	;# 
  1535  0D91                     	;# 
  1536  0D92                     	;# 
  1537  0D93                     	;# 
  1538  0D93                     	;# 
  1539  0D94                     	;# 
  1540  0D95                     	;# 
  1541  0D95                     	;# 
  1542  0D96                     	;# 
  1543  0D97                     	;# 
  1544  0D97                     	;# 
  1545  0D98                     	;# 
  1546  0D99                     	;# 
  1547  0D99                     	;# 
  1548  0D9A                     	;# 
  1549  0D9B                     	;# 
  1550  0D9C                     	;# 
  1551  0D9C                     	;# 
  1552  0D9D                     	;# 
  1553  0D9D                     	;# 
  1554  0D9E                     	;# 
  1555  0D9F                     	;# 
  1556  0DA0                     	;# 
  1557  0DA1                     	;# 
  1558  0DA1                     	;# 
  1559  0DA2                     	;# 
  1560  0DA3                     	;# 
  1561  0DA3                     	;# 
  1562  0DA4                     	;# 
  1563  0DA5                     	;# 
  1564  0DA5                     	;# 
  1565  0DA6                     	;# 
  1566  0DA7                     	;# 
  1567  0DA7                     	;# 
  1568  0DA8                     	;# 
  1569  0DA9                     	;# 
  1570  0DA9                     	;# 
  1571  0DAA                     	;# 
  1572  0DAB                     	;# 
  1573  0DAC                     	;# 
  1574  0DAC                     	;# 
  1575  0DAD                     	;# 
  1576  0DAD                     	;# 
  1577  0DAE                     	;# 
  1578  0DAF                     	;# 
  1579  0DB0                     	;# 
  1580  0DB1                     	;# 
  1581  0DB1                     	;# 
  1582  0DB2                     	;# 
  1583  0DB3                     	;# 
  1584  0DB3                     	;# 
  1585  0DB4                     	;# 
  1586  0DB5                     	;# 
  1587  0DB5                     	;# 
  1588  0DB6                     	;# 
  1589  0DB7                     	;# 
  1590  0DB7                     	;# 
  1591  0DB8                     	;# 
  1592  0DB9                     	;# 
  1593  0DB9                     	;# 
  1594  0DBA                     	;# 
  1595  0DBB                     	;# 
  1596  0DBC                     	;# 
  1597  0DBC                     	;# 
  1598  0DBD                     	;# 
  1599  0DBD                     	;# 
  1600  0DBE                     	;# 
  1601  0DBF                     	;# 
  1602  0DC0                     	;# 
  1603  0DC1                     	;# 
  1604  0DC1                     	;# 
  1605  0DC2                     	;# 
  1606  0DC3                     	;# 
  1607  0DC3                     	;# 
  1608  0DC4                     	;# 
  1609  0DC5                     	;# 
  1610  0DC5                     	;# 
  1611  0DC6                     	;# 
  1612  0DC7                     	;# 
  1613  0DC7                     	;# 
  1614  0DC8                     	;# 
  1615  0DC9                     	;# 
  1616  0DC9                     	;# 
  1617  0DCA                     	;# 
  1618  0DCB                     	;# 
  1619  0DCC                     	;# 
  1620  0DCC                     	;# 
  1621  0DCD                     	;# 
  1622  0DCD                     	;# 
  1623  0DCE                     	;# 
  1624  0DCF                     	;# 
  1625  0DD0                     	;# 
  1626  0E0F                     	;# 
  1627  0E10                     	;# 
  1628  0E11                     	;# 
  1629  0E12                     	;# 
  1630  0E13                     	;# 
  1631  0E14                     	;# 
  1632  0E15                     	;# 
  1633  0E16                     	;# 
  1634  0E17                     	;# 
  1635  0E90                     	;# 
  1636  0E91                     	;# 
  1637  0E92                     	;# 
  1638  0E94                     	;# 
  1639  0E95                     	;# 
  1640  0EA0                     	;# 
  1641  0EA1                     	;# 
  1642  0EA2                     	;# 
  1643  0EA3                     	;# 
  1644  0EA4                     	;# 
  1645  0EA5                     	;# 
  1646  0FE4                     	;# 
  1647  0FE5                     	;# 
  1648  0FE6                     	;# 
  1649  0FE7                     	;# 
  1650  0FE8                     	;# 
  1651  0FE8                     	;# 
  1652  0FE9                     	;# 
  1653  0FEA                     	;# 
  1654  0FEA                     	;# 
  1655  0FEB                     	;# 
  1656  0FED                     	;# 
  1657  0FEE                     	;# 
  1658  0FEE                     	;# 
  1659  0FEF                     	;# 
  1660  0000                     	;# 
  1661  0001                     	;# 
  1662  0002                     	;# 
  1663  0003                     	;# 
  1664  0004                     	;# 
  1665  0005                     	;# 
  1666  0006                     	;# 
  1667  0007                     	;# 
  1668  0008                     	;# 
  1669  0009                     	;# 
  1670  000A                     	;# 
  1671  000B                     	;# 
  1672  000C                     	;# 
  1673  000E                     	;# 
  1674  0011                     	;# 
  1675  0012                     	;# 
  1676  0013                     	;# 
  1677  0015                     	;# 
  1678  0016                     	;# 
  1679  0016                     	;# 
  1680  0017                     	;# 
  1681  0018                     	;# 
  1682  0019                     	;# 
  1683  001A                     	;# 
  1684  001B                     	;# 
  1685  001C                     	;# 
  1686  008C                     	;# 
  1687  008E                     	;# 
  1688  0091                     	;# 
  1689  0092                     	;# 
  1690  0093                     	;# 
  1691  0095                     	;# 
  1692  0096                     	;# 
  1693  0097                     	;# 
  1694  0098                     	;# 
  1695  0099                     	;# 
  1696  009A                     	;# 
  1697  009B                     	;# 
  1698  009B                     	;# 
  1699  009C                     	;# 
  1700  009D                     	;# 
  1701  009E                     	;# 
  1702  009F                     	;# 
  1703  010C                     	;# 
  1704  010E                     	;# 
  1705  0111                     	;# 
  1706  0112                     	;# 
  1707  0113                     	;# 
  1708  0114                     	;# 
  1709  0115                     	;# 
  1710  0116                     	;# 
  1711  0117                     	;# 
  1712  0118                     	;# 
  1713  0119                     	;# 
  1714  018C                     	;# 
  1715  018E                     	;# 
  1716  0191                     	;# 
  1717  0191                     	;# 
  1718  0192                     	;# 
  1719  0193                     	;# 
  1720  0193                     	;# 
  1721  0194                     	;# 
  1722  0195                     	;# 
  1723  0196                     	;# 
  1724  0197                     	;# 
  1725  0199                     	;# 
  1726  019A                     	;# 
  1727  019B                     	;# 
  1728  019B                     	;# 
  1729  019C                     	;# 
  1730  019D                     	;# 
  1731  019E                     	;# 
  1732  019F                     	;# 
  1733  020C                     	;# 
  1734  020E                     	;# 
  1735  028C                     	;# 
  1736  028E                     	;# 
  1737  030C                     	;# 
  1738  030E                     	;# 
  1739  038C                     	;# 
  1740  038E                     	;# 
  1741  0391                     	;# 
  1742  0392                     	;# 
  1743  0393                     	;# 
  1744  0397                     	;# 
  1745  0398                     	;# 
  1746  0399                     	;# 
  1747  0691                     	;# 
  1748  0692                     	;# 
  1749  0693                     	;# 
  1750  0694                     	;# 
  1751  0695                     	;# 
  1752  0D8E                     	;# 
  1753  0D8F                     	;# 
  1754  0D90                     	;# 
  1755  0D91                     	;# 
  1756  0D91                     	;# 
  1757  0D92                     	;# 
  1758  0D93                     	;# 
  1759  0D93                     	;# 
  1760  0D94                     	;# 
  1761  0D95                     	;# 
  1762  0D95                     	;# 
  1763  0D96                     	;# 
  1764  0D97                     	;# 
  1765  0D97                     	;# 
  1766  0D98                     	;# 
  1767  0D99                     	;# 
  1768  0D99                     	;# 
  1769  0D9A                     	;# 
  1770  0D9B                     	;# 
  1771  0D9C                     	;# 
  1772  0D9C                     	;# 
  1773  0D9D                     	;# 
  1774  0D9D                     	;# 
  1775  0D9E                     	;# 
  1776  0D9F                     	;# 
  1777  0DA0                     	;# 
  1778  0DA1                     	;# 
  1779  0DA1                     	;# 
  1780  0DA2                     	;# 
  1781  0DA3                     	;# 
  1782  0DA3                     	;# 
  1783  0DA4                     	;# 
  1784  0DA5                     	;# 
  1785  0DA5                     	;# 
  1786  0DA6                     	;# 
  1787  0DA7                     	;# 
  1788  0DA7                     	;# 
  1789  0DA8                     	;# 
  1790  0DA9                     	;# 
  1791  0DA9                     	;# 
  1792  0DAA                     	;# 
  1793  0DAB                     	;# 
  1794  0DAC                     	;# 
  1795  0DAC                     	;# 
  1796  0DAD                     	;# 
  1797  0DAD                     	;# 
  1798  0DAE                     	;# 
  1799  0DAF                     	;# 
  1800  0DB0                     	;# 
  1801  0DB1                     	;# 
  1802  0DB1                     	;# 
  1803  0DB2                     	;# 
  1804  0DB3                     	;# 
  1805  0DB3                     	;# 
  1806  0DB4                     	;# 
  1807  0DB5                     	;# 
  1808  0DB5                     	;# 
  1809  0DB6                     	;# 
  1810  0DB7                     	;# 
  1811  0DB7                     	;# 
  1812  0DB8                     	;# 
  1813  0DB9                     	;# 
  1814  0DB9                     	;# 
  1815  0DBA                     	;# 
  1816  0DBB                     	;# 
  1817  0DBC                     	;# 
  1818  0DBC                     	;# 
  1819  0DBD                     	;# 
  1820  0DBD                     	;# 
  1821  0DBE                     	;# 
  1822  0DBF                     	;# 
  1823  0DC0                     	;# 
  1824  0DC1                     	;# 
  1825  0DC1                     	;# 
  1826  0DC2                     	;# 
  1827  0DC3                     	;# 
  1828  0DC3                     	;# 
  1829  0DC4                     	;# 
  1830  0DC5                     	;# 
  1831  0DC5                     	;# 
  1832  0DC6                     	;# 
  1833  0DC7                     	;# 
  1834  0DC7                     	;# 
  1835  0DC8                     	;# 
  1836  0DC9                     	;# 
  1837  0DC9                     	;# 
  1838  0DCA                     	;# 
  1839  0DCB                     	;# 
  1840  0DCC                     	;# 
  1841  0DCC                     	;# 
  1842  0DCD                     	;# 
  1843  0DCD                     	;# 
  1844  0DCE                     	;# 
  1845  0DCF                     	;# 
  1846  0DD0                     	;# 
  1847  0E0F                     	;# 
  1848  0E10                     	;# 
  1849  0E11                     	;# 
  1850  0E12                     	;# 
  1851  0E13                     	;# 
  1852  0E14                     	;# 
  1853  0E15                     	;# 
  1854  0E16                     	;# 
  1855  0E17                     	;# 
  1856  0E90                     	;# 
  1857  0E91                     	;# 
  1858  0E92                     	;# 
  1859  0E94                     	;# 
  1860  0E95                     	;# 
  1861  0EA0                     	;# 
  1862  0EA1                     	;# 
  1863  0EA2                     	;# 
  1864  0EA3                     	;# 
  1865  0EA4                     	;# 
  1866  0EA5                     	;# 
  1867  0FE4                     	;# 
  1868  0FE5                     	;# 
  1869  0FE6                     	;# 
  1870  0FE7                     	;# 
  1871  0FE8                     	;# 
  1872  0FE8                     	;# 
  1873  0FE9                     	;# 
  1874  0FEA                     	;# 
  1875  0FEA                     	;# 
  1876  0FEB                     	;# 
  1877  0FED                     	;# 
  1878  0FEE                     	;# 
  1879  0FEE                     	;# 
  1880  0FEF                     	;# 
  1881  0000                     	;# 
  1882  0001                     	;# 
  1883  0002                     	;# 
  1884  0003                     	;# 
  1885  0004                     	;# 
  1886  0005                     	;# 
  1887  0006                     	;# 
  1888  0007                     	;# 
  1889  0008                     	;# 
  1890  0009                     	;# 
  1891  000A                     	;# 
  1892  000B                     	;# 
  1893  000C                     	;# 
  1894  000E                     	;# 
  1895  0011                     	;# 
  1896  0012                     	;# 
  1897  0013                     	;# 
  1898  0015                     	;# 
  1899  0016                     	;# 
  1900  0016                     	;# 
  1901  0017                     	;# 
  1902  0018                     	;# 
  1903  0019                     	;# 
  1904  001A                     	;# 
  1905  001B                     	;# 
  1906  001C                     	;# 
  1907  008C                     	;# 
  1908  008E                     	;# 
  1909  0091                     	;# 
  1910  0092                     	;# 
  1911  0093                     	;# 
  1912  0095                     	;# 
  1913  0096                     	;# 
  1914  0097                     	;# 
  1915  0098                     	;# 
  1916  0099                     	;# 
  1917  009A                     	;# 
  1918  009B                     	;# 
  1919  009B                     	;# 
  1920  009C                     	;# 
  1921  009D                     	;# 
  1922  009E                     	;# 
  1923  009F                     	;# 
  1924  010C                     	;# 
  1925  010E                     	;# 
  1926  0111                     	;# 
  1927  0112                     	;# 
  1928  0113                     	;# 
  1929  0114                     	;# 
  1930  0115                     	;# 
  1931  0116                     	;# 
  1932  0117                     	;# 
  1933  0118                     	;# 
  1934  0119                     	;# 
  1935  018C                     	;# 
  1936  018E                     	;# 
  1937  0191                     	;# 
  1938  0191                     	;# 
  1939  0192                     	;# 
  1940  0193                     	;# 
  1941  0193                     	;# 
  1942  0194                     	;# 
  1943  0195                     	;# 
  1944  0196                     	;# 
  1945  0197                     	;# 
  1946  0199                     	;# 
  1947  019A                     	;# 
  1948  019B                     	;# 
  1949  019B                     	;# 
  1950  019C                     	;# 
  1951  019D                     	;# 
  1952  019E                     	;# 
  1953  019F                     	;# 
  1954  020C                     	;# 
  1955  020E                     	;# 
  1956  028C                     	;# 
  1957  028E                     	;# 
  1958  030C                     	;# 
  1959  030E                     	;# 
  1960  038C                     	;# 
  1961  038E                     	;# 
  1962  0391                     	;# 
  1963  0392                     	;# 
  1964  0393                     	;# 
  1965  0397                     	;# 
  1966  0398                     	;# 
  1967  0399                     	;# 
  1968  0691                     	;# 
  1969  0692                     	;# 
  1970  0693                     	;# 
  1971  0694                     	;# 
  1972  0695                     	;# 
  1973  0D8E                     	;# 
  1974  0D8F                     	;# 
  1975  0D90                     	;# 
  1976  0D91                     	;# 
  1977  0D91                     	;# 
  1978  0D92                     	;# 
  1979  0D93                     	;# 
  1980  0D93                     	;# 
  1981  0D94                     	;# 
  1982  0D95                     	;# 
  1983  0D95                     	;# 
  1984  0D96                     	;# 
  1985  0D97                     	;# 
  1986  0D97                     	;# 
  1987  0D98                     	;# 
  1988  0D99                     	;# 
  1989  0D99                     	;# 
  1990  0D9A                     	;# 
  1991  0D9B                     	;# 
  1992  0D9C                     	;# 
  1993  0D9C                     	;# 
  1994  0D9D                     	;# 
  1995  0D9D                     	;# 
  1996  0D9E                     	;# 
  1997  0D9F                     	;# 
  1998  0DA0                     	;# 
  1999  0DA1                     	;# 
  2000  0DA1                     	;# 
  2001  0DA2                     	;# 
  2002  0DA3                     	;# 
  2003  0DA3                     	;# 
  2004  0DA4                     	;# 
  2005  0DA5                     	;# 
  2006  0DA5                     	;# 
  2007  0DA6                     	;# 
  2008  0DA7                     	;# 
  2009  0DA7                     	;# 
  2010  0DA8                     	;# 
  2011  0DA9                     	;# 
  2012  0DA9                     	;# 
  2013  0DAA                     	;# 
  2014  0DAB                     	;# 
  2015  0DAC                     	;# 
  2016  0DAC                     	;# 
  2017  0DAD                     	;# 
  2018  0DAD                     	;# 
  2019  0DAE                     	;# 
  2020  0DAF                     	;# 
  2021  0DB0                     	;# 
  2022  0DB1                     	;# 
  2023  0DB1                     	;# 
  2024  0DB2                     	;# 
  2025  0DB3                     	;# 
  2026  0DB3                     	;# 
  2027  0DB4                     	;# 
  2028  0DB5                     	;# 
  2029  0DB5                     	;# 
  2030  0DB6                     	;# 
  2031  0DB7                     	;# 
  2032  0DB7                     	;# 
  2033  0DB8                     	;# 
  2034  0DB9                     	;# 
  2035  0DB9                     	;# 
  2036  0DBA                     	;# 
  2037  0DBB                     	;# 
  2038  0DBC                     	;# 
  2039  0DBC                     	;# 
  2040  0DBD                     	;# 
  2041  0DBD                     	;# 
  2042  0DBE                     	;# 
  2043  0DBF                     	;# 
  2044  0DC0                     	;# 
  2045  0DC1                     	;# 
  2046  0DC1                     	;# 
  2047  0DC2                     	;# 
  2048  0DC3                     	;# 
  2049  0DC3                     	;# 
  2050  0DC4                     	;# 
  2051  0DC5                     	;# 
  2052  0DC5                     	;# 
  2053  0DC6                     	;# 
  2054  0DC7                     	;# 
  2055  0DC7                     	;# 
  2056  0DC8                     	;# 
  2057  0DC9                     	;# 
  2058  0DC9                     	;# 
  2059  0DCA                     	;# 
  2060  0DCB                     	;# 
  2061  0DCC                     	;# 
  2062  0DCC                     	;# 
  2063  0DCD                     	;# 
  2064  0DCD                     	;# 
  2065  0DCE                     	;# 
  2066  0DCF                     	;# 
  2067  0DD0                     	;# 
  2068  0E0F                     	;# 
  2069  0E10                     	;# 
  2070  0E11                     	;# 
  2071  0E12                     	;# 
  2072  0E13                     	;# 
  2073  0E14                     	;# 
  2074  0E15                     	;# 
  2075  0E16                     	;# 
  2076  0E17                     	;# 
  2077  0E90                     	;# 
  2078  0E91                     	;# 
  2079  0E92                     	;# 
  2080  0E94                     	;# 
  2081  0E95                     	;# 
  2082  0EA0                     	;# 
  2083  0EA1                     	;# 
  2084  0EA2                     	;# 
  2085  0EA3                     	;# 
  2086  0EA4                     	;# 
  2087  0EA5                     	;# 
  2088  0FE4                     	;# 
  2089  0FE5                     	;# 
  2090  0FE6                     	;# 
  2091  0FE7                     	;# 
  2092  0FE8                     	;# 
  2093  0FE8                     	;# 
  2094  0FE9                     	;# 
  2095  0FEA                     	;# 
  2096  0FEA                     	;# 
  2097  0FEB                     	;# 
  2098  0FED                     	;# 
  2099  0FEE                     	;# 
  2100  0FEE                     	;# 
  2101  0FEF                     	;# 
  2102  0000                     	;# 
  2103  0001                     	;# 
  2104  0002                     	;# 
  2105  0003                     	;# 
  2106  0004                     	;# 
  2107  0005                     	;# 
  2108  0006                     	;# 
  2109  0007                     	;# 
  2110  0008                     	;# 
  2111  0009                     	;# 
  2112  000A                     	;# 
  2113  000B                     	;# 
  2114  000C                     	;# 
  2115  000E                     	;# 
  2116  0011                     	;# 
  2117  0012                     	;# 
  2118  0013                     	;# 
  2119  0015                     	;# 
  2120  0016                     	;# 
  2121  0016                     	;# 
  2122  0017                     	;# 
  2123  0018                     	;# 
  2124  0019                     	;# 
  2125  001A                     	;# 
  2126  001B                     	;# 
  2127  001C                     	;# 
  2128  008C                     	;# 
  2129  008E                     	;# 
  2130  0091                     	;# 
  2131  0092                     	;# 
  2132  0093                     	;# 
  2133  0095                     	;# 
  2134  0096                     	;# 
  2135  0097                     	;# 
  2136  0098                     	;# 
  2137  0099                     	;# 
  2138  009A                     	;# 
  2139  009B                     	;# 
  2140  009B                     	;# 
  2141  009C                     	;# 
  2142  009D                     	;# 
  2143  009E                     	;# 
  2144  009F                     	;# 
  2145  010C                     	;# 
  2146  010E                     	;# 
  2147  0111                     	;# 
  2148  0112                     	;# 
  2149  0113                     	;# 
  2150  0114                     	;# 
  2151  0115                     	;# 
  2152  0116                     	;# 
  2153  0117                     	;# 
  2154  0118                     	;# 
  2155  0119                     	;# 
  2156  018C                     	;# 
  2157  018E                     	;# 
  2158  0191                     	;# 
  2159  0191                     	;# 
  2160  0192                     	;# 
  2161  0193                     	;# 
  2162  0193                     	;# 
  2163  0194                     	;# 
  2164  0195                     	;# 
  2165  0196                     	;# 
  2166  0197                     	;# 
  2167  0199                     	;# 
  2168  019A                     	;# 
  2169  019B                     	;# 
  2170  019B                     	;# 
  2171  019C                     	;# 
  2172  019D                     	;# 
  2173  019E                     	;# 
  2174  019F                     	;# 
  2175  020C                     	;# 
  2176  020E                     	;# 
  2177  028C                     	;# 
  2178  028E                     	;# 
  2179  030C                     	;# 
  2180  030E                     	;# 
  2181  038C                     	;# 
  2182  038E                     	;# 
  2183  0391                     	;# 
  2184  0392                     	;# 
  2185  0393                     	;# 
  2186  0397                     	;# 
  2187  0398                     	;# 
  2188  0399                     	;# 
  2189  0691                     	;# 
  2190  0692                     	;# 
  2191  0693                     	;# 
  2192  0694                     	;# 
  2193  0695                     	;# 
  2194  0D8E                     	;# 
  2195  0D8F                     	;# 
  2196  0D90                     	;# 
  2197  0D91                     	;# 
  2198  0D91                     	;# 
  2199  0D92                     	;# 
  2200  0D93                     	;# 
  2201  0D93                     	;# 
  2202  0D94                     	;# 
  2203  0D95                     	;# 
  2204  0D95                     	;# 
  2205  0D96                     	;# 
  2206  0D97                     	;# 
  2207  0D97                     	;# 
  2208  0D98                     	;# 
  2209  0D99                     	;# 
  2210  0D99                     	;# 
  2211  0D9A                     	;# 
  2212  0D9B                     	;# 
  2213  0D9C                     	;# 
  2214  0D9C                     	;# 
  2215  0D9D                     	;# 
  2216  0D9D                     	;# 
  2217  0D9E                     	;# 
  2218  0D9F                     	;# 
  2219  0DA0                     	;# 
  2220  0DA1                     	;# 
  2221  0DA1                     	;# 
  2222  0DA2                     	;# 
  2223  0DA3                     	;# 
  2224  0DA3                     	;# 
  2225  0DA4                     	;# 
  2226  0DA5                     	;# 
  2227  0DA5                     	;# 
  2228  0DA6                     	;# 
  2229  0DA7                     	;# 
  2230  0DA7                     	;# 
  2231  0DA8                     	;# 
  2232  0DA9                     	;# 
  2233  0DA9                     	;# 
  2234  0DAA                     	;# 
  2235  0DAB                     	;# 
  2236  0DAC                     	;# 
  2237  0DAC                     	;# 
  2238  0DAD                     	;# 
  2239  0DAD                     	;# 
  2240  0DAE                     	;# 
  2241  0DAF                     	;# 
  2242  0DB0                     	;# 
  2243  0DB1                     	;# 
  2244  0DB1                     	;# 
  2245  0DB2                     	;# 
  2246  0DB3                     	;# 
  2247  0DB3                     	;# 
  2248  0DB4                     	;# 
  2249  0DB5                     	;# 
  2250  0DB5                     	;# 
  2251  0DB6                     	;# 
  2252  0DB7                     	;# 
  2253  0DB7                     	;# 
  2254  0DB8                     	;# 
  2255  0DB9                     	;# 
  2256  0DB9                     	;# 
  2257  0DBA                     	;# 
  2258  0DBB                     	;# 
  2259  0DBC                     	;# 
  2260  0DBC                     	;# 
  2261  0DBD                     	;# 
  2262  0DBD                     	;# 
  2263  0DBE                     	;# 
  2264  0DBF                     	;# 
  2265  0DC0                     	;# 
  2266  0DC1                     	;# 
  2267  0DC1                     	;# 
  2268  0DC2                     	;# 
  2269  0DC3                     	;# 
  2270  0DC3                     	;# 
  2271  0DC4                     	;# 
  2272  0DC5                     	;# 
  2273  0DC5                     	;# 
  2274  0DC6                     	;# 
  2275  0DC7                     	;# 
  2276  0DC7                     	;# 
  2277  0DC8                     	;# 
  2278  0DC9                     	;# 
  2279  0DC9                     	;# 
  2280  0DCA                     	;# 
  2281  0DCB                     	;# 
  2282  0DCC                     	;# 
  2283  0DCC                     	;# 
  2284  0DCD                     	;# 
  2285  0DCD                     	;# 
  2286  0DCE                     	;# 
  2287  0DCF                     	;# 
  2288  0DD0                     	;# 
  2289  0E0F                     	;# 
  2290  0E10                     	;# 
  2291  0E11                     	;# 
  2292  0E12                     	;# 
  2293  0E13                     	;# 
  2294  0E14                     	;# 
  2295  0E15                     	;# 
  2296  0E16                     	;# 
  2297  0E17                     	;# 
  2298  0E90                     	;# 
  2299  0E91                     	;# 
  2300  0E92                     	;# 
  2301  0E94                     	;# 
  2302  0E95                     	;# 
  2303  0EA0                     	;# 
  2304  0EA1                     	;# 
  2305  0EA2                     	;# 
  2306  0EA3                     	;# 
  2307  0EA4                     	;# 
  2308  0EA5                     	;# 
  2309  0FE4                     	;# 
  2310  0FE5                     	;# 
  2311  0FE6                     	;# 
  2312  0FE7                     	;# 
  2313  0FE8                     	;# 
  2314  0FE8                     	;# 
  2315  0FE9                     	;# 
  2316  0FEA                     	;# 
  2317  0FEA                     	;# 
  2318  0FEB                     	;# 
  2319  0FED                     	;# 
  2320  0FEE                     	;# 
  2321  0FEE                     	;# 
  2322  0FEF                     	;# 
  2323  0000                     	;# 
  2324  0001                     	;# 
  2325  0002                     	;# 
  2326  0003                     	;# 
  2327  0004                     	;# 
  2328  0005                     	;# 
  2329  0006                     	;# 
  2330  0007                     	;# 
  2331  0008                     	;# 
  2332  0009                     	;# 
  2333  000A                     	;# 
  2334  000B                     	;# 
  2335  000C                     	;# 
  2336  000E                     	;# 
  2337  0011                     	;# 
  2338  0012                     	;# 
  2339  0013                     	;# 
  2340  0015                     	;# 
  2341  0016                     	;# 
  2342  0016                     	;# 
  2343  0017                     	;# 
  2344  0018                     	;# 
  2345  0019                     	;# 
  2346  001A                     	;# 
  2347  001B                     	;# 
  2348  001C                     	;# 
  2349  008C                     	;# 
  2350  008E                     	;# 
  2351  0091                     	;# 
  2352  0092                     	;# 
  2353  0093                     	;# 
  2354  0095                     	;# 
  2355  0096                     	;# 
  2356  0097                     	;# 
  2357  0098                     	;# 
  2358  0099                     	;# 
  2359  009A                     	;# 
  2360  009B                     	;# 
  2361  009B                     	;# 
  2362  009C                     	;# 
  2363  009D                     	;# 
  2364  009E                     	;# 
  2365  009F                     	;# 
  2366  010C                     	;# 
  2367  010E                     	;# 
  2368  0111                     	;# 
  2369  0112                     	;# 
  2370  0113                     	;# 
  2371  0114                     	;# 
  2372  0115                     	;# 
  2373  0116                     	;# 
  2374  0117                     	;# 
  2375  0118                     	;# 
  2376  0119                     	;# 
  2377  018C                     	;# 
  2378  018E                     	;# 
  2379  0191                     	;# 
  2380  0191                     	;# 
  2381  0192                     	;# 
  2382  0193                     	;# 
  2383  0193                     	;# 
  2384  0194                     	;# 
  2385  0195                     	;# 
  2386  0196                     	;# 
  2387  0197                     	;# 
  2388  0199                     	;# 
  2389  019A                     	;# 
  2390  019B                     	;# 
  2391  019B                     	;# 
  2392  019C                     	;# 
  2393  019D                     	;# 
  2394  019E                     	;# 
  2395  019F                     	;# 
  2396  020C                     	;# 
  2397  020E                     	;# 
  2398  028C                     	;# 
  2399  028E                     	;# 
  2400  030C                     	;# 
  2401  030E                     	;# 
  2402  038C                     	;# 
  2403  038E                     	;# 
  2404  0391                     	;# 
  2405  0392                     	;# 
  2406  0393                     	;# 
  2407  0397                     	;# 
  2408  0398                     	;# 
  2409  0399                     	;# 
  2410  0691                     	;# 
  2411  0692                     	;# 
  2412  0693                     	;# 
  2413  0694                     	;# 
  2414  0695                     	;# 
  2415  0D8E                     	;# 
  2416  0D8F                     	;# 
  2417  0D90                     	;# 
  2418  0D91                     	;# 
  2419  0D91                     	;# 
  2420  0D92                     	;# 
  2421  0D93                     	;# 
  2422  0D93                     	;# 
  2423  0D94                     	;# 
  2424  0D95                     	;# 
  2425  0D95                     	;# 
  2426  0D96                     	;# 
  2427  0D97                     	;# 
  2428  0D97                     	;# 
  2429  0D98                     	;# 
  2430  0D99                     	;# 
  2431  0D99                     	;# 
  2432  0D9A                     	;# 
  2433  0D9B                     	;# 
  2434  0D9C                     	;# 
  2435  0D9C                     	;# 
  2436  0D9D                     	;# 
  2437  0D9D                     	;# 
  2438  0D9E                     	;# 
  2439  0D9F                     	;# 
  2440  0DA0                     	;# 
  2441  0DA1                     	;# 
  2442  0DA1                     	;# 
  2443  0DA2                     	;# 
  2444  0DA3                     	;# 
  2445  0DA3                     	;# 
  2446  0DA4                     	;# 
  2447  0DA5                     	;# 
  2448  0DA5                     	;# 
  2449  0DA6                     	;# 
  2450  0DA7                     	;# 
  2451  0DA7                     	;# 
  2452  0DA8                     	;# 
  2453  0DA9                     	;# 
  2454  0DA9                     	;# 
  2455  0DAA                     	;# 
  2456  0DAB                     	;# 
  2457  0DAC                     	;# 
  2458  0DAC                     	;# 
  2459  0DAD                     	;# 
  2460  0DAD                     	;# 
  2461  0DAE                     	;# 
  2462  0DAF                     	;# 
  2463  0DB0                     	;# 
  2464  0DB1                     	;# 
  2465  0DB1                     	;# 
  2466  0DB2                     	;# 
  2467  0DB3                     	;# 
  2468  0DB3                     	;# 
  2469  0DB4                     	;# 
  2470  0DB5                     	;# 
  2471  0DB5                     	;# 
  2472  0DB6                     	;# 
  2473  0DB7                     	;# 
  2474  0DB7                     	;# 
  2475  0DB8                     	;# 
  2476  0DB9                     	;# 
  2477  0DB9                     	;# 
  2478  0DBA                     	;# 
  2479  0DBB                     	;# 
  2480  0DBC                     	;# 
  2481  0DBC                     	;# 
  2482  0DBD                     	;# 
  2483  0DBD                     	;# 
  2484  0DBE                     	;# 
  2485  0DBF                     	;# 
  2486  0DC0                     	;# 
  2487  0DC1                     	;# 
  2488  0DC1                     	;# 
  2489  0DC2                     	;# 
  2490  0DC3                     	;# 
  2491  0DC3                     	;# 
  2492  0DC4                     	;# 
  2493  0DC5                     	;# 
  2494  0DC5                     	;# 
  2495  0DC6                     	;# 
  2496  0DC7                     	;# 
  2497  0DC7                     	;# 
  2498  0DC8                     	;# 
  2499  0DC9                     	;# 
  2500  0DC9                     	;# 
  2501  0DCA                     	;# 
  2502  0DCB                     	;# 
  2503  0DCC                     	;# 
  2504  0DCC                     	;# 
  2505  0DCD                     	;# 
  2506  0DCD                     	;# 
  2507  0DCE                     	;# 
  2508  0DCF                     	;# 
  2509  0DD0                     	;# 
  2510  0E0F                     	;# 
  2511  0E10                     	;# 
  2512  0E11                     	;# 
  2513  0E12                     	;# 
  2514  0E13                     	;# 
  2515  0E14                     	;# 
  2516  0E15                     	;# 
  2517  0E16                     	;# 
  2518  0E17                     	;# 
  2519  0E90                     	;# 
  2520  0E91                     	;# 
  2521  0E92                     	;# 
  2522  0E94                     	;# 
  2523  0E95                     	;# 
  2524  0EA0                     	;# 
  2525  0EA1                     	;# 
  2526  0EA2                     	;# 
  2527  0EA3                     	;# 
  2528  0EA4                     	;# 
  2529  0EA5                     	;# 
  2530  0FE4                     	;# 
  2531  0FE5                     	;# 
  2532  0FE6                     	;# 
  2533  0FE7                     	;# 
  2534  0FE8                     	;# 
  2535  0FE8                     	;# 
  2536  0FE9                     	;# 
  2537  0FEA                     	;# 
  2538  0FEA                     	;# 
  2539  0FEB                     	;# 
  2540  0FED                     	;# 
  2541  0FEE                     	;# 
  2542  0FEE                     	;# 
  2543  0FEF                     	;# 
  2544  0FFF                     	;# 
  2545  0000                     	;# 
  2546  0001                     	;# 
  2547  0002                     	;# 
  2548  0003                     	;# 
  2549  0004                     	;# 
  2550  0005                     	;# 
  2551  0006                     	;# 
  2552  0007                     	;# 
  2553  0008                     	;# 
  2554  0009                     	;# 
  2555  000A                     	;# 
  2556  000B                     	;# 
  2557  000C                     	;# 
  2558  000E                     	;# 
  2559  0011                     	;# 
  2560  0012                     	;# 
  2561  0013                     	;# 
  2562  0015                     	;# 
  2563  0016                     	;# 
  2564  0016                     	;# 
  2565  0017                     	;# 
  2566  0018                     	;# 
  2567  0019                     	;# 
  2568  001A                     	;# 
  2569  001B                     	;# 
  2570  001C                     	;# 
  2571  008C                     	;# 
  2572  008E                     	;# 
  2573  0091                     	;# 
  2574  0092                     	;# 
  2575  0093                     	;# 
  2576  0095                     	;# 
  2577  0096                     	;# 
  2578  0097                     	;# 
  2579  0098                     	;# 
  2580  0099                     	;# 
  2581  009A                     	;# 
  2582  009B                     	;# 
  2583  009B                     	;# 
  2584  009C                     	;# 
  2585  009D                     	;# 
  2586  009E                     	;# 
  2587  009F                     	;# 
  2588  010C                     	;# 
  2589  010E                     	;# 
  2590  0111                     	;# 
  2591  0112                     	;# 
  2592  0113                     	;# 
  2593  0114                     	;# 
  2594  0115                     	;# 
  2595  0116                     	;# 
  2596  0117                     	;# 
  2597  0118                     	;# 
  2598  0119                     	;# 
  2599  018C                     	;# 
  2600  018E                     	;# 
  2601  0191                     	;# 
  2602  0191                     	;# 
  2603  0192                     	;# 
  2604  0193                     	;# 
  2605  0193                     	;# 
  2606  0194                     	;# 
  2607  0195                     	;# 
  2608  0196                     	;# 
  2609  0197                     	;# 
  2610  0199                     	;# 
  2611  019A                     	;# 
  2612  019B                     	;# 
  2613  019B                     	;# 
  2614  019C                     	;# 
  2615  019D                     	;# 
  2616  019E                     	;# 
  2617  019F                     	;# 
  2618  020C                     	;# 
  2619  020E                     	;# 
  2620  028C                     	;# 
  2621  028E                     	;# 
  2622  030C                     	;# 
  2623  030E                     	;# 
  2624  038C                     	;# 
  2625  038E                     	;# 
  2626  0391                     	;# 
  2627  0392                     	;# 
  2628  0393                     	;# 
  2629  0397                     	;# 
  2630  0398                     	;# 
  2631  0399                     	;# 
  2632  0691                     	;# 
  2633  0692                     	;# 
  2634  0693                     	;# 
  2635  0694                     	;# 
  2636  0695                     	;# 
  2637  0D8E                     	;# 
  2638  0D8F                     	;# 
  2639  0D90                     	;# 
  2640  0D91                     	;# 
  2641  0D91                     	;# 
  2642  0D92                     	;# 
  2643  0D93                     	;# 
  2644  0D93                     	;# 
  2645  0D94                     	;# 
  2646  0D95                     	;# 
  2647  0D95                     	;# 
  2648  0D96                     	;# 
  2649  0D97                     	;# 
  2650  0D97                     	;# 
  2651  0D98                     	;# 
  2652  0D99                     	;# 
  2653  0D99                     	;# 
  2654  0D9A                     	;# 
  2655  0D9B                     	;# 
  2656  0D9C                     	;# 
  2657  0D9C                     	;# 
  2658  0D9D                     	;# 
  2659  0D9D                     	;# 
  2660  0D9E                     	;# 
  2661  0D9F                     	;# 
  2662  0DA0                     	;# 
  2663  0DA1                     	;# 
  2664  0DA1                     	;# 
  2665  0DA2                     	;# 
  2666  0DA3                     	;# 
  2667  0DA3                     	;# 
  2668  0DA4                     	;# 
  2669  0DA5                     	;# 
  2670  0DA5                     	;# 
  2671  0DA6                     	;# 
  2672  0DA7                     	;# 
  2673  0DA7                     	;# 
  2674  0DA8                     	;# 
  2675  0DA9                     	;# 
  2676  0DA9                     	;# 
  2677  0DAA                     	;# 
  2678  0DAB                     	;# 
  2679  0DAC                     	;# 
  2680  0DAC                     	;# 
  2681  0DAD                     	;# 
  2682  0DAD                     	;# 
  2683  0DAE                     	;# 
  2684  0DAF                     	;# 
  2685  0DB0                     	;# 
  2686  0DB1                     	;# 
  2687  0DB1                     	;# 
  2688  0DB2                     	;# 
  2689  0DB3                     	;# 
  2690  0DB3                     	;# 
  2691  0DB4                     	;# 
  2692  0DB5                     	;# 
  2693  0DB5                     	;# 
  2694  0DB6                     	;# 
  2695  0DB7                     	;# 
  2696  0DB7                     	;# 
  2697  0DB8                     	;# 
  2698  0DB9                     	;# 
  2699  0DB9                     	;# 
  2700  0DBA                     	;# 
  2701  0DBB                     	;# 
  2702  0DBC                     	;# 
  2703  0DBC                     	;# 
  2704  0DBD                     	;# 
  2705  0DBD                     	;# 
  2706  0DBE                     	;# 
  2707  0DBF                     	;# 
  2708  0DC0                     	;# 
  2709  0DC1                     	;# 
  2710  0DC1                     	;# 
  2711  0DC2                     	;# 
  2712  0DC3                     	;# 
  2713  0DC3                     	;# 
  2714  0DC4                     	;# 
  2715  0DC5                     	;# 
  2716  0DC5                     	;# 
  2717  0DC6                     	;# 
  2718  0DC7                     	;# 
  2719  0DC7                     	;# 
  2720  0DC8                     	;# 
  2721  0DC9                     	;# 
  2722  0DC9                     	;# 
  2723  0DCA                     	;# 
  2724  0DCB                     	;# 
  2725  0DCC                     	;# 
  2726  0DCC                     	;# 
  2727  0DCD                     	;# 
  2728  0DCD                     	;# 
  2729  0DCE                     	;# 
  2730  0DCF                     	;# 
  2731  0DD0                     	;# 
  2732  0E0F                     	;# 
  2733  0E10                     	;# 
  2734  0E11                     	;# 
  2735  0E12                     	;# 
  2736  0E13                     	;# 
  2737  0E14                     	;# 
  2738  0E15                     	;# 
  2739  0E16                     	;# 
  2740  0E17                     	;# 
  2741  0E90                     	;# 
  2742  0E91                     	;# 
  2743  0E92                     	;# 
  2744  0E94                     	;# 
  2745  0E95                     	;# 
  2746  0EA0                     	;# 
  2747  0EA1                     	;# 
  2748  0EA2                     	;# 
  2749  0EA3                     	;# 
  2750  0EA4                     	;# 
  2751  0EA5                     	;# 
  2752  0FE4                     	;# 
  2753  0FE5                     	;# 
  2754  0FE6                     	;# 
  2755  0FE7                     	;# 
  2756  0FE8                     	;# 
  2757  0FE8                     	;# 
  2758  0FE9                     	;# 
  2759  0FEA                     	;# 
  2760  0FEA                     	;# 
  2761  0FEB                     	;# 
  2762  0FED                     	;# 
  2763  0FEE                     	;# 
  2764  0FEE                     	;# 
  2765  0FEF                     	;# 
  2766  0FFF                     	;# 
  2767  0000                     	;# 
  2768  0001                     	;# 
  2769  0002                     	;# 
  2770  0003                     	;# 
  2771  0004                     	;# 
  2772  0005                     	;# 
  2773  0006                     	;# 
  2774  0007                     	;# 
  2775  0008                     	;# 
  2776  0009                     	;# 
  2777  000A                     	;# 
  2778  000B                     	;# 
  2779  000C                     	;# 
  2780  000E                     	;# 
  2781  0011                     	;# 
  2782  0012                     	;# 
  2783  0013                     	;# 
  2784  0015                     	;# 
  2785  0016                     	;# 
  2786  0016                     	;# 
  2787  0017                     	;# 
  2788  0018                     	;# 
  2789  0019                     	;# 
  2790  001A                     	;# 
  2791  001B                     	;# 
  2792  001C                     	;# 
  2793  008C                     	;# 
  2794  008E                     	;# 
  2795  0091                     	;# 
  2796  0092                     	;# 
  2797  0093                     	;# 
  2798  0095                     	;# 
  2799  0096                     	;# 
  2800  0097                     	;# 
  2801  0098                     	;# 
  2802  0099                     	;# 
  2803  009A                     	;# 
  2804  009B                     	;# 
  2805  009B                     	;# 
  2806  009C                     	;# 
  2807  009D                     	;# 
  2808  009E                     	;# 
  2809  009F                     	;# 
  2810  010C                     	;# 
  2811  010E                     	;# 
  2812  0111                     	;# 
  2813  0112                     	;# 
  2814  0113                     	;# 
  2815  0114                     	;# 
  2816  0115                     	;# 
  2817  0116                     	;# 
  2818  0117                     	;# 
  2819  0118                     	;# 
  2820  0119                     	;# 
  2821  018C                     	;# 
  2822  018E                     	;# 
  2823  0191                     	;# 
  2824  0191                     	;# 
  2825  0192                     	;# 
  2826  0193                     	;# 
  2827  0193                     	;# 
  2828  0194                     	;# 
  2829  0195                     	;# 
  2830  0196                     	;# 
  2831  0197                     	;# 
  2832  0199                     	;# 
  2833  019A                     	;# 
  2834  019B                     	;# 
  2835  019B                     	;# 
  2836  019C                     	;# 
  2837  019D                     	;# 
  2838  019E                     	;# 
  2839  019F                     	;# 
  2840  020C                     	;# 
  2841  020E                     	;# 
  2842  028C                     	;# 
  2843  028E                     	;# 
  2844  030C                     	;# 
  2845  030E                     	;# 
  2846  038C                     	;# 
  2847  038E                     	;# 
  2848  0391                     	;# 
  2849  0392                     	;# 
  2850  0393                     	;# 
  2851  0397                     	;# 
  2852  0398                     	;# 
  2853  0399                     	;# 
  2854  0691                     	;# 
  2855  0692                     	;# 
  2856  0693                     	;# 
  2857  0694                     	;# 
  2858  0695                     	;# 
  2859  0D8E                     	;# 
  2860  0D8F                     	;# 
  2861  0D90                     	;# 
  2862  0D91                     	;# 
  2863  0D91                     	;# 
  2864  0D92                     	;# 
  2865  0D93                     	;# 
  2866  0D93                     	;# 
  2867  0D94                     	;# 
  2868  0D95                     	;# 
  2869  0D95                     	;# 
  2870  0D96                     	;# 
  2871  0D97                     	;# 
  2872  0D97                     	;# 
  2873  0D98                     	;# 
  2874  0D99                     	;# 
  2875  0D99                     	;# 
  2876  0D9A                     	;# 
  2877  0D9B                     	;# 
  2878  0D9C                     	;# 
  2879  0D9C                     	;# 
  2880  0D9D                     	;# 
  2881  0D9D                     	;# 
  2882  0D9E                     	;# 
  2883  0D9F                     	;# 
  2884  0DA0                     	;# 
  2885  0DA1                     	;# 
  2886  0DA1                     	;# 
  2887  0DA2                     	;# 
  2888  0DA3                     	;# 
  2889  0DA3                     	;# 
  2890  0DA4                     	;# 
  2891  0DA5                     	;# 
  2892  0DA5                     	;# 
  2893  0DA6                     	;# 
  2894  0DA7                     	;# 
  2895  0DA7                     	;# 
  2896  0DA8                     	;# 
  2897  0DA9                     	;# 
  2898  0DA9                     	;# 
  2899  0DAA                     	;# 
  2900  0DAB                     	;# 
  2901  0DAC                     	;# 
  2902  0DAC                     	;# 
  2903  0DAD                     	;# 
  2904  0DAD                     	;# 
  2905  0DAE                     	;# 
  2906  0DAF                     	;# 
  2907  0DB0                     	;# 
  2908  0DB1                     	;# 
  2909  0DB1                     	;# 
  2910  0DB2                     	;# 
  2911  0DB3                     	;# 
  2912  0DB3                     	;# 
  2913  0DB4                     	;# 
  2914  0DB5                     	;# 
  2915  0DB5                     	;# 
  2916  0DB6                     	;# 
  2917  0DB7                     	;# 
  2918  0DB7                     	;# 
  2919  0DB8                     	;# 
  2920  0DB9                     	;# 
  2921  0DB9                     	;# 
  2922  0DBA                     	;# 
  2923  0DBB                     	;# 
  2924  0DBC                     	;# 
  2925  0DBC                     	;# 
  2926  0DBD                     	;# 
  2927  0DBD                     	;# 
  2928  0DBE                     	;# 
  2929  0DBF                     	;# 
  2930  0DC0                     	;# 
  2931  0DC1                     	;# 
  2932  0DC1                     	;# 
  2933  0DC2                     	;# 
  2934  0DC3                     	;# 
  2935  0DC3                     	;# 
  2936  0DC4                     	;# 
  2937  0DC5                     	;# 
  2938  0DC5                     	;# 
  2939  0DC6                     	;# 
  2940  0DC7                     	;# 
  2941  0DC7                     	;# 
  2942  0DC8                     	;# 
  2943  0DC9                     	;# 
  2944  0DC9                     	;# 
  2945  0DCA                     	;# 
  2946  0DCB                     	;# 
  2947  0DCC                     	;# 
  2948  0DCC                     	;# 
  2949  0DCD                     	;# 
  2950  0DCD                     	;# 
  2951  0DCE                     	;# 
  2952  0DCF                     	;# 
  2953  0DD0                     	;# 
  2954  0E0F                     	;# 
  2955  0E10                     	;# 
  2956  0E11                     	;# 
  2957  0E12                     	;# 
  2958  0E13                     	;# 
  2959  0E14                     	;# 
  2960  0E15                     	;# 
  2961  0E16                     	;# 
  2962  0E17                     	;# 
  2963  0E90                     	;# 
  2964  0E91                     	;# 
  2965  0E92                     	;# 
  2966  0E94                     	;# 
  2967  0E95                     	;# 
  2968  0EA0                     	;# 
  2969  0EA1                     	;# 
  2970  0EA2                     	;# 
  2971  0EA3                     	;# 
  2972  0EA4                     	;# 
  2973  0EA5                     	;# 
  2974  0FE4                     	;# 
  2975  0FE5                     	;# 
  2976  0FE6                     	;# 
  2977  0FE7                     	;# 
  2978  0FE8                     	;# 
  2979  0FE8                     	;# 
  2980  0FE9                     	;# 
  2981  0FEA                     	;# 
  2982  0FEA                     	;# 
  2983  0FEB                     	;# 
  2984  0FED                     	;# 
  2985  0FEE                     	;# 
  2986  0FEE                     	;# 
  2987  0FEF                     	;# 
  2988  0FFF                     	;# 
  2989  0000                     	;# 
  2990  0001                     	;# 
  2991  0002                     	;# 
  2992  0003                     	;# 
  2993  0004                     	;# 
  2994  0005                     	;# 
  2995  0006                     	;# 
  2996  0007                     	;# 
  2997  0008                     	;# 
  2998  0009                     	;# 
  2999  000A                     	;# 
  3000  000B                     	;# 
  3001  000C                     	;# 
  3002  000E                     	;# 
  3003  0011                     	;# 
  3004  0012                     	;# 
  3005  0013                     	;# 
  3006  0015                     	;# 
  3007  0016                     	;# 
  3008  0016                     	;# 
  3009  0017                     	;# 
  3010  0018                     	;# 
  3011  0019                     	;# 
  3012  001A                     	;# 
  3013  001B                     	;# 
  3014  001C                     	;# 
  3015  008C                     	;# 
  3016  008E                     	;# 
  3017  0091                     	;# 
  3018  0092                     	;# 
  3019  0093                     	;# 
  3020  0095                     	;# 
  3021  0096                     	;# 
  3022  0097                     	;# 
  3023  0098                     	;# 
  3024  0099                     	;# 
  3025  009A                     	;# 
  3026  009B                     	;# 
  3027  009B                     	;# 
  3028  009C                     	;# 
  3029  009D                     	;# 
  3030  009E                     	;# 
  3031  009F                     	;# 
  3032  010C                     	;# 
  3033  010E                     	;# 
  3034  0111                     	;# 
  3035  0112                     	;# 
  3036  0113                     	;# 
  3037  0114                     	;# 
  3038  0115                     	;# 
  3039  0116                     	;# 
  3040  0117                     	;# 
  3041  0118                     	;# 
  3042  0119                     	;# 
  3043  018C                     	;# 
  3044  018E                     	;# 
  3045  0191                     	;# 
  3046  0191                     	;# 
  3047  0192                     	;# 
  3048  0193                     	;# 
  3049  0193                     	;# 
  3050  0194                     	;# 
  3051  0195                     	;# 
  3052  0196                     	;# 
  3053  0197                     	;# 
  3054  0199                     	;# 
  3055  019A                     	;# 
  3056  019B                     	;# 
  3057  019B                     	;# 
  3058  019C                     	;# 
  3059  019D                     	;# 
  3060  019E                     	;# 
  3061  019F                     	;# 
  3062  020C                     	;# 
  3063  020E                     	;# 
  3064  028C                     	;# 
  3065  028E                     	;# 
  3066  030C                     	;# 
  3067  030E                     	;# 
  3068  038C                     	;# 
  3069  038E                     	;# 
  3070  0391                     	;# 
  3071  0392                     	;# 
  3072  0393                     	;# 
  3073  0397                     	;# 
  3074  0398                     	;# 
  3075  0399                     	;# 
  3076  0691                     	;# 
  3077  0692                     	;# 
  3078  0693                     	;# 
  3079  0694                     	;# 
  3080  0695                     	;# 
  3081  0D8E                     	;# 
  3082  0D8F                     	;# 
  3083  0D90                     	;# 
  3084  0D91                     	;# 
  3085  0D91                     	;# 
  3086  0D92                     	;# 
  3087  0D93                     	;# 
  3088  0D93                     	;# 
  3089  0D94                     	;# 
  3090  0D95                     	;# 
  3091  0D95                     	;# 
  3092  0D96                     	;# 
  3093  0D97                     	;# 
  3094  0D97                     	;# 
  3095  0D98                     	;# 
  3096  0D99                     	;# 
  3097  0D99                     	;# 
  3098  0D9A                     	;# 
  3099  0D9B                     	;# 
  3100  0D9C                     	;# 
  3101  0D9C                     	;# 
  3102  0D9D                     	;# 
  3103  0D9D                     	;# 
  3104  0D9E                     	;# 
  3105  0D9F                     	;# 
  3106  0DA0                     	;# 
  3107  0DA1                     	;# 
  3108  0DA1                     	;# 
  3109  0DA2                     	;# 
  3110  0DA3                     	;# 
  3111  0DA3                     	;# 
  3112  0DA4                     	;# 
  3113  0DA5                     	;# 
  3114  0DA5                     	;# 
  3115  0DA6                     	;# 
  3116  0DA7                     	;# 
  3117  0DA7                     	;# 
  3118  0DA8                     	;# 
  3119  0DA9                     	;# 
  3120  0DA9                     	;# 
  3121  0DAA                     	;# 
  3122  0DAB                     	;# 
  3123  0DAC                     	;# 
  3124  0DAC                     	;# 
  3125  0DAD                     	;# 
  3126  0DAD                     	;# 
  3127  0DAE                     	;# 
  3128  0DAF                     	;# 
  3129  0DB0                     	;# 
  3130  0DB1                     	;# 
  3131  0DB1                     	;# 
  3132  0DB2                     	;# 
  3133  0DB3                     	;# 
  3134  0DB3                     	;# 
  3135  0DB4                     	;# 
  3136  0DB5                     	;# 
  3137  0DB5                     	;# 
  3138  0DB6                     	;# 
  3139  0DB7                     	;# 
  3140  0DB7                     	;# 
  3141  0DB8                     	;# 
  3142  0DB9                     	;# 
  3143  0DB9                     	;# 
  3144  0DBA                     	;# 
  3145  0DBB                     	;# 
  3146  0DBC                     	;# 
  3147  0DBC                     	;# 
  3148  0DBD                     	;# 
  3149  0DBD                     	;# 
  3150  0DBE                     	;# 
  3151  0DBF                     	;# 
  3152  0DC0                     	;# 
  3153  0DC1                     	;# 
  3154  0DC1                     	;# 
  3155  0DC2                     	;# 
  3156  0DC3                     	;# 
  3157  0DC3                     	;# 
  3158  0DC4                     	;# 
  3159  0DC5                     	;# 
  3160  0DC5                     	;# 
  3161  0DC6                     	;# 
  3162  0DC7                     	;# 
  3163  0DC7                     	;# 
  3164  0DC8                     	;# 
  3165  0DC9                     	;# 
  3166  0DC9                     	;# 
  3167  0DCA                     	;# 
  3168  0DCB                     	;# 
  3169  0DCC                     	;# 
  3170  0DCC                     	;# 
  3171  0DCD                     	;# 
  3172  0DCD                     	;# 
  3173  0DCE                     	;# 
  3174  0DCF                     	;# 
  3175  0DD0                     	;# 
  3176  0E0F                     	;# 
  3177  0E10                     	;# 
  3178  0E11                     	;# 
  3179  0E12                     	;# 
  3180  0E13                     	;# 
  3181  0E14                     	;# 
  3182  0E15                     	;# 
  3183  0E16                     	;# 
  3184  0E17                     	;# 
  3185  0E90                     	;# 
  3186  0E91                     	;# 
  3187  0E92                     	;# 
  3188  0E94                     	;# 
  3189  0E95                     	;# 
  3190  0EA0                     	;# 
  3191  0EA1                     	;# 
  3192  0EA2                     	;# 
  3193  0EA3                     	;# 
  3194  0EA4                     	;# 
  3195  0EA5                     	;# 
  3196  0FE4                     	;# 
  3197  0FE5                     	;# 
  3198  0FE6                     	;# 
  3199  0FE7                     	;# 
  3200  0FE8                     	;# 
  3201  0FE8                     	;# 
  3202  0FE9                     	;# 
  3203  0FEA                     	;# 
  3204  0FEA                     	;# 
  3205  0FEB                     	;# 
  3206  0FED                     	;# 
  3207  0FEE                     	;# 
  3208  0FEE                     	;# 
  3209  0FEF                     	;# 
  3210  0FFF                     	;# 
  3211  0000                     	;# 
  3212  0001                     	;# 
  3213  0002                     	;# 
  3214  0003                     	;# 
  3215  0004                     	;# 
  3216  0005                     	;# 
  3217  0006                     	;# 
  3218  0007                     	;# 
  3219  0008                     	;# 
  3220  0009                     	;# 
  3221  000A                     	;# 
  3222  000B                     	;# 
  3223  000C                     	;# 
  3224  000E                     	;# 
  3225  0011                     	;# 
  3226  0012                     	;# 
  3227  0013                     	;# 
  3228  0015                     	;# 
  3229  0016                     	;# 
  3230  0016                     	;# 
  3231  0017                     	;# 
  3232  0018                     	;# 
  3233  0019                     	;# 
  3234  001A                     	;# 
  3235  001B                     	;# 
  3236  001C                     	;# 
  3237  008C                     	;# 
  3238  008E                     	;# 
  3239  0091                     	;# 
  3240  0092                     	;# 
  3241  0093                     	;# 
  3242  0095                     	;# 
  3243  0096                     	;# 
  3244  0097                     	;# 
  3245  0098                     	;# 
  3246  0099                     	;# 
  3247  009A                     	;# 
  3248  009B                     	;# 
  3249  009B                     	;# 
  3250  009C                     	;# 
  3251  009D                     	;# 
  3252  009E                     	;# 
  3253  009F                     	;# 
  3254  010C                     	;# 
  3255  010E                     	;# 
  3256  0111                     	;# 
  3257  0112                     	;# 
  3258  0113                     	;# 
  3259  0114                     	;# 
  3260  0115                     	;# 
  3261  0116                     	;# 
  3262  0117                     	;# 
  3263  0118                     	;# 
  3264  0119                     	;# 
  3265  018C                     	;# 
  3266  018E                     	;# 
  3267  0191                     	;# 
  3268  0191                     	;# 
  3269  0192                     	;# 
  3270  0193                     	;# 
  3271  0193                     	;# 
  3272  0194                     	;# 
  3273  0195                     	;# 
  3274  0196                     	;# 
  3275  0197                     	;# 
  3276  0199                     	;# 
  3277  019A                     	;# 
  3278  019B                     	;# 
  3279  019B                     	;# 
  3280  019C                     	;# 
  3281  019D                     	;# 
  3282  019E                     	;# 
  3283  019F                     	;# 
  3284  020C                     	;# 
  3285  020E                     	;# 
  3286  028C                     	;# 
  3287  028E                     	;# 
  3288  030C                     	;# 
  3289  030E                     	;# 
  3290  038C                     	;# 
  3291  038E                     	;# 
  3292  0391                     	;# 
  3293  0392                     	;# 
  3294  0393                     	;# 
  3295  0397                     	;# 
  3296  0398                     	;# 
  3297  0399                     	;# 
  3298  0691                     	;# 
  3299  0692                     	;# 
  3300  0693                     	;# 
  3301  0694                     	;# 
  3302  0695                     	;# 
  3303  0D8E                     	;# 
  3304  0D8F                     	;# 
  3305  0D90                     	;# 
  3306  0D91                     	;# 
  3307  0D91                     	;# 
  3308  0D92                     	;# 
  3309  0D93                     	;# 
  3310  0D93                     	;# 
  3311  0D94                     	;# 
  3312  0D95                     	;# 
  3313  0D95                     	;# 
  3314  0D96                     	;# 
  3315  0D97                     	;# 
  3316  0D97                     	;# 
  3317  0D98                     	;# 
  3318  0D99                     	;# 
  3319  0D99                     	;# 
  3320  0D9A                     	;# 
  3321  0D9B                     	;# 
  3322  0D9C                     	;# 
  3323  0D9C                     	;# 
  3324  0D9D                     	;# 
  3325  0D9D                     	;# 
  3326  0D9E                     	;# 
  3327  0D9F                     	;# 
  3328  0DA0                     	;# 
  3329  0DA1                     	;# 
  3330  0DA1                     	;# 
  3331  0DA2                     	;# 
  3332  0DA3                     	;# 
  3333  0DA3                     	;# 
  3334  0DA4                     	;# 
  3335  0DA5                     	;# 
  3336  0DA5                     	;# 
  3337  0DA6                     	;# 
  3338  0DA7                     	;# 
  3339  0DA7                     	;# 
  3340  0DA8                     	;# 
  3341  0DA9                     	;# 
  3342  0DA9                     	;# 
  3343  0DAA                     	;# 
  3344  0DAB                     	;# 
  3345  0DAC                     	;# 
  3346  0DAC                     	;# 
  3347  0DAD                     	;# 
  3348  0DAD                     	;# 
  3349  0DAE                     	;# 
  3350  0DAF                     	;# 
  3351  0DB0                     	;# 
  3352  0DB1                     	;# 
  3353  0DB1                     	;# 
  3354  0DB2                     	;# 
  3355  0DB3                     	;# 
  3356  0DB3                     	;# 
  3357  0DB4                     	;# 
  3358  0DB5                     	;# 
  3359  0DB5                     	;# 
  3360  0DB6                     	;# 
  3361  0DB7                     	;# 
  3362  0DB7                     	;# 
  3363  0DB8                     	;# 
  3364  0DB9                     	;# 
  3365  0DB9                     	;# 
  3366  0DBA                     	;# 
  3367  0DBB                     	;# 
  3368  0DBC                     	;# 
  3369  0DBC                     	;# 
  3370  0DBD                     	;# 
  3371  0DBD                     	;# 
  3372  0DBE                     	;# 
  3373  0DBF                     	;# 
  3374  0DC0                     	;# 
  3375  0DC1                     	;# 
  3376  0DC1                     	;# 
  3377  0DC2                     	;# 
  3378  0DC3                     	;# 
  3379  0DC3                     	;# 
  3380  0DC4                     	;# 
  3381  0DC5                     	;# 
  3382  0DC5                     	;# 
  3383  0DC6                     	;# 
  3384  0DC7                     	;# 
  3385  0DC7                     	;# 
  3386  0DC8                     	;# 
  3387  0DC9                     	;# 
  3388  0DC9                     	;# 
  3389  0DCA                     	;# 
  3390  0DCB                     	;# 
  3391  0DCC                     	;# 
  3392  0DCC                     	;# 
  3393  0DCD                     	;# 
  3394  0DCD                     	;# 
  3395  0DCE                     	;# 
  3396  0DCF                     	;# 
  3397  0DD0                     	;# 
  3398  0E0F                     	;# 
  3399  0E10                     	;# 
  3400  0E11                     	;# 
  3401  0E12                     	;# 
  3402  0E13                     	;# 
  3403  0E14                     	;# 
  3404  0E15                     	;# 
  3405  0E16                     	;# 
  3406  0E17                     	;# 
  3407  0E90                     	;# 
  3408  0E91                     	;# 
  3409  0E92                     	;# 
  3410  0E94                     	;# 
  3411  0E95                     	;# 
  3412  0EA0                     	;# 
  3413  0EA1                     	;# 
  3414  0EA2                     	;# 
  3415  0EA3                     	;# 
  3416  0EA4                     	;# 
  3417  0EA5                     	;# 
  3418  0FE4                     	;# 
  3419  0FE5                     	;# 
  3420  0FE6                     	;# 
  3421  0FE7                     	;# 
  3422  0FE8                     	;# 
  3423  0FE8                     	;# 
  3424  0FE9                     	;# 
  3425  0FEA                     	;# 
  3426  0FEA                     	;# 
  3427  0FEB                     	;# 
  3428  0FED                     	;# 
  3429  0FEE                     	;# 
  3430  0FEE                     	;# 
  3431  0FEF                     	;# 
  3432  0FFF                     	;# 
  3433  0000                     	;# 
  3434  0001                     	;# 
  3435  0002                     	;# 
  3436  0003                     	;# 
  3437  0004                     	;# 
  3438  0005                     	;# 
  3439  0006                     	;# 
  3440  0007                     	;# 
  3441  0008                     	;# 
  3442  0009                     	;# 
  3443  000A                     	;# 
  3444  000B                     	;# 
  3445  000C                     	;# 
  3446  000E                     	;# 
  3447  0011                     	;# 
  3448  0012                     	;# 
  3449  0013                     	;# 
  3450  0015                     	;# 
  3451  0016                     	;# 
  3452  0016                     	;# 
  3453  0017                     	;# 
  3454  0018                     	;# 
  3455  0019                     	;# 
  3456  001A                     	;# 
  3457  001B                     	;# 
  3458  001C                     	;# 
  3459  008C                     	;# 
  3460  008E                     	;# 
  3461  0091                     	;# 
  3462  0092                     	;# 
  3463  0093                     	;# 
  3464  0095                     	;# 
  3465  0096                     	;# 
  3466  0097                     	;# 
  3467  0098                     	;# 
  3468  0099                     	;# 
  3469  009A                     	;# 
  3470  009B                     	;# 
  3471  009B                     	;# 
  3472  009C                     	;# 
  3473  009D                     	;# 
  3474  009E                     	;# 
  3475  009F                     	;# 
  3476  010C                     	;# 
  3477  010E                     	;# 
  3478  0111                     	;# 
  3479  0112                     	;# 
  3480  0113                     	;# 
  3481  0114                     	;# 
  3482  0115                     	;# 
  3483  0116                     	;# 
  3484  0117                     	;# 
  3485  0118                     	;# 
  3486  0119                     	;# 
  3487  018C                     	;# 
  3488  018E                     	;# 
  3489  0191                     	;# 
  3490  0191                     	;# 
  3491  0192                     	;# 
  3492  0193                     	;# 
  3493  0193                     	;# 
  3494  0194                     	;# 
  3495  0195                     	;# 
  3496  0196                     	;# 
  3497  0197                     	;# 
  3498  0199                     	;# 
  3499  019A                     	;# 
  3500  019B                     	;# 
  3501  019B                     	;# 
  3502  019C                     	;# 
  3503  019D                     	;# 
  3504  019E                     	;# 
  3505  019F                     	;# 
  3506  020C                     	;# 
  3507  020E                     	;# 
  3508  028C                     	;# 
  3509  028E                     	;# 
  3510  030C                     	;# 
  3511  030E                     	;# 
  3512  038C                     	;# 
  3513  038E                     	;# 
  3514  0391                     	;# 
  3515  0392                     	;# 
  3516  0393                     	;# 
  3517  0397                     	;# 
  3518  0398                     	;# 
  3519  0399                     	;# 
  3520  0691                     	;# 
  3521  0692                     	;# 
  3522  0693                     	;# 
  3523  0694                     	;# 
  3524  0695                     	;# 
  3525  0D8E                     	;# 
  3526  0D8F                     	;# 
  3527  0D90                     	;# 
  3528  0D91                     	;# 
  3529  0D91                     	;# 
  3530  0D92                     	;# 
  3531  0D93                     	;# 
  3532  0D93                     	;# 
  3533  0D94                     	;# 
  3534  0D95                     	;# 
  3535  0D95                     	;# 
  3536  0D96                     	;# 
  3537  0D97                     	;# 
  3538  0D97                     	;# 
  3539  0D98                     	;# 
  3540  0D99                     	;# 
  3541  0D99                     	;# 
  3542  0D9A                     	;# 
  3543  0D9B                     	;# 
  3544  0D9C                     	;# 
  3545  0D9C                     	;# 
  3546  0D9D                     	;# 
  3547  0D9D                     	;# 
  3548  0D9E                     	;# 
  3549  0D9F                     	;# 
  3550  0DA0                     	;# 
  3551  0DA1                     	;# 
  3552  0DA1                     	;# 
  3553  0DA2                     	;# 
  3554  0DA3                     	;# 
  3555  0DA3                     	;# 
  3556  0DA4                     	;# 
  3557  0DA5                     	;# 
  3558  0DA5                     	;# 
  3559  0DA6                     	;# 
  3560  0DA7                     	;# 
  3561  0DA7                     	;# 
  3562  0DA8                     	;# 
  3563  0DA9                     	;# 
  3564  0DA9                     	;# 
  3565  0DAA                     	;# 
  3566  0DAB                     	;# 
  3567  0DAC                     	;# 
  3568  0DAC                     	;# 
  3569  0DAD                     	;# 
  3570  0DAD                     	;# 
  3571  0DAE                     	;# 
  3572  0DAF                     	;# 
  3573  0DB0                     	;# 
  3574  0DB1                     	;# 
  3575  0DB1                     	;# 
  3576  0DB2                     	;# 
  3577  0DB3                     	;# 
  3578  0DB3                     	;# 
  3579  0DB4                     	;# 
  3580  0DB5                     	;# 
  3581  0DB5                     	;# 
  3582  0DB6                     	;# 
  3583  0DB7                     	;# 
  3584  0DB7                     	;# 
  3585  0DB8                     	;# 
  3586  0DB9                     	;# 
  3587  0DB9                     	;# 
  3588  0DBA                     	;# 
  3589  0DBB                     	;# 
  3590  0DBC                     	;# 
  3591  0DBC                     	;# 
  3592  0DBD                     	;# 
  3593  0DBD                     	;# 
  3594  0DBE                     	;# 
  3595  0DBF                     	;# 
  3596  0DC0                     	;# 
  3597  0DC1                     	;# 
  3598  0DC1                     	;# 
  3599  0DC2                     	;# 
  3600  0DC3                     	;# 
  3601  0DC3                     	;# 
  3602  0DC4                     	;# 
  3603  0DC5                     	;# 
  3604  0DC5                     	;# 
  3605  0DC6                     	;# 
  3606  0DC7                     	;# 
  3607  0DC7                     	;# 
  3608  0DC8                     	;# 
  3609  0DC9                     	;# 
  3610  0DC9                     	;# 
  3611  0DCA                     	;# 
  3612  0DCB                     	;# 
  3613  0DCC                     	;# 
  3614  0DCC                     	;# 
  3615  0DCD                     	;# 
  3616  0DCD                     	;# 
  3617  0DCE                     	;# 
  3618  0DCF                     	;# 
  3619  0DD0                     	;# 
  3620  0E0F                     	;# 
  3621  0E10                     	;# 
  3622  0E11                     	;# 
  3623  0E12                     	;# 
  3624  0E13                     	;# 
  3625  0E14                     	;# 
  3626  0E15                     	;# 
  3627  0E16                     	;# 
  3628  0E17                     	;# 
  3629  0E90                     	;# 
  3630  0E91                     	;# 
  3631  0E92                     	;# 
  3632  0E94                     	;# 
  3633  0E95                     	;# 
  3634  0EA0                     	;# 
  3635  0EA1                     	;# 
  3636  0EA2                     	;# 
  3637  0EA3                     	;# 
  3638  0EA4                     	;# 
  3639  0EA5                     	;# 
  3640  0FE4                     	;# 
  3641  0FE5                     	;# 
  3642  0FE6                     	;# 
  3643  0FE7                     	;# 
  3644  0FE8                     	;# 
  3645  0FE8                     	;# 
  3646  0FE9                     	;# 
  3647  0FEA                     	;# 
  3648  0FEA                     	;# 
  3649  0FEB                     	;# 
  3650  0FED                     	;# 
  3651  0FEE                     	;# 
  3652  0FEE                     	;# 
  3653  0FEF                     	;# 
  3654  0FFF                     	;# 
  3655  0000                     	;# 
  3656  0001                     	;# 
  3657  0002                     	;# 
  3658  0003                     	;# 
  3659  0004                     	;# 
  3660  0005                     	;# 
  3661  0006                     	;# 
  3662  0007                     	;# 
  3663  0008                     	;# 
  3664  0009                     	;# 
  3665  000A                     	;# 
  3666  000B                     	;# 
  3667  000C                     	;# 
  3668  000E                     	;# 
  3669  0011                     	;# 
  3670  0012                     	;# 
  3671  0013                     	;# 
  3672  0015                     	;# 
  3673  0016                     	;# 
  3674  0016                     	;# 
  3675  0017                     	;# 
  3676  0018                     	;# 
  3677  0019                     	;# 
  3678  001A                     	;# 
  3679  001B                     	;# 
  3680  001C                     	;# 
  3681  008C                     	;# 
  3682  008E                     	;# 
  3683  0091                     	;# 
  3684  0092                     	;# 
  3685  0093                     	;# 
  3686  0095                     	;# 
  3687  0096                     	;# 
  3688  0097                     	;# 
  3689  0098                     	;# 
  3690  0099                     	;# 
  3691  009A                     	;# 
  3692  009B                     	;# 
  3693  009B                     	;# 
  3694  009C                     	;# 
  3695  009D                     	;# 
  3696  009E                     	;# 
  3697  009F                     	;# 
  3698  010C                     	;# 
  3699  010E                     	;# 
  3700  0111                     	;# 
  3701  0112                     	;# 
  3702  0113                     	;# 
  3703  0114                     	;# 
  3704  0115                     	;# 
  3705  0116                     	;# 
  3706  0117                     	;# 
  3707  0118                     	;# 
  3708  0119                     	;# 
  3709  018C                     	;# 
  3710  018E                     	;# 
  3711  0191                     	;# 
  3712  0191                     	;# 
  3713  0192                     	;# 
  3714  0193                     	;# 
  3715  0193                     	;# 
  3716  0194                     	;# 
  3717  0195                     	;# 
  3718  0196                     	;# 
  3719  0197                     	;# 
  3720  0199                     	;# 
  3721  019A                     	;# 
  3722  019B                     	;# 
  3723  019B                     	;# 
  3724  019C                     	;# 
  3725  019D                     	;# 
  3726  019E                     	;# 
  3727  019F                     	;# 
  3728  020C                     	;# 
  3729  020E                     	;# 
  3730  028C                     	;# 
  3731  028E                     	;# 
  3732  030C                     	;# 
  3733  030E                     	;# 
  3734  038C                     	;# 
  3735  038E                     	;# 
  3736  0391                     	;# 
  3737  0392                     	;# 
  3738  0393                     	;# 
  3739  0397                     	;# 
  3740  0398                     	;# 
  3741  0399                     	;# 
  3742  0691                     	;# 
  3743  0692                     	;# 
  3744  0693                     	;# 
  3745  0694                     	;# 
  3746  0695                     	;# 
  3747  0D8E                     	;# 
  3748  0D8F                     	;# 
  3749  0D90                     	;# 
  3750  0D91                     	;# 
  3751  0D91                     	;# 
  3752  0D92                     	;# 
  3753  0D93                     	;# 
  3754  0D93                     	;# 
  3755  0D94                     	;# 
  3756  0D95                     	;# 
  3757  0D95                     	;# 
  3758  0D96                     	;# 
  3759  0D97                     	;# 
  3760  0D97                     	;# 
  3761  0D98                     	;# 
  3762  0D99                     	;# 
  3763  0D99                     	;# 
  3764  0D9A                     	;# 
  3765  0D9B                     	;# 
  3766  0D9C                     	;# 
  3767  0D9C                     	;# 
  3768  0D9D                     	;# 
  3769  0D9D                     	;# 
  3770  0D9E                     	;# 
  3771  0D9F                     	;# 
  3772  0DA0                     	;# 
  3773  0DA1                     	;# 
  3774  0DA1                     	;# 
  3775  0DA2                     	;# 
  3776  0DA3                     	;# 
  3777  0DA3                     	;# 
  3778  0DA4                     	;# 
  3779  0DA5                     	;# 
  3780  0DA5                     	;# 
  3781  0DA6                     	;# 
  3782  0DA7                     	;# 
  3783  0DA7                     	;# 
  3784  0DA8                     	;# 
  3785  0DA9                     	;# 
  3786  0DA9                     	;# 
  3787  0DAA                     	;# 
  3788  0DAB                     	;# 
  3789  0DAC                     	;# 
  3790  0DAC                     	;# 
  3791  0DAD                     	;# 
  3792  0DAD                     	;# 
  3793  0DAE                     	;# 
  3794  0DAF                     	;# 
  3795  0DB0                     	;# 
  3796  0DB1                     	;# 
  3797  0DB1                     	;# 
  3798  0DB2                     	;# 
  3799  0DB3                     	;# 
  3800  0DB3                     	;# 
  3801  0DB4                     	;# 
  3802  0DB5                     	;# 
  3803  0DB5                     	;# 
  3804  0DB6                     	;# 
  3805  0DB7                     	;# 
  3806  0DB7                     	;# 
  3807  0DB8                     	;# 
  3808  0DB9                     	;# 
  3809  0DB9                     	;# 
  3810  0DBA                     	;# 
  3811  0DBB                     	;# 
  3812  0DBC                     	;# 
  3813  0DBC                     	;# 
  3814  0DBD                     	;# 
  3815  0DBD                     	;# 
  3816  0DBE                     	;# 
  3817  0DBF                     	;# 
  3818  0DC0                     	;# 
  3819  0DC1                     	;# 
  3820  0DC1                     	;# 
  3821  0DC2                     	;# 
  3822  0DC3                     	;# 
  3823  0DC3                     	;# 
  3824  0DC4                     	;# 
  3825  0DC5                     	;# 
  3826  0DC5                     	;# 
  3827  0DC6                     	;# 
  3828  0DC7                     	;# 
  3829  0DC7                     	;# 
  3830  0DC8                     	;# 
  3831  0DC9                     	;# 
  3832  0DC9                     	;# 
  3833  0DCA                     	;# 
  3834  0DCB                     	;# 
  3835  0DCC                     	;# 
  3836  0DCC                     	;# 
  3837  0DCD                     	;# 
  3838  0DCD                     	;# 
  3839  0DCE                     	;# 
  3840  0DCF                     	;# 
  3841  0DD0                     	;# 
  3842  0E0F                     	;# 
  3843  0E10                     	;# 
  3844  0E11                     	;# 
  3845  0E12                     	;# 
  3846  0E13                     	;# 
  3847  0E14                     	;# 
  3848  0E15                     	;# 
  3849  0E16                     	;# 
  3850  0E17                     	;# 
  3851  0E90                     	;# 
  3852  0E91                     	;# 
  3853  0E92                     	;# 
  3854  0E94                     	;# 
  3855  0E95                     	;# 
  3856  0EA0                     	;# 
  3857  0EA1                     	;# 
  3858  0EA2                     	;# 
  3859  0EA3                     	;# 
  3860  0EA4                     	;# 
  3861  0EA5                     	;# 
  3862  0FE4                     	;# 
  3863  0FE5                     	;# 
  3864  0FE6                     	;# 
  3865  0FE7                     	;# 
  3866  0FE8                     	;# 
  3867  0FE8                     	;# 
  3868  0FE9                     	;# 
  3869  0FEA                     	;# 
  3870  0FEA                     	;# 
  3871  0FEB                     	;# 
  3872  0FED                     	;# 
  3873  0FEE                     	;# 
  3874  0FEE                     	;# 
  3875  0FEF                     	;# 
  3876  0FFF                     	;_sysData
  3877                           
  3878 ;; Function _TMR2_DefaultInterruptHandler is unused but had its address taken
  3879  0000                     
  3880                           	psect	idataBANK0
  3881  1001                     __pidataBANK0:	
  3882                           
  3883                           ;initializer for _resRs
  3884  1001  3410               	retlw	16
  3885  1002  3427               	retlw	39
  3886                           
  3887                           ;initializer for _resRc
  3888  1003  3410               	retlw	16
  3889  1004  3427               	retlw	39
  3890                           
  3891                           	psect	idataBANK1
  3892  1CF5                     __pidataBANK1:	
  3893                           
  3894                           ;initializer for _pidU
  3895  1CF5  3414               	retlw	20
  3896  1CF6  3400               	retlw	0
  3897                           
  3898                           ;initializer for _pidpwm2_U
  3899  1CF7  3414               	retlw	20
  3900  1CF8  3400               	retlw	0
  3901                           
  3902                           ;initializer for _pwm1DutyForIdrv
  3903  1CF9  3405               	retlw	5
  3904  1CFA  3400               	retlw	0
  3905                           
  3906                           ;initializer for _pwm2DutyForVout
  3907  1CFB  3405               	retlw	5
  3908  1CFC  3400               	retlw	0
  3909                           
  3910                           	psect	stringtext1
  3911  181E                     __pstringtext1:	
  3912  181E                     _HexTable:	
  3913  181E  3430               	retlw	48
  3914  181F  3431               	retlw	49
  3915  1820  3432               	retlw	50
  3916  1821  3433               	retlw	51
  3917  1822  3434               	retlw	52
  3918  1823  3435               	retlw	53
  3919  1824  3436               	retlw	54
  3920  1825  3437               	retlw	55
  3921  1826  3438               	retlw	56
  3922  1827  3439               	retlw	57
  3923  1828  3441               	retlw	65
  3924  1829  3442               	retlw	66
  3925  182A  3443               	retlw	67
  3926  182B  3444               	retlw	68
  3927  182C  3445               	retlw	69
  3928  182D  3446               	retlw	70
  3929  182E  3400               	retlw	0
  3930  182F                     __end_of_HexTable:	
  3931  0013                     _PIR3bits	set	19
  3932  001C                     _T2CONbits	set	28
  3933  0011                     _PIR1bits	set	17
  3934  001A                     _TMR2	set	26
  3935  001B                     _PR2	set	27
  3936  001C                     _T2CON	set	28
  3937  000B                     _INTCONbits	set	11
  3938  005F                     _GIE	set	95
  3939  0095                     _OPTION_REGbits	set	149
  3940  008E                     _TRISC	set	142
  3941  008C                     _TRISA	set	140
  3942  009D                     _ADCON0bits	set	157
  3943  009C                     _ADRESH	set	156
  3944  009B                     _ADRESL	set	155
  3945  009F                     _ADCON2	set	159
  3946  009E                     _ADCON1	set	158
  3947  009D                     _ADCON0	set	157
  3948  0097                     _WDTCON	set	151
  3949  0091                     _PIE1bits	set	145
  3950  010E                     _LATC	set	270
  3951  010C                     _LATA	set	268
  3952  0117                     _FVRCONbits	set	279
  3953  0117                     _FVRCON	set	279
  3954  019E                     _TXSTAbits	set	414
  3955  018C                     _ANSELA	set	396
  3956  018E                     _ANSELC	set	398
  3957  019A                     _TXREG	set	410
  3958  019C                     _SPBRGH	set	412
  3959  019B                     _SPBRGL	set	411
  3960  019E                     _TXSTA	set	414
  3961  019D                     _RCSTA	set	413
  3962  019F                     _BAUDCON	set	415
  3963  0199                     _RCREG	set	409
  3964  019D                     _RCSTAbits	set	413
  3965  0196                     _PMCON2	set	406
  3966  0193                     _PMDATL	set	403
  3967  0194                     _PMDATH	set	404
  3968  0195                     _PMCON1bits	set	405
  3969  0192                     _PMADRH	set	402
  3970  0191                     _PMADRL	set	401
  3971  020E                     _WPUC	set	526
  3972  020C                     _WPUA	set	524
  3973  028E                     _ODCONC	set	654
  3974  028C                     _ODCONA	set	652
  3975  0D9D                     _PWM1INTFbits	set	3485
  3976  0D9F                     _PWM1LDCONbits	set	3487
  3977  0D9B                     _PWM1CONbits	set	3483
  3978  0D9B                     _PWM1CON	set	3483
  3979  0D99                     _PWM1TMRL	set	3481
  3980  0D9A                     _PWM1TMRH	set	3482
  3981  0D97                     _PWM1OFL	set	3479
  3982  0D98                     _PWM1OFH	set	3480
  3983  0D95                     _PWM1PRL	set	3477
  3984  0D96                     _PWM1PRH	set	3478
  3985  0D93                     _PWM1DCL	set	3475
  3986  0D94                     _PWM1DCH	set	3476
  3987  0D91                     _PWM1PHL	set	3473
  3988  0D92                     _PWM1PHH	set	3474
  3989  0DA0                     _PWM1OFCON	set	3488
  3990  0D9F                     _PWM1LDCON	set	3487
  3991  0D9E                     _PWM1CLKCON	set	3486
  3992  0D9D                     _PWM1INTF	set	3485
  3993  0D9C                     _PWM1INTE	set	3484
  3994  0DAD                     _PWM2INTFbits	set	3501
  3995  0DAF                     _PWM2LDCONbits	set	3503
  3996  0DAB                     _PWM2CONbits	set	3499
  3997  0DAB                     _PWM2CON	set	3499
  3998  0DA9                     _PWM2TMRL	set	3497
  3999  0DAA                     _PWM2TMRH	set	3498
  4000  0DA7                     _PWM2OFL	set	3495
  4001  0DA8                     _PWM2OFH	set	3496
  4002  0DA5                     _PWM2PRL	set	3493
  4003  0DA6                     _PWM2PRH	set	3494
  4004  0DA3                     _PWM2DCL	set	3491
  4005  0DA4                     _PWM2DCH	set	3492
  4006  0DA1                     _PWM2PHL	set	3489
  4007  0DA2                     _PWM2PHH	set	3490
  4008  0DB0                     _PWM2OFCON	set	3504
  4009  0DAF                     _PWM2LDCON	set	3503
  4010  0DAE                     _PWM2CLKCON	set	3502
  4011  0DAD                     _PWM2INTF	set	3501
  4012  0DAC                     _PWM2INTE	set	3500
  4013  0E15                     _RXPPSbits	set	3605
  4014  0E0F                     _PPSLOCKbits	set	3599
  4015  0E0F                     _PPSLOCK	set	3599
  4016  0EA5                     _RC5PPSbits	set	3749
  4017  0E95                     _RA5PPSbits	set	3733
  4018  0E94                     _RA4PPSbits	set	3732
  4019                           
  4020                           	psect	cinit
  4021  0869                     start_initialization:	
  4022                           ; #config settings
  4023                           
  4024  0869                     __initialization:		;BIGRAM
  4025                           
  4026                           ; Initialize objects allocated to BANK0
  4027  0869  3001               	movlw	low __pidataBANK0
  4028  086A  0084               	movwf	4
  4029  086B  3090               	movlw	(high __pidataBANK0)| (0+128)
  4030  086C  0085               	movwf	5
  4031  086D  306C               	movlw	low __pdataBANK0
  4032  086E  0086               	movwf	6
  4033  086F  3000               	movlw	high __pdataBANK0
  4034  0870  0087               	movwf	7
  4035  0871  3000               	movlw	0
  4036  0872  00FF               	movwf	btemp+1
  4037  0873  3004               	movlw	4
  4038  0874  319D  2512  3188   	fcall	init_ram
  4039                           
  4040                           ; Initialize objects allocated to BANK1
  4041  0877  30F5               	movlw	low __pidataBANK1
  4042  0878  0084               	movwf	4
  4043  0879  309C               	movlw	(high __pidataBANK1)| (0+128)
  4044  087A  0085               	movwf	5
  4045  087B  30CE               	movlw	low __pdataBANK1
  4046  087C  0086               	movwf	6
  4047  087D  3000               	movlw	high __pdataBANK1
  4048  087E  0087               	movwf	7
  4049  087F  3000               	movlw	0
  4050  0880  00FF               	movwf	btemp+1
  4051  0881  3008               	movlw	8
  4052  0882  319D  2512  3188   	fcall	init_ram
  4053                           
  4054                           ; Clear objects allocated to BIGRAM
  4055  0885  305C               	movlw	low (0+9052)
  4056  0886  0084               	movwf	4
  4057  0887  3023               	movlw	high (0+9052)
  4058  0888  0085               	movwf	5
  4059  0889  3084               	movlw	132
  4060  088A  00FE               	movwf	btemp
  4061  088B  3000               	movlw	0
  4062  088C  00FF               	movwf	btemp+1
  4063  088D  319D  2506  3188   	fcall	clear_ram0
  4064                           
  4065                           ; Clear objects allocated to COMMON
  4066  0890  01FC               	clrf	__pbssCOMMON& (0+127)
  4067                           
  4068                           ; Clear objects allocated to BANK0
  4069  0891  3047               	movlw	low __pbssBANK0
  4070  0892  0084               	movwf	4
  4071  0893  3000               	movlw	high __pbssBANK0
  4072  0894  0085               	movwf	5
  4073  0895  3025               	movlw	37
  4074  0896  00FE               	movwf	btemp
  4075  0897  3000               	movlw	0
  4076  0898  00FF               	movwf	btemp+1
  4077  0899  319D  2506  3188   	fcall	clear_ram0
  4078                           
  4079                           ; Clear objects allocated to BANK1
  4080  089C  30A0               	movlw	low __pbssBANK1
  4081  089D  0084               	movwf	4
  4082  089E  3000               	movlw	high __pbssBANK1
  4083  089F  0085               	movwf	5
  4084  08A0  302E               	movlw	46
  4085  08A1  00FE               	movwf	btemp
  4086  08A2  3000               	movlw	0
  4087  08A3  00FF               	movwf	btemp+1
  4088  08A4  319D  2506  3188   	fcall	clear_ram0
  4089                           
  4090                           ; Clear objects allocated to BANK2
  4091  08A7  3020               	movlw	low __pbssBANK2
  4092  08A8  0084               	movwf	4
  4093  08A9  3001               	movlw	high __pbssBANK2
  4094  08AA  0085               	movwf	5
  4095  08AB  3040               	movlw	64
  4096  08AC  00FE               	movwf	btemp
  4097  08AD  3000               	movlw	0
  4098  08AE  00FF               	movwf	btemp+1
  4099  08AF  319D  2506         	fcall	clear_ram0
  4100  08B1                     end_of_initialization:	
  4101                           ;End of C runtime variable initialization code
  4102                           
  4103  08B1                     __end_of__initialization:	
  4104  08B1  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4105  08B2  0020               	movlb	0
  4106  08B3  318D  2D72         	ljmp	_main	;jump to C main() function
  4107                           
  4108                           	psect	bssCOMMON
  4109  007C                     __pbssCOMMON:	
  4110  007C                     _eusartRxIdleTime_ms:	
  4111  007C                     	ds	1
  4112                           
  4113                           	psect	bssBANK0
  4114  0047                     __pbssBANK0:	
  4115  0047                     _y32:	
  4116  0047                     	ds	4
  4117  004B                     _x0:	
  4118  004B                     	ds	4
  4119  004F                     _y0:	
  4120  004F                     	ds	4
  4121  0053                     _rsLoAvg:	
  4122  0053                     	ds	2
  4123  0055                     _voExpectAdcValue:	
  4124  0055                     	ds	2
  4125  0057                     _PidKp:	
  4126  0057                     	ds	2
  4127  0059                     _rtAdcValueVoFb:	
  4128  0059                     	ds	2
  4129  005B                     _rtAdcValueRcHi:	
  4130  005B                     	ds	2
  4131  005D                     _rtAdcValueRcLo:	
  4132  005D                     	ds	2
  4133  005F                     _rtAdcValueRsHi:	
  4134  005F                     	ds	2
  4135  0061                     _rtAdcValueRsLo:	
  4136  0061                     	ds	2
  4137  0063                     _TMR2_InterruptHandler:	
  4138  0063                     	ds	2
  4139  0065                     _pidBbSm:	
  4140  0065                     	ds	1
  4141  0066                     _xlen:	
  4142  0066                     	ds	1
  4143  0067                     _rxtemp:	
  4144  0067                     	ds	1
  4145  0068                     _subTickerX_1s:	
  4146  0068                     	ds	1
  4147  0069                     _subTickerX:	
  4148  0069                     	ds	1
  4149  006A                     _eusartRxCount:	
  4150  006A                     	ds	1
  4151  006B                     _Event:	
  4152  006B                     	ds	1
  4153                           
  4154                           	psect	dataBANK0
  4155  006C                     __pdataBANK0:	
  4156  006C                     _resRs:	
  4157  006C                     	ds	2
  4158  006E                     _resRc:	
  4159  006E                     	ds	2
  4160                           
  4161                           	psect	bssBANK1
  4162  00A0                     __pbssBANK1:	
  4163  00A0                     _err:	
  4164  00A0                     	ds	12
  4165  00AC                     _rsLoAvgBuf:	
  4166  00AC                     	ds	12
  4167  00B8                     _x32:	
  4168  00B8                     	ds	4
  4169  00BC                     _x1:	
  4170  00BC                     	ds	4
  4171  00C0                     _y1:	
  4172  00C0                     	ds	4
  4173  00C4                     _pwm2Ei:	
  4174  00C4                     	ds	2
  4175  00C6                     _voExpectMv:	
  4176  00C6                     	ds	2
  4177  00C8                     _PidTd:	
  4178  00C8                     	ds	2
  4179  00CA                     _PidTi:	
  4180  00CA                     	ds	2
  4181  00CC                     _globalTicker:	
  4182  00CC                     	ds	2
  4183                           
  4184                           	psect	dataBANK1
  4185  00CE                     __pdataBANK1:	
  4186  00CE                     _pidU:	
  4187  00CE                     	ds	2
  4188  00D0                     _pidpwm2_U:	
  4189  00D0                     	ds	2
  4190  00D2                     _pwm1DutyForIdrv:	
  4191  00D2                     	ds	2
  4192  00D4                     _pwm2DutyForVout:	
  4193  00D4                     	ds	2
  4194                           
  4195                           	psect	bssBANK2
  4196  0120                     __pbssBANK2:	
  4197  0120                     _modbusBuf:	
  4198  0120                     	ds	32
  4199  0140                     _eusartRxBuffer:	
  4200  0140                     	ds	32
  4201                           
  4202                           	psect	inittext
  4203  1D12                     init_ram:	
  4204  1D12  00FE               	movwf	126
  4205  1D13                     initloop:	
  4206  1D13  0012               	moviw fsr0++
  4207  1D14  001E               	movwi fsr1++
  4208  1D15  3001               	movlw	1
  4209  1D16  02FE               	subwf	126,f
  4210  1D17  3000               	movlw	0
  4211  1D18  3BFF               	subwfb	127,f
  4212  1D19  087F               	movf	127,w
  4213  1D1A  047E               	iorwf	126,w
  4214  1D1B  1903               	btfsc	3,2
  4215  1D1C  3400               	retlw	0
  4216  1D1D  2D13               	goto	initloop
  4217                           
  4218                           	psect	clrtext
  4219  1D06                     clear_ram0:	
  4220                           ;	Called with FSR0 containing the base address, and
  4221                           ;	btemp/btemp+1 has the size to clear
  4222                           
  4223  1D06  0064               	clrwdt	;clear the watchdog before getting into this loop
  4224  1D07                     clrloop0:	
  4225  1D07  0180               	clrf	0	;clear RAM location pointed to by FSR
  4226  1D08  3101               	addfsr 0,1
  4227  1D09  3001               	movlw	1
  4228  1D0A  02FE               	subwf	126,f
  4229  1D0B  3000               	movlw	0
  4230  1D0C  3BFF               	subwfb	127,f
  4231  1D0D  087F               	movf	127,w
  4232  1D0E  047E               	iorwf	126,w
  4233  1D0F  1903               	btfsc	3,2
  4234  1D10  3400               	retlw	0	;all done for this memory range, return
  4235  1D11  2D07               	goto	clrloop0	;have we reached the end yet?
  4236                           
  4237                           	psect	cstackBANK1
  4238  00D6                     __pcstackBANK1:	
  4239  00D6                     ??_main:	
  4240                           
  4241                           ; 1 bytes @ 0x0
  4242  00D6                     	ds	2
  4243                           
  4244                           	psect	cstackCOMMON
  4245  0070                     __pcstackCOMMON:	
  4246  0070                     ?_TMR2_StartTimer:	
  4247  0070                     ?_PIN_MANAGER_Initialize:	
  4248                           ; 1 bytes @ 0x0
  4249                           
  4250  0070                     ?_OSCILLATOR_Initialize:	
  4251                           ; 1 bytes @ 0x0
  4252                           
  4253  0070                     ?_WDT_Initialize:	
  4254                           ; 1 bytes @ 0x0
  4255                           
  4256  0070                     ?_ADC1_Initialize:	
  4257                           ; 1 bytes @ 0x0
  4258                           
  4259  0070                     ?_EUSART_Initialize:	
  4260                           ; 1 bytes @ 0x0
  4261                           
  4262  0070                     ?_PWM2_Initialize:	
  4263                           ; 1 bytes @ 0x0
  4264                           
  4265  0070                     ?_PWM1_Initialize:	
  4266                           ; 1 bytes @ 0x0
  4267                           
  4268  0070                     ?_TMR2_Initialize:	
  4269                           ; 1 bytes @ 0x0
  4270                           
  4271  0070                     ?_INTERRUPT_InterruptManager:	
  4272                           ; 1 bytes @ 0x0
  4273                           
  4274  0070                     ??_INTERRUPT_InterruptManager:	
  4275                           ; 1 bytes @ 0x0
  4276                           
  4277  0070                     ?_FVR_Initialize:	
  4278                           ; 1 bytes @ 0x0
  4279                           
  4280  0070                     ?_SYSTEM_Initialize:	
  4281                           ; 1 bytes @ 0x0
  4282                           
  4283  0070                     ?_uart_received_start:	
  4284                           ; 1 bytes @ 0x0
  4285                           
  4286  0070                     ?_fvr_set_gain:	
  4287                           ; 1 bytes @ 0x0
  4288                           
  4289  0070                     ?_adc_init:	
  4290                           ; 1 bytes @ 0x0
  4291                           
  4292  0070                     ?_pid_pwm1_idrv_run:	
  4293                           ; 1 bytes @ 0x0
  4294                           
  4295  0070                     ?_pid_pwm2_vout_run:	
  4296                           ; 1 bytes @ 0x0
  4297                           
  4298  0070                     ?_my_flash_read_system_erase:	
  4299                           ; 1 bytes @ 0x0
  4300                           
  4301  0070                     ?_sys_data_save:	
  4302                           ; 1 bytes @ 0x0
  4303                           
  4304  0070                     ?_modbus_response_write_single_register:	
  4305                           ; 1 bytes @ 0x0
  4306                           
  4307  0070                     ?_modbus_response_write_mult_register:	
  4308                           ; 1 bytes @ 0x0
  4309                           
  4310  0070                     ?_modbus_response_command:	
  4311                           ; 1 bytes @ 0x0
  4312                           
  4313  0070                     ?_main:	
  4314                           ; 1 bytes @ 0x0
  4315                           
  4316  0070                     ?_sys_data_init:	
  4317                           ; 1 bytes @ 0x0
  4318                           
  4319                           
  4320                           ; 2 bytes @ 0x0
  4321  0070                     	ds	1
  4322  0071                     ?_FLASH_EraseBlock:	
  4323  0071                     ?_TMR2_SetInterruptHandler:	
  4324                           ; 1 bytes @ 0x1
  4325                           
  4326  0071                     ??_TMR2_StartTimer:	
  4327                           ; 1 bytes @ 0x1
  4328                           
  4329  0071                     ??_PIN_MANAGER_Initialize:	
  4330                           ; 1 bytes @ 0x1
  4331                           
  4332  0071                     ??_OSCILLATOR_Initialize:	
  4333                           ; 1 bytes @ 0x1
  4334                           
  4335  0071                     ??_WDT_Initialize:	
  4336                           ; 1 bytes @ 0x1
  4337                           
  4338  0071                     ??_ADC1_Initialize:	
  4339                           ; 1 bytes @ 0x1
  4340                           
  4341  0071                     ??_EUSART_Initialize:	
  4342                           ; 1 bytes @ 0x1
  4343                           
  4344  0071                     ?_m_mem_cpy_len:	
  4345                           ; 1 bytes @ 0x1
  4346                           
  4347  0071                     ??_PWM2_Initialize:	
  4348                           ; 1 bytes @ 0x1
  4349                           
  4350  0071                     ??_PWM1_Initialize:	
  4351                           ; 1 bytes @ 0x1
  4352                           
  4353  0071                     ??_FVR_Initialize:	
  4354                           ; 1 bytes @ 0x1
  4355                           
  4356  0071                     ?_uart_send_len:	
  4357                           ; 1 bytes @ 0x1
  4358                           
  4359  0071                     ??_uart_received_start:	
  4360                           ; 1 bytes @ 0x1
  4361                           
  4362  0071                     ??_fvr_set_gain:	
  4363                           ; 1 bytes @ 0x1
  4364                           
  4365  0071                     ??_adc_init:	
  4366                           ; 1 bytes @ 0x1
  4367                           
  4368  0071                     ?_my_flash_system_read:	
  4369                           ; 1 bytes @ 0x1
  4370                           
  4371  0071                     ?_get_idrv_pwm1_duty:	
  4372                           ; 1 bytes @ 0x1
  4373                           
  4374  0071                     ?_get_vout_pwm2_duty:	
  4375                           ; 2 bytes @ 0x1
  4376                           
  4377  0071                     ?_my_flash_system_write:	
  4378                           ; 2 bytes @ 0x1
  4379                           
  4380  0071                     ?_getRegisterVal:	
  4381                           ; 2 bytes @ 0x1
  4382                           
  4383  0071                     ?_crc_sum:	
  4384                           ; 2 bytes @ 0x1
  4385                           
  4386  0071                     ?___wmul:	
  4387                           ; 2 bytes @ 0x1
  4388                           
  4389  0071                     ?___awdiv:	
  4390                           ; 2 bytes @ 0x1
  4391                           
  4392  0071                     ?___lwdiv:	
  4393                           ; 2 bytes @ 0x1
  4394                           
  4395  0071                     ?___lmul:	
  4396                           ; 2 bytes @ 0x1
  4397                           
  4398  0071                     ?___lldiv:	
  4399                           ; 4 bytes @ 0x1
  4400                           
  4401  0071                     PIN_MANAGER_Initialize@state:	
  4402                           ; 4 bytes @ 0x1
  4403                           
  4404  0071                     uart_send_len@len:	
  4405                           ; 1 bytes @ 0x1
  4406                           
  4407  0071                     FLASH_EraseBlock@startAddr:	
  4408                           ; 1 bytes @ 0x1
  4409                           
  4410  0071                     TMR2_SetInterruptHandler@InterruptHandler:	
  4411                           ; 2 bytes @ 0x1
  4412                           
  4413  0071                     my_flash_system_read@buf:	
  4414                           ; 2 bytes @ 0x1
  4415                           
  4416  0071                     my_flash_system_write@buf:	
  4417                           ; 2 bytes @ 0x1
  4418                           
  4419  0071                     getRegisterVal@addr:	
  4420                           ; 2 bytes @ 0x1
  4421                           
  4422  0071                     m_mem_cpy_len@d:	
  4423                           ; 2 bytes @ 0x1
  4424                           
  4425  0071                     crc_sum@buf:	
  4426                           ; 2 bytes @ 0x1
  4427                           
  4428  0071                     ___wmul@multiplier:	
  4429                           ; 2 bytes @ 0x1
  4430                           
  4431  0071                     ___awdiv@divisor:	
  4432                           ; 2 bytes @ 0x1
  4433                           
  4434  0071                     ___lwdiv@divisor:	
  4435                           ; 2 bytes @ 0x1
  4436                           
  4437  0071                     ___lmul@multiplier:	
  4438                           ; 2 bytes @ 0x1
  4439                           
  4440  0071                     ___lldiv@divisor:	
  4441                           ; 4 bytes @ 0x1
  4442                           
  4443                           
  4444                           ; 4 bytes @ 0x1
  4445  0071                     	ds	1
  4446  0072                     ??_uart_send_len:	
  4447  0072                     fvr_set_gain@t8:	
  4448                           ; 1 bytes @ 0x2
  4449                           
  4450  0072                     adc_init@ch:	
  4451                           ; 1 bytes @ 0x2
  4452                           
  4453                           
  4454                           ; 1 bytes @ 0x2
  4455  0072                     	ds	1
  4456  0073                     ??_FLASH_EraseBlock:	
  4457  0073                     ??_TMR2_SetInterruptHandler:	
  4458                           ; 1 bytes @ 0x3
  4459                           
  4460  0073                     ??_TMR2_Initialize:	
  4461                           ; 1 bytes @ 0x3
  4462                           
  4463  0073                     ??_SYSTEM_Initialize:	
  4464                           ; 1 bytes @ 0x3
  4465                           
  4466  0073                     ??_get_idrv_pwm1_duty:	
  4467                           ; 1 bytes @ 0x3
  4468                           
  4469  0073                     ??_get_vout_pwm2_duty:	
  4470                           ; 1 bytes @ 0x3
  4471                           
  4472  0073                     FLASH_EraseBlock@GIEBitValue:	
  4473                           ; 1 bytes @ 0x3
  4474                           
  4475  0073                     uart_send_len@i:	
  4476                           ; 1 bytes @ 0x3
  4477                           
  4478  0073                     fvr_set_gain@g:	
  4479                           ; 1 bytes @ 0x3
  4480                           
  4481  0073                     getRegisterVal@tempData:	
  4482                           ; 1 bytes @ 0x3
  4483                           
  4484  0073                     my_flash_system_read@len:	
  4485                           ; 1 bytes @ 0x3
  4486                           
  4487  0073                     my_flash_system_write@len:	
  4488                           ; 2 bytes @ 0x3
  4489                           
  4490  0073                     m_mem_cpy_len@s:	
  4491                           ; 2 bytes @ 0x3
  4492                           
  4493  0073                     crc_sum@len:	
  4494                           ; 2 bytes @ 0x3
  4495                           
  4496  0073                     ___wmul@multiplicand:	
  4497                           ; 2 bytes @ 0x3
  4498                           
  4499  0073                     ___awdiv@dividend:	
  4500                           ; 2 bytes @ 0x3
  4501                           
  4502  0073                     ___lwdiv@dividend:	
  4503                           ; 2 bytes @ 0x3
  4504                           
  4505                           
  4506                           ; 2 bytes @ 0x3
  4507  0073                     	ds	1
  4508  0074                     ??_my_flash_read_system_erase:	
  4509  0074                     ??_getRegisterVal:	
  4510                           ; 1 bytes @ 0x4
  4511                           
  4512  0074                     ?_adc_sample:	
  4513                           ; 1 bytes @ 0x4
  4514                           
  4515  0074                     uart_send_len@buf:	
  4516                           ; 2 bytes @ 0x4
  4517                           
  4518  0074                     adc_sample@gfvr:	
  4519                           ; 1 bytes @ 0x4
  4520                           
  4521                           
  4522                           ; 1 bytes @ 0x4
  4523  0074                     	ds	1
  4524  0075                     ??_my_flash_system_read:	
  4525  0075                     ??_my_flash_system_write:	
  4526                           ; 1 bytes @ 0x5
  4527                           
  4528  0075                     ??_crc_sum:	
  4529                           ; 1 bytes @ 0x5
  4530                           
  4531  0075                     ??___wmul:	
  4532                           ; 1 bytes @ 0x5
  4533                           
  4534  0075                     ??___awdiv:	
  4535                           ; 1 bytes @ 0x5
  4536                           
  4537  0075                     ??___lwdiv:	
  4538                           ; 1 bytes @ 0x5
  4539                           
  4540  0075                     adc_sample@num:	
  4541                           ; 1 bytes @ 0x5
  4542                           
  4543  0075                     get_idrv_pwm1_duty@t16:	
  4544                           ; 1 bytes @ 0x5
  4545                           
  4546  0075                     get_vout_pwm2_duty@t16:	
  4547                           ; 2 bytes @ 0x5
  4548                           
  4549  0075                     m_mem_cpy_len@len:	
  4550                           ; 2 bytes @ 0x5
  4551                           
  4552  0075                     ___wmul@product:	
  4553                           ; 2 bytes @ 0x5
  4554                           
  4555  0075                     ___lmul@multiplicand:	
  4556                           ; 2 bytes @ 0x5
  4557                           
  4558  0075                     ___lldiv@dividend:	
  4559                           ; 4 bytes @ 0x5
  4560                           
  4561                           
  4562                           ; 4 bytes @ 0x5
  4563  0075                     	ds	1
  4564  0076                     ??_adc_sample:	
  4565  0076                     ___awdiv@counter:	
  4566                           ; 1 bytes @ 0x6
  4567                           
  4568  0076                     ___lwdiv@quotient:	
  4569                           ; 1 bytes @ 0x6
  4570                           
  4571                           
  4572                           ; 2 bytes @ 0x6
  4573  0076                     	ds	1
  4574  0077                     ??_crc_append:	
  4575  0077                     ??_m_mem_cpy_len:	
  4576                           ; 1 bytes @ 0x7
  4577                           
  4578  0077                     ?_set_idrv_pwm1_duty:	
  4579                           ; 1 bytes @ 0x7
  4580                           
  4581  0077                     ?_set_vout_pwm2_duty:	
  4582                           ; 1 bytes @ 0x7
  4583                           
  4584  0077                     my_flash_system_read@GIEBitValue:	
  4585                           ; 1 bytes @ 0x7
  4586                           
  4587  0077                     ___awdiv@sign:	
  4588                           ; 1 bytes @ 0x7
  4589                           
  4590  0077                     set_idrv_pwm1_duty@duty:	
  4591                           ; 1 bytes @ 0x7
  4592                           
  4593  0077                     set_vout_pwm2_duty@duty:	
  4594                           ; 2 bytes @ 0x7
  4595                           
  4596                           
  4597                           ; 2 bytes @ 0x7
  4598  0077                     	ds	1
  4599  0078                     ??_crc_verify:	
  4600  0078                     ___lwdiv@counter:	
  4601                           ; 1 bytes @ 0x8
  4602                           
  4603  0078                     my_flash_system_read@flashAddr:	
  4604                           ; 1 bytes @ 0x8
  4605                           
  4606  0078                     getRegisterVal@t16:	
  4607                           ; 2 bytes @ 0x8
  4608                           
  4609  0078                     ___awdiv@quotient:	
  4610                           ; 2 bytes @ 0x8
  4611                           
  4612                           
  4613                           ; 2 bytes @ 0x8
  4614  0078                     	ds	1
  4615  0079                     ??_set_idrv_pwm1_duty:	
  4616  0079                     ??_set_vout_pwm2_duty:	
  4617                           ; 1 bytes @ 0x9
  4618                           
  4619  0079                     ??___lmul:	
  4620                           ; 1 bytes @ 0x9
  4621                           
  4622  0079                     ??___lldiv:	
  4623                           ; 1 bytes @ 0x9
  4624                           
  4625  0079                     ??___aldiv:	
  4626                           ; 1 bytes @ 0x9
  4627                           
  4628  0079                     set_idrv_pwm1_duty@t16:	
  4629                           ; 1 bytes @ 0x9
  4630                           
  4631  0079                     set_vout_pwm2_duty@t16:	
  4632                           ; 2 bytes @ 0x9
  4633                           
  4634                           
  4635                           ; 2 bytes @ 0x9
  4636  0079                     	ds	1
  4637  007A                     ??_calc_rs_lo_avg:	
  4638  007A                     getRegisterVal@tempAddr:	
  4639                           ; 1 bytes @ 0xA
  4640                           
  4641  007A                     my_flash_system_read@i:	
  4642                           ; 1 bytes @ 0xA
  4643                           
  4644                           
  4645                           ; 2 bytes @ 0xA
  4646  007A                     	ds	2
  4647  007C                     ??_sys_data_save:	
  4648                           
  4649                           	psect	cstackBANK0
  4650  0020                     __pcstackBANK0:	
  4651                           ; 1 bytes @ 0xC
  4652                           
  4653  0020                     ??_pid_pwm2_vout_run:	
  4654  0020                     adc_sample@ch:	
  4655                           ; 1 bytes @ 0x0
  4656                           
  4657  0020                     my_flash_system_write@j:	
  4658                           ; 1 bytes @ 0x0
  4659                           
  4660  0020                     crc_sum@j:	
  4661                           ; 2 bytes @ 0x0
  4662                           
  4663  0020                     ___lmul@product:	
  4664                           ; 2 bytes @ 0x0
  4665                           
  4666  0020                     ___lldiv@quotient:	
  4667                           ; 4 bytes @ 0x0
  4668                           
  4669                           
  4670                           ; 4 bytes @ 0x0
  4671  0020                     	ds	1
  4672  0021                     adc_sample@i:	
  4673                           
  4674                           ; 2 bytes @ 0x1
  4675  0021                     	ds	1
  4676  0022                     my_flash_system_write@GIEBitValue:	
  4677  0022                     pid_pwm2_vout_run@__ei:	
  4678                           ; 1 bytes @ 0x2
  4679                           
  4680  0022                     crc_sum@i:	
  4681                           ; 2 bytes @ 0x2
  4682                           
  4683                           
  4684                           ; 2 bytes @ 0x2
  4685  0022                     	ds	1
  4686  0023                     adc_sample@ret:	
  4687  0023                     my_flash_system_write@blocNum:	
  4688                           ; 2 bytes @ 0x3
  4689                           
  4690                           
  4691                           ; 2 bytes @ 0x3
  4692  0023                     	ds	1
  4693  0024                     ?___aldiv:	
  4694  0024                     ___lldiv@counter:	
  4695                           ; 4 bytes @ 0x4
  4696                           
  4697  0024                     pid_pwm2_vout_run@t16:	
  4698                           ; 1 bytes @ 0x4
  4699                           
  4700  0024                     crc_sum@crc:	
  4701                           ; 2 bytes @ 0x4
  4702                           
  4703  0024                     ___aldiv@divisor:	
  4704                           ; 2 bytes @ 0x4
  4705                           
  4706                           
  4707                           ; 4 bytes @ 0x4
  4708  0024                     	ds	1
  4709  0025                     ?_calc_rs_lo_avg:	
  4710  0025                     ?_calc_temp_rs:	
  4711                           ; 2 bytes @ 0x5
  4712                           
  4713  0025                     ?_calc_temp_rc:	
  4714                           ; 4 bytes @ 0x5
  4715                           
  4716  0025                     adc_sample@t16:	
  4717                           ; 4 bytes @ 0x5
  4718                           
  4719  0025                     calc_rs_lo_avg@x:	
  4720                           ; 2 bytes @ 0x5
  4721                           
  4722  0025                     my_flash_system_write@loc:	
  4723                           ; 2 bytes @ 0x5
  4724                           
  4725                           
  4726                           ; 2 bytes @ 0x5
  4727  0025                     	ds	1
  4728  0026                     ?_crc_append:	
  4729  0026                     ?_crc_verify:	
  4730                           ; 1 bytes @ 0x6
  4731                           
  4732  0026                     crc_verify@message:	
  4733                           ; 1 bytes @ 0x6
  4734                           
  4735  0026                     crc_append@message:	
  4736                           ; 2 bytes @ 0x6
  4737                           
  4738                           
  4739                           ; 2 bytes @ 0x6
  4740  0026                     	ds	1
  4741  0027                     my_flash_system_write@flashAddr:	
  4742  0027                     calc_rs_lo_avg@t32:	
  4743                           ; 2 bytes @ 0x7
  4744                           
  4745                           
  4746                           ; 4 bytes @ 0x7
  4747  0027                     	ds	1
  4748  0028                     crc_verify@n:	
  4749  0028                     crc_append@n:	
  4750                           ; 2 bytes @ 0x8
  4751                           
  4752  0028                     ___aldiv@dividend:	
  4753                           ; 2 bytes @ 0x8
  4754                           
  4755                           
  4756                           ; 4 bytes @ 0x8
  4757  0028                     	ds	1
  4758  0029                     ??_calc_temp_rs:	
  4759  0029                     ??_calc_temp_rc:	
  4760                           ; 1 bytes @ 0x9
  4761                           
  4762  0029                     my_flash_system_write@i:	
  4763                           ; 1 bytes @ 0x9
  4764                           
  4765                           
  4766                           ; 1 bytes @ 0x9
  4767  0029                     	ds	1
  4768  002A                     crc_verify@crccal:	
  4769  002A                     crc_append@crc:	
  4770                           ; 2 bytes @ 0xA
  4771                           
  4772                           
  4773                           ; 2 bytes @ 0xA
  4774  002A                     	ds	1
  4775  002B                     calc_rs_lo_avg@i:	
  4776                           
  4777                           ; 1 bytes @ 0xB
  4778  002B                     	ds	1
  4779  002C                     ?_modbus_response_illgeal_function:	
  4780  002C                     ??_modbus_response_write_single_register:	
  4781                           ; 1 bytes @ 0xC
  4782                           
  4783  002C                     ??_modbus_response_write_mult_register:	
  4784                           ; 1 bytes @ 0xC
  4785                           
  4786  002C                     ??_modbus_response_command:	
  4787                           ; 1 bytes @ 0xC
  4788                           
  4789  002C                     modbus_response_illgeal_function@errcode:	
  4790                           ; 1 bytes @ 0xC
  4791                           
  4792  002C                     ___aldiv@counter:	
  4793                           ; 1 bytes @ 0xC
  4794                           
  4795  002C                     crc_verify@expected:	
  4796                           ; 1 bytes @ 0xC
  4797                           
  4798                           
  4799                           ; 2 bytes @ 0xC
  4800  002C                     	ds	1
  4801  002D                     ??_modbus_response_illgeal_function:	
  4802  002D                     modbus_response_write_mult_register@startAddr:	
  4803                           ; 1 bytes @ 0xD
  4804                           
  4805  002D                     ___aldiv@sign:	
  4806                           ; 1 bytes @ 0xD
  4807                           
  4808                           
  4809                           ; 1 bytes @ 0xD
  4810  002D                     	ds	1
  4811  002E                     ??_sys_data_init:	
  4812  002E                     modbus_response_illgeal_function@buf:	
  4813                           ; 1 bytes @ 0xE
  4814                           
  4815  002E                     modbus_response_write_mult_register@len:	
  4816                           ; 1 bytes @ 0xE
  4817                           
  4818  002E                     modbus_response_command@tmpAddr:	
  4819                           ; 1 bytes @ 0xE
  4820                           
  4821  002E                     ___aldiv@quotient:	
  4822                           ; 2 bytes @ 0xE
  4823                           
  4824                           
  4825                           ; 4 bytes @ 0xE
  4826  002E                     	ds	1
  4827  002F                     modbus_response_illgeal_function@pmdbs:	
  4828  002F                     modbus_response_write_mult_register@rbuf:	
  4829                           ; 1 bytes @ 0xF
  4830                           
  4831                           
  4832                           ; 1 bytes @ 0xF
  4833  002F                     	ds	1
  4834  0030                     modbus_response_write_single_register@fiSave:	
  4835  0030                     modbus_response_write_mult_register@stb:	
  4836                           ; 1 bytes @ 0x10
  4837                           
  4838  0030                     modbus_response_command@startAddr:	
  4839                           ; 1 bytes @ 0x10
  4840                           
  4841                           
  4842                           ; 2 bytes @ 0x10
  4843  0030                     	ds	1
  4844  0031                     modbus_response_write_single_register@t16:	
  4845                           
  4846                           ; 2 bytes @ 0x11
  4847  0031                     	ds	1
  4848  0032                     ??_pid_pwm1_idrv_run:	
  4849  0032                     ?_calc_expect_vout_adc_value:	
  4850                           ; 1 bytes @ 0x12
  4851                           
  4852  0032                     modbus_response_command@i:	
  4853                           ; 2 bytes @ 0x12
  4854                           
  4855  0032                     calc_expect_vout_adc_value@x:	
  4856                           ; 1 bytes @ 0x12
  4857                           
  4858                           
  4859                           ; 2 bytes @ 0x12
  4860  0032                     	ds	1
  4861  0033                     modbus_response_write_single_register@i:	
  4862  0033                     modbus_response_command@pmdbs:	
  4863                           ; 1 bytes @ 0x13
  4864                           
  4865                           
  4866                           ; 1 bytes @ 0x13
  4867  0033                     	ds	1
  4868  0034                     ??_calc_expect_vout_adc_value:	
  4869  0034                     modbus_response_write_single_register@pmdbs:	
  4870                           ; 1 bytes @ 0x14
  4871                           
  4872  0034                     modbus_response_command@len:	
  4873                           ; 1 bytes @ 0x14
  4874                           
  4875  0034                     sys_data_init@ret:	
  4876                           ; 1 bytes @ 0x14
  4877                           
  4878                           
  4879                           ; 2 bytes @ 0x14
  4880  0034                     	ds	1
  4881  0035                     modbus_response_write_single_register@rbuf:	
  4882  0035                     modbus_response_command@rbuf:	
  4883                           ; 1 bytes @ 0x15
  4884                           
  4885                           
  4886                           ; 1 bytes @ 0x15
  4887  0035                     	ds	1
  4888  0036                     sys_data_init@i:	
  4889  0036                     modbus_response_write_single_register@startAddr:	
  4890                           ; 2 bytes @ 0x16
  4891                           
  4892  0036                     modbus_response_command@tempData:	
  4893                           ; 2 bytes @ 0x16
  4894                           
  4895                           
  4896                           ; 2 bytes @ 0x16
  4897  0036                     	ds	2
  4898  0038                     ?_modbus_response_process:	
  4899  0038                     modbus_response_process@rlen:	
  4900                           ; 1 bytes @ 0x18
  4901                           
  4902                           
  4903                           ; 2 bytes @ 0x18
  4904  0038                     	ds	2
  4905  003A                     ??_modbus_response_process:	
  4906  003A                     pid_pwm1_idrv_run@t32:	
  4907                           ; 1 bytes @ 0x1A
  4908                           
  4909                           
  4910                           ; 4 bytes @ 0x1A
  4911  003A                     	ds	1
  4912  003B                     modbus_response_process@resp:	
  4913                           
  4914                           ; 1 bytes @ 0x1B
  4915  003B                     	ds	1
  4916  003C                     modbus_response_process@pmdbs:	
  4917                           
  4918                           ; 1 bytes @ 0x1C
  4919  003C                     	ds	1
  4920  003D                     modbus_response_process@rbuf:	
  4921                           
  4922                           ; 1 bytes @ 0x1D
  4923  003D                     	ds	5
  4924  0042                     calc_expect_vout_adc_value@t32:	
  4925                           
  4926                           ; 4 bytes @ 0x22
  4927  0042                     	ds	4
  4928  0046                     calc_expect_vout_adc_value@i:	
  4929                           
  4930                           ; 1 bytes @ 0x26
  4931  0046                     	ds	1
  4932                           
  4933                           	psect	maintext
  4934  0D72                     __pmaintext:	
  4935 ;;
  4936 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4937 ;;
  4938 ;; *************** function _main *****************
  4939 ;; Defined at:
  4940 ;;		line 17 in file "src/app/main.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;		None
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;		None
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  1    wreg      void 
  4947 ;; Registers used:
  4948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4949 ;; Tracked objects:
  4950 ;;		On entry : B1F/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4956 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4957 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4958 ;;Total ram usage:        2 bytes
  4959 ;; Hardware stack levels required when called:    6
  4960 ;; This function calls:
  4961 ;;		_SYSTEM_Initialize
  4962 ;;		_adc_sample
  4963 ;;		_calc_expect_vout_adc_value
  4964 ;;		_calc_rs_lo_avg
  4965 ;;		_calc_temp_rc
  4966 ;;		_calc_temp_rs
  4967 ;;		_m_mem_cpy_len
  4968 ;;		_modbus_response_process
  4969 ;;		_pid_pwm1_idrv_run
  4970 ;;		_pid_pwm2_vout_run
  4971 ;;		_sys_data_init
  4972 ;;		_uart_received_start
  4973 ;;		_uart_send_len
  4974 ;; This function is called by:
  4975 ;;		Startup code after reset
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           
  4980                           ;psect for function _main
  4981  0D72                     _main:	
  4982                           
  4983                           ;main.c: 19: __nop();
  4984                           
  4985                           ;incstack = 0
  4986                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4987  0D72  0000               	nop
  4988                           
  4989                           ;main.c: 20: isRunInBoot=0xaa;
  4990  0D73  30AA               	movlw	170
  4991  0D74  0021               	movlb	1	; select bank1
  4992  0D75  00D6               	movwf	??_main^(0+128)
  4993  0D76  0856               	movf	??_main^(0+128),w
  4994  0D77  003F               	movlb	31	; select bank31
  4995  0D78  00FF               	movwf	127	;volatile
  4996                           
  4997                           ;main.c: 21: isRunInBoot=isRunInBoot;
  4998  0D79  087F               	movf	127,w	;volatile
  4999  0D7A  0021               	movlb	1	; select bank1
  5000  0D7B  00D6               	movwf	??_main^(0+128)
  5001  0D7C  0856               	movf	??_main^(0+128),w
  5002  0D7D  003F               	movlb	31	; select bank31
  5003  0D7E  00FF               	movwf	127	;volatile
  5004                           
  5005                           ;main.c: 22: SYSTEM_Initialize();
  5006  0D7F  319D  25D3  318D   	fcall	_SYSTEM_Initialize
  5007                           
  5008                           ;main.c: 23: do{ (INTCONbits.GIE = 1); (INTCONbits.PEIE = 1); }while(0);;
  5009  0D82  178B               	bsf	11,7	;volatile
  5010  0D83  170B               	bsf	11,6	;volatile
  5011                           
  5012                           ;main.c: 26: TXSTAbits.TXEN=0;
  5013  0D84  0023               	movlb	3	; select bank3
  5014  0D85  129E               	bcf	30,5	;volatile
  5015                           
  5016                           ;main.c: 27: sys_data_init();
  5017  0D86  3195  25B0  318D   	fcall	_sys_data_init
  5018                           
  5019                           ;main.c: 30: modbusBuf[0]=0x55;
  5020  0D89  3055               	movlw	85
  5021  0D8A  0021               	movlb	1	; select bank1
  5022  0D8B  00D6               	movwf	??_main^(0+128)
  5023  0D8C  0856               	movf	??_main^(0+128),w
  5024  0D8D  0022               	movlb	2	; select bank2
  5025  0D8E  00A0               	movwf	_modbusBuf^(0+256)
  5026                           
  5027                           ;main.c: 31: modbusBuf[1]=0xaa;
  5028  0D8F  30AA               	movlw	170
  5029  0D90  0021               	movlb	1	; select bank1
  5030  0D91  00D6               	movwf	??_main^(0+128)
  5031  0D92  0856               	movf	??_main^(0+128),w
  5032  0D93  0022               	movlb	2	; select bank2
  5033  0D94  00A1               	movwf	(_modbusBuf^(0+256)+1)
  5034                           
  5035                           ;main.c: 32: uart_send_len(modbusBuf,2);
  5036  0D95  3002               	movlw	2
  5037  0D96  0021               	movlb	1	; select bank1
  5038  0D97  00D6               	movwf	??_main^(0+128)
  5039  0D98  0856               	movf	??_main^(0+128),w
  5040  0D99  00F1               	movwf	uart_send_len@len
  5041  0D9A  3020               	movlw	(low (_modbusBuf| (0+256)))& (0+255)
  5042  0D9B  319E  267A  318D   	fcall	_uart_send_len
  5043  0D9E                     l5123:	
  5044                           ;main.c: 33: while (1){
  5045                           
  5046                           
  5047                           ;main.c: 34: if(Event & (1<<2)){
  5048  0D9E  0020               	movlb	0	; select bank0
  5049  0D9F  1D6B               	btfss	_Event,2	;volatile
  5050  0DA0  2E47               	goto	l5153
  5051                           
  5052                           ;main.c: 35: Event &= ~(1<<2);
  5053  0DA1  30FB               	movlw	251
  5054  0DA2  0021               	movlb	1	; select bank1
  5055  0DA3  00D6               	movwf	??_main^(0+128)
  5056  0DA4  0856               	movf	??_main^(0+128),w
  5057  0DA5  0020               	movlb	0	; select bank0
  5058  0DA6  05EB               	andwf	_Event,f	;volatile
  5059                           
  5060                           ;main.c: 37: rtAdcValueRsLo=adc_sample(channel_AN6,1,32);
  5061  0DA7  01F4               	clrf	adc_sample@gfvr
  5062  0DA8  0AF4               	incf	adc_sample@gfvr,f
  5063  0DA9  3020               	movlw	32
  5064  0DAA  0021               	movlb	1	; select bank1
  5065  0DAB  00D6               	movwf	??_main^(0+128)
  5066  0DAC  0856               	movf	??_main^(0+128),w
  5067  0DAD  00F5               	movwf	adc_sample@num
  5068  0DAE  3006               	movlw	6
  5069  0DAF  3192  22D1  318D   	fcall	_adc_sample
  5070  0DB2  0875               	movf	?_adc_sample+1,w
  5071  0DB3  0020               	movlb	0	; select bank0
  5072  0DB4  00E2               	movwf	_rtAdcValueRsLo+1
  5073  0DB5  0874               	movf	?_adc_sample,w
  5074  0DB6  00E1               	movwf	_rtAdcValueRsLo
  5075                           
  5076                           ;main.c: 39: rtAdcValueRsHi=adc_sample(channel_AN5,3,32);
  5077  0DB7  3003               	movlw	3
  5078  0DB8  0021               	movlb	1	; select bank1
  5079  0DB9  00D6               	movwf	??_main^(0+128)
  5080  0DBA  0856               	movf	??_main^(0+128),w
  5081  0DBB  00F4               	movwf	adc_sample@gfvr
  5082  0DBC  3020               	movlw	32
  5083  0DBD  00D7               	movwf	(??_main+1)^(0+128)
  5084  0DBE  0857               	movf	(??_main+1)^(0+128),w
  5085  0DBF  00F5               	movwf	adc_sample@num
  5086  0DC0  3005               	movlw	5
  5087  0DC1  3192  22D1  318D   	fcall	_adc_sample
  5088  0DC4  0875               	movf	?_adc_sample+1,w
  5089  0DC5  0020               	movlb	0	; select bank0
  5090  0DC6  00E0               	movwf	_rtAdcValueRsHi+1
  5091  0DC7  0874               	movf	?_adc_sample,w
  5092  0DC8  00DF               	movwf	_rtAdcValueRsHi
  5093                           
  5094                           ;main.c: 42: rtAdcValueRcLo=adc_sample(channel_AN4,3,32);
  5095  0DC9  3003               	movlw	3
  5096  0DCA  0021               	movlb	1	; select bank1
  5097  0DCB  00D6               	movwf	??_main^(0+128)
  5098  0DCC  0856               	movf	??_main^(0+128),w
  5099  0DCD  00F4               	movwf	adc_sample@gfvr
  5100  0DCE  3020               	movlw	32
  5101  0DCF  00D7               	movwf	(??_main+1)^(0+128)
  5102  0DD0  0857               	movf	(??_main+1)^(0+128),w
  5103  0DD1  00F5               	movwf	adc_sample@num
  5104  0DD2  3004               	movlw	4
  5105  0DD3  3192  22D1  318D   	fcall	_adc_sample
  5106  0DD6  0875               	movf	?_adc_sample+1,w
  5107  0DD7  0020               	movlb	0	; select bank0
  5108  0DD8  00DE               	movwf	_rtAdcValueRcLo+1
  5109  0DD9  0874               	movf	?_adc_sample,w
  5110  0DDA  00DD               	movwf	_rtAdcValueRcLo
  5111                           
  5112                           ;main.c: 43: rtAdcValueRcLo>>=1;
  5113  0DDB  3001               	movlw	1
  5114  0DDC                     u4625:	
  5115  0DDC  36DE               	lsrf	_rtAdcValueRcLo+1,f
  5116  0DDD  0CDD               	rrf	_rtAdcValueRcLo,f
  5117  0DDE  0B89               	decfsz	9,f
  5118  0DDF  2DDC               	goto	u4625
  5119                           
  5120                           ;main.c: 44: rtAdcValueRcHi=adc_sample(channel_AN2,3,32);
  5121  0DE0  3003               	movlw	3
  5122  0DE1  0021               	movlb	1	; select bank1
  5123  0DE2  00D6               	movwf	??_main^(0+128)
  5124  0DE3  0856               	movf	??_main^(0+128),w
  5125  0DE4  00F4               	movwf	adc_sample@gfvr
  5126  0DE5  3020               	movlw	32
  5127  0DE6  00D7               	movwf	(??_main+1)^(0+128)
  5128  0DE7  0857               	movf	(??_main+1)^(0+128),w
  5129  0DE8  00F5               	movwf	adc_sample@num
  5130  0DE9  3002               	movlw	2
  5131  0DEA  3192  22D1  318D   	fcall	_adc_sample
  5132  0DED  0875               	movf	?_adc_sample+1,w
  5133  0DEE  0020               	movlb	0	; select bank0
  5134  0DEF  00DC               	movwf	_rtAdcValueRcHi+1
  5135  0DF0  0874               	movf	?_adc_sample,w
  5136  0DF1  00DB               	movwf	_rtAdcValueRcHi
  5137                           
  5138                           ;main.c: 45: rtAdcValueRcHi>>=1;
  5139  0DF2  3001               	movlw	1
  5140  0DF3                     u4635:	
  5141  0DF3  36DC               	lsrf	_rtAdcValueRcHi+1,f
  5142  0DF4  0CDB               	rrf	_rtAdcValueRcHi,f
  5143  0DF5  0B89               	decfsz	9,f
  5144  0DF6  2DF3               	goto	u4635
  5145                           
  5146                           ;main.c: 47: rtAdcValueVoFb=adc_sample(channel_AN7,3,32);
  5147  0DF7  3003               	movlw	3
  5148  0DF8  0021               	movlb	1	; select bank1
  5149  0DF9  00D6               	movwf	??_main^(0+128)
  5150  0DFA  0856               	movf	??_main^(0+128),w
  5151  0DFB  00F4               	movwf	adc_sample@gfvr
  5152  0DFC  3020               	movlw	32
  5153  0DFD  00D7               	movwf	(??_main+1)^(0+128)
  5154  0DFE  0857               	movf	(??_main+1)^(0+128),w
  5155  0DFF  00F5               	movwf	adc_sample@num
  5156  0E00  3007               	movlw	7
  5157  0E01  3192  22D1  318D   	fcall	_adc_sample
  5158  0E04  0875               	movf	?_adc_sample+1,w
  5159  0E05  0020               	movlb	0	; select bank0
  5160  0E06  00DA               	movwf	_rtAdcValueVoFb+1
  5161  0E07  0874               	movf	?_adc_sample,w
  5162  0E08  00D9               	movwf	_rtAdcValueVoFb
  5163                           
  5164                           ;main.c: 48: rtAdcValueVoFb>>=1;
  5165  0E09  3001               	movlw	1
  5166  0E0A                     u4645:	
  5167  0E0A  36DA               	lsrf	_rtAdcValueVoFb+1,f
  5168  0E0B  0CD9               	rrf	_rtAdcValueVoFb,f
  5169  0E0C  0B89               	decfsz	9,f
  5170  0E0D  2E0A               	goto	u4645
  5171                           
  5172                           ;main.c: 50: resRc=calc_temp_rc();
  5173  0E0E  3197  2727  318D   	fcall	_calc_temp_rc
  5174  0E11  0020               	movlb	0	; select bank0
  5175  0E12  0826               	movf	?_calc_temp_rc+1,w
  5176  0E13  00EF               	movwf	_resRc+1
  5177  0E14  0825               	movf	?_calc_temp_rc,w
  5178  0E15  00EE               	movwf	_resRc
  5179                           
  5180                           ;main.c: 51: resRs=calc_temp_rs();
  5181  0E16  3194  248F  318D   	fcall	_calc_temp_rs
  5182  0E19  0020               	movlb	0	; select bank0
  5183  0E1A  0826               	movf	?_calc_temp_rs+1,w
  5184  0E1B  00ED               	movwf	_resRs+1
  5185  0E1C  0825               	movf	?_calc_temp_rs,w
  5186  0E1D  00EC               	movwf	_resRs
  5187                           
  5188                           ;main.c: 53: pid_pwm1_idrv_run();
  5189  0E1E  318A  22A9  318D   	fcall	_pid_pwm1_idrv_run
  5190                           
  5191                           ;main.c: 54: rsLoAvg=calc_rs_lo_avg(rtAdcValueRsLo);
  5192  0E21  0020               	movlb	0	; select bank0
  5193  0E22  0862               	movf	_rtAdcValueRsLo+1,w
  5194  0E23  00A6               	movwf	calc_rs_lo_avg@x+1
  5195  0E24  0861               	movf	_rtAdcValueRsLo,w
  5196  0E25  00A5               	movwf	calc_rs_lo_avg@x
  5197  0E26  3193  232E  318D   	fcall	_calc_rs_lo_avg
  5198  0E29  0020               	movlb	0	; select bank0
  5199  0E2A  0826               	movf	?_calc_rs_lo_avg+1,w
  5200  0E2B  00D4               	movwf	_rsLoAvg+1
  5201  0E2C  0825               	movf	?_calc_rs_lo_avg,w
  5202  0E2D  00D3               	movwf	_rsLoAvg
  5203                           
  5204                           ;main.c: 55: voExpectMv=calc_expect_vout_adc_value(rsLoAvg);
  5205  0E2E  0854               	movf	_rsLoAvg+1,w
  5206  0E2F  00B3               	movwf	calc_expect_vout_adc_value@x+1
  5207  0E30  0853               	movf	_rsLoAvg,w
  5208  0E31  00B2               	movwf	calc_expect_vout_adc_value@x
  5209  0E32  3188  20B5  318D   	fcall	_calc_expect_vout_adc_value
  5210  0E35  0020               	movlb	0	; select bank0
  5211  0E36  0833               	movf	?_calc_expect_vout_adc_value+1,w
  5212  0E37  0021               	movlb	1	; select bank1
  5213  0E38  00C7               	movwf	(_voExpectMv+1)^(0+128)
  5214  0E39  0020               	movlb	0	; select bank0
  5215  0E3A  0832               	movf	?_calc_expect_vout_adc_value,w
  5216  0E3B  0021               	movlb	1	; select bank1
  5217  0E3C  00C6               	movwf	_voExpectMv^(0+128)
  5218                           
  5219                           ;main.c: 56: voExpectAdcValue=(voExpectMv<<1);
  5220  0E3D  3546               	lslf	_voExpectMv^(0+128),w
  5221  0E3E  0020               	movlb	0	; select bank0
  5222  0E3F  00D5               	movwf	_voExpectAdcValue
  5223  0E40  0021               	movlb	1	; select bank1
  5224  0E41  0D47               	rlf	(_voExpectMv+1)^(0+128),w
  5225  0E42  0020               	movlb	0	; select bank0
  5226  0E43  00D6               	movwf	_voExpectAdcValue+1
  5227                           
  5228                           ;main.c: 57: pid_pwm2_vout_run();
  5229  0E44  3195  251F  318D   	fcall	_pid_pwm2_vout_run
  5230  0E47                     l5153:	
  5231                           
  5232                           ;main.c: 59: };main.c: 61: if(Event & (1<<3)){
  5233  0E47  0020               	movlb	0	; select bank0
  5234  0E48  1DEB               	btfss	_Event,3	;volatile
  5235  0E49  2E50               	goto	l5157
  5236                           
  5237                           ;main.c: 62: Event &= ~(1<<3);
  5238  0E4A  30F7               	movlw	247
  5239  0E4B  0021               	movlb	1	; select bank1
  5240  0E4C  00D6               	movwf	??_main^(0+128)
  5241  0E4D  0856               	movf	??_main^(0+128),w
  5242  0E4E  0020               	movlb	0	; select bank0
  5243  0E4F  05EB               	andwf	_Event,f	;volatile
  5244  0E50                     l5157:	
  5245                           
  5246                           ;main.c: 104: };main.c: 106: if(Event & (1<<0)){
  5247  0E50  1C6B               	btfss	_Event,0	;volatile
  5248  0E51  2E81               	goto	l5167
  5249                           
  5250                           ;main.c: 107: Event &= ~ (1<<0);
  5251  0E52  30FE               	movlw	254
  5252  0E53  0021               	movlb	1	; select bank1
  5253  0E54  00D6               	movwf	??_main^(0+128)
  5254  0E55  0856               	movf	??_main^(0+128),w
  5255  0E56  0020               	movlb	0	; select bank0
  5256  0E57  05EB               	andwf	_Event,f	;volatile
  5257                           
  5258                           ;main.c: 108: if(eusartRxCount>0){
  5259  0E58  086A               	movf	_eusartRxCount,w	;volatile
  5260  0E59  1903               	btfsc	3,2
  5261  0E5A  2E7E               	goto	l5165
  5262                           
  5263                           ;main.c: 109: m_mem_cpy_len(modbusBuf,eusartRxBuffer,eusartRxCount);
  5264  0E5B  3020               	movlw	low _modbusBuf
  5265  0E5C  00F1               	movwf	m_mem_cpy_len@d
  5266  0E5D  3001               	movlw	high _modbusBuf
  5267  0E5E  00F2               	movwf	m_mem_cpy_len@d+1
  5268  0E5F  3040               	movlw	low _eusartRxBuffer
  5269  0E60  00F3               	movwf	m_mem_cpy_len@s
  5270  0E61  3001               	movlw	high _eusartRxBuffer
  5271  0E62  00F4               	movwf	m_mem_cpy_len@s+1
  5272  0E63  086A               	movf	_eusartRxCount,w	;volatile
  5273  0E64  0021               	movlb	1	; select bank1
  5274  0E65  00D6               	movwf	??_main^(0+128)
  5275  0E66  01D7               	clrf	(??_main^(0+128)+1)
  5276  0E67  0856               	movf	??_main^(0+128),w
  5277  0E68  00F5               	movwf	m_mem_cpy_len@len
  5278  0E69  0857               	movf	(??_main+1)^(0+128),w
  5279  0E6A  00F6               	movwf	m_mem_cpy_len@len+1
  5280  0E6B  319E  265D  318D   	fcall	_m_mem_cpy_len
  5281                           
  5282                           ;main.c: 110: modbus_response_process(modbusBuf,eusartRxCount);
  5283  0E6E  0020               	movlb	0	; select bank0
  5284  0E6F  086A               	movf	_eusartRxCount,w	;volatile
  5285  0E70  0021               	movlb	1	; select bank1
  5286  0E71  00D6               	movwf	??_main^(0+128)
  5287  0E72  01D7               	clrf	(??_main^(0+128)+1)
  5288  0E73  0856               	movf	??_main^(0+128),w
  5289  0E74  0020               	movlb	0	; select bank0
  5290  0E75  00B8               	movwf	modbus_response_process@rlen
  5291  0E76  0021               	movlb	1	; select bank1
  5292  0E77  0857               	movf	(??_main+1)^(0+128),w
  5293  0E78  0020               	movlb	0	; select bank0
  5294  0E79  00B9               	movwf	modbus_response_process@rlen+1
  5295  0E7A  3020               	movlw	(low (_modbusBuf| (0+256)))& (0+255)
  5296  0E7B  3192  2227  318D   	fcall	_modbus_response_process
  5297  0E7E                     l5165:	
  5298                           
  5299                           ;main.c: 112: };main.c: 114: uart_received_start();
  5300  0E7E  319C  24EB  318D   	fcall	_uart_received_start
  5301  0E81                     l5167:	
  5302                           
  5303                           ;main.c: 115: };main.c: 117: __nop();
  5304  0E81  0000               	nop
  5305  0E82  2D9E               	goto	l5123
  5306  0E83                     __end_of_main:	
  5307                           
  5308                           	psect	text1
  5309  1CEB                     __ptext1:	
  5310 ;; *************** function _uart_received_start *****************
  5311 ;; Defined at:
  5312 ;;		line 52 in file "src/api/my_uart.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;		None
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;		None
  5317 ;; Return value:  Size  Location     Type
  5318 ;;                  1    wreg      void 
  5319 ;; Registers used:
  5320 ;;		status,2
  5321 ;; Tracked objects:
  5322 ;;		On entry : 0/0
  5323 ;;		On exit  : 0/0
  5324 ;;		Unchanged: 0/0
  5325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5330 ;;Total ram usage:        0 bytes
  5331 ;; Hardware stack levels used:    1
  5332 ;; Hardware stack levels required when called:    1
  5333 ;; This function calls:
  5334 ;;		Nothing
  5335 ;; This function is called by:
  5336 ;;		_main
  5337 ;; This function uses a non-reentrant model
  5338 ;;
  5339                           
  5340                           
  5341                           ;psect for function _uart_received_start
  5342  1CEB                     _uart_received_start:	
  5343                           
  5344                           ;my_uart.c: 54: eusartRxCount=0;
  5345                           
  5346                           ;incstack = 0
  5347                           ; Regs used in _uart_received_start: [status,2]
  5348  1CEB  0020               	movlb	0	; select bank0
  5349  1CEC  01EA               	clrf	_eusartRxCount	;volatile
  5350                           
  5351                           ;my_uart.c: 63: eusartRxIdleTime_ms=0;
  5352  1CED  01FC               	clrf	_eusartRxIdleTime_ms	;volatile
  5353  1CEE  0008               	return
  5354  1CEF                     __end_of_uart_received_start:	
  5355                           
  5356                           	psect	text2
  5357  15B0                     __ptext2:	
  5358 ;; *************** function _sys_data_init *****************
  5359 ;; Defined at:
  5360 ;;		line 104 in file "src/api/sysData.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;		None
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;  i               2   22[BANK0 ] unsigned int 
  5365 ;;  ret             2   20[BANK0 ] unsigned int 
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  2  727[None  ] unsigned int 
  5368 ;; Registers used:
  5369 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5376 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5377 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5378 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5379 ;;Total ram usage:       10 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; Hardware stack levels required when called:    4
  5382 ;; This function calls:
  5383 ;;		___wmul
  5384 ;;		_crc_verify
  5385 ;;		_my_flash_system_read
  5386 ;;		_sys_data_save
  5387 ;; This function is called by:
  5388 ;;		_main
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           
  5393                           ;psect for function _sys_data_init
  5394  15B0                     _sys_data_init:	
  5395                           
  5396                           ;sysData.c: 106: uint16_t ret,i;;sysData.c: 107: my_flash_system_read((uint8_t*)&sysData
      +                          ,sizeof(sysData_t));
  5397                           
  5398                           ;incstack = 0
  5399                           ; Regs used in _sys_data_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5400  15B0  305C               	movlw	92
  5401  15B1  00F1               	movwf	my_flash_system_read@buf
  5402  15B2  3023               	movlw	35
  5403  15B3  00F2               	movwf	my_flash_system_read@buf+1
  5404  15B4  3084               	movlw	132
  5405  15B5  00F3               	movwf	my_flash_system_read@len
  5406  15B6  3000               	movlw	0
  5407  15B7  00F4               	movwf	my_flash_system_read@len+1
  5408  15B8  3190  20CA  3195   	fcall	_my_flash_system_read
  5409                           
  5410                           ;sysData.c: 108: ret=crc_verify((uint8_t*)&sysData,sizeof(sysData_t));
  5411  15BB  305C               	movlw	92
  5412  15BC  0020               	movlb	0	; select bank0
  5413  15BD  00A6               	movwf	crc_verify@message
  5414  15BE  3023               	movlw	35
  5415  15BF  00A7               	movwf	crc_verify@message+1
  5416  15C0  3084               	movlw	132
  5417  15C1  00A8               	movwf	crc_verify@n
  5418  15C2  3000               	movlw	0
  5419  15C3  00A9               	movwf	crc_verify@n+1
  5420  15C4  3190  205C  3195   	fcall	_crc_verify
  5421  15C7  0020               	movlb	0	; select bank0
  5422  15C8  00AE               	movwf	??_sys_data_init
  5423  15C9  01AF               	clrf	??_sys_data_init+1
  5424  15CA  082E               	movf	??_sys_data_init,w
  5425  15CB  00B4               	movwf	sys_data_init@ret
  5426  15CC  082F               	movf	??_sys_data_init+1,w
  5427  15CD  00B5               	movwf	sys_data_init@ret+1
  5428                           
  5429                           ;sysData.c: 109: if(!ret){
  5430  15CE  0834               	movf	sys_data_init@ret,w
  5431  15CF  0435               	iorwf	sys_data_init@ret+1,w
  5432  15D0  1D03               	btfss	3,2
  5433  15D1  0008               	return
  5434                           
  5435                           ;sysData.c: 110: sysData.pidSetFlg0=0x55;
  5436  15D2  305C               	movlw	92
  5437  15D3  0086               	movwf	6
  5438  15D4  3023               	movlw	35
  5439  15D5  0087               	movwf	7
  5440  15D6  3055               	movlw	85
  5441  15D7  3FC0               	movwi [0]fsr1
  5442                           
  5443                           ;sysData.c: 111: sysData.pidSetFlg1=0xaa;
  5444  15D8  305D               	movlw	93
  5445  15D9  0086               	movwf	6
  5446  15DA  3023               	movlw	35
  5447  15DB  0087               	movwf	7
  5448  15DC  30AA               	movlw	170
  5449  15DD  0081               	movwf	1
  5450                           
  5451                           ;sysData.c: 112: sysData.id=0x01;
  5452  15DE  305E               	movlw	94
  5453  15DF  0086               	movwf	6
  5454  15E0  3023               	movlw	35
  5455  15E1  0087               	movwf	7
  5456  15E2  3001               	movlw	1
  5457  15E3  0081               	movwf	1
  5458                           
  5459                           ;sysData.c: 113: for(i=0;i<30;i++){
  5460  15E4  01B6               	clrf	sys_data_init@i
  5461  15E5  01B7               	clrf	sys_data_init@i+1
  5462  15E6  3000               	movlw	0
  5463  15E7  0237               	subwf	sys_data_init@i+1,w
  5464  15E8  301E               	movlw	30
  5465  15E9  1903               	skipnz
  5466  15EA  0236               	subwf	sys_data_init@i,w
  5467  15EB  1803               	btfsc	3,0
  5468  15EC  2E3E               	goto	l5039
  5469  15ED                     l5033:	
  5470                           
  5471                           ;sysData.c: 115: sysData.calibRsAdc[i]=9400+i*720;
  5472  15ED  0837               	movf	sys_data_init@i+1,w
  5473  15EE  00F2               	movwf	___wmul@multiplier+1
  5474  15EF  0836               	movf	sys_data_init@i,w
  5475  15F0  00F1               	movwf	___wmul@multiplier
  5476  15F1  30D0               	movlw	208
  5477  15F2  00F3               	movwf	___wmul@multiplicand
  5478  15F3  3002               	movlw	2
  5479  15F4  00F4               	movwf	___wmul@multiplicand+1
  5480  15F5  319D  25EE  3195   	fcall	___wmul
  5481  15F8  0871               	movf	?___wmul,w
  5482  15F9  3EB8               	addlw	184
  5483  15FA  0020               	movlb	0	; select bank0
  5484  15FB  00AE               	movwf	??_sys_data_init
  5485  15FC  3024               	movlw	36
  5486  15FD  3D72               	addwfc	?___wmul+1,w
  5487  15FE  00AF               	movwf	??_sys_data_init+1
  5488  15FF  0837               	movf	sys_data_init@i+1,w
  5489  1600  00B1               	movwf	??_sys_data_init+3
  5490  1601  0836               	movf	sys_data_init@i,w
  5491  1602  00B0               	movwf	??_sys_data_init+2
  5492  1603  35B0               	lslf	??_sys_data_init+2,f
  5493  1604  0DB1               	rlf	??_sys_data_init+3,f
  5494  1605  3066               	movlw	102
  5495  1606  00B2               	movwf	??_sys_data_init+4
  5496  1607  3023               	movlw	35
  5497  1608  00B3               	movwf	??_sys_data_init+5
  5498  1609  0830               	movf	??_sys_data_init+2,w
  5499  160A  0732               	addwf	??_sys_data_init+4,w
  5500  160B  0086               	movwf	6
  5501  160C  0831               	movf	??_sys_data_init+3,w
  5502  160D  3D33               	addwfc	??_sys_data_init+5,w
  5503  160E  0087               	movwf	7
  5504  160F  082E               	movf	??_sys_data_init,w
  5505  1610  3FC0               	movwi [0]fsr1
  5506  1611  082F               	movf	??_sys_data_init+1,w
  5507  1612  3FC1               	movwi [1]fsr1
  5508                           
  5509                           ;sysData.c: 116: sysData.calibVoMV[i]=i*333;
  5510  1613  0837               	movf	sys_data_init@i+1,w
  5511  1614  00F2               	movwf	___wmul@multiplier+1
  5512  1615  0836               	movf	sys_data_init@i,w
  5513  1616  00F1               	movwf	___wmul@multiplier
  5514  1617  304D               	movlw	77
  5515  1618  00F3               	movwf	___wmul@multiplicand
  5516  1619  3001               	movlw	1
  5517  161A  00F4               	movwf	___wmul@multiplicand+1
  5518  161B  319D  25EE  3195   	fcall	___wmul
  5519  161E  0020               	movlb	0	; select bank0
  5520  161F  0837               	movf	sys_data_init@i+1,w
  5521  1620  00AF               	movwf	??_sys_data_init+1
  5522  1621  0836               	movf	sys_data_init@i,w
  5523  1622  00AE               	movwf	??_sys_data_init
  5524  1623  35AE               	lslf	??_sys_data_init,f
  5525  1624  0DAF               	rlf	??_sys_data_init+1,f
  5526  1625  30A2               	movlw	162
  5527  1626  00B0               	movwf	??_sys_data_init+2
  5528  1627  3023               	movlw	35
  5529  1628  00B1               	movwf	??_sys_data_init+3
  5530  1629  082E               	movf	??_sys_data_init,w
  5531  162A  0730               	addwf	??_sys_data_init+2,w
  5532  162B  0086               	movwf	6
  5533  162C  082F               	movf	??_sys_data_init+1,w
  5534  162D  3D31               	addwfc	??_sys_data_init+3,w
  5535  162E  0087               	movwf	7
  5536  162F  0871               	movf	?___wmul,w
  5537  1630  3FC0               	movwi [0]fsr1
  5538  1631  0872               	movf	?___wmul+1,w
  5539  1632  3FC1               	movwi [1]fsr1
  5540  1633  3001               	movlw	1
  5541  1634  07B6               	addwf	sys_data_init@i,f
  5542  1635  3000               	movlw	0
  5543  1636  3DB7               	addwfc	sys_data_init@i+1,f
  5544  1637  3000               	movlw	0
  5545  1638  0237               	subwf	sys_data_init@i+1,w
  5546  1639  301E               	movlw	30
  5547  163A  1903               	skipnz
  5548  163B  0236               	subwf	sys_data_init@i,w
  5549  163C  1C03               	skipc
  5550  163D  2DED               	goto	l5033
  5551  163E                     l5039:	
  5552                           
  5553                           ;sysData.c: 117: };sysData.c: 119: sysData.pidKp=3200;
  5554  163E  3080               	movlw	128
  5555  163F  00AE               	movwf	??_sys_data_init
  5556  1640  300C               	movlw	12
  5557  1641  00AF               	movwf	??_sys_data_init+1
  5558  1642  305C               	movlw	92
  5559  1643  0086               	movwf	6
  5560  1644  3023               	movlw	35
  5561  1645  0087               	movwf	7
  5562  1646  3144               	addfsr 1,4
  5563  1647  082E               	movf	??_sys_data_init,w
  5564  1648  3FC0               	movwi [0]fsr1
  5565  1649  082F               	movf	??_sys_data_init+1,w
  5566  164A  3FC1               	movwi [1]fsr1
  5567                           
  5568                           ;sysData.c: 120: sysData.pidTi=20;
  5569  164B  3014               	movlw	20
  5570  164C  00AE               	movwf	??_sys_data_init
  5571  164D  3000               	movlw	0
  5572  164E  00AF               	movwf	??_sys_data_init+1
  5573  164F  305C               	movlw	92
  5574  1650  0086               	movwf	6
  5575  1651  3023               	movlw	35
  5576  1652  0087               	movwf	7
  5577  1653  3146               	addfsr 1,6
  5578  1654  082E               	movf	??_sys_data_init,w
  5579  1655  3FC0               	movwi [0]fsr1
  5580  1656  082F               	movf	??_sys_data_init+1,w
  5581  1657  3FC1               	movwi [1]fsr1
  5582                           
  5583                           ;sysData.c: 121: sysData.pidTd=5;
  5584  1658  3005               	movlw	5
  5585  1659  00AE               	movwf	??_sys_data_init
  5586  165A  3000               	movlw	0
  5587  165B  00AF               	movwf	??_sys_data_init+1
  5588  165C  305C               	movlw	92
  5589  165D  0086               	movwf	6
  5590  165E  3023               	movlw	35
  5591  165F  0087               	movwf	7
  5592  1660  3148               	addfsr 1,8
  5593  1661  082E               	movf	??_sys_data_init,w
  5594  1662  3FC0               	movwi [0]fsr1
  5595  1663  082F               	movf	??_sys_data_init+1,w
  5596  1664  3FC1               	movwi [1]fsr1
  5597                           
  5598                           ;sysData.c: 123: sys_data_save();
  5599  1665  3190  2093         	fcall	_sys_data_save
  5600  1667  0008               	return
  5601  1668                     __end_of_sys_data_init:	
  5602                           ;sysData.c: 125: };sysData.c: 126: return ret;;	Return value of _sys_data_init is never 
      +                          used
  5603                           
  5604                           
  5605                           	psect	text3
  5606  10CA                     __ptext3:	
  5607 ;; *************** function _my_flash_system_read *****************
  5608 ;; Defined at:
  5609 ;;		line 23 in file "src/api/sysData.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;  buf             2    1[COMMON] PTR unsigned char 
  5612 ;;		 -> sysData(132), 
  5613 ;;  len             2    3[COMMON] unsigned int 
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;  i               2   10[COMMON] unsigned int 
  5616 ;;  flashAddr       2    8[COMMON] unsigned int 
  5617 ;;  GIEBitValue     1    7[COMMON] unsigned char 
  5618 ;; Return value:  Size  Location     Type
  5619 ;;                  1    wreg      void 
  5620 ;; Registers used:
  5621 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5627 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5628 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5629 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5630 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5631 ;;Total ram usage:       11 bytes
  5632 ;; Hardware stack levels used:    1
  5633 ;; Hardware stack levels required when called:    1
  5634 ;; This function calls:
  5635 ;;		Nothing
  5636 ;; This function is called by:
  5637 ;;		_sys_data_init
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           
  5642                           ;psect for function _my_flash_system_read
  5643  10CA                     _my_flash_system_read:	
  5644                           
  5645                           ;sysData.c: 25: uint16_t flashAddr=0x1f00;
  5646                           
  5647                           ;incstack = 0
  5648                           ; Regs used in _my_flash_system_read: [wreg+fsr1l+fsr1h+status,2+status,0]
  5649  10CA  3000               	movlw	0
  5650  10CB  00F8               	movwf	my_flash_system_read@flashAddr
  5651  10CC  301F               	movlw	31
  5652  10CD  00F9               	movwf	my_flash_system_read@flashAddr+1
  5653                           
  5654                           ;sysData.c: 26: uint16_t i;;sysData.c: 28: uint8_t GIEBitValue = INTCONbits.GIE;
  5655  10CE  3000               	movlw	0
  5656  10CF  1B8B               	btfsc	11,7	;volatile
  5657  10D0  3001               	movlw	1
  5658  10D1  00F7               	movwf	my_flash_system_read@GIEBitValue
  5659                           
  5660                           ;sysData.c: 30: INTCONbits.GIE = 0;
  5661  10D2  138B               	bcf	11,7	;volatile
  5662                           
  5663                           ;sysData.c: 32: for(i=0;i<len;i++){
  5664  10D3  01FA               	clrf	my_flash_system_read@i
  5665  10D4  01FB               	clrf	my_flash_system_read@i+1
  5666  10D5                     l3661:	
  5667  10D5  0874               	movf	my_flash_system_read@len+1,w
  5668  10D6  027B               	subwf	my_flash_system_read@i+1,w
  5669  10D7  1D03               	skipz
  5670  10D8  28DB               	goto	u2345
  5671  10D9  0873               	movf	my_flash_system_read@len,w
  5672  10DA  027A               	subwf	my_flash_system_read@i,w
  5673  10DB                     u2345:	
  5674  10DB  1803               	btfsc	3,0
  5675  10DC  28FC               	goto	l3663
  5676                           
  5677                           ;sysData.c: 34: PMADRL = (flashAddr & 0x00FF);
  5678  10DD  0878               	movf	my_flash_system_read@flashAddr,w
  5679  10DE  0023               	movlb	3	; select bank3
  5680  10DF  0091               	movwf	17	;volatile
  5681                           
  5682                           ;sysData.c: 35: PMADRH = ((flashAddr & 0xFF00) >> 8);
  5683  10E0  0879               	movf	my_flash_system_read@flashAddr+1,w
  5684  10E1  0092               	movwf	18	;volatile
  5685                           
  5686                           ;sysData.c: 37: PMCON1bits.CFGS = 0;
  5687  10E2  1315               	bcf	21,6	;volatile
  5688                           
  5689                           ;sysData.c: 38: PMCON1bits.RD = 1;
  5690  10E3  1415               	bsf	21,0	;volatile
  5691                           
  5692                           ;sysData.c: 39: __nop();
  5693  10E4  0000               	nop
  5694                           
  5695                           ;sysData.c: 40: __nop();
  5696  10E5  0000               	nop
  5697                           
  5698                           ;sysData.c: 41: buf[i]=PMDATL;
  5699  10E6  087A               	movf	my_flash_system_read@i,w
  5700  10E7  0771               	addwf	my_flash_system_read@buf,w
  5701  10E8  00F5               	movwf	??_my_flash_system_read
  5702  10E9  087B               	movf	my_flash_system_read@i+1,w
  5703  10EA  3D72               	addwfc	my_flash_system_read@buf+1,w
  5704  10EB  00F6               	movwf	??_my_flash_system_read+1
  5705  10EC  0875               	movf	??_my_flash_system_read,w
  5706  10ED  0086               	movwf	6
  5707  10EE  0876               	movf	??_my_flash_system_read+1,w
  5708  10EF  0087               	movwf	7
  5709  10F0  0023               	movlb	3	; select bank3
  5710  10F1  0813               	movf	19,w	;volatile
  5711  10F2  0081               	movwf	1
  5712                           
  5713                           ;sysData.c: 42: flashAddr++;
  5714  10F3  3001               	movlw	1
  5715  10F4  07F8               	addwf	my_flash_system_read@flashAddr,f
  5716  10F5  3000               	movlw	0
  5717  10F6  3DF9               	addwfc	my_flash_system_read@flashAddr+1,f
  5718  10F7  3001               	movlw	1
  5719  10F8  07FA               	addwf	my_flash_system_read@i,f
  5720  10F9  3000               	movlw	0
  5721  10FA  3DFB               	addwfc	my_flash_system_read@i+1,f
  5722  10FB  28D5               	goto	l3661
  5723  10FC                     l3663:	
  5724                           
  5725                           ;sysData.c: 43: };sysData.c: 44: INTCONbits.GIE = GIEBitValue;
  5726  10FC  0C77               	rrf	my_flash_system_read@GIEBitValue,w
  5727  10FD  1C03               	skipc
  5728  10FE  138B               	bcf	11,7	;volatile
  5729  10FF  1803               	skipnc
  5730  1100  178B               	bsf	11,7	;volatile
  5731  1101  0008               	return
  5732  1102                     __end_of_my_flash_system_read:	
  5733                           
  5734                           	psect	text4
  5735  1DEE                     __ptext4:	
  5736 ;; *************** function ___wmul *****************
  5737 ;; Defined at:
  5738 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  5739 ;; Parameters:    Size  Location     Type
  5740 ;;  multiplier      2    1[COMMON] unsigned int 
  5741 ;;  multiplicand    2    3[COMMON] unsigned int 
  5742 ;; Auto vars:     Size  Location     Type
  5743 ;;  product         2    5[COMMON] unsigned int 
  5744 ;; Return value:  Size  Location     Type
  5745 ;;                  2    1[COMMON] unsigned int 
  5746 ;; Registers used:
  5747 ;;		wreg, status,2, status,0
  5748 ;; Tracked objects:
  5749 ;;		On entry : 0/0
  5750 ;;		On exit  : 0/0
  5751 ;;		Unchanged: 0/0
  5752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5753 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5754 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5756 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5757 ;;Total ram usage:        6 bytes
  5758 ;; Hardware stack levels used:    1
  5759 ;; Hardware stack levels required when called:    1
  5760 ;; This function calls:
  5761 ;;		Nothing
  5762 ;; This function is called by:
  5763 ;;		_sys_data_init
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766                           
  5767                           
  5768                           ;psect for function ___wmul
  5769  1DEE                     ___wmul:	
  5770                           
  5771                           ;incstack = 0
  5772                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5773  1DEE  01F5               	clrf	___wmul@product
  5774  1DEF  01F6               	clrf	___wmul@product+1
  5775  1DF0                     l3849:	
  5776  1DF0  1C71               	btfss	___wmul@multiplier,0
  5777  1DF1  2DF6               	goto	l1068
  5778  1DF2  0873               	movf	___wmul@multiplicand,w
  5779  1DF3  07F5               	addwf	___wmul@product,f
  5780  1DF4  0874               	movf	___wmul@multiplicand+1,w
  5781  1DF5  3DF6               	addwfc	___wmul@product+1,f
  5782  1DF6                     l1068:	
  5783  1DF6  3001               	movlw	1
  5784  1DF7                     u2645:	
  5785  1DF7  35F3               	lslf	___wmul@multiplicand,f
  5786  1DF8  0DF4               	rlf	___wmul@multiplicand+1,f
  5787  1DF9  0B89               	decfsz	9,f
  5788  1DFA  2DF7               	goto	u2645
  5789  1DFB  3001               	movlw	1
  5790  1DFC                     u2655:	
  5791  1DFC  36F2               	lsrf	___wmul@multiplier+1,f
  5792  1DFD  0CF1               	rrf	___wmul@multiplier,f
  5793  1DFE  0B89               	decfsz	9,f
  5794  1DFF  2DFC               	goto	u2655
  5795  1E00  0871               	movf	___wmul@multiplier,w
  5796  1E01  0472               	iorwf	___wmul@multiplier+1,w
  5797  1E02  1D03               	btfss	3,2
  5798  1E03  2DF0               	goto	l3849
  5799  1E04  0876               	movf	___wmul@product+1,w
  5800  1E05  00F2               	movwf	?___wmul+1
  5801  1E06  0875               	movf	___wmul@product,w
  5802  1E07  00F1               	movwf	?___wmul
  5803  1E08  0008               	return
  5804  1E09                     __end_of___wmul:	
  5805                           
  5806                           	psect	text5
  5807  151F                     __ptext5:	
  5808 ;; *************** function _pid_pwm2_vout_run *****************
  5809 ;; Defined at:
  5810 ;;		line 363 in file "src/api/sample.c"
  5811 ;; Parameters:    Size  Location     Type
  5812 ;;		None
  5813 ;; Auto vars:     Size  Location     Type
  5814 ;;  t16             2    4[BANK0 ] int 
  5815 ;;  __ei            2    2[BANK0 ] int 
  5816 ;; Return value:  Size  Location     Type
  5817 ;;                  1    wreg      void 
  5818 ;; Registers used:
  5819 ;;		wreg, status,2, status,0, pclath, cstack
  5820 ;; Tracked objects:
  5821 ;;		On entry : 0/0
  5822 ;;		On exit  : 0/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5826 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5827 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5828 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5829 ;;Total ram usage:        6 bytes
  5830 ;; Hardware stack levels used:    1
  5831 ;; Hardware stack levels required when called:    3
  5832 ;; This function calls:
  5833 ;;		___awdiv
  5834 ;;		___lwdiv
  5835 ;;		_set_vout_pwm2_duty
  5836 ;; This function is called by:
  5837 ;;		_main
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           
  5842                           ;psect for function _pid_pwm2_vout_run
  5843  151F                     _pid_pwm2_vout_run:	
  5844                           
  5845                           ;sample.c: 365: int16_t t16,__ei;;sample.c: 366: t16=voExpectAdcValue-rtAdcValueVoFb;
  5846                           
  5847                           ;incstack = 0
  5848                           ; Regs used in _pid_pwm2_vout_run: [wreg+status,2+status,0+pclath+cstack]
  5849  151F  0020               	movlb	0	; select bank0
  5850  1520  0959               	comf	_rtAdcValueVoFb,w
  5851  1521  00A0               	movwf	??_pid_pwm2_vout_run
  5852  1522  095A               	comf	_rtAdcValueVoFb+1,w
  5853  1523  00A1               	movwf	??_pid_pwm2_vout_run+1
  5854  1524  0AA0               	incf	??_pid_pwm2_vout_run,f
  5855  1525  1903               	skipnz
  5856  1526  0AA1               	incf	??_pid_pwm2_vout_run+1,f
  5857  1527  0855               	movf	_voExpectAdcValue,w
  5858  1528  0720               	addwf	??_pid_pwm2_vout_run,w
  5859  1529  00A4               	movwf	pid_pwm2_vout_run@t16
  5860  152A  0856               	movf	_voExpectAdcValue+1,w
  5861  152B  3D21               	addwfc	??_pid_pwm2_vout_run+1,w
  5862  152C  00A5               	movwf	pid_pwm2_vout_run@t16+1
  5863                           
  5864                           ;sample.c: 367: __ei=t16/150;
  5865  152D  3096               	movlw	150
  5866  152E  00F1               	movwf	___awdiv@divisor
  5867  152F  3000               	movlw	0
  5868  1530  00F2               	movwf	___awdiv@divisor+1
  5869  1531  0825               	movf	pid_pwm2_vout_run@t16+1,w
  5870  1532  00F4               	movwf	___awdiv@dividend+1
  5871  1533  0824               	movf	pid_pwm2_vout_run@t16,w
  5872  1534  00F3               	movwf	___awdiv@dividend
  5873  1535  3191  2183  3195   	fcall	___awdiv
  5874  1538  0872               	movf	?___awdiv+1,w
  5875  1539  0020               	movlb	0	; select bank0
  5876  153A  00A3               	movwf	pid_pwm2_vout_run@__ei+1
  5877  153B  0871               	movf	?___awdiv,w
  5878  153C  00A2               	movwf	pid_pwm2_vout_run@__ei
  5879                           
  5880                           ;sample.c: 368: if(__ei==0){
  5881  153D  0822               	movf	pid_pwm2_vout_run@__ei,w
  5882  153E  0423               	iorwf	pid_pwm2_vout_run@__ei+1,w
  5883  153F  1D03               	btfss	3,2
  5884  1540  2D62               	goto	l4953
  5885                           
  5886                           ;sample.c: 369: if(t16>16)__ei=1;
  5887  1541  0825               	movf	pid_pwm2_vout_run@t16+1,w
  5888  1542  3A80               	xorlw	128
  5889  1543  00A0               	movwf	??_pid_pwm2_vout_run
  5890  1544  3080               	movlw	128
  5891  1545  0220               	subwf	??_pid_pwm2_vout_run,w
  5892  1546  1D03               	skipz
  5893  1547  2D4A               	goto	u4365
  5894  1548  3011               	movlw	17
  5895  1549  0224               	subwf	pid_pwm2_vout_run@t16,w
  5896  154A                     u4365:	
  5897  154A  1C03               	skipc
  5898  154B  2D51               	goto	l644
  5899  154C  3001               	movlw	1
  5900  154D  0020               	movlb	0	; select bank0
  5901  154E  00A2               	movwf	pid_pwm2_vout_run@__ei
  5902  154F  3000               	movlw	0
  5903  1550  00A3               	movwf	pid_pwm2_vout_run@__ei+1
  5904  1551                     l644:	
  5905                           
  5906                           ;sample.c: 370: if(t16<-16)__ei=-1;
  5907  1551  0020               	movlb	0	; select bank0
  5908  1552  0825               	movf	pid_pwm2_vout_run@t16+1,w
  5909  1553  3A80               	xorlw	128
  5910  1554  00A0               	movwf	??_pid_pwm2_vout_run
  5911  1555  307F               	movlw	127
  5912  1556  0220               	subwf	??_pid_pwm2_vout_run,w
  5913  1557  1D03               	skipz
  5914  1558  2D5B               	goto	u4375
  5915  1559  30F0               	movlw	240
  5916  155A  0224               	subwf	pid_pwm2_vout_run@t16,w
  5917  155B                     u4375:	
  5918  155B  1803               	skipnc
  5919  155C  2D62               	goto	l4953
  5920  155D  30FF               	movlw	255
  5921  155E  0020               	movlb	0	; select bank0
  5922  155F  00A2               	movwf	pid_pwm2_vout_run@__ei
  5923  1560  30FF               	movlw	255
  5924  1561  00A3               	movwf	pid_pwm2_vout_run@__ei+1
  5925  1562                     l4953:	
  5926                           
  5927                           ;sample.c: 371: };sample.c: 373: pwm2Ei=pwm2Ei+__ei;
  5928  1562  0020               	movlb	0	; select bank0
  5929  1563  0822               	movf	pid_pwm2_vout_run@__ei,w
  5930  1564  0021               	movlb	1	; select bank1
  5931  1565  0744               	addwf	_pwm2Ei^(0+128),w
  5932  1566  00C4               	movwf	_pwm2Ei^(0+128)
  5933  1567  0020               	movlb	0	; select bank0
  5934  1568  0823               	movf	pid_pwm2_vout_run@__ei+1,w
  5935  1569  0021               	movlb	1	; select bank1
  5936  156A  3D45               	addwfc	(_pwm2Ei+1)^(0+128),w
  5937  156B  00C5               	movwf	(_pwm2Ei+1)^(0+128)
  5938                           
  5939                           ;sample.c: 377: t16=voExpectAdcValue/10;
  5940  156C  300A               	movlw	10
  5941  156D  00F1               	movwf	___lwdiv@divisor
  5942  156E  3000               	movlw	0
  5943  156F  00F2               	movwf	___lwdiv@divisor+1
  5944  1570  0020               	movlb	0	; select bank0
  5945  1571  0856               	movf	_voExpectAdcValue+1,w
  5946  1572  00F4               	movwf	___lwdiv@dividend+1
  5947  1573  0855               	movf	_voExpectAdcValue,w
  5948  1574  00F3               	movwf	___lwdiv@dividend
  5949  1575  3190  2028  3195   	fcall	___lwdiv
  5950  1578  0872               	movf	?___lwdiv+1,w
  5951  1579  0020               	movlb	0	; select bank0
  5952  157A  00A5               	movwf	pid_pwm2_vout_run@t16+1
  5953  157B  0871               	movf	?___lwdiv,w
  5954  157C  00A4               	movwf	pid_pwm2_vout_run@t16
  5955                           
  5956                           ;sample.c: 379: t16=t16+pwm2Ei;
  5957  157D  0021               	movlb	1	; select bank1
  5958  157E  0844               	movf	_pwm2Ei^(0+128),w
  5959  157F  0020               	movlb	0	; select bank0
  5960  1580  0724               	addwf	pid_pwm2_vout_run@t16,w
  5961  1581  00A4               	movwf	pid_pwm2_vout_run@t16
  5962  1582  0021               	movlb	1	; select bank1
  5963  1583  0845               	movf	(_pwm2Ei+1)^(0+128),w
  5964  1584  0020               	movlb	0	; select bank0
  5965  1585  3D25               	addwfc	pid_pwm2_vout_run@t16+1,w
  5966  1586  00A5               	movwf	pid_pwm2_vout_run@t16+1
  5967                           
  5968                           ;sample.c: 380: if(t16>1580)t16=1580;
  5969  1587  0825               	movf	pid_pwm2_vout_run@t16+1,w
  5970  1588  3A80               	xorlw	128
  5971  1589  00A0               	movwf	??_pid_pwm2_vout_run
  5972  158A  3086               	movlw	134
  5973  158B  0220               	subwf	??_pid_pwm2_vout_run,w
  5974  158C  1D03               	skipz
  5975  158D  2D90               	goto	u4385
  5976  158E  302D               	movlw	45
  5977  158F  0224               	subwf	pid_pwm2_vout_run@t16,w
  5978  1590                     u4385:	
  5979  1590  1C03               	skipc
  5980  1591  2D97               	goto	l646
  5981  1592  302C               	movlw	44
  5982  1593  0020               	movlb	0	; select bank0
  5983  1594  00A4               	movwf	pid_pwm2_vout_run@t16
  5984  1595  3006               	movlw	6
  5985  1596  00A5               	movwf	pid_pwm2_vout_run@t16+1
  5986  1597                     l646:	
  5987                           
  5988                           ;sample.c: 381: if(t16<5)t16=5;
  5989  1597  0020               	movlb	0	; select bank0
  5990  1598  0825               	movf	pid_pwm2_vout_run@t16+1,w
  5991  1599  3A80               	xorlw	128
  5992  159A  00A0               	movwf	??_pid_pwm2_vout_run
  5993  159B  3080               	movlw	128
  5994  159C  0220               	subwf	??_pid_pwm2_vout_run,w
  5995  159D  1D03               	skipz
  5996  159E  2DA1               	goto	u4395
  5997  159F  3005               	movlw	5
  5998  15A0  0224               	subwf	pid_pwm2_vout_run@t16,w
  5999  15A1                     u4395:	
  6000  15A1  1803               	skipnc
  6001  15A2  2DA8               	goto	l4965
  6002  15A3  3005               	movlw	5
  6003  15A4  0020               	movlb	0	; select bank0
  6004  15A5  00A4               	movwf	pid_pwm2_vout_run@t16
  6005  15A6  3000               	movlw	0
  6006  15A7  00A5               	movwf	pid_pwm2_vout_run@t16+1
  6007  15A8                     l4965:	
  6008                           
  6009                           ;sample.c: 382: set_vout_pwm2_duty((uint16_t)t16);
  6010  15A8  0020               	movlb	0	; select bank0
  6011  15A9  0825               	movf	pid_pwm2_vout_run@t16+1,w
  6012  15AA  00F8               	movwf	set_vout_pwm2_duty@duty+1
  6013  15AB  0824               	movf	pid_pwm2_vout_run@t16,w
  6014  15AC  00F7               	movwf	set_vout_pwm2_duty@duty
  6015  15AD  319E  2641         	fcall	_set_vout_pwm2_duty
  6016  15AF  0008               	return
  6017  15B0                     __end_of_pid_pwm2_vout_run:	
  6018                           
  6019                           	psect	text6
  6020  1E41                     __ptext6:	
  6021 ;; *************** function _set_vout_pwm2_duty *****************
  6022 ;; Defined at:
  6023 ;;		line 111 in file "src/api/sample.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;  duty            2    7[COMMON] unsigned int 
  6026 ;; Auto vars:     Size  Location     Type
  6027 ;;  t16             2    9[COMMON] unsigned int 
  6028 ;; Return value:  Size  Location     Type
  6029 ;;                  1    wreg      void 
  6030 ;; Registers used:
  6031 ;;		wreg, status,2, pclath, cstack
  6032 ;; Tracked objects:
  6033 ;;		On entry : 0/0
  6034 ;;		On exit  : 0/0
  6035 ;;		Unchanged: 0/0
  6036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6038 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6040 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6041 ;;Total ram usage:        4 bytes
  6042 ;; Hardware stack levels used:    1
  6043 ;; Hardware stack levels required when called:    2
  6044 ;; This function calls:
  6045 ;;		_get_vout_pwm2_duty
  6046 ;; This function is called by:
  6047 ;;		_pid_pwm2_vout_run
  6048 ;; This function uses a non-reentrant model
  6049 ;;
  6050                           
  6051                           
  6052                           ;psect for function _set_vout_pwm2_duty
  6053  1E41                     _set_vout_pwm2_duty:	
  6054                           
  6055                           ;sample.c: 114: uint16_t t16;;sample.c: 115: pwm2DutyForVout=duty;
  6056                           
  6057                           ;incstack = 0
  6058                           ; Regs used in _set_vout_pwm2_duty: [wreg+status,2+pclath+cstack]
  6059  1E41  0878               	movf	set_vout_pwm2_duty@duty+1,w
  6060  1E42  0021               	movlb	1	; select bank1
  6061  1E43  00D5               	movwf	(_pwm2DutyForVout+1)^(0+128)
  6062  1E44  0877               	movf	set_vout_pwm2_duty@duty,w
  6063  1E45  00D4               	movwf	_pwm2DutyForVout^(0+128)
  6064                           
  6065                           ;sample.c: 116: t16=get_vout_pwm2_duty();
  6066  1E46  319D  25BA  319E   	fcall	_get_vout_pwm2_duty
  6067  1E49  0872               	movf	?_get_vout_pwm2_duty+1,w
  6068  1E4A  00FA               	movwf	set_vout_pwm2_duty@t16+1
  6069  1E4B  0871               	movf	?_get_vout_pwm2_duty,w
  6070  1E4C  00F9               	movwf	set_vout_pwm2_duty@t16
  6071                           
  6072                           ;sample.c: 117: if(t16==duty)return;
  6073  1E4D  0878               	movf	set_vout_pwm2_duty@duty+1,w
  6074  1E4E  067A               	xorwf	set_vout_pwm2_duty@t16+1,w
  6075  1E4F  1D03               	skipz
  6076  1E50  2E53               	goto	u2305
  6077  1E51  0877               	movf	set_vout_pwm2_duty@duty,w
  6078  1E52  0679               	xorwf	set_vout_pwm2_duty@t16,w
  6079  1E53                     u2305:	
  6080  1E53  1903               	btfsc	3,2
  6081  1E54  0008               	return
  6082                           
  6083                           ;sample.c: 121: PWM2CONbits.EN = 0;
  6084  1E55  003B               	movlb	27	; select bank27
  6085  1E56  13AB               	bcf	43,7	;volatile
  6086                           
  6087                           ;sample.c: 122: PWM2DCL= (uint8_t)(duty&0xff);
  6088  1E57  0877               	movf	set_vout_pwm2_duty@duty,w
  6089  1E58  00A3               	movwf	35	;volatile
  6090                           
  6091                           ;sample.c: 123: PWM2DCH=(uint8_t)(duty>>8);
  6092  1E59  0878               	movf	set_vout_pwm2_duty@duty+1,w
  6093  1E5A  00A4               	movwf	36	;volatile
  6094                           
  6095                           ;sample.c: 124: PWM2CONbits.EN = 1;
  6096  1E5B  17AB               	bsf	43,7	;volatile
  6097  1E5C  0008               	return
  6098  1E5D                     __end_of_set_vout_pwm2_duty:	
  6099                           
  6100                           	psect	text7
  6101  1DBA                     __ptext7:	
  6102 ;; *************** function _get_vout_pwm2_duty *****************
  6103 ;; Defined at:
  6104 ;;		line 102 in file "src/api/sample.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;		None
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;  t16             2    5[COMMON] unsigned int 
  6109 ;; Return value:  Size  Location     Type
  6110 ;;                  2    1[COMMON] unsigned int 
  6111 ;; Registers used:
  6112 ;;		wreg
  6113 ;; Tracked objects:
  6114 ;;		On entry : 0/0
  6115 ;;		On exit  : 0/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6119 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6120 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6121 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6122 ;;Total ram usage:        6 bytes
  6123 ;; Hardware stack levels used:    1
  6124 ;; Hardware stack levels required when called:    1
  6125 ;; This function calls:
  6126 ;;		Nothing
  6127 ;; This function is called by:
  6128 ;;		_set_vout_pwm2_duty
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           
  6133                           ;psect for function _get_vout_pwm2_duty
  6134  1DBA                     _get_vout_pwm2_duty:	
  6135                           
  6136                           ;sample.c: 105: uint16_t t16=PWM2DCH;
  6137                           
  6138                           ;incstack = 0
  6139                           ; Regs used in _get_vout_pwm2_duty: [wreg]
  6140  1DBA  003B               	movlb	27	; select bank27
  6141  1DBB  0824               	movf	36,w	;volatile
  6142  1DBC  00F3               	movwf	??_get_vout_pwm2_duty
  6143  1DBD  01F4               	clrf	??_get_vout_pwm2_duty+1
  6144  1DBE  0873               	movf	??_get_vout_pwm2_duty,w
  6145  1DBF  00F5               	movwf	get_vout_pwm2_duty@t16
  6146  1DC0  0874               	movf	??_get_vout_pwm2_duty+1,w
  6147  1DC1  00F6               	movwf	get_vout_pwm2_duty@t16+1
  6148                           
  6149                           ;sample.c: 106: t16<<=8;
  6150  1DC2  3008               	movlw	8
  6151  1DC3                     u2225:	
  6152  1DC3  35F5               	lslf	get_vout_pwm2_duty@t16,f
  6153  1DC4  0DF6               	rlf	get_vout_pwm2_duty@t16+1,f
  6154  1DC5  0B89               	decfsz	9,f
  6155  1DC6  2DC3               	goto	u2225
  6156                           
  6157                           ;sample.c: 107: t16|=PWM2DCL;
  6158  1DC7  0823               	movf	35,w	;volatile
  6159  1DC8  00F3               	movwf	??_get_vout_pwm2_duty
  6160  1DC9  01F4               	clrf	??_get_vout_pwm2_duty+1
  6161  1DCA  0873               	movf	??_get_vout_pwm2_duty,w
  6162  1DCB  04F5               	iorwf	get_vout_pwm2_duty@t16,f
  6163  1DCC  0874               	movf	??_get_vout_pwm2_duty+1,w
  6164  1DCD  04F6               	iorwf	get_vout_pwm2_duty@t16+1,f
  6165                           
  6166                           ;sample.c: 108: return t16;
  6167  1DCE  0876               	movf	get_vout_pwm2_duty@t16+1,w
  6168  1DCF  00F2               	movwf	?_get_vout_pwm2_duty+1
  6169  1DD0  0875               	movf	get_vout_pwm2_duty@t16,w
  6170  1DD1  00F1               	movwf	?_get_vout_pwm2_duty
  6171  1DD2  0008               	return
  6172  1DD3                     __end_of_get_vout_pwm2_duty:	
  6173                           
  6174                           	psect	text8
  6175  1028                     __ptext8:	
  6176 ;; *************** function ___lwdiv *****************
  6177 ;; Defined at:
  6178 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;  divisor         2    1[COMMON] unsigned int 
  6181 ;;  dividend        2    3[COMMON] unsigned int 
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;  quotient        2    6[COMMON] unsigned int 
  6184 ;;  counter         1    8[COMMON] unsigned char 
  6185 ;; Return value:  Size  Location     Type
  6186 ;;                  2    1[COMMON] unsigned int 
  6187 ;; Registers used:
  6188 ;;		wreg, status,2, status,0
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6194 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6195 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6196 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6197 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6198 ;;Total ram usage:        8 bytes
  6199 ;; Hardware stack levels used:    1
  6200 ;; Hardware stack levels required when called:    1
  6201 ;; This function calls:
  6202 ;;		Nothing
  6203 ;; This function is called by:
  6204 ;;		_pid_pwm2_vout_run
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208                           
  6209                           ;psect for function ___lwdiv
  6210  1028                     ___lwdiv:	
  6211                           
  6212                           ;incstack = 0
  6213                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6214  1028  01F6               	clrf	___lwdiv@quotient
  6215  1029  01F7               	clrf	___lwdiv@quotient+1
  6216  102A  0871               	movf	___lwdiv@divisor,w
  6217  102B  0472               	iorwf	___lwdiv@divisor+1,w
  6218  102C  1903               	btfsc	3,2
  6219  102D  2857               	goto	l4005
  6220  102E  01F8               	clrf	___lwdiv@counter
  6221  102F  0AF8               	incf	___lwdiv@counter,f
  6222  1030                     l3993:	
  6223  1030  1BF2               	btfsc	___lwdiv@divisor+1,7
  6224  1031  283C               	goto	l3995
  6225  1032  3001               	movlw	1
  6226  1033                     u2995:	
  6227  1033  35F1               	lslf	___lwdiv@divisor,f
  6228  1034  0DF2               	rlf	___lwdiv@divisor+1,f
  6229  1035  0B89               	decfsz	9,f
  6230  1036  2833               	goto	u2995
  6231  1037  3001               	movlw	1
  6232  1038  00F5               	movwf	??___lwdiv
  6233  1039  0875               	movf	??___lwdiv,w
  6234  103A  07F8               	addwf	___lwdiv@counter,f
  6235  103B  2830               	goto	l3993
  6236  103C                     l3995:	
  6237  103C  3001               	movlw	1
  6238  103D                     u3015:	
  6239  103D  35F6               	lslf	___lwdiv@quotient,f
  6240  103E  0DF7               	rlf	___lwdiv@quotient+1,f
  6241  103F  0B89               	decfsz	9,f
  6242  1040  283D               	goto	u3015
  6243  1041  0872               	movf	___lwdiv@divisor+1,w
  6244  1042  0274               	subwf	___lwdiv@dividend+1,w
  6245  1043  1D03               	skipz
  6246  1044  2847               	goto	u3025
  6247  1045  0871               	movf	___lwdiv@divisor,w
  6248  1046  0273               	subwf	___lwdiv@dividend,w
  6249  1047                     u3025:	
  6250  1047  1C03               	skipc
  6251  1048  284E               	goto	l4001
  6252  1049  0871               	movf	___lwdiv@divisor,w
  6253  104A  02F3               	subwf	___lwdiv@dividend,f
  6254  104B  0872               	movf	___lwdiv@divisor+1,w
  6255  104C  3BF4               	subwfb	___lwdiv@dividend+1,f
  6256  104D  1476               	bsf	___lwdiv@quotient,0
  6257  104E                     l4001:	
  6258  104E  3001               	movlw	1
  6259  104F                     u3035:	
  6260  104F  36F2               	lsrf	___lwdiv@divisor+1,f
  6261  1050  0CF1               	rrf	___lwdiv@divisor,f
  6262  1051  0B89               	decfsz	9,f
  6263  1052  284F               	goto	u3035
  6264  1053  3001               	movlw	1
  6265  1054  02F8               	subwf	___lwdiv@counter,f
  6266  1055  1D03               	btfss	3,2
  6267  1056  283C               	goto	l3995
  6268  1057                     l4005:	
  6269  1057  0877               	movf	___lwdiv@quotient+1,w
  6270  1058  00F2               	movwf	?___lwdiv+1
  6271  1059  0876               	movf	___lwdiv@quotient,w
  6272  105A  00F1               	movwf	?___lwdiv
  6273  105B  0008               	return
  6274  105C                     __end_of___lwdiv:	
  6275                           
  6276                           	psect	text9
  6277  1183                     __ptext9:	
  6278 ;; *************** function ___awdiv *****************
  6279 ;; Defined at:
  6280 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  6281 ;; Parameters:    Size  Location     Type
  6282 ;;  divisor         2    1[COMMON] int 
  6283 ;;  dividend        2    3[COMMON] int 
  6284 ;; Auto vars:     Size  Location     Type
  6285 ;;  quotient        2    8[COMMON] int 
  6286 ;;  sign            1    7[COMMON] unsigned char 
  6287 ;;  counter         1    6[COMMON] unsigned char 
  6288 ;; Return value:  Size  Location     Type
  6289 ;;                  2    1[COMMON] int 
  6290 ;; Registers used:
  6291 ;;		wreg, status,2, status,0
  6292 ;; Tracked objects:
  6293 ;;		On entry : 0/0
  6294 ;;		On exit  : 0/0
  6295 ;;		Unchanged: 0/0
  6296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6297 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6298 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6299 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6300 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6301 ;;Total ram usage:        9 bytes
  6302 ;; Hardware stack levels used:    1
  6303 ;; Hardware stack levels required when called:    1
  6304 ;; This function calls:
  6305 ;;		Nothing
  6306 ;; This function is called by:
  6307 ;;		_pid_pwm2_vout_run
  6308 ;; This function uses a non-reentrant model
  6309 ;;
  6310                           
  6311                           
  6312                           ;psect for function ___awdiv
  6313  1183                     ___awdiv:	
  6314                           
  6315                           ;incstack = 0
  6316                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6317  1183  01F7               	clrf	___awdiv@sign
  6318  1184  1FF2               	btfss	___awdiv@divisor+1,7
  6319  1185  298D               	goto	l3947
  6320  1186  09F1               	comf	___awdiv@divisor,f
  6321  1187  09F2               	comf	___awdiv@divisor+1,f
  6322  1188  0AF1               	incf	___awdiv@divisor,f
  6323  1189  1903               	skipnz
  6324  118A  0AF2               	incf	___awdiv@divisor+1,f
  6325  118B  01F7               	clrf	___awdiv@sign
  6326  118C  0AF7               	incf	___awdiv@sign,f
  6327  118D                     l3947:	
  6328  118D  1FF4               	btfss	___awdiv@dividend+1,7
  6329  118E  2998               	goto	l3953
  6330  118F  09F3               	comf	___awdiv@dividend,f
  6331  1190  09F4               	comf	___awdiv@dividend+1,f
  6332  1191  0AF3               	incf	___awdiv@dividend,f
  6333  1192  1903               	skipnz
  6334  1193  0AF4               	incf	___awdiv@dividend+1,f
  6335  1194  3001               	movlw	1
  6336  1195  00F5               	movwf	??___awdiv
  6337  1196  0875               	movf	??___awdiv,w
  6338  1197  06F7               	xorwf	___awdiv@sign,f
  6339  1198                     l3953:	
  6340  1198  01F8               	clrf	___awdiv@quotient
  6341  1199  01F9               	clrf	___awdiv@quotient+1
  6342  119A  0871               	movf	___awdiv@divisor,w
  6343  119B  0472               	iorwf	___awdiv@divisor+1,w
  6344  119C  1903               	btfsc	3,2
  6345  119D  29C7               	goto	l3975
  6346  119E  01F6               	clrf	___awdiv@counter
  6347  119F  0AF6               	incf	___awdiv@counter,f
  6348  11A0                     l3963:	
  6349  11A0  1BF2               	btfsc	___awdiv@divisor+1,7
  6350  11A1  29AC               	goto	l3965
  6351  11A2  3001               	movlw	1
  6352  11A3                     u2915:	
  6353  11A3  35F1               	lslf	___awdiv@divisor,f
  6354  11A4  0DF2               	rlf	___awdiv@divisor+1,f
  6355  11A5  0B89               	decfsz	9,f
  6356  11A6  29A3               	goto	u2915
  6357  11A7  3001               	movlw	1
  6358  11A8  00F5               	movwf	??___awdiv
  6359  11A9  0875               	movf	??___awdiv,w
  6360  11AA  07F6               	addwf	___awdiv@counter,f
  6361  11AB  29A0               	goto	l3963
  6362  11AC                     l3965:	
  6363  11AC  3001               	movlw	1
  6364  11AD                     u2935:	
  6365  11AD  35F8               	lslf	___awdiv@quotient,f
  6366  11AE  0DF9               	rlf	___awdiv@quotient+1,f
  6367  11AF  0B89               	decfsz	9,f
  6368  11B0  29AD               	goto	u2935
  6369  11B1  0872               	movf	___awdiv@divisor+1,w
  6370  11B2  0274               	subwf	___awdiv@dividend+1,w
  6371  11B3  1D03               	skipz
  6372  11B4  29B7               	goto	u2945
  6373  11B5  0871               	movf	___awdiv@divisor,w
  6374  11B6  0273               	subwf	___awdiv@dividend,w
  6375  11B7                     u2945:	
  6376  11B7  1C03               	skipc
  6377  11B8  29BE               	goto	l3971
  6378  11B9  0871               	movf	___awdiv@divisor,w
  6379  11BA  02F3               	subwf	___awdiv@dividend,f
  6380  11BB  0872               	movf	___awdiv@divisor+1,w
  6381  11BC  3BF4               	subwfb	___awdiv@dividend+1,f
  6382  11BD  1478               	bsf	___awdiv@quotient,0
  6383  11BE                     l3971:	
  6384  11BE  3001               	movlw	1
  6385  11BF                     u2955:	
  6386  11BF  36F2               	lsrf	___awdiv@divisor+1,f
  6387  11C0  0CF1               	rrf	___awdiv@divisor,f
  6388  11C1  0B89               	decfsz	9,f
  6389  11C2  29BF               	goto	u2955
  6390  11C3  3001               	movlw	1
  6391  11C4  02F6               	subwf	___awdiv@counter,f
  6392  11C5  1D03               	btfss	3,2
  6393  11C6  29AC               	goto	l3965
  6394  11C7                     l3975:	
  6395  11C7  0877               	movf	___awdiv@sign,w
  6396  11C8  1903               	btfsc	3,2
  6397  11C9  29CF               	goto	l3979
  6398  11CA  09F8               	comf	___awdiv@quotient,f
  6399  11CB  09F9               	comf	___awdiv@quotient+1,f
  6400  11CC  0AF8               	incf	___awdiv@quotient,f
  6401  11CD  1903               	skipnz
  6402  11CE  0AF9               	incf	___awdiv@quotient+1,f
  6403  11CF                     l3979:	
  6404  11CF  0879               	movf	___awdiv@quotient+1,w
  6405  11D0  00F2               	movwf	?___awdiv+1
  6406  11D1  0878               	movf	___awdiv@quotient,w
  6407  11D2  00F1               	movwf	?___awdiv
  6408  11D3  0008               	return
  6409  11D4                     __end_of___awdiv:	
  6410                           
  6411                           	psect	text10
  6412  0AA9                     __ptext10:	
  6413 ;; *************** function _pid_pwm1_idrv_run *****************
  6414 ;; Defined at:
  6415 ;;		line 333 in file "src/api/sample.c"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;		None
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;  t32             4   26[BANK0 ] long 
  6420 ;; Return value:  Size  Location     Type
  6421 ;;                  1    wreg      void 
  6422 ;; Registers used:
  6423 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6430 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6431 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6432 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6433 ;;Total ram usage:       12 bytes
  6434 ;; Hardware stack levels used:    1
  6435 ;; Hardware stack levels required when called:    3
  6436 ;; This function calls:
  6437 ;;		___aldiv
  6438 ;;		___lmul
  6439 ;;		_set_idrv_pwm1_duty
  6440 ;; This function is called by:
  6441 ;;		_main
  6442 ;; This function uses a non-reentrant model
  6443 ;;
  6444                           
  6445                           
  6446                           ;psect for function _pid_pwm1_idrv_run
  6447  0AA9                     _pid_pwm1_idrv_run:	
  6448                           
  6449                           ;sample.c: 337: int32_t t32;;sample.c: 338: t32=((int32_t)resRs-(int32_t)resRc);
  6450                           
  6451                           ;incstack = 0
  6452                           ; Regs used in _pid_pwm1_idrv_run: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6453  0AA9  0020               	movlb	0	; select bank0
  6454  0AAA  086E               	movf	_resRc,w
  6455  0AAB  00B2               	movwf	??_pid_pwm1_idrv_run
  6456  0AAC  086F               	movf	_resRc+1,w
  6457  0AAD  00B3               	movwf	??_pid_pwm1_idrv_run+1
  6458  0AAE  01B4               	clrf	??_pid_pwm1_idrv_run+2
  6459  0AAF  01B5               	clrf	??_pid_pwm1_idrv_run+3
  6460  0AB0  09B2               	comf	??_pid_pwm1_idrv_run,f
  6461  0AB1  09B3               	comf	??_pid_pwm1_idrv_run+1,f
  6462  0AB2  09B4               	comf	??_pid_pwm1_idrv_run+2,f
  6463  0AB3  09B5               	comf	??_pid_pwm1_idrv_run+3,f
  6464  0AB4  0AB2               	incf	??_pid_pwm1_idrv_run,f
  6465  0AB5  1903               	skipnz
  6466  0AB6  0AB3               	incf	??_pid_pwm1_idrv_run+1,f
  6467  0AB7  1903               	skipnz
  6468  0AB8  0AB4               	incf	??_pid_pwm1_idrv_run+2,f
  6469  0AB9  1903               	skipnz
  6470  0ABA  0AB5               	incf	??_pid_pwm1_idrv_run+3,f
  6471  0ABB  086C               	movf	_resRs,w
  6472  0ABC  00B6               	movwf	??_pid_pwm1_idrv_run+4
  6473  0ABD  086D               	movf	_resRs+1,w
  6474  0ABE  00B7               	movwf	??_pid_pwm1_idrv_run+5
  6475  0ABF  01B8               	clrf	??_pid_pwm1_idrv_run+6
  6476  0AC0  01B9               	clrf	??_pid_pwm1_idrv_run+7
  6477  0AC1  0836               	movf	??_pid_pwm1_idrv_run+4,w
  6478  0AC2  07B2               	addwf	??_pid_pwm1_idrv_run,f
  6479  0AC3  0837               	movf	??_pid_pwm1_idrv_run+5,w
  6480  0AC4  3DB3               	addwfc	??_pid_pwm1_idrv_run+1,f
  6481  0AC5  0838               	movf	??_pid_pwm1_idrv_run+6,w
  6482  0AC6  3DB4               	addwfc	??_pid_pwm1_idrv_run+2,f
  6483  0AC7  0839               	movf	??_pid_pwm1_idrv_run+7,w
  6484  0AC8  3DB5               	addwfc	??_pid_pwm1_idrv_run+3,f
  6485  0AC9  0835               	movf	??_pid_pwm1_idrv_run+3,w
  6486  0ACA  00BD               	movwf	pid_pwm1_idrv_run@t32+3
  6487  0ACB  0834               	movf	??_pid_pwm1_idrv_run+2,w
  6488  0ACC  00BC               	movwf	pid_pwm1_idrv_run@t32+2
  6489  0ACD  0833               	movf	??_pid_pwm1_idrv_run+1,w
  6490  0ACE  00BB               	movwf	pid_pwm1_idrv_run@t32+1
  6491  0ACF  0832               	movf	??_pid_pwm1_idrv_run,w
  6492  0AD0  00BA               	movwf	pid_pwm1_idrv_run@t32
  6493                           
  6494                           ;sample.c: 339: t32=2000-t32;
  6495  0AD1  30D0               	movlw	208
  6496  0AD2  00B2               	movwf	??_pid_pwm1_idrv_run
  6497  0AD3  3007               	movlw	7
  6498  0AD4  00B3               	movwf	??_pid_pwm1_idrv_run+1
  6499  0AD5  3000               	movlw	0
  6500  0AD6  00B4               	movwf	??_pid_pwm1_idrv_run+2
  6501  0AD7  3000               	movlw	0
  6502  0AD8  00B5               	movwf	??_pid_pwm1_idrv_run+3
  6503  0AD9  093A               	comf	pid_pwm1_idrv_run@t32,w
  6504  0ADA  00B6               	movwf	??_pid_pwm1_idrv_run+4
  6505  0ADB  093B               	comf	pid_pwm1_idrv_run@t32+1,w
  6506  0ADC  00B7               	movwf	??_pid_pwm1_idrv_run+5
  6507  0ADD  093C               	comf	pid_pwm1_idrv_run@t32+2,w
  6508  0ADE  00B8               	movwf	??_pid_pwm1_idrv_run+6
  6509  0ADF  093D               	comf	pid_pwm1_idrv_run@t32+3,w
  6510  0AE0  00B9               	movwf	??_pid_pwm1_idrv_run+7
  6511  0AE1  0AB6               	incf	??_pid_pwm1_idrv_run+4,f
  6512  0AE2  1903               	skipnz
  6513  0AE3  0AB7               	incf	??_pid_pwm1_idrv_run+5,f
  6514  0AE4  1903               	skipnz
  6515  0AE5  0AB8               	incf	??_pid_pwm1_idrv_run+6,f
  6516  0AE6  1903               	skipnz
  6517  0AE7  0AB9               	incf	??_pid_pwm1_idrv_run+7,f
  6518  0AE8  0836               	movf	??_pid_pwm1_idrv_run+4,w
  6519  0AE9  07B2               	addwf	??_pid_pwm1_idrv_run,f
  6520  0AEA  0837               	movf	??_pid_pwm1_idrv_run+5,w
  6521  0AEB  3DB3               	addwfc	??_pid_pwm1_idrv_run+1,f
  6522  0AEC  0838               	movf	??_pid_pwm1_idrv_run+6,w
  6523  0AED  3DB4               	addwfc	??_pid_pwm1_idrv_run+2,f
  6524  0AEE  0839               	movf	??_pid_pwm1_idrv_run+7,w
  6525  0AEF  3DB5               	addwfc	??_pid_pwm1_idrv_run+3,f
  6526  0AF0  0835               	movf	??_pid_pwm1_idrv_run+3,w
  6527  0AF1  00BD               	movwf	pid_pwm1_idrv_run@t32+3
  6528  0AF2  0834               	movf	??_pid_pwm1_idrv_run+2,w
  6529  0AF3  00BC               	movwf	pid_pwm1_idrv_run@t32+2
  6530  0AF4  0833               	movf	??_pid_pwm1_idrv_run+1,w
  6531  0AF5  00BB               	movwf	pid_pwm1_idrv_run@t32+1
  6532  0AF6  0832               	movf	??_pid_pwm1_idrv_run,w
  6533  0AF7  00BA               	movwf	pid_pwm1_idrv_run@t32
  6534                           
  6535                           ;sample.c: 341: err[2]=err[1];
  6536  0AF8  3004               	movlw	4
  6537  0AF9  3EA0               	addlw	(low (_err| 0))& (0+255)
  6538  0AFA  0086               	movwf	6
  6539  0AFB  0187               	clrf	7
  6540  0AFC  3F40               	moviw [0]fsr1
  6541  0AFD  0021               	movlb	1	; select bank1
  6542  0AFE  00A8               	movwf	(_err^(0+128)+8)
  6543  0AFF  3F41               	moviw [1]fsr1
  6544  0B00  00A9               	movwf	((_err+1)^(0+128)+8)
  6545  0B01  3F42               	moviw [2]fsr1
  6546  0B02  00AA               	movwf	((_err+2)^(0+128)+8)
  6547  0B03  3F43               	moviw [3]fsr1
  6548  0B04  00AB               	movwf	((_err+3)^(0+128)+8)
  6549                           
  6550                           ;sample.c: 342: err[1]=err[0];
  6551  0B05  0823               	movf	(_err+3)^(0+128),w
  6552  0B06  00A7               	movwf	((_err+3)^(0+128)+4)
  6553  0B07  0822               	movf	(_err+2)^(0+128),w
  6554  0B08  00A6               	movwf	((_err+2)^(0+128)+4)
  6555  0B09  0821               	movf	(_err+1)^(0+128),w
  6556  0B0A  00A5               	movwf	((_err+1)^(0+128)+4)
  6557  0B0B  0820               	movf	_err^(0+128),w
  6558  0B0C  00A4               	movwf	(_err^(0+128)+4)
  6559                           
  6560                           ;sample.c: 343: err[0]=t32;
  6561  0B0D  0020               	movlb	0	; select bank0
  6562  0B0E  083D               	movf	pid_pwm1_idrv_run@t32+3,w
  6563  0B0F  0021               	movlb	1	; select bank1
  6564  0B10  00A3               	movwf	(_err+3)^(0+128)
  6565  0B11  0020               	movlb	0	; select bank0
  6566  0B12  083C               	movf	pid_pwm1_idrv_run@t32+2,w
  6567  0B13  0021               	movlb	1	; select bank1
  6568  0B14  00A2               	movwf	(_err+2)^(0+128)
  6569  0B15  0020               	movlb	0	; select bank0
  6570  0B16  083B               	movf	pid_pwm1_idrv_run@t32+1,w
  6571  0B17  0021               	movlb	1	; select bank1
  6572  0B18  00A1               	movwf	(_err+1)^(0+128)
  6573  0B19  0020               	movlb	0	; select bank0
  6574  0B1A  083A               	movf	pid_pwm1_idrv_run@t32,w
  6575  0B1B  0021               	movlb	1	; select bank1
  6576  0B1C  00A0               	movwf	_err^(0+128)
  6577                           
  6578                           ;sample.c: 346: x0=(err[0]-err[1])*PidKp;
  6579  0B1D  0820               	movf	_err^(0+128),w
  6580  0B1E  0020               	movlb	0	; select bank0
  6581  0B1F  00B2               	movwf	??_pid_pwm1_idrv_run
  6582  0B20  0021               	movlb	1	; select bank1
  6583  0B21  0821               	movf	(_err+1)^(0+128),w
  6584  0B22  0020               	movlb	0	; select bank0
  6585  0B23  00B3               	movwf	??_pid_pwm1_idrv_run+1
  6586  0B24  0021               	movlb	1	; select bank1
  6587  0B25  0822               	movf	(_err+2)^(0+128),w
  6588  0B26  0020               	movlb	0	; select bank0
  6589  0B27  00B4               	movwf	??_pid_pwm1_idrv_run+2
  6590  0B28  0021               	movlb	1	; select bank1
  6591  0B29  0823               	movf	(_err+3)^(0+128),w
  6592  0B2A  0020               	movlb	0	; select bank0
  6593  0B2B  00B5               	movwf	??_pid_pwm1_idrv_run+3
  6594  0B2C  0021               	movlb	1	; select bank1
  6595  0B2D  0924               	comf	(_err^(0+128)+4),w
  6596  0B2E  0020               	movlb	0	; select bank0
  6597  0B2F  00B6               	movwf	??_pid_pwm1_idrv_run+4
  6598  0B30  0021               	movlb	1	; select bank1
  6599  0B31  0925               	comf	((_err+1)^(0+128)+4),w
  6600  0B32  0020               	movlb	0	; select bank0
  6601  0B33  00B7               	movwf	??_pid_pwm1_idrv_run+5
  6602  0B34  0021               	movlb	1	; select bank1
  6603  0B35  0926               	comf	((_err+2)^(0+128)+4),w
  6604  0B36  0020               	movlb	0	; select bank0
  6605  0B37  00B8               	movwf	??_pid_pwm1_idrv_run+6
  6606  0B38  0021               	movlb	1	; select bank1
  6607  0B39  0927               	comf	((_err+3)^(0+128)+4),w
  6608  0B3A  0020               	movlb	0	; select bank0
  6609  0B3B  00B9               	movwf	??_pid_pwm1_idrv_run+7
  6610  0B3C  0AB6               	incf	??_pid_pwm1_idrv_run+4,f
  6611  0B3D  1903               	skipnz
  6612  0B3E  0AB7               	incf	??_pid_pwm1_idrv_run+5,f
  6613  0B3F  1903               	skipnz
  6614  0B40  0AB8               	incf	??_pid_pwm1_idrv_run+6,f
  6615  0B41  1903               	skipnz
  6616  0B42  0AB9               	incf	??_pid_pwm1_idrv_run+7,f
  6617  0B43  0836               	movf	??_pid_pwm1_idrv_run+4,w
  6618  0B44  07B2               	addwf	??_pid_pwm1_idrv_run,f
  6619  0B45  0837               	movf	??_pid_pwm1_idrv_run+5,w
  6620  0B46  3DB3               	addwfc	??_pid_pwm1_idrv_run+1,f
  6621  0B47  0838               	movf	??_pid_pwm1_idrv_run+6,w
  6622  0B48  3DB4               	addwfc	??_pid_pwm1_idrv_run+2,f
  6623  0B49  0839               	movf	??_pid_pwm1_idrv_run+7,w
  6624  0B4A  3DB5               	addwfc	??_pid_pwm1_idrv_run+3,f
  6625  0B4B  0835               	movf	??_pid_pwm1_idrv_run+3,w
  6626  0B4C  00F4               	movwf	___lmul@multiplier+3
  6627  0B4D  0834               	movf	??_pid_pwm1_idrv_run+2,w
  6628  0B4E  00F3               	movwf	___lmul@multiplier+2
  6629  0B4F  0833               	movf	??_pid_pwm1_idrv_run+1,w
  6630  0B50  00F2               	movwf	___lmul@multiplier+1
  6631  0B51  0832               	movf	??_pid_pwm1_idrv_run,w
  6632  0B52  00F1               	movwf	___lmul@multiplier
  6633  0B53  0857               	movf	_PidKp,w
  6634  0B54  00F5               	movwf	___lmul@multiplicand
  6635  0B55  0858               	movf	_PidKp+1,w
  6636  0B56  00F6               	movwf	___lmul@multiplicand+1
  6637  0B57  01F7               	clrf	___lmul@multiplicand+2
  6638  0B58  01F8               	clrf	___lmul@multiplicand+3
  6639  0B59  319E  26CE  318A   	fcall	___lmul
  6640  0B5C  0874               	movf	?___lmul+3,w
  6641  0B5D  0020               	movlb	0	; select bank0
  6642  0B5E  00CE               	movwf	_x0+3
  6643  0B5F  0873               	movf	?___lmul+2,w
  6644  0B60  00CD               	movwf	_x0+2
  6645  0B61  0872               	movf	?___lmul+1,w
  6646  0B62  00CC               	movwf	_x0+1
  6647  0B63  0871               	movf	?___lmul,w
  6648  0B64  00CB               	movwf	_x0
  6649                           
  6650                           ;sample.c: 347: x1=PidKp*err[0]/PidTi;
  6651  0B65  0021               	movlb	1	; select bank1
  6652  0B66  084A               	movf	_PidTi^(0+128),w
  6653  0B67  0020               	movlb	0	; select bank0
  6654  0B68  00A4               	movwf	___aldiv@divisor
  6655  0B69  0021               	movlb	1	; select bank1
  6656  0B6A  084B               	movf	(_PidTi+1)^(0+128),w
  6657  0B6B  0020               	movlb	0	; select bank0
  6658  0B6C  00A5               	movwf	___aldiv@divisor+1
  6659  0B6D  01A6               	clrf	___aldiv@divisor+2
  6660  0B6E  01A7               	clrf	___aldiv@divisor+3
  6661  0B6F  0857               	movf	_PidKp,w
  6662  0B70  00F1               	movwf	___lmul@multiplier
  6663  0B71  0858               	movf	_PidKp+1,w
  6664  0B72  00F2               	movwf	___lmul@multiplier+1
  6665  0B73  01F3               	clrf	___lmul@multiplier+2
  6666  0B74  01F4               	clrf	___lmul@multiplier+3
  6667  0B75  0021               	movlb	1	; select bank1
  6668  0B76  0823               	movf	(_err+3)^(0+128),w
  6669  0B77  00F8               	movwf	___lmul@multiplicand+3
  6670  0B78  0822               	movf	(_err+2)^(0+128),w
  6671  0B79  00F7               	movwf	___lmul@multiplicand+2
  6672  0B7A  0821               	movf	(_err+1)^(0+128),w
  6673  0B7B  00F6               	movwf	___lmul@multiplicand+1
  6674  0B7C  0820               	movf	_err^(0+128),w
  6675  0B7D  00F5               	movwf	___lmul@multiplicand
  6676  0B7E  319E  26CE  318A   	fcall	___lmul
  6677  0B81  0874               	movf	?___lmul+3,w
  6678  0B82  0020               	movlb	0	; select bank0
  6679  0B83  00AB               	movwf	___aldiv@dividend+3
  6680  0B84  0873               	movf	?___lmul+2,w
  6681  0B85  00AA               	movwf	___aldiv@dividend+2
  6682  0B86  0872               	movf	?___lmul+1,w
  6683  0B87  00A9               	movwf	___aldiv@dividend+1
  6684  0B88  0871               	movf	?___lmul,w
  6685  0B89  00A8               	movwf	___aldiv@dividend
  6686  0B8A  318F  277C  318A   	fcall	___aldiv
  6687  0B8D  0020               	movlb	0	; select bank0
  6688  0B8E  0827               	movf	?___aldiv+3,w
  6689  0B8F  0021               	movlb	1	; select bank1
  6690  0B90  00BF               	movwf	(_x1+3)^(0+128)
  6691  0B91  0020               	movlb	0	; select bank0
  6692  0B92  0826               	movf	?___aldiv+2,w
  6693  0B93  0021               	movlb	1	; select bank1
  6694  0B94  00BE               	movwf	(_x1+2)^(0+128)
  6695  0B95  0020               	movlb	0	; select bank0
  6696  0B96  0825               	movf	?___aldiv+1,w
  6697  0B97  0021               	movlb	1	; select bank1
  6698  0B98  00BD               	movwf	(_x1+1)^(0+128)
  6699  0B99  0020               	movlb	0	; select bank0
  6700  0B9A  0824               	movf	?___aldiv,w
  6701  0B9B  0021               	movlb	1	; select bank1
  6702  0B9C  00BC               	movwf	_x1^(0+128)
  6703                           
  6704                           ;sample.c: 350: t32=x0+x1;
  6705  0B9D  0020               	movlb	0	; select bank0
  6706  0B9E  084B               	movf	_x0,w
  6707  0B9F  0021               	movlb	1	; select bank1
  6708  0BA0  073C               	addwf	_x1^(0+128),w
  6709  0BA1  0020               	movlb	0	; select bank0
  6710  0BA2  00B2               	movwf	??_pid_pwm1_idrv_run
  6711  0BA3  084C               	movf	_x0+1,w
  6712  0BA4  0021               	movlb	1	; select bank1
  6713  0BA5  3D3D               	addwfc	(_x1+1)^(0+128),w
  6714  0BA6  0020               	movlb	0	; select bank0
  6715  0BA7  00B3               	movwf	??_pid_pwm1_idrv_run+1
  6716  0BA8  084D               	movf	_x0+2,w
  6717  0BA9  0021               	movlb	1	; select bank1
  6718  0BAA  3D3E               	addwfc	(_x1+2)^(0+128),w
  6719  0BAB  0020               	movlb	0	; select bank0
  6720  0BAC  00B4               	movwf	??_pid_pwm1_idrv_run+2
  6721  0BAD  084E               	movf	_x0+3,w
  6722  0BAE  0021               	movlb	1	; select bank1
  6723  0BAF  3D3F               	addwfc	(_x1+3)^(0+128),w
  6724  0BB0  0020               	movlb	0	; select bank0
  6725  0BB1  00B5               	movwf	??_pid_pwm1_idrv_run+3
  6726  0BB2  0835               	movf	??_pid_pwm1_idrv_run+3,w
  6727  0BB3  00BD               	movwf	pid_pwm1_idrv_run@t32+3
  6728  0BB4  0834               	movf	??_pid_pwm1_idrv_run+2,w
  6729  0BB5  00BC               	movwf	pid_pwm1_idrv_run@t32+2
  6730  0BB6  0833               	movf	??_pid_pwm1_idrv_run+1,w
  6731  0BB7  00BB               	movwf	pid_pwm1_idrv_run@t32+1
  6732  0BB8  0832               	movf	??_pid_pwm1_idrv_run,w
  6733  0BB9  00BA               	movwf	pid_pwm1_idrv_run@t32
  6734                           
  6735                           ;sample.c: 351: t32/=10000;
  6736  0BBA  3000               	movlw	0
  6737  0BBB  00A7               	movwf	___aldiv@divisor+3
  6738  0BBC  3000               	movlw	0
  6739  0BBD  00A6               	movwf	___aldiv@divisor+2
  6740  0BBE  3027               	movlw	39
  6741  0BBF  00A5               	movwf	___aldiv@divisor+1
  6742  0BC0  3010               	movlw	16
  6743  0BC1  00A4               	movwf	___aldiv@divisor
  6744  0BC2  083D               	movf	pid_pwm1_idrv_run@t32+3,w
  6745  0BC3  00AB               	movwf	___aldiv@dividend+3
  6746  0BC4  083C               	movf	pid_pwm1_idrv_run@t32+2,w
  6747  0BC5  00AA               	movwf	___aldiv@dividend+2
  6748  0BC6  083B               	movf	pid_pwm1_idrv_run@t32+1,w
  6749  0BC7  00A9               	movwf	___aldiv@dividend+1
  6750  0BC8  083A               	movf	pid_pwm1_idrv_run@t32,w
  6751  0BC9  00A8               	movwf	___aldiv@dividend
  6752  0BCA  318F  277C  318A   	fcall	___aldiv
  6753  0BCD  0020               	movlb	0	; select bank0
  6754  0BCE  0827               	movf	?___aldiv+3,w
  6755  0BCF  00BD               	movwf	pid_pwm1_idrv_run@t32+3
  6756  0BD0  0826               	movf	?___aldiv+2,w
  6757  0BD1  00BC               	movwf	pid_pwm1_idrv_run@t32+2
  6758  0BD2  0825               	movf	?___aldiv+1,w
  6759  0BD3  00BB               	movwf	pid_pwm1_idrv_run@t32+1
  6760  0BD4  0824               	movf	?___aldiv,w
  6761  0BD5  00BA               	movwf	pid_pwm1_idrv_run@t32
  6762                           
  6763                           ;sample.c: 352: t32+=pidU;
  6764  0BD6  0021               	movlb	1	; select bank1
  6765  0BD7  084E               	movf	_pidU^(0+128),w
  6766  0BD8  0020               	movlb	0	; select bank0
  6767  0BD9  07BA               	addwf	pid_pwm1_idrv_run@t32,f
  6768  0BDA  0021               	movlb	1	; select bank1
  6769  0BDB  084F               	movf	(_pidU+1)^(0+128),w
  6770  0BDC  0020               	movlb	0	; select bank0
  6771  0BDD  3DBB               	addwfc	pid_pwm1_idrv_run@t32+1,f
  6772  0BDE  3000               	movlw	0
  6773  0BDF  3DBC               	addwfc	pid_pwm1_idrv_run@t32+2,f
  6774  0BE0  3DBD               	addwfc	pid_pwm1_idrv_run@t32+3,f
  6775                           
  6776                           ;sample.c: 354: __nop();
  6777  0BE1  0000               	nop
  6778                           
  6779                           ;sample.c: 355: if(t32>1200)t32=1200;
  6780  0BE2  0020               	movlb	0	; select bank0
  6781  0BE3  1BBD               	btfsc	pid_pwm1_idrv_run@t32+3,7
  6782  0BE4  2BF9               	goto	l4935
  6783  0BE5  083D               	movf	pid_pwm1_idrv_run@t32+3,w
  6784  0BE6  1D03               	btfss	3,2
  6785  0BE7  2BF1               	goto	l4933
  6786  0BE8  083C               	movf	pid_pwm1_idrv_run@t32+2,w
  6787  0BE9  1D03               	btfss	3,2
  6788  0BEA  2BF1               	goto	l4933
  6789  0BEB  30B1               	movlw	177
  6790  0BEC  023A               	subwf	pid_pwm1_idrv_run@t32,w
  6791  0BED  3004               	movlw	4
  6792  0BEE  3B3B               	subwfb	pid_pwm1_idrv_run@t32+1,w
  6793  0BEF  1C03               	btfss	3,0
  6794  0BF0  2BF9               	goto	l4935
  6795  0BF1                     l4933:	
  6796  0BF1  3000               	movlw	0
  6797  0BF2  00BD               	movwf	pid_pwm1_idrv_run@t32+3
  6798  0BF3  3000               	movlw	0
  6799  0BF4  00BC               	movwf	pid_pwm1_idrv_run@t32+2
  6800  0BF5  3004               	movlw	4
  6801  0BF6  00BB               	movwf	pid_pwm1_idrv_run@t32+1
  6802  0BF7  30B0               	movlw	176
  6803  0BF8  00BA               	movwf	pid_pwm1_idrv_run@t32
  6804  0BF9                     l4935:	
  6805                           
  6806                           ;sample.c: 356: if(t32<5)t32=5;
  6807  0BF9  1BBD               	btfsc	pid_pwm1_idrv_run@t32+3,7
  6808  0BFA  2C08               	goto	l4937
  6809  0BFB  083D               	movf	pid_pwm1_idrv_run@t32+3,w
  6810  0BFC  1D03               	btfss	3,2
  6811  0BFD  2C10               	goto	l639
  6812  0BFE  083C               	movf	pid_pwm1_idrv_run@t32+2,w
  6813  0BFF  1D03               	btfss	3,2
  6814  0C00  2C10               	goto	l639
  6815  0C01  083B               	movf	pid_pwm1_idrv_run@t32+1,w
  6816  0C02  1D03               	btfss	3,2
  6817  0C03  2C10               	goto	l639
  6818  0C04  3005               	movlw	5
  6819  0C05  023A               	subwf	pid_pwm1_idrv_run@t32,w
  6820  0C06  1803               	btfsc	3,0
  6821  0C07  2C10               	goto	l639
  6822  0C08                     l4937:	
  6823  0C08  3000               	movlw	0
  6824  0C09  00BD               	movwf	pid_pwm1_idrv_run@t32+3
  6825  0C0A  3000               	movlw	0
  6826  0C0B  00BC               	movwf	pid_pwm1_idrv_run@t32+2
  6827  0C0C  3000               	movlw	0
  6828  0C0D  00BB               	movwf	pid_pwm1_idrv_run@t32+1
  6829  0C0E  3005               	movlw	5
  6830  0C0F  00BA               	movwf	pid_pwm1_idrv_run@t32
  6831  0C10                     l639:	
  6832                           
  6833                           ;sample.c: 357: pidU=(uint16_t)t32;
  6834  0C10  083B               	movf	pid_pwm1_idrv_run@t32+1,w
  6835  0C11  0021               	movlb	1	; select bank1
  6836  0C12  00CF               	movwf	(_pidU+1)^(0+128)
  6837  0C13  0020               	movlb	0	; select bank0
  6838  0C14  083A               	movf	pid_pwm1_idrv_run@t32,w
  6839  0C15  0021               	movlb	1	; select bank1
  6840  0C16  00CE               	movwf	_pidU^(0+128)
  6841                           
  6842                           ;sample.c: 359: set_idrv_pwm1_duty(pidU);
  6843  0C17  084F               	movf	(_pidU+1)^(0+128),w
  6844  0C18  00F8               	movwf	set_idrv_pwm1_duty@duty+1
  6845  0C19  084E               	movf	_pidU^(0+128),w
  6846  0C1A  00F7               	movwf	set_idrv_pwm1_duty@duty
  6847  0C1B  319E  2625         	fcall	_set_idrv_pwm1_duty
  6848  0C1D  0008               	return
  6849  0C1E                     __end_of_pid_pwm1_idrv_run:	
  6850                           
  6851                           	psect	text11
  6852  1E25                     __ptext11:	
  6853 ;; *************** function _set_idrv_pwm1_duty *****************
  6854 ;; Defined at:
  6855 ;;		line 82 in file "src/api/sample.c"
  6856 ;; Parameters:    Size  Location     Type
  6857 ;;  duty            2    7[COMMON] unsigned int 
  6858 ;; Auto vars:     Size  Location     Type
  6859 ;;  t16             2    9[COMMON] unsigned int 
  6860 ;; Return value:  Size  Location     Type
  6861 ;;                  1    wreg      void 
  6862 ;; Registers used:
  6863 ;;		wreg, status,2, pclath, cstack
  6864 ;; Tracked objects:
  6865 ;;		On entry : 0/0
  6866 ;;		On exit  : 0/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6869 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6870 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6872 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6873 ;;Total ram usage:        4 bytes
  6874 ;; Hardware stack levels used:    1
  6875 ;; Hardware stack levels required when called:    2
  6876 ;; This function calls:
  6877 ;;		_get_idrv_pwm1_duty
  6878 ;; This function is called by:
  6879 ;;		_pid_pwm1_idrv_run
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           
  6884                           ;psect for function _set_idrv_pwm1_duty
  6885  1E25                     _set_idrv_pwm1_duty:	
  6886                           
  6887                           ;sample.c: 85: uint16_t t16;;sample.c: 86: pwm1DutyForIdrv=duty;
  6888                           
  6889                           ;incstack = 0
  6890                           ; Regs used in _set_idrv_pwm1_duty: [wreg+status,2+pclath+cstack]
  6891  1E25  0878               	movf	set_idrv_pwm1_duty@duty+1,w
  6892  1E26  0021               	movlb	1	; select bank1
  6893  1E27  00D3               	movwf	(_pwm1DutyForIdrv+1)^(0+128)
  6894  1E28  0877               	movf	set_idrv_pwm1_duty@duty,w
  6895  1E29  00D2               	movwf	_pwm1DutyForIdrv^(0+128)
  6896                           
  6897                           ;sample.c: 87: t16=get_idrv_pwm1_duty();
  6898  1E2A  319D  25A1  319E   	fcall	_get_idrv_pwm1_duty
  6899  1E2D  0872               	movf	?_get_idrv_pwm1_duty+1,w
  6900  1E2E  00FA               	movwf	set_idrv_pwm1_duty@t16+1
  6901  1E2F  0871               	movf	?_get_idrv_pwm1_duty,w
  6902  1E30  00F9               	movwf	set_idrv_pwm1_duty@t16
  6903                           
  6904                           ;sample.c: 88: if(t16==duty)return;
  6905  1E31  0878               	movf	set_idrv_pwm1_duty@duty+1,w
  6906  1E32  067A               	xorwf	set_idrv_pwm1_duty@t16+1,w
  6907  1E33  1D03               	skipz
  6908  1E34  2E37               	goto	u2295
  6909  1E35  0877               	movf	set_idrv_pwm1_duty@duty,w
  6910  1E36  0679               	xorwf	set_idrv_pwm1_duty@t16,w
  6911  1E37                     u2295:	
  6912  1E37  1903               	btfsc	3,2
  6913  1E38  0008               	return
  6914                           
  6915                           ;sample.c: 91: PWM1CONbits.EN = 0;
  6916  1E39  003B               	movlb	27	; select bank27
  6917  1E3A  139B               	bcf	27,7	;volatile
  6918                           
  6919                           ;sample.c: 92: PWM1DCL= (uint8_t)(duty&0xff);
  6920  1E3B  0877               	movf	set_idrv_pwm1_duty@duty,w
  6921  1E3C  0093               	movwf	19	;volatile
  6922                           
  6923                           ;sample.c: 93: PWM1DCH=(uint8_t)(duty>>8);
  6924  1E3D  0878               	movf	set_idrv_pwm1_duty@duty+1,w
  6925  1E3E  0094               	movwf	20	;volatile
  6926                           
  6927                           ;sample.c: 94: PWM1CONbits.EN = 1;
  6928  1E3F  179B               	bsf	27,7	;volatile
  6929  1E40  0008               	return
  6930  1E41                     __end_of_set_idrv_pwm1_duty:	
  6931                           
  6932                           	psect	text12
  6933  1DA1                     __ptext12:	
  6934 ;; *************** function _get_idrv_pwm1_duty *****************
  6935 ;; Defined at:
  6936 ;;		line 73 in file "src/api/sample.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;		None
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;  t16             2    5[COMMON] unsigned int 
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  2    1[COMMON] unsigned int 
  6943 ;; Registers used:
  6944 ;;		wreg
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6950 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6951 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6952 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6953 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6954 ;;Total ram usage:        6 bytes
  6955 ;; Hardware stack levels used:    1
  6956 ;; Hardware stack levels required when called:    1
  6957 ;; This function calls:
  6958 ;;		Nothing
  6959 ;; This function is called by:
  6960 ;;		_set_idrv_pwm1_duty
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           
  6965                           ;psect for function _get_idrv_pwm1_duty
  6966  1DA1                     _get_idrv_pwm1_duty:	
  6967                           
  6968                           ;sample.c: 76: uint16_t t16=PWM1DCH;
  6969                           
  6970                           ;incstack = 0
  6971                           ; Regs used in _get_idrv_pwm1_duty: [wreg]
  6972  1DA1  003B               	movlb	27	; select bank27
  6973  1DA2  0814               	movf	20,w	;volatile
  6974  1DA3  00F3               	movwf	??_get_idrv_pwm1_duty
  6975  1DA4  01F4               	clrf	??_get_idrv_pwm1_duty+1
  6976  1DA5  0873               	movf	??_get_idrv_pwm1_duty,w
  6977  1DA6  00F5               	movwf	get_idrv_pwm1_duty@t16
  6978  1DA7  0874               	movf	??_get_idrv_pwm1_duty+1,w
  6979  1DA8  00F6               	movwf	get_idrv_pwm1_duty@t16+1
  6980                           
  6981                           ;sample.c: 77: t16<<=8;
  6982  1DA9  3008               	movlw	8
  6983  1DAA                     u2215:	
  6984  1DAA  35F5               	lslf	get_idrv_pwm1_duty@t16,f
  6985  1DAB  0DF6               	rlf	get_idrv_pwm1_duty@t16+1,f
  6986  1DAC  0B89               	decfsz	9,f
  6987  1DAD  2DAA               	goto	u2215
  6988                           
  6989                           ;sample.c: 78: t16|=PWM1DCL;
  6990  1DAE  0813               	movf	19,w	;volatile
  6991  1DAF  00F3               	movwf	??_get_idrv_pwm1_duty
  6992  1DB0  01F4               	clrf	??_get_idrv_pwm1_duty+1
  6993  1DB1  0873               	movf	??_get_idrv_pwm1_duty,w
  6994  1DB2  04F5               	iorwf	get_idrv_pwm1_duty@t16,f
  6995  1DB3  0874               	movf	??_get_idrv_pwm1_duty+1,w
  6996  1DB4  04F6               	iorwf	get_idrv_pwm1_duty@t16+1,f
  6997                           
  6998                           ;sample.c: 79: return t16;
  6999  1DB5  0876               	movf	get_idrv_pwm1_duty@t16+1,w
  7000  1DB6  00F2               	movwf	?_get_idrv_pwm1_duty+1
  7001  1DB7  0875               	movf	get_idrv_pwm1_duty@t16,w
  7002  1DB8  00F1               	movwf	?_get_idrv_pwm1_duty
  7003  1DB9  0008               	return
  7004  1DBA                     __end_of_get_idrv_pwm1_duty:	
  7005                           
  7006                           	psect	text13
  7007  1227                     __ptext13:	
  7008 ;; *************** function _modbus_response_process *****************
  7009 ;; Defined at:
  7010 ;;		line 210 in file "src/api/modbus.c"
  7011 ;; Parameters:    Size  Location     Type
  7012 ;;  rbuf            1    wreg     PTR unsigned char 
  7013 ;;		 -> modbusBuf(32), 
  7014 ;;  rlen            2   24[BANK0 ] unsigned int 
  7015 ;; Auto vars:     Size  Location     Type
  7016 ;;  rbuf            1   29[BANK0 ] PTR unsigned char 
  7017 ;;		 -> modbusBuf(32), 
  7018 ;;  pmdbs           1   28[BANK0 ] PTR struct .
  7019 ;;		 -> modbusBuf(32), 
  7020 ;;  resp            1   27[BANK0 ] unsigned char 
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  1    wreg      void 
  7023 ;; Registers used:
  7024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7030 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7031 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7032 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7033 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7034 ;;Total ram usage:        6 bytes
  7035 ;; Hardware stack levels used:    1
  7036 ;; Hardware stack levels required when called:    5
  7037 ;; This function calls:
  7038 ;;		_crc_verify
  7039 ;;		_modbus_response_command
  7040 ;;		_modbus_response_illgeal_function
  7041 ;;		_modbus_response_write_mult_register
  7042 ;;		_modbus_response_write_single_register
  7043 ;; This function is called by:
  7044 ;;		_main
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           
  7049                           ;psect for function _modbus_response_process
  7050  1227                     _modbus_response_process:	
  7051                           
  7052                           ;incstack = 0
  7053                           ; Regs used in _modbus_response_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7054                           ;modbus_response_process@rbuf stored from wreg
  7055  1227  0020               	movlb	0	; select bank0
  7056  1228  00BD               	movwf	modbus_response_process@rbuf
  7057                           
  7058                           ;modbus.c: 211: uint8_t resp=0;
  7059  1229  01BB               	clrf	modbus_response_process@resp
  7060                           
  7061                           ;modbus.c: 212: st_modbusComReqStructDef* pmdbs=(st_modbusComReqStructDef*)rbuf;
  7062  122A  083D               	movf	modbus_response_process@rbuf,w
  7063  122B  00BA               	movwf	??_modbus_response_process
  7064  122C  083A               	movf	??_modbus_response_process,w
  7065  122D  00BC               	movwf	modbus_response_process@pmdbs
  7066                           
  7067                           ;modbus.c: 215: if((pmdbs->addr!=sysData.id) && (pmdbs->addr!=0x00))return;
  7068  122E  305C               	movlw	92
  7069  122F  0086               	movwf	6
  7070  1230  3023               	movlw	35
  7071  1231  0087               	movwf	7
  7072  1232  3142               	addfsr 1,2
  7073  1233  083C               	movf	modbus_response_process@pmdbs,w
  7074  1234  0084               	movwf	4
  7075  1235  3001               	movlw	1	; select bank2/3
  7076  1236  0085               	movwf	5
  7077  1237  0800               	movf	0,w
  7078  1238  0601               	xorwf	1,w
  7079  1239  1903               	skipnz
  7080  123A  2A42               	goto	l5055
  7081  123B  083C               	movf	modbus_response_process@pmdbs,w
  7082  123C  0086               	movwf	6
  7083  123D  3001               	movlw	1	; select bank2/3
  7084  123E  0087               	movwf	7
  7085  123F  0801               	movf	1,w
  7086  1240  1D03               	btfss	3,2
  7087  1241  0008               	return
  7088  1242                     l5055:	
  7089                           
  7090                           ;modbus.c: 216: if(!(crc_verify(rbuf,rlen)))return ;
  7091  1242  083D               	movf	modbus_response_process@rbuf,w
  7092  1243  00A6               	movwf	crc_verify@message
  7093  1244  3001               	movlw	1
  7094  1245  00A7               	movwf	crc_verify@message+1
  7095  1246  0839               	movf	modbus_response_process@rlen+1,w
  7096  1247  00A9               	movwf	crc_verify@n+1
  7097  1248  0838               	movf	modbus_response_process@rlen,w
  7098  1249  00A8               	movwf	crc_verify@n
  7099  124A  3190  205C  3192   	fcall	_crc_verify
  7100  124D  3A00               	xorlw	0
  7101  124E  1903               	btfsc	3,2
  7102  124F  0008               	return
  7103  1250  2A67               	goto	l5069
  7104  1251                     l5059:	
  7105                           ;modbus.c: 219: case 0x03:
  7106                           
  7107                           ;modbus.c: 218: switch(pmdbs->func){
  7108                           
  7109                           
  7110                           ;modbus.c: 220: modbus_response_command(rbuf);
  7111  1251  0020               	movlb	0	; select bank0
  7112  1252  083D               	movf	modbus_response_process@rbuf,w
  7113  1253  3196  2668         	fcall	_modbus_response_command
  7114                           
  7115                           ;modbus.c: 221: break;
  7116  1255  0008               	return
  7117  1256                     l5061:	
  7118                           ;modbus.c: 222: case 0x06:
  7119                           
  7120                           
  7121                           ;modbus.c: 223: case 0x26:;modbus.c: 224: modbus_response_write_single_register(rbuf);
  7122  1256  0020               	movlb	0	; select bank0
  7123  1257  083D               	movf	modbus_response_process@rbuf,w
  7124  1258  318C  241E         	fcall	_modbus_response_write_single_register
  7125                           
  7126                           ;modbus.c: 225: break;
  7127  125A  0008               	return
  7128  125B                     l5063:	
  7129                           ;modbus.c: 226: case 0x10:
  7130                           
  7131                           
  7132                           ;modbus.c: 227: modbus_response_write_mult_register(rbuf);
  7133  125B  0020               	movlb	0	; select bank0
  7134  125C  083D               	movf	modbus_response_process@rbuf,w
  7135  125D  3193  238F         	fcall	_modbus_response_write_mult_register
  7136                           
  7137                           ;modbus.c: 228: break;
  7138  125F  0008               	return
  7139  1260                     l5065:	
  7140                           ;modbus.c: 251: default:
  7141                           
  7142                           
  7143                           ;modbus.c: 252: modbus_response_illgeal_function(rbuf,0x01);break;
  7144  1260  0020               	movlb	0	; select bank0
  7145  1261  01AC               	clrf	modbus_response_illgeal_function@errcode
  7146  1262  0AAC               	incf	modbus_response_illgeal_function@errcode,f
  7147  1263  083D               	movf	modbus_response_process@rbuf,w
  7148  1264  3191  2141         	fcall	_modbus_response_illgeal_function
  7149                           
  7150                           ;modbus.c: 253: }
  7151  1266  0008               	return
  7152  1267                     l5069:	
  7153  1267  0020               	movlb	0	; select bank0
  7154  1268  0A3C               	incf	modbus_response_process@pmdbs,w
  7155  1269  0086               	movwf	6
  7156  126A  3001               	movlw	1	; select bank2/3
  7157  126B  0087               	movwf	7
  7158  126C  0801               	movf	1,w
  7159                           
  7160                           ; Switch size 1, requested type "space"
  7161                           ; Number of cases is 4, Range of values is 3 to 38
  7162                           ; switch strategies available:
  7163                           ; Name         Instructions Cycles
  7164                           ; simple_byte           13     7 (average)
  7165                           ; direct_byte           81     9 (fixed)
  7166                           ; jumptable            263     9 (fixed)
  7167                           ;	Chosen strategy is simple_byte
  7168  126D  3A03               	xorlw	3	; case 3
  7169  126E  1903               	skipnz
  7170  126F  2A51               	goto	l5059
  7171  1270  3A05               	xorlw	5	; case 6
  7172  1271  1903               	skipnz
  7173  1272  2A56               	goto	l5061
  7174  1273  3A16               	xorlw	22	; case 16
  7175  1274  1903               	skipnz
  7176  1275  2A5B               	goto	l5063
  7177  1276  3A36               	xorlw	54	; case 38
  7178  1277  1903               	skipnz
  7179  1278  2A56               	goto	l5061
  7180  1279  2A60               	goto	l5065
  7181  127A  0008               	return
  7182  127B                     __end_of_modbus_response_process:	
  7183                           
  7184                           	psect	text14
  7185  0C1E                     __ptext14:	
  7186 ;; *************** function _modbus_response_write_single_register *****************
  7187 ;; Defined at:
  7188 ;;		line 115 in file "src/api/modbus.c"
  7189 ;; Parameters:    Size  Location     Type
  7190 ;;  rbuf            1    wreg     PTR unsigned char 
  7191 ;;		 -> modbusBuf(32), 
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;  rbuf            1   21[BANK0 ] PTR unsigned char 
  7194 ;;		 -> modbusBuf(32), 
  7195 ;;  startAddr       2   22[BANK0 ] unsigned int 
  7196 ;;  t16             2   17[BANK0 ] unsigned int 
  7197 ;;  pmdbs           1   20[BANK0 ] PTR struct .
  7198 ;;		 -> modbusBuf(32), 
  7199 ;;  i               1   19[BANK0 ] unsigned char 
  7200 ;;  fiSave          1   16[BANK0 ] unsigned char 
  7201 ;; Return value:  Size  Location     Type
  7202 ;;                  1    wreg      void 
  7203 ;; Registers used:
  7204 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7205 ;; Tracked objects:
  7206 ;;		On entry : 0/0
  7207 ;;		On exit  : 0/0
  7208 ;;		Unchanged: 0/0
  7209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7211 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7212 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7213 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7214 ;;Total ram usage:       12 bytes
  7215 ;; Hardware stack levels used:    1
  7216 ;; Hardware stack levels required when called:    4
  7217 ;; This function calls:
  7218 ;;		_crc_append
  7219 ;;		_sys_data_save
  7220 ;;		_uart_send_len
  7221 ;; This function is called by:
  7222 ;;		_modbus_response_process
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           
  7227                           ;psect for function _modbus_response_write_single_register
  7228  0C1E                     _modbus_response_write_single_register:	
  7229                           
  7230                           ;incstack = 0
  7231                           ; Regs used in _modbus_response_write_single_register: [wreg-fsr1h+status,2+status,0+pcl
      +                          ath+cstack]
  7232                           ;modbus_response_write_single_register@rbuf stored from wreg
  7233  0C1E  0020               	movlb	0	; select bank0
  7234  0C1F  00B5               	movwf	modbus_response_write_single_register@rbuf
  7235                           
  7236                           ;modbus.c: 117: uint16_t startAddr=0;
  7237  0C20  01B6               	clrf	modbus_response_write_single_register@startAddr
  7238  0C21  01B7               	clrf	modbus_response_write_single_register@startAddr+1
  7239                           
  7240                           ;modbus.c: 118: uint16_t t16;;modbus.c: 119: uint8_t fiSave=0,i;
  7241  0C22  01B0               	clrf	modbus_response_write_single_register@fiSave
  7242                           
  7243                           ;modbus.c: 120: st_modbusComReqStructDef* pmdbs=(st_modbusComReqStructDef*)rbuf;
  7244  0C23  0835               	movf	modbus_response_write_single_register@rbuf,w
  7245  0C24  00AC               	movwf	??_modbus_response_write_single_register
  7246  0C25  082C               	movf	??_modbus_response_write_single_register,w
  7247  0C26  00B4               	movwf	modbus_response_write_single_register@pmdbs
  7248                           
  7249                           ;modbus.c: 121: if(pmdbs->addr!=sysData.id && pmdbs->addr!=0)return;
  7250  0C27  305C               	movlw	92
  7251  0C28  0086               	movwf	6
  7252  0C29  3023               	movlw	35
  7253  0C2A  0087               	movwf	7
  7254  0C2B  3142               	addfsr 1,2
  7255  0C2C  0834               	movf	modbus_response_write_single_register@pmdbs,w
  7256  0C2D  0084               	movwf	4
  7257  0C2E  3001               	movlw	1	; select bank2/3
  7258  0C2F  0085               	movwf	5
  7259  0C30  0800               	movf	0,w
  7260  0C31  0601               	xorwf	1,w
  7261  0C32  1903               	skipnz
  7262  0C33  2C3B               	goto	l4679
  7263  0C34  0834               	movf	modbus_response_write_single_register@pmdbs,w
  7264  0C35  0086               	movwf	6
  7265  0C36  3001               	movlw	1	; select bank2/3
  7266  0C37  0087               	movwf	7
  7267  0C38  0801               	movf	1,w
  7268  0C39  1D03               	btfss	3,2
  7269  0C3A  0008               	return
  7270  0C3B                     l4679:	
  7271                           
  7272                           ;modbus.c: 122: if(sysData.id==253 && pmdbs->addr==0)return;
  7273  0C3B  305C               	movlw	92
  7274  0C3C  0086               	movwf	6
  7275  0C3D  3023               	movlw	35
  7276  0C3E  0087               	movwf	7
  7277  0C3F  3142               	addfsr 1,2
  7278  0C40  30FD               	movlw	253
  7279  0C41  0601               	xorwf	1,w
  7280  0C42  1D03               	btfss	3,2
  7281  0C43  2C4B               	goto	l4685
  7282  0C44  0834               	movf	modbus_response_write_single_register@pmdbs,w
  7283  0C45  0086               	movwf	6
  7284  0C46  3001               	movlw	1	; select bank2/3
  7285  0C47  0087               	movwf	7
  7286  0C48  0801               	movf	1,w
  7287  0C49  1903               	btfsc	3,2
  7288  0C4A  0008               	return
  7289  0C4B                     l4685:	
  7290                           
  7291                           ;modbus.c: 123: startAddr=pmdbs->addr_hi;
  7292  0C4B  0834               	movf	modbus_response_write_single_register@pmdbs,w
  7293  0C4C  3E02               	addlw	2
  7294  0C4D  0086               	movwf	6
  7295  0C4E  3001               	movlw	1	; select bank2/3
  7296  0C4F  0087               	movwf	7
  7297  0C50  0801               	movf	1,w
  7298  0C51  00AC               	movwf	??_modbus_response_write_single_register
  7299  0C52  01AD               	clrf	??_modbus_response_write_single_register+1
  7300  0C53  082C               	movf	??_modbus_response_write_single_register,w
  7301  0C54  00B6               	movwf	modbus_response_write_single_register@startAddr
  7302  0C55  082D               	movf	??_modbus_response_write_single_register+1,w
  7303  0C56  00B7               	movwf	modbus_response_write_single_register@startAddr+1
  7304                           
  7305                           ;modbus.c: 124: startAddr<<=8;
  7306  0C57  3008               	movlw	8
  7307  0C58                     u3945:	
  7308  0C58  35B6               	lslf	modbus_response_write_single_register@startAddr,f
  7309  0C59  0DB7               	rlf	modbus_response_write_single_register@startAddr+1,f
  7310  0C5A  0B89               	decfsz	9,f
  7311  0C5B  2C58               	goto	u3945
  7312                           
  7313                           ;modbus.c: 125: startAddr |= pmdbs->addr_lo;
  7314  0C5C  0834               	movf	modbus_response_write_single_register@pmdbs,w
  7315  0C5D  3E03               	addlw	3
  7316  0C5E  0086               	movwf	6
  7317  0C5F  3001               	movlw	1	; select bank2/3
  7318  0C60  0087               	movwf	7
  7319  0C61  0801               	movf	1,w
  7320  0C62  00AC               	movwf	??_modbus_response_write_single_register
  7321  0C63  01AD               	clrf	??_modbus_response_write_single_register+1
  7322  0C64  082C               	movf	??_modbus_response_write_single_register,w
  7323  0C65  04B6               	iorwf	modbus_response_write_single_register@startAddr,f
  7324  0C66  082D               	movf	??_modbus_response_write_single_register+1,w
  7325  0C67  04B7               	iorwf	modbus_response_write_single_register@startAddr+1,f
  7326                           
  7327                           ;modbus.c: 126: startAddr = startAddr & 0xff;
  7328  0C68  30FF               	movlw	255
  7329  0C69  0536               	andwf	modbus_response_write_single_register@startAddr,w
  7330  0C6A  00B6               	movwf	modbus_response_write_single_register@startAddr
  7331  0C6B  3000               	movlw	0
  7332  0C6C  0537               	andwf	modbus_response_write_single_register@startAddr+1,w
  7333  0C6D  00B7               	movwf	modbus_response_write_single_register@startAddr+1
  7334                           
  7335                           ;modbus.c: 127: if(startAddr==0x02){
  7336  0C6E  3002               	movlw	2
  7337  0C6F  0636               	xorwf	modbus_response_write_single_register@startAddr,w
  7338  0C70  0437               	iorwf	modbus_response_write_single_register@startAddr+1,w
  7339  0C71  1D03               	btfss	3,2
  7340  0C72  2C81               	goto	l4697
  7341                           
  7342                           ;modbus.c: 128: sysData.id=rbuf[5];
  7343  0C73  0835               	movf	modbus_response_write_single_register@rbuf,w
  7344  0C74  3E05               	addlw	5
  7345  0C75  0086               	movwf	6
  7346  0C76  3001               	movlw	1	; select bank2/3
  7347  0C77  0087               	movwf	7
  7348  0C78  0801               	movf	1,w
  7349  0C79  00AC               	movwf	??_modbus_response_write_single_register
  7350  0C7A  305E               	movlw	94
  7351  0C7B  0086               	movwf	6
  7352  0C7C  3023               	movlw	35
  7353  0C7D  0087               	movwf	7
  7354  0C7E  082C               	movf	??_modbus_response_write_single_register,w
  7355  0C7F  0081               	movwf	1
  7356  0C80  2D41               	goto	l804
  7357  0C81                     l4697:	
  7358                           ;modbus.c: 130: }else if(startAddr==0x03){
  7359                           
  7360                           ;modbus.c: 129: fiSave=1;
  7361                           
  7362  0C81  3003               	movlw	3
  7363  0C82  0636               	xorwf	modbus_response_write_single_register@startAddr,w
  7364  0C83  0437               	iorwf	modbus_response_write_single_register@startAddr+1,w
  7365  0C84  1D03               	btfss	3,2
  7366  0C85  2C9F               	goto	l4705
  7367                           
  7368                           ;modbus.c: 131: sysData.pidSetFlg1=rbuf[4];
  7369  0C86  0835               	movf	modbus_response_write_single_register@rbuf,w
  7370  0C87  3E04               	addlw	4
  7371  0C88  0086               	movwf	6
  7372  0C89  3001               	movlw	1	; select bank2/3
  7373  0C8A  0087               	movwf	7
  7374  0C8B  0801               	movf	1,w
  7375  0C8C  00AC               	movwf	??_modbus_response_write_single_register
  7376  0C8D  305D               	movlw	93
  7377  0C8E  0086               	movwf	6
  7378  0C8F  3023               	movlw	35
  7379  0C90  0087               	movwf	7
  7380  0C91  082C               	movf	??_modbus_response_write_single_register,w
  7381  0C92  0081               	movwf	1
  7382                           
  7383                           ;modbus.c: 132: sysData.pidSetFlg0=rbuf[5];
  7384  0C93  305C               	movlw	92
  7385  0C94  0086               	movwf	6
  7386  0C95  3023               	movlw	35
  7387  0C96  0087               	movwf	7
  7388  0C97  0835               	movf	modbus_response_write_single_register@rbuf,w
  7389  0C98  3E05               	addlw	5
  7390  0C99  0084               	movwf	4
  7391  0C9A  3001               	movlw	1	; select bank2/3
  7392  0C9B  0085               	movwf	5
  7393  0C9C  0800               	movf	0,w
  7394  0C9D  3FC0               	movwi [0]fsr1
  7395  0C9E  2D41               	goto	l804
  7396  0C9F                     l4705:	
  7397                           ;modbus.c: 134: }else if(startAddr>0x0f && startAddr < 0x10+30*2){
  7398                           
  7399                           ;modbus.c: 133: fiSave=1;
  7400                           
  7401  0C9F  3000               	movlw	0
  7402  0CA0  0237               	subwf	modbus_response_write_single_register@startAddr+1,w
  7403  0CA1  3010               	movlw	16
  7404  0CA2  1903               	skipnz
  7405  0CA3  0236               	subwf	modbus_response_write_single_register@startAddr,w
  7406  0CA4  1C03               	skipc
  7407  0CA5  0008               	return
  7408  0CA6  3000               	movlw	0
  7409  0CA7  0237               	subwf	modbus_response_write_single_register@startAddr+1,w
  7410  0CA8  304C               	movlw	76
  7411  0CA9  1903               	skipnz
  7412  0CAA  0236               	subwf	modbus_response_write_single_register@startAddr,w
  7413  0CAB  1803               	skipnc
  7414  0CAC  0008               	return
  7415                           
  7416                           ;modbus.c: 135: startAddr-=0x10;
  7417  0CAD  3010               	movlw	16
  7418  0CAE  02B6               	subwf	modbus_response_write_single_register@startAddr,f
  7419  0CAF  3000               	movlw	0
  7420  0CB0  3BB7               	subwfb	modbus_response_write_single_register@startAddr+1,f
  7421                           
  7422                           ;modbus.c: 136: if(startAddr & 0x01){
  7423  0CB1  1C36               	btfss	modbus_response_write_single_register@startAddr,0
  7424  0CB2  2D43               	goto	l4737
  7425                           
  7426                           ;modbus.c: 137: t16=rbuf[4];
  7427  0CB3  0835               	movf	modbus_response_write_single_register@rbuf,w
  7428  0CB4  3E04               	addlw	4
  7429  0CB5  0086               	movwf	6
  7430  0CB6  3001               	movlw	1	; select bank2/3
  7431  0CB7  0087               	movwf	7
  7432  0CB8  0801               	movf	1,w
  7433  0CB9  00AC               	movwf	??_modbus_response_write_single_register
  7434  0CBA  01AD               	clrf	??_modbus_response_write_single_register+1
  7435  0CBB  082C               	movf	??_modbus_response_write_single_register,w
  7436  0CBC  00B1               	movwf	modbus_response_write_single_register@t16
  7437  0CBD  082D               	movf	??_modbus_response_write_single_register+1,w
  7438  0CBE  00B2               	movwf	modbus_response_write_single_register@t16+1
  7439                           
  7440                           ;modbus.c: 138: t16<<=8;
  7441  0CBF  3008               	movlw	8
  7442  0CC0                     u4005:	
  7443  0CC0  35B1               	lslf	modbus_response_write_single_register@t16,f
  7444  0CC1  0DB2               	rlf	modbus_response_write_single_register@t16+1,f
  7445  0CC2  0B89               	decfsz	9,f
  7446  0CC3  2CC0               	goto	u4005
  7447                           
  7448                           ;modbus.c: 139: t16 |= rbuf[5];
  7449  0CC4  0835               	movf	modbus_response_write_single_register@rbuf,w
  7450  0CC5  3E05               	addlw	5
  7451  0CC6  0086               	movwf	6
  7452  0CC7  3001               	movlw	1	; select bank2/3
  7453  0CC8  0087               	movwf	7
  7454  0CC9  0801               	movf	1,w
  7455  0CCA  00AC               	movwf	??_modbus_response_write_single_register
  7456  0CCB  01AD               	clrf	??_modbus_response_write_single_register+1
  7457  0CCC  082C               	movf	??_modbus_response_write_single_register,w
  7458  0CCD  04B1               	iorwf	modbus_response_write_single_register@t16,f
  7459  0CCE  082D               	movf	??_modbus_response_write_single_register+1,w
  7460  0CCF  04B2               	iorwf	modbus_response_write_single_register@t16+1,f
  7461                           
  7462                           ;modbus.c: 140: sysData.calibVoMV[startAddr>>1]=t16;
  7463  0CD0  0837               	movf	modbus_response_write_single_register@startAddr+1,w
  7464  0CD1  00AD               	movwf	??_modbus_response_write_single_register+1
  7465  0CD2  0836               	movf	modbus_response_write_single_register@startAddr,w
  7466  0CD3  00AC               	movwf	??_modbus_response_write_single_register
  7467  0CD4  36AD               	lsrf	??_modbus_response_write_single_register+1,f
  7468  0CD5  0CAC               	rrf	??_modbus_response_write_single_register,f
  7469  0CD6  35AC               	lslf	??_modbus_response_write_single_register,f
  7470  0CD7  0DAD               	rlf	??_modbus_response_write_single_register+1,f
  7471  0CD8  30A2               	movlw	162
  7472  0CD9  00AE               	movwf	??_modbus_response_write_single_register+2
  7473  0CDA  3023               	movlw	35
  7474  0CDB  00AF               	movwf	??_modbus_response_write_single_register+3
  7475  0CDC  082C               	movf	??_modbus_response_write_single_register,w
  7476  0CDD  072E               	addwf	??_modbus_response_write_single_register+2,w
  7477  0CDE  0086               	movwf	6
  7478  0CDF  082D               	movf	??_modbus_response_write_single_register+1,w
  7479  0CE0  3D2F               	addwfc	??_modbus_response_write_single_register+3,w
  7480  0CE1  0087               	movwf	7
  7481  0CE2  0831               	movf	modbus_response_write_single_register@t16,w
  7482  0CE3  3FC0               	movwi [0]fsr1
  7483  0CE4  0832               	movf	modbus_response_write_single_register@t16+1,w
  7484  0CE5  3FC1               	movwi [1]fsr1
  7485                           
  7486                           ;modbus.c: 141: sysData.calibRsAdc[startAddr>>1]=rsLoAvg;
  7487  0CE6  0837               	movf	modbus_response_write_single_register@startAddr+1,w
  7488  0CE7  00AD               	movwf	??_modbus_response_write_single_register+1
  7489  0CE8  0836               	movf	modbus_response_write_single_register@startAddr,w
  7490  0CE9  00AC               	movwf	??_modbus_response_write_single_register
  7491  0CEA  36AD               	lsrf	??_modbus_response_write_single_register+1,f
  7492  0CEB  0CAC               	rrf	??_modbus_response_write_single_register,f
  7493  0CEC  35AC               	lslf	??_modbus_response_write_single_register,f
  7494  0CED  0DAD               	rlf	??_modbus_response_write_single_register+1,f
  7495  0CEE  3066               	movlw	102
  7496  0CEF  00AE               	movwf	??_modbus_response_write_single_register+2
  7497  0CF0  3023               	movlw	35
  7498  0CF1  00AF               	movwf	??_modbus_response_write_single_register+3
  7499  0CF2  082C               	movf	??_modbus_response_write_single_register,w
  7500  0CF3  072E               	addwf	??_modbus_response_write_single_register+2,w
  7501  0CF4  0086               	movwf	6
  7502  0CF5  082D               	movf	??_modbus_response_write_single_register+1,w
  7503  0CF6  3D2F               	addwfc	??_modbus_response_write_single_register+3,w
  7504  0CF7  0087               	movwf	7
  7505  0CF8  0853               	movf	_rsLoAvg,w
  7506  0CF9  3FC0               	movwi [0]fsr1
  7507  0CFA  0854               	movf	_rsLoAvg+1,w
  7508  0CFB  3FC1               	movwi [1]fsr1
  7509                           
  7510                           ;modbus.c: 143: if(rbuf[1]==0x26){
  7511  0CFC  0A35               	incf	modbus_response_write_single_register@rbuf,w
  7512  0CFD  0086               	movwf	6
  7513  0CFE  3001               	movlw	1	; select bank2/3
  7514  0CFF  0087               	movwf	7
  7515  0D00  3026               	movlw	38
  7516  0D01  0601               	xorwf	1,w
  7517  0D02  1D03               	btfss	3,2
  7518  0D03  2D41               	goto	l804
  7519                           
  7520                           ;modbus.c: 144: for(i=(startAddr>>1)+1;i<30;i++){
  7521  0D04  0837               	movf	modbus_response_write_single_register@startAddr+1,w
  7522  0D05  00AD               	movwf	??_modbus_response_write_single_register+1
  7523  0D06  0836               	movf	modbus_response_write_single_register@startAddr,w
  7524  0D07  00AC               	movwf	??_modbus_response_write_single_register
  7525  0D08  36AD               	lsrf	??_modbus_response_write_single_register+1,f
  7526  0D09  0CAC               	rrf	??_modbus_response_write_single_register,f
  7527  0D0A  082C               	movf	??_modbus_response_write_single_register,w
  7528  0D0B  3E01               	addlw	1
  7529  0D0C  00AE               	movwf	??_modbus_response_write_single_register+2
  7530  0D0D  082E               	movf	??_modbus_response_write_single_register+2,w
  7531  0D0E  00B3               	movwf	modbus_response_write_single_register@i
  7532  0D0F  301E               	movlw	30
  7533  0D10  0233               	subwf	modbus_response_write_single_register@i,w
  7534  0D11  1803               	btfsc	3,0
  7535  0D12  2D41               	goto	l804
  7536  0D13                     l4731:	
  7537                           
  7538                           ;modbus.c: 145: sysData.calibVoMV[i]=t16;
  7539  0D13  0833               	movf	modbus_response_write_single_register@i,w
  7540  0D14  00AC               	movwf	??_modbus_response_write_single_register
  7541  0D15  01AD               	clrf	??_modbus_response_write_single_register+1
  7542  0D16  35AC               	lslf	??_modbus_response_write_single_register,f
  7543  0D17  0DAD               	rlf	??_modbus_response_write_single_register+1,f
  7544  0D18  30A2               	movlw	162
  7545  0D19  00AE               	movwf	??_modbus_response_write_single_register+2
  7546  0D1A  3023               	movlw	35
  7547  0D1B  00AF               	movwf	??_modbus_response_write_single_register+3
  7548  0D1C  082C               	movf	??_modbus_response_write_single_register,w
  7549  0D1D  072E               	addwf	??_modbus_response_write_single_register+2,w
  7550  0D1E  0086               	movwf	6
  7551  0D1F  082D               	movf	??_modbus_response_write_single_register+1,w
  7552  0D20  3D2F               	addwfc	??_modbus_response_write_single_register+3,w
  7553  0D21  0087               	movwf	7
  7554  0D22  0831               	movf	modbus_response_write_single_register@t16,w
  7555  0D23  3FC0               	movwi [0]fsr1
  7556  0D24  0832               	movf	modbus_response_write_single_register@t16+1,w
  7557  0D25  3FC1               	movwi [1]fsr1
  7558                           
  7559                           ;modbus.c: 146: sysData.calibRsAdc[i]=rsLoAvg;
  7560  0D26  0833               	movf	modbus_response_write_single_register@i,w
  7561  0D27  00AC               	movwf	??_modbus_response_write_single_register
  7562  0D28  01AD               	clrf	??_modbus_response_write_single_register+1
  7563  0D29  35AC               	lslf	??_modbus_response_write_single_register,f
  7564  0D2A  0DAD               	rlf	??_modbus_response_write_single_register+1,f
  7565  0D2B  3066               	movlw	102
  7566  0D2C  00AE               	movwf	??_modbus_response_write_single_register+2
  7567  0D2D  3023               	movlw	35
  7568  0D2E  00AF               	movwf	??_modbus_response_write_single_register+3
  7569  0D2F  082C               	movf	??_modbus_response_write_single_register,w
  7570  0D30  072E               	addwf	??_modbus_response_write_single_register+2,w
  7571  0D31  0086               	movwf	6
  7572  0D32  082D               	movf	??_modbus_response_write_single_register+1,w
  7573  0D33  3D2F               	addwfc	??_modbus_response_write_single_register+3,w
  7574  0D34  0087               	movwf	7
  7575  0D35  0853               	movf	_rsLoAvg,w
  7576  0D36  3FC0               	movwi [0]fsr1
  7577  0D37  0854               	movf	_rsLoAvg+1,w
  7578  0D38  3FC1               	movwi [1]fsr1
  7579  0D39  3001               	movlw	1
  7580  0D3A  00AC               	movwf	??_modbus_response_write_single_register
  7581  0D3B  082C               	movf	??_modbus_response_write_single_register,w
  7582  0D3C  07B3               	addwf	modbus_response_write_single_register@i,f
  7583  0D3D  301E               	movlw	30
  7584  0D3E  0233               	subwf	modbus_response_write_single_register@i,w
  7585  0D3F  1C03               	skipc
  7586  0D40  2D13               	goto	l4731
  7587  0D41                     l804:	
  7588                           
  7589                           ;modbus.c: 147: };modbus.c: 148: };modbus.c: 149: fiSave=1;
  7590  0D41  01B0               	clrf	modbus_response_write_single_register@fiSave
  7591  0D42  0AB0               	incf	modbus_response_write_single_register@fiSave,f
  7592  0D43                     l4737:	
  7593                           ;modbus.c: 153: return;
  7594                           
  7595                           ;modbus.c: 150: };modbus.c: 151: }else{
  7596                           
  7597                           
  7598                           ;modbus.c: 154: };modbus.c: 155: if(fiSave)sys_data_save();
  7599  0D43  0830               	movf	modbus_response_write_single_register@fiSave,w
  7600  0D44  1903               	btfsc	3,2
  7601  0D45  2D49               	goto	l4741
  7602  0D46  3190  2093  318C   	fcall	_sys_data_save
  7603  0D49                     l4741:	
  7604                           
  7605                           ;modbus.c: 156: if(pmdbs->addr==0)return;
  7606  0D49  0020               	movlb	0	; select bank0
  7607  0D4A  0834               	movf	modbus_response_write_single_register@pmdbs,w
  7608  0D4B  0086               	movwf	6
  7609  0D4C  3001               	movlw	1	; select bank2/3
  7610  0D4D  0087               	movwf	7
  7611  0D4E  0801               	movf	1,w
  7612  0D4F  1903               	btfsc	3,2
  7613  0D50  0008               	return
  7614                           
  7615                           ;modbus.c: 157: rbuf[0]=sysData.id;
  7616  0D51  305C               	movlw	92
  7617  0D52  0086               	movwf	6
  7618  0D53  3023               	movlw	35
  7619  0D54  0087               	movwf	7
  7620  0D55  3142               	addfsr 1,2
  7621  0D56  0801               	movf	1,w
  7622  0D57  00AC               	movwf	??_modbus_response_write_single_register
  7623  0D58  0835               	movf	modbus_response_write_single_register@rbuf,w
  7624  0D59  0086               	movwf	6
  7625  0D5A  3001               	movlw	1	; select bank2/3
  7626  0D5B  0087               	movwf	7
  7627  0D5C  082C               	movf	??_modbus_response_write_single_register,w
  7628  0D5D  0081               	movwf	1
  7629                           
  7630                           ;modbus.c: 158: crc_append(rbuf,6);
  7631  0D5E  0835               	movf	modbus_response_write_single_register@rbuf,w
  7632  0D5F  00A6               	movwf	crc_append@message
  7633  0D60  3001               	movlw	1
  7634  0D61  00A7               	movwf	crc_append@message+1
  7635  0D62  3006               	movlw	6
  7636  0D63  00A8               	movwf	crc_append@n
  7637  0D64  3000               	movlw	0
  7638  0D65  00A9               	movwf	crc_append@n+1
  7639  0D66  319E  269D  318C   	fcall	_crc_append
  7640                           
  7641                           ;modbus.c: 159: uart_send_len(rbuf,8);
  7642  0D69  3008               	movlw	8
  7643  0D6A  0020               	movlb	0	; select bank0
  7644  0D6B  00AC               	movwf	??_modbus_response_write_single_register
  7645  0D6C  082C               	movf	??_modbus_response_write_single_register,w
  7646  0D6D  00F1               	movwf	uart_send_len@len
  7647  0D6E  0835               	movf	modbus_response_write_single_register@rbuf,w
  7648  0D6F  319E  267A         	fcall	_uart_send_len
  7649  0D71  0008               	return
  7650  0D72                     __end_of_modbus_response_write_single_register:	
  7651                           
  7652                           	psect	text15
  7653  138F                     __ptext15:	
  7654 ;; *************** function _modbus_response_write_mult_register *****************
  7655 ;; Defined at:
  7656 ;;		line 162 in file "src/api/modbus.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;  rbuf            1    wreg     PTR unsigned char 
  7659 ;;		 -> modbusBuf(32), 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;  rbuf            1   15[BANK0 ] PTR unsigned char 
  7662 ;;		 -> modbusBuf(32), 
  7663 ;;  stb             1   16[BANK0 ] PTR struct .
  7664 ;;		 -> modbusBuf(32), 
  7665 ;;  len             1   14[BANK0 ] unsigned char 
  7666 ;;  startAddr       1   13[BANK0 ] unsigned char 
  7667 ;; Return value:  Size  Location     Type
  7668 ;;                  1    wreg      void 
  7669 ;; Registers used:
  7670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7671 ;; Tracked objects:
  7672 ;;		On entry : 0/0
  7673 ;;		On exit  : 0/0
  7674 ;;		Unchanged: 0/0
  7675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7677 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7678 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7679 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7680 ;;Total ram usage:        5 bytes
  7681 ;; Hardware stack levels used:    1
  7682 ;; Hardware stack levels required when called:    4
  7683 ;; This function calls:
  7684 ;;		_crc_append
  7685 ;;		_sys_data_save
  7686 ;;		_uart_send_len
  7687 ;; This function is called by:
  7688 ;;		_modbus_response_process
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           
  7692                           
  7693                           ;psect for function _modbus_response_write_mult_register
  7694  138F                     _modbus_response_write_mult_register:	
  7695                           
  7696                           ;incstack = 0
  7697                           ; Regs used in _modbus_response_write_mult_register: [wreg-fsr1h+status,2+status,0+pclat
      +                          h+cstack]
  7698                           ;modbus_response_write_mult_register@rbuf stored from wreg
  7699  138F  0020               	movlb	0	; select bank0
  7700  1390  00AF               	movwf	modbus_response_write_mult_register@rbuf
  7701                           
  7702                           ;modbus.c: 164: uint8_t startAddr,len;;modbus.c: 166: st_modbusWriteMultReg_t* stb=(st_m
      +                          odbusWriteMultReg_t*)rbuf;
  7703  1391  082F               	movf	modbus_response_write_mult_register@rbuf,w
  7704  1392  00AC               	movwf	??_modbus_response_write_mult_register
  7705  1393  082C               	movf	??_modbus_response_write_mult_register,w
  7706  1394  00B0               	movwf	modbus_response_write_mult_register@stb
  7707                           
  7708                           ;modbus.c: 167: if(stb->addr!=sysData.id || stb->addr==0)return;
  7709  1395  305C               	movlw	92
  7710  1396  0086               	movwf	6
  7711  1397  3023               	movlw	35
  7712  1398  0087               	movwf	7
  7713  1399  3142               	addfsr 1,2
  7714  139A  0830               	movf	modbus_response_write_mult_register@stb,w
  7715  139B  0084               	movwf	4
  7716  139C  3001               	movlw	1	; select bank2/3
  7717  139D  0085               	movwf	5
  7718  139E  0800               	movf	0,w
  7719  139F  0601               	xorwf	1,w
  7720  13A0  1D03               	skipz
  7721  13A1  0008               	return
  7722  13A2  0830               	movf	modbus_response_write_mult_register@stb,w
  7723  13A3  0086               	movwf	6
  7724  13A4  3001               	movlw	1	; select bank2/3
  7725  13A5  0087               	movwf	7
  7726  13A6  0801               	movf	1,w
  7727  13A7  1903               	btfsc	3,2
  7728  13A8  0008               	return
  7729                           
  7730                           ;modbus.c: 168: startAddr=stb->addr_lo;
  7731  13A9  0830               	movf	modbus_response_write_mult_register@stb,w
  7732  13AA  0086               	movwf	6
  7733  13AB  3001               	movlw	1	; select bank2/3
  7734  13AC  0087               	movwf	7
  7735  13AD  3001               	movlw	1	; select bank2/3
  7736  13AE  3F43               	moviw [3]fsr1
  7737  13AF  00AD               	movwf	modbus_response_write_mult_register@startAddr
  7738                           
  7739                           ;modbus.c: 169: len=stb->len_lo;
  7740  13B0  0830               	movf	modbus_response_write_mult_register@stb,w
  7741  13B1  0086               	movwf	6
  7742  13B2  3001               	movlw	1	; select bank2/3
  7743  13B3  0087               	movwf	7
  7744  13B4  3001               	movlw	1	; select bank2/3
  7745  13B5  3F45               	moviw [5]fsr1
  7746  13B6  00AE               	movwf	modbus_response_write_mult_register@len
  7747                           
  7748                           ;modbus.c: 170: if(len!=3)return ;
  7749  13B7  3003               	movlw	3
  7750  13B8  062E               	xorwf	modbus_response_write_mult_register@len,w
  7751  13B9  1D03               	btfss	3,2
  7752  13BA  0008               	return
  7753                           
  7754                           ;modbus.c: 171: if(startAddr!=4)return;
  7755  13BB  3004               	movlw	4
  7756  13BC  062D               	xorwf	modbus_response_write_mult_register@startAddr,w
  7757  13BD  1D03               	btfss	3,2
  7758  13BE  0008               	return
  7759                           
  7760                           ;modbus.c: 173: sysData.pidKp=(stb->data[0]<<8)|(stb->data[1]);
  7761  13BF  0830               	movf	modbus_response_write_mult_register@stb,w
  7762  13C0  3E06               	addlw	6
  7763  13C1  0084               	movwf	4
  7764  13C2  3001               	movlw	1	; select bank2/3
  7765  13C3  0085               	movwf	5
  7766  13C4  0800               	movf	0,w
  7767  13C5  00AC               	movwf	??_modbus_response_write_mult_register
  7768  13C6  0830               	movf	modbus_response_write_mult_register@stb,w
  7769  13C7  3E07               	addlw	7
  7770  13C8  0084               	movwf	4
  7771  13C9  3001               	movlw	1	; select bank2/3
  7772  13CA  0085               	movwf	5
  7773  13CB  305C               	movlw	92
  7774  13CC  0086               	movwf	6
  7775  13CD  3023               	movlw	35
  7776  13CE  0087               	movwf	7
  7777  13CF  3144               	addfsr 1,4
  7778  13D0  0800               	movf	0,w
  7779  13D1  3FC0               	movwi [0]fsr1
  7780  13D2  082C               	movf	??_modbus_response_write_mult_register,w
  7781  13D3  3FC1               	movwi [1]fsr1
  7782                           
  7783                           ;modbus.c: 174: sysData.pidTi=(stb->data[2]<<8)|(stb->data[3]);
  7784  13D4  0830               	movf	modbus_response_write_mult_register@stb,w
  7785  13D5  3E08               	addlw	8
  7786  13D6  0084               	movwf	4
  7787  13D7  3001               	movlw	1	; select bank2/3
  7788  13D8  0085               	movwf	5
  7789  13D9  0800               	movf	0,w
  7790  13DA  00AC               	movwf	??_modbus_response_write_mult_register
  7791  13DB  0830               	movf	modbus_response_write_mult_register@stb,w
  7792  13DC  3E09               	addlw	9
  7793  13DD  0084               	movwf	4
  7794  13DE  3001               	movlw	1	; select bank2/3
  7795  13DF  0085               	movwf	5
  7796  13E0  305C               	movlw	92
  7797  13E1  0086               	movwf	6
  7798  13E2  3023               	movlw	35
  7799  13E3  0087               	movwf	7
  7800  13E4  3146               	addfsr 1,6
  7801  13E5  0800               	movf	0,w
  7802  13E6  3FC0               	movwi [0]fsr1
  7803  13E7  082C               	movf	??_modbus_response_write_mult_register,w
  7804  13E8  3FC1               	movwi [1]fsr1
  7805                           
  7806                           ;modbus.c: 176: sys_data_save();
  7807  13E9  3190  2093  3193   	fcall	_sys_data_save
  7808                           
  7809                           ;modbus.c: 177: crc_append(rbuf,sizeof(st_modbusWriteMultReg_t)-2);
  7810  13EC  0020               	movlb	0	; select bank0
  7811  13ED  082F               	movf	modbus_response_write_mult_register@rbuf,w
  7812  13EE  00A6               	movwf	crc_append@message
  7813  13EF  3001               	movlw	1
  7814  13F0  00A7               	movwf	crc_append@message+1
  7815  13F1  3006               	movlw	6
  7816  13F2  00A8               	movwf	crc_append@n
  7817  13F3  3000               	movlw	0
  7818  13F4  00A9               	movwf	crc_append@n+1
  7819  13F5  319E  269D  3193   	fcall	_crc_append
  7820                           
  7821                           ;modbus.c: 178: uart_send_len(rbuf,sizeof(st_modbusWriteMultReg_t));
  7822  13F8  3008               	movlw	8
  7823  13F9  0020               	movlb	0	; select bank0
  7824  13FA  00AC               	movwf	??_modbus_response_write_mult_register
  7825  13FB  082C               	movf	??_modbus_response_write_mult_register,w
  7826  13FC  00F1               	movwf	uart_send_len@len
  7827  13FD  082F               	movf	modbus_response_write_mult_register@rbuf,w
  7828  13FE  319E  267A         	fcall	_uart_send_len
  7829  1400  0008               	return
  7830  1401                     __end_of_modbus_response_write_mult_register:	
  7831                           
  7832                           	psect	text16
  7833  1093                     __ptext16:	
  7834 ;; *************** function _sys_data_save *****************
  7835 ;; Defined at:
  7836 ;;		line 95 in file "src/api/sysData.c"
  7837 ;; Parameters:    Size  Location     Type
  7838 ;;		None
  7839 ;; Auto vars:     Size  Location     Type
  7840 ;;		None
  7841 ;; Return value:  Size  Location     Type
  7842 ;;                  1    wreg      void 
  7843 ;; Registers used:
  7844 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7845 ;; Tracked objects:
  7846 ;;		On entry : 0/0
  7847 ;;		On exit  : 0/0
  7848 ;;		Unchanged: 0/0
  7849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7854 ;;Total ram usage:        0 bytes
  7855 ;; Hardware stack levels used:    1
  7856 ;; Hardware stack levels required when called:    3
  7857 ;; This function calls:
  7858 ;;		_crc_append
  7859 ;;		_my_flash_read_system_erase
  7860 ;;		_my_flash_system_write
  7861 ;; This function is called by:
  7862 ;;		_sys_data_init
  7863 ;;		_modbus_response_write_single_register
  7864 ;;		_modbus_response_write_mult_register
  7865 ;; This function uses a non-reentrant model
  7866 ;;
  7867                           
  7868                           
  7869                           ;psect for function _sys_data_save
  7870  1093                     _sys_data_save:	
  7871                           
  7872                           ;sysData.c: 97: crc_append((uint8_t*)&sysData,sizeof(sysData_t)-2);
  7873                           
  7874                           ;incstack = 0
  7875                           ; Regs used in _sys_data_save: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7876  1093  305C               	movlw	92
  7877  1094  0020               	movlb	0	; select bank0
  7878  1095  00A6               	movwf	crc_append@message
  7879  1096  3023               	movlw	35
  7880  1097  00A7               	movwf	crc_append@message+1
  7881  1098  3082               	movlw	130
  7882  1099  00A8               	movwf	crc_append@n
  7883  109A  3000               	movlw	0
  7884  109B  00A9               	movwf	crc_append@n+1
  7885  109C  319E  269D  3190   	fcall	_crc_append
  7886                           
  7887                           ;sysData.c: 98: my_flash_read_system_erase();
  7888  109F  3190  2005  3190   	fcall	_my_flash_read_system_erase
  7889                           
  7890                           ;sysData.c: 99: my_flash_system_write((uint8_t*)&sysData,sizeof(sysData_t));
  7891  10A2  305C               	movlw	92
  7892  10A3  00F1               	movwf	my_flash_system_write@buf
  7893  10A4  3023               	movlw	35
  7894  10A5  00F2               	movwf	my_flash_system_write@buf+1
  7895  10A6  3084               	movlw	132
  7896  10A7  00F3               	movwf	my_flash_system_write@len
  7897  10A8  3000               	movlw	0
  7898  10A9  00F4               	movwf	my_flash_system_write@len+1
  7899  10AA  3194  2401         	fcall	_my_flash_system_write
  7900                           
  7901                           ;sysData.c: 100: PidKp=sysData.pidKp;
  7902  10AC  305C               	movlw	92
  7903  10AD  0086               	movwf	6
  7904  10AE  3023               	movlw	35
  7905  10AF  0087               	movwf	7
  7906  10B0  3144               	addfsr 1,4
  7907  10B1  3F40               	moviw [0]fsr1
  7908  10B2  0020               	movlb	0	; select bank0
  7909  10B3  00D7               	movwf	_PidKp
  7910  10B4  3F41               	moviw [1]fsr1
  7911  10B5  00D8               	movwf	_PidKp+1
  7912                           
  7913                           ;sysData.c: 101: PidTi=sysData.pidTi;
  7914  10B6  305C               	movlw	92
  7915  10B7  0086               	movwf	6
  7916  10B8  3023               	movlw	35
  7917  10B9  0087               	movwf	7
  7918  10BA  3146               	addfsr 1,6
  7919  10BB  3F40               	moviw [0]fsr1
  7920  10BC  0021               	movlb	1	; select bank1
  7921  10BD  00CA               	movwf	_PidTi^(0+128)
  7922  10BE  3F41               	moviw [1]fsr1
  7923  10BF  00CB               	movwf	(_PidTi+1)^(0+128)
  7924                           
  7925                           ;sysData.c: 102: PidTd=sysData.pidTd;;
  7926  10C0  305C               	movlw	92
  7927  10C1  0086               	movwf	6
  7928  10C2  3023               	movlw	35
  7929  10C3  0087               	movwf	7
  7930  10C4  3148               	addfsr 1,8
  7931  10C5  3F40               	moviw [0]fsr1
  7932  10C6  00C8               	movwf	_PidTd^(0+128)
  7933  10C7  3F41               	moviw [1]fsr1
  7934  10C8  00C9               	movwf	(_PidTd+1)^(0+128)
  7935  10C9  0008               	return
  7936  10CA                     __end_of_sys_data_save:	
  7937                           
  7938                           	psect	text17
  7939  1401                     __ptext17:	
  7940 ;; *************** function _my_flash_system_write *****************
  7941 ;; Defined at:
  7942 ;;		line 47 in file "src/api/sysData.c"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;  buf             2    1[COMMON] PTR unsigned char 
  7945 ;;		 -> sysData(132), 
  7946 ;;  len             2    3[COMMON] unsigned int 
  7947 ;; Auto vars:     Size  Location     Type
  7948 ;;  flashAddr       2    7[BANK0 ] unsigned int 
  7949 ;;  loc             2    5[BANK0 ] unsigned int 
  7950 ;;  blocNum         2    3[BANK0 ] unsigned int 
  7951 ;;  j               2    0[BANK0 ] unsigned int 
  7952 ;;  i               1    9[BANK0 ] unsigned char 
  7953 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  2    1[COMMON] unsigned int 
  7956 ;; Registers used:
  7957 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7963 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7964 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7965 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7966 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7967 ;;Total ram usage:       16 bytes
  7968 ;; Hardware stack levels used:    1
  7969 ;; Hardware stack levels required when called:    1
  7970 ;; This function calls:
  7971 ;;		Nothing
  7972 ;; This function is called by:
  7973 ;;		_sys_data_save
  7974 ;; This function uses a non-reentrant model
  7975 ;;
  7976                           
  7977                           
  7978                           ;psect for function _my_flash_system_write
  7979  1401                     _my_flash_system_write:	
  7980                           
  7981                           ;sysData.c: 49: uint16_t blocNum=0;
  7982                           
  7983                           ;incstack = 0
  7984                           ; Regs used in _my_flash_system_write: [wreg+fsr1l+fsr1h+status,2+status,0]
  7985  1401  0020               	movlb	0	; select bank0
  7986  1402  01A3               	clrf	my_flash_system_write@blocNum
  7987  1403  01A4               	clrf	my_flash_system_write@blocNum+1
  7988                           
  7989                           ;sysData.c: 50: uint16_t loc,j;;sysData.c: 51: uint16_t flashAddr=0x1f00;
  7990  1404  3000               	movlw	0
  7991  1405  00A7               	movwf	my_flash_system_write@flashAddr
  7992  1406  301F               	movlw	31
  7993  1407  00A8               	movwf	my_flash_system_write@flashAddr+1
  7994                           
  7995                           ;sysData.c: 52: uint8_t GIEBitValue=INTCONbits.GIE;
  7996  1408  3000               	movlw	0
  7997  1409  1B8B               	btfsc	11,7	;volatile
  7998  140A  3001               	movlw	1
  7999  140B  00A2               	movwf	my_flash_system_write@GIEBitValue
  8000                           
  8001                           ;sysData.c: 53: uint8_t i=0;
  8002  140C  01A9               	clrf	my_flash_system_write@i
  8003                           
  8004                           ;sysData.c: 54: blocNum=len/32;
  8005  140D  0874               	movf	my_flash_system_write@len+1,w
  8006  140E  00F6               	movwf	??_my_flash_system_write+1
  8007  140F  0873               	movf	my_flash_system_write@len,w
  8008  1410  00F5               	movwf	??_my_flash_system_write
  8009  1411  3005               	movlw	5
  8010  1412                     u2115:	
  8011  1412  36F6               	lsrf	??_my_flash_system_write+1,f
  8012  1413  0CF5               	rrf	??_my_flash_system_write,f
  8013  1414  0B89               	decfsz	9,f
  8014  1415  2C12               	goto	u2115
  8015  1416  0875               	movf	??_my_flash_system_write,w
  8016  1417  00A3               	movwf	my_flash_system_write@blocNum
  8017  1418  0876               	movf	??_my_flash_system_write+1,w
  8018  1419  00A4               	movwf	my_flash_system_write@blocNum+1
  8019                           
  8020                           ;sysData.c: 55: if(len%32)blocNum++;
  8021  141A  301F               	movlw	31
  8022  141B  0573               	andwf	my_flash_system_write@len,w
  8023  141C  00F5               	movwf	??_my_flash_system_write
  8024  141D  3000               	movlw	0
  8025  141E  0574               	andwf	my_flash_system_write@len+1,w
  8026  141F  00F6               	movwf	??_my_flash_system_write+1
  8027  1420  0875               	movf	??_my_flash_system_write,w
  8028  1421  0476               	iorwf	??_my_flash_system_write+1,w
  8029  1422  1903               	btfsc	3,2
  8030  1423  2C28               	goto	l3303
  8031  1424  3001               	movlw	1
  8032  1425  07A3               	addwf	my_flash_system_write@blocNum,f
  8033  1426  3000               	movlw	0
  8034  1427  3DA4               	addwfc	my_flash_system_write@blocNum+1,f
  8035  1428                     l3303:	
  8036                           
  8037                           ;sysData.c: 57: INTCONbits.GIE = 0;
  8038  1428  138B               	bcf	11,7	;volatile
  8039                           
  8040                           ;sysData.c: 58: loc=0;
  8041  1429  01A5               	clrf	my_flash_system_write@loc
  8042  142A  01A6               	clrf	my_flash_system_write@loc+1
  8043                           
  8044                           ;sysData.c: 59: for(j=0;j<blocNum;j++){
  8045  142B  01A0               	clrf	my_flash_system_write@j
  8046  142C  01A1               	clrf	my_flash_system_write@j+1
  8047  142D                     l714:	
  8048  142D  0824               	movf	my_flash_system_write@blocNum+1,w
  8049  142E  0221               	subwf	my_flash_system_write@j+1,w
  8050  142F  1D03               	skipz
  8051  1430  2C33               	goto	u2175
  8052  1431  0823               	movf	my_flash_system_write@blocNum,w
  8053  1432  0220               	subwf	my_flash_system_write@j,w
  8054  1433                     u2175:	
  8055  1433  1803               	btfsc	3,0
  8056  1434  2C89               	goto	l3347
  8057                           
  8058                           ;sysData.c: 60: PMCON1bits.CFGS = 0;
  8059  1435  0023               	movlb	3	; select bank3
  8060  1436  1315               	bcf	21,6	;volatile
  8061                           
  8062                           ;sysData.c: 61: PMCON1bits.WREN = 1;
  8063  1437  1515               	bsf	21,2	;volatile
  8064                           
  8065                           ;sysData.c: 62: PMCON1bits.LWLO = 1;
  8066  1438  1695               	bsf	21,5	;volatile
  8067                           
  8068                           ;sysData.c: 64: for(i=0;i<32;i++){
  8069  1439  0020               	movlb	0	; select bank0
  8070  143A  01A9               	clrf	my_flash_system_write@i
  8071  143B  3020               	movlw	32
  8072  143C  0229               	subwf	my_flash_system_write@i,w
  8073  143D  1803               	btfsc	3,0
  8074  143E  2C81               	goto	l717
  8075  143F                     l3315:	
  8076                           
  8077                           ;sysData.c: 66: PMADRL = (flashAddr & 0xFF);
  8078  143F  0827               	movf	my_flash_system_write@flashAddr,w
  8079  1440  0023               	movlb	3	; select bank3
  8080  1441  0091               	movwf	17	;volatile
  8081                           
  8082                           ;sysData.c: 68: PMADRH = ((flashAddr & 0xFF00) >> 8);
  8083  1442  0020               	movlb	0	; select bank0
  8084  1443  0828               	movf	my_flash_system_write@flashAddr+1,w
  8085  1444  0023               	movlb	3	; select bank3
  8086  1445  0092               	movwf	18	;volatile
  8087                           
  8088                           ;sysData.c: 71: if(loc<len){
  8089  1446  0874               	movf	my_flash_system_write@len+1,w
  8090  1447  0020               	movlb	0	; select bank0
  8091  1448  0226               	subwf	my_flash_system_write@loc+1,w
  8092  1449  1D03               	skipz
  8093  144A  2C4D               	goto	u2145
  8094  144B  0873               	movf	my_flash_system_write@len,w
  8095  144C  0225               	subwf	my_flash_system_write@loc,w
  8096  144D                     u2145:	
  8097  144D  1803               	skipnc
  8098  144E  2C59               	goto	l3323
  8099                           
  8100                           ;sysData.c: 72: PMDATL = buf[loc];
  8101  144F  0825               	movf	my_flash_system_write@loc,w
  8102  1450  0771               	addwf	my_flash_system_write@buf,w
  8103  1451  0086               	movwf	6
  8104  1452  0826               	movf	my_flash_system_write@loc+1,w
  8105  1453  3D72               	addwfc	my_flash_system_write@buf+1,w
  8106  1454  0087               	movwf	7
  8107  1455  0801               	movf	1,w
  8108  1456  0023               	movlb	3	; select bank3
  8109  1457  0093               	movwf	19	;volatile
  8110                           
  8111                           ;sysData.c: 73: }else{
  8112  1458  2C5B               	goto	l3325
  8113  1459                     l3323:	
  8114                           
  8115                           ;sysData.c: 74: PMDATL = 0x00;
  8116  1459  0023               	movlb	3	; select bank3
  8117  145A  0193               	clrf	19	;volatile
  8118  145B                     l3325:	
  8119                           
  8120                           ;sysData.c: 75: };sysData.c: 76: loc++;
  8121  145B  3001               	movlw	1
  8122  145C  0020               	movlb	0	; select bank0
  8123  145D  07A5               	addwf	my_flash_system_write@loc,f
  8124  145E  3000               	movlw	0
  8125  145F  3DA6               	addwfc	my_flash_system_write@loc+1,f
  8126                           
  8127                           ;sysData.c: 77: PMDATH = 0x00;
  8128  1460  0023               	movlb	3	; select bank3
  8129  1461  0194               	clrf	20	;volatile
  8130                           
  8131                           ;sysData.c: 78: if((i%32) == 32 -1 ){
  8132  1462  301F               	movlw	31
  8133  1463  0020               	movlb	0	; select bank0
  8134  1464  0529               	andwf	my_flash_system_write@i,w
  8135  1465  00F5               	movwf	??_my_flash_system_write
  8136  1466  301F               	movlw	31
  8137  1467  0675               	xorwf	??_my_flash_system_write,w
  8138  1468  1D03               	btfss	3,2
  8139  1469  2C6C               	goto	l3333
  8140                           
  8141                           ;sysData.c: 79: PMCON1bits.LWLO = 0;
  8142  146A  0023               	movlb	3	; select bank3
  8143  146B  1295               	bcf	21,5	;volatile
  8144  146C                     l3333:	
  8145                           
  8146                           ;sysData.c: 80: };sysData.c: 82: PMCON2 = 0x55;
  8147  146C  3055               	movlw	85
  8148  146D  0023               	movlb	3	; select bank3
  8149  146E  0096               	movwf	22	;volsfr
  8150                           
  8151                           ;sysData.c: 83: PMCON2 = 0xAA;
  8152  146F  30AA               	movlw	170
  8153  1470  0096               	movwf	22	;volsfr
  8154                           
  8155                           ;sysData.c: 84: PMCON1bits.WR = 1;
  8156  1471  1495               	bsf	21,1	;volatile
  8157                           
  8158                           ;sysData.c: 85: __nop();
  8159  1472  0000               	nop
  8160                           
  8161                           ;sysData.c: 86: __nop();
  8162  1473  0000               	nop
  8163                           
  8164                           ;sysData.c: 87: flashAddr++;
  8165  1474  3001               	movlw	1
  8166  1475  0020               	movlb	0	; select bank0
  8167  1476  07A7               	addwf	my_flash_system_write@flashAddr,f
  8168  1477  3000               	movlw	0
  8169  1478  3DA8               	addwfc	my_flash_system_write@flashAddr+1,f
  8170  1479  3001               	movlw	1
  8171  147A  00F5               	movwf	??_my_flash_system_write
  8172  147B  0875               	movf	??_my_flash_system_write,w
  8173  147C  07A9               	addwf	my_flash_system_write@i,f
  8174  147D  3020               	movlw	32
  8175  147E  0229               	subwf	my_flash_system_write@i,w
  8176  147F  1C03               	skipc
  8177  1480  2C3F               	goto	l3315
  8178  1481                     l717:	
  8179                           
  8180                           ;sysData.c: 88: };sysData.c: 89: PMCON1bits.WREN = 0;
  8181  1481  0023               	movlb	3	; select bank3
  8182  1482  1115               	bcf	21,2	;volatile
  8183  1483  3001               	movlw	1
  8184  1484  0020               	movlb	0	; select bank0
  8185  1485  07A0               	addwf	my_flash_system_write@j,f
  8186  1486  3000               	movlw	0
  8187  1487  3DA1               	addwfc	my_flash_system_write@j+1,f
  8188  1488  2C2D               	goto	l714
  8189  1489                     l3347:	
  8190                           
  8191                           ;sysData.c: 90: };sysData.c: 91: INTCONbits.GIE = GIEBitValue;
  8192  1489  0C22               	rrf	my_flash_system_write@GIEBitValue,w
  8193  148A  1C03               	skipc
  8194  148B  138B               	bcf	11,7	;volatile
  8195  148C  1803               	skipnc
  8196  148D  178B               	bsf	11,7	;volatile
  8197  148E  0008               	return
  8198  148F                     __end_of_my_flash_system_write:	
  8199                           ;sysData.c: 93: return 0;;	Return value of _my_flash_system_write is never used
  8200                           
  8201                           
  8202                           	psect	text18
  8203  1005                     __ptext18:	
  8204 ;; *************** function _my_flash_read_system_erase *****************
  8205 ;; Defined at:
  8206 ;;		line 9 in file "src/api/sysData.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;		None
  8209 ;; Auto vars:     Size  Location     Type
  8210 ;;		None
  8211 ;; Return value:  Size  Location     Type
  8212 ;;                  1    wreg      void 
  8213 ;; Registers used:
  8214 ;;		wreg, status,2, status,0, pclath, cstack
  8215 ;; Tracked objects:
  8216 ;;		On entry : 0/0
  8217 ;;		On exit  : 0/0
  8218 ;;		Unchanged: 0/0
  8219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8224 ;;Total ram usage:        0 bytes
  8225 ;; Hardware stack levels used:    1
  8226 ;; Hardware stack levels required when called:    2
  8227 ;; This function calls:
  8228 ;;		_FLASH_EraseBlock
  8229 ;; This function is called by:
  8230 ;;		_sys_data_save
  8231 ;; This function uses a non-reentrant model
  8232 ;;
  8233                           
  8234                           
  8235                           ;psect for function _my_flash_read_system_erase
  8236  1005                     _my_flash_read_system_erase:	
  8237                           
  8238                           ;sysData.c: 16: FLASH_EraseBlock(0x1f00);
  8239                           
  8240                           ;incstack = 0
  8241                           ; Regs used in _my_flash_read_system_erase: [wreg+status,2+status,0+pclath+cstack]
  8242  1005  3000               	movlw	0
  8243  1006  00F1               	movwf	FLASH_EraseBlock@startAddr
  8244  1007  301F               	movlw	31
  8245  1008  00F2               	movwf	FLASH_EraseBlock@startAddr+1
  8246  1009  319E  2609  3190   	fcall	_FLASH_EraseBlock
  8247                           
  8248                           ;sysData.c: 17: FLASH_EraseBlock(0x1f00+32);
  8249  100C  3020               	movlw	32
  8250  100D  00F1               	movwf	FLASH_EraseBlock@startAddr
  8251  100E  301F               	movlw	31
  8252  100F  00F2               	movwf	FLASH_EraseBlock@startAddr+1
  8253  1010  319E  2609  3190   	fcall	_FLASH_EraseBlock
  8254                           
  8255                           ;sysData.c: 18: FLASH_EraseBlock(0x1f00+64);
  8256  1013  3040               	movlw	64
  8257  1014  00F1               	movwf	FLASH_EraseBlock@startAddr
  8258  1015  301F               	movlw	31
  8259  1016  00F2               	movwf	FLASH_EraseBlock@startAddr+1
  8260  1017  319E  2609  3190   	fcall	_FLASH_EraseBlock
  8261                           
  8262                           ;sysData.c: 19: FLASH_EraseBlock(0x1f00+96);
  8263  101A  3060               	movlw	96
  8264  101B  00F1               	movwf	FLASH_EraseBlock@startAddr
  8265  101C  301F               	movlw	31
  8266  101D  00F2               	movwf	FLASH_EraseBlock@startAddr+1
  8267  101E  319E  2609  3190   	fcall	_FLASH_EraseBlock
  8268                           
  8269                           ;sysData.c: 20: FLASH_EraseBlock(0x1f00+128);
  8270  1021  3080               	movlw	128
  8271  1022  00F1               	movwf	FLASH_EraseBlock@startAddr
  8272  1023  301F               	movlw	31
  8273  1024  00F2               	movwf	FLASH_EraseBlock@startAddr+1
  8274  1025  319E  2609         	fcall	_FLASH_EraseBlock
  8275  1027  0008               	return
  8276  1028                     __end_of_my_flash_read_system_erase:	
  8277                           
  8278                           	psect	text19
  8279  1E09                     __ptext19:	
  8280 ;; *************** function _FLASH_EraseBlock *****************
  8281 ;; Defined at:
  8282 ;;		line 147 in file "mcc_generated_files/memory.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;  startAddr       2    1[COMMON] unsigned int 
  8285 ;; Auto vars:     Size  Location     Type
  8286 ;;  GIEBitValue     1    3[COMMON] unsigned char 
  8287 ;; Return value:  Size  Location     Type
  8288 ;;                  1    wreg      void 
  8289 ;; Registers used:
  8290 ;;		wreg, status,2, status,0
  8291 ;; Tracked objects:
  8292 ;;		On entry : 0/0
  8293 ;;		On exit  : 0/0
  8294 ;;		Unchanged: 0/0
  8295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8296 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8297 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8299 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8300 ;;Total ram usage:        3 bytes
  8301 ;; Hardware stack levels used:    1
  8302 ;; Hardware stack levels required when called:    1
  8303 ;; This function calls:
  8304 ;;		Nothing
  8305 ;; This function is called by:
  8306 ;;		_my_flash_read_system_erase
  8307 ;;		_FLASH_WriteBlock
  8308 ;; This function uses a non-reentrant model
  8309 ;;
  8310                           
  8311                           
  8312                           ;psect for function _FLASH_EraseBlock
  8313  1E09                     _FLASH_EraseBlock:	
  8314                           
  8315                           ;memory.c: 149: uint8_t GIEBitValue = INTCONbits.GIE;
  8316                           
  8317                           ;incstack = 0
  8318                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  8319  1E09  3000               	movlw	0
  8320  1E0A  1B8B               	btfsc	11,7	;volatile
  8321  1E0B  3001               	movlw	1
  8322  1E0C  00F3               	movwf	FLASH_EraseBlock@GIEBitValue
  8323                           
  8324                           ;memory.c: 152: INTCONbits.GIE = 0;
  8325  1E0D  138B               	bcf	11,7	;volatile
  8326                           
  8327                           ;memory.c: 154: PMADRL = (startAddr & 0xFF);
  8328  1E0E  0871               	movf	FLASH_EraseBlock@startAddr,w
  8329  1E0F  0023               	movlb	3	; select bank3
  8330  1E10  0091               	movwf	17	;volatile
  8331                           
  8332                           ;memory.c: 156: PMADRH = ((startAddr & 0xFF00) >> 8);
  8333  1E11  0872               	movf	FLASH_EraseBlock@startAddr+1,w
  8334  1E12  0092               	movwf	18	;volatile
  8335                           
  8336                           ;memory.c: 159: PMCON1bits.CFGS = 0;
  8337  1E13  1315               	bcf	21,6	;volatile
  8338                           
  8339                           ;memory.c: 160: PMCON1bits.FREE = 1;
  8340  1E14  1615               	bsf	21,4	;volatile
  8341                           
  8342                           ;memory.c: 161: PMCON1bits.WREN = 1;
  8343  1E15  1515               	bsf	21,2	;volatile
  8344                           
  8345                           ;memory.c: 164: PMCON2 = 0x55;
  8346  1E16  3055               	movlw	85
  8347  1E17  0096               	movwf	22	;volsfr
  8348                           
  8349                           ;memory.c: 165: PMCON2 = 0xAA;
  8350  1E18  30AA               	movlw	170
  8351  1E19  0096               	movwf	22	;volsfr
  8352                           
  8353                           ;memory.c: 166: PMCON1bits.WR = 1;
  8354  1E1A  1495               	bsf	21,1	;volatile
  8355                           
  8356                           ;memory.c: 167: __nop();
  8357  1E1B  0000               	nop
  8358                           
  8359                           ;memory.c: 168: __nop();
  8360  1E1C  0000               	nop
  8361                           
  8362                           ;memory.c: 170: PMCON1bits.WREN = 0;
  8363  1E1D  0023               	movlb	3	; select bank3
  8364  1E1E  1115               	bcf	21,2	;volatile
  8365                           
  8366                           ;memory.c: 171: INTCONbits.GIE = GIEBitValue;
  8367  1E1F  0C73               	rrf	FLASH_EraseBlock@GIEBitValue,w
  8368  1E20  1C03               	skipc
  8369  1E21  138B               	bcf	11,7	;volatile
  8370  1E22  1803               	skipnc
  8371  1E23  178B               	bsf	11,7	;volatile
  8372  1E24  0008               	return
  8373  1E25                     __end_of_FLASH_EraseBlock:	
  8374                           
  8375                           	psect	text20
  8376  1141                     __ptext20:	
  8377 ;; *************** function _modbus_response_illgeal_function *****************
  8378 ;; Defined at:
  8379 ;;		line 8 in file "src/api/modbus.c"
  8380 ;; Parameters:    Size  Location     Type
  8381 ;;  buf             1    wreg     PTR unsigned char 
  8382 ;;		 -> modbusBuf(32), 
  8383 ;;  errcode         1   12[BANK0 ] unsigned char 
  8384 ;; Auto vars:     Size  Location     Type
  8385 ;;  buf             1   14[BANK0 ] PTR unsigned char 
  8386 ;;		 -> modbusBuf(32), 
  8387 ;;  pmdbs           1   15[BANK0 ] PTR struct .
  8388 ;;		 -> modbusBuf(32), 
  8389 ;; Return value:  Size  Location     Type
  8390 ;;                  1    wreg      void 
  8391 ;; Registers used:
  8392 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8393 ;; Tracked objects:
  8394 ;;		On entry : 0/0
  8395 ;;		On exit  : 0/0
  8396 ;;		Unchanged: 0/0
  8397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8398 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8399 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8400 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8401 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8402 ;;Total ram usage:        4 bytes
  8403 ;; Hardware stack levels used:    1
  8404 ;; Hardware stack levels required when called:    3
  8405 ;; This function calls:
  8406 ;;		_crc_append
  8407 ;;		_uart_send_len
  8408 ;; This function is called by:
  8409 ;;		_modbus_response_process
  8410 ;; This function uses a non-reentrant model
  8411 ;;
  8412                           
  8413                           
  8414                           ;psect for function _modbus_response_illgeal_function
  8415  1141                     _modbus_response_illgeal_function:	
  8416                           
  8417                           ;incstack = 0
  8418                           ; Regs used in _modbus_response_illgeal_function: [wreg+fsr1l+fsr1h+status,2+status,0+pc
      +                          lath+cstack]
  8419                           ;modbus_response_illgeal_function@buf stored from wreg
  8420  1141  0020               	movlb	0	; select bank0
  8421  1142  00AE               	movwf	modbus_response_illgeal_function@buf
  8422                           
  8423                           ;modbus.c: 10: st_modbusErrRespStructDef* pmdbs=(st_modbusErrRespStructDef*)buf;
  8424  1143  082E               	movf	modbus_response_illgeal_function@buf,w
  8425  1144  00AD               	movwf	??_modbus_response_illgeal_function
  8426  1145  082D               	movf	??_modbus_response_illgeal_function,w
  8427  1146  00AF               	movwf	modbus_response_illgeal_function@pmdbs
  8428                           
  8429                           ;modbus.c: 11: if(pmdbs->addr==0x00)return;
  8430  1147  082F               	movf	modbus_response_illgeal_function@pmdbs,w
  8431  1148  0086               	movwf	6
  8432  1149  3001               	movlw	1	; select bank2/3
  8433  114A  0087               	movwf	7
  8434  114B  0801               	movf	1,w
  8435  114C  1903               	btfsc	3,2
  8436  114D  0008               	return
  8437                           
  8438                           ;modbus.c: 12: pmdbs->addr=sysData.id;
  8439  114E  305C               	movlw	92
  8440  114F  0086               	movwf	6
  8441  1150  3023               	movlw	35
  8442  1151  0087               	movwf	7
  8443  1152  3142               	addfsr 1,2
  8444  1153  0801               	movf	1,w
  8445  1154  00AD               	movwf	??_modbus_response_illgeal_function
  8446  1155  082F               	movf	modbus_response_illgeal_function@pmdbs,w
  8447  1156  0086               	movwf	6
  8448  1157  3001               	movlw	1	; select bank2/3
  8449  1158  0087               	movwf	7
  8450  1159  082D               	movf	??_modbus_response_illgeal_function,w
  8451  115A  0081               	movwf	1
  8452                           
  8453                           ;modbus.c: 13: if(errcode){
  8454  115B  082C               	movf	modbus_response_illgeal_function@errcode,w
  8455  115C  1903               	btfsc	3,2
  8456  115D  2966               	goto	l768
  8457                           
  8458                           ;modbus.c: 14: pmdbs->func+=0x80;
  8459  115E  3080               	movlw	128
  8460  115F  00AD               	movwf	??_modbus_response_illgeal_function
  8461  1160  0A2F               	incf	modbus_response_illgeal_function@pmdbs,w
  8462  1161  0086               	movwf	6
  8463  1162  3001               	movlw	1	; select bank2/3
  8464  1163  0087               	movwf	7
  8465  1164  082D               	movf	??_modbus_response_illgeal_function,w
  8466  1165  0781               	addwf	1,f
  8467  1166                     l768:	
  8468                           
  8469                           ;modbus.c: 15: };modbus.c: 16: pmdbs->errcord=errcode;
  8470  1166  082C               	movf	modbus_response_illgeal_function@errcode,w
  8471  1167  00AD               	movwf	??_modbus_response_illgeal_function
  8472  1168  082F               	movf	modbus_response_illgeal_function@pmdbs,w
  8473  1169  3E02               	addlw	2
  8474  116A  0086               	movwf	6
  8475  116B  3001               	movlw	1	; select bank2/3
  8476  116C  0087               	movwf	7
  8477  116D  082D               	movf	??_modbus_response_illgeal_function,w
  8478  116E  0081               	movwf	1
  8479                           
  8480                           ;modbus.c: 17: crc_append(buf,3);
  8481  116F  082E               	movf	modbus_response_illgeal_function@buf,w
  8482  1170  00A6               	movwf	crc_append@message
  8483  1171  3001               	movlw	1
  8484  1172  00A7               	movwf	crc_append@message+1
  8485  1173  3003               	movlw	3
  8486  1174  00A8               	movwf	crc_append@n
  8487  1175  3000               	movlw	0
  8488  1176  00A9               	movwf	crc_append@n+1
  8489  1177  319E  269D  3191   	fcall	_crc_append
  8490                           
  8491                           ;modbus.c: 18: uart_send_len(buf,5);
  8492  117A  3005               	movlw	5
  8493  117B  0020               	movlb	0	; select bank0
  8494  117C  00AD               	movwf	??_modbus_response_illgeal_function
  8495  117D  082D               	movf	??_modbus_response_illgeal_function,w
  8496  117E  00F1               	movwf	uart_send_len@len
  8497  117F  082E               	movf	modbus_response_illgeal_function@buf,w
  8498  1180  319E  267A         	fcall	_uart_send_len
  8499  1182  0008               	return
  8500  1183                     __end_of_modbus_response_illgeal_function:	
  8501                           
  8502                           	psect	text21
  8503  1668                     __ptext21:	
  8504 ;; *************** function _modbus_response_command *****************
  8505 ;; Defined at:
  8506 ;;		line 181 in file "src/api/modbus.c"
  8507 ;; Parameters:    Size  Location     Type
  8508 ;;  rbuf            1    wreg     PTR unsigned char 
  8509 ;;		 -> modbusBuf(32), 
  8510 ;; Auto vars:     Size  Location     Type
  8511 ;;  rbuf            1   21[BANK0 ] PTR unsigned char 
  8512 ;;		 -> modbusBuf(32), 
  8513 ;;  tempData        2   22[BANK0 ] unsigned int 
  8514 ;;  startAddr       2   16[BANK0 ] unsigned int 
  8515 ;;  tmpAddr         2   14[BANK0 ] unsigned int 
  8516 ;;  len             1   20[BANK0 ] unsigned char 
  8517 ;;  pmdbs           1   19[BANK0 ] PTR struct .
  8518 ;;		 -> modbusBuf(32), 
  8519 ;;  i               1   18[BANK0 ] unsigned char 
  8520 ;; Return value:  Size  Location     Type
  8521 ;;                  1    wreg      void 
  8522 ;; Registers used:
  8523 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8524 ;; Tracked objects:
  8525 ;;		On entry : 0/0
  8526 ;;		On exit  : 0/0
  8527 ;;		Unchanged: 0/0
  8528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8530 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8531 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8532 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8533 ;;Total ram usage:       12 bytes
  8534 ;; Hardware stack levels used:    1
  8535 ;; Hardware stack levels required when called:    3
  8536 ;; This function calls:
  8537 ;;		_crc_append
  8538 ;;		_getRegisterVal
  8539 ;;		_uart_send_len
  8540 ;; This function is called by:
  8541 ;;		_modbus_response_process
  8542 ;; This function uses a non-reentrant model
  8543 ;;
  8544                           
  8545                           
  8546                           ;psect for function _modbus_response_command
  8547  1668                     _modbus_response_command:	
  8548                           
  8549                           ;incstack = 0
  8550                           ; Regs used in _modbus_response_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8551                           ;modbus_response_command@rbuf stored from wreg
  8552  1668  0020               	movlb	0	; select bank0
  8553  1669  00B5               	movwf	modbus_response_command@rbuf
  8554                           
  8555                           ;modbus.c: 182: uint8_t i;;modbus.c: 183: uint16_t startAddr=0;
  8556  166A  01B0               	clrf	modbus_response_command@startAddr
  8557  166B  01B1               	clrf	modbus_response_command@startAddr+1
  8558                           
  8559                           ;modbus.c: 184: uint16_t tempData,tmpAddr;;modbus.c: 185: uint8_t len=0;
  8560  166C  01B4               	clrf	modbus_response_command@len
  8561                           
  8562                           ;modbus.c: 186: st_modbusComReqStructDef* pmdbs=(st_modbusComReqStructDef*)rbuf;
  8563  166D  0835               	movf	modbus_response_command@rbuf,w
  8564  166E  00AC               	movwf	??_modbus_response_command
  8565  166F  082C               	movf	??_modbus_response_command,w
  8566  1670  00B3               	movwf	modbus_response_command@pmdbs
  8567                           
  8568                           ;modbus.c: 187: if(pmdbs->addr!=sysData.id || pmdbs->addr==0)return;
  8569  1671  305C               	movlw	92
  8570  1672  0086               	movwf	6
  8571  1673  3023               	movlw	35
  8572  1674  0087               	movwf	7
  8573  1675  3142               	addfsr 1,2
  8574  1676  0833               	movf	modbus_response_command@pmdbs,w
  8575  1677  0084               	movwf	4
  8576  1678  3001               	movlw	1	; select bank2/3
  8577  1679  0085               	movwf	5
  8578  167A  0800               	movf	0,w
  8579  167B  0601               	xorwf	1,w
  8580  167C  1D03               	skipz
  8581  167D  0008               	return
  8582  167E  0833               	movf	modbus_response_command@pmdbs,w
  8583  167F  0086               	movwf	6
  8584  1680  3001               	movlw	1	; select bank2/3
  8585  1681  0087               	movwf	7
  8586  1682  0801               	movf	1,w
  8587  1683  1903               	btfsc	3,2
  8588  1684  0008               	return
  8589                           
  8590                           ;modbus.c: 188: startAddr=pmdbs->addr_hi;
  8591  1685  0833               	movf	modbus_response_command@pmdbs,w
  8592  1686  3E02               	addlw	2
  8593  1687  0086               	movwf	6
  8594  1688  3001               	movlw	1	; select bank2/3
  8595  1689  0087               	movwf	7
  8596  168A  0801               	movf	1,w
  8597  168B  00AC               	movwf	??_modbus_response_command
  8598  168C  01AD               	clrf	??_modbus_response_command+1
  8599  168D  082C               	movf	??_modbus_response_command,w
  8600  168E  00B0               	movwf	modbus_response_command@startAddr
  8601  168F  082D               	movf	??_modbus_response_command+1,w
  8602  1690  00B1               	movwf	modbus_response_command@startAddr+1
  8603                           
  8604                           ;modbus.c: 189: startAddr<<=8;
  8605  1691  3008               	movlw	8
  8606  1692                     u4125:	
  8607  1692  35B0               	lslf	modbus_response_command@startAddr,f
  8608  1693  0DB1               	rlf	modbus_response_command@startAddr+1,f
  8609  1694  0B89               	decfsz	9,f
  8610  1695  2E92               	goto	u4125
  8611                           
  8612                           ;modbus.c: 190: startAddr |= pmdbs->addr_lo;
  8613  1696  0833               	movf	modbus_response_command@pmdbs,w
  8614  1697  3E03               	addlw	3
  8615  1698  0086               	movwf	6
  8616  1699  3001               	movlw	1	; select bank2/3
  8617  169A  0087               	movwf	7
  8618  169B  0801               	movf	1,w
  8619  169C  00AC               	movwf	??_modbus_response_command
  8620  169D  01AD               	clrf	??_modbus_response_command+1
  8621  169E  082C               	movf	??_modbus_response_command,w
  8622  169F  04B0               	iorwf	modbus_response_command@startAddr,f
  8623  16A0  082D               	movf	??_modbus_response_command+1,w
  8624  16A1  04B1               	iorwf	modbus_response_command@startAddr+1,f
  8625                           
  8626                           ;modbus.c: 191: tmpAddr=startAddr;
  8627  16A2  0831               	movf	modbus_response_command@startAddr+1,w
  8628  16A3  00AF               	movwf	modbus_response_command@tmpAddr+1
  8629  16A4  0830               	movf	modbus_response_command@startAddr,w
  8630  16A5  00AE               	movwf	modbus_response_command@tmpAddr
  8631                           
  8632                           ;modbus.c: 192: len = pmdbs->len_lo;
  8633  16A6  0833               	movf	modbus_response_command@pmdbs,w
  8634  16A7  0086               	movwf	6
  8635  16A8  3001               	movlw	1	; select bank2/3
  8636  16A9  0087               	movwf	7
  8637  16AA  3001               	movlw	1	; select bank2/3
  8638  16AB  3F45               	moviw [5]fsr1
  8639  16AC  00B4               	movwf	modbus_response_command@len
  8640                           
  8641                           ;modbus.c: 193: len<<=1;
  8642  16AD  1003               	clrc
  8643  16AE  0DB4               	rlf	modbus_response_command@len,f
  8644                           
  8645                           ;modbus.c: 194: if(len>32)len=32;
  8646  16AF  3021               	movlw	33
  8647  16B0  0234               	subwf	modbus_response_command@len,w
  8648  16B1  1C03               	skipc
  8649  16B2  2EB7               	goto	l4797
  8650  16B3  3020               	movlw	32
  8651  16B4  00AC               	movwf	??_modbus_response_command
  8652  16B5  082C               	movf	??_modbus_response_command,w
  8653  16B6  00B4               	movwf	modbus_response_command@len
  8654  16B7                     l4797:	
  8655                           
  8656                           ;modbus.c: 195: for(i=0;i<len;i=i+2,tmpAddr++){
  8657  16B7  01B2               	clrf	modbus_response_command@i
  8658  16B8                     l4809:	
  8659  16B8  0834               	movf	modbus_response_command@len,w
  8660  16B9  0232               	subwf	modbus_response_command@i,w
  8661  16BA  1803               	btfsc	3,0
  8662  16BB  2EEA               	goto	l4811
  8663                           
  8664                           ;modbus.c: 196: getRegisterVal(tmpAddr,&tempData);
  8665  16BC  082F               	movf	modbus_response_command@tmpAddr+1,w
  8666  16BD  00F2               	movwf	getRegisterVal@addr+1
  8667  16BE  082E               	movf	modbus_response_command@tmpAddr,w
  8668  16BF  00F1               	movwf	getRegisterVal@addr
  8669  16C0  3036               	movlw	(low (modbus_response_command@tempData| 0))& (0+255)
  8670  16C1  00AC               	movwf	??_modbus_response_command
  8671  16C2  082C               	movf	??_modbus_response_command,w
  8672  16C3  00F3               	movwf	getRegisterVal@tempData
  8673  16C4  318E  2683  3196   	fcall	_getRegisterVal
  8674                           
  8675                           ;modbus.c: 197: rbuf[i+3] = (uint8_t)(tempData >> 8);
  8676  16C7  0020               	movlb	0	; select bank0
  8677  16C8  0837               	movf	modbus_response_command@tempData+1,w
  8678  16C9  00AC               	movwf	??_modbus_response_command
  8679  16CA  0832               	movf	modbus_response_command@i,w
  8680  16CB  3E03               	addlw	3
  8681  16CC  0735               	addwf	modbus_response_command@rbuf,w
  8682  16CD  00AD               	movwf	??_modbus_response_command+1
  8683  16CE  082D               	movf	??_modbus_response_command+1,w
  8684  16CF  0086               	movwf	6
  8685  16D0  3001               	movlw	1	; select bank2/3
  8686  16D1  0087               	movwf	7
  8687  16D2  082C               	movf	??_modbus_response_command,w
  8688  16D3  0081               	movwf	1
  8689                           
  8690                           ;modbus.c: 198: rbuf[i+4] = (uint8_t)(tempData & 0xff);
  8691  16D4  0836               	movf	modbus_response_command@tempData,w
  8692  16D5  00AC               	movwf	??_modbus_response_command
  8693  16D6  0832               	movf	modbus_response_command@i,w
  8694  16D7  3E04               	addlw	4
  8695  16D8  0735               	addwf	modbus_response_command@rbuf,w
  8696  16D9  00AD               	movwf	??_modbus_response_command+1
  8697  16DA  082D               	movf	??_modbus_response_command+1,w
  8698  16DB  0086               	movwf	6
  8699  16DC  3001               	movlw	1	; select bank2/3
  8700  16DD  0087               	movwf	7
  8701  16DE  082C               	movf	??_modbus_response_command,w
  8702  16DF  0081               	movwf	1
  8703  16E0  0832               	movf	modbus_response_command@i,w
  8704  16E1  3E02               	addlw	2
  8705  16E2  00AC               	movwf	??_modbus_response_command
  8706  16E3  082C               	movf	??_modbus_response_command,w
  8707  16E4  00B2               	movwf	modbus_response_command@i
  8708  16E5  3001               	movlw	1
  8709  16E6  07AE               	addwf	modbus_response_command@tmpAddr,f
  8710  16E7  3000               	movlw	0
  8711  16E8  3DAF               	addwfc	modbus_response_command@tmpAddr+1,f
  8712  16E9  2EB8               	goto	l4809
  8713  16EA                     l4811:	
  8714                           
  8715                           ;modbus.c: 200: };modbus.c: 201: rbuf[0] = sysData.id;
  8716  16EA  305C               	movlw	92
  8717  16EB  0086               	movwf	6
  8718  16EC  3023               	movlw	35
  8719  16ED  0087               	movwf	7
  8720  16EE  3142               	addfsr 1,2
  8721  16EF  0801               	movf	1,w
  8722  16F0  00AC               	movwf	??_modbus_response_command
  8723  16F1  0835               	movf	modbus_response_command@rbuf,w
  8724  16F2  0086               	movwf	6
  8725  16F3  3001               	movlw	1	; select bank2/3
  8726  16F4  0087               	movwf	7
  8727  16F5  082C               	movf	??_modbus_response_command,w
  8728  16F6  0081               	movwf	1
  8729                           
  8730                           ;modbus.c: 202: rbuf[1] = 3;
  8731  16F7  3003               	movlw	3
  8732  16F8  00AC               	movwf	??_modbus_response_command
  8733  16F9  0A35               	incf	modbus_response_command@rbuf,w
  8734  16FA  0086               	movwf	6
  8735  16FB  3001               	movlw	1	; select bank2/3
  8736  16FC  0087               	movwf	7
  8737  16FD  082C               	movf	??_modbus_response_command,w
  8738  16FE  0081               	movwf	1
  8739                           
  8740                           ;modbus.c: 203: rbuf[2] = len;
  8741  16FF  0834               	movf	modbus_response_command@len,w
  8742  1700  00AC               	movwf	??_modbus_response_command
  8743  1701  0835               	movf	modbus_response_command@rbuf,w
  8744  1702  3E02               	addlw	2
  8745  1703  0086               	movwf	6
  8746  1704  3001               	movlw	1	; select bank2/3
  8747  1705  0087               	movwf	7
  8748  1706  082C               	movf	??_modbus_response_command,w
  8749  1707  0081               	movwf	1
  8750                           
  8751                           ;modbus.c: 204: len += 3;
  8752  1708  3003               	movlw	3
  8753  1709  00AC               	movwf	??_modbus_response_command
  8754  170A  082C               	movf	??_modbus_response_command,w
  8755  170B  07B4               	addwf	modbus_response_command@len,f
  8756                           
  8757                           ;modbus.c: 205: crc_append(rbuf,len);
  8758  170C  0835               	movf	modbus_response_command@rbuf,w
  8759  170D  00A6               	movwf	crc_append@message
  8760  170E  3001               	movlw	1
  8761  170F  00A7               	movwf	crc_append@message+1
  8762  1710  0834               	movf	modbus_response_command@len,w
  8763  1711  00AC               	movwf	??_modbus_response_command
  8764  1712  01AD               	clrf	??_modbus_response_command+1
  8765  1713  082C               	movf	??_modbus_response_command,w
  8766  1714  00A8               	movwf	crc_append@n
  8767  1715  082D               	movf	??_modbus_response_command+1,w
  8768  1716  00A9               	movwf	crc_append@n+1
  8769  1717  319E  269D  3196   	fcall	_crc_append
  8770                           
  8771                           ;modbus.c: 206: len += 2;
  8772  171A  3002               	movlw	2
  8773  171B  0020               	movlb	0	; select bank0
  8774  171C  00AC               	movwf	??_modbus_response_command
  8775  171D  082C               	movf	??_modbus_response_command,w
  8776  171E  07B4               	addwf	modbus_response_command@len,f
  8777                           
  8778                           ;modbus.c: 207: uart_send_len(rbuf,len);
  8779  171F  0834               	movf	modbus_response_command@len,w
  8780  1720  00AC               	movwf	??_modbus_response_command
  8781  1721  082C               	movf	??_modbus_response_command,w
  8782  1722  00F1               	movwf	uart_send_len@len
  8783  1723  0835               	movf	modbus_response_command@rbuf,w
  8784  1724  319E  267A         	fcall	_uart_send_len
  8785  1726  0008               	return
  8786  1727                     __end_of_modbus_response_command:	
  8787                           
  8788                           	psect	text22
  8789  1E7A                     __ptext22:	
  8790 ;; *************** function _uart_send_len *****************
  8791 ;; Defined at:
  8792 ;;		line 37 in file "src/api/my_uart.c"
  8793 ;; Parameters:    Size  Location     Type
  8794 ;;  buf             1    wreg     PTR unsigned char 
  8795 ;;		 -> modbusBuf(32), 
  8796 ;;  len             1    1[COMMON] unsigned char 
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;  buf             1    4[COMMON] PTR unsigned char 
  8799 ;;		 -> modbusBuf(32), 
  8800 ;;  i               1    3[COMMON] unsigned char 
  8801 ;; Return value:  Size  Location     Type
  8802 ;;                  1    wreg      void 
  8803 ;; Registers used:
  8804 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8805 ;; Tracked objects:
  8806 ;;		On entry : 0/0
  8807 ;;		On exit  : 0/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8810 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8811 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8812 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8813 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8814 ;;Total ram usage:        4 bytes
  8815 ;; Hardware stack levels used:    1
  8816 ;; Hardware stack levels required when called:    1
  8817 ;; This function calls:
  8818 ;;		Nothing
  8819 ;; This function is called by:
  8820 ;;		_modbus_response_illgeal_function
  8821 ;;		_modbus_response_write_single_register
  8822 ;;		_modbus_response_write_mult_register
  8823 ;;		_modbus_response_command
  8824 ;;		_main
  8825 ;; This function uses a non-reentrant model
  8826 ;;
  8827                           
  8828                           
  8829                           ;psect for function _uart_send_len
  8830  1E7A                     _uart_send_len:	
  8831                           
  8832                           ;incstack = 0
  8833                           ; Regs used in _uart_send_len: [wreg+fsr1l+fsr1h+status,2+status,0]
  8834                           ;uart_send_len@buf stored from wreg
  8835  1E7A  00F4               	movwf	uart_send_len@buf
  8836                           
  8837                           ;my_uart.c: 39: uint8_t i;;my_uart.c: 40: xlen=len;
  8838  1E7B  0871               	movf	uart_send_len@len,w
  8839  1E7C  00F2               	movwf	??_uart_send_len
  8840  1E7D  0872               	movf	??_uart_send_len,w
  8841  1E7E  0020               	movlb	0	; select bank0
  8842  1E7F  00E6               	movwf	_xlen
  8843                           
  8844                           ;my_uart.c: 41: if(!TXSTAbits.TXEN)TXSTAbits.TXEN=1;
  8845  1E80  0023               	movlb	3	; select bank3
  8846  1E81  1E9E               	btfss	30,5	;volatile
  8847  1E82  169E               	bsf	30,5	;volatile
  8848                           
  8849                           ;my_uart.c: 43: for(i=0;i<xlen;i++){
  8850  1E83  01F3               	clrf	uart_send_len@i
  8851  1E84                     l3377:	
  8852  1E84  0020               	movlb	0	; select bank0
  8853  1E85  0866               	movf	_xlen,w
  8854  1E86  0273               	subwf	uart_send_len@i,w
  8855  1E87  1803               	btfsc	3,0
  8856  1E88  0008               	return
  8857  1E89                     l490:	
  8858                           ;my_uart.c: 44: while(0 == PIR1bits.TXIF);
  8859                           
  8860  1E89  0020               	movlb	0	; select bank0
  8861  1E8A  1E11               	btfss	17,4	;volatile
  8862  1E8B  2E89               	goto	l490
  8863                           
  8864                           ;my_uart.c: 46: TXREG = buf[i];
  8865  1E8C  0873               	movf	uart_send_len@i,w
  8866  1E8D  0774               	addwf	uart_send_len@buf,w
  8867  1E8E  00F2               	movwf	??_uart_send_len
  8868  1E8F  0872               	movf	??_uart_send_len,w
  8869  1E90  0086               	movwf	6
  8870  1E91  3001               	movlw	1	; select bank2/3
  8871  1E92  0087               	movwf	7
  8872  1E93  0801               	movf	1,w
  8873  1E94  0023               	movlb	3	; select bank3
  8874  1E95  009A               	movwf	26	;volatile
  8875                           
  8876                           ;my_uart.c: 47: do{__nop();__nop();}while(0);;
  8877  1E96  0000               	nop
  8878  1E97  0000               	nop
  8879  1E98  3001               	movlw	1
  8880  1E99  00F2               	movwf	??_uart_send_len
  8881  1E9A  0872               	movf	??_uart_send_len,w
  8882  1E9B  07F3               	addwf	uart_send_len@i,f
  8883  1E9C  2E84               	goto	l3377
  8884  1E9D                     __end_of_uart_send_len:	
  8885                           
  8886                           	psect	text23
  8887  0E83                     __ptext23:	
  8888 ;; *************** function _getRegisterVal *****************
  8889 ;; Defined at:
  8890 ;;		line 80 in file "src/api/modbus.c"
  8891 ;; Parameters:    Size  Location     Type
  8892 ;;  addr            2    1[COMMON] unsigned int 
  8893 ;;  tempData        1    3[COMMON] PTR unsigned int 
  8894 ;;		 -> modbus_response_command@tempData(2), 
  8895 ;; Auto vars:     Size  Location     Type
  8896 ;;  t16             2    8[COMMON] unsigned int 
  8897 ;;  tempAddr        1   10[COMMON] unsigned char 
  8898 ;; Return value:  Size  Location     Type
  8899 ;;                  2    1[COMMON] unsigned int 
  8900 ;; Registers used:
  8901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8902 ;; Tracked objects:
  8903 ;;		On entry : 0/0
  8904 ;;		On exit  : 0/0
  8905 ;;		Unchanged: 0/0
  8906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8907 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8908 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8909 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8910 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8911 ;;Total ram usage:       10 bytes
  8912 ;; Hardware stack levels used:    1
  8913 ;; Hardware stack levels required when called:    1
  8914 ;; This function calls:
  8915 ;;		Nothing
  8916 ;; This function is called by:
  8917 ;;		_modbus_response_command
  8918 ;; This function uses a non-reentrant model
  8919 ;;
  8920                           
  8921                           
  8922                           ;psect for function _getRegisterVal
  8923  0E83                     _getRegisterVal:	
  8924                           
  8925                           ;modbus.c: 82: uint16_t t16 = 0;
  8926                           
  8927                           ;incstack = 0
  8928                           ; Regs used in _getRegisterVal: [wreg-fsr1h+status,2+status,0]
  8929  0E83  01F8               	clrf	getRegisterVal@t16
  8930  0E84  01F9               	clrf	getRegisterVal@t16+1
  8931                           
  8932                           ;modbus.c: 83: uint8_t tempAddr;;modbus.c: 85: tempAddr = addr & 0xff;
  8933  0E85  0871               	movf	getRegisterVal@addr,w
  8934  0E86  00F4               	movwf	??_getRegisterVal
  8935  0E87  0874               	movf	??_getRegisterVal,w
  8936  0E88  00FA               	movwf	getRegisterVal@tempAddr
  8937                           
  8938                           ;modbus.c: 86: switch(tempAddr){
  8939  0E89  2F35               	goto	l3437
  8940  0E8A                     l3403:	
  8941                           ;modbus.c: 87: case 0x01:*tempData = 0100; break;
  8942                           
  8943  0E8A  0873               	movf	getRegisterVal@tempData,w
  8944  0E8B  0086               	movwf	6
  8945  0E8C  0187               	clrf	7
  8946  0E8D  3040               	movlw	64
  8947  0E8E  3FC0               	movwi [0]fsr1
  8948  0E8F  3000               	movlw	0
  8949  0E90  3FC1               	movwi [1]fsr1
  8950  0E91  2F42               	goto	l3439
  8951  0E92                     l3405:	
  8952                           ;modbus.c: 88: case 0x02:*tempData=sysData.id;break;
  8953                           
  8954  0E92  305C               	movlw	92
  8955  0E93  0086               	movwf	6
  8956  0E94  3023               	movlw	35
  8957  0E95  0087               	movwf	7
  8958  0E96  3142               	addfsr 1,2
  8959  0E97  0801               	movf	1,w
  8960  0E98  00F4               	movwf	??_getRegisterVal
  8961  0E99  01F5               	clrf	??_getRegisterVal+1
  8962  0E9A  0873               	movf	getRegisterVal@tempData,w
  8963  0E9B  0086               	movwf	6
  8964  0E9C  0187               	clrf	7
  8965  0E9D  0874               	movf	??_getRegisterVal,w
  8966  0E9E  3FC0               	movwi [0]fsr1
  8967  0E9F  0875               	movf	??_getRegisterVal+1,w
  8968  0EA0  3FC1               	movwi [1]fsr1
  8969  0EA1  2F42               	goto	l3439
  8970  0EA2                     l3407:	
  8971                           ;modbus.c: 89: case 0x03:*tempData=(sysData.pidSetFlg1<<8 | sysData.pidSetFlg0);break;
  8972                           
  8973  0EA2  305C               	movlw	92
  8974  0EA3  0084               	movwf	4
  8975  0EA4  3023               	movlw	35
  8976  0EA5  0085               	movwf	5
  8977  0EA6  3101               	addfsr 0,1
  8978  0EA7  0800               	movf	0,w
  8979  0EA8  00F4               	movwf	??_getRegisterVal
  8980  0EA9  305C               	movlw	92
  8981  0EAA  0084               	movwf	4
  8982  0EAB  3023               	movlw	35
  8983  0EAC  0085               	movwf	5
  8984  0EAD  0873               	movf	getRegisterVal@tempData,w
  8985  0EAE  0086               	movwf	6
  8986  0EAF  0187               	clrf	7
  8987  0EB0  0800               	movf	0,w
  8988  0EB1  3FC0               	movwi [0]fsr1
  8989  0EB2  0874               	movf	??_getRegisterVal,w
  8990  0EB3  3FC1               	movwi [1]fsr1
  8991  0EB4  2F42               	goto	l3439
  8992  0EB5                     l3409:	
  8993                           ;modbus.c: 90: case 0x04:*tempData=sysData.pidKp;break;
  8994                           
  8995  0EB5  305C               	movlw	92
  8996  0EB6  0086               	movwf	6
  8997  0EB7  3023               	movlw	35
  8998  0EB8  0087               	movwf	7
  8999  0EB9  3144               	addfsr 1,4
  9000  0EBA  0873               	movf	getRegisterVal@tempData,w
  9001  0EBB  0084               	movwf	4
  9002  0EBC  0185               	clrf	5
  9003  0EBD  3F40               	moviw [0]fsr1
  9004  0EBE  3F80               	movwi [0]fsr0
  9005  0EBF  3F41               	moviw [1]fsr1
  9006  0EC0  3F81               	movwi [1]fsr0
  9007  0EC1  2F42               	goto	l3439
  9008  0EC2                     l3411:	
  9009                           ;modbus.c: 91: case 0x05:*tempData=sysData.pidTi;break;
  9010                           
  9011  0EC2  305C               	movlw	92
  9012  0EC3  0086               	movwf	6
  9013  0EC4  3023               	movlw	35
  9014  0EC5  0087               	movwf	7
  9015  0EC6  3146               	addfsr 1,6
  9016  0EC7  0873               	movf	getRegisterVal@tempData,w
  9017  0EC8  0084               	movwf	4
  9018  0EC9  0185               	clrf	5
  9019  0ECA  3F40               	moviw [0]fsr1
  9020  0ECB  3F80               	movwi [0]fsr0
  9021  0ECC  3F41               	moviw [1]fsr1
  9022  0ECD  3F81               	movwi [1]fsr0
  9023  0ECE  2F42               	goto	l3439
  9024  0ECF                     l3413:	
  9025                           ;modbus.c: 92: case 0x06:*tempData=sysData.pidTd;break;
  9026                           
  9027  0ECF  305C               	movlw	92
  9028  0ED0  0086               	movwf	6
  9029  0ED1  3023               	movlw	35
  9030  0ED2  0087               	movwf	7
  9031  0ED3  3148               	addfsr 1,8
  9032  0ED4  0873               	movf	getRegisterVal@tempData,w
  9033  0ED5  0084               	movwf	4
  9034  0ED6  0185               	clrf	5
  9035  0ED7  3F40               	moviw [0]fsr1
  9036  0ED8  3F80               	movwi [0]fsr0
  9037  0ED9  3F41               	moviw [1]fsr1
  9038  0EDA  3F81               	movwi [1]fsr0
  9039  0EDB  2F42               	goto	l3439
  9040  0EDC                     l3415:	
  9041                           ;modbus.c: 93: case 0x07:*tempData=rtAdcValueRsLo; break;
  9042                           
  9043  0EDC  0873               	movf	getRegisterVal@tempData,w
  9044  0EDD  0086               	movwf	6
  9045  0EDE  0187               	clrf	7
  9046  0EDF  0020               	movlb	0	; select bank0
  9047  0EE0  0861               	movf	_rtAdcValueRsLo,w
  9048  0EE1  3FC0               	movwi [0]fsr1
  9049  0EE2  0862               	movf	_rtAdcValueRsLo+1,w
  9050  0EE3  3FC1               	movwi [1]fsr1
  9051  0EE4  2F42               	goto	l3439
  9052  0EE5                     l3417:	
  9053                           ;modbus.c: 94: case 0x08:*tempData=rtAdcValueRsHi;break;
  9054                           
  9055  0EE5  0873               	movf	getRegisterVal@tempData,w
  9056  0EE6  0086               	movwf	6
  9057  0EE7  0187               	clrf	7
  9058  0EE8  0020               	movlb	0	; select bank0
  9059  0EE9  085F               	movf	_rtAdcValueRsHi,w
  9060  0EEA  3FC0               	movwi [0]fsr1
  9061  0EEB  0860               	movf	_rtAdcValueRsHi+1,w
  9062  0EEC  3FC1               	movwi [1]fsr1
  9063  0EED  2F42               	goto	l3439
  9064  0EEE                     l3419:	
  9065                           ;modbus.c: 95: case 0x09:*tempData=rtAdcValueRcLo;break;
  9066                           
  9067  0EEE  0873               	movf	getRegisterVal@tempData,w
  9068  0EEF  0086               	movwf	6
  9069  0EF0  0187               	clrf	7
  9070  0EF1  0020               	movlb	0	; select bank0
  9071  0EF2  085D               	movf	_rtAdcValueRcLo,w
  9072  0EF3  3FC0               	movwi [0]fsr1
  9073  0EF4  085E               	movf	_rtAdcValueRcLo+1,w
  9074  0EF5  3FC1               	movwi [1]fsr1
  9075  0EF6  2F42               	goto	l3439
  9076  0EF7                     l3421:	
  9077                           ;modbus.c: 96: case 0x0a:*tempData=rtAdcValueRcHi;break;
  9078                           
  9079  0EF7  0873               	movf	getRegisterVal@tempData,w
  9080  0EF8  0086               	movwf	6
  9081  0EF9  0187               	clrf	7
  9082  0EFA  0020               	movlb	0	; select bank0
  9083  0EFB  085B               	movf	_rtAdcValueRcHi,w
  9084  0EFC  3FC0               	movwi [0]fsr1
  9085  0EFD  085C               	movf	_rtAdcValueRcHi+1,w
  9086  0EFE  3FC1               	movwi [1]fsr1
  9087  0EFF  2F42               	goto	l3439
  9088  0F00                     l3423:	
  9089                           ;modbus.c: 97: case 0x0b:*tempData=resRc;break;
  9090                           
  9091  0F00  0873               	movf	getRegisterVal@tempData,w
  9092  0F01  0086               	movwf	6
  9093  0F02  0187               	clrf	7
  9094  0F03  0020               	movlb	0	; select bank0
  9095  0F04  086E               	movf	_resRc,w
  9096  0F05  3FC0               	movwi [0]fsr1
  9097  0F06  086F               	movf	_resRc+1,w
  9098  0F07  3FC1               	movwi [1]fsr1
  9099  0F08  2F42               	goto	l3439
  9100  0F09                     l3425:	
  9101                           ;modbus.c: 98: case 0x0c:*tempData=resRs;break;
  9102                           
  9103  0F09  0873               	movf	getRegisterVal@tempData,w
  9104  0F0A  0086               	movwf	6
  9105  0F0B  0187               	clrf	7
  9106  0F0C  0020               	movlb	0	; select bank0
  9107  0F0D  086C               	movf	_resRs,w
  9108  0F0E  3FC0               	movwi [0]fsr1
  9109  0F0F  086D               	movf	_resRs+1,w
  9110  0F10  3FC1               	movwi [1]fsr1
  9111  0F11  2F42               	goto	l3439
  9112  0F12                     l3427:	
  9113                           ;modbus.c: 99: case 0x0d:*tempData=rtAdcValueVoFb;break;
  9114                           
  9115  0F12  0873               	movf	getRegisterVal@tempData,w
  9116  0F13  0086               	movwf	6
  9117  0F14  0187               	clrf	7
  9118  0F15  0020               	movlb	0	; select bank0
  9119  0F16  0859               	movf	_rtAdcValueVoFb,w
  9120  0F17  3FC0               	movwi [0]fsr1
  9121  0F18  085A               	movf	_rtAdcValueVoFb+1,w
  9122  0F19  3FC1               	movwi [1]fsr1
  9123  0F1A  2F42               	goto	l3439
  9124  0F1B                     l3429:	
  9125                           ;modbus.c: 100: case 0x0e:*tempData=voExpectMv;break;
  9126                           
  9127  0F1B  0873               	movf	getRegisterVal@tempData,w
  9128  0F1C  0086               	movwf	6
  9129  0F1D  0187               	clrf	7
  9130  0F1E  0021               	movlb	1	; select bank1
  9131  0F1F  0846               	movf	_voExpectMv^(0+128),w
  9132  0F20  3FC0               	movwi [0]fsr1
  9133  0F21  0847               	movf	(_voExpectMv+1)^(0+128),w
  9134  0F22  3FC1               	movwi [1]fsr1
  9135  0F23  2F42               	goto	l3439
  9136  0F24                     l3431:	
  9137                           ;modbus.c: 101: case 0x0f:*tempData=voExpectAdcValue;break;
  9138                           
  9139  0F24  0873               	movf	getRegisterVal@tempData,w
  9140  0F25  0086               	movwf	6
  9141  0F26  0187               	clrf	7
  9142  0F27  0020               	movlb	0	; select bank0
  9143  0F28  0855               	movf	_voExpectAdcValue,w
  9144  0F29  3FC0               	movwi [0]fsr1
  9145  0F2A  0856               	movf	_voExpectAdcValue+1,w
  9146  0F2B  3FC1               	movwi [1]fsr1
  9147  0F2C  2F42               	goto	l3439
  9148  0F2D                     l3433:	
  9149                           ;modbus.c: 102: default: *tempData=0x55aa;break;
  9150                           
  9151  0F2D  0873               	movf	getRegisterVal@tempData,w
  9152  0F2E  0086               	movwf	6
  9153  0F2F  0187               	clrf	7
  9154  0F30  30AA               	movlw	170
  9155  0F31  3FC0               	movwi [0]fsr1
  9156  0F32  3055               	movlw	85
  9157  0F33  3FC1               	movwi [1]fsr1
  9158                           
  9159                           ;modbus.c: 103: }
  9160  0F34  2F42               	goto	l3439
  9161  0F35                     l3437:	
  9162  0F35  087A               	movf	getRegisterVal@tempAddr,w
  9163                           
  9164                           ; Switch size 1, requested type "space"
  9165                           ; Number of cases is 15, Range of values is 1 to 15
  9166                           ; switch strategies available:
  9167                           ; Name         Instructions Cycles
  9168                           ; direct_byte           39     9 (fixed)
  9169                           ; simple_byte           46    24 (average)
  9170                           ; jumptable            263     9 (fixed)
  9171                           ;	Chosen strategy is direct_byte
  9172  0F36  3EFF               	addlw	-1
  9173  0F37  1C03               	skipc
  9174  0F38  2F2D               	goto	l3433
  9175  0F39  0084               	movwf	4
  9176  0F3A  300F               	movlw	15
  9177  0F3B  0204               	subwf	4,w
  9178  0F3C  1803               	skipnc
  9179  0F3D  2F2D               	goto	l3433
  9180  0F3E  3198               	movlp	high S5239
  9181  0F3F  3504               	lslf	4,w
  9182  0F40  3E00               	addlw	low S5239
  9183  0F41  0082               	movwf	2
  9184  0F42                     l3439:	
  9185                           
  9186                           ;modbus.c: 104: if(tempAddr>0x0f && tempAddr < 0x10+30*2){
  9187  0F42  3010               	movlw	16
  9188  0F43  027A               	subwf	getRegisterVal@tempAddr,w
  9189  0F44  1C03               	skipc
  9190  0F45  0008               	return
  9191  0F46  304C               	movlw	76
  9192  0F47  027A               	subwf	getRegisterVal@tempAddr,w
  9193  0F48  1803               	skipnc
  9194  0F49  0008               	return
  9195                           
  9196                           ;modbus.c: 105: tempAddr-=0x10;
  9197  0F4A  3010               	movlw	16
  9198  0F4B  02FA               	subwf	getRegisterVal@tempAddr,f
  9199                           
  9200                           ;modbus.c: 106: if(tempAddr & 0x01){
  9201  0F4C  1C7A               	btfss	getRegisterVal@tempAddr,0
  9202  0F4D  2F65               	goto	l3449
  9203                           
  9204                           ;modbus.c: 107: *tempData=sysData.calibVoMV[tempAddr>>1];
  9205  0F4E  367A               	lsrf	getRegisterVal@tempAddr,w
  9206  0F4F  00F4               	movwf	??_getRegisterVal
  9207  0F50  01F5               	clrf	??_getRegisterVal+1
  9208  0F51  35F4               	lslf	??_getRegisterVal,f
  9209  0F52  0DF5               	rlf	??_getRegisterVal+1,f
  9210  0F53  30A2               	movlw	162
  9211  0F54  00F6               	movwf	??_getRegisterVal+2
  9212  0F55  3023               	movlw	35
  9213  0F56  00F7               	movwf	??_getRegisterVal+3
  9214  0F57  0874               	movf	??_getRegisterVal,w
  9215  0F58  0776               	addwf	??_getRegisterVal+2,w
  9216  0F59  0086               	movwf	6
  9217  0F5A  0875               	movf	??_getRegisterVal+1,w
  9218  0F5B  3D77               	addwfc	??_getRegisterVal+3,w
  9219  0F5C  0087               	movwf	7
  9220  0F5D  0873               	movf	getRegisterVal@tempData,w
  9221  0F5E  0084               	movwf	4
  9222  0F5F  0185               	clrf	5
  9223  0F60  3F40               	moviw [0]fsr1
  9224  0F61  3F80               	movwi [0]fsr0
  9225  0F62  3F41               	moviw [1]fsr1
  9226  0F63  3F81               	movwi [1]fsr0
  9227                           
  9228                           ;modbus.c: 108: }else{
  9229  0F64  0008               	return
  9230  0F65                     l3449:	
  9231                           
  9232                           ;modbus.c: 109: *tempData=sysData.calibRsAdc[tempAddr>>1];
  9233  0F65  367A               	lsrf	getRegisterVal@tempAddr,w
  9234  0F66  00F4               	movwf	??_getRegisterVal
  9235  0F67  01F5               	clrf	??_getRegisterVal+1
  9236  0F68  35F4               	lslf	??_getRegisterVal,f
  9237  0F69  0DF5               	rlf	??_getRegisterVal+1,f
  9238  0F6A  3066               	movlw	102
  9239  0F6B  00F6               	movwf	??_getRegisterVal+2
  9240  0F6C  3023               	movlw	35
  9241  0F6D  00F7               	movwf	??_getRegisterVal+3
  9242  0F6E  0874               	movf	??_getRegisterVal,w
  9243  0F6F  0776               	addwf	??_getRegisterVal+2,w
  9244  0F70  0086               	movwf	6
  9245  0F71  0875               	movf	??_getRegisterVal+1,w
  9246  0F72  3D77               	addwfc	??_getRegisterVal+3,w
  9247  0F73  0087               	movwf	7
  9248  0F74  0873               	movf	getRegisterVal@tempData,w
  9249  0F75  0084               	movwf	4
  9250  0F76  0185               	clrf	5
  9251  0F77  3F40               	moviw [0]fsr1
  9252  0F78  3F80               	movwi [0]fsr0
  9253  0F79  3F41               	moviw [1]fsr1
  9254  0F7A  3F81               	movwi [1]fsr0
  9255  0F7B  0008               	return
  9256  0F7C                     __end_of_getRegisterVal:	
  9257                           ;modbus.c: 110: };modbus.c: 111: };modbus.c: 112: return t16;;	Return value of _getRegis
      +                          terVal is never used
  9258                           
  9259                           
  9260                           	psect	swtext1
  9261  1800                     __pswtext1:	
  9262  1800                     S5239:	
  9263  1800  318E  2E8A         	ljmp	l3403
  9264  1802  318E  2E92         	ljmp	l3405
  9265  1804  318E  2EA2         	ljmp	l3407
  9266  1806  318E  2EB5         	ljmp	l3409
  9267  1808  318E  2EC2         	ljmp	l3411
  9268  180A  318E  2ECF         	ljmp	l3413
  9269  180C  318E  2EDC         	ljmp	l3415
  9270  180E  318E  2EE5         	ljmp	l3417
  9271  1810  318E  2EEE         	ljmp	l3419
  9272  1812  318E  2EF7         	ljmp	l3421
  9273  1814  318F  2F00         	ljmp	l3423
  9274  1816  318F  2F09         	ljmp	l3425
  9275  1818  318F  2F12         	ljmp	l3427
  9276  181A  318F  2F1B         	ljmp	l3429
  9277  181C  318F  2F24         	ljmp	l3431
  9278                           
  9279                           	psect	text24
  9280  1E9D                     __ptext24:	
  9281 ;; *************** function _crc_append *****************
  9282 ;; Defined at:
  9283 ;;		line 143 in file "src/depend/crc16.c"
  9284 ;; Parameters:    Size  Location     Type
  9285 ;;  message         2    6[BANK0 ] PTR unsigned char 
  9286 ;;		 -> modbusBuf(32), sysData(132), 
  9287 ;;  n               2    8[BANK0 ] unsigned int 
  9288 ;; Auto vars:     Size  Location     Type
  9289 ;;  crc             2   10[BANK0 ] unsigned int 
  9290 ;; Return value:  Size  Location     Type
  9291 ;;                  1    wreg      void 
  9292 ;; Registers used:
  9293 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9294 ;; Tracked objects:
  9295 ;;		On entry : 0/0
  9296 ;;		On exit  : 0/0
  9297 ;;		Unchanged: 0/0
  9298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9299 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9300 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9301 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9302 ;;      Totals:         5       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9303 ;;Total ram usage:       11 bytes
  9304 ;; Hardware stack levels used:    1
  9305 ;; Hardware stack levels required when called:    2
  9306 ;; This function calls:
  9307 ;;		_crc_sum
  9308 ;; This function is called by:
  9309 ;;		_sys_data_save
  9310 ;;		_modbus_response_illgeal_function
  9311 ;;		_modbus_response_write_single_register
  9312 ;;		_modbus_response_write_mult_register
  9313 ;;		_modbus_response_command
  9314 ;; This function uses a non-reentrant model
  9315 ;;
  9316                           
  9317                           
  9318                           ;psect for function _crc_append
  9319  1E9D                     _crc_append:	
  9320                           
  9321                           ;crc16.c: 145: uint16_t crc;;crc16.c: 146: crc = crc_sum(message, n);
  9322                           
  9323                           ;incstack = 0
  9324                           ; Regs used in _crc_append: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9325  1E9D  0020               	movlb	0	; select bank0
  9326  1E9E  0827               	movf	crc_append@message+1,w
  9327  1E9F  00F2               	movwf	crc_sum@buf+1
  9328  1EA0  0826               	movf	crc_append@message,w
  9329  1EA1  00F1               	movwf	crc_sum@buf
  9330  1EA2  0829               	movf	crc_append@n+1,w
  9331  1EA3  00F4               	movwf	crc_sum@len+1
  9332  1EA4  0828               	movf	crc_append@n,w
  9333  1EA5  00F3               	movwf	crc_sum@len
  9334  1EA6  3192  227B         	fcall	_crc_sum
  9335  1EA8  0872               	movf	?_crc_sum+1,w
  9336  1EA9  0020               	movlb	0	; select bank0
  9337  1EAA  00AB               	movwf	crc_append@crc+1
  9338  1EAB  0871               	movf	?_crc_sum,w
  9339  1EAC  00AA               	movwf	crc_append@crc
  9340                           
  9341                           ;crc16.c: 147: message[n] = (uint8_t)(crc & 0xff);
  9342  1EAD  0828               	movf	crc_append@n,w
  9343  1EAE  0726               	addwf	crc_append@message,w
  9344  1EAF  00F7               	movwf	??_crc_append
  9345  1EB0  0829               	movf	crc_append@n+1,w
  9346  1EB1  3D27               	addwfc	crc_append@message+1,w
  9347  1EB2  00F8               	movwf	??_crc_append+1
  9348  1EB3  0877               	movf	??_crc_append,w
  9349  1EB4  0086               	movwf	6
  9350  1EB5  0878               	movf	??_crc_append+1,w
  9351  1EB6  0087               	movwf	7
  9352  1EB7  082A               	movf	crc_append@crc,w
  9353  1EB8  0081               	movwf	1
  9354                           
  9355                           ;crc16.c: 148: message[n+1] = (uint8_t)((crc >> 8) & 0xff);
  9356  1EB9  082B               	movf	crc_append@crc+1,w
  9357  1EBA  00F7               	movwf	??_crc_append
  9358  1EBB  0828               	movf	crc_append@n,w
  9359  1EBC  3E01               	addlw	1
  9360  1EBD  00F8               	movwf	??_crc_append+1
  9361  1EBE  3000               	movlw	0
  9362  1EBF  3D29               	addwfc	crc_append@n+1,w
  9363  1EC0  00F9               	movwf	??_crc_append+2
  9364  1EC1  0878               	movf	??_crc_append+1,w
  9365  1EC2  0726               	addwf	crc_append@message,w
  9366  1EC3  00FA               	movwf	??_crc_append+3
  9367  1EC4  0879               	movf	??_crc_append+2,w
  9368  1EC5  3D27               	addwfc	crc_append@message+1,w
  9369  1EC6  00FB               	movwf	??_crc_append+4
  9370  1EC7  087A               	movf	??_crc_append+3,w
  9371  1EC8  0086               	movwf	6
  9372  1EC9  087B               	movf	??_crc_append+4,w
  9373  1ECA  0087               	movwf	7
  9374  1ECB  0877               	movf	??_crc_append,w
  9375  1ECC  0081               	movwf	1
  9376  1ECD  0008               	return
  9377  1ECE                     __end_of_crc_append:	
  9378                           
  9379                           	psect	text25
  9380  105C                     __ptext25:	
  9381 ;; *************** function _crc_verify *****************
  9382 ;; Defined at:
  9383 ;;		line 135 in file "src/depend/crc16.c"
  9384 ;; Parameters:    Size  Location     Type
  9385 ;;  message         2    6[BANK0 ] PTR unsigned char 
  9386 ;;		 -> modbusBuf(32), sysData(132), 
  9387 ;;  n               2    8[BANK0 ] unsigned int 
  9388 ;; Auto vars:     Size  Location     Type
  9389 ;;  expected        2   12[BANK0 ] unsigned int 
  9390 ;;  crccal          2   10[BANK0 ] unsigned int 
  9391 ;; Return value:  Size  Location     Type
  9392 ;;                  1    wreg      unsigned char 
  9393 ;; Registers used:
  9394 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9395 ;; Tracked objects:
  9396 ;;		On entry : 0/0
  9397 ;;		On exit  : 0/0
  9398 ;;		Unchanged: 0/0
  9399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9400 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9401 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9402 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9403 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9404 ;;Total ram usage:       10 bytes
  9405 ;; Hardware stack levels used:    1
  9406 ;; Hardware stack levels required when called:    2
  9407 ;; This function calls:
  9408 ;;		_crc_sum
  9409 ;;		_m_mem_cpy_len
  9410 ;; This function is called by:
  9411 ;;		_sys_data_init
  9412 ;;		_modbus_response_process
  9413 ;; This function uses a non-reentrant model
  9414 ;;
  9415                           
  9416                           
  9417                           ;psect for function _crc_verify
  9418  105C                     _crc_verify:	
  9419                           
  9420                           ;crc16.c: 137: uint16_t expected,crccal;;crc16.c: 138: m_mem_cpy_len((uint8_t*)(&expecte
      +                          d),(message+n-2),2);
  9421                           
  9422                           ;incstack = 0
  9423                           ; Regs used in _crc_verify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9424  105C  302C               	movlw	low crc_verify@expected
  9425  105D  00F1               	movwf	m_mem_cpy_len@d
  9426  105E  3000               	movlw	high crc_verify@expected
  9427  105F  00F2               	movwf	m_mem_cpy_len@d+1
  9428  1060  0020               	movlb	0	; select bank0
  9429  1061  0828               	movf	crc_verify@n,w
  9430  1062  0726               	addwf	crc_verify@message,w
  9431  1063  00F8               	movwf	??_crc_verify
  9432  1064  0829               	movf	crc_verify@n+1,w
  9433  1065  3D27               	addwfc	crc_verify@message+1,w
  9434  1066  00F9               	movwf	??_crc_verify+1
  9435  1067  0878               	movf	??_crc_verify,w
  9436  1068  3EFE               	addlw	254
  9437  1069  00F3               	movwf	m_mem_cpy_len@s
  9438  106A  30FF               	movlw	255
  9439  106B  3D79               	addwfc	??_crc_verify+1,w
  9440  106C  00F4               	movwf	m_mem_cpy_len@s+1
  9441  106D  3002               	movlw	2
  9442  106E  00F5               	movwf	m_mem_cpy_len@len
  9443  106F  3000               	movlw	0
  9444  1070  00F6               	movwf	m_mem_cpy_len@len+1
  9445  1071  319E  265D  3190   	fcall	_m_mem_cpy_len
  9446                           
  9447                           ;crc16.c: 139: crccal=crc_sum(message,n - 2);
  9448  1074  0020               	movlb	0	; select bank0
  9449  1075  0827               	movf	crc_verify@message+1,w
  9450  1076  00F2               	movwf	crc_sum@buf+1
  9451  1077  0826               	movf	crc_verify@message,w
  9452  1078  00F1               	movwf	crc_sum@buf
  9453  1079  0828               	movf	crc_verify@n,w
  9454  107A  3EFE               	addlw	254
  9455  107B  00F3               	movwf	crc_sum@len
  9456  107C  30FF               	movlw	255
  9457  107D  3D29               	addwfc	crc_verify@n+1,w
  9458  107E  00F4               	movwf	crc_sum@len+1
  9459  107F  3192  227B  3190   	fcall	_crc_sum
  9460  1082  0872               	movf	?_crc_sum+1,w
  9461  1083  0020               	movlb	0	; select bank0
  9462  1084  00AB               	movwf	crc_verify@crccal+1
  9463  1085  0871               	movf	?_crc_sum,w
  9464  1086  00AA               	movwf	crc_verify@crccal
  9465                           
  9466                           ;crc16.c: 140: if(expected!=crccal)return 0;
  9467  1087  082B               	movf	crc_verify@crccal+1,w
  9468  1088  062D               	xorwf	crc_verify@expected+1,w
  9469  1089  1D03               	skipz
  9470  108A  288D               	goto	u3875
  9471  108B  082A               	movf	crc_verify@crccal,w
  9472  108C  062C               	xorwf	crc_verify@expected,w
  9473  108D                     u3875:	
  9474  108D  1903               	skipnz
  9475  108E  2891               	goto	l4649
  9476  108F  3000               	movlw	0
  9477  1090  0008               	return
  9478  1091                     l4649:	
  9479                           
  9480                           ;crc16.c: 141: return 1;
  9481  1091  3001               	movlw	1
  9482  1092  0008               	return
  9483  1093                     __end_of_crc_verify:	
  9484                           
  9485                           	psect	text26
  9486  1E5D                     __ptext26:	
  9487 ;; *************** function _m_mem_cpy_len *****************
  9488 ;; Defined at:
  9489 ;;		line 47 in file "src/depend/m_string.c"
  9490 ;; Parameters:    Size  Location     Type
  9491 ;;  d               2    1[COMMON] PTR unsigned char 
  9492 ;;		 -> crc_verify@expected(2), modbusBuf(32), 
  9493 ;;  s               2    3[COMMON] PTR unsigned char 
  9494 ;;		 -> modbusBuf(32), sysData(132), eusartRxBuffer(32), 
  9495 ;;  len             2    5[COMMON] unsigned int 
  9496 ;; Auto vars:     Size  Location     Type
  9497 ;;		None
  9498 ;; Return value:  Size  Location     Type
  9499 ;;                  1    wreg      void 
  9500 ;; Registers used:
  9501 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9502 ;; Tracked objects:
  9503 ;;		On entry : 0/0
  9504 ;;		On exit  : 0/0
  9505 ;;		Unchanged: 0/0
  9506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9507 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9509 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9510 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9511 ;;Total ram usage:        7 bytes
  9512 ;; Hardware stack levels used:    1
  9513 ;; Hardware stack levels required when called:    1
  9514 ;; This function calls:
  9515 ;;		Nothing
  9516 ;; This function is called by:
  9517 ;;		_main
  9518 ;;		_crc_verify
  9519 ;; This function uses a non-reentrant model
  9520 ;;
  9521                           
  9522                           
  9523                           ;psect for function _m_mem_cpy_len
  9524  1E5D                     _m_mem_cpy_len:	
  9525  1E5D                     l4639:	
  9526                           ;m_string.c: 50: while(len)
  9527                           
  9528                           ;incstack = 0
  9529                           ; Regs used in _m_mem_cpy_len: [wreg+fsr1l+fsr1h+status,2+status,0]
  9530                           
  9531  1E5D  0875               	movf	m_mem_cpy_len@len,w
  9532  1E5E  0476               	iorwf	m_mem_cpy_len@len+1,w
  9533  1E5F  1903               	btfsc	3,2
  9534  1E60  0008               	return
  9535                           
  9536                           ;m_string.c: 51: {;m_string.c: 52: *d++=*s++;
  9537  1E61  0873               	movf	m_mem_cpy_len@s,w
  9538  1E62  0086               	movwf	6
  9539  1E63  0874               	movf	m_mem_cpy_len@s+1,w
  9540  1E64  0087               	movwf	7
  9541  1E65  0801               	movf	1,w
  9542  1E66  00F7               	movwf	??_m_mem_cpy_len
  9543  1E67  0871               	movf	m_mem_cpy_len@d,w
  9544  1E68  0086               	movwf	6
  9545  1E69  0872               	movf	m_mem_cpy_len@d+1,w
  9546  1E6A  0087               	movwf	7
  9547  1E6B  0877               	movf	??_m_mem_cpy_len,w
  9548  1E6C  0081               	movwf	1
  9549  1E6D  3001               	movlw	1
  9550  1E6E  07F3               	addwf	m_mem_cpy_len@s,f
  9551  1E6F  3000               	movlw	0
  9552  1E70  3DF4               	addwfc	m_mem_cpy_len@s+1,f
  9553  1E71  3001               	movlw	1
  9554  1E72  07F1               	addwf	m_mem_cpy_len@d,f
  9555  1E73  3000               	movlw	0
  9556  1E74  3DF2               	addwfc	m_mem_cpy_len@d+1,f
  9557                           
  9558                           ;m_string.c: 53: len--;
  9559  1E75  3001               	movlw	1
  9560  1E76  02F5               	subwf	m_mem_cpy_len@len,f
  9561  1E77  3000               	movlw	0
  9562  1E78  3BF6               	subwfb	m_mem_cpy_len@len+1,f
  9563  1E79  2E5D               	goto	l4639
  9564  1E7A                     __end_of_m_mem_cpy_len:	
  9565                           
  9566                           	psect	text27
  9567  127B                     __ptext27:	
  9568 ;; *************** function _crc_sum *****************
  9569 ;; Defined at:
  9570 ;;		line 116 in file "src/depend/crc16.c"
  9571 ;; Parameters:    Size  Location     Type
  9572 ;;  buf             2    1[COMMON] PTR unsigned char 
  9573 ;;		 -> modbusBuf(32), sysData(132), 
  9574 ;;  len             2    3[COMMON] unsigned int 
  9575 ;; Auto vars:     Size  Location     Type
  9576 ;;  crc             2    4[BANK0 ] unsigned int 
  9577 ;;  i               2    2[BANK0 ] unsigned int 
  9578 ;;  j               2    0[BANK0 ] unsigned int 
  9579 ;; Return value:  Size  Location     Type
  9580 ;;                  2    1[COMMON] unsigned int 
  9581 ;; Registers used:
  9582 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9583 ;; Tracked objects:
  9584 ;;		On entry : 0/0
  9585 ;;		On exit  : 0/0
  9586 ;;		Unchanged: 0/0
  9587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9588 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9589 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9590 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9591 ;;      Totals:         6       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9592 ;;Total ram usage:       12 bytes
  9593 ;; Hardware stack levels used:    1
  9594 ;; Hardware stack levels required when called:    1
  9595 ;; This function calls:
  9596 ;;		Nothing
  9597 ;; This function is called by:
  9598 ;;		_crc_verify
  9599 ;;		_crc_append
  9600 ;; This function uses a non-reentrant model
  9601 ;;
  9602                           
  9603                           
  9604                           ;psect for function _crc_sum
  9605  127B                     _crc_sum:	
  9606                           
  9607                           ;crc16.c: 118: uint16_t crc=0xFFFF;
  9608                           
  9609                           ;incstack = 0
  9610                           ; Regs used in _crc_sum: [wreg+fsr1l+fsr1h+status,2+status,0]
  9611  127B  30FF               	movlw	255
  9612  127C  0020               	movlb	0	; select bank0
  9613  127D  00A4               	movwf	crc_sum@crc
  9614  127E  30FF               	movlw	255
  9615  127F  00A5               	movwf	crc_sum@crc+1
  9616                           
  9617                           ;crc16.c: 119: uint16_t i, j;;crc16.c: 120: for ( j=0; j<len;j++){
  9618  1280  01A0               	clrf	crc_sum@j
  9619  1281  01A1               	clrf	crc_sum@j+1
  9620  1282                     l1044:	
  9621  1282  0874               	movf	crc_sum@len+1,w
  9622  1283  0221               	subwf	crc_sum@j+1,w
  9623  1284  1D03               	skipz
  9624  1285  2A88               	goto	u3855
  9625  1286  0873               	movf	crc_sum@len,w
  9626  1287  0220               	subwf	crc_sum@j,w
  9627  1288                     u3855:	
  9628  1288  1803               	btfsc	3,0
  9629  1289  2ACC               	goto	l4607
  9630                           
  9631                           ;crc16.c: 121: crc=crc ^*buf++;
  9632  128A  0871               	movf	crc_sum@buf,w
  9633  128B  0086               	movwf	6
  9634  128C  0872               	movf	crc_sum@buf+1,w
  9635  128D  0087               	movwf	7
  9636  128E  0824               	movf	crc_sum@crc,w
  9637  128F  0601               	xorwf	1,w
  9638  1290  00A4               	movwf	crc_sum@crc
  9639  1291  0825               	movf	crc_sum@crc+1,w
  9640  1292  00A5               	movwf	crc_sum@crc+1
  9641  1293  3001               	movlw	1
  9642  1294  07F1               	addwf	crc_sum@buf,f
  9643  1295  3000               	movlw	0
  9644  1296  3DF2               	addwfc	crc_sum@buf+1,f
  9645                           
  9646                           ;crc16.c: 122: for ( i=0; i<8; i++){
  9647  1297  01A2               	clrf	crc_sum@i
  9648  1298  01A3               	clrf	crc_sum@i+1
  9649  1299  3000               	movlw	0
  9650  129A  0223               	subwf	crc_sum@i+1,w
  9651  129B  3008               	movlw	8
  9652  129C  1903               	skipnz
  9653  129D  0222               	subwf	crc_sum@i,w
  9654  129E  1803               	btfsc	3,0
  9655  129F  2AC7               	goto	l4605
  9656  12A0                     l1046:	
  9657                           
  9658                           ;crc16.c: 124: if(crc&0x0001){
  9659  12A0  1C24               	btfss	crc_sum@crc,0
  9660  12A1  2AB2               	goto	l4599
  9661                           
  9662                           ;crc16.c: 125: crc=crc>>1;
  9663  12A2  0825               	movf	crc_sum@crc+1,w
  9664  12A3  00F6               	movwf	??_crc_sum+1
  9665  12A4  0824               	movf	crc_sum@crc,w
  9666  12A5  00F5               	movwf	??_crc_sum
  9667  12A6  36F6               	lsrf	??_crc_sum+1,f
  9668  12A7  0CF5               	rrf	??_crc_sum,f
  9669  12A8  0875               	movf	??_crc_sum,w
  9670  12A9  00A4               	movwf	crc_sum@crc
  9671  12AA  0876               	movf	??_crc_sum+1,w
  9672  12AB  00A5               	movwf	crc_sum@crc+1
  9673                           
  9674                           ;crc16.c: 126: crc=crc^ 0xa001;
  9675  12AC  3001               	movlw	1
  9676  12AD  0624               	xorwf	crc_sum@crc,w
  9677  12AE  00A4               	movwf	crc_sum@crc
  9678  12AF  30A0               	movlw	160
  9679  12B0  0625               	xorwf	crc_sum@crc+1,w
  9680  12B1  2ABB               	goto	L1
  9681  12B2                     l4599:	
  9682                           ;crc16.c: 127: }else{
  9683                           
  9684                           
  9685                           ;crc16.c: 128: crc=crc>>1;
  9686  12B2  0825               	movf	crc_sum@crc+1,w
  9687  12B3  00F6               	movwf	??_crc_sum+1
  9688  12B4  0824               	movf	crc_sum@crc,w
  9689  12B5  00F5               	movwf	??_crc_sum
  9690  12B6  36F6               	lsrf	??_crc_sum+1,f
  9691  12B7  0CF5               	rrf	??_crc_sum,f
  9692  12B8  0875               	movf	??_crc_sum,w
  9693  12B9  00A4               	movwf	crc_sum@crc
  9694  12BA  0876               	movf	??_crc_sum+1,w
  9695  12BB                     L1:	
  9696  12BB  00A5               	movwf	crc_sum@crc+1
  9697  12BC  3001               	movlw	1
  9698  12BD  07A2               	addwf	crc_sum@i,f
  9699  12BE  3000               	movlw	0
  9700  12BF  3DA3               	addwfc	crc_sum@i+1,f
  9701  12C0  3000               	movlw	0
  9702  12C1  0223               	subwf	crc_sum@i+1,w
  9703  12C2  3008               	movlw	8
  9704  12C3  1903               	skipnz
  9705  12C4  0222               	subwf	crc_sum@i,w
  9706  12C5  1C03               	skipc
  9707  12C6  2AA0               	goto	l1046
  9708  12C7                     l4605:	
  9709  12C7  3001               	movlw	1
  9710  12C8  07A0               	addwf	crc_sum@j,f
  9711  12C9  3000               	movlw	0
  9712  12CA  3DA1               	addwfc	crc_sum@j+1,f
  9713  12CB  2A82               	goto	l1044
  9714  12CC                     l4607:	
  9715                           
  9716                           ;crc16.c: 129: };crc16.c: 130: };crc16.c: 132: };crc16.c: 133: return ( crc);
  9717  12CC  0825               	movf	crc_sum@crc+1,w
  9718  12CD  00F2               	movwf	?_crc_sum+1
  9719  12CE  0824               	movf	crc_sum@crc,w
  9720  12CF  00F1               	movwf	?_crc_sum
  9721  12D0  0008               	return
  9722  12D1                     __end_of_crc_sum:	
  9723                           
  9724                           	psect	text28
  9725  148F                     __ptext28:	
  9726 ;; *************** function _calc_temp_rs *****************
  9727 ;; Defined at:
  9728 ;;		line 216 in file "src/api/sample.c"
  9729 ;; Parameters:    Size  Location     Type
  9730 ;;		None
  9731 ;; Auto vars:     Size  Location     Type
  9732 ;;		None
  9733 ;; Return value:  Size  Location     Type
  9734 ;;                  4    5[BANK0 ] unsigned long 
  9735 ;; Registers used:
  9736 ;;		wreg, status,2, status,0, pclath, cstack
  9737 ;; Tracked objects:
  9738 ;;		On entry : 0/0
  9739 ;;		On exit  : 0/0
  9740 ;;		Unchanged: 0/0
  9741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9742 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9744 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9745 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9746 ;;Total ram usage:        8 bytes
  9747 ;; Hardware stack levels used:    1
  9748 ;; Hardware stack levels required when called:    2
  9749 ;; This function calls:
  9750 ;;		___lldiv
  9751 ;;		___lmul
  9752 ;; This function is called by:
  9753 ;;		_main
  9754 ;; This function uses a non-reentrant model
  9755 ;;
  9756                           
  9757                           
  9758                           ;psect for function _calc_temp_rs
  9759  148F                     _calc_temp_rs:	
  9760                           
  9761                           ;sample.c: 230: y32=12000UL;
  9762                           
  9763                           ;incstack = 0
  9764                           ; Regs used in _calc_temp_rs: [wreg+status,2+status,0+pclath+cstack]
  9765  148F  3000               	movlw	0
  9766  1490  0020               	movlb	0	; select bank0
  9767  1491  00CA               	movwf	_y32+3
  9768  1492  3000               	movlw	0
  9769  1493  00C9               	movwf	_y32+2
  9770  1494  302E               	movlw	46
  9771  1495  00C8               	movwf	_y32+1
  9772  1496  30E0               	movlw	224
  9773  1497  00C7               	movwf	_y32
  9774                           
  9775                           ;sample.c: 231: y32=y32*rtAdcValueRsHi;
  9776  1498  085F               	movf	_rtAdcValueRsHi,w
  9777  1499  00F1               	movwf	___lmul@multiplier
  9778  149A  0860               	movf	_rtAdcValueRsHi+1,w
  9779  149B  00F2               	movwf	___lmul@multiplier+1
  9780  149C  01F3               	clrf	___lmul@multiplier+2
  9781  149D  01F4               	clrf	___lmul@multiplier+3
  9782  149E  084A               	movf	_y32+3,w
  9783  149F  00F8               	movwf	___lmul@multiplicand+3
  9784  14A0  0849               	movf	_y32+2,w
  9785  14A1  00F7               	movwf	___lmul@multiplicand+2
  9786  14A2  0848               	movf	_y32+1,w
  9787  14A3  00F6               	movwf	___lmul@multiplicand+1
  9788  14A4  0847               	movf	_y32,w
  9789  14A5  00F5               	movwf	___lmul@multiplicand
  9790  14A6  319E  26CE  3194   	fcall	___lmul
  9791  14A9  0874               	movf	?___lmul+3,w
  9792  14AA  0020               	movlb	0	; select bank0
  9793  14AB  00CA               	movwf	_y32+3
  9794  14AC  0873               	movf	?___lmul+2,w
  9795  14AD  00C9               	movwf	_y32+2
  9796  14AE  0872               	movf	?___lmul+1,w
  9797  14AF  00C8               	movwf	_y32+1
  9798  14B0  0871               	movf	?___lmul,w
  9799  14B1  00C7               	movwf	_y32
  9800                           
  9801                           ;sample.c: 232: x32=rtAdcValueRsLo;
  9802  14B2  0861               	movf	_rtAdcValueRsLo,w
  9803  14B3  0021               	movlb	1	; select bank1
  9804  14B4  00B8               	movwf	_x32^(0+128)
  9805  14B5  0020               	movlb	0	; select bank0
  9806  14B6  0862               	movf	_rtAdcValueRsLo+1,w
  9807  14B7  0021               	movlb	1	; select bank1
  9808  14B8  00B9               	movwf	(_x32^(0+128)+1)
  9809  14B9  01BA               	clrf	(_x32^(0+128)+2)
  9810  14BA  01BB               	clrf	(_x32^(0+128)+3)
  9811                           
  9812                           ;sample.c: 233: y32=y32/x32;
  9813  14BB  083B               	movf	(_x32+3)^(0+128),w
  9814  14BC  00F4               	movwf	___lldiv@divisor+3
  9815  14BD  083A               	movf	(_x32+2)^(0+128),w
  9816  14BE  00F3               	movwf	___lldiv@divisor+2
  9817  14BF  0839               	movf	(_x32+1)^(0+128),w
  9818  14C0  00F2               	movwf	___lldiv@divisor+1
  9819  14C1  0838               	movf	_x32^(0+128),w
  9820  14C2  00F1               	movwf	___lldiv@divisor
  9821  14C3  0020               	movlb	0	; select bank0
  9822  14C4  084A               	movf	_y32+3,w
  9823  14C5  00F8               	movwf	___lldiv@dividend+3
  9824  14C6  0849               	movf	_y32+2,w
  9825  14C7  00F7               	movwf	___lldiv@dividend+2
  9826  14C8  0848               	movf	_y32+1,w
  9827  14C9  00F6               	movwf	___lldiv@dividend+1
  9828  14CA  0847               	movf	_y32,w
  9829  14CB  00F5               	movwf	___lldiv@dividend
  9830  14CC  3191  21D4  3194   	fcall	___lldiv
  9831  14CF  0874               	movf	?___lldiv+3,w
  9832  14D0  0020               	movlb	0	; select bank0
  9833  14D1  00CA               	movwf	_y32+3
  9834  14D2  0873               	movf	?___lldiv+2,w
  9835  14D3  00C9               	movwf	_y32+2
  9836  14D4  0872               	movf	?___lldiv+1,w
  9837  14D5  00C8               	movwf	_y32+1
  9838  14D6  0871               	movf	?___lldiv,w
  9839  14D7  00C7               	movwf	_y32
  9840                           
  9841                           ;sample.c: 234: if(y32<2000)y32=2000;
  9842  14D8  084A               	movf	_y32+3,w
  9843  14D9  1D03               	btfss	3,2
  9844  14DA  2CEC               	goto	l4887
  9845  14DB  0849               	movf	_y32+2,w
  9846  14DC  1D03               	btfss	3,2
  9847  14DD  2CEC               	goto	l4887
  9848  14DE  30D0               	movlw	208
  9849  14DF  0247               	subwf	_y32,w
  9850  14E0  3007               	movlw	7
  9851  14E1  3B48               	subwfb	_y32+1,w
  9852  14E2  1803               	btfsc	3,0
  9853  14E3  2CEC               	goto	l4887
  9854  14E4  3000               	movlw	0
  9855  14E5  00CA               	movwf	_y32+3
  9856  14E6  3000               	movlw	0
  9857  14E7  00C9               	movwf	_y32+2
  9858  14E8  3007               	movlw	7
  9859  14E9  00C8               	movwf	_y32+1
  9860  14EA  30D0               	movlw	208
  9861  14EB  00C7               	movwf	_y32
  9862  14EC                     l4887:	
  9863                           
  9864                           ;sample.c: 235: if(y32>25000)y32=25000;
  9865  14EC  084A               	movf	_y32+3,w
  9866  14ED  1D03               	btfss	3,2
  9867  14EE  2CF8               	goto	l4889
  9868  14EF  0849               	movf	_y32+2,w
  9869  14F0  1D03               	btfss	3,2
  9870  14F1  2CF8               	goto	l4889
  9871  14F2  30A9               	movlw	169
  9872  14F3  0247               	subwf	_y32,w
  9873  14F4  3061               	movlw	97
  9874  14F5  3B48               	subwfb	_y32+1,w
  9875  14F6  1C03               	btfss	3,0
  9876  14F7  2D00               	goto	l629
  9877  14F8                     l4889:	
  9878  14F8  3000               	movlw	0
  9879  14F9  00CA               	movwf	_y32+3
  9880  14FA  3000               	movlw	0
  9881  14FB  00C9               	movwf	_y32+2
  9882  14FC  3061               	movlw	97
  9883  14FD  00C8               	movwf	_y32+1
  9884  14FE  30A8               	movlw	168
  9885  14FF  00C7               	movwf	_y32
  9886  1500                     l629:	
  9887                           
  9888                           ;sample.c: 236: y32=y32-1000;
  9889  1500  3018               	movlw	24
  9890  1501  00A9               	movwf	??_calc_temp_rs
  9891  1502  30FC               	movlw	252
  9892  1503  00AA               	movwf	??_calc_temp_rs+1
  9893  1504  30FF               	movlw	255
  9894  1505  00AB               	movwf	??_calc_temp_rs+2
  9895  1506  30FF               	movlw	255
  9896  1507  00AC               	movwf	??_calc_temp_rs+3
  9897  1508  0847               	movf	_y32,w
  9898  1509  07A9               	addwf	??_calc_temp_rs,f
  9899  150A  0848               	movf	_y32+1,w
  9900  150B  3DAA               	addwfc	??_calc_temp_rs+1,f
  9901  150C  0849               	movf	_y32+2,w
  9902  150D  3DAB               	addwfc	??_calc_temp_rs+2,f
  9903  150E  084A               	movf	_y32+3,w
  9904  150F  3DAC               	addwfc	??_calc_temp_rs+3,f
  9905  1510  082C               	movf	??_calc_temp_rs+3,w
  9906  1511  00CA               	movwf	_y32+3
  9907  1512  082B               	movf	??_calc_temp_rs+2,w
  9908  1513  00C9               	movwf	_y32+2
  9909  1514  082A               	movf	??_calc_temp_rs+1,w
  9910  1515  00C8               	movwf	_y32+1
  9911  1516  0829               	movf	??_calc_temp_rs,w
  9912  1517  00C7               	movwf	_y32
  9913                           
  9914                           ;sample.c: 237: return (uint16_t)y32;
  9915  1518  0847               	movf	_y32,w
  9916  1519  00A5               	movwf	?_calc_temp_rs
  9917  151A  0848               	movf	_y32+1,w
  9918  151B  00A6               	movwf	?_calc_temp_rs+1
  9919  151C  01A7               	clrf	?_calc_temp_rs+2
  9920  151D  01A8               	clrf	?_calc_temp_rs+3
  9921  151E  0008               	return
  9922  151F                     __end_of_calc_temp_rs:	
  9923                           
  9924                           	psect	text29
  9925  1727                     __ptext29:	
  9926 ;; *************** function _calc_temp_rc *****************
  9927 ;; Defined at:
  9928 ;;		line 240 in file "src/api/sample.c"
  9929 ;; Parameters:    Size  Location     Type
  9930 ;;		None
  9931 ;; Auto vars:     Size  Location     Type
  9932 ;;		None
  9933 ;; Return value:  Size  Location     Type
  9934 ;;                  4    5[BANK0 ] unsigned long 
  9935 ;; Registers used:
  9936 ;;		wreg, status,2, status,0, pclath, cstack
  9937 ;; Tracked objects:
  9938 ;;		On entry : 0/0
  9939 ;;		On exit  : 0/0
  9940 ;;		Unchanged: 0/0
  9941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9942 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9944 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9945 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9946 ;;Total ram usage:       12 bytes
  9947 ;; Hardware stack levels used:    1
  9948 ;; Hardware stack levels required when called:    2
  9949 ;; This function calls:
  9950 ;;		___lldiv
  9951 ;;		___lmul
  9952 ;; This function is called by:
  9953 ;;		_main
  9954 ;; This function uses a non-reentrant model
  9955 ;;
  9956                           
  9957                           
  9958                           ;psect for function _calc_temp_rc
  9959  1727                     _calc_temp_rc:	
  9960                           
  9961                           ;sample.c: 244: x32=300000UL;
  9962                           
  9963                           ;incstack = 0
  9964                           ; Regs used in _calc_temp_rc: [wreg+status,2+status,0+pclath+cstack]
  9965  1727  3000               	movlw	0
  9966  1728  0021               	movlb	1	; select bank1
  9967  1729  00BB               	movwf	(_x32+3)^(0+128)
  9968  172A  3004               	movlw	4
  9969  172B  00BA               	movwf	(_x32+2)^(0+128)
  9970  172C  3093               	movlw	147
  9971  172D  00B9               	movwf	(_x32+1)^(0+128)
  9972  172E  30E0               	movlw	224
  9973  172F  00B8               	movwf	_x32^(0+128)
  9974                           
  9975                           ;sample.c: 245: x32=x32*rtAdcValueRcLo;
  9976  1730  0020               	movlb	0	; select bank0
  9977  1731  085D               	movf	_rtAdcValueRcLo,w
  9978  1732  00F1               	movwf	___lmul@multiplier
  9979  1733  085E               	movf	_rtAdcValueRcLo+1,w
  9980  1734  00F2               	movwf	___lmul@multiplier+1
  9981  1735  01F3               	clrf	___lmul@multiplier+2
  9982  1736  01F4               	clrf	___lmul@multiplier+3
  9983  1737  0021               	movlb	1	; select bank1
  9984  1738  083B               	movf	(_x32+3)^(0+128),w
  9985  1739  00F8               	movwf	___lmul@multiplicand+3
  9986  173A  083A               	movf	(_x32+2)^(0+128),w
  9987  173B  00F7               	movwf	___lmul@multiplicand+2
  9988  173C  0839               	movf	(_x32+1)^(0+128),w
  9989  173D  00F6               	movwf	___lmul@multiplicand+1
  9990  173E  0838               	movf	_x32^(0+128),w
  9991  173F  00F5               	movwf	___lmul@multiplicand
  9992  1740  319E  26CE  3197   	fcall	___lmul
  9993  1743  0874               	movf	?___lmul+3,w
  9994  1744  0021               	movlb	1	; select bank1
  9995  1745  00BB               	movwf	(_x32+3)^(0+128)
  9996  1746  0873               	movf	?___lmul+2,w
  9997  1747  00BA               	movwf	(_x32+2)^(0+128)
  9998  1748  0872               	movf	?___lmul+1,w
  9999  1749  00B9               	movwf	(_x32+1)^(0+128)
 10000  174A  0871               	movf	?___lmul,w
 10001  174B  00B8               	movwf	_x32^(0+128)
 10002                           
 10003                           ;sample.c: 248: y32=rtAdcValueRcHi;
 10004  174C  0020               	movlb	0	; select bank0
 10005  174D  085B               	movf	_rtAdcValueRcHi,w
 10006  174E  00C7               	movwf	_y32
 10007  174F  085C               	movf	_rtAdcValueRcHi+1,w
 10008  1750  00C8               	movwf	_y32+1
 10009  1751  01C9               	clrf	_y32+2
 10010  1752  01CA               	clrf	_y32+3
 10011                           
 10012                           ;sample.c: 249: y32=y32*3100;
 10013  1753  084A               	movf	_y32+3,w
 10014  1754  00F4               	movwf	___lmul@multiplier+3
 10015  1755  0849               	movf	_y32+2,w
 10016  1756  00F3               	movwf	___lmul@multiplier+2
 10017  1757  0848               	movf	_y32+1,w
 10018  1758  00F2               	movwf	___lmul@multiplier+1
 10019  1759  0847               	movf	_y32,w
 10020  175A  00F1               	movwf	___lmul@multiplier
 10021  175B  3000               	movlw	0
 10022  175C  00F8               	movwf	___lmul@multiplicand+3
 10023  175D  3000               	movlw	0
 10024  175E  00F7               	movwf	___lmul@multiplicand+2
 10025  175F  300C               	movlw	12
 10026  1760  00F6               	movwf	___lmul@multiplicand+1
 10027  1761  301C               	movlw	28
 10028  1762  00F5               	movwf	___lmul@multiplicand
 10029  1763  319E  26CE  3197   	fcall	___lmul
 10030  1766  0874               	movf	?___lmul+3,w
 10031  1767  0020               	movlb	0	; select bank0
 10032  1768  00CA               	movwf	_y32+3
 10033  1769  0873               	movf	?___lmul+2,w
 10034  176A  00C9               	movwf	_y32+2
 10035  176B  0872               	movf	?___lmul+1,w
 10036  176C  00C8               	movwf	_y32+1
 10037  176D  0871               	movf	?___lmul,w
 10038  176E  00C7               	movwf	_y32
 10039                           
 10040                           ;sample.c: 250: y32=y32/100;
 10041  176F  3000               	movlw	0
 10042  1770  00F4               	movwf	___lldiv@divisor+3
 10043  1771  3000               	movlw	0
 10044  1772  00F3               	movwf	___lldiv@divisor+2
 10045  1773  3000               	movlw	0
 10046  1774  00F2               	movwf	___lldiv@divisor+1
 10047  1775  3064               	movlw	100
 10048  1776  00F1               	movwf	___lldiv@divisor
 10049  1777  084A               	movf	_y32+3,w
 10050  1778  00F8               	movwf	___lldiv@dividend+3
 10051  1779  0849               	movf	_y32+2,w
 10052  177A  00F7               	movwf	___lldiv@dividend+2
 10053  177B  0848               	movf	_y32+1,w
 10054  177C  00F6               	movwf	___lldiv@dividend+1
 10055  177D  0847               	movf	_y32,w
 10056  177E  00F5               	movwf	___lldiv@dividend
 10057  177F  3191  21D4  3197   	fcall	___lldiv
 10058  1782  0874               	movf	?___lldiv+3,w
 10059  1783  0020               	movlb	0	; select bank0
 10060  1784  00CA               	movwf	_y32+3
 10061  1785  0873               	movf	?___lldiv+2,w
 10062  1786  00C9               	movwf	_y32+2
 10063  1787  0872               	movf	?___lldiv+1,w
 10064  1788  00C8               	movwf	_y32+1
 10065  1789  0871               	movf	?___lldiv,w
 10066  178A  00C7               	movwf	_y32
 10067                           
 10068                           ;sample.c: 251: y32=y32-rtAdcValueRcLo;
 10069  178B  0847               	movf	_y32,w
 10070  178C  00A9               	movwf	??_calc_temp_rc
 10071  178D  0848               	movf	_y32+1,w
 10072  178E  00AA               	movwf	??_calc_temp_rc+1
 10073  178F  0849               	movf	_y32+2,w
 10074  1790  00AB               	movwf	??_calc_temp_rc+2
 10075  1791  084A               	movf	_y32+3,w
 10076  1792  00AC               	movwf	??_calc_temp_rc+3
 10077  1793  085D               	movf	_rtAdcValueRcLo,w
 10078  1794  00AD               	movwf	??_calc_temp_rc+4
 10079  1795  085E               	movf	_rtAdcValueRcLo+1,w
 10080  1796  00AE               	movwf	??_calc_temp_rc+5
 10081  1797  01AF               	clrf	??_calc_temp_rc+6
 10082  1798  01B0               	clrf	??_calc_temp_rc+7
 10083  1799  09AD               	comf	??_calc_temp_rc+4,f
 10084  179A  09AE               	comf	??_calc_temp_rc+5,f
 10085  179B  09AF               	comf	??_calc_temp_rc+6,f
 10086  179C  09B0               	comf	??_calc_temp_rc+7,f
 10087  179D  0AAD               	incf	??_calc_temp_rc+4,f
 10088  179E  1903               	skipnz
 10089  179F  0AAE               	incf	??_calc_temp_rc+5,f
 10090  17A0  1903               	skipnz
 10091  17A1  0AAF               	incf	??_calc_temp_rc+6,f
 10092  17A2  1903               	skipnz
 10093  17A3  0AB0               	incf	??_calc_temp_rc+7,f
 10094  17A4  082D               	movf	??_calc_temp_rc+4,w
 10095  17A5  07A9               	addwf	??_calc_temp_rc,f
 10096  17A6  082E               	movf	??_calc_temp_rc+5,w
 10097  17A7  3DAA               	addwfc	??_calc_temp_rc+1,f
 10098  17A8  082F               	movf	??_calc_temp_rc+6,w
 10099  17A9  3DAB               	addwfc	??_calc_temp_rc+2,f
 10100  17AA  0830               	movf	??_calc_temp_rc+7,w
 10101  17AB  3DAC               	addwfc	??_calc_temp_rc+3,f
 10102  17AC  082C               	movf	??_calc_temp_rc+3,w
 10103  17AD  00CA               	movwf	_y32+3
 10104  17AE  082B               	movf	??_calc_temp_rc+2,w
 10105  17AF  00C9               	movwf	_y32+2
 10106  17B0  082A               	movf	??_calc_temp_rc+1,w
 10107  17B1  00C8               	movwf	_y32+1
 10108  17B2  0829               	movf	??_calc_temp_rc,w
 10109  17B3  00C7               	movwf	_y32
 10110                           
 10111                           ;sample.c: 254: y32=x32/y32;
 10112  17B4  084A               	movf	_y32+3,w
 10113  17B5  00F4               	movwf	___lldiv@divisor+3
 10114  17B6  0849               	movf	_y32+2,w
 10115  17B7  00F3               	movwf	___lldiv@divisor+2
 10116  17B8  0848               	movf	_y32+1,w
 10117  17B9  00F2               	movwf	___lldiv@divisor+1
 10118  17BA  0847               	movf	_y32,w
 10119  17BB  00F1               	movwf	___lldiv@divisor
 10120  17BC  0021               	movlb	1	; select bank1
 10121  17BD  083B               	movf	(_x32+3)^(0+128),w
 10122  17BE  00F8               	movwf	___lldiv@dividend+3
 10123  17BF  083A               	movf	(_x32+2)^(0+128),w
 10124  17C0  00F7               	movwf	___lldiv@dividend+2
 10125  17C1  0839               	movf	(_x32+1)^(0+128),w
 10126  17C2  00F6               	movwf	___lldiv@dividend+1
 10127  17C3  0838               	movf	_x32^(0+128),w
 10128  17C4  00F5               	movwf	___lldiv@dividend
 10129  17C5  3191  21D4  3197   	fcall	___lldiv
 10130  17C8  0874               	movf	?___lldiv+3,w
 10131  17C9  0020               	movlb	0	; select bank0
 10132  17CA  00CA               	movwf	_y32+3
 10133  17CB  0873               	movf	?___lldiv+2,w
 10134  17CC  00C9               	movwf	_y32+2
 10135  17CD  0872               	movf	?___lldiv+1,w
 10136  17CE  00C8               	movwf	_y32+1
 10137  17CF  0871               	movf	?___lldiv,w
 10138  17D0  00C7               	movwf	_y32
 10139                           
 10140                           ;sample.c: 255: if(y32<2000)y32=2000;
 10141  17D1  084A               	movf	_y32+3,w
 10142  17D2  1D03               	btfss	3,2
 10143  17D3  2FE5               	goto	l4905
 10144  17D4  0849               	movf	_y32+2,w
 10145  17D5  1D03               	btfss	3,2
 10146  17D6  2FE5               	goto	l4905
 10147  17D7  30D0               	movlw	208
 10148  17D8  0247               	subwf	_y32,w
 10149  17D9  3007               	movlw	7
 10150  17DA  3B48               	subwfb	_y32+1,w
 10151  17DB  1803               	btfsc	3,0
 10152  17DC  2FE5               	goto	l4905
 10153  17DD  3000               	movlw	0
 10154  17DE  00CA               	movwf	_y32+3
 10155  17DF  3000               	movlw	0
 10156  17E0  00C9               	movwf	_y32+2
 10157  17E1  3007               	movlw	7
 10158  17E2  00C8               	movwf	_y32+1
 10159  17E3  30D0               	movlw	208
 10160  17E4  00C7               	movwf	_y32
 10161  17E5                     l4905:	
 10162                           
 10163                           ;sample.c: 256: if(y32>25000)y32=25000;
 10164  17E5  084A               	movf	_y32+3,w
 10165  17E6  1D03               	btfss	3,2
 10166  17E7  2FF1               	goto	l4907
 10167  17E8  0849               	movf	_y32+2,w
 10168  17E9  1D03               	btfss	3,2
 10169  17EA  2FF1               	goto	l4907
 10170  17EB  30A9               	movlw	169
 10171  17EC  0247               	subwf	_y32,w
 10172  17ED  3061               	movlw	97
 10173  17EE  3B48               	subwfb	_y32+1,w
 10174  17EF  1C03               	btfss	3,0
 10175  17F0  2FF9               	goto	l634
 10176  17F1                     l4907:	
 10177  17F1  3000               	movlw	0
 10178  17F2  00CA               	movwf	_y32+3
 10179  17F3  3000               	movlw	0
 10180  17F4  00C9               	movwf	_y32+2
 10181  17F5  3061               	movlw	97
 10182  17F6  00C8               	movwf	_y32+1
 10183  17F7  30A8               	movlw	168
 10184  17F8  00C7               	movwf	_y32
 10185  17F9                     l634:	
 10186                           
 10187                           ;sample.c: 258: return (uint16_t)y32;
 10188  17F9  0847               	movf	_y32,w
 10189  17FA  00A5               	movwf	?_calc_temp_rc
 10190  17FB  0848               	movf	_y32+1,w
 10191  17FC  00A6               	movwf	?_calc_temp_rc+1
 10192  17FD  01A7               	clrf	?_calc_temp_rc+2
 10193  17FE  01A8               	clrf	?_calc_temp_rc+3
 10194  17FF  0008               	return
 10195  1800                     __end_of_calc_temp_rc:	
 10196                           
 10197                           	psect	text30
 10198  132E                     __ptext30:	
 10199 ;; *************** function _calc_rs_lo_avg *****************
 10200 ;; Defined at:
 10201 ;;		line 435 in file "src/api/sample.c"
 10202 ;; Parameters:    Size  Location     Type
 10203 ;;  x               2    5[BANK0 ] unsigned int 
 10204 ;; Auto vars:     Size  Location     Type
 10205 ;;  t32             4    7[BANK0 ] unsigned long 
 10206 ;;  i               1   11[BANK0 ] unsigned char 
 10207 ;; Return value:  Size  Location     Type
 10208 ;;                  2    5[BANK0 ] unsigned int 
 10209 ;; Registers used:
 10210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10211 ;; Tracked objects:
 10212 ;;		On entry : 0/0
 10213 ;;		On exit  : 0/0
 10214 ;;		Unchanged: 0/0
 10215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10216 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10217 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10218 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10219 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10220 ;;Total ram usage:        9 bytes
 10221 ;; Hardware stack levels used:    1
 10222 ;; Hardware stack levels required when called:    2
 10223 ;; This function calls:
 10224 ;;		___lldiv
 10225 ;; This function is called by:
 10226 ;;		_main
 10227 ;; This function uses a non-reentrant model
 10228 ;;
 10229                           
 10230                           
 10231                           ;psect for function _calc_rs_lo_avg
 10232  132E                     _calc_rs_lo_avg:	
 10233                           
 10234                           ;sample.c: 437: uint8_t i;;sample.c: 438: uint32_t t32=0;
 10235                           
 10236                           ;incstack = 0
 10237                           ; Regs used in _calc_rs_lo_avg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10238  132E  3000               	movlw	0
 10239  132F  0020               	movlb	0	; select bank0
 10240  1330  00AA               	movwf	calc_rs_lo_avg@t32+3
 10241  1331  3000               	movlw	0
 10242  1332  00A9               	movwf	calc_rs_lo_avg@t32+2
 10243  1333  3000               	movlw	0
 10244  1334  00A8               	movwf	calc_rs_lo_avg@t32+1
 10245  1335  3000               	movlw	0
 10246  1336  00A7               	movwf	calc_rs_lo_avg@t32
 10247                           
 10248                           ;sample.c: 440: for(i=0;i<6-1;i++){
 10249  1337  01AB               	clrf	calc_rs_lo_avg@i
 10250  1338  3005               	movlw	5
 10251  1339  022B               	subwf	calc_rs_lo_avg@i,w
 10252  133A  1803               	btfsc	3,0
 10253  133B  2B60               	goto	l4165
 10254  133C                     l4157:	
 10255                           
 10256                           ;sample.c: 441: rsLoAvgBuf[i]=rsLoAvgBuf[i+1];
 10257  133C  352B               	lslf	calc_rs_lo_avg@i,w
 10258  133D  3E02               	addlw	2
 10259  133E  3EAC               	addlw	(low (_rsLoAvgBuf| 0))& (0+255)
 10260  133F  0086               	movwf	6
 10261  1340  0187               	clrf	7
 10262  1341  352B               	lslf	calc_rs_lo_avg@i,w
 10263  1342  3EAC               	addlw	(low (_rsLoAvgBuf| 0))& (0+255)
 10264  1343  0084               	movwf	4
 10265  1344  0185               	clrf	5
 10266  1345  3F40               	moviw [0]fsr1
 10267  1346  3F80               	movwi [0]fsr0
 10268  1347  3F41               	moviw [1]fsr1
 10269  1348  3F81               	movwi [1]fsr0
 10270                           
 10271                           ;sample.c: 442: t32+=((uint32_t)rsLoAvgBuf[i]);
 10272  1349  352B               	lslf	calc_rs_lo_avg@i,w
 10273  134A  3EAC               	addlw	(low (_rsLoAvgBuf| 0))& (0+255)
 10274  134B  0086               	movwf	6
 10275  134C  0187               	clrf	7
 10276  134D  3F40               	moviw [0]fsr1
 10277  134E  00FA               	movwf	??_calc_rs_lo_avg
 10278  134F  3F41               	moviw [1]fsr1
 10279  1350  00FB               	movwf	??_calc_rs_lo_avg+1
 10280  1351  087A               	movf	??_calc_rs_lo_avg,w
 10281  1352  07A7               	addwf	calc_rs_lo_avg@t32,f
 10282  1353  087B               	movf	??_calc_rs_lo_avg+1,w
 10283  1354  3DA8               	addwfc	calc_rs_lo_avg@t32+1,f
 10284  1355  3000               	movlw	0
 10285  1356  3DA9               	addwfc	calc_rs_lo_avg@t32+2,f
 10286  1357  3DAA               	addwfc	calc_rs_lo_avg@t32+3,f
 10287  1358  3001               	movlw	1
 10288  1359  00FA               	movwf	??_calc_rs_lo_avg
 10289  135A  087A               	movf	??_calc_rs_lo_avg,w
 10290  135B  07AB               	addwf	calc_rs_lo_avg@i,f
 10291  135C  3005               	movlw	5
 10292  135D  022B               	subwf	calc_rs_lo_avg@i,w
 10293  135E  1C03               	skipc
 10294  135F  2B3C               	goto	l4157
 10295  1360                     l4165:	
 10296                           
 10297                           ;sample.c: 443: };sample.c: 444: rsLoAvgBuf[i]=x;
 10298  1360  352B               	lslf	calc_rs_lo_avg@i,w
 10299  1361  3EAC               	addlw	(low (_rsLoAvgBuf| 0))& (0+255)
 10300  1362  0086               	movwf	6
 10301  1363  0187               	clrf	7
 10302  1364  0825               	movf	calc_rs_lo_avg@x,w
 10303  1365  3FC0               	movwi [0]fsr1
 10304  1366  0826               	movf	calc_rs_lo_avg@x+1,w
 10305  1367  3FC1               	movwi [1]fsr1
 10306                           
 10307                           ;sample.c: 445: t32+=x;
 10308  1368  0825               	movf	calc_rs_lo_avg@x,w
 10309  1369  07A7               	addwf	calc_rs_lo_avg@t32,f
 10310  136A  0826               	movf	calc_rs_lo_avg@x+1,w
 10311  136B  3DA8               	addwfc	calc_rs_lo_avg@t32+1,f
 10312  136C  3000               	movlw	0
 10313  136D  3DA9               	addwfc	calc_rs_lo_avg@t32+2,f
 10314  136E  3DAA               	addwfc	calc_rs_lo_avg@t32+3,f
 10315                           
 10316                           ;sample.c: 446: t32/=6;
 10317  136F  3000               	movlw	0
 10318  1370  00F4               	movwf	___lldiv@divisor+3
 10319  1371  3000               	movlw	0
 10320  1372  00F3               	movwf	___lldiv@divisor+2
 10321  1373  3000               	movlw	0
 10322  1374  00F2               	movwf	___lldiv@divisor+1
 10323  1375  3006               	movlw	6
 10324  1376  00F1               	movwf	___lldiv@divisor
 10325  1377  082A               	movf	calc_rs_lo_avg@t32+3,w
 10326  1378  00F8               	movwf	___lldiv@dividend+3
 10327  1379  0829               	movf	calc_rs_lo_avg@t32+2,w
 10328  137A  00F7               	movwf	___lldiv@dividend+2
 10329  137B  0828               	movf	calc_rs_lo_avg@t32+1,w
 10330  137C  00F6               	movwf	___lldiv@dividend+1
 10331  137D  0827               	movf	calc_rs_lo_avg@t32,w
 10332  137E  00F5               	movwf	___lldiv@dividend
 10333  137F  3191  21D4         	fcall	___lldiv
 10334  1381  0874               	movf	?___lldiv+3,w
 10335  1382  0020               	movlb	0	; select bank0
 10336  1383  00AA               	movwf	calc_rs_lo_avg@t32+3
 10337  1384  0873               	movf	?___lldiv+2,w
 10338  1385  00A9               	movwf	calc_rs_lo_avg@t32+2
 10339  1386  0872               	movf	?___lldiv+1,w
 10340  1387  00A8               	movwf	calc_rs_lo_avg@t32+1
 10341  1388  0871               	movf	?___lldiv,w
 10342  1389  00A7               	movwf	calc_rs_lo_avg@t32
 10343                           
 10344                           ;sample.c: 447: return (uint16_t)t32;
 10345  138A  0828               	movf	calc_rs_lo_avg@t32+1,w
 10346  138B  00A6               	movwf	?_calc_rs_lo_avg+1
 10347  138C  0827               	movf	calc_rs_lo_avg@t32,w
 10348  138D  00A5               	movwf	?_calc_rs_lo_avg
 10349  138E  0008               	return
 10350  138F                     __end_of_calc_rs_lo_avg:	
 10351                           
 10352                           	psect	text31
 10353  11D4                     __ptext31:	
 10354 ;; *************** function ___lldiv *****************
 10355 ;; Defined at:
 10356 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 10357 ;; Parameters:    Size  Location     Type
 10358 ;;  divisor         4    1[COMMON] unsigned long 
 10359 ;;  dividend        4    5[COMMON] unsigned long 
 10360 ;; Auto vars:     Size  Location     Type
 10361 ;;  quotient        4    0[BANK0 ] unsigned long 
 10362 ;;  counter         1    4[BANK0 ] unsigned char 
 10363 ;; Return value:  Size  Location     Type
 10364 ;;                  4    1[COMMON] unsigned long 
 10365 ;; Registers used:
 10366 ;;		wreg, status,2, status,0
 10367 ;; Tracked objects:
 10368 ;;		On entry : 0/0
 10369 ;;		On exit  : 0/0
 10370 ;;		Unchanged: 0/0
 10371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10372 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10373 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10374 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10375 ;;      Totals:         9       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10376 ;;Total ram usage:       14 bytes
 10377 ;; Hardware stack levels used:    1
 10378 ;; Hardware stack levels required when called:    1
 10379 ;; This function calls:
 10380 ;;		Nothing
 10381 ;; This function is called by:
 10382 ;;		_calc_temp_rs
 10383 ;;		_calc_temp_rc
 10384 ;;		_calc_rs_lo_avg
 10385 ;; This function uses a non-reentrant model
 10386 ;;
 10387                           
 10388                           
 10389                           ;psect for function ___lldiv
 10390  11D4                     ___lldiv:	
 10391                           
 10392                           ;incstack = 0
 10393                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10394  11D4  3000               	movlw	0
 10395  11D5  0020               	movlb	0	; select bank0
 10396  11D6  00A3               	movwf	___lldiv@quotient+3
 10397  11D7  3000               	movlw	0
 10398  11D8  00A2               	movwf	___lldiv@quotient+2
 10399  11D9  3000               	movlw	0
 10400  11DA  00A1               	movwf	___lldiv@quotient+1
 10401  11DB  3000               	movlw	0
 10402  11DC  00A0               	movwf	___lldiv@quotient
 10403  11DD  0874               	movf	___lldiv@divisor+3,w
 10404  11DE  0473               	iorwf	___lldiv@divisor+2,w
 10405  11DF  0472               	iorwf	___lldiv@divisor+1,w
 10406  11E0  0471               	iorwf	___lldiv@divisor,w
 10407  11E1  1903               	skipnz
 10408  11E2  2A1E               	goto	l3895
 10409  11E3  01A4               	clrf	___lldiv@counter
 10410  11E4  0AA4               	incf	___lldiv@counter,f
 10411  11E5                     l3881:	
 10412  11E5  1BF4               	btfsc	___lldiv@divisor+3,7
 10413  11E6  29F3               	goto	l3883
 10414  11E7  3001               	movlw	1
 10415  11E8                     u2725:	
 10416  11E8  35F1               	lslf	___lldiv@divisor,f
 10417  11E9  0DF2               	rlf	___lldiv@divisor+1,f
 10418  11EA  0DF3               	rlf	___lldiv@divisor+2,f
 10419  11EB  0DF4               	rlf	___lldiv@divisor+3,f
 10420  11EC  0B89               	decfsz	9,f
 10421  11ED  29E8               	goto	u2725
 10422  11EE  3001               	movlw	1
 10423  11EF  00F9               	movwf	??___lldiv
 10424  11F0  0879               	movf	??___lldiv,w
 10425  11F1  07A4               	addwf	___lldiv@counter,f
 10426  11F2  29E5               	goto	l3881
 10427  11F3                     l3883:	
 10428  11F3  3001               	movlw	1
 10429  11F4                     u2745:	
 10430  11F4  35A0               	lslf	___lldiv@quotient,f
 10431  11F5  0DA1               	rlf	___lldiv@quotient+1,f
 10432  11F6  0DA2               	rlf	___lldiv@quotient+2,f
 10433  11F7  0DA3               	rlf	___lldiv@quotient+3,f
 10434  11F8  0B89               	decfsz	9,f
 10435  11F9  29F4               	goto	u2745
 10436  11FA  0874               	movf	___lldiv@divisor+3,w
 10437  11FB  0278               	subwf	___lldiv@dividend+3,w
 10438  11FC  1D03               	skipz
 10439  11FD  2A08               	goto	u2755
 10440  11FE  0873               	movf	___lldiv@divisor+2,w
 10441  11FF  0277               	subwf	___lldiv@dividend+2,w
 10442  1200  1D03               	skipz
 10443  1201  2A08               	goto	u2755
 10444  1202  0872               	movf	___lldiv@divisor+1,w
 10445  1203  0276               	subwf	___lldiv@dividend+1,w
 10446  1204  1D03               	skipz
 10447  1205  2A08               	goto	u2755
 10448  1206  0871               	movf	___lldiv@divisor,w
 10449  1207  0275               	subwf	___lldiv@dividend,w
 10450  1208                     u2755:	
 10451  1208  1C03               	skipc
 10452  1209  2A13               	goto	l3891
 10453  120A  0871               	movf	___lldiv@divisor,w
 10454  120B  02F5               	subwf	___lldiv@dividend,f
 10455  120C  0872               	movf	___lldiv@divisor+1,w
 10456  120D  3BF6               	subwfb	___lldiv@dividend+1,f
 10457  120E  0873               	movf	___lldiv@divisor+2,w
 10458  120F  3BF7               	subwfb	___lldiv@dividend+2,f
 10459  1210  0874               	movf	___lldiv@divisor+3,w
 10460  1211  3BF8               	subwfb	___lldiv@dividend+3,f
 10461  1212  1420               	bsf	___lldiv@quotient,0
 10462  1213                     l3891:	
 10463  1213  3001               	movlw	1
 10464  1214                     u2765:	
 10465  1214  36F4               	lsrf	___lldiv@divisor+3,f
 10466  1215  0CF3               	rrf	___lldiv@divisor+2,f
 10467  1216  0CF2               	rrf	___lldiv@divisor+1,f
 10468  1217  0CF1               	rrf	___lldiv@divisor,f
 10469  1218  0B89               	decfsz	9,f
 10470  1219  2A14               	goto	u2765
 10471  121A  3001               	movlw	1
 10472  121B  02A4               	subwf	___lldiv@counter,f
 10473  121C  1D03               	btfss	3,2
 10474  121D  29F3               	goto	l3883
 10475  121E                     l3895:	
 10476  121E  0823               	movf	___lldiv@quotient+3,w
 10477  121F  00F4               	movwf	?___lldiv+3
 10478  1220  0822               	movf	___lldiv@quotient+2,w
 10479  1221  00F3               	movwf	?___lldiv+2
 10480  1222  0821               	movf	___lldiv@quotient+1,w
 10481  1223  00F2               	movwf	?___lldiv+1
 10482  1224  0820               	movf	___lldiv@quotient,w
 10483  1225  00F1               	movwf	?___lldiv
 10484  1226  0008               	return
 10485  1227                     __end_of___lldiv:	
 10486                           
 10487                           	psect	text32
 10488  08B5                     __ptext32:	
 10489 ;; *************** function _calc_expect_vout_adc_value *****************
 10490 ;; Defined at:
 10491 ;;		line 452 in file "src/api/sample.c"
 10492 ;; Parameters:    Size  Location     Type
 10493 ;;  x               2   18[BANK0 ] unsigned int 
 10494 ;; Auto vars:     Size  Location     Type
 10495 ;;  t32             4   34[BANK0 ] long 
 10496 ;;  i               1   38[BANK0 ] unsigned char 
 10497 ;; Return value:  Size  Location     Type
 10498 ;;                  2   18[BANK0 ] unsigned int 
 10499 ;; Registers used:
 10500 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10501 ;; Tracked objects:
 10502 ;;		On entry : 0/0
 10503 ;;		On exit  : 0/0
 10504 ;;		Unchanged: 0/0
 10505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10506 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10507 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10508 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10509 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10510 ;;Total ram usage:       21 bytes
 10511 ;; Hardware stack levels used:    1
 10512 ;; Hardware stack levels required when called:    2
 10513 ;; This function calls:
 10514 ;;		___aldiv
 10515 ;;		___lmul
 10516 ;; This function is called by:
 10517 ;;		_main
 10518 ;; This function uses a non-reentrant model
 10519 ;;
 10520                           
 10521                           
 10522                           ;psect for function _calc_expect_vout_adc_value
 10523  08B5                     _calc_expect_vout_adc_value:	
 10524                           
 10525                           ;sample.c: 455: uint8_t i;;sample.c: 456: int32_t t32;;sample.c: 459: for (i = 0; i < 30
      +                          -1; i++) {
 10526                           
 10527                           ;incstack = 0
 10528                           ; Regs used in _calc_expect_vout_adc_value: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 10529  08B5  0020               	movlb	0	; select bank0
 10530  08B6  01C6               	clrf	calc_expect_vout_adc_value@i
 10531  08B7  301D               	movlw	29
 10532  08B8  0246               	subwf	calc_expect_vout_adc_value@i,w
 10533  08B9  1803               	btfsc	3,0
 10534  08BA  2918               	goto	l4983
 10535  08BB                     l4973:	
 10536                           
 10537                           ;sample.c: 460: if(sysData.calibRsAdc[i]<sysData.calibRsAdc[i+1]){
 10538  08BB  0846               	movf	calc_expect_vout_adc_value@i,w
 10539  08BC  00B4               	movwf	??_calc_expect_vout_adc_value
 10540  08BD  01B5               	clrf	??_calc_expect_vout_adc_value+1
 10541  08BE  35B4               	lslf	??_calc_expect_vout_adc_value,f
 10542  08BF  0DB5               	rlf	??_calc_expect_vout_adc_value+1,f
 10543  08C0  0834               	movf	??_calc_expect_vout_adc_value,w
 10544  08C1  3E02               	addlw	2
 10545  08C2  00B6               	movwf	??_calc_expect_vout_adc_value+2
 10546  08C3  3000               	movlw	0
 10547  08C4  3D35               	addwfc	??_calc_expect_vout_adc_value+1,w
 10548  08C5  00B7               	movwf	??_calc_expect_vout_adc_value+3
 10549  08C6  3066               	movlw	102
 10550  08C7  00B8               	movwf	??_calc_expect_vout_adc_value+4
 10551  08C8  3023               	movlw	35
 10552  08C9  00B9               	movwf	??_calc_expect_vout_adc_value+5
 10553  08CA  0836               	movf	??_calc_expect_vout_adc_value+2,w
 10554  08CB  0738               	addwf	??_calc_expect_vout_adc_value+4,w
 10555  08CC  0086               	movwf	6
 10556  08CD  0837               	movf	??_calc_expect_vout_adc_value+3,w
 10557  08CE  3D39               	addwfc	??_calc_expect_vout_adc_value+5,w
 10558  08CF  0087               	movwf	7
 10559  08D0  3F40               	moviw [0]fsr1
 10560  08D1  00BA               	movwf	??_calc_expect_vout_adc_value+6
 10561  08D2  3F41               	moviw [1]fsr1
 10562  08D3  00BB               	movwf	??_calc_expect_vout_adc_value+7
 10563  08D4  0846               	movf	calc_expect_vout_adc_value@i,w
 10564  08D5  00BC               	movwf	??_calc_expect_vout_adc_value+8
 10565  08D6  01BD               	clrf	??_calc_expect_vout_adc_value+9
 10566  08D7  35BC               	lslf	??_calc_expect_vout_adc_value+8,f
 10567  08D8  0DBD               	rlf	??_calc_expect_vout_adc_value+9,f
 10568  08D9  3066               	movlw	102
 10569  08DA  00BE               	movwf	??_calc_expect_vout_adc_value+10
 10570  08DB  3023               	movlw	35
 10571  08DC  00BF               	movwf	??_calc_expect_vout_adc_value+11
 10572  08DD  083C               	movf	??_calc_expect_vout_adc_value+8,w
 10573  08DE  073E               	addwf	??_calc_expect_vout_adc_value+10,w
 10574  08DF  0086               	movwf	6
 10575  08E0  083D               	movf	??_calc_expect_vout_adc_value+9,w
 10576  08E1  3D3F               	addwfc	??_calc_expect_vout_adc_value+11,w
 10577  08E2  0087               	movwf	7
 10578  08E3  3F40               	moviw [0]fsr1
 10579  08E4  00C0               	movwf	??_calc_expect_vout_adc_value+12
 10580  08E5  3F41               	moviw [1]fsr1
 10581  08E6  00C1               	movwf	??_calc_expect_vout_adc_value+13
 10582  08E7  083B               	movf	??_calc_expect_vout_adc_value+7,w
 10583  08E8  0241               	subwf	??_calc_expect_vout_adc_value+13,w
 10584  08E9  1D03               	skipz
 10585  08EA  28ED               	goto	u4415
 10586  08EB  083A               	movf	??_calc_expect_vout_adc_value+6,w
 10587  08EC  0240               	subwf	??_calc_expect_vout_adc_value+12,w
 10588  08ED                     u4415:	
 10589  08ED  1803               	skipnc
 10590  08EE  2918               	goto	l4983
 10591                           
 10592                           ;sample.c: 461: if (x <= sysData.calibRsAdc[i+1])break;
 10593  08EF  0846               	movf	calc_expect_vout_adc_value@i,w
 10594  08F0  00B4               	movwf	??_calc_expect_vout_adc_value
 10595  08F1  01B5               	clrf	??_calc_expect_vout_adc_value+1
 10596  08F2  35B4               	lslf	??_calc_expect_vout_adc_value,f
 10597  08F3  0DB5               	rlf	??_calc_expect_vout_adc_value+1,f
 10598  08F4  0834               	movf	??_calc_expect_vout_adc_value,w
 10599  08F5  3E02               	addlw	2
 10600  08F6  00B6               	movwf	??_calc_expect_vout_adc_value+2
 10601  08F7  3000               	movlw	0
 10602  08F8  3D35               	addwfc	??_calc_expect_vout_adc_value+1,w
 10603  08F9  00B7               	movwf	??_calc_expect_vout_adc_value+3
 10604  08FA  3066               	movlw	102
 10605  08FB  00B8               	movwf	??_calc_expect_vout_adc_value+4
 10606  08FC  3023               	movlw	35
 10607  08FD  00B9               	movwf	??_calc_expect_vout_adc_value+5
 10608  08FE  0836               	movf	??_calc_expect_vout_adc_value+2,w
 10609  08FF  0738               	addwf	??_calc_expect_vout_adc_value+4,w
 10610  0900  0086               	movwf	6
 10611  0901  0837               	movf	??_calc_expect_vout_adc_value+3,w
 10612  0902  3D39               	addwfc	??_calc_expect_vout_adc_value+5,w
 10613  0903  0087               	movwf	7
 10614  0904  3F40               	moviw [0]fsr1
 10615  0905  00BA               	movwf	??_calc_expect_vout_adc_value+6
 10616  0906  3F41               	moviw [1]fsr1
 10617  0907  00BB               	movwf	??_calc_expect_vout_adc_value+7
 10618  0908  0833               	movf	calc_expect_vout_adc_value@x+1,w
 10619  0909  023B               	subwf	??_calc_expect_vout_adc_value+7,w
 10620  090A  1D03               	skipz
 10621  090B  290E               	goto	u4425
 10622  090C  0832               	movf	calc_expect_vout_adc_value@x,w
 10623  090D  023A               	subwf	??_calc_expect_vout_adc_value+6,w
 10624  090E                     u4425:	
 10625  090E  1803               	btfsc	3,0
 10626  090F  2918               	goto	l4983
 10627                           
 10628                           ;sample.c: 464: break;
 10629                           
 10630                           ;sample.c: 462: }else{
 10631  0910  3001               	movlw	1
 10632  0911  00B4               	movwf	??_calc_expect_vout_adc_value
 10633  0912  0834               	movf	??_calc_expect_vout_adc_value,w
 10634  0913  07C6               	addwf	calc_expect_vout_adc_value@i,f
 10635  0914  301D               	movlw	29
 10636  0915  0246               	subwf	calc_expect_vout_adc_value@i,w
 10637  0916  1C03               	skipc
 10638  0917  28BB               	goto	l4973
 10639  0918                     l4983:	
 10640                           
 10641                           ;sample.c: 465: };sample.c: 466: };sample.c: 468: if (i > 30-2)i=30-2;
 10642  0918  301D               	movlw	29
 10643  0919  0246               	subwf	calc_expect_vout_adc_value@i,w
 10644  091A  1C03               	skipc
 10645  091B  2920               	goto	l4987
 10646  091C  301C               	movlw	28
 10647  091D  00B4               	movwf	??_calc_expect_vout_adc_value
 10648  091E  0834               	movf	??_calc_expect_vout_adc_value,w
 10649  091F  00C6               	movwf	calc_expect_vout_adc_value@i
 10650  0920                     l4987:	
 10651                           
 10652                           ;sample.c: 469: y1=sysData.calibVoMV[i+1];
 10653  0920  0846               	movf	calc_expect_vout_adc_value@i,w
 10654  0921  00B4               	movwf	??_calc_expect_vout_adc_value
 10655  0922  01B5               	clrf	??_calc_expect_vout_adc_value+1
 10656  0923  35B4               	lslf	??_calc_expect_vout_adc_value,f
 10657  0924  0DB5               	rlf	??_calc_expect_vout_adc_value+1,f
 10658  0925  0834               	movf	??_calc_expect_vout_adc_value,w
 10659  0926  3E02               	addlw	2
 10660  0927  00B6               	movwf	??_calc_expect_vout_adc_value+2
 10661  0928  3000               	movlw	0
 10662  0929  3D35               	addwfc	??_calc_expect_vout_adc_value+1,w
 10663  092A  00B7               	movwf	??_calc_expect_vout_adc_value+3
 10664  092B  30A2               	movlw	162
 10665  092C  00B8               	movwf	??_calc_expect_vout_adc_value+4
 10666  092D  3023               	movlw	35
 10667  092E  00B9               	movwf	??_calc_expect_vout_adc_value+5
 10668  092F  0836               	movf	??_calc_expect_vout_adc_value+2,w
 10669  0930  0738               	addwf	??_calc_expect_vout_adc_value+4,w
 10670  0931  0086               	movwf	6
 10671  0932  0837               	movf	??_calc_expect_vout_adc_value+3,w
 10672  0933  3D39               	addwfc	??_calc_expect_vout_adc_value+5,w
 10673  0934  0087               	movwf	7
 10674  0935  3F40               	moviw [0]fsr1
 10675  0936  00BA               	movwf	??_calc_expect_vout_adc_value+6
 10676  0937  3F41               	moviw [1]fsr1
 10677  0938  00BB               	movwf	??_calc_expect_vout_adc_value+7
 10678  0939  083A               	movf	??_calc_expect_vout_adc_value+6,w
 10679  093A  0021               	movlb	1	; select bank1
 10680  093B  00C0               	movwf	_y1^(0+128)
 10681  093C  0020               	movlb	0	; select bank0
 10682  093D  083B               	movf	??_calc_expect_vout_adc_value+7,w
 10683  093E  0021               	movlb	1	; select bank1
 10684  093F  00C1               	movwf	(_y1^(0+128)+1)
 10685  0940  01C2               	clrf	(_y1^(0+128)+2)
 10686  0941  01C3               	clrf	(_y1^(0+128)+3)
 10687                           
 10688                           ;sample.c: 470: y0=sysData.calibVoMV[i];
 10689  0942  0020               	movlb	0	; select bank0
 10690  0943  0846               	movf	calc_expect_vout_adc_value@i,w
 10691  0944  00B4               	movwf	??_calc_expect_vout_adc_value
 10692  0945  01B5               	clrf	??_calc_expect_vout_adc_value+1
 10693  0946  35B4               	lslf	??_calc_expect_vout_adc_value,f
 10694  0947  0DB5               	rlf	??_calc_expect_vout_adc_value+1,f
 10695  0948  30A2               	movlw	162
 10696  0949  00B6               	movwf	??_calc_expect_vout_adc_value+2
 10697  094A  3023               	movlw	35
 10698  094B  00B7               	movwf	??_calc_expect_vout_adc_value+3
 10699  094C  0834               	movf	??_calc_expect_vout_adc_value,w
 10700  094D  0736               	addwf	??_calc_expect_vout_adc_value+2,w
 10701  094E  0086               	movwf	6
 10702  094F  0835               	movf	??_calc_expect_vout_adc_value+1,w
 10703  0950  3D37               	addwfc	??_calc_expect_vout_adc_value+3,w
 10704  0951  0087               	movwf	7
 10705  0952  3F40               	moviw [0]fsr1
 10706  0953  00B8               	movwf	??_calc_expect_vout_adc_value+4
 10707  0954  3F41               	moviw [1]fsr1
 10708  0955  00B9               	movwf	??_calc_expect_vout_adc_value+5
 10709  0956  0838               	movf	??_calc_expect_vout_adc_value+4,w
 10710  0957  00CF               	movwf	_y0
 10711  0958  0839               	movf	??_calc_expect_vout_adc_value+5,w
 10712  0959  00D0               	movwf	_y0+1
 10713  095A  01D1               	clrf	_y0+2
 10714  095B  01D2               	clrf	_y0+3
 10715                           
 10716                           ;sample.c: 473: x1=sysData.calibRsAdc[i+1];
 10717  095C  0846               	movf	calc_expect_vout_adc_value@i,w
 10718  095D  00B4               	movwf	??_calc_expect_vout_adc_value
 10719  095E  01B5               	clrf	??_calc_expect_vout_adc_value+1
 10720  095F  35B4               	lslf	??_calc_expect_vout_adc_value,f
 10721  0960  0DB5               	rlf	??_calc_expect_vout_adc_value+1,f
 10722  0961  0834               	movf	??_calc_expect_vout_adc_value,w
 10723  0962  3E02               	addlw	2
 10724  0963  00B6               	movwf	??_calc_expect_vout_adc_value+2
 10725  0964  3000               	movlw	0
 10726  0965  3D35               	addwfc	??_calc_expect_vout_adc_value+1,w
 10727  0966  00B7               	movwf	??_calc_expect_vout_adc_value+3
 10728  0967  3066               	movlw	102
 10729  0968  00B8               	movwf	??_calc_expect_vout_adc_value+4
 10730  0969  3023               	movlw	35
 10731  096A  00B9               	movwf	??_calc_expect_vout_adc_value+5
 10732  096B  0836               	movf	??_calc_expect_vout_adc_value+2,w
 10733  096C  0738               	addwf	??_calc_expect_vout_adc_value+4,w
 10734  096D  0086               	movwf	6
 10735  096E  0837               	movf	??_calc_expect_vout_adc_value+3,w
 10736  096F  3D39               	addwfc	??_calc_expect_vout_adc_value+5,w
 10737  0970  0087               	movwf	7
 10738  0971  3F40               	moviw [0]fsr1
 10739  0972  00BA               	movwf	??_calc_expect_vout_adc_value+6
 10740  0973  3F41               	moviw [1]fsr1
 10741  0974  00BB               	movwf	??_calc_expect_vout_adc_value+7
 10742  0975  083A               	movf	??_calc_expect_vout_adc_value+6,w
 10743  0976  0021               	movlb	1	; select bank1
 10744  0977  00BC               	movwf	_x1^(0+128)
 10745  0978  0020               	movlb	0	; select bank0
 10746  0979  083B               	movf	??_calc_expect_vout_adc_value+7,w
 10747  097A  0021               	movlb	1	; select bank1
 10748  097B  00BD               	movwf	(_x1^(0+128)+1)
 10749  097C  01BE               	clrf	(_x1^(0+128)+2)
 10750  097D  01BF               	clrf	(_x1^(0+128)+3)
 10751                           
 10752                           ;sample.c: 474: x0=sysData.calibRsAdc[i];
 10753  097E  0020               	movlb	0	; select bank0
 10754  097F  0846               	movf	calc_expect_vout_adc_value@i,w
 10755  0980  00B4               	movwf	??_calc_expect_vout_adc_value
 10756  0981  01B5               	clrf	??_calc_expect_vout_adc_value+1
 10757  0982  35B4               	lslf	??_calc_expect_vout_adc_value,f
 10758  0983  0DB5               	rlf	??_calc_expect_vout_adc_value+1,f
 10759  0984  3066               	movlw	102
 10760  0985  00B6               	movwf	??_calc_expect_vout_adc_value+2
 10761  0986  3023               	movlw	35
 10762  0987  00B7               	movwf	??_calc_expect_vout_adc_value+3
 10763  0988  0834               	movf	??_calc_expect_vout_adc_value,w
 10764  0989  0736               	addwf	??_calc_expect_vout_adc_value+2,w
 10765  098A  0086               	movwf	6
 10766  098B  0835               	movf	??_calc_expect_vout_adc_value+1,w
 10767  098C  3D37               	addwfc	??_calc_expect_vout_adc_value+3,w
 10768  098D  0087               	movwf	7
 10769  098E  3F40               	moviw [0]fsr1
 10770  098F  00B8               	movwf	??_calc_expect_vout_adc_value+4
 10771  0990  3F41               	moviw [1]fsr1
 10772  0991  00B9               	movwf	??_calc_expect_vout_adc_value+5
 10773  0992  0838               	movf	??_calc_expect_vout_adc_value+4,w
 10774  0993  00CB               	movwf	_x0
 10775  0994  0839               	movf	??_calc_expect_vout_adc_value+5,w
 10776  0995  00CC               	movwf	_x0+1
 10777  0996  01CD               	clrf	_x0+2
 10778  0997  01CE               	clrf	_x0+3
 10779                           
 10780                           ;sample.c: 476: if(x<=x0 && i==0)return (uint16_t)y0;
 10781  0998  0832               	movf	calc_expect_vout_adc_value@x,w
 10782  0999  00B4               	movwf	??_calc_expect_vout_adc_value
 10783  099A  0833               	movf	calc_expect_vout_adc_value@x+1,w
 10784  099B  00B5               	movwf	??_calc_expect_vout_adc_value+1
 10785  099C  01B6               	clrf	??_calc_expect_vout_adc_value+2
 10786  099D  01B7               	clrf	??_calc_expect_vout_adc_value+3
 10787  099E  084E               	movf	_x0+3,w
 10788  099F  3A80               	xorlw	128
 10789  09A0  00B8               	movwf	??_calc_expect_vout_adc_value+4
 10790  09A1  0837               	movf	??_calc_expect_vout_adc_value+3,w
 10791  09A2  3A80               	xorlw	128
 10792  09A3  0238               	subwf	??_calc_expect_vout_adc_value+4,w
 10793  09A4  1D03               	skipz
 10794  09A5  29B0               	goto	u4453
 10795  09A6  0836               	movf	??_calc_expect_vout_adc_value+2,w
 10796  09A7  024D               	subwf	_x0+2,w
 10797  09A8  1D03               	skipz
 10798  09A9  29B0               	goto	u4453
 10799  09AA  0835               	movf	??_calc_expect_vout_adc_value+1,w
 10800  09AB  024C               	subwf	_x0+1,w
 10801  09AC  1D03               	skipz
 10802  09AD  29B0               	goto	u4453
 10803  09AE  0834               	movf	??_calc_expect_vout_adc_value,w
 10804  09AF  024B               	subwf	_x0,w
 10805  09B0                     u4453:	
 10806  09B0  1C03               	skipc
 10807  09B1  29BA               	goto	l5001
 10808  09B2  0846               	movf	calc_expect_vout_adc_value@i,w
 10809  09B3  1D03               	btfss	3,2
 10810  09B4  29BA               	goto	l5001
 10811  09B5  0850               	movf	_y0+1,w
 10812  09B6  00B3               	movwf	?_calc_expect_vout_adc_value+1
 10813  09B7  084F               	movf	_y0,w
 10814  09B8  00B2               	movwf	?_calc_expect_vout_adc_value
 10815  09B9  0008               	return
 10816  09BA                     l5001:	
 10817                           
 10818                           ;sample.c: 477: if(x1<=x0)return (uint16_t)y0;
 10819  09BA  084E               	movf	_x0+3,w
 10820  09BB  3A80               	xorlw	128
 10821  09BC  00B4               	movwf	??_calc_expect_vout_adc_value
 10822  09BD  0021               	movlb	1	; select bank1
 10823  09BE  083F               	movf	(_x1+3)^(0+128),w
 10824  09BF  3A80               	xorlw	128
 10825  09C0  0020               	movlb	0	; select bank0
 10826  09C1  0234               	subwf	??_calc_expect_vout_adc_value,w
 10827  09C2  1D03               	skipz
 10828  09C3  29D4               	goto	u4473
 10829  09C4  0021               	movlb	1	; select bank1
 10830  09C5  083E               	movf	(_x1+2)^(0+128),w
 10831  09C6  0020               	movlb	0	; select bank0
 10832  09C7  024D               	subwf	_x0+2,w
 10833  09C8  1D03               	skipz
 10834  09C9  29D4               	goto	u4473
 10835  09CA  0021               	movlb	1	; select bank1
 10836  09CB  083D               	movf	(_x1+1)^(0+128),w
 10837  09CC  0020               	movlb	0	; select bank0
 10838  09CD  024C               	subwf	_x0+1,w
 10839  09CE  1D03               	skipz
 10840  09CF  29D4               	goto	u4473
 10841  09D0  0021               	movlb	1	; select bank1
 10842  09D1  083C               	movf	_x1^(0+128),w
 10843  09D2  0020               	movlb	0	; select bank0
 10844  09D3  024B               	subwf	_x0,w
 10845  09D4                     u4473:	
 10846  09D4  1C03               	skipc
 10847  09D5  29DB               	goto	l5007
 10848  09D6  0850               	movf	_y0+1,w
 10849  09D7  00B3               	movwf	?_calc_expect_vout_adc_value+1
 10850  09D8  084F               	movf	_y0,w
 10851  09D9  00B2               	movwf	?_calc_expect_vout_adc_value
 10852  09DA  0008               	return
 10853  09DB                     l5007:	
 10854                           
 10855                           ;sample.c: 480: t32=(x-x0);
 10856  09DB  094B               	comf	_x0,w
 10857  09DC  00B4               	movwf	??_calc_expect_vout_adc_value
 10858  09DD  094C               	comf	_x0+1,w
 10859  09DE  00B5               	movwf	??_calc_expect_vout_adc_value+1
 10860  09DF  094D               	comf	_x0+2,w
 10861  09E0  00B6               	movwf	??_calc_expect_vout_adc_value+2
 10862  09E1  094E               	comf	_x0+3,w
 10863  09E2  00B7               	movwf	??_calc_expect_vout_adc_value+3
 10864  09E3  0AB4               	incf	??_calc_expect_vout_adc_value,f
 10865  09E4  1903               	skipnz
 10866  09E5  0AB5               	incf	??_calc_expect_vout_adc_value+1,f
 10867  09E6  1903               	skipnz
 10868  09E7  0AB6               	incf	??_calc_expect_vout_adc_value+2,f
 10869  09E8  1903               	skipnz
 10870  09E9  0AB7               	incf	??_calc_expect_vout_adc_value+3,f
 10871  09EA  0832               	movf	calc_expect_vout_adc_value@x,w
 10872  09EB  00B8               	movwf	??_calc_expect_vout_adc_value+4
 10873  09EC  0833               	movf	calc_expect_vout_adc_value@x+1,w
 10874  09ED  00B9               	movwf	??_calc_expect_vout_adc_value+5
 10875  09EE  01BA               	clrf	??_calc_expect_vout_adc_value+6
 10876  09EF  01BB               	clrf	??_calc_expect_vout_adc_value+7
 10877  09F0  0838               	movf	??_calc_expect_vout_adc_value+4,w
 10878  09F1  07B4               	addwf	??_calc_expect_vout_adc_value,f
 10879  09F2  0839               	movf	??_calc_expect_vout_adc_value+5,w
 10880  09F3  3DB5               	addwfc	??_calc_expect_vout_adc_value+1,f
 10881  09F4  083A               	movf	??_calc_expect_vout_adc_value+6,w
 10882  09F5  3DB6               	addwfc	??_calc_expect_vout_adc_value+2,f
 10883  09F6  083B               	movf	??_calc_expect_vout_adc_value+7,w
 10884  09F7  3DB7               	addwfc	??_calc_expect_vout_adc_value+3,f
 10885  09F8  0837               	movf	??_calc_expect_vout_adc_value+3,w
 10886  09F9  00C5               	movwf	calc_expect_vout_adc_value@t32+3
 10887  09FA  0836               	movf	??_calc_expect_vout_adc_value+2,w
 10888  09FB  00C4               	movwf	calc_expect_vout_adc_value@t32+2
 10889  09FC  0835               	movf	??_calc_expect_vout_adc_value+1,w
 10890  09FD  00C3               	movwf	calc_expect_vout_adc_value@t32+1
 10891  09FE  0834               	movf	??_calc_expect_vout_adc_value,w
 10892  09FF  00C2               	movwf	calc_expect_vout_adc_value@t32
 10893                           
 10894                           ;sample.c: 481: t32=t32*(y1-y0);
 10895  0A00  0021               	movlb	1	; select bank1
 10896  0A01  0840               	movf	_y1^(0+128),w
 10897  0A02  0020               	movlb	0	; select bank0
 10898  0A03  00B4               	movwf	??_calc_expect_vout_adc_value
 10899  0A04  0021               	movlb	1	; select bank1
 10900  0A05  0841               	movf	(_y1+1)^(0+128),w
 10901  0A06  0020               	movlb	0	; select bank0
 10902  0A07  00B5               	movwf	??_calc_expect_vout_adc_value+1
 10903  0A08  0021               	movlb	1	; select bank1
 10904  0A09  0842               	movf	(_y1+2)^(0+128),w
 10905  0A0A  0020               	movlb	0	; select bank0
 10906  0A0B  00B6               	movwf	??_calc_expect_vout_adc_value+2
 10907  0A0C  0021               	movlb	1	; select bank1
 10908  0A0D  0843               	movf	(_y1+3)^(0+128),w
 10909  0A0E  0020               	movlb	0	; select bank0
 10910  0A0F  00B7               	movwf	??_calc_expect_vout_adc_value+3
 10911  0A10  094F               	comf	_y0,w
 10912  0A11  00B8               	movwf	??_calc_expect_vout_adc_value+4
 10913  0A12  0950               	comf	_y0+1,w
 10914  0A13  00B9               	movwf	??_calc_expect_vout_adc_value+5
 10915  0A14  0951               	comf	_y0+2,w
 10916  0A15  00BA               	movwf	??_calc_expect_vout_adc_value+6
 10917  0A16  0952               	comf	_y0+3,w
 10918  0A17  00BB               	movwf	??_calc_expect_vout_adc_value+7
 10919  0A18  0AB8               	incf	??_calc_expect_vout_adc_value+4,f
 10920  0A19  1903               	skipnz
 10921  0A1A  0AB9               	incf	??_calc_expect_vout_adc_value+5,f
 10922  0A1B  1903               	skipnz
 10923  0A1C  0ABA               	incf	??_calc_expect_vout_adc_value+6,f
 10924  0A1D  1903               	skipnz
 10925  0A1E  0ABB               	incf	??_calc_expect_vout_adc_value+7,f
 10926  0A1F  0838               	movf	??_calc_expect_vout_adc_value+4,w
 10927  0A20  07B4               	addwf	??_calc_expect_vout_adc_value,f
 10928  0A21  0839               	movf	??_calc_expect_vout_adc_value+5,w
 10929  0A22  3DB5               	addwfc	??_calc_expect_vout_adc_value+1,f
 10930  0A23  083A               	movf	??_calc_expect_vout_adc_value+6,w
 10931  0A24  3DB6               	addwfc	??_calc_expect_vout_adc_value+2,f
 10932  0A25  083B               	movf	??_calc_expect_vout_adc_value+7,w
 10933  0A26  3DB7               	addwfc	??_calc_expect_vout_adc_value+3,f
 10934  0A27  0837               	movf	??_calc_expect_vout_adc_value+3,w
 10935  0A28  00F4               	movwf	___lmul@multiplier+3
 10936  0A29  0836               	movf	??_calc_expect_vout_adc_value+2,w
 10937  0A2A  00F3               	movwf	___lmul@multiplier+2
 10938  0A2B  0835               	movf	??_calc_expect_vout_adc_value+1,w
 10939  0A2C  00F2               	movwf	___lmul@multiplier+1
 10940  0A2D  0834               	movf	??_calc_expect_vout_adc_value,w
 10941  0A2E  00F1               	movwf	___lmul@multiplier
 10942  0A2F  0845               	movf	calc_expect_vout_adc_value@t32+3,w
 10943  0A30  00F8               	movwf	___lmul@multiplicand+3
 10944  0A31  0844               	movf	calc_expect_vout_adc_value@t32+2,w
 10945  0A32  00F7               	movwf	___lmul@multiplicand+2
 10946  0A33  0843               	movf	calc_expect_vout_adc_value@t32+1,w
 10947  0A34  00F6               	movwf	___lmul@multiplicand+1
 10948  0A35  0842               	movf	calc_expect_vout_adc_value@t32,w
 10949  0A36  00F5               	movwf	___lmul@multiplicand
 10950  0A37  319E  26CE  3188   	fcall	___lmul
 10951  0A3A  0874               	movf	?___lmul+3,w
 10952  0A3B  0020               	movlb	0	; select bank0
 10953  0A3C  00C5               	movwf	calc_expect_vout_adc_value@t32+3
 10954  0A3D  0873               	movf	?___lmul+2,w
 10955  0A3E  00C4               	movwf	calc_expect_vout_adc_value@t32+2
 10956  0A3F  0872               	movf	?___lmul+1,w
 10957  0A40  00C3               	movwf	calc_expect_vout_adc_value@t32+1
 10958  0A41  0871               	movf	?___lmul,w
 10959  0A42  00C2               	movwf	calc_expect_vout_adc_value@t32
 10960                           
 10961                           ;sample.c: 482: t32=t32/(x1-x0);
 10962  0A43  0021               	movlb	1	; select bank1
 10963  0A44  083C               	movf	_x1^(0+128),w
 10964  0A45  0020               	movlb	0	; select bank0
 10965  0A46  00B4               	movwf	??_calc_expect_vout_adc_value
 10966  0A47  0021               	movlb	1	; select bank1
 10967  0A48  083D               	movf	(_x1+1)^(0+128),w
 10968  0A49  0020               	movlb	0	; select bank0
 10969  0A4A  00B5               	movwf	??_calc_expect_vout_adc_value+1
 10970  0A4B  0021               	movlb	1	; select bank1
 10971  0A4C  083E               	movf	(_x1+2)^(0+128),w
 10972  0A4D  0020               	movlb	0	; select bank0
 10973  0A4E  00B6               	movwf	??_calc_expect_vout_adc_value+2
 10974  0A4F  0021               	movlb	1	; select bank1
 10975  0A50  083F               	movf	(_x1+3)^(0+128),w
 10976  0A51  0020               	movlb	0	; select bank0
 10977  0A52  00B7               	movwf	??_calc_expect_vout_adc_value+3
 10978  0A53  094B               	comf	_x0,w
 10979  0A54  00B8               	movwf	??_calc_expect_vout_adc_value+4
 10980  0A55  094C               	comf	_x0+1,w
 10981  0A56  00B9               	movwf	??_calc_expect_vout_adc_value+5
 10982  0A57  094D               	comf	_x0+2,w
 10983  0A58  00BA               	movwf	??_calc_expect_vout_adc_value+6
 10984  0A59  094E               	comf	_x0+3,w
 10985  0A5A  00BB               	movwf	??_calc_expect_vout_adc_value+7
 10986  0A5B  0AB8               	incf	??_calc_expect_vout_adc_value+4,f
 10987  0A5C  1903               	skipnz
 10988  0A5D  0AB9               	incf	??_calc_expect_vout_adc_value+5,f
 10989  0A5E  1903               	skipnz
 10990  0A5F  0ABA               	incf	??_calc_expect_vout_adc_value+6,f
 10991  0A60  1903               	skipnz
 10992  0A61  0ABB               	incf	??_calc_expect_vout_adc_value+7,f
 10993  0A62  0838               	movf	??_calc_expect_vout_adc_value+4,w
 10994  0A63  07B4               	addwf	??_calc_expect_vout_adc_value,f
 10995  0A64  0839               	movf	??_calc_expect_vout_adc_value+5,w
 10996  0A65  3DB5               	addwfc	??_calc_expect_vout_adc_value+1,f
 10997  0A66  083A               	movf	??_calc_expect_vout_adc_value+6,w
 10998  0A67  3DB6               	addwfc	??_calc_expect_vout_adc_value+2,f
 10999  0A68  083B               	movf	??_calc_expect_vout_adc_value+7,w
 11000  0A69  3DB7               	addwfc	??_calc_expect_vout_adc_value+3,f
 11001  0A6A  0837               	movf	??_calc_expect_vout_adc_value+3,w
 11002  0A6B  00A7               	movwf	___aldiv@divisor+3
 11003  0A6C  0836               	movf	??_calc_expect_vout_adc_value+2,w
 11004  0A6D  00A6               	movwf	___aldiv@divisor+2
 11005  0A6E  0835               	movf	??_calc_expect_vout_adc_value+1,w
 11006  0A6F  00A5               	movwf	___aldiv@divisor+1
 11007  0A70  0834               	movf	??_calc_expect_vout_adc_value,w
 11008  0A71  00A4               	movwf	___aldiv@divisor
 11009  0A72  0845               	movf	calc_expect_vout_adc_value@t32+3,w
 11010  0A73  00AB               	movwf	___aldiv@dividend+3
 11011  0A74  0844               	movf	calc_expect_vout_adc_value@t32+2,w
 11012  0A75  00AA               	movwf	___aldiv@dividend+2
 11013  0A76  0843               	movf	calc_expect_vout_adc_value@t32+1,w
 11014  0A77  00A9               	movwf	___aldiv@dividend+1
 11015  0A78  0842               	movf	calc_expect_vout_adc_value@t32,w
 11016  0A79  00A8               	movwf	___aldiv@dividend
 11017  0A7A  318F  277C  3188   	fcall	___aldiv
 11018  0A7D  0020               	movlb	0	; select bank0
 11019  0A7E  0827               	movf	?___aldiv+3,w
 11020  0A7F  00C5               	movwf	calc_expect_vout_adc_value@t32+3
 11021  0A80  0826               	movf	?___aldiv+2,w
 11022  0A81  00C4               	movwf	calc_expect_vout_adc_value@t32+2
 11023  0A82  0825               	movf	?___aldiv+1,w
 11024  0A83  00C3               	movwf	calc_expect_vout_adc_value@t32+1
 11025  0A84  0824               	movf	?___aldiv,w
 11026  0A85  00C2               	movwf	calc_expect_vout_adc_value@t32
 11027                           
 11028                           ;sample.c: 483: t32=t32+y0;
 11029  0A86  0842               	movf	calc_expect_vout_adc_value@t32,w
 11030  0A87  074F               	addwf	_y0,w
 11031  0A88  00B4               	movwf	??_calc_expect_vout_adc_value
 11032  0A89  0843               	movf	calc_expect_vout_adc_value@t32+1,w
 11033  0A8A  3D50               	addwfc	_y0+1,w
 11034  0A8B  00B5               	movwf	??_calc_expect_vout_adc_value+1
 11035  0A8C  0844               	movf	calc_expect_vout_adc_value@t32+2,w
 11036  0A8D  3D51               	addwfc	_y0+2,w
 11037  0A8E  00B6               	movwf	??_calc_expect_vout_adc_value+2
 11038  0A8F  0845               	movf	calc_expect_vout_adc_value@t32+3,w
 11039  0A90  3D52               	addwfc	_y0+3,w
 11040  0A91  00B7               	movwf	??_calc_expect_vout_adc_value+3
 11041  0A92  0837               	movf	??_calc_expect_vout_adc_value+3,w
 11042  0A93  00C5               	movwf	calc_expect_vout_adc_value@t32+3
 11043  0A94  0836               	movf	??_calc_expect_vout_adc_value+2,w
 11044  0A95  00C4               	movwf	calc_expect_vout_adc_value@t32+2
 11045  0A96  0835               	movf	??_calc_expect_vout_adc_value+1,w
 11046  0A97  00C3               	movwf	calc_expect_vout_adc_value@t32+1
 11047  0A98  0834               	movf	??_calc_expect_vout_adc_value,w
 11048  0A99  00C2               	movwf	calc_expect_vout_adc_value@t32
 11049                           
 11050                           ;sample.c: 484: if(t32<0)t32=0;
 11051  0A9A  1FC5               	btfss	calc_expect_vout_adc_value@t32+3,7
 11052  0A9B  2AA4               	goto	l665
 11053  0A9C  3000               	movlw	0
 11054  0A9D  00C5               	movwf	calc_expect_vout_adc_value@t32+3
 11055  0A9E  3000               	movlw	0
 11056  0A9F  00C4               	movwf	calc_expect_vout_adc_value@t32+2
 11057  0AA0  3000               	movlw	0
 11058  0AA1  00C3               	movwf	calc_expect_vout_adc_value@t32+1
 11059  0AA2  3000               	movlw	0
 11060  0AA3  00C2               	movwf	calc_expect_vout_adc_value@t32
 11061  0AA4                     l665:	
 11062                           
 11063                           ;sample.c: 485: return (uint16_t)t32;
 11064  0AA4  0843               	movf	calc_expect_vout_adc_value@t32+1,w
 11065  0AA5  00B3               	movwf	?_calc_expect_vout_adc_value+1
 11066  0AA6  0842               	movf	calc_expect_vout_adc_value@t32,w
 11067  0AA7  00B2               	movwf	?_calc_expect_vout_adc_value
 11068  0AA8  0008               	return
 11069  0AA9                     __end_of_calc_expect_vout_adc_value:	
 11070                           
 11071                           	psect	text33
 11072  1ECE                     __ptext33:	
 11073 ;; *************** function ___lmul *****************
 11074 ;; Defined at:
 11075 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 11076 ;; Parameters:    Size  Location     Type
 11077 ;;  multiplier      4    1[COMMON] unsigned long 
 11078 ;;  multiplicand    4    5[COMMON] unsigned long 
 11079 ;; Auto vars:     Size  Location     Type
 11080 ;;  product         4    0[BANK0 ] unsigned long 
 11081 ;; Return value:  Size  Location     Type
 11082 ;;                  4    1[COMMON] unsigned long 
 11083 ;; Registers used:
 11084 ;;		wreg, status,2, status,0
 11085 ;; Tracked objects:
 11086 ;;		On entry : 0/0
 11087 ;;		On exit  : 0/0
 11088 ;;		Unchanged: 0/0
 11089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11090 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11091 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11093 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11094 ;;Total ram usage:       12 bytes
 11095 ;; Hardware stack levels used:    1
 11096 ;; Hardware stack levels required when called:    1
 11097 ;; This function calls:
 11098 ;;		Nothing
 11099 ;; This function is called by:
 11100 ;;		_calc_temp_rs
 11101 ;;		_calc_temp_rc
 11102 ;;		_pid_pwm1_idrv_run
 11103 ;;		_calc_expect_vout_adc_value
 11104 ;;		_cal_rs_simulate_power
 11105 ;;		_m_math_pow
 11106 ;; This function uses a non-reentrant model
 11107 ;;
 11108                           
 11109                           
 11110                           ;psect for function ___lmul
 11111  1ECE                     ___lmul:	
 11112                           
 11113                           ;incstack = 0
 11114                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 11115  1ECE  3000               	movlw	0
 11116  1ECF  0020               	movlb	0	; select bank0
 11117  1ED0  00A3               	movwf	___lmul@product+3
 11118  1ED1  3000               	movlw	0
 11119  1ED2  00A2               	movwf	___lmul@product+2
 11120  1ED3  3000               	movlw	0
 11121  1ED4  00A1               	movwf	___lmul@product+1
 11122  1ED5  3000               	movlw	0
 11123  1ED6  00A0               	movwf	___lmul@product
 11124  1ED7                     l4825:	
 11125  1ED7  1C71               	btfss	___lmul@multiplier,0
 11126  1ED8  2EE2               	goto	l4829
 11127  1ED9  0875               	movf	___lmul@multiplicand,w
 11128  1EDA  0020               	movlb	0	; select bank0
 11129  1EDB  07A0               	addwf	___lmul@product,f
 11130  1EDC  0876               	movf	___lmul@multiplicand+1,w
 11131  1EDD  3DA1               	addwfc	___lmul@product+1,f
 11132  1EDE  0877               	movf	___lmul@multiplicand+2,w
 11133  1EDF  3DA2               	addwfc	___lmul@product+2,f
 11134  1EE0  0878               	movf	___lmul@multiplicand+3,w
 11135  1EE1  3DA3               	addwfc	___lmul@product+3,f
 11136  1EE2                     l4829:	
 11137  1EE2  3001               	movlw	1
 11138  1EE3                     u4165:	
 11139  1EE3  35F5               	lslf	___lmul@multiplicand,f
 11140  1EE4  0DF6               	rlf	___lmul@multiplicand+1,f
 11141  1EE5  0DF7               	rlf	___lmul@multiplicand+2,f
 11142  1EE6  0DF8               	rlf	___lmul@multiplicand+3,f
 11143  1EE7  0B89               	decfsz	9,f
 11144  1EE8  2EE3               	goto	u4165
 11145  1EE9  3001               	movlw	1
 11146  1EEA                     u4175:	
 11147  1EEA  36F4               	lsrf	___lmul@multiplier+3,f
 11148  1EEB  0CF3               	rrf	___lmul@multiplier+2,f
 11149  1EEC  0CF2               	rrf	___lmul@multiplier+1,f
 11150  1EED  0CF1               	rrf	___lmul@multiplier,f
 11151  1EEE  0B89               	decfsz	9,f
 11152  1EEF  2EEA               	goto	u4175
 11153  1EF0  0874               	movf	___lmul@multiplier+3,w
 11154  1EF1  0473               	iorwf	___lmul@multiplier+2,w
 11155  1EF2  0472               	iorwf	___lmul@multiplier+1,w
 11156  1EF3  0471               	iorwf	___lmul@multiplier,w
 11157  1EF4  1D03               	skipz
 11158  1EF5  2ED7               	goto	l4825
 11159  1EF6  0020               	movlb	0	; select bank0
 11160  1EF7  0823               	movf	___lmul@product+3,w
 11161  1EF8  00F4               	movwf	?___lmul+3
 11162  1EF9  0822               	movf	___lmul@product+2,w
 11163  1EFA  00F3               	movwf	?___lmul+2
 11164  1EFB  0821               	movf	___lmul@product+1,w
 11165  1EFC  00F2               	movwf	?___lmul+1
 11166  1EFD  0820               	movf	___lmul@product,w
 11167  1EFE  00F1               	movwf	?___lmul
 11168  1EFF  0008               	return
 11169  1F00                     __end_of___lmul:	
 11170                           
 11171                           	psect	text34
 11172  0F7C                     __ptext34:	
 11173 ;; *************** function ___aldiv *****************
 11174 ;; Defined at:
 11175 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 11176 ;; Parameters:    Size  Location     Type
 11177 ;;  divisor         4    4[BANK0 ] long 
 11178 ;;  dividend        4    8[BANK0 ] long 
 11179 ;; Auto vars:     Size  Location     Type
 11180 ;;  quotient        4   14[BANK0 ] long 
 11181 ;;  sign            1   13[BANK0 ] unsigned char 
 11182 ;;  counter         1   12[BANK0 ] unsigned char 
 11183 ;; Return value:  Size  Location     Type
 11184 ;;                  4    4[BANK0 ] long 
 11185 ;; Registers used:
 11186 ;;		wreg, status,2, status,0
 11187 ;; Tracked objects:
 11188 ;;		On entry : 0/0
 11189 ;;		On exit  : 0/0
 11190 ;;		Unchanged: 0/0
 11191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11192 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11193 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11194 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11195 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11196 ;;Total ram usage:       15 bytes
 11197 ;; Hardware stack levels used:    1
 11198 ;; Hardware stack levels required when called:    1
 11199 ;; This function calls:
 11200 ;;		Nothing
 11201 ;; This function is called by:
 11202 ;;		_pid_pwm1_idrv_run
 11203 ;;		_calc_expect_vout_adc_value
 11204 ;;		_m_int_2_str
 11205 ;;		_m_int_2_str_ex
 11206 ;; This function uses a non-reentrant model
 11207 ;;
 11208                           
 11209                           
 11210                           ;psect for function ___aldiv
 11211  0F7C                     ___aldiv:	
 11212                           
 11213                           ;incstack = 0
 11214                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 11215  0F7C  0020               	movlb	0	; select bank0
 11216  0F7D  01AD               	clrf	___aldiv@sign
 11217  0F7E  1FA7               	btfss	___aldiv@divisor+3,7
 11218  0F7F  2F8D               	goto	l1133
 11219  0F80  09A4               	comf	___aldiv@divisor,f
 11220  0F81  09A5               	comf	___aldiv@divisor+1,f
 11221  0F82  09A6               	comf	___aldiv@divisor+2,f
 11222  0F83  09A7               	comf	___aldiv@divisor+3,f
 11223  0F84  0AA4               	incf	___aldiv@divisor,f
 11224  0F85  1903               	skipnz
 11225  0F86  0AA5               	incf	___aldiv@divisor+1,f
 11226  0F87  1903               	skipnz
 11227  0F88  0AA6               	incf	___aldiv@divisor+2,f
 11228  0F89  1903               	skipnz
 11229  0F8A  0AA7               	incf	___aldiv@divisor+3,f
 11230  0F8B  01AD               	clrf	___aldiv@sign
 11231  0F8C  0AAD               	incf	___aldiv@sign,f
 11232  0F8D                     l1133:	
 11233  0F8D  1FAB               	btfss	___aldiv@dividend+3,7
 11234  0F8E  2F9E               	goto	l4847
 11235  0F8F  09A8               	comf	___aldiv@dividend,f
 11236  0F90  09A9               	comf	___aldiv@dividend+1,f
 11237  0F91  09AA               	comf	___aldiv@dividend+2,f
 11238  0F92  09AB               	comf	___aldiv@dividend+3,f
 11239  0F93  0AA8               	incf	___aldiv@dividend,f
 11240  0F94  1903               	skipnz
 11241  0F95  0AA9               	incf	___aldiv@dividend+1,f
 11242  0F96  1903               	skipnz
 11243  0F97  0AAA               	incf	___aldiv@dividend+2,f
 11244  0F98  1903               	skipnz
 11245  0F99  0AAB               	incf	___aldiv@dividend+3,f
 11246  0F9A  3001               	movlw	1
 11247  0F9B  00F9               	movwf	??___aldiv
 11248  0F9C  0879               	movf	??___aldiv,w
 11249  0F9D  06AD               	xorwf	___aldiv@sign,f
 11250  0F9E                     l4847:	
 11251  0F9E  3000               	movlw	0
 11252  0F9F  00B1               	movwf	___aldiv@quotient+3
 11253  0FA0  3000               	movlw	0
 11254  0FA1  00B0               	movwf	___aldiv@quotient+2
 11255  0FA2  3000               	movlw	0
 11256  0FA3  00AF               	movwf	___aldiv@quotient+1
 11257  0FA4  3000               	movlw	0
 11258  0FA5  00AE               	movwf	___aldiv@quotient
 11259  0FA6  0827               	movf	___aldiv@divisor+3,w
 11260  0FA7  0426               	iorwf	___aldiv@divisor+2,w
 11261  0FA8  0425               	iorwf	___aldiv@divisor+1,w
 11262  0FA9  0424               	iorwf	___aldiv@divisor,w
 11263  0FAA  1903               	skipnz
 11264  0FAB  2FE7               	goto	l4869
 11265  0FAC  01AC               	clrf	___aldiv@counter
 11266  0FAD  0AAC               	incf	___aldiv@counter,f
 11267  0FAE                     l4855:	
 11268  0FAE  1BA7               	btfsc	___aldiv@divisor+3,7
 11269  0FAF  2FBC               	goto	l4857
 11270  0FB0  3001               	movlw	1
 11271  0FB1                     u4225:	
 11272  0FB1  35A4               	lslf	___aldiv@divisor,f
 11273  0FB2  0DA5               	rlf	___aldiv@divisor+1,f
 11274  0FB3  0DA6               	rlf	___aldiv@divisor+2,f
 11275  0FB4  0DA7               	rlf	___aldiv@divisor+3,f
 11276  0FB5  0B89               	decfsz	9,f
 11277  0FB6  2FB1               	goto	u4225
 11278  0FB7  3001               	movlw	1
 11279  0FB8  00F9               	movwf	??___aldiv
 11280  0FB9  0879               	movf	??___aldiv,w
 11281  0FBA  07AC               	addwf	___aldiv@counter,f
 11282  0FBB  2FAE               	goto	l4855
 11283  0FBC                     l4857:	
 11284  0FBC  3001               	movlw	1
 11285  0FBD                     u4245:	
 11286  0FBD  35AE               	lslf	___aldiv@quotient,f
 11287  0FBE  0DAF               	rlf	___aldiv@quotient+1,f
 11288  0FBF  0DB0               	rlf	___aldiv@quotient+2,f
 11289  0FC0  0DB1               	rlf	___aldiv@quotient+3,f
 11290  0FC1  0B89               	decfsz	9,f
 11291  0FC2  2FBD               	goto	u4245
 11292  0FC3  0827               	movf	___aldiv@divisor+3,w
 11293  0FC4  022B               	subwf	___aldiv@dividend+3,w
 11294  0FC5  1D03               	skipz
 11295  0FC6  2FD1               	goto	u4255
 11296  0FC7  0826               	movf	___aldiv@divisor+2,w
 11297  0FC8  022A               	subwf	___aldiv@dividend+2,w
 11298  0FC9  1D03               	skipz
 11299  0FCA  2FD1               	goto	u4255
 11300  0FCB  0825               	movf	___aldiv@divisor+1,w
 11301  0FCC  0229               	subwf	___aldiv@dividend+1,w
 11302  0FCD  1D03               	skipz
 11303  0FCE  2FD1               	goto	u4255
 11304  0FCF  0824               	movf	___aldiv@divisor,w
 11305  0FD0  0228               	subwf	___aldiv@dividend,w
 11306  0FD1                     u4255:	
 11307  0FD1  1C03               	skipc
 11308  0FD2  2FDC               	goto	l4865
 11309  0FD3  0824               	movf	___aldiv@divisor,w
 11310  0FD4  02A8               	subwf	___aldiv@dividend,f
 11311  0FD5  0825               	movf	___aldiv@divisor+1,w
 11312  0FD6  3BA9               	subwfb	___aldiv@dividend+1,f
 11313  0FD7  0826               	movf	___aldiv@divisor+2,w
 11314  0FD8  3BAA               	subwfb	___aldiv@dividend+2,f
 11315  0FD9  0827               	movf	___aldiv@divisor+3,w
 11316  0FDA  3BAB               	subwfb	___aldiv@dividend+3,f
 11317  0FDB  142E               	bsf	___aldiv@quotient,0
 11318  0FDC                     l4865:	
 11319  0FDC  3001               	movlw	1
 11320  0FDD                     u4265:	
 11321  0FDD  36A7               	lsrf	___aldiv@divisor+3,f
 11322  0FDE  0CA6               	rrf	___aldiv@divisor+2,f
 11323  0FDF  0CA5               	rrf	___aldiv@divisor+1,f
 11324  0FE0  0CA4               	rrf	___aldiv@divisor,f
 11325  0FE1  0B89               	decfsz	9,f
 11326  0FE2  2FDD               	goto	u4265
 11327  0FE3  3001               	movlw	1
 11328  0FE4  02AC               	subwf	___aldiv@counter,f
 11329  0FE5  1D03               	btfss	3,2
 11330  0FE6  2FBC               	goto	l4857
 11331  0FE7                     l4869:	
 11332  0FE7  082D               	movf	___aldiv@sign,w
 11333  0FE8  1903               	btfsc	3,2
 11334  0FE9  2FF5               	goto	l4873
 11335  0FEA  09AE               	comf	___aldiv@quotient,f
 11336  0FEB  09AF               	comf	___aldiv@quotient+1,f
 11337  0FEC  09B0               	comf	___aldiv@quotient+2,f
 11338  0FED  09B1               	comf	___aldiv@quotient+3,f
 11339  0FEE  0AAE               	incf	___aldiv@quotient,f
 11340  0FEF  1903               	skipnz
 11341  0FF0  0AAF               	incf	___aldiv@quotient+1,f
 11342  0FF1  1903               	skipnz
 11343  0FF2  0AB0               	incf	___aldiv@quotient+2,f
 11344  0FF3  1903               	skipnz
 11345  0FF4  0AB1               	incf	___aldiv@quotient+3,f
 11346  0FF5                     l4873:	
 11347  0FF5  0831               	movf	___aldiv@quotient+3,w
 11348  0FF6  00A7               	movwf	?___aldiv+3
 11349  0FF7  0830               	movf	___aldiv@quotient+2,w
 11350  0FF8  00A6               	movwf	?___aldiv+2
 11351  0FF9  082F               	movf	___aldiv@quotient+1,w
 11352  0FFA  00A5               	movwf	?___aldiv+1
 11353  0FFB  082E               	movf	___aldiv@quotient,w
 11354  0FFC  00A4               	movwf	?___aldiv
 11355  0FFD  0008               	return
 11356  0FFE                     __end_of___aldiv:	
 11357                           
 11358                           	psect	text35
 11359  12D1                     __ptext35:	
 11360 ;; *************** function _adc_sample *****************
 11361 ;; Defined at:
 11362 ;;		line 187 in file "src/api/sample.c"
 11363 ;; Parameters:    Size  Location     Type
 11364 ;;  ch              1    wreg     unsigned char 
 11365 ;;  gfvr            1    4[COMMON] unsigned char 
 11366 ;;  num             1    5[COMMON] unsigned char 
 11367 ;; Auto vars:     Size  Location     Type
 11368 ;;  ch              1    0[BANK0 ] unsigned char 
 11369 ;;  t16             2    5[BANK0 ] unsigned int 
 11370 ;;  ret             2    3[BANK0 ] unsigned int 
 11371 ;;  i               2    1[BANK0 ] unsigned int 
 11372 ;; Return value:  Size  Location     Type
 11373 ;;                  2    4[COMMON] unsigned int 
 11374 ;; Registers used:
 11375 ;;		wreg, status,2, status,0, pclath, cstack
 11376 ;; Tracked objects:
 11377 ;;		On entry : 0/0
 11378 ;;		On exit  : 0/0
 11379 ;;		Unchanged: 0/0
 11380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11382 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11383 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11384 ;;      Totals:         5       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11385 ;;Total ram usage:       12 bytes
 11386 ;; Hardware stack levels used:    1
 11387 ;; Hardware stack levels required when called:    2
 11388 ;; This function calls:
 11389 ;;		_adc_init
 11390 ;;		_fvr_set_gain
 11391 ;; This function is called by:
 11392 ;;		_main
 11393 ;; This function uses a non-reentrant model
 11394 ;;
 11395                           
 11396                           
 11397                           ;psect for function _adc_sample
 11398  12D1                     _adc_sample:	
 11399                           
 11400                           ;incstack = 0
 11401                           ; Regs used in _adc_sample: [wreg+status,2+status,0+pclath+cstack]
 11402                           ;adc_sample@ch stored from wreg
 11403  12D1  0020               	movlb	0	; select bank0
 11404  12D2  00A0               	movwf	adc_sample@ch
 11405                           
 11406                           ;sample.c: 189: uint16_t i;;sample.c: 190: uint16_t ret=0;
 11407  12D3  01A3               	clrf	adc_sample@ret
 11408  12D4  01A4               	clrf	adc_sample@ret+1
 11409                           
 11410                           ;sample.c: 191: uint16_t t16=0;
 11411  12D5  01A5               	clrf	adc_sample@t16
 11412  12D6  01A6               	clrf	adc_sample@t16+1
 11413                           
 11414                           ;sample.c: 193: fvr_set_gain(gfvr);
 11415  12D7  0874               	movf	adc_sample@gfvr,w
 11416  12D8  319D  2558  3192   	fcall	_fvr_set_gain
 11417                           
 11418                           ;sample.c: 194: adc_init((adc_channel_t)ch);
 11419  12DB  0020               	movlb	0	; select bank0
 11420  12DC  0820               	movf	adc_sample@ch,w
 11421  12DD  319D  2544  3192   	fcall	_adc_init
 11422                           
 11423                           ;sample.c: 195: _delay((unsigned long)((50)*(16000000/4000000.0)));
 11424  12E0  3042               	movlw	66
 11425  12E1                     u4767:	
 11426  12E1  0B89               	decfsz	9,f
 11427  12E2  2AE1               	goto	u4767
 11428  12E3  3200               	nop2
 11429                           
 11430                           ;sample.c: 196: ADCON0bits.GO_nDONE = 1;
 11431  12E4  0021               	movlb	1	; select bank1
 11432  12E5  149D               	bsf	29,1	;volatile
 11433  12E6                     l615:	
 11434                           ;sample.c: 197: while (ADCON0bits.GO_nDONE);
 11435                           
 11436  12E6  189D               	btfsc	29,1	;volatile
 11437  12E7  2AE6               	goto	l615
 11438                           
 11439                           ;sample.c: 198: if(num>64)num=64;
 11440  12E8  3041               	movlw	65
 11441  12E9  0275               	subwf	adc_sample@num,w
 11442  12EA  1C03               	skipc
 11443  12EB  2AF0               	goto	l4043
 11444  12EC  3040               	movlw	64
 11445  12ED  00F6               	movwf	??_adc_sample
 11446  12EE  0876               	movf	??_adc_sample,w
 11447  12EF  00F5               	movwf	adc_sample@num
 11448  12F0                     l4043:	
 11449                           
 11450                           ;sample.c: 199: for(i=0;i<num;i++){
 11451  12F0  0020               	movlb	0	; select bank0
 11452  12F1  01A1               	clrf	adc_sample@i
 11453  12F2  01A2               	clrf	adc_sample@i+1
 11454  12F3                     l4053:	
 11455  12F3  0875               	movf	adc_sample@num,w
 11456  12F4  00F6               	movwf	??_adc_sample
 11457  12F5  01F7               	clrf	??_adc_sample+1
 11458  12F6  0877               	movf	??_adc_sample+1,w
 11459  12F7  0222               	subwf	adc_sample@i+1,w
 11460  12F8  1D03               	skipz
 11461  12F9  2AFC               	goto	u3105
 11462  12FA  0876               	movf	??_adc_sample,w
 11463  12FB  0221               	subwf	adc_sample@i,w
 11464  12FC                     u3105:	
 11465  12FC  1803               	btfsc	3,0
 11466  12FD  2B29               	goto	l4055
 11467                           
 11468                           ;sample.c: 200: ADCON0bits.GO_nDONE = 1;
 11469  12FE  0021               	movlb	1	; select bank1
 11470  12FF  149D               	bsf	29,1	;volatile
 11471  1300                     l621:	
 11472                           ;sample.c: 201: while (ADCON0bits.GO_nDONE);
 11473                           
 11474  1300  189D               	btfsc	29,1	;volatile
 11475  1301  2B00               	goto	l621
 11476                           
 11477                           ;sample.c: 202: __nop();
 11478  1302  0000               	nop
 11479                           
 11480                           ;sample.c: 203: t16=ADRESH;
 11481  1303  0021               	movlb	1	; select bank1
 11482  1304  081C               	movf	28,w	;volatile
 11483  1305  00F6               	movwf	??_adc_sample
 11484  1306  01F7               	clrf	??_adc_sample+1
 11485  1307  0876               	movf	??_adc_sample,w
 11486  1308  0020               	movlb	0	; select bank0
 11487  1309  00A5               	movwf	adc_sample@t16
 11488  130A  0877               	movf	??_adc_sample+1,w
 11489  130B  00A6               	movwf	adc_sample@t16+1
 11490                           
 11491                           ;sample.c: 204: t16<<=2;
 11492  130C  3002               	movlw	2
 11493  130D                     u3085:	
 11494  130D  35A5               	lslf	adc_sample@t16,f
 11495  130E  0DA6               	rlf	adc_sample@t16+1,f
 11496  130F  0B89               	decfsz	9,f
 11497  1310  2B0D               	goto	u3085
 11498                           
 11499                           ;sample.c: 205: t16|=(uint16_t)(ADRESL>>6);
 11500  1311  0021               	movlb	1	; select bank1
 11501  1312  081B               	movf	27,w	;volatile
 11502  1313  00F6               	movwf	??_adc_sample
 11503  1314  3006               	movlw	6
 11504  1315                     u3095:	
 11505  1315  36F6               	lsrf	??_adc_sample,f
 11506  1316  0B89               	decfsz	9,f
 11507  1317  2B15               	goto	u3095
 11508  1318  0876               	movf	??_adc_sample,w
 11509  1319  00F7               	movwf	??_adc_sample+1
 11510  131A  01F8               	clrf	??_adc_sample+2
 11511  131B  0877               	movf	??_adc_sample+1,w
 11512  131C  0020               	movlb	0	; select bank0
 11513  131D  04A5               	iorwf	adc_sample@t16,f
 11514  131E  0878               	movf	??_adc_sample+2,w
 11515  131F  04A6               	iorwf	adc_sample@t16+1,f
 11516                           
 11517                           ;sample.c: 207: ret+=t16;
 11518  1320  0825               	movf	adc_sample@t16,w
 11519  1321  07A3               	addwf	adc_sample@ret,f
 11520  1322  0826               	movf	adc_sample@t16+1,w
 11521  1323  3DA4               	addwfc	adc_sample@ret+1,f
 11522  1324  3001               	movlw	1
 11523  1325  07A1               	addwf	adc_sample@i,f
 11524  1326  3000               	movlw	0
 11525  1327  3DA2               	addwfc	adc_sample@i+1,f
 11526  1328  2AF3               	goto	l4053
 11527  1329                     l4055:	
 11528                           
 11529                           ;sample.c: 212: return ret;
 11530  1329  0824               	movf	adc_sample@ret+1,w
 11531  132A  00F5               	movwf	?_adc_sample+1
 11532  132B  0823               	movf	adc_sample@ret,w
 11533  132C  00F4               	movwf	?_adc_sample
 11534  132D  0008               	return
 11535  132E                     __end_of_adc_sample:	
 11536                           
 11537                           	psect	text36
 11538  1D58                     __ptext36:	
 11539 ;; *************** function _fvr_set_gain *****************
 11540 ;; Defined at:
 11541 ;;		line 134 in file "src/api/sample.c"
 11542 ;; Parameters:    Size  Location     Type
 11543 ;;  g               1    wreg     unsigned char 
 11544 ;; Auto vars:     Size  Location     Type
 11545 ;;  g               1    3[COMMON] unsigned char 
 11546 ;;  t8              1    2[COMMON] unsigned char 
 11547 ;; Return value:  Size  Location     Type
 11548 ;;                  1    wreg      void 
 11549 ;; Registers used:
 11550 ;;		wreg, status,2, status,0
 11551 ;; Tracked objects:
 11552 ;;		On entry : 0/0
 11553 ;;		On exit  : 0/0
 11554 ;;		Unchanged: 0/0
 11555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11557 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11558 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11559 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11560 ;;Total ram usage:        3 bytes
 11561 ;; Hardware stack levels used:    1
 11562 ;; Hardware stack levels required when called:    1
 11563 ;; This function calls:
 11564 ;;		Nothing
 11565 ;; This function is called by:
 11566 ;;		_adc_sample
 11567 ;; This function uses a non-reentrant model
 11568 ;;
 11569                           
 11570                           
 11571                           ;psect for function _fvr_set_gain
 11572  1D58                     _fvr_set_gain:	
 11573                           
 11574                           ;incstack = 0
 11575                           ; Regs used in _fvr_set_gain: [wreg+status,2+status,0]
 11576                           ;fvr_set_gain@g stored from wreg
 11577  1D58  00F3               	movwf	fvr_set_gain@g
 11578                           
 11579                           ;sample.c: 136: uint8_t t8=0x80;
 11580  1D59  3080               	movlw	128
 11581  1D5A  00F1               	movwf	??_fvr_set_gain
 11582  1D5B  0871               	movf	??_fvr_set_gain,w
 11583  1D5C  00F2               	movwf	fvr_set_gain@t8
 11584                           
 11585                           ;sample.c: 137: if(g>3)g=3;
 11586  1D5D  3004               	movlw	4
 11587  1D5E  0273               	subwf	fvr_set_gain@g,w
 11588  1D5F  1C03               	skipc
 11589  1D60  2D65               	goto	l3619
 11590  1D61  3003               	movlw	3
 11591  1D62  00F1               	movwf	??_fvr_set_gain
 11592  1D63  0871               	movf	??_fvr_set_gain,w
 11593  1D64  00F3               	movwf	fvr_set_gain@g
 11594  1D65                     l3619:	
 11595                           
 11596                           ;sample.c: 138: t8|=g;
 11597  1D65  0873               	movf	fvr_set_gain@g,w
 11598  1D66  00F1               	movwf	??_fvr_set_gain
 11599  1D67  0871               	movf	??_fvr_set_gain,w
 11600  1D68  04F2               	iorwf	fvr_set_gain@t8,f
 11601                           
 11602                           ;sample.c: 139: FVRCON = t8;
 11603  1D69  0872               	movf	fvr_set_gain@t8,w
 11604  1D6A  0022               	movlb	2	; select bank2
 11605  1D6B  0097               	movwf	23	;volatile
 11606  1D6C                     l603:	
 11607                           ;sample.c: 140: while(!(FVRCONbits.FVRRDY));
 11608                           
 11609  1D6C  1B17               	btfsc	23,6	;volatile
 11610  1D6D  0008               	return
 11611  1D6E  2D6C               	goto	l603
 11612  1D6F                     __end_of_fvr_set_gain:	
 11613                           
 11614                           	psect	text37
 11615  1D44                     __ptext37:	
 11616 ;; *************** function _adc_init *****************
 11617 ;; Defined at:
 11618 ;;		line 143 in file "src/api/sample.c"
 11619 ;; Parameters:    Size  Location     Type
 11620 ;;  ch              1    wreg     enum E4099
 11621 ;; Auto vars:     Size  Location     Type
 11622 ;;  ch              1    2[COMMON] enum E4099
 11623 ;; Return value:  Size  Location     Type
 11624 ;;                  1    wreg      void 
 11625 ;; Registers used:
 11626 ;;		wreg, status,2, status,0
 11627 ;; Tracked objects:
 11628 ;;		On entry : 0/0
 11629 ;;		On exit  : 0/0
 11630 ;;		Unchanged: 0/0
 11631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11633 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11634 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11635 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11636 ;;Total ram usage:        2 bytes
 11637 ;; Hardware stack levels used:    1
 11638 ;; Hardware stack levels required when called:    1
 11639 ;; This function calls:
 11640 ;;		Nothing
 11641 ;; This function is called by:
 11642 ;;		_adc_sample
 11643 ;; This function uses a non-reentrant model
 11644 ;;
 11645                           
 11646                           
 11647                           ;psect for function _adc_init
 11648  1D44                     _adc_init:	
 11649                           
 11650                           ;incstack = 0
 11651                           ; Regs used in _adc_init: [wreg+status,2+status,0]
 11652                           ;adc_init@ch stored from wreg
 11653  1D44  00F2               	movwf	adc_init@ch
 11654  1D45                     l609:	
 11655                           ;sample.c: 145: while (ADCON0bits.GO_nDONE);
 11656                           
 11657  1D45  0021               	movlb	1	; select bank1
 11658  1D46  189D               	btfsc	29,1	;volatile
 11659  1D47  2D45               	goto	l609
 11660                           
 11661                           ;sample.c: 146: ADCON0bits.CHS = ch;
 11662  1D48  0872               	movf	adc_init@ch,w
 11663  1D49  00F1               	movwf	??_adc_init
 11664  1D4A  0DF1               	rlf	??_adc_init,f
 11665  1D4B  0DF1               	rlf	??_adc_init,f
 11666  1D4C  081D               	movf	29,w	;volatile
 11667  1D4D  0671               	xorwf	??_adc_init,w
 11668  1D4E  3983               	andlw	-125
 11669  1D4F  0671               	xorwf	??_adc_init,w
 11670  1D50  009D               	movwf	29	;volatile
 11671                           
 11672                           ;sample.c: 147: ADCON0bits.ADON = 1;
 11673  1D51  141D               	bsf	29,0	;volatile
 11674                           
 11675                           ;sample.c: 148: ADCON1 = 0x63;
 11676  1D52  3063               	movlw	99
 11677  1D53  009E               	movwf	30	;volatile
 11678                           
 11679                           ;sample.c: 149: ADCON2 = 0x00;
 11680  1D54  019F               	clrf	31	;volatile
 11681                           
 11682                           ;sample.c: 150: ADRESL = 0x00;
 11683  1D55  019B               	clrf	27	;volatile
 11684                           
 11685                           ;sample.c: 151: ADRESH = 0x00;
 11686  1D56  019C               	clrf	28	;volatile
 11687  1D57  0008               	return
 11688  1D58                     __end_of_adc_init:	
 11689                           
 11690                           	psect	text38
 11691  1DD3                     __ptext38:	
 11692 ;; *************** function _SYSTEM_Initialize *****************
 11693 ;; Defined at:
 11694 ;;		line 70 in file "mcc_generated_files/mcc.c"
 11695 ;; Parameters:    Size  Location     Type
 11696 ;;		None
 11697 ;; Auto vars:     Size  Location     Type
 11698 ;;		None
 11699 ;; Return value:  Size  Location     Type
 11700 ;;                  1    wreg      void 
 11701 ;; Registers used:
 11702 ;;		wreg, status,2, status,0, pclath, cstack
 11703 ;; Tracked objects:
 11704 ;;		On entry : 0/0
 11705 ;;		On exit  : 0/0
 11706 ;;		Unchanged: 0/0
 11707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11712 ;;Total ram usage:        0 bytes
 11713 ;; Hardware stack levels used:    1
 11714 ;; Hardware stack levels required when called:    3
 11715 ;; This function calls:
 11716 ;;		_ADC1_Initialize
 11717 ;;		_EUSART_Initialize
 11718 ;;		_FVR_Initialize
 11719 ;;		_OSCILLATOR_Initialize
 11720 ;;		_PIN_MANAGER_Initialize
 11721 ;;		_PWM1_Initialize
 11722 ;;		_PWM2_Initialize
 11723 ;;		_TMR2_Initialize
 11724 ;;		_WDT_Initialize
 11725 ;; This function is called by:
 11726 ;;		_main
 11727 ;; This function uses a non-reentrant model
 11728 ;;
 11729                           
 11730                           
 11731                           ;psect for function _SYSTEM_Initialize
 11732  1DD3                     _SYSTEM_Initialize:	
 11733                           
 11734                           ;mcc.c: 73: PIN_MANAGER_Initialize();
 11735                           
 11736                           ;incstack = 0
 11737                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11738  1DD3  3191  2102  319D   	fcall	_PIN_MANAGER_Initialize
 11739                           
 11740                           ;mcc.c: 74: OSCILLATOR_Initialize();
 11741  1DD6  318F  27FE  319D   	fcall	_OSCILLATOR_Initialize
 11742                           
 11743                           ;mcc.c: 75: WDT_Initialize();
 11744  1DD9  319C  24E7  319D   	fcall	_WDT_Initialize
 11745                           
 11746                           ;mcc.c: 76: FVR_Initialize();
 11747  1DDC  319C  24E3  319D   	fcall	_FVR_Initialize
 11748                           
 11749                           ;mcc.c: 77: PWM1_Initialize();
 11750  1DDF  319D  256F  319D   	fcall	_PWM1_Initialize
 11751                           
 11752                           ;mcc.c: 78: PWM2_Initialize();
 11753  1DE2  319D  2588  319D   	fcall	_PWM2_Initialize
 11754                           
 11755                           ;mcc.c: 79: ADC1_Initialize();
 11756  1DE5  319C  24FD  319D   	fcall	_ADC1_Initialize
 11757                           
 11758                           ;mcc.c: 80: TMR2_Initialize();
 11759  1DE8  319D  2531  319D   	fcall	_TMR2_Initialize
 11760                           
 11761                           ;mcc.c: 81: EUSART_Initialize();
 11762  1DEB  319D  251E         	fcall	_EUSART_Initialize
 11763  1DED  0008               	return
 11764  1DEE                     __end_of_SYSTEM_Initialize:	
 11765                           
 11766                           	psect	text39
 11767  1CE7                     __ptext39:	
 11768 ;; *************** function _WDT_Initialize *****************
 11769 ;; Defined at:
 11770 ;;		line 94 in file "mcc_generated_files/mcc.c"
 11771 ;; Parameters:    Size  Location     Type
 11772 ;;		None
 11773 ;; Auto vars:     Size  Location     Type
 11774 ;;		None
 11775 ;; Return value:  Size  Location     Type
 11776 ;;                  1    wreg      void 
 11777 ;; Registers used:
 11778 ;;		wreg
 11779 ;; Tracked objects:
 11780 ;;		On entry : 0/0
 11781 ;;		On exit  : 0/0
 11782 ;;		Unchanged: 0/0
 11783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11788 ;;Total ram usage:        0 bytes
 11789 ;; Hardware stack levels used:    1
 11790 ;; Hardware stack levels required when called:    1
 11791 ;; This function calls:
 11792 ;;		Nothing
 11793 ;; This function is called by:
 11794 ;;		_SYSTEM_Initialize
 11795 ;; This function uses a non-reentrant model
 11796 ;;
 11797                           
 11798                           
 11799                           ;psect for function _WDT_Initialize
 11800  1CE7                     _WDT_Initialize:	
 11801                           
 11802                           ;mcc.c: 97: WDTCON = 0x16;
 11803                           
 11804                           ;incstack = 0
 11805                           ; Regs used in _WDT_Initialize: [wreg]
 11806  1CE7  3016               	movlw	22
 11807  1CE8  0021               	movlb	1	; select bank1
 11808  1CE9  0097               	movwf	23	;volatile
 11809  1CEA  0008               	return
 11810  1CEB                     __end_of_WDT_Initialize:	
 11811                           
 11812                           	psect	text40
 11813  1D31                     __ptext40:	
 11814 ;; *************** function _TMR2_Initialize *****************
 11815 ;; Defined at:
 11816 ;;		line 63 in file "mcc_generated_files/tmr2.c"
 11817 ;; Parameters:    Size  Location     Type
 11818 ;;		None
 11819 ;; Auto vars:     Size  Location     Type
 11820 ;;		None
 11821 ;; Return value:  Size  Location     Type
 11822 ;;                  1    wreg      void 
 11823 ;; Registers used:
 11824 ;;		wreg, status,2, status,0, pclath, cstack
 11825 ;; Tracked objects:
 11826 ;;		On entry : 0/0
 11827 ;;		On exit  : 0/0
 11828 ;;		Unchanged: 0/0
 11829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11834 ;;Total ram usage:        0 bytes
 11835 ;; Hardware stack levels used:    1
 11836 ;; Hardware stack levels required when called:    2
 11837 ;; This function calls:
 11838 ;;		_TMR2_SetInterruptHandler
 11839 ;;		_TMR2_StartTimer
 11840 ;; This function is called by:
 11841 ;;		_SYSTEM_Initialize
 11842 ;; This function uses a non-reentrant model
 11843 ;;
 11844                           
 11845                           
 11846                           ;psect for function _TMR2_Initialize
 11847  1D31                     _TMR2_Initialize:	
 11848                           
 11849                           ;tmr2.c: 68: T2CON = 0x4B;
 11850                           
 11851                           ;incstack = 0
 11852                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11853  1D31  304B               	movlw	75
 11854  1D32  0020               	movlb	0	; select bank0
 11855  1D33  009C               	movwf	28	;volatile
 11856                           
 11857                           ;tmr2.c: 71: PR2 = 0x7C;
 11858  1D34  307C               	movlw	124
 11859  1D35  009B               	movwf	27	;volatile
 11860                           
 11861                           ;tmr2.c: 74: TMR2 = 0x00;
 11862  1D36  019A               	clrf	26	;volatile
 11863                           
 11864                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
 11865  1D37  1091               	bcf	17,1	;volatile
 11866                           
 11867                           ;tmr2.c: 80: PIE1bits.TMR2IE = 1;
 11868  1D38  0021               	movlb	1	; select bank1
 11869  1D39  1491               	bsf	17,1	;volatile
 11870                           
 11871                           ;tmr2.c: 83: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
 11872  1D3A  3000               	movlw	0
 11873  1D3B  00F1               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 11874  1D3C  3000               	movlw	0
 11875  1D3D  00F2               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 11876  1D3E  319C  24EF  319D   	fcall	_TMR2_SetInterruptHandler
 11877                           
 11878                           ;tmr2.c: 86: TMR2_StartTimer();
 11879  1D41  319C  24E0         	fcall	_TMR2_StartTimer
 11880  1D43  0008               	return
 11881  1D44                     __end_of_TMR2_Initialize:	
 11882                           
 11883                           	psect	text41
 11884  1CE0                     __ptext41:	
 11885 ;; *************** function _TMR2_StartTimer *****************
 11886 ;; Defined at:
 11887 ;;		line 89 in file "mcc_generated_files/tmr2.c"
 11888 ;; Parameters:    Size  Location     Type
 11889 ;;		None
 11890 ;; Auto vars:     Size  Location     Type
 11891 ;;		None
 11892 ;; Return value:  Size  Location     Type
 11893 ;;                  1    wreg      void 
 11894 ;; Registers used:
 11895 ;;		None
 11896 ;; Tracked objects:
 11897 ;;		On entry : 0/0
 11898 ;;		On exit  : 0/0
 11899 ;;		Unchanged: 0/0
 11900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11905 ;;Total ram usage:        0 bytes
 11906 ;; Hardware stack levels used:    1
 11907 ;; Hardware stack levels required when called:    1
 11908 ;; This function calls:
 11909 ;;		Nothing
 11910 ;; This function is called by:
 11911 ;;		_TMR2_Initialize
 11912 ;; This function uses a non-reentrant model
 11913 ;;
 11914                           
 11915                           
 11916                           ;psect for function _TMR2_StartTimer
 11917  1CE0                     _TMR2_StartTimer:	
 11918                           
 11919                           ;tmr2.c: 92: T2CONbits.TMR2ON = 1;
 11920                           
 11921                           ;incstack = 0
 11922                           ; Regs used in _TMR2_StartTimer: []
 11923  1CE0  0020               	movlb	0	; select bank0
 11924  1CE1  151C               	bsf	28,2	;volatile
 11925  1CE2  0008               	return
 11926  1CE3                     __end_of_TMR2_StartTimer:	
 11927                           
 11928                           	psect	text42
 11929  1CEF                     __ptext42:	
 11930 ;; *************** function _TMR2_SetInterruptHandler *****************
 11931 ;; Defined at:
 11932 ;;		line 142 in file "mcc_generated_files/tmr2.c"
 11933 ;; Parameters:    Size  Location     Type
 11934 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 11935 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 11936 ;; Auto vars:     Size  Location     Type
 11937 ;;		None
 11938 ;; Return value:  Size  Location     Type
 11939 ;;                  1    wreg      void 
 11940 ;; Registers used:
 11941 ;;		wreg
 11942 ;; Tracked objects:
 11943 ;;		On entry : 0/0
 11944 ;;		On exit  : 0/0
 11945 ;;		Unchanged: 0/0
 11946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11947 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11950 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11951 ;;Total ram usage:        2 bytes
 11952 ;; Hardware stack levels used:    1
 11953 ;; Hardware stack levels required when called:    1
 11954 ;; This function calls:
 11955 ;;		Nothing
 11956 ;; This function is called by:
 11957 ;;		_TMR2_Initialize
 11958 ;; This function uses a non-reentrant model
 11959 ;;
 11960                           
 11961                           
 11962                           ;psect for function _TMR2_SetInterruptHandler
 11963  1CEF                     _TMR2_SetInterruptHandler:	
 11964                           
 11965                           ;tmr2.c: 143: TMR2_InterruptHandler = InterruptHandler;
 11966                           
 11967                           ;incstack = 0
 11968                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 11969  1CEF  0872               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 11970  1CF0  0020               	movlb	0	; select bank0
 11971  1CF1  00E4               	movwf	_TMR2_InterruptHandler+1
 11972  1CF2  0871               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 11973  1CF3  00E3               	movwf	_TMR2_InterruptHandler
 11974  1CF4  0008               	return
 11975  1CF5                     __end_of_TMR2_SetInterruptHandler:	
 11976                           
 11977                           	psect	text43
 11978  1D88                     __ptext43:	
 11979 ;; *************** function _PWM2_Initialize *****************
 11980 ;; Defined at:
 11981 ;;		line 58 in file "mcc_generated_files/pwm2.c"
 11982 ;; Parameters:    Size  Location     Type
 11983 ;;		None
 11984 ;; Auto vars:     Size  Location     Type
 11985 ;;		None
 11986 ;; Return value:  Size  Location     Type
 11987 ;;                  1    wreg      void 
 11988 ;; Registers used:
 11989 ;;		wreg, status,2
 11990 ;; Tracked objects:
 11991 ;;		On entry : 0/0
 11992 ;;		On exit  : 0/0
 11993 ;;		Unchanged: 0/0
 11994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11999 ;;Total ram usage:        0 bytes
 12000 ;; Hardware stack levels used:    1
 12001 ;; Hardware stack levels required when called:    1
 12002 ;; This function calls:
 12003 ;;		Nothing
 12004 ;; This function is called by:
 12005 ;;		_SYSTEM_Initialize
 12006 ;; This function uses a non-reentrant model
 12007 ;;
 12008                           
 12009                           
 12010                           ;psect for function _PWM2_Initialize
 12011  1D88                     _PWM2_Initialize:	
 12012                           
 12013                           ;pwm2.c: 63: PWM2INTE = 0x01;
 12014                           
 12015                           ;incstack = 0
 12016                           ; Regs used in _PWM2_Initialize: [wreg+status,2]
 12017  1D88  3001               	movlw	1
 12018  1D89  003B               	movlb	27	; select bank27
 12019  1D8A  00AC               	movwf	44	;volatile
 12020                           
 12021                           ;pwm2.c: 66: PWM2INTF = 0x00;
 12022  1D8B  01AD               	clrf	45	;volatile
 12023                           
 12024                           ;pwm2.c: 69: PWM2CLKCON = 0x00;
 12025  1D8C  01AE               	clrf	46	;volatile
 12026                           
 12027                           ;pwm2.c: 72: PWM2LDCON = 0x00;
 12028  1D8D  01AF               	clrf	47	;volatile
 12029                           
 12030                           ;pwm2.c: 75: PWM2OFCON = 0x00;
 12031  1D8E  01B0               	clrf	48	;volatile
 12032                           
 12033                           ;pwm2.c: 78: PWM2PHH = 0x00;
 12034  1D8F  01A2               	clrf	34	;volatile
 12035                           
 12036                           ;pwm2.c: 81: PWM2PHL = 0x02;
 12037  1D90  3002               	movlw	2
 12038  1D91  00A1               	movwf	33	;volatile
 12039                           
 12040                           ;pwm2.c: 84: PWM2DCH = 0x00;
 12041  1D92  01A4               	clrf	36	;volatile
 12042                           
 12043                           ;pwm2.c: 87: PWM2DCL = 0xA0;
 12044  1D93  30A0               	movlw	160
 12045  1D94  00A3               	movwf	35	;volatile
 12046                           
 12047                           ;pwm2.c: 90: PWM2PRH = 0x06;
 12048  1D95  3006               	movlw	6
 12049  1D96  00A6               	movwf	38	;volatile
 12050                           
 12051                           ;pwm2.c: 93: PWM2PRL = 0x3F;
 12052  1D97  303F               	movlw	63
 12053  1D98  00A5               	movwf	37	;volatile
 12054                           
 12055                           ;pwm2.c: 96: PWM2OFH = 0x00;
 12056  1D99  01A8               	clrf	40	;volatile
 12057                           
 12058                           ;pwm2.c: 99: PWM2OFL = 0x01;
 12059  1D9A  3001               	movlw	1
 12060  1D9B  00A7               	movwf	39	;volatile
 12061                           
 12062                           ;pwm2.c: 102: PWM2TMRH = 0x00;
 12063  1D9C  01AA               	clrf	42	;volatile
 12064                           
 12065                           ;pwm2.c: 105: PWM2TMRL = 0x00;
 12066  1D9D  01A9               	clrf	41	;volatile
 12067                           
 12068                           ;pwm2.c: 108: PWM2CON = 0x90;
 12069  1D9E  3090               	movlw	144
 12070  1D9F  00AB               	movwf	43	;volatile
 12071  1DA0  0008               	return
 12072  1DA1                     __end_of_PWM2_Initialize:	
 12073                           
 12074                           	psect	text44
 12075  1D6F                     __ptext44:	
 12076 ;; *************** function _PWM1_Initialize *****************
 12077 ;; Defined at:
 12078 ;;		line 58 in file "mcc_generated_files/pwm1.c"
 12079 ;; Parameters:    Size  Location     Type
 12080 ;;		None
 12081 ;; Auto vars:     Size  Location     Type
 12082 ;;		None
 12083 ;; Return value:  Size  Location     Type
 12084 ;;                  1    wreg      void 
 12085 ;; Registers used:
 12086 ;;		wreg, status,2
 12087 ;; Tracked objects:
 12088 ;;		On entry : 0/0
 12089 ;;		On exit  : 0/0
 12090 ;;		Unchanged: 0/0
 12091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12096 ;;Total ram usage:        0 bytes
 12097 ;; Hardware stack levels used:    1
 12098 ;; Hardware stack levels required when called:    1
 12099 ;; This function calls:
 12100 ;;		Nothing
 12101 ;; This function is called by:
 12102 ;;		_SYSTEM_Initialize
 12103 ;; This function uses a non-reentrant model
 12104 ;;
 12105                           
 12106                           
 12107                           ;psect for function _PWM1_Initialize
 12108  1D6F                     _PWM1_Initialize:	
 12109                           
 12110                           ;pwm1.c: 63: PWM1INTE = 0x01;
 12111                           
 12112                           ;incstack = 0
 12113                           ; Regs used in _PWM1_Initialize: [wreg+status,2]
 12114  1D6F  3001               	movlw	1
 12115  1D70  003B               	movlb	27	; select bank27
 12116  1D71  009C               	movwf	28	;volatile
 12117                           
 12118                           ;pwm1.c: 66: PWM1INTF = 0x00;
 12119  1D72  019D               	clrf	29	;volatile
 12120                           
 12121                           ;pwm1.c: 69: PWM1CLKCON = 0x00;
 12122  1D73  019E               	clrf	30	;volatile
 12123                           
 12124                           ;pwm1.c: 72: PWM1LDCON = 0x00;
 12125  1D74  019F               	clrf	31	;volatile
 12126                           
 12127                           ;pwm1.c: 75: PWM1OFCON = 0x00;
 12128  1D75  01A0               	clrf	32	;volatile
 12129                           
 12130                           ;pwm1.c: 78: PWM1PHH = 0x00;
 12131  1D76  0192               	clrf	18	;volatile
 12132                           
 12133                           ;pwm1.c: 81: PWM1PHL = 0x02;
 12134  1D77  3002               	movlw	2
 12135  1D78  0091               	movwf	17	;volatile
 12136                           
 12137                           ;pwm1.c: 84: PWM1DCH = 0x00;
 12138  1D79  0194               	clrf	20	;volatile
 12139                           
 12140                           ;pwm1.c: 87: PWM1DCL = 0xa0;
 12141  1D7A  30A0               	movlw	160
 12142  1D7B  0093               	movwf	19	;volatile
 12143                           
 12144                           ;pwm1.c: 90: PWM1PRH = 0x06;
 12145  1D7C  3006               	movlw	6
 12146  1D7D  0096               	movwf	22	;volatile
 12147                           
 12148                           ;pwm1.c: 93: PWM1PRL = 0x3F;
 12149  1D7E  303F               	movlw	63
 12150  1D7F  0095               	movwf	21	;volatile
 12151                           
 12152                           ;pwm1.c: 96: PWM1OFH = 0x00;
 12153  1D80  0198               	clrf	24	;volatile
 12154                           
 12155                           ;pwm1.c: 99: PWM1OFL = 0x01;
 12156  1D81  3001               	movlw	1
 12157  1D82  0097               	movwf	23	;volatile
 12158                           
 12159                           ;pwm1.c: 102: PWM1TMRH = 0x00;
 12160  1D83  019A               	clrf	26	;volatile
 12161                           
 12162                           ;pwm1.c: 105: PWM1TMRL = 0x00;
 12163  1D84  0199               	clrf	25	;volatile
 12164                           
 12165                           ;pwm1.c: 108: PWM1CON = 0x90;
 12166  1D85  3090               	movlw	144
 12167  1D86  009B               	movwf	27	;volatile
 12168  1D87  0008               	return
 12169  1D88                     __end_of_PWM1_Initialize:	
 12170                           
 12171                           	psect	text45
 12172  1102                     __ptext45:	
 12173 ;; *************** function _PIN_MANAGER_Initialize *****************
 12174 ;; Defined at:
 12175 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 12176 ;; Parameters:    Size  Location     Type
 12177 ;;		None
 12178 ;; Auto vars:     Size  Location     Type
 12179 ;;  state           1    1[COMMON] unsigned char 
 12180 ;; Return value:  Size  Location     Type
 12181 ;;                  1    wreg      void 
 12182 ;; Registers used:
 12183 ;;		wreg, status,2, status,0
 12184 ;; Tracked objects:
 12185 ;;		On entry : 0/0
 12186 ;;		On exit  : 0/0
 12187 ;;		Unchanged: 0/0
 12188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12190 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12192 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12193 ;;Total ram usage:        1 bytes
 12194 ;; Hardware stack levels used:    1
 12195 ;; Hardware stack levels required when called:    1
 12196 ;; This function calls:
 12197 ;;		Nothing
 12198 ;; This function is called by:
 12199 ;;		_SYSTEM_Initialize
 12200 ;; This function uses a non-reentrant model
 12201 ;;
 12202                           
 12203                           
 12204                           ;psect for function _PIN_MANAGER_Initialize
 12205  1102                     _PIN_MANAGER_Initialize:	
 12206                           
 12207                           ;pin_manager.c: 57: LATA = 0x00;
 12208                           
 12209                           ;incstack = 0
 12210                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 12211  1102  0022               	movlb	2	; select bank2
 12212  1103  018C               	clrf	12	;volatile
 12213                           
 12214                           ;pin_manager.c: 58: LATC = 0x00;
 12215  1104  018E               	clrf	14	;volatile
 12216                           
 12217                           ;pin_manager.c: 63: TRISA = 0x0F;
 12218  1105  300F               	movlw	15
 12219  1106  0021               	movlb	1	; select bank1
 12220  1107  008C               	movwf	12	;volatile
 12221                           
 12222                           ;pin_manager.c: 64: TRISC = 0x1f;
 12223  1108  301F               	movlw	31
 12224  1109  008E               	movwf	14	;volatile
 12225                           
 12226                           ;pin_manager.c: 69: ANSELC = 0x0F;
 12227  110A  300F               	movlw	15
 12228  110B  0023               	movlb	3	; select bank3
 12229  110C  008E               	movwf	14	;volatile
 12230                           
 12231                           ;pin_manager.c: 70: ANSELA = 0x17;
 12232  110D  3017               	movlw	23
 12233  110E  008C               	movwf	12	;volatile
 12234                           
 12235                           ;pin_manager.c: 75: WPUA = 0x3B;
 12236  110F  303B               	movlw	59
 12237  1110  0024               	movlb	4	; select bank4
 12238  1111  008C               	movwf	12	;volatile
 12239                           
 12240                           ;pin_manager.c: 76: WPUC = 0x30;
 12241  1112  3030               	movlw	48
 12242  1113  008E               	movwf	14	;volatile
 12243                           
 12244                           ;pin_manager.c: 77: OPTION_REGbits.nWPUEN = 0;
 12245  1114  0021               	movlb	1	; select bank1
 12246  1115  1395               	bcf	21,7	;volatile
 12247                           
 12248                           ;pin_manager.c: 82: ODCONA = 0x00;
 12249  1116  0025               	movlb	5	; select bank5
 12250  1117  018C               	clrf	12	;volatile
 12251                           
 12252                           ;pin_manager.c: 83: ODCONC = 0x00;
 12253  1118  018E               	clrf	14	;volatile
 12254                           
 12255                           ;pin_manager.c: 85: bool state = (unsigned char)GIE;
 12256  1119  3000               	movlw	0
 12257  111A  1B8B               	btfsc	11,7	;volatile
 12258  111B  3001               	movlw	1
 12259  111C  00F1               	movwf	PIN_MANAGER_Initialize@state
 12260                           
 12261                           ;pin_manager.c: 86: GIE = 0;
 12262  111D  138B               	bcf	11,7	;volatile
 12263                           
 12264                           ;pin_manager.c: 87: PPSLOCK = 0x55;
 12265  111E  3055               	movlw	85
 12266  111F  003C               	movlb	28	; select bank28
 12267  1120  008F               	movwf	15	;volsfr
 12268                           
 12269                           ;pin_manager.c: 88: PPSLOCK = 0xAA;
 12270  1121  30AA               	movlw	170
 12271  1122  008F               	movwf	15	;volsfr
 12272                           
 12273                           ;pin_manager.c: 89: PPSLOCKbits.PPSLOCKED = 0x00;
 12274  1123  100F               	bcf	15,0	;volsfr
 12275                           
 12276                           ;pin_manager.c: 91: RXPPSbits.RXPPS = 0x14;
 12277  1124  0815               	movf	21,w	;volatile
 12278  1125  39E0               	andlw	-32
 12279  1126  3814               	iorlw	20
 12280  1127  0095               	movwf	21	;volatile
 12281                           
 12282                           ;pin_manager.c: 92: RA4PPSbits.RA4PPS = 0x04;
 12283  1128  003D               	movlb	29	; select bank29
 12284  1129  0814               	movf	20,w	;volatile
 12285  112A  39F0               	andlw	-16
 12286  112B  3804               	iorlw	4
 12287  112C  0094               	movwf	20	;volatile
 12288                           
 12289                           ;pin_manager.c: 93: RA5PPSbits.RA5PPS = 0x03;
 12290  112D  0815               	movf	21,w	;volatile
 12291  112E  39F0               	andlw	-16
 12292  112F  3803               	iorlw	3
 12293  1130  0095               	movwf	21	;volatile
 12294                           
 12295                           ;pin_manager.c: 94: RC5PPSbits.RC5PPS = 0x09;
 12296  1131  0825               	movf	37,w	;volatile
 12297  1132  39F0               	andlw	-16
 12298  1133  3809               	iorlw	9
 12299  1134  00A5               	movwf	37	;volatile
 12300                           
 12301                           ;pin_manager.c: 96: PPSLOCK = 0x55;
 12302  1135  3055               	movlw	85
 12303  1136  003C               	movlb	28	; select bank28
 12304  1137  008F               	movwf	15	;volsfr
 12305                           
 12306                           ;pin_manager.c: 97: PPSLOCK = 0xAA;
 12307  1138  30AA               	movlw	170
 12308  1139  008F               	movwf	15	;volsfr
 12309                           
 12310                           ;pin_manager.c: 98: PPSLOCKbits.PPSLOCKED = 0x01;
 12311  113A  140F               	bsf	15,0	;volsfr
 12312                           
 12313                           ;pin_manager.c: 100: GIE = state;
 12314  113B  1C71               	btfss	PIN_MANAGER_Initialize@state,0
 12315  113C  293F               	goto	u2270
 12316  113D  178B               	bsf	11,7	;volatile
 12317  113E  0008               	return
 12318  113F                     u2270:	
 12319  113F  138B               	bcf	11,7	;volatile
 12320  1140  0008               	return
 12321  1141                     __end_of_PIN_MANAGER_Initialize:	
 12322                           
 12323                           	psect	text46
 12324  0FFE                     __ptext46:	
 12325 ;; *************** function _OSCILLATOR_Initialize *****************
 12326 ;; Defined at:
 12327 ;;		line 84 in file "mcc_generated_files/mcc.c"
 12328 ;; Parameters:    Size  Location     Type
 12329 ;;		None
 12330 ;; Auto vars:     Size  Location     Type
 12331 ;;		None
 12332 ;; Return value:  Size  Location     Type
 12333 ;;                  1    wreg      void 
 12334 ;; Registers used:
 12335 ;;		None
 12336 ;; Tracked objects:
 12337 ;;		On entry : 0/0
 12338 ;;		On exit  : 0/0
 12339 ;;		Unchanged: 0/0
 12340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12345 ;;Total ram usage:        0 bytes
 12346 ;; Hardware stack levels used:    1
 12347 ;; Hardware stack levels required when called:    1
 12348 ;; This function calls:
 12349 ;;		Nothing
 12350 ;; This function is called by:
 12351 ;;		_SYSTEM_Initialize
 12352 ;; This function uses a non-reentrant model
 12353 ;;
 12354                           
 12355                           
 12356                           ;psect for function _OSCILLATOR_Initialize
 12357  0FFE                     _OSCILLATOR_Initialize:	
 12358                           
 12359                           ;incstack = 0
 12360                           ; Regs used in _OSCILLATOR_Initialize: []
 12361  0FFE  0008               	return
 12362  0FFF                     __end_of_OSCILLATOR_Initialize:	
 12363                           
 12364                           	psect	text47
 12365  1CE3                     __ptext47:	
 12366 ;; *************** function _FVR_Initialize *****************
 12367 ;; Defined at:
 12368 ;;		line 57 in file "mcc_generated_files/fvr.c"
 12369 ;; Parameters:    Size  Location     Type
 12370 ;;		None
 12371 ;; Auto vars:     Size  Location     Type
 12372 ;;		None
 12373 ;; Return value:  Size  Location     Type
 12374 ;;                  1    wreg      void 
 12375 ;; Registers used:
 12376 ;;		wreg
 12377 ;; Tracked objects:
 12378 ;;		On entry : 0/0
 12379 ;;		On exit  : 0/0
 12380 ;;		Unchanged: 0/0
 12381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12386 ;;Total ram usage:        0 bytes
 12387 ;; Hardware stack levels used:    1
 12388 ;; Hardware stack levels required when called:    1
 12389 ;; This function calls:
 12390 ;;		Nothing
 12391 ;; This function is called by:
 12392 ;;		_SYSTEM_Initialize
 12393 ;; This function uses a non-reentrant model
 12394 ;;
 12395                           
 12396                           
 12397                           ;psect for function _FVR_Initialize
 12398  1CE3                     _FVR_Initialize:	
 12399                           
 12400                           ;fvr.c: 60: FVRCON = 0x81;
 12401                           
 12402                           ;incstack = 0
 12403                           ; Regs used in _FVR_Initialize: [wreg]
 12404  1CE3  3081               	movlw	129
 12405  1CE4  0022               	movlb	2	; select bank2
 12406  1CE5  0097               	movwf	23	;volatile
 12407  1CE6  0008               	return
 12408  1CE7                     __end_of_FVR_Initialize:	
 12409                           
 12410                           	psect	text48
 12411  1D1E                     __ptext48:	
 12412 ;; *************** function _EUSART_Initialize *****************
 12413 ;; Defined at:
 12414 ;;		line 55 in file "mcc_generated_files/eusart.c"
 12415 ;; Parameters:    Size  Location     Type
 12416 ;;		None
 12417 ;; Auto vars:     Size  Location     Type
 12418 ;;		None
 12419 ;; Return value:  Size  Location     Type
 12420 ;;                  1    wreg      void 
 12421 ;; Registers used:
 12422 ;;		wreg
 12423 ;; Tracked objects:
 12424 ;;		On entry : 0/0
 12425 ;;		On exit  : 0/0
 12426 ;;		Unchanged: 0/0
 12427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12432 ;;Total ram usage:        0 bytes
 12433 ;; Hardware stack levels used:    1
 12434 ;; Hardware stack levels required when called:    1
 12435 ;; This function calls:
 12436 ;;		Nothing
 12437 ;; This function is called by:
 12438 ;;		_SYSTEM_Initialize
 12439 ;; This function uses a non-reentrant model
 12440 ;;
 12441                           
 12442                           
 12443                           ;psect for function _EUSART_Initialize
 12444  1D1E                     _EUSART_Initialize:	
 12445                           
 12446                           ;eusart.c: 58: PIE1bits.RCIE = 0;
 12447                           
 12448                           ;incstack = 0
 12449                           ; Regs used in _EUSART_Initialize: [wreg]
 12450  1D1E  0021               	movlb	1	; select bank1
 12451  1D1F  1291               	bcf	17,5	;volatile
 12452                           
 12453                           ;eusart.c: 59: PIE1bits.TXIE = 0;
 12454  1D20  1211               	bcf	17,4	;volatile
 12455                           
 12456                           ;eusart.c: 61: BAUDCON = 0x08;
 12457  1D21  3008               	movlw	8
 12458  1D22  0023               	movlb	3	; select bank3
 12459  1D23  009F               	movwf	31	;volatile
 12460                           
 12461                           ;eusart.c: 64: RCSTA = 0x90;
 12462  1D24  3090               	movlw	144
 12463  1D25  009D               	movwf	29	;volatile
 12464                           
 12465                           ;eusart.c: 67: TXSTA = 0x24;
 12466  1D26  3024               	movlw	36
 12467  1D27  009E               	movwf	30	;volatile
 12468                           
 12469                           ;eusart.c: 71: SPBRGL = 0xA0;
 12470  1D28  30A0               	movlw	160
 12471  1D29  009B               	movwf	27	;volatile
 12472                           
 12473                           ;eusart.c: 76: SPBRGH = 0x01;
 12474  1D2A  3001               	movlw	1
 12475  1D2B  009C               	movwf	28	;volatile
 12476                           
 12477                           ;eusart.c: 77: PIE1bits.RCIE = 1;
 12478  1D2C  0021               	movlb	1	; select bank1
 12479  1D2D  1691               	bsf	17,5	;volatile
 12480                           
 12481                           ;eusart.c: 78: PIR1bits.TXIF=0;
 12482  1D2E  0020               	movlb	0	; select bank0
 12483  1D2F  1211               	bcf	17,4	;volatile
 12484  1D30  0008               	return
 12485  1D31                     __end_of_EUSART_Initialize:	
 12486                           
 12487                           	psect	text49
 12488  1CFD                     __ptext49:	
 12489 ;; *************** function _ADC1_Initialize *****************
 12490 ;; Defined at:
 12491 ;;		line 64 in file "mcc_generated_files/adc1.c"
 12492 ;; Parameters:    Size  Location     Type
 12493 ;;		None
 12494 ;; Auto vars:     Size  Location     Type
 12495 ;;		None
 12496 ;; Return value:  Size  Location     Type
 12497 ;;                  1    wreg      void 
 12498 ;; Registers used:
 12499 ;;		wreg, status,2
 12500 ;; Tracked objects:
 12501 ;;		On entry : 0/0
 12502 ;;		On exit  : 0/0
 12503 ;;		Unchanged: 0/0
 12504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12509 ;;Total ram usage:        0 bytes
 12510 ;; Hardware stack levels used:    1
 12511 ;; Hardware stack levels required when called:    1
 12512 ;; This function calls:
 12513 ;;		Nothing
 12514 ;; This function is called by:
 12515 ;;		_SYSTEM_Initialize
 12516 ;; This function uses a non-reentrant model
 12517 ;;
 12518                           
 12519                           
 12520                           ;psect for function _ADC1_Initialize
 12521  1CFD                     _ADC1_Initialize:	
 12522                           
 12523                           ;adc1.c: 69: ADCON0 = 0x01;
 12524                           
 12525                           ;incstack = 0
 12526                           ; Regs used in _ADC1_Initialize: [wreg+status,2]
 12527  1CFD  3001               	movlw	1
 12528  1CFE  0021               	movlb	1	; select bank1
 12529  1CFF  009D               	movwf	29	;volatile
 12530                           
 12531                           ;adc1.c: 72: ADCON1 = 0x63;
 12532  1D00  3063               	movlw	99
 12533  1D01  009E               	movwf	30	;volatile
 12534                           
 12535                           ;adc1.c: 75: ADCON2 = 0x00;
 12536  1D02  019F               	clrf	31	;volatile
 12537                           
 12538                           ;adc1.c: 78: ADRESL = 0x00;
 12539  1D03  019B               	clrf	27	;volatile
 12540                           
 12541                           ;adc1.c: 81: ADRESH = 0x00;
 12542  1D04  019C               	clrf	28	;volatile
 12543  1D05  0008               	return
 12544  1D06                     __end_of_ADC1_Initialize:	
 12545                           
 12546                           	psect	intentry
 12547  0804                     __pintentry:	
 12548 ;; *************** function _INTERRUPT_InterruptManager *****************
 12549 ;; Defined at:
 12550 ;;		line 56 in file "mcc_generated_files/interrupt_manager.c"
 12551 ;; Parameters:    Size  Location     Type
 12552 ;;		None
 12553 ;; Auto vars:     Size  Location     Type
 12554 ;;		None
 12555 ;; Return value:  Size  Location     Type
 12556 ;;                  1    wreg      void 
 12557 ;; Registers used:
 12558 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12559 ;; Tracked objects:
 12560 ;;		On entry : 0/0
 12561 ;;		On exit  : 0/0
 12562 ;;		Unchanged: 0/0
 12563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12566 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12567 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12568 ;;Total ram usage:        1 bytes
 12569 ;; Hardware stack levels used:    1
 12570 ;; This function calls:
 12571 ;;		Nothing
 12572 ;; This function is called by:
 12573 ;;		Interrupt level 1
 12574 ;; This function uses a non-reentrant model
 12575 ;;
 12576                           
 12577  0804                     _INTERRUPT_InterruptManager:	
 12578                           
 12579                           ;incstack = 0
 12580  0804  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 12581                           
 12582                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0]
 12583  0805  3188               	pagesel	$
 12584                           
 12585                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bits.TM
      +                          R2IF == 1)
 12586  0806  1F0B               	btfss	11,6	;volatile
 12587  0807  2836               	goto	i1l4401
 12588  0808  0021               	movlb	1	; select bank1
 12589  0809  1C91               	btfss	17,1	;volatile
 12590  080A  2836               	goto	i1l4401
 12591  080B  0020               	movlb	0	; select bank0
 12592  080C  1C91               	btfss	17,1	;volatile
 12593  080D  2836               	goto	i1l4401
 12594                           
 12595                           ;interrupt_manager.c: 61: {;interrupt_manager.c: 63: PIR1bits.TMR2IF = 0;
 12596  080E  1091               	bcf	17,1	;volatile
 12597                           
 12598                           ;interrupt_manager.c: 64: Event |= (1<<1);
 12599  080F  14EB               	bsf	_Event,1	;volatile
 12600                           
 12601                           ;interrupt_manager.c: 65: subTickerX++;
 12602  0810  3001               	movlw	1
 12603  0811  00F0               	movwf	??_INTERRUPT_InterruptManager
 12604  0812  0870               	movf	??_INTERRUPT_InterruptManager,w
 12605  0813  07E9               	addwf	_subTickerX,f
 12606                           
 12607                           ;interrupt_manager.c: 66: subTickerX_1s++;
 12608  0814  3001               	movlw	1
 12609  0815  00F0               	movwf	??_INTERRUPT_InterruptManager
 12610  0816  0870               	movf	??_INTERRUPT_InterruptManager,w
 12611  0817  07E8               	addwf	_subTickerX_1s,f
 12612                           
 12613                           ;interrupt_manager.c: 67: if(subTickerX>=5){
 12614  0818  3005               	movlw	5
 12615  0819  0269               	subwf	_subTickerX,w
 12616  081A  1C03               	skipc
 12617  081B  281E               	goto	i1l4383
 12618                           
 12619                           ;interrupt_manager.c: 68: subTickerX=0;
 12620  081C  01E9               	clrf	_subTickerX
 12621                           
 12622                           ;interrupt_manager.c: 69: Event |= (1<<2);
 12623  081D  156B               	bsf	_Event,2	;volatile
 12624  081E                     i1l4383:	
 12625                           
 12626                           ;interrupt_manager.c: 70: };interrupt_manager.c: 71: if(subTickerX_1s>=50){
 12627  081E  3032               	movlw	50
 12628  081F  0268               	subwf	_subTickerX_1s,w
 12629  0820  1C03               	skipc
 12630  0821  2824               	goto	i1l4389
 12631                           
 12632                           ;interrupt_manager.c: 72: subTickerX_1s=0;
 12633  0822  01E8               	clrf	_subTickerX_1s
 12634                           
 12635                           ;interrupt_manager.c: 73: Event |= (1<<3);
 12636  0823  15EB               	bsf	_Event,3	;volatile
 12637  0824                     i1l4389:	
 12638                           
 12639                           ;interrupt_manager.c: 74: };interrupt_manager.c: 76: if(eusartRxIdleTime_ms){
 12640  0824  087C               	movf	_eusartRxIdleTime_ms,w	;volatile
 12641  0825  1903               	btfsc	3,2
 12642  0826  2831               	goto	i1l4399
 12643                           
 12644                           ;interrupt_manager.c: 77: eusartRxIdleTime_ms++;
 12645  0827  3001               	movlw	1
 12646  0828  00F0               	movwf	??_INTERRUPT_InterruptManager
 12647  0829  0870               	movf	??_INTERRUPT_InterruptManager,w
 12648  082A  07FC               	addwf	_eusartRxIdleTime_ms,f	;volatile
 12649                           
 12650                           ;interrupt_manager.c: 78: if(eusartRxIdleTime_ms>5){
 12651  082B  3006               	movlw	6
 12652  082C  027C               	subwf	_eusartRxIdleTime_ms,w	;volatile
 12653  082D  1C03               	skipc
 12654  082E  2831               	goto	i1l4399
 12655                           
 12656                           ;interrupt_manager.c: 79: Event|=(1<<0);
 12657  082F  146B               	bsf	_Event,0	;volatile
 12658                           
 12659                           ;interrupt_manager.c: 80: eusartRxIdleTime_ms=0;
 12660  0830  01FC               	clrf	_eusartRxIdleTime_ms	;volatile
 12661  0831                     i1l4399:	
 12662                           
 12663                           ;interrupt_manager.c: 81: };interrupt_manager.c: 82: };interrupt_manager.c: 83: globalTi
      +                          cker++;
 12664  0831  3001               	movlw	1
 12665  0832  0021               	movlb	1	; select bank1
 12666  0833  07CC               	addwf	_globalTicker^(0+128),f	;volatile
 12667  0834  3000               	movlw	0
 12668  0835  3DCD               	addwfc	(_globalTicker+1)^(0+128),f	;volatile
 12669  0836                     i1l4401:	
 12670                           
 12671                           ;interrupt_manager.c: 84: };interrupt_manager.c: 85: if(INTCONbits.PEIE == 1 && PIE1bits
      +                          .RCIE == 1 && PIR1bits.RCIF == 1)
 12672  0836  1F0B               	btfss	11,6	;volatile
 12673  0837  285E               	goto	i1l4419
 12674  0838  0021               	movlb	1	; select bank1
 12675  0839  1E91               	btfss	17,5	;volatile
 12676  083A  285E               	goto	i1l4419
 12677  083B  0020               	movlb	0	; select bank0
 12678  083C  1E91               	btfss	17,5	;volatile
 12679  083D  285E               	goto	i1l4419
 12680                           
 12681                           ;interrupt_manager.c: 86: {;interrupt_manager.c: 88: PIR1bits.RCIF=0;
 12682  083E  1291               	bcf	17,5	;volatile
 12683                           
 12684                           ;interrupt_manager.c: 89: if(1 == RCSTAbits.OERR){
 12685  083F  0023               	movlb	3	; select bank3
 12686  0840  1C9D               	btfss	29,1	;volatile
 12687  0841  2844               	goto	i1l4411
 12688                           
 12689                           ;interrupt_manager.c: 90: RCSTAbits.CREN = 0;
 12690  0842  121D               	bcf	29,4	;volatile
 12691                           
 12692                           ;interrupt_manager.c: 91: RCSTAbits.CREN = 1;
 12693  0843  161D               	bsf	29,4	;volatile
 12694  0844                     i1l4411:	
 12695                           
 12696                           ;interrupt_manager.c: 92: };interrupt_manager.c: 93: rxtemp=RCREG;
 12697  0844  0819               	movf	25,w	;volatile
 12698  0845  00F0               	movwf	??_INTERRUPT_InterruptManager
 12699  0846  0870               	movf	??_INTERRUPT_InterruptManager,w
 12700  0847  0020               	movlb	0	; select bank0
 12701  0848  00E7               	movwf	_rxtemp
 12702                           
 12703                           ;interrupt_manager.c: 94: if(eusartRxCount<32){
 12704  0849  3020               	movlw	32
 12705  084A  026A               	subwf	_eusartRxCount,w	;volatile
 12706  084B  1803               	skipnc
 12707  084C  285A               	goto	i1l4417
 12708                           
 12709                           ;interrupt_manager.c: 95: eusartRxBuffer[eusartRxCount]=rxtemp;
 12710  084D  0867               	movf	_rxtemp,w
 12711  084E  00F0               	movwf	??_INTERRUPT_InterruptManager
 12712  084F  086A               	movf	_eusartRxCount,w
 12713  0850  3E40               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 12714  0851  0086               	movwf	6
 12715  0852  3001               	movlw	1	; select bank2/3
 12716  0853  0087               	movwf	7
 12717  0854  0870               	movf	??_INTERRUPT_InterruptManager,w
 12718  0855  0081               	movwf	1
 12719                           
 12720                           ;interrupt_manager.c: 96: eusartRxCount++;
 12721  0856  3001               	movlw	1
 12722  0857  00F0               	movwf	??_INTERRUPT_InterruptManager
 12723  0858  0870               	movf	??_INTERRUPT_InterruptManager,w
 12724  0859  07EA               	addwf	_eusartRxCount,f	;volatile
 12725  085A                     i1l4417:	
 12726                           
 12727                           ;interrupt_manager.c: 98: };interrupt_manager.c: 99: eusartRxIdleTime_ms=1;
 12728  085A  3001               	movlw	1
 12729  085B  00F0               	movwf	??_INTERRUPT_InterruptManager
 12730  085C  0870               	movf	??_INTERRUPT_InterruptManager,w
 12731  085D  00FC               	movwf	_eusartRxIdleTime_ms	;volatile
 12732  085E                     i1l4419:	
 12733                           
 12734                           ;interrupt_manager.c: 100: };interrupt_manager.c: 102: if( PIR1bits.TXIF == 1)
 12735  085E  0020               	movlb	0	; select bank0
 12736  085F  1A11               	btfsc	17,4	;volatile
 12737                           
 12738                           ;interrupt_manager.c: 103: {;interrupt_manager.c: 104: PIR1bits.TXIF=0;
 12739  0860  1211               	bcf	17,4	;volatile
 12740                           
 12741                           ;interrupt_manager.c: 105: };interrupt_manager.c: 107: if(PIR3bits.PWM2IF){
 12742  0861  1A93               	btfsc	19,5	;volatile
 12743                           
 12744                           ;interrupt_manager.c: 108: PIR3bits.PWM2IF = 0;
 12745  0862  1293               	bcf	19,5	;volatile
 12746                           
 12747                           ;interrupt_manager.c: 109: };interrupt_manager.c: 111: if(PIR3bits.PWM1IF){
 12748  0863  1A13               	btfsc	19,4	;volatile
 12749                           
 12750                           ;interrupt_manager.c: 112: PIR3bits.PWM1IF=0;
 12751  0864  1213               	bcf	19,4	;volatile
 12752  0865  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 12753  0866  0009               	retfie
 12754  0867                     __end_of_INTERRUPT_InterruptManager:	
 12755  007E                     btemp	set	126	;btemp
 12756  007E                     int$flags	set	126
 12757  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    17
    Data        12
    BSS         148
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     39      80
    BANK1            80      2      56
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           60      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    crc_append@message	PTR unsigned char  size(2) Largest target is 132
		 -> modbusBuf(BANK2[32]), sysData(BIGRAM[132]), 

    crc_verify@message	PTR unsigned char  size(2) Largest target is 132
		 -> modbusBuf(BANK2[32]), sysData(BIGRAM[132]), 

    crc_sum@buf	PTR unsigned char  size(2) Largest target is 132
		 -> modbusBuf(BANK2[32]), sysData(BIGRAM[132]), 

    m_mem_cpy_len@s	PTR unsigned char  size(2) Largest target is 132
		 -> modbusBuf(BANK2[32]), sysData(BIGRAM[132]), eusartRxBuffer(BANK2[32]), 

    m_mem_cpy_len@d	PTR unsigned char  size(2) Largest target is 32
		 -> crc_verify@expected(BANK0[2]), modbusBuf(BANK2[32]), 

    modbus_response_process@rbuf	PTR unsigned char  size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_process@pmdbs	PTR struct . size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_command@rbuf	PTR unsigned char  size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_command@pmdbs	PTR struct . size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_write_mult_register@rbuf	PTR unsigned char  size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_write_mult_register@stb	PTR struct . size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_write_single_register@rbuf	PTR unsigned char  size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_write_single_register@pmdbs	PTR struct . size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    getRegisterVal@tempData	PTR unsigned int  size(1) Largest target is 2
		 -> modbus_response_command@tempData(BANK0[2]), 

    modbus_response_illgeal_function@buf	PTR unsigned char  size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_illgeal_function@pmdbs	PTR struct . size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    my_flash_system_write@buf	PTR unsigned char  size(2) Largest target is 132
		 -> sysData(BIGRAM[132]), 

    my_flash_system_read@buf	PTR unsigned char  size(2) Largest target is 132
		 -> sysData(BIGRAM[132]), 

    uart_send_len@buf	PTR unsigned char  size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_calc_rs_lo_avg
    _sys_data_init->_my_flash_system_read
    _pid_pwm2_vout_run->_set_vout_pwm2_duty
    _set_vout_pwm2_duty->_get_vout_pwm2_duty
    _pid_pwm1_idrv_run->_set_idrv_pwm1_duty
    _set_idrv_pwm1_duty->_get_idrv_pwm1_duty
    _modbus_response_write_single_register->_crc_append
    _modbus_response_write_mult_register->_crc_append
    _sys_data_save->_crc_append
    _my_flash_read_system_erase->_FLASH_EraseBlock
    _modbus_response_illgeal_function->_crc_append
    _modbus_response_command->_crc_append
    _crc_append->_crc_sum
    _crc_verify->_m_mem_cpy_len
    _calc_temp_rs->___lldiv
    _calc_temp_rc->___lldiv
    _calc_rs_lo_avg->___lldiv
    _calc_expect_vout_adc_value->___aldiv
    ___aldiv->___lmul
    _adc_sample->_fvr_set_gain
    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_calc_expect_vout_adc_value
    _sys_data_init->_crc_verify
    _pid_pwm1_idrv_run->___aldiv
    _modbus_response_process->_modbus_response_command
    _modbus_response_process->_modbus_response_write_single_register
    _modbus_response_write_single_register->_crc_append
    _modbus_response_write_mult_register->_crc_append
    _sys_data_save->_crc_append
    _modbus_response_illgeal_function->_crc_append
    _modbus_response_command->_crc_append
    _crc_append->_crc_sum
    _crc_verify->_crc_sum
    _calc_temp_rs->___lldiv
    _calc_temp_rc->___lldiv
    _calc_rs_lo_avg->___lldiv
    _calc_expect_vout_adc_value->___aldiv
    ___aldiv->___lmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   43792
                                              0 BANK1      2     2      0
                  _SYSTEM_Initialize
                         _adc_sample
         _calc_expect_vout_adc_value
                     _calc_rs_lo_avg
                       _calc_temp_rc
                       _calc_temp_rs
                      _m_mem_cpy_len
            _modbus_response_process
                  _pid_pwm1_idrv_run
                  _pid_pwm2_vout_run
                      _sys_data_init
                _uart_received_start
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (1) _uart_received_start                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sys_data_init                                       10    10      0    5677
                                             14 BANK0     10    10      0
                             ___wmul
                         _crc_verify
               _my_flash_system_read
                      _sys_data_save
 ---------------------------------------------------------------------------------
 (2) _my_flash_system_read                                11     7      4     311
                                              1 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _pid_pwm2_vout_run                                    6     6      0    1281
                                              0 BANK0      6     6      0
                            ___awdiv
                            ___lwdiv
                 _set_vout_pwm2_duty
 ---------------------------------------------------------------------------------
 (2) _set_vout_pwm2_duty                                   4     2      2     212
                                              7 COMMON     4     2      2
                 _get_vout_pwm2_duty
 ---------------------------------------------------------------------------------
 (3) _get_vout_pwm2_duty                                   6     4      2      25
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _pid_pwm1_idrv_run                                   12    12      0    3340
                                             18 BANK0     12    12      0
                            ___aldiv
                             ___lmul
                 _set_idrv_pwm1_duty
 ---------------------------------------------------------------------------------
 (2) _set_idrv_pwm1_duty                                   4     2      2     212
                                              7 COMMON     4     2      2
                 _get_idrv_pwm1_duty
 ---------------------------------------------------------------------------------
 (3) _get_idrv_pwm1_duty                                   6     4      2      25
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _modbus_response_process                              6     4      2   21794
                                             24 BANK0      6     4      2
                         _crc_verify
            _modbus_response_command
   _modbus_response_illgeal_function
_modbus_response_write_mult_register
_modbus_response_write_single_regist
 ---------------------------------------------------------------------------------
 (2) _modbus_response_write_single_register               12    12      0    6471
                                             12 BANK0     12    12      0
                         _crc_append
                      _sys_data_save
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (2) _modbus_response_write_mult_register                  5     5      0    5843
                                             12 BANK0      5     5      0
                         _crc_append
                      _sys_data_save
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (2) _sys_data_save                                        0     0      0    2878
                         _crc_append
         _my_flash_read_system_erase
              _my_flash_system_write
 ---------------------------------------------------------------------------------
 (3) _my_flash_system_write                               16    12      4     473
                                              1 COMMON     6     2      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) _my_flash_read_system_erase                           0     0      0     523
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (4) _FLASH_EraseBlock                                     3     1      2     523
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _modbus_response_illgeal_function                     4     3      1    2925
                                             12 BANK0      4     3      1
                         _crc_append
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (2) _modbus_response_command                             12    12      0    4254
                                             12 BANK0     12    12      0
                         _crc_append
                     _getRegisterVal
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (1) _uart_send_len                                        4     3      1     635
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _getRegisterVal                                      10     7      3     711
                                              1 COMMON    10     7      3
 ---------------------------------------------------------------------------------
 (3) _crc_append                                          11     7      4    1882
                                              7 COMMON     5     5      0
                                              6 BANK0      6     2      4
                            _crc_sum
 ---------------------------------------------------------------------------------
 (2) _crc_verify                                          10     6      4    1859
                                              8 COMMON     2     2      0
                                              6 BANK0      8     4      4
                            _crc_sum
                      _m_mem_cpy_len
 ---------------------------------------------------------------------------------
 (3) _m_mem_cpy_len                                        7     1      6     542
                                              1 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (4) _crc_sum                                             12     8      4     731
                                              1 COMMON     6     2      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _calc_temp_rs                                         8     4      4    2346
                                              5 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _calc_temp_rc                                        12     8      4    2346
                                              5 BANK0     12     8      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _calc_rs_lo_avg                                       9     7      2    1072
                                             10 COMMON     2     2      0
                                              5 BANK0      7     5      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     770
                                              1 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _calc_expect_vout_adc_value                          21    19      2    3624
                                             18 BANK0     21    19      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1576
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8    1345
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _adc_sample                                          12    10      2    1014
                                              4 COMMON     5     3      2
                                              0 BANK0      7     7      0
                           _adc_init
                       _fvr_set_gain
 ---------------------------------------------------------------------------------
 (2) _fvr_set_gain                                         3     3      0      69
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             2     2      0      22
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     121
                    _ADC1_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC1_Initialize
     _EUSART_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _WDT_Initialize
   _adc_sample
     _adc_init
     _fvr_set_gain
   _calc_expect_vout_adc_value
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _calc_rs_lo_avg
     ___lldiv
   _calc_temp_rc
     ___lldiv
     ___lmul
   _calc_temp_rs
     ___lldiv
     ___lmul
   _m_mem_cpy_len
   _modbus_response_process
     _crc_verify
       _crc_sum
       _m_mem_cpy_len
     _modbus_response_command
       _crc_append
         _crc_sum
       _getRegisterVal
       _uart_send_len
     _modbus_response_illgeal_function
       _crc_append
         _crc_sum
       _uart_send_len
     _modbus_response_write_mult_register
       _crc_append
         _crc_sum
       _sys_data_save
         _crc_append
           _crc_sum
         _my_flash_read_system_erase
           _FLASH_EraseBlock
         _my_flash_system_write
       _uart_send_len
     _modbus_response_write_single_register
       _crc_append
         _crc_sum
       _sys_data_save
         _crc_append
           _crc_sum
         _my_flash_read_system_erase
           _FLASH_EraseBlock
         _my_flash_system_write
       _uart_send_len
   _pid_pwm1_idrv_run
     ___aldiv
       ___lmul (ARG)
     ___lmul
     _set_idrv_pwm1_duty
       _get_idrv_pwm1_duty
   _pid_pwm2_vout_run
     ___awdiv
     ___lwdiv
     _set_vout_pwm2_duty
       _get_vout_pwm2_duty
   _sys_data_init
     ___wmul
     _crc_verify
       _crc_sum
       _m_mem_cpy_len
     _my_flash_system_read
     _sys_data_save
       _crc_append
         _crc_sum
       _my_flash_read_system_erase
         _FLASH_EraseBlock
       _my_flash_system_write
   _uart_received_start
   _uart_send_len

 _INTERRUPT_InterruptManager (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      2      38       7       70.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      D5      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              3C      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           20      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      D5      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Mar 30 11:16:19 2019

              __end_of_TMR2_SetInterruptHandler 1CF5                                               pc 0002  
                  ??_my_flash_read_system_erase 0074                                    ___awdiv@sign 0077  
                                            _x0 004B                                              _x1 00BC  
                                            _y0 004F                                              _y1 00C0  
                        __end_of_FVR_Initialize 1CE7                             ___wmul@multiplicand 0073  
                                           l603 1D6C                                             l621 1300  
                                           l615 12E6                                             l609 1D45  
                                           l634 17F9                                             l490 1E89  
                                           l714 142D                                             l804 0D41  
                                           l644 1551                                             l629 1500  
                                           l717 1481                                             l646 1597  
                                           l639 0C10                                             l665 0AA4  
                                           l768 1166                                             _GIE 005F  
                                           _PR2 001B                                 _pwm1DutyForIdrv 00D2  
                                           _x32 00B8                                             _y32 0047  
                                           _err 00A0                                 _TMR2_Initialize 1D31  
                                           wreg 0009                            ??_get_vout_pwm2_duty 0073  
                          ??_set_vout_pwm2_duty 0079                                 ??_uart_send_len 0072  
                                          S5239 1800                                            l1044 1282  
                                          l1133 0F8D                                            l1046 12A0  
                                          l1068 1DF6                                            l4001 104E  
                                          l4005 1057                                            l3303 1428  
                                          l5001 09BA                                            l4043 12F0  
                                          l3411 0EC2                                            l3403 0E8A  
                                          l3323 1459                                            l3315 143F  
                                          l4053 12F3                                            l3421 0EF7  
                                          l3413 0ECF                                            l3405 0E92  
                                          l3333 146C                                            l3325 145B  
                                          l4055 1329                                            l5007 09DB  
                                          l3431 0F24                                            l3423 0F00  
                                          l3415 0EDC                                            l3407 0EA2  
                                          l3433 0F2D                                            l3425 0F09  
                                          l3417 0EE5                                            l3409 0EB5  
                                          l5033 15ED                                            l3427 0F12  
                                          l3419 0EEE                                            l3347 1489  
                                          l5123 0D9E                                            l4165 1360  
                                          l4157 133C                                            l3429 0F1B  
                                          l3437 0F35                                            l5061 1256  
                                          l3439 0F42                                            l5063 125B  
                                          l5055 1242                                            l5039 163E  
                                          l3449 0F65                                            l3377 1E84  
                                          l5065 1260                                            l5153 0E47  
                                          l3619 1D65                                            l5059 1251  
                                          l4605 12C7                                            l5069 1267  
                                          l3661 10D5                                            l5165 0E7E  
                                          l5157 0E50                                            l4607 12CC  
                                          l3663 10FC                                            l5167 0E81  
                                          l4705 0C9F                                            l4811 16EA  
                                          l4731 0D13                                            l4741 0D49  
                                          l4639 1E5D                                            l4825 1ED7  
                                          l3881 11E5                                            l4905 17E5  
                                          l4649 1091                                            l4809 16B8  
                                          l4737 0D43                                            l3953 1198  
                                          l3849 1DF0                                            l3891 1213  
                                          l3883 11F3                                            l4907 17F1  
                                          l3971 11BE                                            l3963 11A0  
                                          l3947 118D                                            l4829 1EE2  
                                          l4685 0C4B                                            l4933 0BF1  
                                          l3965 11AC                                            l4855 0FAE  
                                          l4847 0F9E                                            l3895 121E  
                                          l4599 12B2                                            l4679 0C3B  
                                          l4935 0BF9                                            l3975 11C7  
                                          l4873 0FF5                                            l4865 0FDC  
                                          l4857 0FBC                                            l4697 0C81  
                                          l4937 0C08                                            l3993 1030  
                                          l4953 1562                                            l3979 11CF  
                                          l3995 103C                                            l4869 0FE7  
                                          l4973 08BB                                            l4797 16B7  
                                          l4965 15A8                                            l4983 0918  
                                          l4887 14EC                                            l4889 14F8  
                                          l4987 0920                         __end_of_PWM1_Initialize 1D88  
                                          u2115 1412                                            _LATA 010C  
                                          u2215 1DAA                                            u3015 103D  
                                          _LATC 010E                                            u3105 12FC  
                                          u2145 144D                                            u3025 1047  
                                          u2225 1DC3                                            u2305 1E53  
                                          u3035 104F                                            u4005 0CC0  
                                          u2270 113F                                            u2175 1433  
                                          u2345 10DB                                            u3085 130D  
                                          u4125 1692                                            u3095 1315  
                                          u2295 1E37                                            u4225 0FB1  
                                          u4245 0FBD                                            u4165 1EE3  
                                          u2725 11E8                                            u2645 1DF7  
                                          u4255 0FD1                                            u4175 1EEA  
                                          u4415 08ED                                            u2655 1DFC  
                                          u4265 0FDD                                            u4425 090E  
                                          u2745 11F4                                            u2755 1208  
                                          u2915 11A3                                            u4453 09B0  
                                          u2765 1214                                            u4365 154A  
                                          u2935 11AD                                            u4375 155B  
                                          u4473 09D4                                            u2945 11B7  
                                          u4385 1590                                            u4625 0DDC  
                                          u2955 11BF                                            u4395 15A1  
                                          u4635 0DF3                                            u4645 0E0A  
                                          u3855 1288                                            u3945 0C58  
                                          u3875 108D                                            u2995 1033  
                                          u4767 12E1                                   _m_mem_cpy_len 1E5D  
                                          _TMR2 001A                                            _WPUA 020C  
                                          _WPUC 020E                                            _main 0D72  
modbus_response_write_single_register@startAddr 0036                                            _pidU 00CE  
           __size_of_my_flash_read_system_erase 0023                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            _xlen 0066  
                                          btemp 007E                                            start 0867  
                               _pwm2DutyForVout 00D4                       ??_modbus_response_command 002C  
                       __end_of_PWM2_Initialize 1DA1                       ??_modbus_response_process 003A  
                               ?_FVR_Initialize 0070                  __size_of_OSCILLATOR_Initialize 0001  
                 __end_of_OSCILLATOR_Initialize 0FFF                                 __end_of___aldiv 0FFE  
                                         ?_main 0070                                 __end_of___awdiv 11D4  
                               __end_of___lldiv 1227                                 ___awdiv@divisor 0071  
                                         _T2CON 001C                                 __end_of___lwdiv 105C  
                               ___awdiv@counter 0076                                           _RCREG 0199  
                                         _RCSTA 019D                                           _TRISA 008C  
                                         _TRISC 008E                                           _TXREG 019A  
                                         _TXSTA 019E                modbus_response_command@startAddr 0030  
                           ___lmul@multiplicand 0075                                           _PidKp 0057  
                                         _PidTd 00C8                                           _Event 006B  
                                         _PidTi 00CA                                 __end_of_crc_sum 12D1  
                                _WDT_Initialize 1CE7                                           _resRc 006E  
                                         _resRs 006C          modbus_response_write_mult_register@len 002E  
                                ?_m_mem_cpy_len 0071          modbus_response_write_mult_register@stb 0030  
                    __end_of_get_idrv_pwm1_duty 1DBA                      __end_of_set_idrv_pwm1_duty 1E41  
                            crc_verify@expected 002C                                           status 0003  
                                         wtemp0 007E                                 _TMR2_StartTimer 1CE0  
                                 fvr_set_gain@g 0073     __end_of_modbus_response_write_mult_register 1401  
  __size_of_modbus_response_write_mult_register 0072           ??_modbus_response_write_mult_register 002C  
          ?_modbus_response_write_mult_register 0070             _modbus_response_write_mult_register 138F  
            __end_of_calc_expect_vout_adc_value 0AA9                      _calc_expect_vout_adc_value 08B5  
                              __end_of_HexTable 182F                            pid_pwm1_idrv_run@t32 003A  
                               __initialization 0869                                    __end_of_main 0E83  
                         __size_of_calc_temp_rc 00D9                           __size_of_calc_temp_rs 0090  
                       __end_of_TMR2_Initialize 1D44                     ?_INTERRUPT_InterruptManager 0070  
           modbus_response_illgeal_function@buf 002E                        _TMR2_SetInterruptHandler 1CEF  
                                        ??_main 00D6                                ??_calc_rs_lo_avg 007A  
                   modbus_response_process@rbuf 003D                   __size_of_my_flash_system_read 0038  
                   modbus_response_process@rlen 0038                     modbus_response_process@resp 003B  
               __end_of_modbus_response_command 1727                          __end_of_WDT_Initialize 1CEB  
                  my_flash_system_write@blocNum 0023                                          _ADCON0 009D  
                                        _ADCON1 009E                                          _ADCON2 009F  
                                        _ADRESH 009C                                          _ADRESL 009B  
                              ___awdiv@dividend 0073                                          _ANSELA 018C  
                                        _ANSELC 018E                 __end_of_modbus_response_process 127B  
                              __end_of_adc_init 1D58                                ?_PWM1_Initialize 0070  
                                        _ODCONA 028C                                          _ODCONC 028E  
                                        i1l4401 0836                                          i1l4411 0844  
                                        i1l4417 085A                                          i1l4419 085E  
                                        i1l4383 081E                                          i1l4389 0824  
                                        i1l4399 0831                                          _FVRCON 0117  
                                        _PMADRH 0192                                          _PMADRL 0191  
                                        _PMDATH 0194                                          _PMDATL 0193  
                                        _PMCON2 0196                       __size_of_FLASH_EraseBlock 001C  
                   __end_of_uart_received_start 1CEF                                          _SPBRGH 019C  
                                        _SPBRGL 019B                                          _WDTCON 0097  
                                  _calc_temp_rc 1727                                    _calc_temp_rs 148F  
                               calc_rs_lo_avg@i 002B                                 calc_rs_lo_avg@x 0025  
            __end_of_my_flash_read_system_erase 1028                      _my_flash_read_system_erase 1005  
    modbus_response_write_single_register@pmdbs 0034                                          ___lmul 1ECE  
                                     ??___aldiv 0079                                          ___wmul 1DEE  
                                     ??___awdiv 0075                                       ??___lldiv 0079  
                                     ??___lwdiv 0075                                ?_PWM2_Initialize 0070  
                                        _pwm2Ei 00C4                                ___awdiv@quotient 0078  
                      my_flash_system_write@buf 0071                        my_flash_system_write@len 0073  
                      my_flash_system_write@loc 0025                                       ??_crc_sum 0075  
                      __size_of_ADC1_Initialize 0009                                          _rxtemp 0067  
                               ?_WDT_Initialize 0070                                 ??_m_mem_cpy_len 0077  
              my_flash_system_write@GIEBitValue 0022                         __end_of_TMR2_StartTimer 1CE3  
      TMR2_SetInterruptHandler@InterruptHandler 0071                 modbus_response_command@tempData 0036  
      __end_of_modbus_response_illgeal_function 1183       __size_of_modbus_response_illgeal_function 0042  
            ??_modbus_response_illgeal_function 002D               ?_modbus_response_illgeal_function 002C  
              _modbus_response_illgeal_function 1141                                   ?_fvr_set_gain 0070  
                                fvr_set_gain@t8 0072                               _SYSTEM_Initialize 1DD3  
                       __end_of__initialization 08B1                          __size_of_sys_data_init 00B8  
                         _my_flash_system_write 1401                              ?_SYSTEM_Initialize 0070  
                        __size_of_sys_data_save 0037                              getRegisterVal@addr 0071  
                                __pcstackCOMMON 0070                                    __pidataBANK0 1001  
                                  __pidataBANK1 1CF5                             ??_SYSTEM_Initialize 0073  
                                    _adc_sample 12D1          modbus_response_write_single_register@i 0033  
                              ?_TMR2_Initialize 0070                                  _OPTION_REGbits 0095  
      modbus_response_write_single_register@t16 0031                               crc_append@message 0026  
                        getRegisterVal@tempAddr 007A                          my_flash_system_write@i 0029  
                        my_flash_system_write@j 0020                          getRegisterVal@tempData 0073  
                     __end_of_SYSTEM_Initialize 1DEE                                  ??_fvr_set_gain 0071  
                                    __pbssBANK0 0047                                      __pbssBANK1 00A0  
                                    __pbssBANK2 0120                  modbus_response_command@tmpAddr 002E  
               my_flash_system_read@GIEBitValue 0077                                      adc_init@ch 0072  
                              ??_FVR_Initialize 0071                                      __pmaintext 0D72  
                    modbus_response_command@len 0034                                         ?___lmul 0071  
                                       ?___wmul 0071                                      __pintentry 0804  
                  ??_calc_expect_vout_adc_value 0034                                         _BAUDCON 019F  
                                ___lmul@product 0020                                      _crc_append 1E9D  
                                     ?_adc_init 0070                                    adc_sample@ch 0020  
                                 _sys_data_init 15B0                                   _sys_data_save 1093  
                                    _crc_verify 105C                                   _eusartRxCount 006A  
                   __size_of_get_vout_pwm2_duty 0019                     __size_of_set_vout_pwm2_duty 001C  
                                       _PWM1DCH 0D94                                         _PWM1DCL 0D93  
                                       _PWM2DCH 0DA4                                         _PWM2DCL 0DA3  
                                       _PWM1CON 0D9B                                         _PWM2CON 0DAB  
                                       _PWM1OFH 0D98                                         _PWM1OFL 0D97  
                                       _PWM2OFH 0DA8                                         _PWM1PHH 0D92  
                                       _PWM2OFL 0DA7                                         _PWM1PHL 0D91  
                                       _PWM2PHH 0DA2                                         _PWM2PHL 0DA1  
                                       _PWM1PRH 0D96                                         _PWM1PRL 0D95  
                                       _PWM2PRH 0DA6                                         _PWM2PRL 0DA5  
         modbus_response_illgeal_function@pmdbs 002F                                         _PPSLOCK 0E0F  
                             ??_ADC1_Initialize 0071                                ?_TMR2_StartTimer 0070  
                        set_idrv_pwm1_duty@duty 0077                           __end_of_uart_send_len 1E9D  
                              _FLASH_EraseBlock 1E09                          ?_my_flash_system_write 0071  
                       __size_of_getRegisterVal 00F9                     ?_calc_expect_vout_adc_value 0032  
   modbus_response_write_single_register@fiSave 0030                      ??_TMR2_SetInterruptHandler 0073  
                                       ___aldiv 0F7C                                         ___awdiv 1183  
                               __size_of___lmul 0032                                         ___lldiv 11D4  
                               __size_of___wmul 001B                              _get_idrv_pwm1_duty 1DA1  
                            _set_idrv_pwm1_duty 1E25                                         ___lwdiv 1028  
                                   ?_adc_sample 0074                                  adc_sample@gfvr 0074  
                                ?_sys_data_init 0070                                  ?_sys_data_save 0070  
                                    ??_adc_init 0071                                         __ptext1 1CEB  
                                       __ptext2 15B0                                         __ptext3 10CA  
                                       __ptext4 1DEE                                         __ptext5 151F  
                                       __ptext6 1E41                                         __ptext7 1DBA  
                                       __ptext8 1028                                         __ptext9 1183  
                                       _crc_sum 127B                                         _pidBbSm 0065  
                           ?_get_idrv_pwm1_duty 0071                             ?_set_idrv_pwm1_duty 0077  
                         _OSCILLATOR_Initialize 0FFE                                       _T2CONbits 001C  
                                    _rsLoAvgBuf 00AC                                         _rsLoAvg 0053  
                              ___aldiv@dividend 0028                        ??_PIN_MANAGER_Initialize 0071  
                                       _sysData 235C                      __size_of_SYSTEM_Initialize 001B  
                                       clrloop0 1D07                            end_of_initialization 08B1  
                                       init_ram 1D12                        ?_modbus_response_command 0070  
                                       initloop 1D13                    __end_of_my_flash_system_read 1102  
                          ??_get_idrv_pwm1_duty 0073                            ??_set_idrv_pwm1_duty 0079  
                             _EUSART_Initialize 1D1E                                 ___lldiv@divisor 0071  
                                    _voExpectMv 00C6                                 ___lldiv@counter 0024  
                            ?_EUSART_Initialize 0070                        ?_modbus_response_process 0038  
                                     _RCSTAbits 019D                     ?_my_flash_read_system_erase 0070  
                              ___aldiv@quotient 002E                                       _PWM1LDCON 0D9F  
                                     _PWM2LDCON 0DAF                                       _PWM1OFCON 0DA0  
                                     _PWM2OFCON 0DB0                            __end_of_fvr_set_gain 1D6F  
                                   ?_crc_append 0026                                      _subTickerX 0069  
                           ??_EUSART_Initialize 0071                                ??_WDT_Initialize 0071  
                                   ?_crc_verify 0026                                      crc_sum@crc 0024  
                                    crc_sum@buf 0071                                      crc_sum@len 0073  
                                     _RXPPSbits 0E15                             __size_of_adc_sample 005D  
                     __end_of_EUSART_Initialize 1D31                                    _globalTicker 00CC  
                                     _TXSTAbits 019E                        __size_of_PWM1_Initialize 0019  
                  __size_of_uart_received_start 0004                    _TMR2_DefaultInterruptHandler 0000  
                               ??_sys_data_init 002E                                 ??_sys_data_save 007C  
                                __end_of___lmul 1F00                                  __end_of___wmul 1E09  
                              _voExpectAdcValue 0055                                  _rtAdcValueRcHi 005B  
                                _rtAdcValueRcLo 005D                                  _rtAdcValueRsHi 005F  
                                _rtAdcValueVoFb 0059                                  _rtAdcValueRsLo 0061  
                        ?_OSCILLATOR_Initialize 0070                               crc_verify@message 0026  
                           start_initialization 0869                        __size_of_PWM2_Initialize 0019  
               __size_of_PIN_MANAGER_Initialize 003F                                   _PWM1LDCONbits 0D9F  
                       my_flash_system_read@buf 0071                         my_flash_system_read@len 0073  
                         __end_of_m_mem_cpy_len 1E7A                                   _PWM2LDCONbits 0DAF  
                                _getRegisterVal 0E83                         __size_of_calc_rs_lo_avg 0061  
                           __size_of_crc_append 0031                             __size_of_crc_verify 0037  
     modbus_response_write_single_register@rbuf 0035                                        ??___lmul 0079  
                                      ??___wmul 0075                                     __pdataBANK0 006C  
                                   __pdataBANK1 00CE                     FLASH_EraseBlock@GIEBitValue 0073  
                               _ADC1_Initialize 1CFD                        __end_of_FLASH_EraseBlock 1E25  
                          _my_flash_system_read 10CA                                     __pbssBIGRAM 235C  
                             __size_of_adc_init 0014                                     __pbssCOMMON 007C  
                                     ___latbits 0002                               getRegisterVal@t16 0078  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00D6  
                      __size_of_TMR2_Initialize 0013                         ??_my_flash_system_write 0075  
                        __end_of_getRegisterVal 0F7C                           my_flash_system_read@i 007A  
                    __size_of_EUSART_Initialize 0013         modbus_response_illgeal_function@errcode 002C  
                         __size_of_fvr_set_gain 0017                                ___lwdiv@dividend 0073  
                        _PIN_MANAGER_Initialize 1102                     modbus_response_command@rbuf 0035  
                                      ?___aldiv 0024                           get_idrv_pwm1_duty@t16 0075  
                                      ?___awdiv 0071                                        ?___lldiv 0071  
                                  ??_adc_sample 0076                                     adc_sample@i 0021  
                                      ?___lwdiv 0071                               ??_PWM1_Initialize 0071  
                  ??_INTERRUPT_InterruptManager 0070                           set_idrv_pwm1_duty@t16 0079  
                                     __pswtext1 1800                                        ?_crc_sum 0071  
                 my_flash_system_read@flashAddr 0078                      __end_of_get_vout_pwm2_duty 1DD3  
                         ?_my_flash_system_read 0071                      __end_of_set_vout_pwm2_duty 1E5D  
                              uart_send_len@buf 0074                                uart_send_len@len 0071  
                                 adc_sample@t16 0025                                ___lwdiv@quotient 0076  
                                 adc_sample@ret 0023                                   adc_sample@num 0075  
                               ?_getRegisterVal 0071                                    _fvr_set_gain 1D58  
                                _eusartRxBuffer 0140                                       _modbusBuf 0120  
                               ___aldiv@divisor 0024                               ??_PWM2_Initialize 0071  
                            __end_of_adc_sample 132E                                 ___aldiv@counter 002C  
                                ___wmul@product 0075                                       _pidpwm2_U 00D0  
                             _pid_pwm1_idrv_run 0AA9                                       clear_ram0 1D06  
                                m_mem_cpy_len@d 0071                                  m_mem_cpy_len@s 0073  
                                 ?_calc_temp_rc 0025                                   ?_calc_temp_rs 0025  
                                      _PIE1bits 0091                        __size_of_TMR2_StartTimer 0003  
                        set_vout_pwm2_duty@duty 0077             __size_of_INTERRUPT_InterruptManager 0063  
                            ?_pid_pwm1_idrv_run 0070                         __end_of_ADC1_Initialize 1D06  
                                      _PIR1bits 0011                                        _PIR3bits 0013  
                     FLASH_EraseBlock@startAddr 0071                                        _PWM1INTE 0D9C  
                                      _PWM1INTF 0D9D                                        _PWM2INTE 0DAC  
                                      _PWM2INTF 0DAD                                        _PWM1TMRH 0D9A  
                                      _PWM1TMRL 0D99                                        _PWM2TMRH 0DAA  
                                      _PWM2TMRL 0DA9                                    ??_crc_append 0077  
              __size_of_modbus_response_command 00BF                             ??_pid_pwm1_idrv_run 0032  
                        __size_of_uart_send_len 0023                                      _ADCON0bits 009D  
                             ___wmul@multiplier 0071                                    ??_crc_verify 0078  
                       __size_of_FVR_Initialize 0004                __size_of_modbus_response_process 0054  
             __size_of_TMR2_SetInterruptHandler 0006                       ?_TMR2_SetInterruptHandler 0071  
                                   _isRunInBoot 0FFF                             _uart_received_start 1CEB  
                             _pid_pwm2_vout_run 151F                                        _HexTable 181E  
                             ___lmul@multiplier 0071                                crc_verify@crccal 002A  
                                _calc_rs_lo_avg 132E                              ?_pid_pwm2_vout_run 0070  
                     __end_of_pid_pwm1_idrv_run 0C1E                               ??_TMR2_Initialize 0073  
                                ??_calc_temp_rc 0029                                  ??_calc_temp_rs 0029  
                            __end_of_crc_append 1ECE                               calc_rs_lo_avg@t32 0027  
                   __size_of_get_idrv_pwm1_duty 0019                     __size_of_set_idrv_pwm1_duty 001C  
                           ??_pid_pwm2_vout_run 0020                              __end_of_crc_verify 1093  
                                  _PWM1INTFbits 0D9D                            ?_uart_received_start 0070  
                                  _PWM2INTFbits 0DAD                         ??_OSCILLATOR_Initialize 0071  
       modbus_response_write_mult_register@rbuf 002F                                __size_of___aldiv 0082  
                              __size_of___awdiv 0051                                __size_of___lldiv 0053  
                              __size_of___lwdiv 0034                          ??_my_flash_system_read 0075  
                                      _adc_init 1D44                                __size_of_crc_sum 0056  
                         pid_pwm2_vout_run@__ei 0022                             _eusartRxIdleTime_ms 007C  
                     __end_of_pid_pwm2_vout_run 15B0                                   crc_append@crc 002A  
                              sys_data_init@ret 0034                                 ___lwdiv@divisor 0071  
                               ___lwdiv@counter 0078                                        __ptext10 0AA9  
                                      __ptext11 1E25                                        __ptext20 1141  
                                      __ptext12 1DA1                                        __ptext21 1668  
                                      __ptext13 1227                                        __ptext30 132E  
                                      __ptext22 1E7A                                        __ptext14 0C1E  
                                      __ptext31 11D4                                        __ptext23 0E83  
                                      __ptext15 138F                                        __ptext40 1D31  
                                      __ptext32 08B5                                        __ptext24 1E9D  
                                      __ptext16 1093                                        __ptext41 1CE0  
                                      __ptext33 1ECE                                        __ptext25 105C  
                                      __ptext17 1401                                        __ptext42 1CEF  
                                      __ptext34 0F7C                                        __ptext26 1E5D  
                                      __ptext18 1005                                        __ptext43 1D88  
                                      __ptext35 12D1                                        __ptext27 127B  
                                      __ptext19 1E09                                        __ptext44 1D6F  
                                      __ptext36 1D58                                        __ptext28 148F  
                                      __ptext45 1102                                        __ptext37 1D44  
                                      __ptext29 1727                                        __ptext46 0FFE  
                                      __ptext38 1DD3                                        __ptext47 1CE3  
                                      __ptext39 1CE7                                        __ptext48 1D1E  
                                      __ptext49 1CFD                          __end_of_calc_rs_lo_avg 138F  
                                 _uart_send_len 1E7A                           get_vout_pwm2_duty@t16 0075  
                                 __size_of_main 0111                                   _subTickerX_1s 0068  
                         set_vout_pwm2_duty@t16 0079                                      _RA4PPSbits 0E94  
                         ??_uart_received_start 0071                                      _RA5PPSbits 0E95  
                              ?_ADC1_Initialize 0070                  my_flash_system_write@flashAddr 0027  
                                      int$flags 007E                                        crc_sum@i 0022  
                                      crc_sum@j 0020                                      _RC5PPSbits 0EA5  
 __end_of_modbus_response_write_single_register 0D72  __size_of_modbus_response_write_single_register 0154  
       ??_modbus_response_write_single_register 002C          ?_modbus_response_write_single_register 0070  
         _modbus_response_write_single_register 0C1E                               ??_TMR2_StartTimer 0071  
            __end_of_INTERRUPT_InterruptManager 0867                      _INTERRUPT_InterruptManager 0804  
                         __end_of_sys_data_init 1668                           __end_of_sys_data_save 10CA  
                             ?_FLASH_EraseBlock 0071                   calc_expect_vout_adc_value@t32 0042  
                   PIN_MANAGER_Initialize@state 0071                        modbus_response_command@i 0032  
                            ??_FLASH_EraseBlock 0073                                      _INTCONbits 000B  
                                   _PWM1CONbits 0D9B                                m_mem_cpy_len@len 0075  
                                    _FVRCONbits 0117                                     _PWM2CONbits 0DAB  
                               ?_calc_rs_lo_avg 0025                    modbus_response_process@pmdbs 003C  
                       __size_of_WDT_Initialize 0004                                  ?_uart_send_len 0071  
                                      intlevel1 0000                  __size_of_my_flash_system_write 008E  
                          pid_pwm2_vout_run@t16 0024                   __end_of_my_flash_system_write 148F  
                    __size_of_pid_pwm1_idrv_run 0175                                      _PMCON1bits 0195  
                              ___lldiv@dividend 0075                         ?_PIN_MANAGER_Initialize 0070  
  modbus_response_write_mult_register@startAddr 002D                                  uart_send_len@i 0073  
                                   _PPSLOCKbits 0E0F                                 _PWM1_Initialize 1D6F  
                  modbus_response_command@pmdbs 0033                         _modbus_response_command 1668  
                                    _PWM1CLKCON 0D9E                                      _PWM2CLKCON 0DAE  
                        __size_of_m_mem_cpy_len 001D                                   __pstringtext1 181E  
                                _FVR_Initialize 1CE3                         _modbus_response_process 1227  
                                sys_data_init@i 0036                                     crc_append@n 0028  
                          __end_of_calc_temp_rc 1800                            __end_of_calc_temp_rs 151F  
                              ___lldiv@quotient 0020                                ??_getRegisterVal 0074  
                               _PWM2_Initialize 1D88                      __size_of_pid_pwm2_vout_run 0091  
                                  ___aldiv@sign 002D                     calc_expect_vout_adc_value@i 0046  
                   calc_expect_vout_adc_value@x 0032             __size_of_calc_expect_vout_adc_value 01F4  
                __end_of_PIN_MANAGER_Initialize 1141                              _get_vout_pwm2_duty 1DBA  
                            _set_vout_pwm2_duty 1E41                           _TMR2_InterruptHandler 0063  
                                   crc_verify@n 0028                             ?_get_vout_pwm2_duty 0071  
                           ?_set_vout_pwm2_duty 0077  
