

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Tue Nov 27 00:30:59 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1575
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	swtext1,local,class=CONST,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	swtext2,local,class=CONST,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text36,local,class=CODE,merge=1,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2
    64                           	psect	text42,local,class=CODE,merge=1,delta=2
    65                           	psect	text43,local,class=CODE,merge=1,delta=2
    66                           	psect	text44,local,class=CODE,merge=1,delta=2
    67                           	psect	text45,local,class=CODE,merge=1,delta=2
    68                           	psect	text46,local,class=CODE,merge=1,delta=2
    69                           	psect	text47,local,class=CODE,merge=1,delta=2
    70                           	psect	text48,local,class=CODE,merge=1,delta=2
    71                           	psect	text49,local,class=CODE,merge=1,delta=2
    72                           	psect	text50,local,class=CODE,merge=1,delta=2
    73                           	psect	intentry,global,class=CODE,delta=2
    74                           	dabs	1,0x620,32
    75                           	dabs	1,0x5A0,80
    76                           	dabs	1,0x55C,20
    77                           	dabs	1,0xFFF,1,_isRunInBoot
    78                           	dabs	1,0x235C,0,_sysData
    79                           	dabs	1,0x7E,2
    80  0000                     
    81                           ; Version 1.42
    82                           ; Generated 13/04/2017 GMT
    83                           ; 
    84                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC16F1575 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000E                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  008C                     	;# 
   142  008E                     	;# 
   143  0091                     	;# 
   144  0092                     	;# 
   145  0093                     	;# 
   146  0095                     	;# 
   147  0096                     	;# 
   148  0097                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009A                     	;# 
   152  009B                     	;# 
   153  009B                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  009F                     	;# 
   158  010C                     	;# 
   159  010E                     	;# 
   160  0111                     	;# 
   161  0112                     	;# 
   162  0113                     	;# 
   163  0114                     	;# 
   164  0115                     	;# 
   165  0116                     	;# 
   166  0117                     	;# 
   167  0118                     	;# 
   168  0119                     	;# 
   169  018C                     	;# 
   170  018E                     	;# 
   171  0191                     	;# 
   172  0191                     	;# 
   173  0192                     	;# 
   174  0193                     	;# 
   175  0193                     	;# 
   176  0194                     	;# 
   177  0195                     	;# 
   178  0196                     	;# 
   179  0197                     	;# 
   180  0199                     	;# 
   181  019A                     	;# 
   182  019B                     	;# 
   183  019B                     	;# 
   184  019C                     	;# 
   185  019D                     	;# 
   186  019E                     	;# 
   187  019F                     	;# 
   188  020C                     	;# 
   189  020E                     	;# 
   190  028C                     	;# 
   191  028E                     	;# 
   192  030C                     	;# 
   193  030E                     	;# 
   194  038C                     	;# 
   195  038E                     	;# 
   196  0391                     	;# 
   197  0392                     	;# 
   198  0393                     	;# 
   199  0397                     	;# 
   200  0398                     	;# 
   201  0399                     	;# 
   202  0691                     	;# 
   203  0692                     	;# 
   204  0693                     	;# 
   205  0694                     	;# 
   206  0695                     	;# 
   207  0D8E                     	;# 
   208  0D8F                     	;# 
   209  0D90                     	;# 
   210  0D91                     	;# 
   211  0D91                     	;# 
   212  0D92                     	;# 
   213  0D93                     	;# 
   214  0D93                     	;# 
   215  0D94                     	;# 
   216  0D95                     	;# 
   217  0D95                     	;# 
   218  0D96                     	;# 
   219  0D97                     	;# 
   220  0D97                     	;# 
   221  0D98                     	;# 
   222  0D99                     	;# 
   223  0D99                     	;# 
   224  0D9A                     	;# 
   225  0D9B                     	;# 
   226  0D9C                     	;# 
   227  0D9C                     	;# 
   228  0D9D                     	;# 
   229  0D9D                     	;# 
   230  0D9E                     	;# 
   231  0D9F                     	;# 
   232  0DA0                     	;# 
   233  0DA1                     	;# 
   234  0DA1                     	;# 
   235  0DA2                     	;# 
   236  0DA3                     	;# 
   237  0DA3                     	;# 
   238  0DA4                     	;# 
   239  0DA5                     	;# 
   240  0DA5                     	;# 
   241  0DA6                     	;# 
   242  0DA7                     	;# 
   243  0DA7                     	;# 
   244  0DA8                     	;# 
   245  0DA9                     	;# 
   246  0DA9                     	;# 
   247  0DAA                     	;# 
   248  0DAB                     	;# 
   249  0DAC                     	;# 
   250  0DAC                     	;# 
   251  0DAD                     	;# 
   252  0DAD                     	;# 
   253  0DAE                     	;# 
   254  0DAF                     	;# 
   255  0DB0                     	;# 
   256  0DB1                     	;# 
   257  0DB1                     	;# 
   258  0DB2                     	;# 
   259  0DB3                     	;# 
   260  0DB3                     	;# 
   261  0DB4                     	;# 
   262  0DB5                     	;# 
   263  0DB5                     	;# 
   264  0DB6                     	;# 
   265  0DB7                     	;# 
   266  0DB7                     	;# 
   267  0DB8                     	;# 
   268  0DB9                     	;# 
   269  0DB9                     	;# 
   270  0DBA                     	;# 
   271  0DBB                     	;# 
   272  0DBC                     	;# 
   273  0DBC                     	;# 
   274  0DBD                     	;# 
   275  0DBD                     	;# 
   276  0DBE                     	;# 
   277  0DBF                     	;# 
   278  0DC0                     	;# 
   279  0DC1                     	;# 
   280  0DC1                     	;# 
   281  0DC2                     	;# 
   282  0DC3                     	;# 
   283  0DC3                     	;# 
   284  0DC4                     	;# 
   285  0DC5                     	;# 
   286  0DC5                     	;# 
   287  0DC6                     	;# 
   288  0DC7                     	;# 
   289  0DC7                     	;# 
   290  0DC8                     	;# 
   291  0DC9                     	;# 
   292  0DC9                     	;# 
   293  0DCA                     	;# 
   294  0DCB                     	;# 
   295  0DCC                     	;# 
   296  0DCC                     	;# 
   297  0DCD                     	;# 
   298  0DCD                     	;# 
   299  0DCE                     	;# 
   300  0DCF                     	;# 
   301  0DD0                     	;# 
   302  0E0F                     	;# 
   303  0E10                     	;# 
   304  0E11                     	;# 
   305  0E12                     	;# 
   306  0E13                     	;# 
   307  0E14                     	;# 
   308  0E15                     	;# 
   309  0E16                     	;# 
   310  0E17                     	;# 
   311  0E90                     	;# 
   312  0E91                     	;# 
   313  0E92                     	;# 
   314  0E94                     	;# 
   315  0E95                     	;# 
   316  0EA0                     	;# 
   317  0EA1                     	;# 
   318  0EA2                     	;# 
   319  0EA3                     	;# 
   320  0EA4                     	;# 
   321  0EA5                     	;# 
   322  0FE4                     	;# 
   323  0FE5                     	;# 
   324  0FE6                     	;# 
   325  0FE7                     	;# 
   326  0FE8                     	;# 
   327  0FE8                     	;# 
   328  0FE9                     	;# 
   329  0FEA                     	;# 
   330  0FEA                     	;# 
   331  0FEB                     	;# 
   332  0FED                     	;# 
   333  0FEE                     	;# 
   334  0FEE                     	;# 
   335  0FEF                     	;# 
   336  0000                     	;# 
   337  0001                     	;# 
   338  0002                     	;# 
   339  0003                     	;# 
   340  0004                     	;# 
   341  0005                     	;# 
   342  0006                     	;# 
   343  0007                     	;# 
   344  0008                     	;# 
   345  0009                     	;# 
   346  000A                     	;# 
   347  000B                     	;# 
   348  000C                     	;# 
   349  000E                     	;# 
   350  0011                     	;# 
   351  0012                     	;# 
   352  0013                     	;# 
   353  0015                     	;# 
   354  0016                     	;# 
   355  0016                     	;# 
   356  0017                     	;# 
   357  0018                     	;# 
   358  0019                     	;# 
   359  001A                     	;# 
   360  001B                     	;# 
   361  001C                     	;# 
   362  008C                     	;# 
   363  008E                     	;# 
   364  0091                     	;# 
   365  0092                     	;# 
   366  0093                     	;# 
   367  0095                     	;# 
   368  0096                     	;# 
   369  0097                     	;# 
   370  0098                     	;# 
   371  0099                     	;# 
   372  009A                     	;# 
   373  009B                     	;# 
   374  009B                     	;# 
   375  009C                     	;# 
   376  009D                     	;# 
   377  009E                     	;# 
   378  009F                     	;# 
   379  010C                     	;# 
   380  010E                     	;# 
   381  0111                     	;# 
   382  0112                     	;# 
   383  0113                     	;# 
   384  0114                     	;# 
   385  0115                     	;# 
   386  0116                     	;# 
   387  0117                     	;# 
   388  0118                     	;# 
   389  0119                     	;# 
   390  018C                     	;# 
   391  018E                     	;# 
   392  0191                     	;# 
   393  0191                     	;# 
   394  0192                     	;# 
   395  0193                     	;# 
   396  0193                     	;# 
   397  0194                     	;# 
   398  0195                     	;# 
   399  0196                     	;# 
   400  0197                     	;# 
   401  0199                     	;# 
   402  019A                     	;# 
   403  019B                     	;# 
   404  019B                     	;# 
   405  019C                     	;# 
   406  019D                     	;# 
   407  019E                     	;# 
   408  019F                     	;# 
   409  020C                     	;# 
   410  020E                     	;# 
   411  028C                     	;# 
   412  028E                     	;# 
   413  030C                     	;# 
   414  030E                     	;# 
   415  038C                     	;# 
   416  038E                     	;# 
   417  0391                     	;# 
   418  0392                     	;# 
   419  0393                     	;# 
   420  0397                     	;# 
   421  0398                     	;# 
   422  0399                     	;# 
   423  0691                     	;# 
   424  0692                     	;# 
   425  0693                     	;# 
   426  0694                     	;# 
   427  0695                     	;# 
   428  0D8E                     	;# 
   429  0D8F                     	;# 
   430  0D90                     	;# 
   431  0D91                     	;# 
   432  0D91                     	;# 
   433  0D92                     	;# 
   434  0D93                     	;# 
   435  0D93                     	;# 
   436  0D94                     	;# 
   437  0D95                     	;# 
   438  0D95                     	;# 
   439  0D96                     	;# 
   440  0D97                     	;# 
   441  0D97                     	;# 
   442  0D98                     	;# 
   443  0D99                     	;# 
   444  0D99                     	;# 
   445  0D9A                     	;# 
   446  0D9B                     	;# 
   447  0D9C                     	;# 
   448  0D9C                     	;# 
   449  0D9D                     	;# 
   450  0D9D                     	;# 
   451  0D9E                     	;# 
   452  0D9F                     	;# 
   453  0DA0                     	;# 
   454  0DA1                     	;# 
   455  0DA1                     	;# 
   456  0DA2                     	;# 
   457  0DA3                     	;# 
   458  0DA3                     	;# 
   459  0DA4                     	;# 
   460  0DA5                     	;# 
   461  0DA5                     	;# 
   462  0DA6                     	;# 
   463  0DA7                     	;# 
   464  0DA7                     	;# 
   465  0DA8                     	;# 
   466  0DA9                     	;# 
   467  0DA9                     	;# 
   468  0DAA                     	;# 
   469  0DAB                     	;# 
   470  0DAC                     	;# 
   471  0DAC                     	;# 
   472  0DAD                     	;# 
   473  0DAD                     	;# 
   474  0DAE                     	;# 
   475  0DAF                     	;# 
   476  0DB0                     	;# 
   477  0DB1                     	;# 
   478  0DB1                     	;# 
   479  0DB2                     	;# 
   480  0DB3                     	;# 
   481  0DB3                     	;# 
   482  0DB4                     	;# 
   483  0DB5                     	;# 
   484  0DB5                     	;# 
   485  0DB6                     	;# 
   486  0DB7                     	;# 
   487  0DB7                     	;# 
   488  0DB8                     	;# 
   489  0DB9                     	;# 
   490  0DB9                     	;# 
   491  0DBA                     	;# 
   492  0DBB                     	;# 
   493  0DBC                     	;# 
   494  0DBC                     	;# 
   495  0DBD                     	;# 
   496  0DBD                     	;# 
   497  0DBE                     	;# 
   498  0DBF                     	;# 
   499  0DC0                     	;# 
   500  0DC1                     	;# 
   501  0DC1                     	;# 
   502  0DC2                     	;# 
   503  0DC3                     	;# 
   504  0DC3                     	;# 
   505  0DC4                     	;# 
   506  0DC5                     	;# 
   507  0DC5                     	;# 
   508  0DC6                     	;# 
   509  0DC7                     	;# 
   510  0DC7                     	;# 
   511  0DC8                     	;# 
   512  0DC9                     	;# 
   513  0DC9                     	;# 
   514  0DCA                     	;# 
   515  0DCB                     	;# 
   516  0DCC                     	;# 
   517  0DCC                     	;# 
   518  0DCD                     	;# 
   519  0DCD                     	;# 
   520  0DCE                     	;# 
   521  0DCF                     	;# 
   522  0DD0                     	;# 
   523  0E0F                     	;# 
   524  0E10                     	;# 
   525  0E11                     	;# 
   526  0E12                     	;# 
   527  0E13                     	;# 
   528  0E14                     	;# 
   529  0E15                     	;# 
   530  0E16                     	;# 
   531  0E17                     	;# 
   532  0E90                     	;# 
   533  0E91                     	;# 
   534  0E92                     	;# 
   535  0E94                     	;# 
   536  0E95                     	;# 
   537  0EA0                     	;# 
   538  0EA1                     	;# 
   539  0EA2                     	;# 
   540  0EA3                     	;# 
   541  0EA4                     	;# 
   542  0EA5                     	;# 
   543  0FE4                     	;# 
   544  0FE5                     	;# 
   545  0FE6                     	;# 
   546  0FE7                     	;# 
   547  0FE8                     	;# 
   548  0FE8                     	;# 
   549  0FE9                     	;# 
   550  0FEA                     	;# 
   551  0FEA                     	;# 
   552  0FEB                     	;# 
   553  0FED                     	;# 
   554  0FEE                     	;# 
   555  0FEE                     	;# 
   556  0FEF                     	;# 
   557  0000                     	;# 
   558  0001                     	;# 
   559  0002                     	;# 
   560  0003                     	;# 
   561  0004                     	;# 
   562  0005                     	;# 
   563  0006                     	;# 
   564  0007                     	;# 
   565  0008                     	;# 
   566  0009                     	;# 
   567  000A                     	;# 
   568  000B                     	;# 
   569  000C                     	;# 
   570  000E                     	;# 
   571  0011                     	;# 
   572  0012                     	;# 
   573  0013                     	;# 
   574  0015                     	;# 
   575  0016                     	;# 
   576  0016                     	;# 
   577  0017                     	;# 
   578  0018                     	;# 
   579  0019                     	;# 
   580  001A                     	;# 
   581  001B                     	;# 
   582  001C                     	;# 
   583  008C                     	;# 
   584  008E                     	;# 
   585  0091                     	;# 
   586  0092                     	;# 
   587  0093                     	;# 
   588  0095                     	;# 
   589  0096                     	;# 
   590  0097                     	;# 
   591  0098                     	;# 
   592  0099                     	;# 
   593  009A                     	;# 
   594  009B                     	;# 
   595  009B                     	;# 
   596  009C                     	;# 
   597  009D                     	;# 
   598  009E                     	;# 
   599  009F                     	;# 
   600  010C                     	;# 
   601  010E                     	;# 
   602  0111                     	;# 
   603  0112                     	;# 
   604  0113                     	;# 
   605  0114                     	;# 
   606  0115                     	;# 
   607  0116                     	;# 
   608  0117                     	;# 
   609  0118                     	;# 
   610  0119                     	;# 
   611  018C                     	;# 
   612  018E                     	;# 
   613  0191                     	;# 
   614  0191                     	;# 
   615  0192                     	;# 
   616  0193                     	;# 
   617  0193                     	;# 
   618  0194                     	;# 
   619  0195                     	;# 
   620  0196                     	;# 
   621  0197                     	;# 
   622  0199                     	;# 
   623  019A                     	;# 
   624  019B                     	;# 
   625  019B                     	;# 
   626  019C                     	;# 
   627  019D                     	;# 
   628  019E                     	;# 
   629  019F                     	;# 
   630  020C                     	;# 
   631  020E                     	;# 
   632  028C                     	;# 
   633  028E                     	;# 
   634  030C                     	;# 
   635  030E                     	;# 
   636  038C                     	;# 
   637  038E                     	;# 
   638  0391                     	;# 
   639  0392                     	;# 
   640  0393                     	;# 
   641  0397                     	;# 
   642  0398                     	;# 
   643  0399                     	;# 
   644  0691                     	;# 
   645  0692                     	;# 
   646  0693                     	;# 
   647  0694                     	;# 
   648  0695                     	;# 
   649  0D8E                     	;# 
   650  0D8F                     	;# 
   651  0D90                     	;# 
   652  0D91                     	;# 
   653  0D91                     	;# 
   654  0D92                     	;# 
   655  0D93                     	;# 
   656  0D93                     	;# 
   657  0D94                     	;# 
   658  0D95                     	;# 
   659  0D95                     	;# 
   660  0D96                     	;# 
   661  0D97                     	;# 
   662  0D97                     	;# 
   663  0D98                     	;# 
   664  0D99                     	;# 
   665  0D99                     	;# 
   666  0D9A                     	;# 
   667  0D9B                     	;# 
   668  0D9C                     	;# 
   669  0D9C                     	;# 
   670  0D9D                     	;# 
   671  0D9D                     	;# 
   672  0D9E                     	;# 
   673  0D9F                     	;# 
   674  0DA0                     	;# 
   675  0DA1                     	;# 
   676  0DA1                     	;# 
   677  0DA2                     	;# 
   678  0DA3                     	;# 
   679  0DA3                     	;# 
   680  0DA4                     	;# 
   681  0DA5                     	;# 
   682  0DA5                     	;# 
   683  0DA6                     	;# 
   684  0DA7                     	;# 
   685  0DA7                     	;# 
   686  0DA8                     	;# 
   687  0DA9                     	;# 
   688  0DA9                     	;# 
   689  0DAA                     	;# 
   690  0DAB                     	;# 
   691  0DAC                     	;# 
   692  0DAC                     	;# 
   693  0DAD                     	;# 
   694  0DAD                     	;# 
   695  0DAE                     	;# 
   696  0DAF                     	;# 
   697  0DB0                     	;# 
   698  0DB1                     	;# 
   699  0DB1                     	;# 
   700  0DB2                     	;# 
   701  0DB3                     	;# 
   702  0DB3                     	;# 
   703  0DB4                     	;# 
   704  0DB5                     	;# 
   705  0DB5                     	;# 
   706  0DB6                     	;# 
   707  0DB7                     	;# 
   708  0DB7                     	;# 
   709  0DB8                     	;# 
   710  0DB9                     	;# 
   711  0DB9                     	;# 
   712  0DBA                     	;# 
   713  0DBB                     	;# 
   714  0DBC                     	;# 
   715  0DBC                     	;# 
   716  0DBD                     	;# 
   717  0DBD                     	;# 
   718  0DBE                     	;# 
   719  0DBF                     	;# 
   720  0DC0                     	;# 
   721  0DC1                     	;# 
   722  0DC1                     	;# 
   723  0DC2                     	;# 
   724  0DC3                     	;# 
   725  0DC3                     	;# 
   726  0DC4                     	;# 
   727  0DC5                     	;# 
   728  0DC5                     	;# 
   729  0DC6                     	;# 
   730  0DC7                     	;# 
   731  0DC7                     	;# 
   732  0DC8                     	;# 
   733  0DC9                     	;# 
   734  0DC9                     	;# 
   735  0DCA                     	;# 
   736  0DCB                     	;# 
   737  0DCC                     	;# 
   738  0DCC                     	;# 
   739  0DCD                     	;# 
   740  0DCD                     	;# 
   741  0DCE                     	;# 
   742  0DCF                     	;# 
   743  0DD0                     	;# 
   744  0E0F                     	;# 
   745  0E10                     	;# 
   746  0E11                     	;# 
   747  0E12                     	;# 
   748  0E13                     	;# 
   749  0E14                     	;# 
   750  0E15                     	;# 
   751  0E16                     	;# 
   752  0E17                     	;# 
   753  0E90                     	;# 
   754  0E91                     	;# 
   755  0E92                     	;# 
   756  0E94                     	;# 
   757  0E95                     	;# 
   758  0EA0                     	;# 
   759  0EA1                     	;# 
   760  0EA2                     	;# 
   761  0EA3                     	;# 
   762  0EA4                     	;# 
   763  0EA5                     	;# 
   764  0FE4                     	;# 
   765  0FE5                     	;# 
   766  0FE6                     	;# 
   767  0FE7                     	;# 
   768  0FE8                     	;# 
   769  0FE8                     	;# 
   770  0FE9                     	;# 
   771  0FEA                     	;# 
   772  0FEA                     	;# 
   773  0FEB                     	;# 
   774  0FED                     	;# 
   775  0FEE                     	;# 
   776  0FEE                     	;# 
   777  0FEF                     	;# 
   778  0000                     	;# 
   779  0001                     	;# 
   780  0002                     	;# 
   781  0003                     	;# 
   782  0004                     	;# 
   783  0005                     	;# 
   784  0006                     	;# 
   785  0007                     	;# 
   786  0008                     	;# 
   787  0009                     	;# 
   788  000A                     	;# 
   789  000B                     	;# 
   790  000C                     	;# 
   791  000E                     	;# 
   792  0011                     	;# 
   793  0012                     	;# 
   794  0013                     	;# 
   795  0015                     	;# 
   796  0016                     	;# 
   797  0016                     	;# 
   798  0017                     	;# 
   799  0018                     	;# 
   800  0019                     	;# 
   801  001A                     	;# 
   802  001B                     	;# 
   803  001C                     	;# 
   804  008C                     	;# 
   805  008E                     	;# 
   806  0091                     	;# 
   807  0092                     	;# 
   808  0093                     	;# 
   809  0095                     	;# 
   810  0096                     	;# 
   811  0097                     	;# 
   812  0098                     	;# 
   813  0099                     	;# 
   814  009A                     	;# 
   815  009B                     	;# 
   816  009B                     	;# 
   817  009C                     	;# 
   818  009D                     	;# 
   819  009E                     	;# 
   820  009F                     	;# 
   821  010C                     	;# 
   822  010E                     	;# 
   823  0111                     	;# 
   824  0112                     	;# 
   825  0113                     	;# 
   826  0114                     	;# 
   827  0115                     	;# 
   828  0116                     	;# 
   829  0117                     	;# 
   830  0118                     	;# 
   831  0119                     	;# 
   832  018C                     	;# 
   833  018E                     	;# 
   834  0191                     	;# 
   835  0191                     	;# 
   836  0192                     	;# 
   837  0193                     	;# 
   838  0193                     	;# 
   839  0194                     	;# 
   840  0195                     	;# 
   841  0196                     	;# 
   842  0197                     	;# 
   843  0199                     	;# 
   844  019A                     	;# 
   845  019B                     	;# 
   846  019B                     	;# 
   847  019C                     	;# 
   848  019D                     	;# 
   849  019E                     	;# 
   850  019F                     	;# 
   851  020C                     	;# 
   852  020E                     	;# 
   853  028C                     	;# 
   854  028E                     	;# 
   855  030C                     	;# 
   856  030E                     	;# 
   857  038C                     	;# 
   858  038E                     	;# 
   859  0391                     	;# 
   860  0392                     	;# 
   861  0393                     	;# 
   862  0397                     	;# 
   863  0398                     	;# 
   864  0399                     	;# 
   865  0691                     	;# 
   866  0692                     	;# 
   867  0693                     	;# 
   868  0694                     	;# 
   869  0695                     	;# 
   870  0D8E                     	;# 
   871  0D8F                     	;# 
   872  0D90                     	;# 
   873  0D91                     	;# 
   874  0D91                     	;# 
   875  0D92                     	;# 
   876  0D93                     	;# 
   877  0D93                     	;# 
   878  0D94                     	;# 
   879  0D95                     	;# 
   880  0D95                     	;# 
   881  0D96                     	;# 
   882  0D97                     	;# 
   883  0D97                     	;# 
   884  0D98                     	;# 
   885  0D99                     	;# 
   886  0D99                     	;# 
   887  0D9A                     	;# 
   888  0D9B                     	;# 
   889  0D9C                     	;# 
   890  0D9C                     	;# 
   891  0D9D                     	;# 
   892  0D9D                     	;# 
   893  0D9E                     	;# 
   894  0D9F                     	;# 
   895  0DA0                     	;# 
   896  0DA1                     	;# 
   897  0DA1                     	;# 
   898  0DA2                     	;# 
   899  0DA3                     	;# 
   900  0DA3                     	;# 
   901  0DA4                     	;# 
   902  0DA5                     	;# 
   903  0DA5                     	;# 
   904  0DA6                     	;# 
   905  0DA7                     	;# 
   906  0DA7                     	;# 
   907  0DA8                     	;# 
   908  0DA9                     	;# 
   909  0DA9                     	;# 
   910  0DAA                     	;# 
   911  0DAB                     	;# 
   912  0DAC                     	;# 
   913  0DAC                     	;# 
   914  0DAD                     	;# 
   915  0DAD                     	;# 
   916  0DAE                     	;# 
   917  0DAF                     	;# 
   918  0DB0                     	;# 
   919  0DB1                     	;# 
   920  0DB1                     	;# 
   921  0DB2                     	;# 
   922  0DB3                     	;# 
   923  0DB3                     	;# 
   924  0DB4                     	;# 
   925  0DB5                     	;# 
   926  0DB5                     	;# 
   927  0DB6                     	;# 
   928  0DB7                     	;# 
   929  0DB7                     	;# 
   930  0DB8                     	;# 
   931  0DB9                     	;# 
   932  0DB9                     	;# 
   933  0DBA                     	;# 
   934  0DBB                     	;# 
   935  0DBC                     	;# 
   936  0DBC                     	;# 
   937  0DBD                     	;# 
   938  0DBD                     	;# 
   939  0DBE                     	;# 
   940  0DBF                     	;# 
   941  0DC0                     	;# 
   942  0DC1                     	;# 
   943  0DC1                     	;# 
   944  0DC2                     	;# 
   945  0DC3                     	;# 
   946  0DC3                     	;# 
   947  0DC4                     	;# 
   948  0DC5                     	;# 
   949  0DC5                     	;# 
   950  0DC6                     	;# 
   951  0DC7                     	;# 
   952  0DC7                     	;# 
   953  0DC8                     	;# 
   954  0DC9                     	;# 
   955  0DC9                     	;# 
   956  0DCA                     	;# 
   957  0DCB                     	;# 
   958  0DCC                     	;# 
   959  0DCC                     	;# 
   960  0DCD                     	;# 
   961  0DCD                     	;# 
   962  0DCE                     	;# 
   963  0DCF                     	;# 
   964  0DD0                     	;# 
   965  0E0F                     	;# 
   966  0E10                     	;# 
   967  0E11                     	;# 
   968  0E12                     	;# 
   969  0E13                     	;# 
   970  0E14                     	;# 
   971  0E15                     	;# 
   972  0E16                     	;# 
   973  0E17                     	;# 
   974  0E90                     	;# 
   975  0E91                     	;# 
   976  0E92                     	;# 
   977  0E94                     	;# 
   978  0E95                     	;# 
   979  0EA0                     	;# 
   980  0EA1                     	;# 
   981  0EA2                     	;# 
   982  0EA3                     	;# 
   983  0EA4                     	;# 
   984  0EA5                     	;# 
   985  0FE4                     	;# 
   986  0FE5                     	;# 
   987  0FE6                     	;# 
   988  0FE7                     	;# 
   989  0FE8                     	;# 
   990  0FE8                     	;# 
   991  0FE9                     	;# 
   992  0FEA                     	;# 
   993  0FEA                     	;# 
   994  0FEB                     	;# 
   995  0FED                     	;# 
   996  0FEE                     	;# 
   997  0FEE                     	;# 
   998  0FEF                     	;# 
   999  0000                     	;# 
  1000  0001                     	;# 
  1001  0002                     	;# 
  1002  0003                     	;# 
  1003  0004                     	;# 
  1004  0005                     	;# 
  1005  0006                     	;# 
  1006  0007                     	;# 
  1007  0008                     	;# 
  1008  0009                     	;# 
  1009  000A                     	;# 
  1010  000B                     	;# 
  1011  000C                     	;# 
  1012  000E                     	;# 
  1013  0011                     	;# 
  1014  0012                     	;# 
  1015  0013                     	;# 
  1016  0015                     	;# 
  1017  0016                     	;# 
  1018  0016                     	;# 
  1019  0017                     	;# 
  1020  0018                     	;# 
  1021  0019                     	;# 
  1022  001A                     	;# 
  1023  001B                     	;# 
  1024  001C                     	;# 
  1025  008C                     	;# 
  1026  008E                     	;# 
  1027  0091                     	;# 
  1028  0092                     	;# 
  1029  0093                     	;# 
  1030  0095                     	;# 
  1031  0096                     	;# 
  1032  0097                     	;# 
  1033  0098                     	;# 
  1034  0099                     	;# 
  1035  009A                     	;# 
  1036  009B                     	;# 
  1037  009B                     	;# 
  1038  009C                     	;# 
  1039  009D                     	;# 
  1040  009E                     	;# 
  1041  009F                     	;# 
  1042  010C                     	;# 
  1043  010E                     	;# 
  1044  0111                     	;# 
  1045  0112                     	;# 
  1046  0113                     	;# 
  1047  0114                     	;# 
  1048  0115                     	;# 
  1049  0116                     	;# 
  1050  0117                     	;# 
  1051  0118                     	;# 
  1052  0119                     	;# 
  1053  018C                     	;# 
  1054  018E                     	;# 
  1055  0191                     	;# 
  1056  0191                     	;# 
  1057  0192                     	;# 
  1058  0193                     	;# 
  1059  0193                     	;# 
  1060  0194                     	;# 
  1061  0195                     	;# 
  1062  0196                     	;# 
  1063  0197                     	;# 
  1064  0199                     	;# 
  1065  019A                     	;# 
  1066  019B                     	;# 
  1067  019B                     	;# 
  1068  019C                     	;# 
  1069  019D                     	;# 
  1070  019E                     	;# 
  1071  019F                     	;# 
  1072  020C                     	;# 
  1073  020E                     	;# 
  1074  028C                     	;# 
  1075  028E                     	;# 
  1076  030C                     	;# 
  1077  030E                     	;# 
  1078  038C                     	;# 
  1079  038E                     	;# 
  1080  0391                     	;# 
  1081  0392                     	;# 
  1082  0393                     	;# 
  1083  0397                     	;# 
  1084  0398                     	;# 
  1085  0399                     	;# 
  1086  0691                     	;# 
  1087  0692                     	;# 
  1088  0693                     	;# 
  1089  0694                     	;# 
  1090  0695                     	;# 
  1091  0D8E                     	;# 
  1092  0D8F                     	;# 
  1093  0D90                     	;# 
  1094  0D91                     	;# 
  1095  0D91                     	;# 
  1096  0D92                     	;# 
  1097  0D93                     	;# 
  1098  0D93                     	;# 
  1099  0D94                     	;# 
  1100  0D95                     	;# 
  1101  0D95                     	;# 
  1102  0D96                     	;# 
  1103  0D97                     	;# 
  1104  0D97                     	;# 
  1105  0D98                     	;# 
  1106  0D99                     	;# 
  1107  0D99                     	;# 
  1108  0D9A                     	;# 
  1109  0D9B                     	;# 
  1110  0D9C                     	;# 
  1111  0D9C                     	;# 
  1112  0D9D                     	;# 
  1113  0D9D                     	;# 
  1114  0D9E                     	;# 
  1115  0D9F                     	;# 
  1116  0DA0                     	;# 
  1117  0DA1                     	;# 
  1118  0DA1                     	;# 
  1119  0DA2                     	;# 
  1120  0DA3                     	;# 
  1121  0DA3                     	;# 
  1122  0DA4                     	;# 
  1123  0DA5                     	;# 
  1124  0DA5                     	;# 
  1125  0DA6                     	;# 
  1126  0DA7                     	;# 
  1127  0DA7                     	;# 
  1128  0DA8                     	;# 
  1129  0DA9                     	;# 
  1130  0DA9                     	;# 
  1131  0DAA                     	;# 
  1132  0DAB                     	;# 
  1133  0DAC                     	;# 
  1134  0DAC                     	;# 
  1135  0DAD                     	;# 
  1136  0DAD                     	;# 
  1137  0DAE                     	;# 
  1138  0DAF                     	;# 
  1139  0DB0                     	;# 
  1140  0DB1                     	;# 
  1141  0DB1                     	;# 
  1142  0DB2                     	;# 
  1143  0DB3                     	;# 
  1144  0DB3                     	;# 
  1145  0DB4                     	;# 
  1146  0DB5                     	;# 
  1147  0DB5                     	;# 
  1148  0DB6                     	;# 
  1149  0DB7                     	;# 
  1150  0DB7                     	;# 
  1151  0DB8                     	;# 
  1152  0DB9                     	;# 
  1153  0DB9                     	;# 
  1154  0DBA                     	;# 
  1155  0DBB                     	;# 
  1156  0DBC                     	;# 
  1157  0DBC                     	;# 
  1158  0DBD                     	;# 
  1159  0DBD                     	;# 
  1160  0DBE                     	;# 
  1161  0DBF                     	;# 
  1162  0DC0                     	;# 
  1163  0DC1                     	;# 
  1164  0DC1                     	;# 
  1165  0DC2                     	;# 
  1166  0DC3                     	;# 
  1167  0DC3                     	;# 
  1168  0DC4                     	;# 
  1169  0DC5                     	;# 
  1170  0DC5                     	;# 
  1171  0DC6                     	;# 
  1172  0DC7                     	;# 
  1173  0DC7                     	;# 
  1174  0DC8                     	;# 
  1175  0DC9                     	;# 
  1176  0DC9                     	;# 
  1177  0DCA                     	;# 
  1178  0DCB                     	;# 
  1179  0DCC                     	;# 
  1180  0DCC                     	;# 
  1181  0DCD                     	;# 
  1182  0DCD                     	;# 
  1183  0DCE                     	;# 
  1184  0DCF                     	;# 
  1185  0DD0                     	;# 
  1186  0E0F                     	;# 
  1187  0E10                     	;# 
  1188  0E11                     	;# 
  1189  0E12                     	;# 
  1190  0E13                     	;# 
  1191  0E14                     	;# 
  1192  0E15                     	;# 
  1193  0E16                     	;# 
  1194  0E17                     	;# 
  1195  0E90                     	;# 
  1196  0E91                     	;# 
  1197  0E92                     	;# 
  1198  0E94                     	;# 
  1199  0E95                     	;# 
  1200  0EA0                     	;# 
  1201  0EA1                     	;# 
  1202  0EA2                     	;# 
  1203  0EA3                     	;# 
  1204  0EA4                     	;# 
  1205  0EA5                     	;# 
  1206  0FE4                     	;# 
  1207  0FE5                     	;# 
  1208  0FE6                     	;# 
  1209  0FE7                     	;# 
  1210  0FE8                     	;# 
  1211  0FE8                     	;# 
  1212  0FE9                     	;# 
  1213  0FEA                     	;# 
  1214  0FEA                     	;# 
  1215  0FEB                     	;# 
  1216  0FED                     	;# 
  1217  0FEE                     	;# 
  1218  0FEE                     	;# 
  1219  0FEF                     	;# 
  1220  0FFF                     	;# 
  1221  0000                     	;# 
  1222  0001                     	;# 
  1223  0002                     	;# 
  1224  0003                     	;# 
  1225  0004                     	;# 
  1226  0005                     	;# 
  1227  0006                     	;# 
  1228  0007                     	;# 
  1229  0008                     	;# 
  1230  0009                     	;# 
  1231  000A                     	;# 
  1232  000B                     	;# 
  1233  000C                     	;# 
  1234  000E                     	;# 
  1235  0011                     	;# 
  1236  0012                     	;# 
  1237  0013                     	;# 
  1238  0015                     	;# 
  1239  0016                     	;# 
  1240  0016                     	;# 
  1241  0017                     	;# 
  1242  0018                     	;# 
  1243  0019                     	;# 
  1244  001A                     	;# 
  1245  001B                     	;# 
  1246  001C                     	;# 
  1247  008C                     	;# 
  1248  008E                     	;# 
  1249  0091                     	;# 
  1250  0092                     	;# 
  1251  0093                     	;# 
  1252  0095                     	;# 
  1253  0096                     	;# 
  1254  0097                     	;# 
  1255  0098                     	;# 
  1256  0099                     	;# 
  1257  009A                     	;# 
  1258  009B                     	;# 
  1259  009B                     	;# 
  1260  009C                     	;# 
  1261  009D                     	;# 
  1262  009E                     	;# 
  1263  009F                     	;# 
  1264  010C                     	;# 
  1265  010E                     	;# 
  1266  0111                     	;# 
  1267  0112                     	;# 
  1268  0113                     	;# 
  1269  0114                     	;# 
  1270  0115                     	;# 
  1271  0116                     	;# 
  1272  0117                     	;# 
  1273  0118                     	;# 
  1274  0119                     	;# 
  1275  018C                     	;# 
  1276  018E                     	;# 
  1277  0191                     	;# 
  1278  0191                     	;# 
  1279  0192                     	;# 
  1280  0193                     	;# 
  1281  0193                     	;# 
  1282  0194                     	;# 
  1283  0195                     	;# 
  1284  0196                     	;# 
  1285  0197                     	;# 
  1286  0199                     	;# 
  1287  019A                     	;# 
  1288  019B                     	;# 
  1289  019B                     	;# 
  1290  019C                     	;# 
  1291  019D                     	;# 
  1292  019E                     	;# 
  1293  019F                     	;# 
  1294  020C                     	;# 
  1295  020E                     	;# 
  1296  028C                     	;# 
  1297  028E                     	;# 
  1298  030C                     	;# 
  1299  030E                     	;# 
  1300  038C                     	;# 
  1301  038E                     	;# 
  1302  0391                     	;# 
  1303  0392                     	;# 
  1304  0393                     	;# 
  1305  0397                     	;# 
  1306  0398                     	;# 
  1307  0399                     	;# 
  1308  0691                     	;# 
  1309  0692                     	;# 
  1310  0693                     	;# 
  1311  0694                     	;# 
  1312  0695                     	;# 
  1313  0D8E                     	;# 
  1314  0D8F                     	;# 
  1315  0D90                     	;# 
  1316  0D91                     	;# 
  1317  0D91                     	;# 
  1318  0D92                     	;# 
  1319  0D93                     	;# 
  1320  0D93                     	;# 
  1321  0D94                     	;# 
  1322  0D95                     	;# 
  1323  0D95                     	;# 
  1324  0D96                     	;# 
  1325  0D97                     	;# 
  1326  0D97                     	;# 
  1327  0D98                     	;# 
  1328  0D99                     	;# 
  1329  0D99                     	;# 
  1330  0D9A                     	;# 
  1331  0D9B                     	;# 
  1332  0D9C                     	;# 
  1333  0D9C                     	;# 
  1334  0D9D                     	;# 
  1335  0D9D                     	;# 
  1336  0D9E                     	;# 
  1337  0D9F                     	;# 
  1338  0DA0                     	;# 
  1339  0DA1                     	;# 
  1340  0DA1                     	;# 
  1341  0DA2                     	;# 
  1342  0DA3                     	;# 
  1343  0DA3                     	;# 
  1344  0DA4                     	;# 
  1345  0DA5                     	;# 
  1346  0DA5                     	;# 
  1347  0DA6                     	;# 
  1348  0DA7                     	;# 
  1349  0DA7                     	;# 
  1350  0DA8                     	;# 
  1351  0DA9                     	;# 
  1352  0DA9                     	;# 
  1353  0DAA                     	;# 
  1354  0DAB                     	;# 
  1355  0DAC                     	;# 
  1356  0DAC                     	;# 
  1357  0DAD                     	;# 
  1358  0DAD                     	;# 
  1359  0DAE                     	;# 
  1360  0DAF                     	;# 
  1361  0DB0                     	;# 
  1362  0DB1                     	;# 
  1363  0DB1                     	;# 
  1364  0DB2                     	;# 
  1365  0DB3                     	;# 
  1366  0DB3                     	;# 
  1367  0DB4                     	;# 
  1368  0DB5                     	;# 
  1369  0DB5                     	;# 
  1370  0DB6                     	;# 
  1371  0DB7                     	;# 
  1372  0DB7                     	;# 
  1373  0DB8                     	;# 
  1374  0DB9                     	;# 
  1375  0DB9                     	;# 
  1376  0DBA                     	;# 
  1377  0DBB                     	;# 
  1378  0DBC                     	;# 
  1379  0DBC                     	;# 
  1380  0DBD                     	;# 
  1381  0DBD                     	;# 
  1382  0DBE                     	;# 
  1383  0DBF                     	;# 
  1384  0DC0                     	;# 
  1385  0DC1                     	;# 
  1386  0DC1                     	;# 
  1387  0DC2                     	;# 
  1388  0DC3                     	;# 
  1389  0DC3                     	;# 
  1390  0DC4                     	;# 
  1391  0DC5                     	;# 
  1392  0DC5                     	;# 
  1393  0DC6                     	;# 
  1394  0DC7                     	;# 
  1395  0DC7                     	;# 
  1396  0DC8                     	;# 
  1397  0DC9                     	;# 
  1398  0DC9                     	;# 
  1399  0DCA                     	;# 
  1400  0DCB                     	;# 
  1401  0DCC                     	;# 
  1402  0DCC                     	;# 
  1403  0DCD                     	;# 
  1404  0DCD                     	;# 
  1405  0DCE                     	;# 
  1406  0DCF                     	;# 
  1407  0DD0                     	;# 
  1408  0E0F                     	;# 
  1409  0E10                     	;# 
  1410  0E11                     	;# 
  1411  0E12                     	;# 
  1412  0E13                     	;# 
  1413  0E14                     	;# 
  1414  0E15                     	;# 
  1415  0E16                     	;# 
  1416  0E17                     	;# 
  1417  0E90                     	;# 
  1418  0E91                     	;# 
  1419  0E92                     	;# 
  1420  0E94                     	;# 
  1421  0E95                     	;# 
  1422  0EA0                     	;# 
  1423  0EA1                     	;# 
  1424  0EA2                     	;# 
  1425  0EA3                     	;# 
  1426  0EA4                     	;# 
  1427  0EA5                     	;# 
  1428  0FE4                     	;# 
  1429  0FE5                     	;# 
  1430  0FE6                     	;# 
  1431  0FE7                     	;# 
  1432  0FE8                     	;# 
  1433  0FE8                     	;# 
  1434  0FE9                     	;# 
  1435  0FEA                     	;# 
  1436  0FEA                     	;# 
  1437  0FEB                     	;# 
  1438  0FED                     	;# 
  1439  0FEE                     	;# 
  1440  0FEE                     	;# 
  1441  0FEF                     	;# 
  1442  0000                     	;# 
  1443  0001                     	;# 
  1444  0002                     	;# 
  1445  0003                     	;# 
  1446  0004                     	;# 
  1447  0005                     	;# 
  1448  0006                     	;# 
  1449  0007                     	;# 
  1450  0008                     	;# 
  1451  0009                     	;# 
  1452  000A                     	;# 
  1453  000B                     	;# 
  1454  000C                     	;# 
  1455  000E                     	;# 
  1456  0011                     	;# 
  1457  0012                     	;# 
  1458  0013                     	;# 
  1459  0015                     	;# 
  1460  0016                     	;# 
  1461  0016                     	;# 
  1462  0017                     	;# 
  1463  0018                     	;# 
  1464  0019                     	;# 
  1465  001A                     	;# 
  1466  001B                     	;# 
  1467  001C                     	;# 
  1468  008C                     	;# 
  1469  008E                     	;# 
  1470  0091                     	;# 
  1471  0092                     	;# 
  1472  0093                     	;# 
  1473  0095                     	;# 
  1474  0096                     	;# 
  1475  0097                     	;# 
  1476  0098                     	;# 
  1477  0099                     	;# 
  1478  009A                     	;# 
  1479  009B                     	;# 
  1480  009B                     	;# 
  1481  009C                     	;# 
  1482  009D                     	;# 
  1483  009E                     	;# 
  1484  009F                     	;# 
  1485  010C                     	;# 
  1486  010E                     	;# 
  1487  0111                     	;# 
  1488  0112                     	;# 
  1489  0113                     	;# 
  1490  0114                     	;# 
  1491  0115                     	;# 
  1492  0116                     	;# 
  1493  0117                     	;# 
  1494  0118                     	;# 
  1495  0119                     	;# 
  1496  018C                     	;# 
  1497  018E                     	;# 
  1498  0191                     	;# 
  1499  0191                     	;# 
  1500  0192                     	;# 
  1501  0193                     	;# 
  1502  0193                     	;# 
  1503  0194                     	;# 
  1504  0195                     	;# 
  1505  0196                     	;# 
  1506  0197                     	;# 
  1507  0199                     	;# 
  1508  019A                     	;# 
  1509  019B                     	;# 
  1510  019B                     	;# 
  1511  019C                     	;# 
  1512  019D                     	;# 
  1513  019E                     	;# 
  1514  019F                     	;# 
  1515  020C                     	;# 
  1516  020E                     	;# 
  1517  028C                     	;# 
  1518  028E                     	;# 
  1519  030C                     	;# 
  1520  030E                     	;# 
  1521  038C                     	;# 
  1522  038E                     	;# 
  1523  0391                     	;# 
  1524  0392                     	;# 
  1525  0393                     	;# 
  1526  0397                     	;# 
  1527  0398                     	;# 
  1528  0399                     	;# 
  1529  0691                     	;# 
  1530  0692                     	;# 
  1531  0693                     	;# 
  1532  0694                     	;# 
  1533  0695                     	;# 
  1534  0D8E                     	;# 
  1535  0D8F                     	;# 
  1536  0D90                     	;# 
  1537  0D91                     	;# 
  1538  0D91                     	;# 
  1539  0D92                     	;# 
  1540  0D93                     	;# 
  1541  0D93                     	;# 
  1542  0D94                     	;# 
  1543  0D95                     	;# 
  1544  0D95                     	;# 
  1545  0D96                     	;# 
  1546  0D97                     	;# 
  1547  0D97                     	;# 
  1548  0D98                     	;# 
  1549  0D99                     	;# 
  1550  0D99                     	;# 
  1551  0D9A                     	;# 
  1552  0D9B                     	;# 
  1553  0D9C                     	;# 
  1554  0D9C                     	;# 
  1555  0D9D                     	;# 
  1556  0D9D                     	;# 
  1557  0D9E                     	;# 
  1558  0D9F                     	;# 
  1559  0DA0                     	;# 
  1560  0DA1                     	;# 
  1561  0DA1                     	;# 
  1562  0DA2                     	;# 
  1563  0DA3                     	;# 
  1564  0DA3                     	;# 
  1565  0DA4                     	;# 
  1566  0DA5                     	;# 
  1567  0DA5                     	;# 
  1568  0DA6                     	;# 
  1569  0DA7                     	;# 
  1570  0DA7                     	;# 
  1571  0DA8                     	;# 
  1572  0DA9                     	;# 
  1573  0DA9                     	;# 
  1574  0DAA                     	;# 
  1575  0DAB                     	;# 
  1576  0DAC                     	;# 
  1577  0DAC                     	;# 
  1578  0DAD                     	;# 
  1579  0DAD                     	;# 
  1580  0DAE                     	;# 
  1581  0DAF                     	;# 
  1582  0DB0                     	;# 
  1583  0DB1                     	;# 
  1584  0DB1                     	;# 
  1585  0DB2                     	;# 
  1586  0DB3                     	;# 
  1587  0DB3                     	;# 
  1588  0DB4                     	;# 
  1589  0DB5                     	;# 
  1590  0DB5                     	;# 
  1591  0DB6                     	;# 
  1592  0DB7                     	;# 
  1593  0DB7                     	;# 
  1594  0DB8                     	;# 
  1595  0DB9                     	;# 
  1596  0DB9                     	;# 
  1597  0DBA                     	;# 
  1598  0DBB                     	;# 
  1599  0DBC                     	;# 
  1600  0DBC                     	;# 
  1601  0DBD                     	;# 
  1602  0DBD                     	;# 
  1603  0DBE                     	;# 
  1604  0DBF                     	;# 
  1605  0DC0                     	;# 
  1606  0DC1                     	;# 
  1607  0DC1                     	;# 
  1608  0DC2                     	;# 
  1609  0DC3                     	;# 
  1610  0DC3                     	;# 
  1611  0DC4                     	;# 
  1612  0DC5                     	;# 
  1613  0DC5                     	;# 
  1614  0DC6                     	;# 
  1615  0DC7                     	;# 
  1616  0DC7                     	;# 
  1617  0DC8                     	;# 
  1618  0DC9                     	;# 
  1619  0DC9                     	;# 
  1620  0DCA                     	;# 
  1621  0DCB                     	;# 
  1622  0DCC                     	;# 
  1623  0DCC                     	;# 
  1624  0DCD                     	;# 
  1625  0DCD                     	;# 
  1626  0DCE                     	;# 
  1627  0DCF                     	;# 
  1628  0DD0                     	;# 
  1629  0E0F                     	;# 
  1630  0E10                     	;# 
  1631  0E11                     	;# 
  1632  0E12                     	;# 
  1633  0E13                     	;# 
  1634  0E14                     	;# 
  1635  0E15                     	;# 
  1636  0E16                     	;# 
  1637  0E17                     	;# 
  1638  0E90                     	;# 
  1639  0E91                     	;# 
  1640  0E92                     	;# 
  1641  0E94                     	;# 
  1642  0E95                     	;# 
  1643  0EA0                     	;# 
  1644  0EA1                     	;# 
  1645  0EA2                     	;# 
  1646  0EA3                     	;# 
  1647  0EA4                     	;# 
  1648  0EA5                     	;# 
  1649  0FE4                     	;# 
  1650  0FE5                     	;# 
  1651  0FE6                     	;# 
  1652  0FE7                     	;# 
  1653  0FE8                     	;# 
  1654  0FE8                     	;# 
  1655  0FE9                     	;# 
  1656  0FEA                     	;# 
  1657  0FEA                     	;# 
  1658  0FEB                     	;# 
  1659  0FED                     	;# 
  1660  0FEE                     	;# 
  1661  0FEE                     	;# 
  1662  0FEF                     	;# 
  1663  0000                     	;# 
  1664  0001                     	;# 
  1665  0002                     	;# 
  1666  0003                     	;# 
  1667  0004                     	;# 
  1668  0005                     	;# 
  1669  0006                     	;# 
  1670  0007                     	;# 
  1671  0008                     	;# 
  1672  0009                     	;# 
  1673  000A                     	;# 
  1674  000B                     	;# 
  1675  000C                     	;# 
  1676  000E                     	;# 
  1677  0011                     	;# 
  1678  0012                     	;# 
  1679  0013                     	;# 
  1680  0015                     	;# 
  1681  0016                     	;# 
  1682  0016                     	;# 
  1683  0017                     	;# 
  1684  0018                     	;# 
  1685  0019                     	;# 
  1686  001A                     	;# 
  1687  001B                     	;# 
  1688  001C                     	;# 
  1689  008C                     	;# 
  1690  008E                     	;# 
  1691  0091                     	;# 
  1692  0092                     	;# 
  1693  0093                     	;# 
  1694  0095                     	;# 
  1695  0096                     	;# 
  1696  0097                     	;# 
  1697  0098                     	;# 
  1698  0099                     	;# 
  1699  009A                     	;# 
  1700  009B                     	;# 
  1701  009B                     	;# 
  1702  009C                     	;# 
  1703  009D                     	;# 
  1704  009E                     	;# 
  1705  009F                     	;# 
  1706  010C                     	;# 
  1707  010E                     	;# 
  1708  0111                     	;# 
  1709  0112                     	;# 
  1710  0113                     	;# 
  1711  0114                     	;# 
  1712  0115                     	;# 
  1713  0116                     	;# 
  1714  0117                     	;# 
  1715  0118                     	;# 
  1716  0119                     	;# 
  1717  018C                     	;# 
  1718  018E                     	;# 
  1719  0191                     	;# 
  1720  0191                     	;# 
  1721  0192                     	;# 
  1722  0193                     	;# 
  1723  0193                     	;# 
  1724  0194                     	;# 
  1725  0195                     	;# 
  1726  0196                     	;# 
  1727  0197                     	;# 
  1728  0199                     	;# 
  1729  019A                     	;# 
  1730  019B                     	;# 
  1731  019B                     	;# 
  1732  019C                     	;# 
  1733  019D                     	;# 
  1734  019E                     	;# 
  1735  019F                     	;# 
  1736  020C                     	;# 
  1737  020E                     	;# 
  1738  028C                     	;# 
  1739  028E                     	;# 
  1740  030C                     	;# 
  1741  030E                     	;# 
  1742  038C                     	;# 
  1743  038E                     	;# 
  1744  0391                     	;# 
  1745  0392                     	;# 
  1746  0393                     	;# 
  1747  0397                     	;# 
  1748  0398                     	;# 
  1749  0399                     	;# 
  1750  0691                     	;# 
  1751  0692                     	;# 
  1752  0693                     	;# 
  1753  0694                     	;# 
  1754  0695                     	;# 
  1755  0D8E                     	;# 
  1756  0D8F                     	;# 
  1757  0D90                     	;# 
  1758  0D91                     	;# 
  1759  0D91                     	;# 
  1760  0D92                     	;# 
  1761  0D93                     	;# 
  1762  0D93                     	;# 
  1763  0D94                     	;# 
  1764  0D95                     	;# 
  1765  0D95                     	;# 
  1766  0D96                     	;# 
  1767  0D97                     	;# 
  1768  0D97                     	;# 
  1769  0D98                     	;# 
  1770  0D99                     	;# 
  1771  0D99                     	;# 
  1772  0D9A                     	;# 
  1773  0D9B                     	;# 
  1774  0D9C                     	;# 
  1775  0D9C                     	;# 
  1776  0D9D                     	;# 
  1777  0D9D                     	;# 
  1778  0D9E                     	;# 
  1779  0D9F                     	;# 
  1780  0DA0                     	;# 
  1781  0DA1                     	;# 
  1782  0DA1                     	;# 
  1783  0DA2                     	;# 
  1784  0DA3                     	;# 
  1785  0DA3                     	;# 
  1786  0DA4                     	;# 
  1787  0DA5                     	;# 
  1788  0DA5                     	;# 
  1789  0DA6                     	;# 
  1790  0DA7                     	;# 
  1791  0DA7                     	;# 
  1792  0DA8                     	;# 
  1793  0DA9                     	;# 
  1794  0DA9                     	;# 
  1795  0DAA                     	;# 
  1796  0DAB                     	;# 
  1797  0DAC                     	;# 
  1798  0DAC                     	;# 
  1799  0DAD                     	;# 
  1800  0DAD                     	;# 
  1801  0DAE                     	;# 
  1802  0DAF                     	;# 
  1803  0DB0                     	;# 
  1804  0DB1                     	;# 
  1805  0DB1                     	;# 
  1806  0DB2                     	;# 
  1807  0DB3                     	;# 
  1808  0DB3                     	;# 
  1809  0DB4                     	;# 
  1810  0DB5                     	;# 
  1811  0DB5                     	;# 
  1812  0DB6                     	;# 
  1813  0DB7                     	;# 
  1814  0DB7                     	;# 
  1815  0DB8                     	;# 
  1816  0DB9                     	;# 
  1817  0DB9                     	;# 
  1818  0DBA                     	;# 
  1819  0DBB                     	;# 
  1820  0DBC                     	;# 
  1821  0DBC                     	;# 
  1822  0DBD                     	;# 
  1823  0DBD                     	;# 
  1824  0DBE                     	;# 
  1825  0DBF                     	;# 
  1826  0DC0                     	;# 
  1827  0DC1                     	;# 
  1828  0DC1                     	;# 
  1829  0DC2                     	;# 
  1830  0DC3                     	;# 
  1831  0DC3                     	;# 
  1832  0DC4                     	;# 
  1833  0DC5                     	;# 
  1834  0DC5                     	;# 
  1835  0DC6                     	;# 
  1836  0DC7                     	;# 
  1837  0DC7                     	;# 
  1838  0DC8                     	;# 
  1839  0DC9                     	;# 
  1840  0DC9                     	;# 
  1841  0DCA                     	;# 
  1842  0DCB                     	;# 
  1843  0DCC                     	;# 
  1844  0DCC                     	;# 
  1845  0DCD                     	;# 
  1846  0DCD                     	;# 
  1847  0DCE                     	;# 
  1848  0DCF                     	;# 
  1849  0DD0                     	;# 
  1850  0E0F                     	;# 
  1851  0E10                     	;# 
  1852  0E11                     	;# 
  1853  0E12                     	;# 
  1854  0E13                     	;# 
  1855  0E14                     	;# 
  1856  0E15                     	;# 
  1857  0E16                     	;# 
  1858  0E17                     	;# 
  1859  0E90                     	;# 
  1860  0E91                     	;# 
  1861  0E92                     	;# 
  1862  0E94                     	;# 
  1863  0E95                     	;# 
  1864  0EA0                     	;# 
  1865  0EA1                     	;# 
  1866  0EA2                     	;# 
  1867  0EA3                     	;# 
  1868  0EA4                     	;# 
  1869  0EA5                     	;# 
  1870  0FE4                     	;# 
  1871  0FE5                     	;# 
  1872  0FE6                     	;# 
  1873  0FE7                     	;# 
  1874  0FE8                     	;# 
  1875  0FE8                     	;# 
  1876  0FE9                     	;# 
  1877  0FEA                     	;# 
  1878  0FEA                     	;# 
  1879  0FEB                     	;# 
  1880  0FED                     	;# 
  1881  0FEE                     	;# 
  1882  0FEE                     	;# 
  1883  0FEF                     	;# 
  1884  0000                     	;# 
  1885  0001                     	;# 
  1886  0002                     	;# 
  1887  0003                     	;# 
  1888  0004                     	;# 
  1889  0005                     	;# 
  1890  0006                     	;# 
  1891  0007                     	;# 
  1892  0008                     	;# 
  1893  0009                     	;# 
  1894  000A                     	;# 
  1895  000B                     	;# 
  1896  000C                     	;# 
  1897  000E                     	;# 
  1898  0011                     	;# 
  1899  0012                     	;# 
  1900  0013                     	;# 
  1901  0015                     	;# 
  1902  0016                     	;# 
  1903  0016                     	;# 
  1904  0017                     	;# 
  1905  0018                     	;# 
  1906  0019                     	;# 
  1907  001A                     	;# 
  1908  001B                     	;# 
  1909  001C                     	;# 
  1910  008C                     	;# 
  1911  008E                     	;# 
  1912  0091                     	;# 
  1913  0092                     	;# 
  1914  0093                     	;# 
  1915  0095                     	;# 
  1916  0096                     	;# 
  1917  0097                     	;# 
  1918  0098                     	;# 
  1919  0099                     	;# 
  1920  009A                     	;# 
  1921  009B                     	;# 
  1922  009B                     	;# 
  1923  009C                     	;# 
  1924  009D                     	;# 
  1925  009E                     	;# 
  1926  009F                     	;# 
  1927  010C                     	;# 
  1928  010E                     	;# 
  1929  0111                     	;# 
  1930  0112                     	;# 
  1931  0113                     	;# 
  1932  0114                     	;# 
  1933  0115                     	;# 
  1934  0116                     	;# 
  1935  0117                     	;# 
  1936  0118                     	;# 
  1937  0119                     	;# 
  1938  018C                     	;# 
  1939  018E                     	;# 
  1940  0191                     	;# 
  1941  0191                     	;# 
  1942  0192                     	;# 
  1943  0193                     	;# 
  1944  0193                     	;# 
  1945  0194                     	;# 
  1946  0195                     	;# 
  1947  0196                     	;# 
  1948  0197                     	;# 
  1949  0199                     	;# 
  1950  019A                     	;# 
  1951  019B                     	;# 
  1952  019B                     	;# 
  1953  019C                     	;# 
  1954  019D                     	;# 
  1955  019E                     	;# 
  1956  019F                     	;# 
  1957  020C                     	;# 
  1958  020E                     	;# 
  1959  028C                     	;# 
  1960  028E                     	;# 
  1961  030C                     	;# 
  1962  030E                     	;# 
  1963  038C                     	;# 
  1964  038E                     	;# 
  1965  0391                     	;# 
  1966  0392                     	;# 
  1967  0393                     	;# 
  1968  0397                     	;# 
  1969  0398                     	;# 
  1970  0399                     	;# 
  1971  0691                     	;# 
  1972  0692                     	;# 
  1973  0693                     	;# 
  1974  0694                     	;# 
  1975  0695                     	;# 
  1976  0D8E                     	;# 
  1977  0D8F                     	;# 
  1978  0D90                     	;# 
  1979  0D91                     	;# 
  1980  0D91                     	;# 
  1981  0D92                     	;# 
  1982  0D93                     	;# 
  1983  0D93                     	;# 
  1984  0D94                     	;# 
  1985  0D95                     	;# 
  1986  0D95                     	;# 
  1987  0D96                     	;# 
  1988  0D97                     	;# 
  1989  0D97                     	;# 
  1990  0D98                     	;# 
  1991  0D99                     	;# 
  1992  0D99                     	;# 
  1993  0D9A                     	;# 
  1994  0D9B                     	;# 
  1995  0D9C                     	;# 
  1996  0D9C                     	;# 
  1997  0D9D                     	;# 
  1998  0D9D                     	;# 
  1999  0D9E                     	;# 
  2000  0D9F                     	;# 
  2001  0DA0                     	;# 
  2002  0DA1                     	;# 
  2003  0DA1                     	;# 
  2004  0DA2                     	;# 
  2005  0DA3                     	;# 
  2006  0DA3                     	;# 
  2007  0DA4                     	;# 
  2008  0DA5                     	;# 
  2009  0DA5                     	;# 
  2010  0DA6                     	;# 
  2011  0DA7                     	;# 
  2012  0DA7                     	;# 
  2013  0DA8                     	;# 
  2014  0DA9                     	;# 
  2015  0DA9                     	;# 
  2016  0DAA                     	;# 
  2017  0DAB                     	;# 
  2018  0DAC                     	;# 
  2019  0DAC                     	;# 
  2020  0DAD                     	;# 
  2021  0DAD                     	;# 
  2022  0DAE                     	;# 
  2023  0DAF                     	;# 
  2024  0DB0                     	;# 
  2025  0DB1                     	;# 
  2026  0DB1                     	;# 
  2027  0DB2                     	;# 
  2028  0DB3                     	;# 
  2029  0DB3                     	;# 
  2030  0DB4                     	;# 
  2031  0DB5                     	;# 
  2032  0DB5                     	;# 
  2033  0DB6                     	;# 
  2034  0DB7                     	;# 
  2035  0DB7                     	;# 
  2036  0DB8                     	;# 
  2037  0DB9                     	;# 
  2038  0DB9                     	;# 
  2039  0DBA                     	;# 
  2040  0DBB                     	;# 
  2041  0DBC                     	;# 
  2042  0DBC                     	;# 
  2043  0DBD                     	;# 
  2044  0DBD                     	;# 
  2045  0DBE                     	;# 
  2046  0DBF                     	;# 
  2047  0DC0                     	;# 
  2048  0DC1                     	;# 
  2049  0DC1                     	;# 
  2050  0DC2                     	;# 
  2051  0DC3                     	;# 
  2052  0DC3                     	;# 
  2053  0DC4                     	;# 
  2054  0DC5                     	;# 
  2055  0DC5                     	;# 
  2056  0DC6                     	;# 
  2057  0DC7                     	;# 
  2058  0DC7                     	;# 
  2059  0DC8                     	;# 
  2060  0DC9                     	;# 
  2061  0DC9                     	;# 
  2062  0DCA                     	;# 
  2063  0DCB                     	;# 
  2064  0DCC                     	;# 
  2065  0DCC                     	;# 
  2066  0DCD                     	;# 
  2067  0DCD                     	;# 
  2068  0DCE                     	;# 
  2069  0DCF                     	;# 
  2070  0DD0                     	;# 
  2071  0E0F                     	;# 
  2072  0E10                     	;# 
  2073  0E11                     	;# 
  2074  0E12                     	;# 
  2075  0E13                     	;# 
  2076  0E14                     	;# 
  2077  0E15                     	;# 
  2078  0E16                     	;# 
  2079  0E17                     	;# 
  2080  0E90                     	;# 
  2081  0E91                     	;# 
  2082  0E92                     	;# 
  2083  0E94                     	;# 
  2084  0E95                     	;# 
  2085  0EA0                     	;# 
  2086  0EA1                     	;# 
  2087  0EA2                     	;# 
  2088  0EA3                     	;# 
  2089  0EA4                     	;# 
  2090  0EA5                     	;# 
  2091  0FE4                     	;# 
  2092  0FE5                     	;# 
  2093  0FE6                     	;# 
  2094  0FE7                     	;# 
  2095  0FE8                     	;# 
  2096  0FE8                     	;# 
  2097  0FE9                     	;# 
  2098  0FEA                     	;# 
  2099  0FEA                     	;# 
  2100  0FEB                     	;# 
  2101  0FED                     	;# 
  2102  0FEE                     	;# 
  2103  0FEE                     	;# 
  2104  0FEF                     	;# 
  2105  0000                     	;# 
  2106  0001                     	;# 
  2107  0002                     	;# 
  2108  0003                     	;# 
  2109  0004                     	;# 
  2110  0005                     	;# 
  2111  0006                     	;# 
  2112  0007                     	;# 
  2113  0008                     	;# 
  2114  0009                     	;# 
  2115  000A                     	;# 
  2116  000B                     	;# 
  2117  000C                     	;# 
  2118  000E                     	;# 
  2119  0011                     	;# 
  2120  0012                     	;# 
  2121  0013                     	;# 
  2122  0015                     	;# 
  2123  0016                     	;# 
  2124  0016                     	;# 
  2125  0017                     	;# 
  2126  0018                     	;# 
  2127  0019                     	;# 
  2128  001A                     	;# 
  2129  001B                     	;# 
  2130  001C                     	;# 
  2131  008C                     	;# 
  2132  008E                     	;# 
  2133  0091                     	;# 
  2134  0092                     	;# 
  2135  0093                     	;# 
  2136  0095                     	;# 
  2137  0096                     	;# 
  2138  0097                     	;# 
  2139  0098                     	;# 
  2140  0099                     	;# 
  2141  009A                     	;# 
  2142  009B                     	;# 
  2143  009B                     	;# 
  2144  009C                     	;# 
  2145  009D                     	;# 
  2146  009E                     	;# 
  2147  009F                     	;# 
  2148  010C                     	;# 
  2149  010E                     	;# 
  2150  0111                     	;# 
  2151  0112                     	;# 
  2152  0113                     	;# 
  2153  0114                     	;# 
  2154  0115                     	;# 
  2155  0116                     	;# 
  2156  0117                     	;# 
  2157  0118                     	;# 
  2158  0119                     	;# 
  2159  018C                     	;# 
  2160  018E                     	;# 
  2161  0191                     	;# 
  2162  0191                     	;# 
  2163  0192                     	;# 
  2164  0193                     	;# 
  2165  0193                     	;# 
  2166  0194                     	;# 
  2167  0195                     	;# 
  2168  0196                     	;# 
  2169  0197                     	;# 
  2170  0199                     	;# 
  2171  019A                     	;# 
  2172  019B                     	;# 
  2173  019B                     	;# 
  2174  019C                     	;# 
  2175  019D                     	;# 
  2176  019E                     	;# 
  2177  019F                     	;# 
  2178  020C                     	;# 
  2179  020E                     	;# 
  2180  028C                     	;# 
  2181  028E                     	;# 
  2182  030C                     	;# 
  2183  030E                     	;# 
  2184  038C                     	;# 
  2185  038E                     	;# 
  2186  0391                     	;# 
  2187  0392                     	;# 
  2188  0393                     	;# 
  2189  0397                     	;# 
  2190  0398                     	;# 
  2191  0399                     	;# 
  2192  0691                     	;# 
  2193  0692                     	;# 
  2194  0693                     	;# 
  2195  0694                     	;# 
  2196  0695                     	;# 
  2197  0D8E                     	;# 
  2198  0D8F                     	;# 
  2199  0D90                     	;# 
  2200  0D91                     	;# 
  2201  0D91                     	;# 
  2202  0D92                     	;# 
  2203  0D93                     	;# 
  2204  0D93                     	;# 
  2205  0D94                     	;# 
  2206  0D95                     	;# 
  2207  0D95                     	;# 
  2208  0D96                     	;# 
  2209  0D97                     	;# 
  2210  0D97                     	;# 
  2211  0D98                     	;# 
  2212  0D99                     	;# 
  2213  0D99                     	;# 
  2214  0D9A                     	;# 
  2215  0D9B                     	;# 
  2216  0D9C                     	;# 
  2217  0D9C                     	;# 
  2218  0D9D                     	;# 
  2219  0D9D                     	;# 
  2220  0D9E                     	;# 
  2221  0D9F                     	;# 
  2222  0DA0                     	;# 
  2223  0DA1                     	;# 
  2224  0DA1                     	;# 
  2225  0DA2                     	;# 
  2226  0DA3                     	;# 
  2227  0DA3                     	;# 
  2228  0DA4                     	;# 
  2229  0DA5                     	;# 
  2230  0DA5                     	;# 
  2231  0DA6                     	;# 
  2232  0DA7                     	;# 
  2233  0DA7                     	;# 
  2234  0DA8                     	;# 
  2235  0DA9                     	;# 
  2236  0DA9                     	;# 
  2237  0DAA                     	;# 
  2238  0DAB                     	;# 
  2239  0DAC                     	;# 
  2240  0DAC                     	;# 
  2241  0DAD                     	;# 
  2242  0DAD                     	;# 
  2243  0DAE                     	;# 
  2244  0DAF                     	;# 
  2245  0DB0                     	;# 
  2246  0DB1                     	;# 
  2247  0DB1                     	;# 
  2248  0DB2                     	;# 
  2249  0DB3                     	;# 
  2250  0DB3                     	;# 
  2251  0DB4                     	;# 
  2252  0DB5                     	;# 
  2253  0DB5                     	;# 
  2254  0DB6                     	;# 
  2255  0DB7                     	;# 
  2256  0DB7                     	;# 
  2257  0DB8                     	;# 
  2258  0DB9                     	;# 
  2259  0DB9                     	;# 
  2260  0DBA                     	;# 
  2261  0DBB                     	;# 
  2262  0DBC                     	;# 
  2263  0DBC                     	;# 
  2264  0DBD                     	;# 
  2265  0DBD                     	;# 
  2266  0DBE                     	;# 
  2267  0DBF                     	;# 
  2268  0DC0                     	;# 
  2269  0DC1                     	;# 
  2270  0DC1                     	;# 
  2271  0DC2                     	;# 
  2272  0DC3                     	;# 
  2273  0DC3                     	;# 
  2274  0DC4                     	;# 
  2275  0DC5                     	;# 
  2276  0DC5                     	;# 
  2277  0DC6                     	;# 
  2278  0DC7                     	;# 
  2279  0DC7                     	;# 
  2280  0DC8                     	;# 
  2281  0DC9                     	;# 
  2282  0DC9                     	;# 
  2283  0DCA                     	;# 
  2284  0DCB                     	;# 
  2285  0DCC                     	;# 
  2286  0DCC                     	;# 
  2287  0DCD                     	;# 
  2288  0DCD                     	;# 
  2289  0DCE                     	;# 
  2290  0DCF                     	;# 
  2291  0DD0                     	;# 
  2292  0E0F                     	;# 
  2293  0E10                     	;# 
  2294  0E11                     	;# 
  2295  0E12                     	;# 
  2296  0E13                     	;# 
  2297  0E14                     	;# 
  2298  0E15                     	;# 
  2299  0E16                     	;# 
  2300  0E17                     	;# 
  2301  0E90                     	;# 
  2302  0E91                     	;# 
  2303  0E92                     	;# 
  2304  0E94                     	;# 
  2305  0E95                     	;# 
  2306  0EA0                     	;# 
  2307  0EA1                     	;# 
  2308  0EA2                     	;# 
  2309  0EA3                     	;# 
  2310  0EA4                     	;# 
  2311  0EA5                     	;# 
  2312  0FE4                     	;# 
  2313  0FE5                     	;# 
  2314  0FE6                     	;# 
  2315  0FE7                     	;# 
  2316  0FE8                     	;# 
  2317  0FE8                     	;# 
  2318  0FE9                     	;# 
  2319  0FEA                     	;# 
  2320  0FEA                     	;# 
  2321  0FEB                     	;# 
  2322  0FED                     	;# 
  2323  0FEE                     	;# 
  2324  0FEE                     	;# 
  2325  0FEF                     	;# 
  2326  0000                     	;# 
  2327  0001                     	;# 
  2328  0002                     	;# 
  2329  0003                     	;# 
  2330  0004                     	;# 
  2331  0005                     	;# 
  2332  0006                     	;# 
  2333  0007                     	;# 
  2334  0008                     	;# 
  2335  0009                     	;# 
  2336  000A                     	;# 
  2337  000B                     	;# 
  2338  000C                     	;# 
  2339  000E                     	;# 
  2340  0011                     	;# 
  2341  0012                     	;# 
  2342  0013                     	;# 
  2343  0015                     	;# 
  2344  0016                     	;# 
  2345  0016                     	;# 
  2346  0017                     	;# 
  2347  0018                     	;# 
  2348  0019                     	;# 
  2349  001A                     	;# 
  2350  001B                     	;# 
  2351  001C                     	;# 
  2352  008C                     	;# 
  2353  008E                     	;# 
  2354  0091                     	;# 
  2355  0092                     	;# 
  2356  0093                     	;# 
  2357  0095                     	;# 
  2358  0096                     	;# 
  2359  0097                     	;# 
  2360  0098                     	;# 
  2361  0099                     	;# 
  2362  009A                     	;# 
  2363  009B                     	;# 
  2364  009B                     	;# 
  2365  009C                     	;# 
  2366  009D                     	;# 
  2367  009E                     	;# 
  2368  009F                     	;# 
  2369  010C                     	;# 
  2370  010E                     	;# 
  2371  0111                     	;# 
  2372  0112                     	;# 
  2373  0113                     	;# 
  2374  0114                     	;# 
  2375  0115                     	;# 
  2376  0116                     	;# 
  2377  0117                     	;# 
  2378  0118                     	;# 
  2379  0119                     	;# 
  2380  018C                     	;# 
  2381  018E                     	;# 
  2382  0191                     	;# 
  2383  0191                     	;# 
  2384  0192                     	;# 
  2385  0193                     	;# 
  2386  0193                     	;# 
  2387  0194                     	;# 
  2388  0195                     	;# 
  2389  0196                     	;# 
  2390  0197                     	;# 
  2391  0199                     	;# 
  2392  019A                     	;# 
  2393  019B                     	;# 
  2394  019B                     	;# 
  2395  019C                     	;# 
  2396  019D                     	;# 
  2397  019E                     	;# 
  2398  019F                     	;# 
  2399  020C                     	;# 
  2400  020E                     	;# 
  2401  028C                     	;# 
  2402  028E                     	;# 
  2403  030C                     	;# 
  2404  030E                     	;# 
  2405  038C                     	;# 
  2406  038E                     	;# 
  2407  0391                     	;# 
  2408  0392                     	;# 
  2409  0393                     	;# 
  2410  0397                     	;# 
  2411  0398                     	;# 
  2412  0399                     	;# 
  2413  0691                     	;# 
  2414  0692                     	;# 
  2415  0693                     	;# 
  2416  0694                     	;# 
  2417  0695                     	;# 
  2418  0D8E                     	;# 
  2419  0D8F                     	;# 
  2420  0D90                     	;# 
  2421  0D91                     	;# 
  2422  0D91                     	;# 
  2423  0D92                     	;# 
  2424  0D93                     	;# 
  2425  0D93                     	;# 
  2426  0D94                     	;# 
  2427  0D95                     	;# 
  2428  0D95                     	;# 
  2429  0D96                     	;# 
  2430  0D97                     	;# 
  2431  0D97                     	;# 
  2432  0D98                     	;# 
  2433  0D99                     	;# 
  2434  0D99                     	;# 
  2435  0D9A                     	;# 
  2436  0D9B                     	;# 
  2437  0D9C                     	;# 
  2438  0D9C                     	;# 
  2439  0D9D                     	;# 
  2440  0D9D                     	;# 
  2441  0D9E                     	;# 
  2442  0D9F                     	;# 
  2443  0DA0                     	;# 
  2444  0DA1                     	;# 
  2445  0DA1                     	;# 
  2446  0DA2                     	;# 
  2447  0DA3                     	;# 
  2448  0DA3                     	;# 
  2449  0DA4                     	;# 
  2450  0DA5                     	;# 
  2451  0DA5                     	;# 
  2452  0DA6                     	;# 
  2453  0DA7                     	;# 
  2454  0DA7                     	;# 
  2455  0DA8                     	;# 
  2456  0DA9                     	;# 
  2457  0DA9                     	;# 
  2458  0DAA                     	;# 
  2459  0DAB                     	;# 
  2460  0DAC                     	;# 
  2461  0DAC                     	;# 
  2462  0DAD                     	;# 
  2463  0DAD                     	;# 
  2464  0DAE                     	;# 
  2465  0DAF                     	;# 
  2466  0DB0                     	;# 
  2467  0DB1                     	;# 
  2468  0DB1                     	;# 
  2469  0DB2                     	;# 
  2470  0DB3                     	;# 
  2471  0DB3                     	;# 
  2472  0DB4                     	;# 
  2473  0DB5                     	;# 
  2474  0DB5                     	;# 
  2475  0DB6                     	;# 
  2476  0DB7                     	;# 
  2477  0DB7                     	;# 
  2478  0DB8                     	;# 
  2479  0DB9                     	;# 
  2480  0DB9                     	;# 
  2481  0DBA                     	;# 
  2482  0DBB                     	;# 
  2483  0DBC                     	;# 
  2484  0DBC                     	;# 
  2485  0DBD                     	;# 
  2486  0DBD                     	;# 
  2487  0DBE                     	;# 
  2488  0DBF                     	;# 
  2489  0DC0                     	;# 
  2490  0DC1                     	;# 
  2491  0DC1                     	;# 
  2492  0DC2                     	;# 
  2493  0DC3                     	;# 
  2494  0DC3                     	;# 
  2495  0DC4                     	;# 
  2496  0DC5                     	;# 
  2497  0DC5                     	;# 
  2498  0DC6                     	;# 
  2499  0DC7                     	;# 
  2500  0DC7                     	;# 
  2501  0DC8                     	;# 
  2502  0DC9                     	;# 
  2503  0DC9                     	;# 
  2504  0DCA                     	;# 
  2505  0DCB                     	;# 
  2506  0DCC                     	;# 
  2507  0DCC                     	;# 
  2508  0DCD                     	;# 
  2509  0DCD                     	;# 
  2510  0DCE                     	;# 
  2511  0DCF                     	;# 
  2512  0DD0                     	;# 
  2513  0E0F                     	;# 
  2514  0E10                     	;# 
  2515  0E11                     	;# 
  2516  0E12                     	;# 
  2517  0E13                     	;# 
  2518  0E14                     	;# 
  2519  0E15                     	;# 
  2520  0E16                     	;# 
  2521  0E17                     	;# 
  2522  0E90                     	;# 
  2523  0E91                     	;# 
  2524  0E92                     	;# 
  2525  0E94                     	;# 
  2526  0E95                     	;# 
  2527  0EA0                     	;# 
  2528  0EA1                     	;# 
  2529  0EA2                     	;# 
  2530  0EA3                     	;# 
  2531  0EA4                     	;# 
  2532  0EA5                     	;# 
  2533  0FE4                     	;# 
  2534  0FE5                     	;# 
  2535  0FE6                     	;# 
  2536  0FE7                     	;# 
  2537  0FE8                     	;# 
  2538  0FE8                     	;# 
  2539  0FE9                     	;# 
  2540  0FEA                     	;# 
  2541  0FEA                     	;# 
  2542  0FEB                     	;# 
  2543  0FED                     	;# 
  2544  0FEE                     	;# 
  2545  0FEE                     	;# 
  2546  0FEF                     	;# 
  2547  0FFF                     	;# 
  2548  0000                     	;# 
  2549  0001                     	;# 
  2550  0002                     	;# 
  2551  0003                     	;# 
  2552  0004                     	;# 
  2553  0005                     	;# 
  2554  0006                     	;# 
  2555  0007                     	;# 
  2556  0008                     	;# 
  2557  0009                     	;# 
  2558  000A                     	;# 
  2559  000B                     	;# 
  2560  000C                     	;# 
  2561  000E                     	;# 
  2562  0011                     	;# 
  2563  0012                     	;# 
  2564  0013                     	;# 
  2565  0015                     	;# 
  2566  0016                     	;# 
  2567  0016                     	;# 
  2568  0017                     	;# 
  2569  0018                     	;# 
  2570  0019                     	;# 
  2571  001A                     	;# 
  2572  001B                     	;# 
  2573  001C                     	;# 
  2574  008C                     	;# 
  2575  008E                     	;# 
  2576  0091                     	;# 
  2577  0092                     	;# 
  2578  0093                     	;# 
  2579  0095                     	;# 
  2580  0096                     	;# 
  2581  0097                     	;# 
  2582  0098                     	;# 
  2583  0099                     	;# 
  2584  009A                     	;# 
  2585  009B                     	;# 
  2586  009B                     	;# 
  2587  009C                     	;# 
  2588  009D                     	;# 
  2589  009E                     	;# 
  2590  009F                     	;# 
  2591  010C                     	;# 
  2592  010E                     	;# 
  2593  0111                     	;# 
  2594  0112                     	;# 
  2595  0113                     	;# 
  2596  0114                     	;# 
  2597  0115                     	;# 
  2598  0116                     	;# 
  2599  0117                     	;# 
  2600  0118                     	;# 
  2601  0119                     	;# 
  2602  018C                     	;# 
  2603  018E                     	;# 
  2604  0191                     	;# 
  2605  0191                     	;# 
  2606  0192                     	;# 
  2607  0193                     	;# 
  2608  0193                     	;# 
  2609  0194                     	;# 
  2610  0195                     	;# 
  2611  0196                     	;# 
  2612  0197                     	;# 
  2613  0199                     	;# 
  2614  019A                     	;# 
  2615  019B                     	;# 
  2616  019B                     	;# 
  2617  019C                     	;# 
  2618  019D                     	;# 
  2619  019E                     	;# 
  2620  019F                     	;# 
  2621  020C                     	;# 
  2622  020E                     	;# 
  2623  028C                     	;# 
  2624  028E                     	;# 
  2625  030C                     	;# 
  2626  030E                     	;# 
  2627  038C                     	;# 
  2628  038E                     	;# 
  2629  0391                     	;# 
  2630  0392                     	;# 
  2631  0393                     	;# 
  2632  0397                     	;# 
  2633  0398                     	;# 
  2634  0399                     	;# 
  2635  0691                     	;# 
  2636  0692                     	;# 
  2637  0693                     	;# 
  2638  0694                     	;# 
  2639  0695                     	;# 
  2640  0D8E                     	;# 
  2641  0D8F                     	;# 
  2642  0D90                     	;# 
  2643  0D91                     	;# 
  2644  0D91                     	;# 
  2645  0D92                     	;# 
  2646  0D93                     	;# 
  2647  0D93                     	;# 
  2648  0D94                     	;# 
  2649  0D95                     	;# 
  2650  0D95                     	;# 
  2651  0D96                     	;# 
  2652  0D97                     	;# 
  2653  0D97                     	;# 
  2654  0D98                     	;# 
  2655  0D99                     	;# 
  2656  0D99                     	;# 
  2657  0D9A                     	;# 
  2658  0D9B                     	;# 
  2659  0D9C                     	;# 
  2660  0D9C                     	;# 
  2661  0D9D                     	;# 
  2662  0D9D                     	;# 
  2663  0D9E                     	;# 
  2664  0D9F                     	;# 
  2665  0DA0                     	;# 
  2666  0DA1                     	;# 
  2667  0DA1                     	;# 
  2668  0DA2                     	;# 
  2669  0DA3                     	;# 
  2670  0DA3                     	;# 
  2671  0DA4                     	;# 
  2672  0DA5                     	;# 
  2673  0DA5                     	;# 
  2674  0DA6                     	;# 
  2675  0DA7                     	;# 
  2676  0DA7                     	;# 
  2677  0DA8                     	;# 
  2678  0DA9                     	;# 
  2679  0DA9                     	;# 
  2680  0DAA                     	;# 
  2681  0DAB                     	;# 
  2682  0DAC                     	;# 
  2683  0DAC                     	;# 
  2684  0DAD                     	;# 
  2685  0DAD                     	;# 
  2686  0DAE                     	;# 
  2687  0DAF                     	;# 
  2688  0DB0                     	;# 
  2689  0DB1                     	;# 
  2690  0DB1                     	;# 
  2691  0DB2                     	;# 
  2692  0DB3                     	;# 
  2693  0DB3                     	;# 
  2694  0DB4                     	;# 
  2695  0DB5                     	;# 
  2696  0DB5                     	;# 
  2697  0DB6                     	;# 
  2698  0DB7                     	;# 
  2699  0DB7                     	;# 
  2700  0DB8                     	;# 
  2701  0DB9                     	;# 
  2702  0DB9                     	;# 
  2703  0DBA                     	;# 
  2704  0DBB                     	;# 
  2705  0DBC                     	;# 
  2706  0DBC                     	;# 
  2707  0DBD                     	;# 
  2708  0DBD                     	;# 
  2709  0DBE                     	;# 
  2710  0DBF                     	;# 
  2711  0DC0                     	;# 
  2712  0DC1                     	;# 
  2713  0DC1                     	;# 
  2714  0DC2                     	;# 
  2715  0DC3                     	;# 
  2716  0DC3                     	;# 
  2717  0DC4                     	;# 
  2718  0DC5                     	;# 
  2719  0DC5                     	;# 
  2720  0DC6                     	;# 
  2721  0DC7                     	;# 
  2722  0DC7                     	;# 
  2723  0DC8                     	;# 
  2724  0DC9                     	;# 
  2725  0DC9                     	;# 
  2726  0DCA                     	;# 
  2727  0DCB                     	;# 
  2728  0DCC                     	;# 
  2729  0DCC                     	;# 
  2730  0DCD                     	;# 
  2731  0DCD                     	;# 
  2732  0DCE                     	;# 
  2733  0DCF                     	;# 
  2734  0DD0                     	;# 
  2735  0E0F                     	;# 
  2736  0E10                     	;# 
  2737  0E11                     	;# 
  2738  0E12                     	;# 
  2739  0E13                     	;# 
  2740  0E14                     	;# 
  2741  0E15                     	;# 
  2742  0E16                     	;# 
  2743  0E17                     	;# 
  2744  0E90                     	;# 
  2745  0E91                     	;# 
  2746  0E92                     	;# 
  2747  0E94                     	;# 
  2748  0E95                     	;# 
  2749  0EA0                     	;# 
  2750  0EA1                     	;# 
  2751  0EA2                     	;# 
  2752  0EA3                     	;# 
  2753  0EA4                     	;# 
  2754  0EA5                     	;# 
  2755  0FE4                     	;# 
  2756  0FE5                     	;# 
  2757  0FE6                     	;# 
  2758  0FE7                     	;# 
  2759  0FE8                     	;# 
  2760  0FE8                     	;# 
  2761  0FE9                     	;# 
  2762  0FEA                     	;# 
  2763  0FEA                     	;# 
  2764  0FEB                     	;# 
  2765  0FED                     	;# 
  2766  0FEE                     	;# 
  2767  0FEE                     	;# 
  2768  0FEF                     	;# 
  2769  0FFF                     	;# 
  2770  0000                     	;# 
  2771  0001                     	;# 
  2772  0002                     	;# 
  2773  0003                     	;# 
  2774  0004                     	;# 
  2775  0005                     	;# 
  2776  0006                     	;# 
  2777  0007                     	;# 
  2778  0008                     	;# 
  2779  0009                     	;# 
  2780  000A                     	;# 
  2781  000B                     	;# 
  2782  000C                     	;# 
  2783  000E                     	;# 
  2784  0011                     	;# 
  2785  0012                     	;# 
  2786  0013                     	;# 
  2787  0015                     	;# 
  2788  0016                     	;# 
  2789  0016                     	;# 
  2790  0017                     	;# 
  2791  0018                     	;# 
  2792  0019                     	;# 
  2793  001A                     	;# 
  2794  001B                     	;# 
  2795  001C                     	;# 
  2796  008C                     	;# 
  2797  008E                     	;# 
  2798  0091                     	;# 
  2799  0092                     	;# 
  2800  0093                     	;# 
  2801  0095                     	;# 
  2802  0096                     	;# 
  2803  0097                     	;# 
  2804  0098                     	;# 
  2805  0099                     	;# 
  2806  009A                     	;# 
  2807  009B                     	;# 
  2808  009B                     	;# 
  2809  009C                     	;# 
  2810  009D                     	;# 
  2811  009E                     	;# 
  2812  009F                     	;# 
  2813  010C                     	;# 
  2814  010E                     	;# 
  2815  0111                     	;# 
  2816  0112                     	;# 
  2817  0113                     	;# 
  2818  0114                     	;# 
  2819  0115                     	;# 
  2820  0116                     	;# 
  2821  0117                     	;# 
  2822  0118                     	;# 
  2823  0119                     	;# 
  2824  018C                     	;# 
  2825  018E                     	;# 
  2826  0191                     	;# 
  2827  0191                     	;# 
  2828  0192                     	;# 
  2829  0193                     	;# 
  2830  0193                     	;# 
  2831  0194                     	;# 
  2832  0195                     	;# 
  2833  0196                     	;# 
  2834  0197                     	;# 
  2835  0199                     	;# 
  2836  019A                     	;# 
  2837  019B                     	;# 
  2838  019B                     	;# 
  2839  019C                     	;# 
  2840  019D                     	;# 
  2841  019E                     	;# 
  2842  019F                     	;# 
  2843  020C                     	;# 
  2844  020E                     	;# 
  2845  028C                     	;# 
  2846  028E                     	;# 
  2847  030C                     	;# 
  2848  030E                     	;# 
  2849  038C                     	;# 
  2850  038E                     	;# 
  2851  0391                     	;# 
  2852  0392                     	;# 
  2853  0393                     	;# 
  2854  0397                     	;# 
  2855  0398                     	;# 
  2856  0399                     	;# 
  2857  0691                     	;# 
  2858  0692                     	;# 
  2859  0693                     	;# 
  2860  0694                     	;# 
  2861  0695                     	;# 
  2862  0D8E                     	;# 
  2863  0D8F                     	;# 
  2864  0D90                     	;# 
  2865  0D91                     	;# 
  2866  0D91                     	;# 
  2867  0D92                     	;# 
  2868  0D93                     	;# 
  2869  0D93                     	;# 
  2870  0D94                     	;# 
  2871  0D95                     	;# 
  2872  0D95                     	;# 
  2873  0D96                     	;# 
  2874  0D97                     	;# 
  2875  0D97                     	;# 
  2876  0D98                     	;# 
  2877  0D99                     	;# 
  2878  0D99                     	;# 
  2879  0D9A                     	;# 
  2880  0D9B                     	;# 
  2881  0D9C                     	;# 
  2882  0D9C                     	;# 
  2883  0D9D                     	;# 
  2884  0D9D                     	;# 
  2885  0D9E                     	;# 
  2886  0D9F                     	;# 
  2887  0DA0                     	;# 
  2888  0DA1                     	;# 
  2889  0DA1                     	;# 
  2890  0DA2                     	;# 
  2891  0DA3                     	;# 
  2892  0DA3                     	;# 
  2893  0DA4                     	;# 
  2894  0DA5                     	;# 
  2895  0DA5                     	;# 
  2896  0DA6                     	;# 
  2897  0DA7                     	;# 
  2898  0DA7                     	;# 
  2899  0DA8                     	;# 
  2900  0DA9                     	;# 
  2901  0DA9                     	;# 
  2902  0DAA                     	;# 
  2903  0DAB                     	;# 
  2904  0DAC                     	;# 
  2905  0DAC                     	;# 
  2906  0DAD                     	;# 
  2907  0DAD                     	;# 
  2908  0DAE                     	;# 
  2909  0DAF                     	;# 
  2910  0DB0                     	;# 
  2911  0DB1                     	;# 
  2912  0DB1                     	;# 
  2913  0DB2                     	;# 
  2914  0DB3                     	;# 
  2915  0DB3                     	;# 
  2916  0DB4                     	;# 
  2917  0DB5                     	;# 
  2918  0DB5                     	;# 
  2919  0DB6                     	;# 
  2920  0DB7                     	;# 
  2921  0DB7                     	;# 
  2922  0DB8                     	;# 
  2923  0DB9                     	;# 
  2924  0DB9                     	;# 
  2925  0DBA                     	;# 
  2926  0DBB                     	;# 
  2927  0DBC                     	;# 
  2928  0DBC                     	;# 
  2929  0DBD                     	;# 
  2930  0DBD                     	;# 
  2931  0DBE                     	;# 
  2932  0DBF                     	;# 
  2933  0DC0                     	;# 
  2934  0DC1                     	;# 
  2935  0DC1                     	;# 
  2936  0DC2                     	;# 
  2937  0DC3                     	;# 
  2938  0DC3                     	;# 
  2939  0DC4                     	;# 
  2940  0DC5                     	;# 
  2941  0DC5                     	;# 
  2942  0DC6                     	;# 
  2943  0DC7                     	;# 
  2944  0DC7                     	;# 
  2945  0DC8                     	;# 
  2946  0DC9                     	;# 
  2947  0DC9                     	;# 
  2948  0DCA                     	;# 
  2949  0DCB                     	;# 
  2950  0DCC                     	;# 
  2951  0DCC                     	;# 
  2952  0DCD                     	;# 
  2953  0DCD                     	;# 
  2954  0DCE                     	;# 
  2955  0DCF                     	;# 
  2956  0DD0                     	;# 
  2957  0E0F                     	;# 
  2958  0E10                     	;# 
  2959  0E11                     	;# 
  2960  0E12                     	;# 
  2961  0E13                     	;# 
  2962  0E14                     	;# 
  2963  0E15                     	;# 
  2964  0E16                     	;# 
  2965  0E17                     	;# 
  2966  0E90                     	;# 
  2967  0E91                     	;# 
  2968  0E92                     	;# 
  2969  0E94                     	;# 
  2970  0E95                     	;# 
  2971  0EA0                     	;# 
  2972  0EA1                     	;# 
  2973  0EA2                     	;# 
  2974  0EA3                     	;# 
  2975  0EA4                     	;# 
  2976  0EA5                     	;# 
  2977  0FE4                     	;# 
  2978  0FE5                     	;# 
  2979  0FE6                     	;# 
  2980  0FE7                     	;# 
  2981  0FE8                     	;# 
  2982  0FE8                     	;# 
  2983  0FE9                     	;# 
  2984  0FEA                     	;# 
  2985  0FEA                     	;# 
  2986  0FEB                     	;# 
  2987  0FED                     	;# 
  2988  0FEE                     	;# 
  2989  0FEE                     	;# 
  2990  0FEF                     	;# 
  2991  0FFF                     	;# 
  2992  0000                     	;# 
  2993  0001                     	;# 
  2994  0002                     	;# 
  2995  0003                     	;# 
  2996  0004                     	;# 
  2997  0005                     	;# 
  2998  0006                     	;# 
  2999  0007                     	;# 
  3000  0008                     	;# 
  3001  0009                     	;# 
  3002  000A                     	;# 
  3003  000B                     	;# 
  3004  000C                     	;# 
  3005  000E                     	;# 
  3006  0011                     	;# 
  3007  0012                     	;# 
  3008  0013                     	;# 
  3009  0015                     	;# 
  3010  0016                     	;# 
  3011  0016                     	;# 
  3012  0017                     	;# 
  3013  0018                     	;# 
  3014  0019                     	;# 
  3015  001A                     	;# 
  3016  001B                     	;# 
  3017  001C                     	;# 
  3018  008C                     	;# 
  3019  008E                     	;# 
  3020  0091                     	;# 
  3021  0092                     	;# 
  3022  0093                     	;# 
  3023  0095                     	;# 
  3024  0096                     	;# 
  3025  0097                     	;# 
  3026  0098                     	;# 
  3027  0099                     	;# 
  3028  009A                     	;# 
  3029  009B                     	;# 
  3030  009B                     	;# 
  3031  009C                     	;# 
  3032  009D                     	;# 
  3033  009E                     	;# 
  3034  009F                     	;# 
  3035  010C                     	;# 
  3036  010E                     	;# 
  3037  0111                     	;# 
  3038  0112                     	;# 
  3039  0113                     	;# 
  3040  0114                     	;# 
  3041  0115                     	;# 
  3042  0116                     	;# 
  3043  0117                     	;# 
  3044  0118                     	;# 
  3045  0119                     	;# 
  3046  018C                     	;# 
  3047  018E                     	;# 
  3048  0191                     	;# 
  3049  0191                     	;# 
  3050  0192                     	;# 
  3051  0193                     	;# 
  3052  0193                     	;# 
  3053  0194                     	;# 
  3054  0195                     	;# 
  3055  0196                     	;# 
  3056  0197                     	;# 
  3057  0199                     	;# 
  3058  019A                     	;# 
  3059  019B                     	;# 
  3060  019B                     	;# 
  3061  019C                     	;# 
  3062  019D                     	;# 
  3063  019E                     	;# 
  3064  019F                     	;# 
  3065  020C                     	;# 
  3066  020E                     	;# 
  3067  028C                     	;# 
  3068  028E                     	;# 
  3069  030C                     	;# 
  3070  030E                     	;# 
  3071  038C                     	;# 
  3072  038E                     	;# 
  3073  0391                     	;# 
  3074  0392                     	;# 
  3075  0393                     	;# 
  3076  0397                     	;# 
  3077  0398                     	;# 
  3078  0399                     	;# 
  3079  0691                     	;# 
  3080  0692                     	;# 
  3081  0693                     	;# 
  3082  0694                     	;# 
  3083  0695                     	;# 
  3084  0D8E                     	;# 
  3085  0D8F                     	;# 
  3086  0D90                     	;# 
  3087  0D91                     	;# 
  3088  0D91                     	;# 
  3089  0D92                     	;# 
  3090  0D93                     	;# 
  3091  0D93                     	;# 
  3092  0D94                     	;# 
  3093  0D95                     	;# 
  3094  0D95                     	;# 
  3095  0D96                     	;# 
  3096  0D97                     	;# 
  3097  0D97                     	;# 
  3098  0D98                     	;# 
  3099  0D99                     	;# 
  3100  0D99                     	;# 
  3101  0D9A                     	;# 
  3102  0D9B                     	;# 
  3103  0D9C                     	;# 
  3104  0D9C                     	;# 
  3105  0D9D                     	;# 
  3106  0D9D                     	;# 
  3107  0D9E                     	;# 
  3108  0D9F                     	;# 
  3109  0DA0                     	;# 
  3110  0DA1                     	;# 
  3111  0DA1                     	;# 
  3112  0DA2                     	;# 
  3113  0DA3                     	;# 
  3114  0DA3                     	;# 
  3115  0DA4                     	;# 
  3116  0DA5                     	;# 
  3117  0DA5                     	;# 
  3118  0DA6                     	;# 
  3119  0DA7                     	;# 
  3120  0DA7                     	;# 
  3121  0DA8                     	;# 
  3122  0DA9                     	;# 
  3123  0DA9                     	;# 
  3124  0DAA                     	;# 
  3125  0DAB                     	;# 
  3126  0DAC                     	;# 
  3127  0DAC                     	;# 
  3128  0DAD                     	;# 
  3129  0DAD                     	;# 
  3130  0DAE                     	;# 
  3131  0DAF                     	;# 
  3132  0DB0                     	;# 
  3133  0DB1                     	;# 
  3134  0DB1                     	;# 
  3135  0DB2                     	;# 
  3136  0DB3                     	;# 
  3137  0DB3                     	;# 
  3138  0DB4                     	;# 
  3139  0DB5                     	;# 
  3140  0DB5                     	;# 
  3141  0DB6                     	;# 
  3142  0DB7                     	;# 
  3143  0DB7                     	;# 
  3144  0DB8                     	;# 
  3145  0DB9                     	;# 
  3146  0DB9                     	;# 
  3147  0DBA                     	;# 
  3148  0DBB                     	;# 
  3149  0DBC                     	;# 
  3150  0DBC                     	;# 
  3151  0DBD                     	;# 
  3152  0DBD                     	;# 
  3153  0DBE                     	;# 
  3154  0DBF                     	;# 
  3155  0DC0                     	;# 
  3156  0DC1                     	;# 
  3157  0DC1                     	;# 
  3158  0DC2                     	;# 
  3159  0DC3                     	;# 
  3160  0DC3                     	;# 
  3161  0DC4                     	;# 
  3162  0DC5                     	;# 
  3163  0DC5                     	;# 
  3164  0DC6                     	;# 
  3165  0DC7                     	;# 
  3166  0DC7                     	;# 
  3167  0DC8                     	;# 
  3168  0DC9                     	;# 
  3169  0DC9                     	;# 
  3170  0DCA                     	;# 
  3171  0DCB                     	;# 
  3172  0DCC                     	;# 
  3173  0DCC                     	;# 
  3174  0DCD                     	;# 
  3175  0DCD                     	;# 
  3176  0DCE                     	;# 
  3177  0DCF                     	;# 
  3178  0DD0                     	;# 
  3179  0E0F                     	;# 
  3180  0E10                     	;# 
  3181  0E11                     	;# 
  3182  0E12                     	;# 
  3183  0E13                     	;# 
  3184  0E14                     	;# 
  3185  0E15                     	;# 
  3186  0E16                     	;# 
  3187  0E17                     	;# 
  3188  0E90                     	;# 
  3189  0E91                     	;# 
  3190  0E92                     	;# 
  3191  0E94                     	;# 
  3192  0E95                     	;# 
  3193  0EA0                     	;# 
  3194  0EA1                     	;# 
  3195  0EA2                     	;# 
  3196  0EA3                     	;# 
  3197  0EA4                     	;# 
  3198  0EA5                     	;# 
  3199  0FE4                     	;# 
  3200  0FE5                     	;# 
  3201  0FE6                     	;# 
  3202  0FE7                     	;# 
  3203  0FE8                     	;# 
  3204  0FE8                     	;# 
  3205  0FE9                     	;# 
  3206  0FEA                     	;# 
  3207  0FEA                     	;# 
  3208  0FEB                     	;# 
  3209  0FED                     	;# 
  3210  0FEE                     	;# 
  3211  0FEE                     	;# 
  3212  0FEF                     	;# 
  3213  0FFF                     	;# 
  3214  0000                     	;# 
  3215  0001                     	;# 
  3216  0002                     	;# 
  3217  0003                     	;# 
  3218  0004                     	;# 
  3219  0005                     	;# 
  3220  0006                     	;# 
  3221  0007                     	;# 
  3222  0008                     	;# 
  3223  0009                     	;# 
  3224  000A                     	;# 
  3225  000B                     	;# 
  3226  000C                     	;# 
  3227  000E                     	;# 
  3228  0011                     	;# 
  3229  0012                     	;# 
  3230  0013                     	;# 
  3231  0015                     	;# 
  3232  0016                     	;# 
  3233  0016                     	;# 
  3234  0017                     	;# 
  3235  0018                     	;# 
  3236  0019                     	;# 
  3237  001A                     	;# 
  3238  001B                     	;# 
  3239  001C                     	;# 
  3240  008C                     	;# 
  3241  008E                     	;# 
  3242  0091                     	;# 
  3243  0092                     	;# 
  3244  0093                     	;# 
  3245  0095                     	;# 
  3246  0096                     	;# 
  3247  0097                     	;# 
  3248  0098                     	;# 
  3249  0099                     	;# 
  3250  009A                     	;# 
  3251  009B                     	;# 
  3252  009B                     	;# 
  3253  009C                     	;# 
  3254  009D                     	;# 
  3255  009E                     	;# 
  3256  009F                     	;# 
  3257  010C                     	;# 
  3258  010E                     	;# 
  3259  0111                     	;# 
  3260  0112                     	;# 
  3261  0113                     	;# 
  3262  0114                     	;# 
  3263  0115                     	;# 
  3264  0116                     	;# 
  3265  0117                     	;# 
  3266  0118                     	;# 
  3267  0119                     	;# 
  3268  018C                     	;# 
  3269  018E                     	;# 
  3270  0191                     	;# 
  3271  0191                     	;# 
  3272  0192                     	;# 
  3273  0193                     	;# 
  3274  0193                     	;# 
  3275  0194                     	;# 
  3276  0195                     	;# 
  3277  0196                     	;# 
  3278  0197                     	;# 
  3279  0199                     	;# 
  3280  019A                     	;# 
  3281  019B                     	;# 
  3282  019B                     	;# 
  3283  019C                     	;# 
  3284  019D                     	;# 
  3285  019E                     	;# 
  3286  019F                     	;# 
  3287  020C                     	;# 
  3288  020E                     	;# 
  3289  028C                     	;# 
  3290  028E                     	;# 
  3291  030C                     	;# 
  3292  030E                     	;# 
  3293  038C                     	;# 
  3294  038E                     	;# 
  3295  0391                     	;# 
  3296  0392                     	;# 
  3297  0393                     	;# 
  3298  0397                     	;# 
  3299  0398                     	;# 
  3300  0399                     	;# 
  3301  0691                     	;# 
  3302  0692                     	;# 
  3303  0693                     	;# 
  3304  0694                     	;# 
  3305  0695                     	;# 
  3306  0D8E                     	;# 
  3307  0D8F                     	;# 
  3308  0D90                     	;# 
  3309  0D91                     	;# 
  3310  0D91                     	;# 
  3311  0D92                     	;# 
  3312  0D93                     	;# 
  3313  0D93                     	;# 
  3314  0D94                     	;# 
  3315  0D95                     	;# 
  3316  0D95                     	;# 
  3317  0D96                     	;# 
  3318  0D97                     	;# 
  3319  0D97                     	;# 
  3320  0D98                     	;# 
  3321  0D99                     	;# 
  3322  0D99                     	;# 
  3323  0D9A                     	;# 
  3324  0D9B                     	;# 
  3325  0D9C                     	;# 
  3326  0D9C                     	;# 
  3327  0D9D                     	;# 
  3328  0D9D                     	;# 
  3329  0D9E                     	;# 
  3330  0D9F                     	;# 
  3331  0DA0                     	;# 
  3332  0DA1                     	;# 
  3333  0DA1                     	;# 
  3334  0DA2                     	;# 
  3335  0DA3                     	;# 
  3336  0DA3                     	;# 
  3337  0DA4                     	;# 
  3338  0DA5                     	;# 
  3339  0DA5                     	;# 
  3340  0DA6                     	;# 
  3341  0DA7                     	;# 
  3342  0DA7                     	;# 
  3343  0DA8                     	;# 
  3344  0DA9                     	;# 
  3345  0DA9                     	;# 
  3346  0DAA                     	;# 
  3347  0DAB                     	;# 
  3348  0DAC                     	;# 
  3349  0DAC                     	;# 
  3350  0DAD                     	;# 
  3351  0DAD                     	;# 
  3352  0DAE                     	;# 
  3353  0DAF                     	;# 
  3354  0DB0                     	;# 
  3355  0DB1                     	;# 
  3356  0DB1                     	;# 
  3357  0DB2                     	;# 
  3358  0DB3                     	;# 
  3359  0DB3                     	;# 
  3360  0DB4                     	;# 
  3361  0DB5                     	;# 
  3362  0DB5                     	;# 
  3363  0DB6                     	;# 
  3364  0DB7                     	;# 
  3365  0DB7                     	;# 
  3366  0DB8                     	;# 
  3367  0DB9                     	;# 
  3368  0DB9                     	;# 
  3369  0DBA                     	;# 
  3370  0DBB                     	;# 
  3371  0DBC                     	;# 
  3372  0DBC                     	;# 
  3373  0DBD                     	;# 
  3374  0DBD                     	;# 
  3375  0DBE                     	;# 
  3376  0DBF                     	;# 
  3377  0DC0                     	;# 
  3378  0DC1                     	;# 
  3379  0DC1                     	;# 
  3380  0DC2                     	;# 
  3381  0DC3                     	;# 
  3382  0DC3                     	;# 
  3383  0DC4                     	;# 
  3384  0DC5                     	;# 
  3385  0DC5                     	;# 
  3386  0DC6                     	;# 
  3387  0DC7                     	;# 
  3388  0DC7                     	;# 
  3389  0DC8                     	;# 
  3390  0DC9                     	;# 
  3391  0DC9                     	;# 
  3392  0DCA                     	;# 
  3393  0DCB                     	;# 
  3394  0DCC                     	;# 
  3395  0DCC                     	;# 
  3396  0DCD                     	;# 
  3397  0DCD                     	;# 
  3398  0DCE                     	;# 
  3399  0DCF                     	;# 
  3400  0DD0                     	;# 
  3401  0E0F                     	;# 
  3402  0E10                     	;# 
  3403  0E11                     	;# 
  3404  0E12                     	;# 
  3405  0E13                     	;# 
  3406  0E14                     	;# 
  3407  0E15                     	;# 
  3408  0E16                     	;# 
  3409  0E17                     	;# 
  3410  0E90                     	;# 
  3411  0E91                     	;# 
  3412  0E92                     	;# 
  3413  0E94                     	;# 
  3414  0E95                     	;# 
  3415  0EA0                     	;# 
  3416  0EA1                     	;# 
  3417  0EA2                     	;# 
  3418  0EA3                     	;# 
  3419  0EA4                     	;# 
  3420  0EA5                     	;# 
  3421  0FE4                     	;# 
  3422  0FE5                     	;# 
  3423  0FE6                     	;# 
  3424  0FE7                     	;# 
  3425  0FE8                     	;# 
  3426  0FE8                     	;# 
  3427  0FE9                     	;# 
  3428  0FEA                     	;# 
  3429  0FEA                     	;# 
  3430  0FEB                     	;# 
  3431  0FED                     	;# 
  3432  0FEE                     	;# 
  3433  0FEE                     	;# 
  3434  0FEF                     	;# 
  3435  0FFF                     	;# 
  3436  0000                     	;# 
  3437  0001                     	;# 
  3438  0002                     	;# 
  3439  0003                     	;# 
  3440  0004                     	;# 
  3441  0005                     	;# 
  3442  0006                     	;# 
  3443  0007                     	;# 
  3444  0008                     	;# 
  3445  0009                     	;# 
  3446  000A                     	;# 
  3447  000B                     	;# 
  3448  000C                     	;# 
  3449  000E                     	;# 
  3450  0011                     	;# 
  3451  0012                     	;# 
  3452  0013                     	;# 
  3453  0015                     	;# 
  3454  0016                     	;# 
  3455  0016                     	;# 
  3456  0017                     	;# 
  3457  0018                     	;# 
  3458  0019                     	;# 
  3459  001A                     	;# 
  3460  001B                     	;# 
  3461  001C                     	;# 
  3462  008C                     	;# 
  3463  008E                     	;# 
  3464  0091                     	;# 
  3465  0092                     	;# 
  3466  0093                     	;# 
  3467  0095                     	;# 
  3468  0096                     	;# 
  3469  0097                     	;# 
  3470  0098                     	;# 
  3471  0099                     	;# 
  3472  009A                     	;# 
  3473  009B                     	;# 
  3474  009B                     	;# 
  3475  009C                     	;# 
  3476  009D                     	;# 
  3477  009E                     	;# 
  3478  009F                     	;# 
  3479  010C                     	;# 
  3480  010E                     	;# 
  3481  0111                     	;# 
  3482  0112                     	;# 
  3483  0113                     	;# 
  3484  0114                     	;# 
  3485  0115                     	;# 
  3486  0116                     	;# 
  3487  0117                     	;# 
  3488  0118                     	;# 
  3489  0119                     	;# 
  3490  018C                     	;# 
  3491  018E                     	;# 
  3492  0191                     	;# 
  3493  0191                     	;# 
  3494  0192                     	;# 
  3495  0193                     	;# 
  3496  0193                     	;# 
  3497  0194                     	;# 
  3498  0195                     	;# 
  3499  0196                     	;# 
  3500  0197                     	;# 
  3501  0199                     	;# 
  3502  019A                     	;# 
  3503  019B                     	;# 
  3504  019B                     	;# 
  3505  019C                     	;# 
  3506  019D                     	;# 
  3507  019E                     	;# 
  3508  019F                     	;# 
  3509  020C                     	;# 
  3510  020E                     	;# 
  3511  028C                     	;# 
  3512  028E                     	;# 
  3513  030C                     	;# 
  3514  030E                     	;# 
  3515  038C                     	;# 
  3516  038E                     	;# 
  3517  0391                     	;# 
  3518  0392                     	;# 
  3519  0393                     	;# 
  3520  0397                     	;# 
  3521  0398                     	;# 
  3522  0399                     	;# 
  3523  0691                     	;# 
  3524  0692                     	;# 
  3525  0693                     	;# 
  3526  0694                     	;# 
  3527  0695                     	;# 
  3528  0D8E                     	;# 
  3529  0D8F                     	;# 
  3530  0D90                     	;# 
  3531  0D91                     	;# 
  3532  0D91                     	;# 
  3533  0D92                     	;# 
  3534  0D93                     	;# 
  3535  0D93                     	;# 
  3536  0D94                     	;# 
  3537  0D95                     	;# 
  3538  0D95                     	;# 
  3539  0D96                     	;# 
  3540  0D97                     	;# 
  3541  0D97                     	;# 
  3542  0D98                     	;# 
  3543  0D99                     	;# 
  3544  0D99                     	;# 
  3545  0D9A                     	;# 
  3546  0D9B                     	;# 
  3547  0D9C                     	;# 
  3548  0D9C                     	;# 
  3549  0D9D                     	;# 
  3550  0D9D                     	;# 
  3551  0D9E                     	;# 
  3552  0D9F                     	;# 
  3553  0DA0                     	;# 
  3554  0DA1                     	;# 
  3555  0DA1                     	;# 
  3556  0DA2                     	;# 
  3557  0DA3                     	;# 
  3558  0DA3                     	;# 
  3559  0DA4                     	;# 
  3560  0DA5                     	;# 
  3561  0DA5                     	;# 
  3562  0DA6                     	;# 
  3563  0DA7                     	;# 
  3564  0DA7                     	;# 
  3565  0DA8                     	;# 
  3566  0DA9                     	;# 
  3567  0DA9                     	;# 
  3568  0DAA                     	;# 
  3569  0DAB                     	;# 
  3570  0DAC                     	;# 
  3571  0DAC                     	;# 
  3572  0DAD                     	;# 
  3573  0DAD                     	;# 
  3574  0DAE                     	;# 
  3575  0DAF                     	;# 
  3576  0DB0                     	;# 
  3577  0DB1                     	;# 
  3578  0DB1                     	;# 
  3579  0DB2                     	;# 
  3580  0DB3                     	;# 
  3581  0DB3                     	;# 
  3582  0DB4                     	;# 
  3583  0DB5                     	;# 
  3584  0DB5                     	;# 
  3585  0DB6                     	;# 
  3586  0DB7                     	;# 
  3587  0DB7                     	;# 
  3588  0DB8                     	;# 
  3589  0DB9                     	;# 
  3590  0DB9                     	;# 
  3591  0DBA                     	;# 
  3592  0DBB                     	;# 
  3593  0DBC                     	;# 
  3594  0DBC                     	;# 
  3595  0DBD                     	;# 
  3596  0DBD                     	;# 
  3597  0DBE                     	;# 
  3598  0DBF                     	;# 
  3599  0DC0                     	;# 
  3600  0DC1                     	;# 
  3601  0DC1                     	;# 
  3602  0DC2                     	;# 
  3603  0DC3                     	;# 
  3604  0DC3                     	;# 
  3605  0DC4                     	;# 
  3606  0DC5                     	;# 
  3607  0DC5                     	;# 
  3608  0DC6                     	;# 
  3609  0DC7                     	;# 
  3610  0DC7                     	;# 
  3611  0DC8                     	;# 
  3612  0DC9                     	;# 
  3613  0DC9                     	;# 
  3614  0DCA                     	;# 
  3615  0DCB                     	;# 
  3616  0DCC                     	;# 
  3617  0DCC                     	;# 
  3618  0DCD                     	;# 
  3619  0DCD                     	;# 
  3620  0DCE                     	;# 
  3621  0DCF                     	;# 
  3622  0DD0                     	;# 
  3623  0E0F                     	;# 
  3624  0E10                     	;# 
  3625  0E11                     	;# 
  3626  0E12                     	;# 
  3627  0E13                     	;# 
  3628  0E14                     	;# 
  3629  0E15                     	;# 
  3630  0E16                     	;# 
  3631  0E17                     	;# 
  3632  0E90                     	;# 
  3633  0E91                     	;# 
  3634  0E92                     	;# 
  3635  0E94                     	;# 
  3636  0E95                     	;# 
  3637  0EA0                     	;# 
  3638  0EA1                     	;# 
  3639  0EA2                     	;# 
  3640  0EA3                     	;# 
  3641  0EA4                     	;# 
  3642  0EA5                     	;# 
  3643  0FE4                     	;# 
  3644  0FE5                     	;# 
  3645  0FE6                     	;# 
  3646  0FE7                     	;# 
  3647  0FE8                     	;# 
  3648  0FE8                     	;# 
  3649  0FE9                     	;# 
  3650  0FEA                     	;# 
  3651  0FEA                     	;# 
  3652  0FEB                     	;# 
  3653  0FED                     	;# 
  3654  0FEE                     	;# 
  3655  0FEE                     	;# 
  3656  0FEF                     	;# 
  3657  0FFF                     	;# 
  3658  0000                     	;# 
  3659  0001                     	;# 
  3660  0002                     	;# 
  3661  0003                     	;# 
  3662  0004                     	;# 
  3663  0005                     	;# 
  3664  0006                     	;# 
  3665  0007                     	;# 
  3666  0008                     	;# 
  3667  0009                     	;# 
  3668  000A                     	;# 
  3669  000B                     	;# 
  3670  000C                     	;# 
  3671  000E                     	;# 
  3672  0011                     	;# 
  3673  0012                     	;# 
  3674  0013                     	;# 
  3675  0015                     	;# 
  3676  0016                     	;# 
  3677  0016                     	;# 
  3678  0017                     	;# 
  3679  0018                     	;# 
  3680  0019                     	;# 
  3681  001A                     	;# 
  3682  001B                     	;# 
  3683  001C                     	;# 
  3684  008C                     	;# 
  3685  008E                     	;# 
  3686  0091                     	;# 
  3687  0092                     	;# 
  3688  0093                     	;# 
  3689  0095                     	;# 
  3690  0096                     	;# 
  3691  0097                     	;# 
  3692  0098                     	;# 
  3693  0099                     	;# 
  3694  009A                     	;# 
  3695  009B                     	;# 
  3696  009B                     	;# 
  3697  009C                     	;# 
  3698  009D                     	;# 
  3699  009E                     	;# 
  3700  009F                     	;# 
  3701  010C                     	;# 
  3702  010E                     	;# 
  3703  0111                     	;# 
  3704  0112                     	;# 
  3705  0113                     	;# 
  3706  0114                     	;# 
  3707  0115                     	;# 
  3708  0116                     	;# 
  3709  0117                     	;# 
  3710  0118                     	;# 
  3711  0119                     	;# 
  3712  018C                     	;# 
  3713  018E                     	;# 
  3714  0191                     	;# 
  3715  0191                     	;# 
  3716  0192                     	;# 
  3717  0193                     	;# 
  3718  0193                     	;# 
  3719  0194                     	;# 
  3720  0195                     	;# 
  3721  0196                     	;# 
  3722  0197                     	;# 
  3723  0199                     	;# 
  3724  019A                     	;# 
  3725  019B                     	;# 
  3726  019B                     	;# 
  3727  019C                     	;# 
  3728  019D                     	;# 
  3729  019E                     	;# 
  3730  019F                     	;# 
  3731  020C                     	;# 
  3732  020E                     	;# 
  3733  028C                     	;# 
  3734  028E                     	;# 
  3735  030C                     	;# 
  3736  030E                     	;# 
  3737  038C                     	;# 
  3738  038E                     	;# 
  3739  0391                     	;# 
  3740  0392                     	;# 
  3741  0393                     	;# 
  3742  0397                     	;# 
  3743  0398                     	;# 
  3744  0399                     	;# 
  3745  0691                     	;# 
  3746  0692                     	;# 
  3747  0693                     	;# 
  3748  0694                     	;# 
  3749  0695                     	;# 
  3750  0D8E                     	;# 
  3751  0D8F                     	;# 
  3752  0D90                     	;# 
  3753  0D91                     	;# 
  3754  0D91                     	;# 
  3755  0D92                     	;# 
  3756  0D93                     	;# 
  3757  0D93                     	;# 
  3758  0D94                     	;# 
  3759  0D95                     	;# 
  3760  0D95                     	;# 
  3761  0D96                     	;# 
  3762  0D97                     	;# 
  3763  0D97                     	;# 
  3764  0D98                     	;# 
  3765  0D99                     	;# 
  3766  0D99                     	;# 
  3767  0D9A                     	;# 
  3768  0D9B                     	;# 
  3769  0D9C                     	;# 
  3770  0D9C                     	;# 
  3771  0D9D                     	;# 
  3772  0D9D                     	;# 
  3773  0D9E                     	;# 
  3774  0D9F                     	;# 
  3775  0DA0                     	;# 
  3776  0DA1                     	;# 
  3777  0DA1                     	;# 
  3778  0DA2                     	;# 
  3779  0DA3                     	;# 
  3780  0DA3                     	;# 
  3781  0DA4                     	;# 
  3782  0DA5                     	;# 
  3783  0DA5                     	;# 
  3784  0DA6                     	;# 
  3785  0DA7                     	;# 
  3786  0DA7                     	;# 
  3787  0DA8                     	;# 
  3788  0DA9                     	;# 
  3789  0DA9                     	;# 
  3790  0DAA                     	;# 
  3791  0DAB                     	;# 
  3792  0DAC                     	;# 
  3793  0DAC                     	;# 
  3794  0DAD                     	;# 
  3795  0DAD                     	;# 
  3796  0DAE                     	;# 
  3797  0DAF                     	;# 
  3798  0DB0                     	;# 
  3799  0DB1                     	;# 
  3800  0DB1                     	;# 
  3801  0DB2                     	;# 
  3802  0DB3                     	;# 
  3803  0DB3                     	;# 
  3804  0DB4                     	;# 
  3805  0DB5                     	;# 
  3806  0DB5                     	;# 
  3807  0DB6                     	;# 
  3808  0DB7                     	;# 
  3809  0DB7                     	;# 
  3810  0DB8                     	;# 
  3811  0DB9                     	;# 
  3812  0DB9                     	;# 
  3813  0DBA                     	;# 
  3814  0DBB                     	;# 
  3815  0DBC                     	;# 
  3816  0DBC                     	;# 
  3817  0DBD                     	;# 
  3818  0DBD                     	;# 
  3819  0DBE                     	;# 
  3820  0DBF                     	;# 
  3821  0DC0                     	;# 
  3822  0DC1                     	;# 
  3823  0DC1                     	;# 
  3824  0DC2                     	;# 
  3825  0DC3                     	;# 
  3826  0DC3                     	;# 
  3827  0DC4                     	;# 
  3828  0DC5                     	;# 
  3829  0DC5                     	;# 
  3830  0DC6                     	;# 
  3831  0DC7                     	;# 
  3832  0DC7                     	;# 
  3833  0DC8                     	;# 
  3834  0DC9                     	;# 
  3835  0DC9                     	;# 
  3836  0DCA                     	;# 
  3837  0DCB                     	;# 
  3838  0DCC                     	;# 
  3839  0DCC                     	;# 
  3840  0DCD                     	;# 
  3841  0DCD                     	;# 
  3842  0DCE                     	;# 
  3843  0DCF                     	;# 
  3844  0DD0                     	;# 
  3845  0E0F                     	;# 
  3846  0E10                     	;# 
  3847  0E11                     	;# 
  3848  0E12                     	;# 
  3849  0E13                     	;# 
  3850  0E14                     	;# 
  3851  0E15                     	;# 
  3852  0E16                     	;# 
  3853  0E17                     	;# 
  3854  0E90                     	;# 
  3855  0E91                     	;# 
  3856  0E92                     	;# 
  3857  0E94                     	;# 
  3858  0E95                     	;# 
  3859  0EA0                     	;# 
  3860  0EA1                     	;# 
  3861  0EA2                     	;# 
  3862  0EA3                     	;# 
  3863  0EA4                     	;# 
  3864  0EA5                     	;# 
  3865  0FE4                     	;# 
  3866  0FE5                     	;# 
  3867  0FE6                     	;# 
  3868  0FE7                     	;# 
  3869  0FE8                     	;# 
  3870  0FE8                     	;# 
  3871  0FE9                     	;# 
  3872  0FEA                     	;# 
  3873  0FEA                     	;# 
  3874  0FEB                     	;# 
  3875  0FED                     	;# 
  3876  0FEE                     	;# 
  3877  0FEE                     	;# 
  3878  0FEF                     	;# 
  3879  0FFF                     	;_sysData
  3880                           
  3881 ;; Function _TMR2_DefaultInterruptHandler is unused but had its address taken
  3882  0000                     
  3883                           	psect	idataBANK0
  3884  196C                     __pidataBANK0:	
  3885                           
  3886                           ;initializer for _resRs
  3887  196C  3410               	retlw	16
  3888  196D  3427               	retlw	39
  3889                           
  3890                           ;initializer for _resRc
  3891  196E  3410               	retlw	16
  3892  196F  3427               	retlw	39
  3893                           
  3894                           	psect	idataBANK1
  3895  199B                     __pidataBANK1:	
  3896                           
  3897                           ;initializer for _bbmin
  3898  199B  3440               	retlw	64
  3899  199C  340D               	retlw	13
  3900  199D  3403               	retlw	3
  3901  199E  3400               	retlw	0
  3902                           
  3903                           ;initializer for _bbmax
  3904  199F  34C0               	retlw	192
  3905  19A0  34F2               	retlw	242
  3906  19A1  34FC               	retlw	252
  3907  19A2  34FF               	retlw	255
  3908                           
  3909                           ;initializer for _pidU
  3910  19A3  3414               	retlw	20
  3911  19A4  3400               	retlw	0
  3912                           
  3913                           ;initializer for _pidpwm2_U
  3914  19A5  3414               	retlw	20
  3915  19A6  3400               	retlw	0
  3916                           
  3917                           ;initializer for _pwm1DutyForIdrv
  3918  19A7  3405               	retlw	5
  3919  19A8  3400               	retlw	0
  3920                           
  3921                           ;initializer for _pwm2DutyForVout
  3922  19A9  3405               	retlw	5
  3923  19AA  3400               	retlw	0
  3924                           
  3925                           	psect	stringtext1
  3926  181E                     __pstringtext1:	
  3927  181E                     _HexTable:	
  3928  181E  3430               	retlw	48
  3929  181F  3431               	retlw	49
  3930  1820  3432               	retlw	50
  3931  1821  3433               	retlw	51
  3932  1822  3434               	retlw	52
  3933  1823  3435               	retlw	53
  3934  1824  3436               	retlw	54
  3935  1825  3437               	retlw	55
  3936  1826  3438               	retlw	56
  3937  1827  3439               	retlw	57
  3938  1828  3441               	retlw	65
  3939  1829  3442               	retlw	66
  3940  182A  3443               	retlw	67
  3941  182B  3444               	retlw	68
  3942  182C  3445               	retlw	69
  3943  182D  3446               	retlw	70
  3944  182E  3400               	retlw	0
  3945  182F                     __end_of_HexTable:	
  3946  0013                     _PIR3bits	set	19
  3947  001C                     _T2CONbits	set	28
  3948  0011                     _PIR1bits	set	17
  3949  001A                     _TMR2	set	26
  3950  001B                     _PR2	set	27
  3951  001C                     _T2CON	set	28
  3952  000B                     _INTCONbits	set	11
  3953  005F                     _GIE	set	95
  3954  0095                     _OPTION_REGbits	set	149
  3955  008E                     _TRISC	set	142
  3956  008C                     _TRISA	set	140
  3957  009D                     _ADCON0bits	set	157
  3958  009C                     _ADRESH	set	156
  3959  009B                     _ADRESL	set	155
  3960  009F                     _ADCON2	set	159
  3961  009E                     _ADCON1	set	158
  3962  009D                     _ADCON0	set	157
  3963  0097                     _WDTCON	set	151
  3964  0093                     _PIE3bits	set	147
  3965  0091                     _PIE1bits	set	145
  3966  010E                     _LATC	set	270
  3967  010C                     _LATA	set	268
  3968  0117                     _FVRCONbits	set	279
  3969  0117                     _FVRCON	set	279
  3970  019E                     _TXSTAbits	set	414
  3971  018C                     _ANSELA	set	396
  3972  018E                     _ANSELC	set	398
  3973  019A                     _TXREG	set	410
  3974  019C                     _SPBRGH	set	412
  3975  019B                     _SPBRGL	set	411
  3976  019E                     _TXSTA	set	414
  3977  019D                     _RCSTA	set	413
  3978  019F                     _BAUDCON	set	415
  3979  0199                     _RCREG	set	409
  3980  019D                     _RCSTAbits	set	413
  3981  0196                     _PMCON2	set	406
  3982  0193                     _PMDATL	set	403
  3983  0194                     _PMDATH	set	404
  3984  0195                     _PMCON1bits	set	405
  3985  0192                     _PMADRH	set	402
  3986  0191                     _PMADRL	set	401
  3987  020E                     _WPUC	set	526
  3988  020C                     _WPUA	set	524
  3989  028E                     _ODCONC	set	654
  3990  028C                     _ODCONA	set	652
  3991  0D9D                     _PWM1INTFbits	set	3485
  3992  0D9F                     _PWM1LDCONbits	set	3487
  3993  0D9B                     _PWM1CONbits	set	3483
  3994  0D9B                     _PWM1CON	set	3483
  3995  0D99                     _PWM1TMRL	set	3481
  3996  0D9A                     _PWM1TMRH	set	3482
  3997  0D97                     _PWM1OFL	set	3479
  3998  0D98                     _PWM1OFH	set	3480
  3999  0D95                     _PWM1PRL	set	3477
  4000  0D96                     _PWM1PRH	set	3478
  4001  0D93                     _PWM1DCL	set	3475
  4002  0D94                     _PWM1DCH	set	3476
  4003  0D91                     _PWM1PHL	set	3473
  4004  0D92                     _PWM1PHH	set	3474
  4005  0DA0                     _PWM1OFCON	set	3488
  4006  0D9F                     _PWM1LDCON	set	3487
  4007  0D9E                     _PWM1CLKCON	set	3486
  4008  0D9D                     _PWM1INTF	set	3485
  4009  0D9C                     _PWM1INTE	set	3484
  4010  0DAD                     _PWM2INTFbits	set	3501
  4011  0DAF                     _PWM2LDCONbits	set	3503
  4012  0DAB                     _PWM2CONbits	set	3499
  4013  0DAB                     _PWM2CON	set	3499
  4014  0DA9                     _PWM2TMRL	set	3497
  4015  0DAA                     _PWM2TMRH	set	3498
  4016  0DA7                     _PWM2OFL	set	3495
  4017  0DA8                     _PWM2OFH	set	3496
  4018  0DA5                     _PWM2PRL	set	3493
  4019  0DA6                     _PWM2PRH	set	3494
  4020  0DA3                     _PWM2DCL	set	3491
  4021  0DA4                     _PWM2DCH	set	3492
  4022  0DA1                     _PWM2PHL	set	3489
  4023  0DA2                     _PWM2PHH	set	3490
  4024  0DB0                     _PWM2OFCON	set	3504
  4025  0DAF                     _PWM2LDCON	set	3503
  4026  0DAE                     _PWM2CLKCON	set	3502
  4027  0DAD                     _PWM2INTF	set	3501
  4028  0DAC                     _PWM2INTE	set	3500
  4029  0E15                     _RXPPSbits	set	3605
  4030  0E0F                     _PPSLOCKbits	set	3599
  4031  0E0F                     _PPSLOCK	set	3599
  4032  0EA5                     _RC5PPSbits	set	3749
  4033  0E95                     _RA5PPSbits	set	3733
  4034  0E94                     _RA4PPSbits	set	3732
  4035                           
  4036                           	psect	cinit
  4037  0894                     start_initialization:	
  4038                           ; #config settings
  4039                           
  4040  0894                     __initialization:		;BIGRAM
  4041                           
  4042                           ; Initialize objects allocated to BANK0
  4043  0894  306C               	movlw	low __pidataBANK0
  4044  0895  0084               	movwf	4
  4045  0896  3099               	movlw	(high __pidataBANK0)| (0+128)
  4046  0897  0085               	movwf	5
  4047  0898  305D               	movlw	low __pdataBANK0
  4048  0899  0086               	movwf	6
  4049  089A  3000               	movlw	high __pdataBANK0
  4050  089B  0087               	movwf	7
  4051  089C  3000               	movlw	0
  4052  089D  00FF               	movwf	btemp+1
  4053  089E  3004               	movlw	4
  4054  089F  3199  2182  3188   	fcall	init_ram
  4055                           
  4056                           ; Initialize objects allocated to BANK1
  4057  08A2  309B               	movlw	low __pidataBANK1
  4058  08A3  0084               	movwf	4
  4059  08A4  3099               	movlw	(high __pidataBANK1)| (0+128)
  4060  08A5  0085               	movwf	5
  4061  08A6  30DA               	movlw	low __pdataBANK1
  4062  08A7  0086               	movwf	6
  4063  08A8  3000               	movlw	high __pdataBANK1
  4064  08A9  0087               	movwf	7
  4065  08AA  3000               	movlw	0
  4066  08AB  00FF               	movwf	btemp+1
  4067  08AC  3010               	movlw	16
  4068  08AD  3199  2182  3188   	fcall	init_ram
  4069                           
  4070                           ; Clear objects allocated to BIGRAM
  4071  08B0  305C               	movlw	low (0+9052)
  4072  08B1  0084               	movwf	4
  4073  08B2  3023               	movlw	high (0+9052)
  4074  08B3  0085               	movwf	5
  4075  08B4  3084               	movlw	132
  4076  08B5  00FE               	movwf	btemp
  4077  08B6  3000               	movlw	0
  4078  08B7  00FF               	movwf	btemp+1
  4079  08B8  3199  2176  3188   	fcall	clear_ram0
  4080                           
  4081                           ; Clear objects allocated to COMMON
  4082  08BB  01F8               	clrf	__pbssCOMMON& (0+127)
  4083  08BC  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  4084  08BD  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  4085                           
  4086                           ; Clear objects allocated to BANK0
  4087  08BE  304C               	movlw	low __pbssBANK0
  4088  08BF  0084               	movwf	4
  4089  08C0  3000               	movlw	high __pbssBANK0
  4090  08C1  0085               	movwf	5
  4091  08C2  3011               	movlw	17
  4092  08C3  00FE               	movwf	btemp
  4093  08C4  3000               	movlw	0
  4094  08C5  00FF               	movwf	btemp+1
  4095  08C6  3199  2176  3188   	fcall	clear_ram0
  4096                           
  4097                           ; Clear objects allocated to BANK1
  4098  08C9  30A0               	movlw	low __pbssBANK1
  4099  08CA  0084               	movwf	4
  4100  08CB  3000               	movlw	high __pbssBANK1
  4101  08CC  0085               	movwf	5
  4102  08CD  303A               	movlw	58
  4103  08CE  00FE               	movwf	btemp
  4104  08CF  3000               	movlw	0
  4105  08D0  00FF               	movwf	btemp+1
  4106  08D1  3199  2176  3188   	fcall	clear_ram0
  4107                           
  4108                           ; Clear objects allocated to BANK2
  4109  08D4  3020               	movlw	low __pbssBANK2
  4110  08D5  0084               	movwf	4
  4111  08D6  3001               	movlw	high __pbssBANK2
  4112  08D7  0085               	movwf	5
  4113  08D8  303C               	movlw	60
  4114  08D9  00FE               	movwf	btemp
  4115  08DA  3000               	movlw	0
  4116  08DB  00FF               	movwf	btemp+1
  4117  08DC  3199  2176  3188   	fcall	clear_ram0
  4118                           
  4119                           ; Clear objects allocated to BANK3
  4120  08DF  30A0               	movlw	low __pbssBANK3
  4121  08E0  0084               	movwf	4
  4122  08E1  3001               	movlw	high __pbssBANK3
  4123  08E2  0085               	movwf	5
  4124  08E3  303C               	movlw	60
  4125  08E4  00FE               	movwf	btemp
  4126  08E5  3000               	movlw	0
  4127  08E6  00FF               	movwf	btemp+1
  4128  08E7  3199  2176         	fcall	clear_ram0
  4129  08E9                     end_of_initialization:	
  4130                           ;End of C runtime variable initialization code
  4131                           
  4132  08E9                     __end_of__initialization:	
  4133  08E9  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4134  08EA  0020               	movlb	0
  4135  08EB  318D  2DA0         	ljmp	_main	;jump to C main() function
  4136                           
  4137                           	psect	bssCOMMON
  4138  0078                     __pbssCOMMON:	
  4139  0078                     _subTickerX:	
  4140  0078                     	ds	1
  4141  0079                     _eusartRxCount:	
  4142  0079                     	ds	1
  4143  007A                     _eusartRxIdleTime_ms:	
  4144  007A                     	ds	1
  4145                           
  4146                           	psect	bssBANK0
  4147  004C                     __pbssBANK0:	
  4148  004C                     _bbtu:	
  4149  004C                     	ds	2
  4150  004E                     _rsLoAvg:	
  4151  004E                     	ds	2
  4152  0050                     _voExpectAdcValue:	
  4153  0050                     	ds	2
  4154  0052                     _PidKp:	
  4155  0052                     	ds	2
  4156  0054                     _rtAdcValueRcLo:	
  4157  0054                     	ds	2
  4158  0056                     _rtAdcValueRsLo:	
  4159  0056                     	ds	2
  4160  0058                     _pidTestNum:	
  4161  0058                     	ds	1
  4162  0059                     _pidBbSm:	
  4163  0059                     	ds	1
  4164  005A                     _xlen:	
  4165  005A                     	ds	1
  4166  005B                     _subTickerX_1s:	
  4167  005B                     	ds	1
  4168  005C                     _Event:	
  4169  005C                     	ds	1
  4170                           
  4171                           	psect	dataBANK0
  4172  005D                     __pdataBANK0:	
  4173  005D                     _resRs:	
  4174  005D                     	ds	2
  4175  005F                     _resRc:	
  4176  005F                     	ds	2
  4177                           
  4178                           	psect	bssBANK1
  4179  00A0                     __pbssBANK1:	
  4180  00A0                     _err:	
  4181  00A0                     	ds	12
  4182  00AC                     _rsLoAvgBuf:	
  4183  00AC                     	ds	12
  4184  00B8                     _bbku:	
  4185  00B8                     	ds	4
  4186  00BC                     _bbu:	
  4187  00BC                     	ds	4
  4188  00C0                     _bbta:	
  4189  00C0                     	ds	4
  4190  00C4                     _pwm2Ei:	
  4191  00C4                     	ds	2
  4192  00C6                     _bbt1:	
  4193  00C6                     	ds	2
  4194  00C8                     _bbt0:	
  4195  00C8                     	ds	2
  4196  00CA                     _voExpectMv:	
  4197  00CA                     	ds	2
  4198  00CC                     _PidTd:	
  4199  00CC                     	ds	2
  4200  00CE                     _PidTi:	
  4201  00CE                     	ds	2
  4202  00D0                     _rtAdcValueVoFb:	
  4203  00D0                     	ds	2
  4204  00D2                     _rtAdcValueRcHi:	
  4205  00D2                     	ds	2
  4206  00D4                     _rtAdcValueRsHi:	
  4207  00D4                     	ds	2
  4208  00D6                     _globalTicker:	
  4209  00D6                     	ds	2
  4210  00D8                     _TMR2_InterruptHandler:	
  4211  00D8                     	ds	2
  4212                           
  4213                           	psect	dataBANK1
  4214  00DA                     __pdataBANK1:	
  4215  00DA                     _bbmin:	
  4216  00DA                     	ds	4
  4217  00DE                     _bbmax:	
  4218  00DE                     	ds	4
  4219  00E2                     _pidU:	
  4220  00E2                     	ds	2
  4221  00E4                     _pidpwm2_U:	
  4222  00E4                     	ds	2
  4223  00E6                     _pwm1DutyForIdrv:	
  4224  00E6                     	ds	2
  4225  00E8                     _pwm2DutyForVout:	
  4226  00E8                     	ds	2
  4227                           
  4228                           	psect	bssBANK2
  4229  0120                     __pbssBANK2:	
  4230  0120                     _eusartRxBuffer:	
  4231  0120                     	ds	60
  4232                           
  4233                           	psect	bssBANK3
  4234  01A0                     __pbssBANK3:	
  4235  01A0                     _modbusBuf:	
  4236  01A0                     	ds	60
  4237                           
  4238                           	psect	inittext
  4239  1982                     init_ram:	
  4240  1982  00FE               	movwf	126
  4241  1983                     initloop:	
  4242  1983  0012               	moviw fsr0++
  4243  1984  001E               	movwi fsr1++
  4244  1985  3001               	movlw	1
  4245  1986  02FE               	subwf	126,f
  4246  1987  3000               	movlw	0
  4247  1988  3BFF               	subwfb	127,f
  4248  1989  087F               	movf	127,w
  4249  198A  047E               	iorwf	126,w
  4250  198B  1903               	btfsc	3,2
  4251  198C  3400               	retlw	0
  4252  198D  2983               	goto	initloop
  4253                           
  4254                           	psect	clrtext
  4255  1976                     clear_ram0:	
  4256                           ;	Called with FSR0 containing the base address, and
  4257                           ;	btemp/btemp+1 has the size to clear
  4258                           
  4259  1976  0064               	clrwdt	;clear the watchdog before getting into this loop
  4260  1977                     clrloop0:	
  4261  1977  0180               	clrf	0	;clear RAM location pointed to by FSR
  4262  1978  3101               	addfsr 0,1
  4263  1979  3001               	movlw	1
  4264  197A  02FE               	subwf	126,f
  4265  197B  3000               	movlw	0
  4266  197C  3BFF               	subwfb	127,f
  4267  197D  087F               	movf	127,w
  4268  197E  047E               	iorwf	126,w
  4269  197F  1903               	btfsc	3,2
  4270  1980  3400               	retlw	0	;all done for this memory range, return
  4271  1981  2977               	goto	clrloop0	;have we reached the end yet?
  4272                           
  4273                           	psect	cstackBANK4
  4274  0220                     __pcstackBANK4:	
  4275  0220                     calc_expect_vout_adc_value@y1:	
  4276                           
  4277                           ; 4 bytes @ 0x0
  4278  0220                     	ds	4
  4279  0224                     calc_expect_vout_adc_value@x1:	
  4280                           
  4281                           ; 4 bytes @ 0x4
  4282  0224                     	ds	4
  4283  0228                     calc_expect_vout_adc_value@y0:	
  4284                           
  4285                           ; 4 bytes @ 0x8
  4286  0228                     	ds	4
  4287  022C                     calc_expect_vout_adc_value@x0:	
  4288                           
  4289                           ; 4 bytes @ 0xC
  4290  022C                     	ds	4
  4291  0230                     calc_expect_vout_adc_value@t32:	
  4292                           
  4293                           ; 4 bytes @ 0x10
  4294  0230                     	ds	4
  4295  0234                     calc_expect_vout_adc_value@i:	
  4296                           
  4297                           ; 2 bytes @ 0x14
  4298  0234                     	ds	2
  4299                           
  4300                           	psect	cstackCOMMON
  4301  0070                     __pcstackCOMMON:	
  4302  0070                     ?_TMR2_StartTimer:	
  4303  0070                     ?_PIN_MANAGER_Initialize:	
  4304                           ; 1 bytes @ 0x0
  4305                           
  4306  0070                     ?_OSCILLATOR_Initialize:	
  4307                           ; 1 bytes @ 0x0
  4308                           
  4309  0070                     ?_WDT_Initialize:	
  4310                           ; 1 bytes @ 0x0
  4311                           
  4312  0070                     ?_ADC1_Initialize:	
  4313                           ; 1 bytes @ 0x0
  4314                           
  4315  0070                     ?_EUSART_Initialize:	
  4316                           ; 1 bytes @ 0x0
  4317                           
  4318  0070                     ?_PWM2_Initialize:	
  4319                           ; 1 bytes @ 0x0
  4320                           
  4321  0070                     ?_PWM1_Initialize:	
  4322                           ; 1 bytes @ 0x0
  4323                           
  4324  0070                     ?_TMR2_Initialize:	
  4325                           ; 1 bytes @ 0x0
  4326                           
  4327  0070                     ?_INTERRUPT_InterruptManager:	
  4328                           ; 1 bytes @ 0x0
  4329                           
  4330  0070                     ??_INTERRUPT_InterruptManager:	
  4331                           ; 1 bytes @ 0x0
  4332                           
  4333  0070                     ?_FVR_Initialize:	
  4334                           ; 1 bytes @ 0x0
  4335                           
  4336  0070                     ?_SYSTEM_Initialize:	
  4337                           ; 1 bytes @ 0x0
  4338                           
  4339  0070                     ?_uart_received_start:	
  4340                           ; 1 bytes @ 0x0
  4341                           
  4342  0070                     ?_fvr_set_gain:	
  4343                           ; 1 bytes @ 0x0
  4344                           
  4345  0070                     ?_adc_init:	
  4346                           ; 1 bytes @ 0x0
  4347                           
  4348  0070                     ?_pid_pwm1_idrv_b_b:	
  4349                           ; 1 bytes @ 0x0
  4350                           
  4351  0070                     ?_pid_pwm1_idrv_run:	
  4352                           ; 1 bytes @ 0x0
  4353                           
  4354  0070                     ?_pid_pwm2_vout_run:	
  4355                           ; 1 bytes @ 0x0
  4356                           
  4357  0070                     ?_my_flash_read_system_erase:	
  4358                           ; 1 bytes @ 0x0
  4359                           
  4360  0070                     ?_sys_data_save:	
  4361                           ; 1 bytes @ 0x0
  4362                           
  4363  0070                     ?_modbus_response_write_single_register:	
  4364                           ; 1 bytes @ 0x0
  4365                           
  4366  0070                     ?_modbus_response_write_mult_register:	
  4367                           ; 1 bytes @ 0x0
  4368                           
  4369  0070                     ?_modbus_response_command:	
  4370                           ; 1 bytes @ 0x0
  4371                           
  4372  0070                     ?_main:	
  4373                           ; 1 bytes @ 0x0
  4374                           
  4375  0070                     ?_sys_data_init:	
  4376                           ; 1 bytes @ 0x0
  4377                           
  4378                           
  4379                           ; 2 bytes @ 0x0
  4380  0070                     	ds	2
  4381  0072                     INTERRUPT_InterruptManager@t8:	
  4382                           
  4383                           ; 1 bytes @ 0x2
  4384  0072                     	ds	1
  4385  0073                     ?_FLASH_EraseBlock:	
  4386  0073                     ?_TMR2_SetInterruptHandler:	
  4387                           ; 1 bytes @ 0x3
  4388                           
  4389  0073                     ??_TMR2_StartTimer:	
  4390                           ; 1 bytes @ 0x3
  4391                           
  4392  0073                     ??_PIN_MANAGER_Initialize:	
  4393                           ; 1 bytes @ 0x3
  4394                           
  4395  0073                     ??_OSCILLATOR_Initialize:	
  4396                           ; 1 bytes @ 0x3
  4397                           
  4398  0073                     ??_WDT_Initialize:	
  4399                           ; 1 bytes @ 0x3
  4400                           
  4401  0073                     ??_ADC1_Initialize:	
  4402                           ; 1 bytes @ 0x3
  4403                           
  4404  0073                     ??_EUSART_Initialize:	
  4405                           ; 1 bytes @ 0x3
  4406                           
  4407  0073                     ??_m_mem_cpy_len:	
  4408                           ; 1 bytes @ 0x3
  4409                           
  4410  0073                     ??_PWM2_Initialize:	
  4411                           ; 1 bytes @ 0x3
  4412                           
  4413  0073                     ??_PWM1_Initialize:	
  4414                           ; 1 bytes @ 0x3
  4415                           
  4416  0073                     ??_FVR_Initialize:	
  4417                           ; 1 bytes @ 0x3
  4418                           
  4419  0073                     ?_uart_send_len:	
  4420                           ; 1 bytes @ 0x3
  4421                           
  4422  0073                     ??_uart_received_start:	
  4423                           ; 1 bytes @ 0x3
  4424                           
  4425  0073                     ??_fvr_set_gain:	
  4426                           ; 1 bytes @ 0x3
  4427                           
  4428  0073                     ??_adc_init:	
  4429                           ; 1 bytes @ 0x3
  4430                           
  4431  0073                     ?_my_flash_system_read:	
  4432                           ; 1 bytes @ 0x3
  4433                           
  4434  0073                     ??___lmul:	
  4435                           ; 1 bytes @ 0x3
  4436                           
  4437  0073                     ??___lldiv:	
  4438                           ; 1 bytes @ 0x3
  4439                           
  4440  0073                     ?_get_idrv_pwm1_duty:	
  4441                           ; 1 bytes @ 0x3
  4442                           
  4443  0073                     ?_get_vout_pwm2_duty:	
  4444                           ; 2 bytes @ 0x3
  4445                           
  4446  0073                     ?_my_flash_system_write:	
  4447                           ; 2 bytes @ 0x3
  4448                           
  4449  0073                     ?_getRegisterVal:	
  4450                           ; 2 bytes @ 0x3
  4451                           
  4452  0073                     ?_crc_sum:	
  4453                           ; 2 bytes @ 0x3
  4454                           
  4455  0073                     ?___wmul:	
  4456                           ; 2 bytes @ 0x3
  4457                           
  4458  0073                     ?___awdiv:	
  4459                           ; 2 bytes @ 0x3
  4460                           
  4461  0073                     PIN_MANAGER_Initialize@state:	
  4462                           ; 2 bytes @ 0x3
  4463                           
  4464  0073                     uart_send_len@len:	
  4465                           ; 1 bytes @ 0x3
  4466                           
  4467  0073                     FLASH_EraseBlock@startAddr:	
  4468                           ; 1 bytes @ 0x3
  4469                           
  4470  0073                     TMR2_SetInterruptHandler@InterruptHandler:	
  4471                           ; 2 bytes @ 0x3
  4472                           
  4473  0073                     my_flash_system_read@buf:	
  4474                           ; 2 bytes @ 0x3
  4475                           
  4476  0073                     my_flash_system_write@buf:	
  4477                           ; 2 bytes @ 0x3
  4478                           
  4479  0073                     getRegisterVal@addr:	
  4480                           ; 2 bytes @ 0x3
  4481                           
  4482  0073                     crc_sum@buf:	
  4483                           ; 2 bytes @ 0x3
  4484                           
  4485  0073                     ___wmul@multiplier:	
  4486                           ; 2 bytes @ 0x3
  4487                           
  4488  0073                     ___awdiv@divisor:	
  4489                           ; 2 bytes @ 0x3
  4490                           
  4491  0073                     ___lmul@product:	
  4492                           ; 2 bytes @ 0x3
  4493                           
  4494                           
  4495                           ; 4 bytes @ 0x3
  4496  0073                     	ds	1
  4497  0074                     ??_uart_send_len:	
  4498  0074                     ??_calc_rs_lo_avg:	
  4499                           ; 1 bytes @ 0x4
  4500                           
  4501  0074                     fvr_set_gain@t8:	
  4502                           ; 1 bytes @ 0x4
  4503                           
  4504  0074                     adc_init@ch:	
  4505                           ; 1 bytes @ 0x4
  4506                           
  4507                           
  4508                           ; 1 bytes @ 0x4
  4509  0074                     	ds	1
  4510  0075                     ??_FLASH_EraseBlock:	
  4511  0075                     ??_TMR2_SetInterruptHandler:	
  4512                           ; 1 bytes @ 0x5
  4513                           
  4514  0075                     ??_TMR2_Initialize:	
  4515                           ; 1 bytes @ 0x5
  4516                           
  4517  0075                     ??_SYSTEM_Initialize:	
  4518                           ; 1 bytes @ 0x5
  4519                           
  4520  0075                     ??_get_idrv_pwm1_duty:	
  4521                           ; 1 bytes @ 0x5
  4522                           
  4523  0075                     ??_get_vout_pwm2_duty:	
  4524                           ; 1 bytes @ 0x5
  4525                           
  4526  0075                     FLASH_EraseBlock@GIEBitValue:	
  4527                           ; 1 bytes @ 0x5
  4528                           
  4529  0075                     uart_send_len@i:	
  4530                           ; 1 bytes @ 0x5
  4531                           
  4532  0075                     fvr_set_gain@g:	
  4533                           ; 1 bytes @ 0x5
  4534                           
  4535  0075                     getRegisterVal@tempData:	
  4536                           ; 1 bytes @ 0x5
  4537                           
  4538  0075                     my_flash_system_read@len:	
  4539                           ; 1 bytes @ 0x5
  4540                           
  4541  0075                     my_flash_system_write@len:	
  4542                           ; 2 bytes @ 0x5
  4543                           
  4544  0075                     crc_sum@len:	
  4545                           ; 2 bytes @ 0x5
  4546                           
  4547  0075                     ___wmul@multiplicand:	
  4548                           ; 2 bytes @ 0x5
  4549                           
  4550  0075                     ___awdiv@dividend:	
  4551                           ; 2 bytes @ 0x5
  4552                           
  4553                           
  4554                           ; 2 bytes @ 0x5
  4555  0075                     	ds	1
  4556  0076                     ??_my_flash_read_system_erase:	
  4557  0076                     ?_adc_sample:	
  4558                           ; 1 bytes @ 0x6
  4559                           
  4560  0076                     uart_send_len@buf:	
  4561                           ; 2 bytes @ 0x6
  4562                           
  4563  0076                     adc_sample@gfvr:	
  4564                           ; 1 bytes @ 0x6
  4565                           
  4566                           
  4567                           ; 1 bytes @ 0x6
  4568  0076                     	ds	1
  4569  0077                     ??_set_idrv_pwm1_duty:	
  4570  0077                     ??_set_vout_pwm2_duty:	
  4571                           ; 1 bytes @ 0x7
  4572                           
  4573  0077                     ??_sys_data_save:	
  4574                           ; 1 bytes @ 0x7
  4575                           
  4576  0077                     ??_modbus_response_illgeal_function:	
  4577                           ; 1 bytes @ 0x7
  4578                           
  4579  0077                     ??_modbus_response_write_mult_register:	
  4580                           ; 1 bytes @ 0x7
  4581                           
  4582  0077                     ??___wmul:	
  4583                           ; 1 bytes @ 0x7
  4584                           
  4585  0077                     ??___aldiv:	
  4586                           ; 1 bytes @ 0x7
  4587                           
  4588  0077                     ??___awdiv:	
  4589                           ; 1 bytes @ 0x7
  4590                           
  4591  0077                     ??___lwdiv:	
  4592                           ; 1 bytes @ 0x7
  4593                           
  4594  0077                     adc_sample@num:	
  4595                           ; 1 bytes @ 0x7
  4596                           
  4597                           
  4598                           ; 1 bytes @ 0x7
  4599  0077                     	ds	1
  4600                           
  4601                           	psect	cstackBANK0
  4602  0020                     __pcstackBANK0:	
  4603  0020                     ?_m_mem_cpy_len:	
  4604  0020                     ??_adc_sample:	
  4605                           ; 1 bytes @ 0x0
  4606                           
  4607  0020                     ??_my_flash_system_read:	
  4608                           ; 1 bytes @ 0x0
  4609                           
  4610  0020                     ??_my_flash_system_write:	
  4611                           ; 1 bytes @ 0x0
  4612                           
  4613  0020                     ??_getRegisterVal:	
  4614                           ; 1 bytes @ 0x0
  4615                           
  4616  0020                     ??_crc_sum:	
  4617                           ; 1 bytes @ 0x0
  4618                           
  4619  0020                     ?___lmul:	
  4620                           ; 1 bytes @ 0x0
  4621                           
  4622  0020                     ?___lldiv:	
  4623                           ; 4 bytes @ 0x0
  4624                           
  4625  0020                     ___awdiv@counter:	
  4626                           ; 4 bytes @ 0x0
  4627                           
  4628  0020                     get_idrv_pwm1_duty@t16:	
  4629                           ; 1 bytes @ 0x0
  4630                           
  4631  0020                     get_vout_pwm2_duty@t16:	
  4632                           ; 2 bytes @ 0x0
  4633                           
  4634  0020                     m_mem_cpy_len@d:	
  4635                           ; 2 bytes @ 0x0
  4636                           
  4637  0020                     ___wmul@product:	
  4638                           ; 2 bytes @ 0x0
  4639                           
  4640  0020                     ___lmul@multiplier:	
  4641                           ; 2 bytes @ 0x0
  4642                           
  4643  0020                     ___lldiv@divisor:	
  4644                           ; 4 bytes @ 0x0
  4645                           
  4646                           
  4647                           ; 4 bytes @ 0x0
  4648  0020                     	ds	1
  4649  0021                     ___awdiv@sign:	
  4650                           
  4651                           ; 1 bytes @ 0x1
  4652  0021                     	ds	1
  4653  0022                     ?_set_idrv_pwm1_duty:	
  4654  0022                     ?_set_vout_pwm2_duty:	
  4655                           ; 1 bytes @ 0x2
  4656                           
  4657  0022                     ?___lwdiv:	
  4658                           ; 1 bytes @ 0x2
  4659                           
  4660  0022                     my_flash_system_read@GIEBitValue:	
  4661                           ; 2 bytes @ 0x2
  4662                           
  4663  0022                     my_flash_system_write@GIEBitValue:	
  4664                           ; 1 bytes @ 0x2
  4665                           
  4666  0022                     set_idrv_pwm1_duty@duty:	
  4667                           ; 1 bytes @ 0x2
  4668                           
  4669  0022                     set_vout_pwm2_duty@duty:	
  4670                           ; 2 bytes @ 0x2
  4671                           
  4672  0022                     m_mem_cpy_len@s:	
  4673                           ; 2 bytes @ 0x2
  4674                           
  4675  0022                     crc_sum@j:	
  4676                           ; 2 bytes @ 0x2
  4677                           
  4678  0022                     ___awdiv@quotient:	
  4679                           ; 2 bytes @ 0x2
  4680                           
  4681  0022                     ___lwdiv@divisor:	
  4682                           ; 2 bytes @ 0x2
  4683                           
  4684                           
  4685                           ; 2 bytes @ 0x2
  4686  0022                     	ds	1
  4687  0023                     adc_sample@ch:	
  4688  0023                     my_flash_system_read@flashAddr:	
  4689                           ; 1 bytes @ 0x3
  4690                           
  4691  0023                     my_flash_system_write@j:	
  4692                           ; 2 bytes @ 0x3
  4693                           
  4694                           
  4695                           ; 2 bytes @ 0x3
  4696  0023                     	ds	1
  4697  0024                     set_idrv_pwm1_duty@t16:	
  4698  0024                     set_vout_pwm2_duty@t16:	
  4699                           ; 2 bytes @ 0x4
  4700                           
  4701  0024                     adc_sample@i:	
  4702                           ; 2 bytes @ 0x4
  4703                           
  4704  0024                     getRegisterVal@t16:	
  4705                           ; 2 bytes @ 0x4
  4706                           
  4707  0024                     m_mem_cpy_len@len:	
  4708                           ; 2 bytes @ 0x4
  4709                           
  4710  0024                     crc_sum@i:	
  4711                           ; 2 bytes @ 0x4
  4712                           
  4713  0024                     ___lwdiv@dividend:	
  4714                           ; 2 bytes @ 0x4
  4715                           
  4716  0024                     ___lmul@multiplicand:	
  4717                           ; 2 bytes @ 0x4
  4718                           
  4719  0024                     ___lldiv@dividend:	
  4720                           ; 4 bytes @ 0x4
  4721                           
  4722                           
  4723                           ; 4 bytes @ 0x4
  4724  0024                     	ds	1
  4725  0025                     my_flash_system_read@i:	
  4726  0025                     my_flash_system_write@blocNum:	
  4727                           ; 2 bytes @ 0x5
  4728                           
  4729                           
  4730                           ; 2 bytes @ 0x5
  4731  0025                     	ds	1
  4732  0026                     getRegisterVal@tempAddr:	
  4733  0026                     adc_sample@ret:	
  4734                           ; 1 bytes @ 0x6
  4735                           
  4736  0026                     crc_sum@crc:	
  4737                           ; 2 bytes @ 0x6
  4738                           
  4739  0026                     ___lwdiv@quotient:	
  4740                           ; 2 bytes @ 0x6
  4741                           
  4742                           
  4743                           ; 2 bytes @ 0x6
  4744  0026                     	ds	1
  4745  0027                     my_flash_system_write@loc:	
  4746                           
  4747                           ; 2 bytes @ 0x7
  4748  0027                     	ds	1
  4749  0028                     ?_crc_append:	
  4750  0028                     ?_crc_verify:	
  4751                           ; 1 bytes @ 0x8
  4752                           
  4753  0028                     ?___aldiv:	
  4754                           ; 1 bytes @ 0x8
  4755                           
  4756  0028                     ___lwdiv@counter:	
  4757                           ; 4 bytes @ 0x8
  4758                           
  4759  0028                     adc_sample@t16:	
  4760                           ; 1 bytes @ 0x8
  4761                           
  4762  0028                     crc_verify@message:	
  4763                           ; 2 bytes @ 0x8
  4764                           
  4765  0028                     crc_append@message:	
  4766                           ; 2 bytes @ 0x8
  4767                           
  4768  0028                     ___aldiv@divisor:	
  4769                           ; 2 bytes @ 0x8
  4770                           
  4771  0028                     ___lldiv@quotient:	
  4772                           ; 4 bytes @ 0x8
  4773                           
  4774                           
  4775                           ; 4 bytes @ 0x8
  4776  0028                     	ds	1
  4777  0029                     ??_pid_pwm2_vout_run:	
  4778  0029                     my_flash_system_write@flashAddr:	
  4779                           ; 1 bytes @ 0x9
  4780                           
  4781                           
  4782                           ; 2 bytes @ 0x9
  4783  0029                     	ds	1
  4784  002A                     crc_verify@n:	
  4785  002A                     crc_append@n:	
  4786                           ; 2 bytes @ 0xA
  4787                           
  4788                           
  4789                           ; 2 bytes @ 0xA
  4790  002A                     	ds	1
  4791  002B                     pid_pwm2_vout_run@ei:	
  4792  002B                     my_flash_system_write@i:	
  4793                           ; 2 bytes @ 0xB
  4794                           
  4795                           
  4796                           ; 2 bytes @ 0xB
  4797  002B                     	ds	1
  4798  002C                     ??_crc_append:	
  4799  002C                     ??_crc_verify:	
  4800                           ; 1 bytes @ 0xC
  4801                           
  4802  002C                     ___lldiv@counter:	
  4803                           ; 1 bytes @ 0xC
  4804                           
  4805  002C                     ___aldiv@dividend:	
  4806                           ; 1 bytes @ 0xC
  4807                           
  4808                           
  4809                           ; 4 bytes @ 0xC
  4810  002C                     	ds	1
  4811  002D                     ?_calc_rs_lo_avg:	
  4812  002D                     ?_calc_temp_rs:	
  4813                           ; 2 bytes @ 0xD
  4814                           
  4815  002D                     ?_calc_temp_rc:	
  4816                           ; 4 bytes @ 0xD
  4817                           
  4818  002D                     pid_pwm2_vout_run@t16:	
  4819                           ; 4 bytes @ 0xD
  4820                           
  4821  002D                     calc_rs_lo_avg@x:	
  4822                           ; 2 bytes @ 0xD
  4823                           
  4824                           
  4825                           ; 2 bytes @ 0xD
  4826  002D                     	ds	1
  4827  002E                     crc_verify@crccal:	
  4828                           
  4829                           ; 2 bytes @ 0xE
  4830  002E                     	ds	1
  4831  002F                     calc_rs_lo_avg@t32:	
  4832                           
  4833                           ; 4 bytes @ 0xF
  4834  002F                     	ds	1
  4835  0030                     ___aldiv@counter:	
  4836  0030                     crc_verify@expected:	
  4837                           ; 1 bytes @ 0x10
  4838                           
  4839                           
  4840                           ; 2 bytes @ 0x10
  4841  0030                     	ds	1
  4842  0031                     ??_calc_temp_rs:	
  4843  0031                     ??_calc_temp_rc:	
  4844                           ; 1 bytes @ 0x11
  4845                           
  4846  0031                     ___aldiv@sign:	
  4847                           ; 1 bytes @ 0x11
  4848                           
  4849  0031                     crc_append@crc:	
  4850                           ; 1 bytes @ 0x11
  4851                           
  4852                           
  4853                           ; 2 bytes @ 0x11
  4854  0031                     	ds	1
  4855  0032                     ___aldiv@quotient:	
  4856                           
  4857                           ; 4 bytes @ 0x12
  4858  0032                     	ds	1
  4859  0033                     ??_sys_data_init:	
  4860  0033                     ?_modbus_response_illgeal_function:	
  4861                           ; 1 bytes @ 0x13
  4862                           
  4863  0033                     ??_modbus_response_write_single_register:	
  4864                           ; 1 bytes @ 0x13
  4865                           
  4866  0033                     ??_modbus_response_command:	
  4867                           ; 1 bytes @ 0x13
  4868                           
  4869  0033                     calc_rs_lo_avg@i:	
  4870                           ; 1 bytes @ 0x13
  4871                           
  4872  0033                     modbus_response_illgeal_function@errcode:	
  4873                           ; 1 bytes @ 0x13
  4874                           
  4875  0033                     modbus_response_write_mult_register@startAddr:	
  4876                           ; 1 bytes @ 0x13
  4877                           
  4878                           
  4879                           ; 1 bytes @ 0x13
  4880  0033                     	ds	1
  4881  0034                     modbus_response_illgeal_function@buf:	
  4882  0034                     modbus_response_write_mult_register@len:	
  4883                           ; 1 bytes @ 0x14
  4884                           
  4885                           
  4886                           ; 1 bytes @ 0x14
  4887  0034                     	ds	1
  4888  0035                     modbus_response_illgeal_function@pmdbs:	
  4889  0035                     modbus_response_write_mult_register@rbuf:	
  4890                           ; 1 bytes @ 0x15
  4891                           
  4892  0035                     modbus_response_command@tmpAddr:	
  4893                           ; 1 bytes @ 0x15
  4894                           
  4895  0035                     calc_temp_rs@x:	
  4896                           ; 2 bytes @ 0x15
  4897                           
  4898                           
  4899                           ; 4 bytes @ 0x15
  4900  0035                     	ds	1
  4901  0036                     ??_pid_pwm1_idrv_b_b:	
  4902  0036                     ??_pid_pwm1_idrv_run:	
  4903                           ; 1 bytes @ 0x16
  4904                           
  4905  0036                     ?_calc_expect_vout_adc_value:	
  4906                           ; 1 bytes @ 0x16
  4907                           
  4908  0036                     modbus_response_write_mult_register@stb:	
  4909                           ; 2 bytes @ 0x16
  4910                           
  4911  0036                     calc_expect_vout_adc_value@x:	
  4912                           ; 1 bytes @ 0x16
  4913                           
  4914                           
  4915                           ; 2 bytes @ 0x16
  4916  0036                     	ds	1
  4917  0037                     modbus_response_write_single_register@fiSave:	
  4918  0037                     modbus_response_command@startAddr:	
  4919                           ; 1 bytes @ 0x17
  4920                           
  4921                           
  4922                           ; 2 bytes @ 0x17
  4923  0037                     	ds	1
  4924  0038                     ??_calc_expect_vout_adc_value:	
  4925  0038                     modbus_response_write_single_register@t16:	
  4926                           ; 1 bytes @ 0x18
  4927                           
  4928                           
  4929                           ; 2 bytes @ 0x18
  4930  0038                     	ds	1
  4931  0039                     modbus_response_command@i:	
  4932  0039                     sys_data_init@ret:	
  4933                           ; 1 bytes @ 0x19
  4934                           
  4935  0039                     calc_temp_rs@y:	
  4936                           ; 2 bytes @ 0x19
  4937                           
  4938  0039                     calc_temp_rc@x:	
  4939                           ; 4 bytes @ 0x19
  4940                           
  4941                           
  4942                           ; 4 bytes @ 0x19
  4943  0039                     	ds	1
  4944  003A                     modbus_response_write_single_register@i:	
  4945  003A                     modbus_response_command@pmdbs:	
  4946                           ; 1 bytes @ 0x1A
  4947                           
  4948                           
  4949                           ; 1 bytes @ 0x1A
  4950  003A                     	ds	1
  4951  003B                     modbus_response_write_single_register@pmdbs:	
  4952  003B                     modbus_response_command@len:	
  4953                           ; 1 bytes @ 0x1B
  4954                           
  4955  003B                     sys_data_init@i:	
  4956                           ; 1 bytes @ 0x1B
  4957                           
  4958                           
  4959                           ; 2 bytes @ 0x1B
  4960  003B                     	ds	1
  4961  003C                     modbus_response_write_single_register@rbuf:	
  4962  003C                     modbus_response_command@rbuf:	
  4963                           ; 1 bytes @ 0x1C
  4964                           
  4965                           
  4966                           ; 1 bytes @ 0x1C
  4967  003C                     	ds	1
  4968  003D                     modbus_response_write_single_register@startAddr:	
  4969  003D                     modbus_response_command@tempData:	
  4970                           ; 2 bytes @ 0x1D
  4971                           
  4972  003D                     calc_temp_rc@y:	
  4973                           ; 2 bytes @ 0x1D
  4974                           
  4975                           
  4976                           ; 4 bytes @ 0x1D
  4977  003D                     	ds	1
  4978  003E                     pid_pwm1_idrv_b_b@t32:	
  4979  003E                     pid_pwm1_idrv_run@ep:	
  4980                           ; 4 bytes @ 0x1E
  4981                           
  4982                           
  4983                           ; 4 bytes @ 0x1E
  4984  003E                     	ds	1
  4985  003F                     ?_modbus_response_process:	
  4986  003F                     modbus_response_process@rlen:	
  4987                           ; 1 bytes @ 0x1F
  4988                           
  4989                           
  4990                           ; 2 bytes @ 0x1F
  4991  003F                     	ds	2
  4992  0041                     ??_modbus_response_process:	
  4993                           
  4994                           ; 1 bytes @ 0x21
  4995  0041                     	ds	1
  4996  0042                     modbus_response_process@resp:	
  4997  0042                     pid_pwm1_idrv_run@ei:	
  4998                           ; 1 bytes @ 0x22
  4999                           
  5000                           
  5001                           ; 4 bytes @ 0x22
  5002  0042                     	ds	1
  5003  0043                     modbus_response_process@pmdbs:	
  5004                           
  5005                           ; 1 bytes @ 0x23
  5006  0043                     	ds	1
  5007  0044                     modbus_response_process@rbuf:	
  5008                           
  5009                           ; 1 bytes @ 0x24
  5010  0044                     	ds	2
  5011  0046                     pid_pwm1_idrv_run@t32:	
  5012                           
  5013                           ; 4 bytes @ 0x26
  5014  0046                     	ds	4
  5015  004A                     ??_main:	
  5016                           
  5017                           ; 1 bytes @ 0x2A
  5018  004A                     	ds	2
  5019                           
  5020                           	psect	maintext
  5021  0DA0                     __pmaintext:	
  5022 ;;
  5023 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5024 ;;
  5025 ;; *************** function _main *****************
  5026 ;; Defined at:
  5027 ;;		line 17 in file "src/app/main.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;		None
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;		None
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  1    wreg      void 
  5034 ;; Registers used:
  5035 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : B1F/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5043 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5044 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5045 ;;Total ram usage:        2 bytes
  5046 ;; Hardware stack levels required when called:    6
  5047 ;; This function calls:
  5048 ;;		_SYSTEM_Initialize
  5049 ;;		_adc_sample
  5050 ;;		_calc_expect_vout_adc_value
  5051 ;;		_calc_rs_lo_avg
  5052 ;;		_calc_temp_rc
  5053 ;;		_calc_temp_rs
  5054 ;;		_m_mem_cpy_len
  5055 ;;		_modbus_response_process
  5056 ;;		_pid_pwm1_idrv_b_b
  5057 ;;		_pid_pwm1_idrv_run
  5058 ;;		_pid_pwm2_vout_run
  5059 ;;		_sys_data_init
  5060 ;;		_sys_data_save
  5061 ;;		_uart_received_start
  5062 ;;		_uart_send_len
  5063 ;; This function is called by:
  5064 ;;		Startup code after reset
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           
  5069                           ;psect for function _main
  5070  0DA0                     _main:	
  5071                           
  5072                           ;main.c: 19: __nop();
  5073                           
  5074                           ;incstack = 0
  5075                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5076  0DA0  0000               	nop
  5077                           
  5078                           ;main.c: 20: isRunInBoot=0xaa;
  5079  0DA1  30AA               	movlw	170
  5080  0DA2  0020               	movlb	0	; select bank0
  5081  0DA3  00CA               	movwf	??_main
  5082  0DA4  084A               	movf	??_main,w
  5083  0DA5  003F               	movlb	31	; select bank31
  5084  0DA6  00FF               	movwf	127	;volatile
  5085                           
  5086                           ;main.c: 21: isRunInBoot=isRunInBoot;
  5087  0DA7  087F               	movf	127,w	;volatile
  5088  0DA8  0020               	movlb	0	; select bank0
  5089  0DA9  00CA               	movwf	??_main
  5090  0DAA  084A               	movf	??_main,w
  5091  0DAB  003F               	movlb	31	; select bank31
  5092  0DAC  00FF               	movwf	127	;volatile
  5093                           
  5094                           ;main.c: 22: SYSTEM_Initialize();
  5095  0DAD  319A  221A  318D   	fcall	_SYSTEM_Initialize
  5096                           
  5097                           ;main.c: 23: do{ (INTCONbits.GIE = 1); (INTCONbits.PEIE = 1); }while(0);;
  5098  0DB0  178B               	bsf	11,7	;volatile
  5099  0DB1  170B               	bsf	11,6	;volatile
  5100                           
  5101                           ;main.c: 26: TXSTAbits.TXEN=0;
  5102  0DB2  0023               	movlb	3	; select bank3
  5103  0DB3  129E               	bcf	30,5	;volatile
  5104                           
  5105                           ;main.c: 27: sys_data_init();
  5106  0DB4  3191  21C6  318D   	fcall	_sys_data_init
  5107                           
  5108                           ;main.c: 31: if(sysData.pidSetFlg0 != 0x55 || sysData.pidSetFlg1 != 0xaa){
  5109  0DB7  305C               	movlw	92
  5110  0DB8  0086               	movwf	6
  5111  0DB9  3023               	movlw	35
  5112  0DBA  0087               	movwf	7
  5113  0DBB  3055               	movlw	85
  5114  0DBC  0601               	xorwf	1,w
  5115  0DBD  1D03               	btfss	3,2
  5116  0DBE  2DC8               	goto	l5651
  5117  0DBF  305C               	movlw	92
  5118  0DC0  0086               	movwf	6
  5119  0DC1  3023               	movlw	35
  5120  0DC2  0087               	movwf	7
  5121  0DC3  3141               	addfsr 1,1
  5122  0DC4  30AA               	movlw	170
  5123  0DC5  0601               	xorwf	1,w
  5124  0DC6  1903               	btfsc	3,2
  5125  0DC7  2DCB               	goto	l5653
  5126  0DC8                     l5651:	
  5127                           
  5128                           ;main.c: 32: pidBbSm=0;
  5129  0DC8  0020               	movlb	0	; select bank0
  5130  0DC9  01D9               	clrf	_pidBbSm
  5131                           
  5132                           ;main.c: 33: }else{
  5133  0DCA  2DEC               	goto	l5661
  5134  0DCB                     l5653:	
  5135                           
  5136                           ;main.c: 34: pidBbSm=5;
  5137  0DCB  3005               	movlw	5
  5138  0DCC  0020               	movlb	0	; select bank0
  5139  0DCD  00CA               	movwf	??_main
  5140  0DCE  084A               	movf	??_main,w
  5141  0DCF  00D9               	movwf	_pidBbSm
  5142                           
  5143                           ;main.c: 35: PidKp=sysData.pidKp;
  5144  0DD0  305C               	movlw	92
  5145  0DD1  0086               	movwf	6
  5146  0DD2  3023               	movlw	35
  5147  0DD3  0087               	movwf	7
  5148  0DD4  3144               	addfsr 1,4
  5149  0DD5  3F40               	moviw [0]fsr1
  5150  0DD6  00D2               	movwf	_PidKp
  5151  0DD7  3F41               	moviw [1]fsr1
  5152  0DD8  00D3               	movwf	_PidKp+1
  5153                           
  5154                           ;main.c: 36: PidTd=sysData.pidTd;
  5155  0DD9  305C               	movlw	92
  5156  0DDA  0086               	movwf	6
  5157  0DDB  3023               	movlw	35
  5158  0DDC  0087               	movwf	7
  5159  0DDD  3148               	addfsr 1,8
  5160  0DDE  3F40               	moviw [0]fsr1
  5161  0DDF  0021               	movlb	1	; select bank1
  5162  0DE0  00CC               	movwf	_PidTd^(0+128)
  5163  0DE1  3F41               	moviw [1]fsr1
  5164  0DE2  00CD               	movwf	(_PidTd+1)^(0+128)
  5165                           
  5166                           ;main.c: 37: PidTi=sysData.pidTi;
  5167  0DE3  305C               	movlw	92
  5168  0DE4  0086               	movwf	6
  5169  0DE5  3023               	movlw	35
  5170  0DE6  0087               	movwf	7
  5171  0DE7  3146               	addfsr 1,6
  5172  0DE8  3F40               	moviw [0]fsr1
  5173  0DE9  00CE               	movwf	_PidTi^(0+128)
  5174  0DEA  3F41               	moviw [1]fsr1
  5175  0DEB  00CF               	movwf	(_PidTi+1)^(0+128)
  5176  0DEC                     l5661:	
  5177                           ;main.c: 38: }
  5178                           ;main.c: 40: while (1){
  5179                           
  5180                           
  5181                           ;main.c: 41: if(Event & (1<<2)){
  5182  0DEC  0020               	movlb	0	; select bank0
  5183  0DED  1D5C               	btfss	_Event,2	;volatile
  5184  0DEE  2EDF               	goto	l5709
  5185                           
  5186                           ;main.c: 42: Event &= ~(1<<2);
  5187  0DEF  30FB               	movlw	251
  5188  0DF0  00CA               	movwf	??_main
  5189  0DF1  084A               	movf	??_main,w
  5190  0DF2  05DC               	andwf	_Event,f	;volatile
  5191                           
  5192                           ;main.c: 44: rtAdcValueRsLo=adc_sample(channel_AN6,1,32);
  5193  0DF3  01F6               	clrf	adc_sample@gfvr
  5194  0DF4  0AF6               	incf	adc_sample@gfvr,f
  5195  0DF5  3020               	movlw	32
  5196  0DF6  00CA               	movwf	??_main
  5197  0DF7  084A               	movf	??_main,w
  5198  0DF8  00F7               	movwf	adc_sample@num
  5199  0DF9  3006               	movlw	6
  5200  0DFA  319E  2641  318D   	fcall	_adc_sample
  5201  0DFD  0877               	movf	?_adc_sample+1,w
  5202  0DFE  0020               	movlb	0	; select bank0
  5203  0DFF  00D7               	movwf	_rtAdcValueRsLo+1
  5204  0E00  0876               	movf	?_adc_sample,w
  5205  0E01  00D6               	movwf	_rtAdcValueRsLo
  5206                           
  5207                           ;main.c: 46: rtAdcValueRsHi=adc_sample(channel_AN5,3,32);
  5208  0E02  3003               	movlw	3
  5209  0E03  00CA               	movwf	??_main
  5210  0E04  084A               	movf	??_main,w
  5211  0E05  00F6               	movwf	adc_sample@gfvr
  5212  0E06  3020               	movlw	32
  5213  0E07  00CB               	movwf	??_main+1
  5214  0E08  084B               	movf	??_main+1,w
  5215  0E09  00F7               	movwf	adc_sample@num
  5216  0E0A  3005               	movlw	5
  5217  0E0B  319E  2641  318D   	fcall	_adc_sample
  5218  0E0E  0877               	movf	?_adc_sample+1,w
  5219  0E0F  0021               	movlb	1	; select bank1
  5220  0E10  00D5               	movwf	(_rtAdcValueRsHi+1)^(0+128)
  5221  0E11  0876               	movf	?_adc_sample,w
  5222  0E12  00D4               	movwf	_rtAdcValueRsHi^(0+128)
  5223                           
  5224                           ;main.c: 49: rtAdcValueRcLo=adc_sample(channel_AN4,3,32);
  5225  0E13  3003               	movlw	3
  5226  0E14  0020               	movlb	0	; select bank0
  5227  0E15  00CA               	movwf	??_main
  5228  0E16  084A               	movf	??_main,w
  5229  0E17  00F6               	movwf	adc_sample@gfvr
  5230  0E18  3020               	movlw	32
  5231  0E19  00CB               	movwf	??_main+1
  5232  0E1A  084B               	movf	??_main+1,w
  5233  0E1B  00F7               	movwf	adc_sample@num
  5234  0E1C  3004               	movlw	4
  5235  0E1D  319E  2641  318D   	fcall	_adc_sample
  5236  0E20  0877               	movf	?_adc_sample+1,w
  5237  0E21  0020               	movlb	0	; select bank0
  5238  0E22  00D5               	movwf	_rtAdcValueRcLo+1
  5239  0E23  0876               	movf	?_adc_sample,w
  5240  0E24  00D4               	movwf	_rtAdcValueRcLo
  5241                           
  5242                           ;main.c: 50: rtAdcValueRcLo>>=1;
  5243  0E25  3001               	movlw	1
  5244  0E26                     u5335:	
  5245  0E26  36D5               	lsrf	_rtAdcValueRcLo+1,f
  5246  0E27  0CD4               	rrf	_rtAdcValueRcLo,f
  5247  0E28  0B89               	decfsz	9,f
  5248  0E29  2E26               	goto	u5335
  5249                           
  5250                           ;main.c: 51: rtAdcValueRcHi=adc_sample(channel_AN2,3,32);
  5251  0E2A  3003               	movlw	3
  5252  0E2B  00CA               	movwf	??_main
  5253  0E2C  084A               	movf	??_main,w
  5254  0E2D  00F6               	movwf	adc_sample@gfvr
  5255  0E2E  3020               	movlw	32
  5256  0E2F  00CB               	movwf	??_main+1
  5257  0E30  084B               	movf	??_main+1,w
  5258  0E31  00F7               	movwf	adc_sample@num
  5259  0E32  3002               	movlw	2
  5260  0E33  319E  2641  318D   	fcall	_adc_sample
  5261  0E36  0877               	movf	?_adc_sample+1,w
  5262  0E37  0021               	movlb	1	; select bank1
  5263  0E38  00D3               	movwf	(_rtAdcValueRcHi+1)^(0+128)
  5264  0E39  0876               	movf	?_adc_sample,w
  5265  0E3A  00D2               	movwf	_rtAdcValueRcHi^(0+128)
  5266                           
  5267                           ;main.c: 52: rtAdcValueRcHi>>=1;
  5268  0E3B  3001               	movlw	1
  5269  0E3C                     u5345:	
  5270  0E3C  36D3               	lsrf	(_rtAdcValueRcHi+1)^(0+128),f
  5271  0E3D  0CD2               	rrf	_rtAdcValueRcHi^(0+128),f
  5272  0E3E  0B89               	decfsz	9,f
  5273  0E3F  2E3C               	goto	u5345
  5274                           
  5275                           ;main.c: 54: rtAdcValueVoFb=adc_sample(channel_AN7,3,32);
  5276  0E40  3003               	movlw	3
  5277  0E41  0020               	movlb	0	; select bank0
  5278  0E42  00CA               	movwf	??_main
  5279  0E43  084A               	movf	??_main,w
  5280  0E44  00F6               	movwf	adc_sample@gfvr
  5281  0E45  3020               	movlw	32
  5282  0E46  00CB               	movwf	??_main+1
  5283  0E47  084B               	movf	??_main+1,w
  5284  0E48  00F7               	movwf	adc_sample@num
  5285  0E49  3007               	movlw	7
  5286  0E4A  319E  2641  318D   	fcall	_adc_sample
  5287  0E4D  0877               	movf	?_adc_sample+1,w
  5288  0E4E  0021               	movlb	1	; select bank1
  5289  0E4F  00D1               	movwf	(_rtAdcValueVoFb+1)^(0+128)
  5290  0E50  0876               	movf	?_adc_sample,w
  5291  0E51  00D0               	movwf	_rtAdcValueVoFb^(0+128)
  5292                           
  5293                           ;main.c: 55: rtAdcValueVoFb>>=1;
  5294  0E52  3001               	movlw	1
  5295  0E53                     u5355:	
  5296  0E53  36D1               	lsrf	(_rtAdcValueVoFb+1)^(0+128),f
  5297  0E54  0CD0               	rrf	_rtAdcValueVoFb^(0+128),f
  5298  0E55  0B89               	decfsz	9,f
  5299  0E56  2E53               	goto	u5355
  5300                           
  5301                           ;main.c: 57: resRc=calc_temp_rc();
  5302  0E57  318F  2712  318D   	fcall	_calc_temp_rc
  5303  0E5A  0020               	movlb	0	; select bank0
  5304  0E5B  082E               	movf	?_calc_temp_rc+1,w
  5305  0E5C  00E0               	movwf	_resRc+1
  5306  0E5D  082D               	movf	?_calc_temp_rc,w
  5307  0E5E  00DF               	movwf	_resRc
  5308                           
  5309                           ;main.c: 58: resRs=calc_temp_rs();
  5310  0E5F  3191  2136  318D   	fcall	_calc_temp_rs
  5311  0E62  0020               	movlb	0	; select bank0
  5312  0E63  082E               	movf	?_calc_temp_rs+1,w
  5313  0E64  00DE               	movwf	_resRs+1
  5314  0E65  082D               	movf	?_calc_temp_rs,w
  5315  0E66  00DD               	movwf	_resRs
  5316                           
  5317                           ;main.c: 60: __nop();
  5318  0E67  0000               	nop
  5319                           
  5320                           ;main.c: 61: if(pidBbSm>=5){
  5321  0E68  3005               	movlw	5
  5322  0E69  0020               	movlb	0	; select bank0
  5323  0E6A  0259               	subwf	_pidBbSm,w
  5324  0E6B  1C03               	skipc
  5325  0E6C  2E97               	goto	l5695
  5326                           
  5327                           ;main.c: 62: pid_pwm1_idrv_run();
  5328  0E6D  3196  2691  318D   	fcall	_pid_pwm1_idrv_run
  5329                           
  5330                           ;main.c: 65: rsLoAvg=calc_rs_lo_avg(rtAdcValueRsLo);
  5331  0E70  0020               	movlb	0	; select bank0
  5332  0E71  0857               	movf	_rtAdcValueRsLo+1,w
  5333  0E72  00AE               	movwf	calc_rs_lo_avg@x+1
  5334  0E73  0856               	movf	_rtAdcValueRsLo,w
  5335  0E74  00AD               	movwf	calc_rs_lo_avg@x
  5336  0E75  319E  269F  318D   	fcall	_calc_rs_lo_avg
  5337  0E78  0020               	movlb	0	; select bank0
  5338  0E79  082E               	movf	?_calc_rs_lo_avg+1,w
  5339  0E7A  00CF               	movwf	_rsLoAvg+1
  5340  0E7B  082D               	movf	?_calc_rs_lo_avg,w
  5341  0E7C  00CE               	movwf	_rsLoAvg
  5342                           
  5343                           ;main.c: 66: voExpectMv=calc_expect_vout_adc_value(rsLoAvg);
  5344  0E7D  084F               	movf	_rsLoAvg+1,w
  5345  0E7E  00B7               	movwf	calc_expect_vout_adc_value@x+1
  5346  0E7F  084E               	movf	_rsLoAvg,w
  5347  0E80  00B6               	movwf	calc_expect_vout_adc_value@x
  5348  0E81  3188  20ED  318D   	fcall	_calc_expect_vout_adc_value
  5349  0E84  0020               	movlb	0	; select bank0
  5350  0E85  0837               	movf	?_calc_expect_vout_adc_value+1,w
  5351  0E86  0021               	movlb	1	; select bank1
  5352  0E87  00CB               	movwf	(_voExpectMv+1)^(0+128)
  5353  0E88  0020               	movlb	0	; select bank0
  5354  0E89  0836               	movf	?_calc_expect_vout_adc_value,w
  5355  0E8A  0021               	movlb	1	; select bank1
  5356  0E8B  00CA               	movwf	_voExpectMv^(0+128)
  5357                           
  5358                           ;main.c: 67: voExpectAdcValue=(voExpectMv<<1);
  5359  0E8C  354A               	lslf	_voExpectMv^(0+128),w
  5360  0E8D  0020               	movlb	0	; select bank0
  5361  0E8E  00D0               	movwf	_voExpectAdcValue
  5362  0E8F  0021               	movlb	1	; select bank1
  5363  0E90  0D4B               	rlf	(_voExpectMv+1)^(0+128),w
  5364  0E91  0020               	movlb	0	; select bank0
  5365  0E92  00D1               	movwf	_voExpectAdcValue+1
  5366                           
  5367                           ;main.c: 68: pid_pwm2_vout_run();
  5368  0E93  3192  2257  318D   	fcall	_pid_pwm2_vout_run
  5369                           
  5370                           ;main.c: 69: }else{
  5371  0E96  2EDF               	goto	l5709
  5372  0E97                     l5695:	
  5373                           
  5374                           ;main.c: 70: pid_pwm1_idrv_b_b();
  5375  0E97  318B  2369  318D   	fcall	_pid_pwm1_idrv_b_b
  5376                           
  5377                           ;main.c: 72: if(pidBbSm>=5){
  5378  0E9A  3005               	movlw	5
  5379  0E9B  0020               	movlb	0	; select bank0
  5380  0E9C  0259               	subwf	_pidBbSm,w
  5381  0E9D  1C03               	skipc
  5382  0E9E  2EDF               	goto	l5709
  5383                           
  5384                           ;main.c: 73: sysData.pidSetFlg0 = 0x55;
  5385  0E9F  305C               	movlw	92
  5386  0EA0  0086               	movwf	6
  5387  0EA1  3023               	movlw	35
  5388  0EA2  0087               	movwf	7
  5389  0EA3  3055               	movlw	85
  5390  0EA4  3FC0               	movwi [0]fsr1
  5391                           
  5392                           ;main.c: 74: sysData.pidSetFlg1 = 0xaa;
  5393  0EA5  305D               	movlw	93
  5394  0EA6  0086               	movwf	6
  5395  0EA7  3023               	movlw	35
  5396  0EA8  0087               	movwf	7
  5397  0EA9  30AA               	movlw	170
  5398  0EAA  0081               	movwf	1
  5399                           
  5400                           ;main.c: 75: sysData.pidKp=(uint16_t)PidKp;
  5401  0EAB  305C               	movlw	92
  5402  0EAC  0086               	movwf	6
  5403  0EAD  3023               	movlw	35
  5404  0EAE  0087               	movwf	7
  5405  0EAF  3144               	addfsr 1,4
  5406  0EB0  0852               	movf	_PidKp,w
  5407  0EB1  3FC0               	movwi [0]fsr1
  5408  0EB2  0853               	movf	_PidKp+1,w
  5409  0EB3  3FC1               	movwi [1]fsr1
  5410                           
  5411                           ;main.c: 76: sysData.pidTd=(uint16_t)PidTd;
  5412  0EB4  305C               	movlw	92
  5413  0EB5  0086               	movwf	6
  5414  0EB6  3023               	movlw	35
  5415  0EB7  0087               	movwf	7
  5416  0EB8  3148               	addfsr 1,8
  5417  0EB9  0021               	movlb	1	; select bank1
  5418  0EBA  084C               	movf	_PidTd^(0+128),w
  5419  0EBB  3FC0               	movwi [0]fsr1
  5420  0EBC  084D               	movf	(_PidTd+1)^(0+128),w
  5421  0EBD  3FC1               	movwi [1]fsr1
  5422                           
  5423                           ;main.c: 77: sysData.pidTi=(uint16_t)PidTi;
  5424  0EBE  305C               	movlw	92
  5425  0EBF  0086               	movwf	6
  5426  0EC0  3023               	movlw	35
  5427  0EC1  0087               	movwf	7
  5428  0EC2  3146               	addfsr 1,6
  5429  0EC3  084E               	movf	_PidTi^(0+128),w
  5430  0EC4  3FC0               	movwi [0]fsr1
  5431  0EC5  084F               	movf	(_PidTi+1)^(0+128),w
  5432  0EC6  3FC1               	movwi [1]fsr1
  5433                           
  5434                           ;main.c: 78: sys_data_save();
  5435  0EC7  319B  23FD  318D   	fcall	_sys_data_save
  5436                           
  5437                           ;main.c: 79: modbusBuf[0]=0x55;
  5438  0ECA  3055               	movlw	85
  5439  0ECB  0020               	movlb	0	; select bank0
  5440  0ECC  00CA               	movwf	??_main
  5441  0ECD  084A               	movf	??_main,w
  5442  0ECE  0023               	movlb	3	; select bank3
  5443  0ECF  00A0               	movwf	_modbusBuf^(0+384)
  5444                           
  5445                           ;main.c: 80: modbusBuf[1]=0xaa;
  5446  0ED0  30AA               	movlw	170
  5447  0ED1  0020               	movlb	0	; select bank0
  5448  0ED2  00CA               	movwf	??_main
  5449  0ED3  084A               	movf	??_main,w
  5450  0ED4  0023               	movlb	3	; select bank3
  5451  0ED5  00A1               	movwf	(_modbusBuf^(0+384)+1)
  5452                           
  5453                           ;main.c: 81: uart_send_len(modbusBuf,2);
  5454  0ED6  3002               	movlw	2
  5455  0ED7  0020               	movlb	0	; select bank0
  5456  0ED8  00CA               	movwf	??_main
  5457  0ED9  084A               	movf	??_main,w
  5458  0EDA  00F3               	movwf	uart_send_len@len
  5459  0EDB  30A0               	movlw	(low (_modbusBuf| (0+256)))& (0+255)
  5460  0EDC  319A  22C6  318D   	fcall	_uart_send_len
  5461  0EDF                     l5709:	
  5462                           
  5463                           ;main.c: 82: }
  5464                           ;main.c: 83: }
  5465                           ;main.c: 85: }
  5466                           ;main.c: 87: if(Event & (1<<3)){
  5467  0EDF  0020               	movlb	0	; select bank0
  5468  0EE0  1DDC               	btfss	_Event,3	;volatile
  5469  0EE1  2EE6               	goto	l5713
  5470                           
  5471                           ;main.c: 88: Event &= ~(1<<3);
  5472  0EE2  30F7               	movlw	247
  5473  0EE3  00CA               	movwf	??_main
  5474  0EE4  084A               	movf	??_main,w
  5475  0EE5  05DC               	andwf	_Event,f	;volatile
  5476  0EE6                     l5713:	
  5477                           
  5478                           ;main.c: 130: }
  5479                           ;main.c: 132: if(Event & (1<<0)){
  5480  0EE6  1C5C               	btfss	_Event,0	;volatile
  5481  0EE7  2F10               	goto	l5723
  5482                           
  5483                           ;main.c: 133: Event &= ~ (1<<0);
  5484  0EE8  30FE               	movlw	254
  5485  0EE9  00CA               	movwf	??_main
  5486  0EEA  084A               	movf	??_main,w
  5487  0EEB  05DC               	andwf	_Event,f	;volatile
  5488                           
  5489                           ;main.c: 134: if(eusartRxCount>0){
  5490  0EEC  0879               	movf	_eusartRxCount,w	;volatile
  5491  0EED  1903               	btfsc	3,2
  5492  0EEE  2F0D               	goto	l5721
  5493                           
  5494                           ;main.c: 135: m_mem_cpy_len(modbusBuf,eusartRxBuffer,eusartRxCount);
  5495  0EEF  30A0               	movlw	low _modbusBuf
  5496  0EF0  00A0               	movwf	m_mem_cpy_len@d
  5497  0EF1  3001               	movlw	high _modbusBuf
  5498  0EF2  00A1               	movwf	m_mem_cpy_len@d+1
  5499  0EF3  3020               	movlw	low _eusartRxBuffer
  5500  0EF4  00A2               	movwf	m_mem_cpy_len@s
  5501  0EF5  3001               	movlw	high _eusartRxBuffer
  5502  0EF6  00A3               	movwf	m_mem_cpy_len@s+1
  5503  0EF7  0879               	movf	_eusartRxCount,w	;volatile
  5504  0EF8  00CA               	movwf	??_main
  5505  0EF9  01CB               	clrf	??_main+1
  5506  0EFA  084A               	movf	??_main,w
  5507  0EFB  00A4               	movwf	m_mem_cpy_len@len
  5508  0EFC  084B               	movf	??_main+1,w
  5509  0EFD  00A5               	movwf	m_mem_cpy_len@len+1
  5510  0EFE  319A  22A7  318D   	fcall	_m_mem_cpy_len
  5511                           
  5512                           ;main.c: 136: modbus_response_process(modbusBuf,eusartRxCount);
  5513  0F01  0879               	movf	_eusartRxCount,w	;volatile
  5514  0F02  0020               	movlb	0	; select bank0
  5515  0F03  00CA               	movwf	??_main
  5516  0F04  01CB               	clrf	??_main+1
  5517  0F05  084A               	movf	??_main,w
  5518  0F06  00BF               	movwf	modbus_response_process@rlen
  5519  0F07  084B               	movf	??_main+1,w
  5520  0F08  00C0               	movwf	modbus_response_process@rlen+1
  5521  0F09  30A0               	movlw	(low (_modbusBuf| (0+256)))& (0+255)
  5522  0F0A  319D  2597  318D   	fcall	_modbus_response_process
  5523  0F0D                     l5721:	
  5524                           
  5525                           ;main.c: 138: }
  5526                           ;main.c: 140: uart_received_start();
  5527  0F0D  3199  218E  318D   	fcall	_uart_received_start
  5528  0F10                     l5723:	
  5529                           
  5530                           ;main.c: 141: }
  5531                           ;main.c: 143: __nop();
  5532  0F10  0000               	nop
  5533  0F11  2DEC               	goto	l5661
  5534  0F12                     __end_of_main:	
  5535                           
  5536                           	psect	text1
  5537  198E                     __ptext1:	
  5538 ;; *************** function _uart_received_start *****************
  5539 ;; Defined at:
  5540 ;;		line 52 in file "src/api/my_uart.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;		None
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;		None
  5545 ;; Return value:  Size  Location     Type
  5546 ;;                  1    wreg      void 
  5547 ;; Registers used:
  5548 ;;		status,2
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/0
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5558 ;;Total ram usage:        0 bytes
  5559 ;; Hardware stack levels used:    1
  5560 ;; Hardware stack levels required when called:    1
  5561 ;; This function calls:
  5562 ;;		Nothing
  5563 ;; This function is called by:
  5564 ;;		_main
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567                           
  5568                           
  5569                           ;psect for function _uart_received_start
  5570  198E                     _uart_received_start:	
  5571                           
  5572                           ;my_uart.c: 54: eusartRxCount=0;
  5573                           
  5574                           ;incstack = 0
  5575                           ; Regs used in _uart_received_start: [status,2]
  5576  198E  01F9               	clrf	_eusartRxCount	;volatile
  5577                           
  5578                           ;my_uart.c: 55: RCSTAbits.CREN=0;
  5579  198F  0023               	movlb	3	; select bank3
  5580  1990  121D               	bcf	29,4	;volatile
  5581                           
  5582                           ;my_uart.c: 56: PIE1bits.RCIE = 0;
  5583  1991  0021               	movlb	1	; select bank1
  5584  1992  1291               	bcf	17,5	;volatile
  5585                           
  5586                           ;my_uart.c: 57: PIR1bits.RCIF=0;
  5587  1993  0020               	movlb	0	; select bank0
  5588  1994  1291               	bcf	17,5	;volatile
  5589                           
  5590                           ;my_uart.c: 59: RCSTAbits.CREN=1;
  5591  1995  0023               	movlb	3	; select bank3
  5592  1996  161D               	bsf	29,4	;volatile
  5593                           
  5594                           ;my_uart.c: 60: PIE1bits.RCIE = 1;
  5595  1997  0021               	movlb	1	; select bank1
  5596  1998  1691               	bsf	17,5	;volatile
  5597                           
  5598                           ;my_uart.c: 62: eusartRxIdleTime_ms=0;
  5599  1999  01FA               	clrf	_eusartRxIdleTime_ms	;volatile
  5600  199A  0008               	return
  5601  199B                     __end_of_uart_received_start:	
  5602                           
  5603                           	psect	text2
  5604  11C6                     __ptext2:	
  5605 ;; *************** function _sys_data_init *****************
  5606 ;; Defined at:
  5607 ;;		line 104 in file "src/api/sysData.c"
  5608 ;; Parameters:    Size  Location     Type
  5609 ;;		None
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;  i               2   27[BANK0 ] unsigned int 
  5612 ;;  ret             2   25[BANK0 ] unsigned int 
  5613 ;; Return value:  Size  Location     Type
  5614 ;;                  2  763[None  ] unsigned int 
  5615 ;; Registers used:
  5616 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/0
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5623 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5624 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5625 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5626 ;;Total ram usage:       10 bytes
  5627 ;; Hardware stack levels used:    1
  5628 ;; Hardware stack levels required when called:    4
  5629 ;; This function calls:
  5630 ;;		___wmul
  5631 ;;		_crc_verify
  5632 ;;		_my_flash_system_read
  5633 ;;		_sys_data_save
  5634 ;; This function is called by:
  5635 ;;		_main
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639                           
  5640                           ;psect for function _sys_data_init
  5641  11C6                     _sys_data_init:	
  5642                           
  5643                           ;sysData.c: 106: uint16_t ret,i;
  5644                           ;sysData.c: 107: my_flash_system_read((uint8_t*)&sysData,sizeof(sysData_t));
  5645                           
  5646                           ;incstack = 0
  5647                           ; Regs used in _sys_data_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5648  11C6  305C               	movlw	92
  5649  11C7  00F3               	movwf	my_flash_system_read@buf
  5650  11C8  3023               	movlw	35
  5651  11C9  00F4               	movwf	my_flash_system_read@buf+1
  5652  11CA  3084               	movlw	132
  5653  11CB  00F5               	movwf	my_flash_system_read@len
  5654  11CC  3000               	movlw	0
  5655  11CD  00F6               	movwf	my_flash_system_read@len+1
  5656  11CE  319C  2434  3191   	fcall	_my_flash_system_read
  5657                           
  5658                           ;sysData.c: 108: ret=crc_verify((uint8_t*)&sysData,sizeof(sysData_t));
  5659  11D1  305C               	movlw	92
  5660  11D2  0020               	movlb	0	; select bank0
  5661  11D3  00A8               	movwf	crc_verify@message
  5662  11D4  3023               	movlw	35
  5663  11D5  00A9               	movwf	crc_verify@message+1
  5664  11D6  3084               	movlw	132
  5665  11D7  00AA               	movwf	crc_verify@n
  5666  11D8  3000               	movlw	0
  5667  11D9  00AB               	movwf	crc_verify@n+1
  5668  11DA  319B  23C6  3191   	fcall	_crc_verify
  5669  11DD  0020               	movlb	0	; select bank0
  5670  11DE  00B3               	movwf	??_sys_data_init
  5671  11DF  01B4               	clrf	??_sys_data_init+1
  5672  11E0  0833               	movf	??_sys_data_init,w
  5673  11E1  00B9               	movwf	sys_data_init@ret
  5674  11E2  0834               	movf	??_sys_data_init+1,w
  5675  11E3  00BA               	movwf	sys_data_init@ret+1
  5676                           
  5677                           ;sysData.c: 109: if(!ret){
  5678  11E4  0839               	movf	sys_data_init@ret,w
  5679  11E5  043A               	iorwf	sys_data_init@ret+1,w
  5680  11E6  1D03               	btfss	3,2
  5681  11E7  0008               	return
  5682                           
  5683                           ;sysData.c: 110: sysData.pidSetFlg0=0xff;
  5684  11E8  305C               	movlw	92
  5685  11E9  0086               	movwf	6
  5686  11EA  3023               	movlw	35
  5687  11EB  0087               	movwf	7
  5688  11EC  30FF               	movlw	255
  5689  11ED  3FC0               	movwi [0]fsr1
  5690                           
  5691                           ;sysData.c: 111: sysData.pidSetFlg1=0xff;
  5692  11EE  305D               	movlw	93
  5693  11EF  0086               	movwf	6
  5694  11F0  3023               	movlw	35
  5695  11F1  0087               	movwf	7
  5696  11F2  30FF               	movlw	255
  5697  11F3  0081               	movwf	1
  5698                           
  5699                           ;sysData.c: 112: sysData.id=0xff;
  5700  11F4  305E               	movlw	94
  5701  11F5  0086               	movwf	6
  5702  11F6  3023               	movlw	35
  5703  11F7  0087               	movwf	7
  5704  11F8  30FF               	movlw	255
  5705  11F9  0081               	movwf	1
  5706                           
  5707                           ;sysData.c: 113: for(i=0;i<30;i++){
  5708  11FA  01BB               	clrf	sys_data_init@i
  5709  11FB  01BC               	clrf	sys_data_init@i+1
  5710  11FC  3000               	movlw	0
  5711  11FD  023C               	subwf	sys_data_init@i+1,w
  5712  11FE  301E               	movlw	30
  5713  11FF  1903               	skipnz
  5714  1200  023B               	subwf	sys_data_init@i,w
  5715  1201  1803               	btfsc	3,0
  5716  1202  2A54               	goto	l5571
  5717  1203                     l5565:	
  5718                           
  5719                           ;sysData.c: 115: sysData.calibRsAdc[i]=6400+i*720;
  5720  1203  083C               	movf	sys_data_init@i+1,w
  5721  1204  00F4               	movwf	___wmul@multiplier+1
  5722  1205  083B               	movf	sys_data_init@i,w
  5723  1206  00F3               	movwf	___wmul@multiplier
  5724  1207  30D0               	movlw	208
  5725  1208  00F5               	movwf	___wmul@multiplicand
  5726  1209  3002               	movlw	2
  5727  120A  00F6               	movwf	___wmul@multiplicand+1
  5728  120B  319A  2289  3191   	fcall	___wmul
  5729  120E  0873               	movf	?___wmul,w
  5730  120F  3E00               	addlw	0
  5731  1210  0020               	movlb	0	; select bank0
  5732  1211  00B3               	movwf	??_sys_data_init
  5733  1212  3019               	movlw	25
  5734  1213  3D74               	addwfc	?___wmul+1,w
  5735  1214  00B4               	movwf	??_sys_data_init+1
  5736  1215  083C               	movf	sys_data_init@i+1,w
  5737  1216  00B6               	movwf	??_sys_data_init+3
  5738  1217  083B               	movf	sys_data_init@i,w
  5739  1218  00B5               	movwf	??_sys_data_init+2
  5740  1219  35B5               	lslf	??_sys_data_init+2,f
  5741  121A  0DB6               	rlf	??_sys_data_init+3,f
  5742  121B  3066               	movlw	102
  5743  121C  00B7               	movwf	??_sys_data_init+4
  5744  121D  3023               	movlw	35
  5745  121E  00B8               	movwf	??_sys_data_init+5
  5746  121F  0835               	movf	??_sys_data_init+2,w
  5747  1220  0737               	addwf	??_sys_data_init+4,w
  5748  1221  0086               	movwf	6
  5749  1222  0836               	movf	??_sys_data_init+3,w
  5750  1223  3D38               	addwfc	??_sys_data_init+5,w
  5751  1224  0087               	movwf	7
  5752  1225  0833               	movf	??_sys_data_init,w
  5753  1226  3FC0               	movwi [0]fsr1
  5754  1227  0834               	movf	??_sys_data_init+1,w
  5755  1228  3FC1               	movwi [1]fsr1
  5756                           
  5757                           ;sysData.c: 116: sysData.calibVoMV[i]=i*333;
  5758  1229  083C               	movf	sys_data_init@i+1,w
  5759  122A  00F4               	movwf	___wmul@multiplier+1
  5760  122B  083B               	movf	sys_data_init@i,w
  5761  122C  00F3               	movwf	___wmul@multiplier
  5762  122D  304D               	movlw	77
  5763  122E  00F5               	movwf	___wmul@multiplicand
  5764  122F  3001               	movlw	1
  5765  1230  00F6               	movwf	___wmul@multiplicand+1
  5766  1231  319A  2289  3191   	fcall	___wmul
  5767  1234  0020               	movlb	0	; select bank0
  5768  1235  083C               	movf	sys_data_init@i+1,w
  5769  1236  00B4               	movwf	??_sys_data_init+1
  5770  1237  083B               	movf	sys_data_init@i,w
  5771  1238  00B3               	movwf	??_sys_data_init
  5772  1239  35B3               	lslf	??_sys_data_init,f
  5773  123A  0DB4               	rlf	??_sys_data_init+1,f
  5774  123B  30A2               	movlw	162
  5775  123C  00B5               	movwf	??_sys_data_init+2
  5776  123D  3023               	movlw	35
  5777  123E  00B6               	movwf	??_sys_data_init+3
  5778  123F  0833               	movf	??_sys_data_init,w
  5779  1240  0735               	addwf	??_sys_data_init+2,w
  5780  1241  0086               	movwf	6
  5781  1242  0834               	movf	??_sys_data_init+1,w
  5782  1243  3D36               	addwfc	??_sys_data_init+3,w
  5783  1244  0087               	movwf	7
  5784  1245  0873               	movf	?___wmul,w
  5785  1246  3FC0               	movwi [0]fsr1
  5786  1247  0874               	movf	?___wmul+1,w
  5787  1248  3FC1               	movwi [1]fsr1
  5788  1249  3001               	movlw	1
  5789  124A  07BB               	addwf	sys_data_init@i,f
  5790  124B  3000               	movlw	0
  5791  124C  3DBC               	addwfc	sys_data_init@i+1,f
  5792  124D  3000               	movlw	0
  5793  124E  023C               	subwf	sys_data_init@i+1,w
  5794  124F  301E               	movlw	30
  5795  1250  1903               	skipnz
  5796  1251  023B               	subwf	sys_data_init@i,w
  5797  1252  1C03               	skipc
  5798  1253  2A03               	goto	l5565
  5799  1254                     l5571:	
  5800                           
  5801                           ;sysData.c: 117: }
  5802                           ;sysData.c: 118: sys_data_save();
  5803  1254  319B  23FD         	fcall	_sys_data_save
  5804  1256  0008               	return
  5805  1257                     __end_of_sys_data_init:	
  5806                           ;sysData.c: 126: }
  5807                           ;sysData.c: 128: return ret;
  5808                           ;	Return value of _sys_data_init is never used
  5809                           
  5810                           
  5811                           	psect	text3
  5812  1C34                     __ptext3:	
  5813 ;; *************** function _my_flash_system_read *****************
  5814 ;; Defined at:
  5815 ;;		line 23 in file "src/api/sysData.c"
  5816 ;; Parameters:    Size  Location     Type
  5817 ;;  buf             2    3[COMMON] PTR unsigned char 
  5818 ;;		 -> sysData(132), 
  5819 ;;  len             2    5[COMMON] unsigned int 
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;  i               2    5[BANK0 ] unsigned int 
  5822 ;;  flashAddr       2    3[BANK0 ] unsigned int 
  5823 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
  5824 ;; Return value:  Size  Location     Type
  5825 ;;                  1    wreg      void 
  5826 ;; Registers used:
  5827 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5828 ;; Tracked objects:
  5829 ;;		On entry : 0/0
  5830 ;;		On exit  : 0/0
  5831 ;;		Unchanged: 0/0
  5832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5833 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5834 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5835 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5836 ;;      Totals:         4       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5837 ;;Total ram usage:       11 bytes
  5838 ;; Hardware stack levels used:    1
  5839 ;; Hardware stack levels required when called:    1
  5840 ;; This function calls:
  5841 ;;		Nothing
  5842 ;; This function is called by:
  5843 ;;		_sys_data_init
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           
  5848                           ;psect for function _my_flash_system_read
  5849  1C34                     _my_flash_system_read:	
  5850                           
  5851                           ;sysData.c: 25: uint16_t flashAddr=0x1f00;
  5852                           
  5853                           ;incstack = 0
  5854                           ; Regs used in _my_flash_system_read: [wreg+fsr1l+fsr1h+status,2+status,0]
  5855  1C34  3000               	movlw	0
  5856  1C35  0020               	movlb	0	; select bank0
  5857  1C36  00A3               	movwf	my_flash_system_read@flashAddr
  5858  1C37  301F               	movlw	31
  5859  1C38  00A4               	movwf	my_flash_system_read@flashAddr+1
  5860                           
  5861                           ;sysData.c: 26: uint16_t i;
  5862                           ;sysData.c: 28: uint8_t GIEBitValue = INTCONbits.GIE;
  5863  1C39  3000               	movlw	0
  5864  1C3A  1B8B               	btfsc	11,7	;volatile
  5865  1C3B  3001               	movlw	1
  5866  1C3C  00A2               	movwf	my_flash_system_read@GIEBitValue
  5867                           
  5868                           ;sysData.c: 30: INTCONbits.GIE = 0;
  5869  1C3D  138B               	bcf	11,7	;volatile
  5870                           
  5871                           ;sysData.c: 32: for(i=0;i<len;i++){
  5872  1C3E  01A5               	clrf	my_flash_system_read@i
  5873  1C3F  01A6               	clrf	my_flash_system_read@i+1
  5874  1C40                     l5013:	
  5875  1C40  0876               	movf	my_flash_system_read@len+1,w
  5876  1C41  0226               	subwf	my_flash_system_read@i+1,w
  5877  1C42  1D03               	skipz
  5878  1C43  2C46               	goto	u4305
  5879  1C44  0875               	movf	my_flash_system_read@len,w
  5880  1C45  0225               	subwf	my_flash_system_read@i,w
  5881  1C46                     u4305:	
  5882  1C46  1803               	btfsc	3,0
  5883  1C47  2C6B               	goto	l5015
  5884                           
  5885                           ;sysData.c: 34: PMADRL = (flashAddr & 0x00FF);
  5886  1C48  0823               	movf	my_flash_system_read@flashAddr,w
  5887  1C49  0023               	movlb	3	; select bank3
  5888  1C4A  0091               	movwf	17	;volatile
  5889                           
  5890                           ;sysData.c: 35: PMADRH = ((flashAddr & 0xFF00) >> 8);
  5891  1C4B  0020               	movlb	0	; select bank0
  5892  1C4C  0824               	movf	my_flash_system_read@flashAddr+1,w
  5893  1C4D  0023               	movlb	3	; select bank3
  5894  1C4E  0092               	movwf	18	;volatile
  5895                           
  5896                           ;sysData.c: 37: PMCON1bits.CFGS = 0;
  5897  1C4F  1315               	bcf	21,6	;volatile
  5898                           
  5899                           ;sysData.c: 38: PMCON1bits.RD = 1;
  5900  1C50  1415               	bsf	21,0	;volatile
  5901                           
  5902                           ;sysData.c: 39: __nop();
  5903  1C51  0000               	nop
  5904                           
  5905                           ;sysData.c: 40: __nop();
  5906  1C52  0000               	nop
  5907                           
  5908                           ;sysData.c: 41: buf[i]=PMDATL;
  5909  1C53  0020               	movlb	0	; select bank0
  5910  1C54  0825               	movf	my_flash_system_read@i,w
  5911  1C55  0773               	addwf	my_flash_system_read@buf,w
  5912  1C56  00A0               	movwf	??_my_flash_system_read
  5913  1C57  0826               	movf	my_flash_system_read@i+1,w
  5914  1C58  3D74               	addwfc	my_flash_system_read@buf+1,w
  5915  1C59  00A1               	movwf	??_my_flash_system_read+1
  5916  1C5A  0820               	movf	??_my_flash_system_read,w
  5917  1C5B  0086               	movwf	6
  5918  1C5C  0821               	movf	??_my_flash_system_read+1,w
  5919  1C5D  0087               	movwf	7
  5920  1C5E  0023               	movlb	3	; select bank3
  5921  1C5F  0813               	movf	19,w	;volatile
  5922  1C60  0081               	movwf	1
  5923                           
  5924                           ;sysData.c: 42: flashAddr++;
  5925  1C61  3001               	movlw	1
  5926  1C62  0020               	movlb	0	; select bank0
  5927  1C63  07A3               	addwf	my_flash_system_read@flashAddr,f
  5928  1C64  3000               	movlw	0
  5929  1C65  3DA4               	addwfc	my_flash_system_read@flashAddr+1,f
  5930  1C66  3001               	movlw	1
  5931  1C67  07A5               	addwf	my_flash_system_read@i,f
  5932  1C68  3000               	movlw	0
  5933  1C69  3DA6               	addwfc	my_flash_system_read@i+1,f
  5934  1C6A  2C40               	goto	l5013
  5935  1C6B                     l5015:	
  5936                           
  5937                           ;sysData.c: 43: }
  5938                           ;sysData.c: 44: INTCONbits.GIE = GIEBitValue;
  5939  1C6B  0C22               	rrf	my_flash_system_read@GIEBitValue,w
  5940  1C6C  1C03               	skipc
  5941  1C6D  138B               	bcf	11,7	;volatile
  5942  1C6E  1803               	skipnc
  5943  1C6F  178B               	bsf	11,7	;volatile
  5944  1C70  0008               	return
  5945  1C71                     __end_of_my_flash_system_read:	
  5946                           
  5947                           	psect	text4
  5948  1257                     __ptext4:	
  5949 ;; *************** function _pid_pwm2_vout_run *****************
  5950 ;; Defined at:
  5951 ;;		line 351 in file "src/api/sample.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;		None
  5954 ;; Auto vars:     Size  Location     Type
  5955 ;;  t16             2   13[BANK0 ] int 
  5956 ;;  ei              2   11[BANK0 ] int 
  5957 ;; Return value:  Size  Location     Type
  5958 ;;                  1    wreg      void 
  5959 ;; Registers used:
  5960 ;;		wreg, status,2, status,0, pclath, cstack
  5961 ;; Tracked objects:
  5962 ;;		On entry : 0/0
  5963 ;;		On exit  : 0/0
  5964 ;;		Unchanged: 0/0
  5965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5967 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5968 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5969 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5970 ;;Total ram usage:        6 bytes
  5971 ;; Hardware stack levels used:    1
  5972 ;; Hardware stack levels required when called:    3
  5973 ;; This function calls:
  5974 ;;		___awdiv
  5975 ;;		___lwdiv
  5976 ;;		_set_vout_pwm2_duty
  5977 ;; This function is called by:
  5978 ;;		_main
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982                           
  5983                           ;psect for function _pid_pwm2_vout_run
  5984  1257                     _pid_pwm2_vout_run:	
  5985                           
  5986                           ;sample.c: 353: int16_t t16,ei;
  5987                           ;sample.c: 354: t16=voExpectAdcValue-rtAdcValueVoFb;
  5988                           
  5989                           ;incstack = 0
  5990                           ; Regs used in _pid_pwm2_vout_run: [wreg+status,2+status,0+pclath+cstack]
  5991  1257  0021               	movlb	1	; select bank1
  5992  1258  0950               	comf	_rtAdcValueVoFb^(0+128),w
  5993  1259  0020               	movlb	0	; select bank0
  5994  125A  00A9               	movwf	??_pid_pwm2_vout_run
  5995  125B  0021               	movlb	1	; select bank1
  5996  125C  0951               	comf	(_rtAdcValueVoFb+1)^(0+128),w
  5997  125D  0020               	movlb	0	; select bank0
  5998  125E  00AA               	movwf	??_pid_pwm2_vout_run+1
  5999  125F  0AA9               	incf	??_pid_pwm2_vout_run,f
  6000  1260  1903               	skipnz
  6001  1261  0AAA               	incf	??_pid_pwm2_vout_run+1,f
  6002  1262  0850               	movf	_voExpectAdcValue,w
  6003  1263  0729               	addwf	??_pid_pwm2_vout_run,w
  6004  1264  00AD               	movwf	pid_pwm2_vout_run@t16
  6005  1265  0851               	movf	_voExpectAdcValue+1,w
  6006  1266  3D2A               	addwfc	??_pid_pwm2_vout_run+1,w
  6007  1267  00AE               	movwf	pid_pwm2_vout_run@t16+1
  6008                           
  6009                           ;sample.c: 355: ei=t16/150;
  6010  1268  3096               	movlw	150
  6011  1269  00F3               	movwf	___awdiv@divisor
  6012  126A  3000               	movlw	0
  6013  126B  00F4               	movwf	___awdiv@divisor+1
  6014  126C  082E               	movf	pid_pwm2_vout_run@t16+1,w
  6015  126D  00F6               	movwf	___awdiv@dividend+1
  6016  126E  082D               	movf	pid_pwm2_vout_run@t16,w
  6017  126F  00F5               	movwf	___awdiv@dividend
  6018  1270  319C  24F2  3192   	fcall	___awdiv
  6019  1273  0874               	movf	?___awdiv+1,w
  6020  1274  0020               	movlb	0	; select bank0
  6021  1275  00AC               	movwf	pid_pwm2_vout_run@ei+1
  6022  1276  0873               	movf	?___awdiv,w
  6023  1277  00AB               	movwf	pid_pwm2_vout_run@ei
  6024                           
  6025                           ;sample.c: 356: if(ei==0){
  6026  1278  082B               	movf	pid_pwm2_vout_run@ei,w
  6027  1279  042C               	iorwf	pid_pwm2_vout_run@ei+1,w
  6028  127A  1D03               	btfss	3,2
  6029  127B  2A9D               	goto	l5461
  6030                           
  6031                           ;sample.c: 357: if(t16>16)ei=1;
  6032  127C  082E               	movf	pid_pwm2_vout_run@t16+1,w
  6033  127D  3A80               	xorlw	128
  6034  127E  00A9               	movwf	??_pid_pwm2_vout_run
  6035  127F  3080               	movlw	128
  6036  1280  0229               	subwf	??_pid_pwm2_vout_run,w
  6037  1281  1D03               	skipz
  6038  1282  2A85               	goto	u5035
  6039  1283  3011               	movlw	17
  6040  1284  022D               	subwf	pid_pwm2_vout_run@t16,w
  6041  1285                     u5035:	
  6042  1285  1C03               	skipc
  6043  1286  2A8C               	goto	l680
  6044  1287  3001               	movlw	1
  6045  1288  0020               	movlb	0	; select bank0
  6046  1289  00AB               	movwf	pid_pwm2_vout_run@ei
  6047  128A  3000               	movlw	0
  6048  128B  00AC               	movwf	pid_pwm2_vout_run@ei+1
  6049  128C                     l680:	
  6050                           
  6051                           ;sample.c: 358: if(t16<-16)ei=-1;
  6052  128C  0020               	movlb	0	; select bank0
  6053  128D  082E               	movf	pid_pwm2_vout_run@t16+1,w
  6054  128E  3A80               	xorlw	128
  6055  128F  00A9               	movwf	??_pid_pwm2_vout_run
  6056  1290  307F               	movlw	127
  6057  1291  0229               	subwf	??_pid_pwm2_vout_run,w
  6058  1292  1D03               	skipz
  6059  1293  2A96               	goto	u5045
  6060  1294  30F0               	movlw	240
  6061  1295  022D               	subwf	pid_pwm2_vout_run@t16,w
  6062  1296                     u5045:	
  6063  1296  1803               	skipnc
  6064  1297  2A9D               	goto	l5461
  6065  1298  30FF               	movlw	255
  6066  1299  0020               	movlb	0	; select bank0
  6067  129A  00AB               	movwf	pid_pwm2_vout_run@ei
  6068  129B  30FF               	movlw	255
  6069  129C  00AC               	movwf	pid_pwm2_vout_run@ei+1
  6070  129D                     l5461:	
  6071                           
  6072                           ;sample.c: 359: }
  6073                           ;sample.c: 361: pwm2Ei=pwm2Ei+ei;
  6074  129D  0020               	movlb	0	; select bank0
  6075  129E  082B               	movf	pid_pwm2_vout_run@ei,w
  6076  129F  0021               	movlb	1	; select bank1
  6077  12A0  0744               	addwf	_pwm2Ei^(0+128),w
  6078  12A1  00C4               	movwf	_pwm2Ei^(0+128)
  6079  12A2  0020               	movlb	0	; select bank0
  6080  12A3  082C               	movf	pid_pwm2_vout_run@ei+1,w
  6081  12A4  0021               	movlb	1	; select bank1
  6082  12A5  3D45               	addwfc	(_pwm2Ei+1)^(0+128),w
  6083  12A6  00C5               	movwf	(_pwm2Ei+1)^(0+128)
  6084                           
  6085                           ;sample.c: 365: t16=voExpectAdcValue/10;
  6086  12A7  300A               	movlw	10
  6087  12A8  0020               	movlb	0	; select bank0
  6088  12A9  00A2               	movwf	___lwdiv@divisor
  6089  12AA  3000               	movlw	0
  6090  12AB  00A3               	movwf	___lwdiv@divisor+1
  6091  12AC  0851               	movf	_voExpectAdcValue+1,w
  6092  12AD  00A5               	movwf	___lwdiv@dividend+1
  6093  12AE  0850               	movf	_voExpectAdcValue,w
  6094  12AF  00A4               	movwf	___lwdiv@dividend
  6095  12B0  319B  2391  3192   	fcall	___lwdiv
  6096  12B3  0020               	movlb	0	; select bank0
  6097  12B4  0823               	movf	?___lwdiv+1,w
  6098  12B5  00AE               	movwf	pid_pwm2_vout_run@t16+1
  6099  12B6  0822               	movf	?___lwdiv,w
  6100  12B7  00AD               	movwf	pid_pwm2_vout_run@t16
  6101                           
  6102                           ;sample.c: 367: t16=t16+pwm2Ei;
  6103  12B8  0021               	movlb	1	; select bank1
  6104  12B9  0844               	movf	_pwm2Ei^(0+128),w
  6105  12BA  0020               	movlb	0	; select bank0
  6106  12BB  072D               	addwf	pid_pwm2_vout_run@t16,w
  6107  12BC  00AD               	movwf	pid_pwm2_vout_run@t16
  6108  12BD  0021               	movlb	1	; select bank1
  6109  12BE  0845               	movf	(_pwm2Ei+1)^(0+128),w
  6110  12BF  0020               	movlb	0	; select bank0
  6111  12C0  3D2E               	addwfc	pid_pwm2_vout_run@t16+1,w
  6112  12C1  00AE               	movwf	pid_pwm2_vout_run@t16+1
  6113                           
  6114                           ;sample.c: 368: if(t16>1580)t16=1580;
  6115  12C2  082E               	movf	pid_pwm2_vout_run@t16+1,w
  6116  12C3  3A80               	xorlw	128
  6117  12C4  00A9               	movwf	??_pid_pwm2_vout_run
  6118  12C5  3086               	movlw	134
  6119  12C6  0229               	subwf	??_pid_pwm2_vout_run,w
  6120  12C7  1D03               	skipz
  6121  12C8  2ACB               	goto	u5055
  6122  12C9  302D               	movlw	45
  6123  12CA  022D               	subwf	pid_pwm2_vout_run@t16,w
  6124  12CB                     u5055:	
  6125  12CB  1C03               	skipc
  6126  12CC  2AD2               	goto	l682
  6127  12CD  302C               	movlw	44
  6128  12CE  0020               	movlb	0	; select bank0
  6129  12CF  00AD               	movwf	pid_pwm2_vout_run@t16
  6130  12D0  3006               	movlw	6
  6131  12D1  00AE               	movwf	pid_pwm2_vout_run@t16+1
  6132  12D2                     l682:	
  6133                           
  6134                           ;sample.c: 369: if(t16<5)t16=5;
  6135  12D2  0020               	movlb	0	; select bank0
  6136  12D3  082E               	movf	pid_pwm2_vout_run@t16+1,w
  6137  12D4  3A80               	xorlw	128
  6138  12D5  00A9               	movwf	??_pid_pwm2_vout_run
  6139  12D6  3080               	movlw	128
  6140  12D7  0229               	subwf	??_pid_pwm2_vout_run,w
  6141  12D8  1D03               	skipz
  6142  12D9  2ADC               	goto	u5065
  6143  12DA  3005               	movlw	5
  6144  12DB  022D               	subwf	pid_pwm2_vout_run@t16,w
  6145  12DC                     u5065:	
  6146  12DC  1803               	skipnc
  6147  12DD  2AE3               	goto	l5473
  6148  12DE  3005               	movlw	5
  6149  12DF  0020               	movlb	0	; select bank0
  6150  12E0  00AD               	movwf	pid_pwm2_vout_run@t16
  6151  12E1  3000               	movlw	0
  6152  12E2  00AE               	movwf	pid_pwm2_vout_run@t16+1
  6153  12E3                     l5473:	
  6154                           
  6155                           ;sample.c: 370: set_vout_pwm2_duty((uint16_t)t16);
  6156  12E3  0020               	movlb	0	; select bank0
  6157  12E4  082E               	movf	pid_pwm2_vout_run@t16+1,w
  6158  12E5  00A3               	movwf	set_vout_pwm2_duty@duty+1
  6159  12E6  082D               	movf	pid_pwm2_vout_run@t16,w
  6160  12E7  00A2               	movwf	set_vout_pwm2_duty@duty
  6161  12E8  3190  2009         	fcall	_set_vout_pwm2_duty
  6162  12EA  0008               	return
  6163  12EB                     __end_of_pid_pwm2_vout_run:	
  6164                           
  6165                           	psect	text5
  6166  1009                     __ptext5:	
  6167 ;; *************** function _set_vout_pwm2_duty *****************
  6168 ;; Defined at:
  6169 ;;		line 101 in file "src/api/sample.c"
  6170 ;; Parameters:    Size  Location     Type
  6171 ;;  duty            2    2[BANK0 ] unsigned int 
  6172 ;; Auto vars:     Size  Location     Type
  6173 ;;  t16             2    4[BANK0 ] unsigned int 
  6174 ;; Return value:  Size  Location     Type
  6175 ;;                  1    wreg      void 
  6176 ;; Registers used:
  6177 ;;		wreg, status,2, pclath, cstack
  6178 ;; Tracked objects:
  6179 ;;		On entry : 0/0
  6180 ;;		On exit  : 0/0
  6181 ;;		Unchanged: 0/0
  6182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6183 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6184 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6186 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6187 ;;Total ram usage:        4 bytes
  6188 ;; Hardware stack levels used:    1
  6189 ;; Hardware stack levels required when called:    2
  6190 ;; This function calls:
  6191 ;;		_get_vout_pwm2_duty
  6192 ;; This function is called by:
  6193 ;;		_pid_pwm2_vout_run
  6194 ;; This function uses a non-reentrant model
  6195 ;;
  6196                           
  6197                           
  6198                           ;psect for function _set_vout_pwm2_duty
  6199  1009                     _set_vout_pwm2_duty:	
  6200                           
  6201                           ;sample.c: 104: uint16_t t16;
  6202                           ;sample.c: 105: pwm2DutyForVout=duty;
  6203                           
  6204                           ;incstack = 0
  6205                           ; Regs used in _set_vout_pwm2_duty: [wreg+status,2+pclath+cstack]
  6206  1009  0020               	movlb	0	; select bank0
  6207  100A  0823               	movf	set_vout_pwm2_duty@duty+1,w
  6208  100B  0021               	movlb	1	; select bank1
  6209  100C  00E9               	movwf	(_pwm2DutyForVout+1)^(0+128)
  6210  100D  0020               	movlb	0	; select bank0
  6211  100E  0822               	movf	set_vout_pwm2_duty@duty,w
  6212  100F  0021               	movlb	1	; select bank1
  6213  1010  00E8               	movwf	_pwm2DutyForVout^(0+128)
  6214                           
  6215                           ;sample.c: 106: t16=get_vout_pwm2_duty();
  6216  1011  319A  226D  3190   	fcall	_get_vout_pwm2_duty
  6217  1014  0874               	movf	?_get_vout_pwm2_duty+1,w
  6218  1015  0020               	movlb	0	; select bank0
  6219  1016  00A5               	movwf	set_vout_pwm2_duty@t16+1
  6220  1017  0873               	movf	?_get_vout_pwm2_duty,w
  6221  1018  00A4               	movwf	set_vout_pwm2_duty@t16
  6222                           
  6223                           ;sample.c: 107: if(t16==duty)return;
  6224  1019  0823               	movf	set_vout_pwm2_duty@duty+1,w
  6225  101A  0625               	xorwf	set_vout_pwm2_duty@t16+1,w
  6226  101B  1D03               	skipz
  6227  101C  281F               	goto	u4295
  6228  101D  0822               	movf	set_vout_pwm2_duty@duty,w
  6229  101E  0624               	xorwf	set_vout_pwm2_duty@t16,w
  6230  101F                     u4295:	
  6231  101F  1903               	btfsc	3,2
  6232  1020  0008               	return
  6233                           
  6234                           ;sample.c: 111: PWM2CONbits.EN = 0;
  6235  1021  003B               	movlb	27	; select bank27
  6236  1022  13AB               	bcf	43,7	;volatile
  6237                           
  6238                           ;sample.c: 112: PWM2DCL= (uint8_t)(duty&0xff);
  6239  1023  0020               	movlb	0	; select bank0
  6240  1024  0822               	movf	set_vout_pwm2_duty@duty,w
  6241  1025  003B               	movlb	27	; select bank27
  6242  1026  00A3               	movwf	35	;volatile
  6243                           
  6244                           ;sample.c: 113: PWM2DCH=(uint8_t)(duty>>8);
  6245  1027  0020               	movlb	0	; select bank0
  6246  1028  0823               	movf	set_vout_pwm2_duty@duty+1,w
  6247  1029  003B               	movlb	27	; select bank27
  6248  102A  00A4               	movwf	36	;volatile
  6249                           
  6250                           ;sample.c: 114: PWM2CONbits.EN = 1;
  6251  102B  17AB               	bsf	43,7	;volatile
  6252  102C  0008               	return
  6253  102D                     __end_of_set_vout_pwm2_duty:	
  6254                           
  6255                           	psect	text6
  6256  1A6D                     __ptext6:	
  6257 ;; *************** function _get_vout_pwm2_duty *****************
  6258 ;; Defined at:
  6259 ;;		line 92 in file "src/api/sample.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;		None
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;  t16             2    0[BANK0 ] unsigned int 
  6264 ;; Return value:  Size  Location     Type
  6265 ;;                  2    3[COMMON] unsigned int 
  6266 ;; Registers used:
  6267 ;;		wreg
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6274 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6275 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6276 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6277 ;;Total ram usage:        6 bytes
  6278 ;; Hardware stack levels used:    1
  6279 ;; Hardware stack levels required when called:    1
  6280 ;; This function calls:
  6281 ;;		Nothing
  6282 ;; This function is called by:
  6283 ;;		_set_vout_pwm2_duty
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287                           
  6288                           ;psect for function _get_vout_pwm2_duty
  6289  1A6D                     _get_vout_pwm2_duty:	
  6290                           
  6291                           ;sample.c: 95: uint16_t t16=PWM2DCH;
  6292                           
  6293                           ;incstack = 0
  6294                           ; Regs used in _get_vout_pwm2_duty: [wreg]
  6295  1A6D  003B               	movlb	27	; select bank27
  6296  1A6E  0824               	movf	36,w	;volatile
  6297  1A6F  00F5               	movwf	??_get_vout_pwm2_duty
  6298  1A70  01F6               	clrf	??_get_vout_pwm2_duty+1
  6299  1A71  0875               	movf	??_get_vout_pwm2_duty,w
  6300  1A72  0020               	movlb	0	; select bank0
  6301  1A73  00A0               	movwf	get_vout_pwm2_duty@t16
  6302  1A74  0876               	movf	??_get_vout_pwm2_duty+1,w
  6303  1A75  00A1               	movwf	get_vout_pwm2_duty@t16+1
  6304                           
  6305                           ;sample.c: 96: t16<<=8;
  6306  1A76  3008               	movlw	8
  6307  1A77                     u4235:	
  6308  1A77  35A0               	lslf	get_vout_pwm2_duty@t16,f
  6309  1A78  0DA1               	rlf	get_vout_pwm2_duty@t16+1,f
  6310  1A79  0B89               	decfsz	9,f
  6311  1A7A  2A77               	goto	u4235
  6312                           
  6313                           ;sample.c: 97: t16|=PWM2DCL;
  6314  1A7B  003B               	movlb	27	; select bank27
  6315  1A7C  0823               	movf	35,w	;volatile
  6316  1A7D  00F5               	movwf	??_get_vout_pwm2_duty
  6317  1A7E  01F6               	clrf	??_get_vout_pwm2_duty+1
  6318  1A7F  0875               	movf	??_get_vout_pwm2_duty,w
  6319  1A80  0020               	movlb	0	; select bank0
  6320  1A81  04A0               	iorwf	get_vout_pwm2_duty@t16,f
  6321  1A82  0876               	movf	??_get_vout_pwm2_duty+1,w
  6322  1A83  04A1               	iorwf	get_vout_pwm2_duty@t16+1,f
  6323                           
  6324                           ;sample.c: 98: return t16;
  6325  1A84  0821               	movf	get_vout_pwm2_duty@t16+1,w
  6326  1A85  00F4               	movwf	?_get_vout_pwm2_duty+1
  6327  1A86  0820               	movf	get_vout_pwm2_duty@t16,w
  6328  1A87  00F3               	movwf	?_get_vout_pwm2_duty
  6329  1A88  0008               	return
  6330  1A89                     __end_of_get_vout_pwm2_duty:	
  6331                           
  6332                           	psect	text7
  6333  1CF2                     __ptext7:	
  6334 ;; *************** function ___awdiv *****************
  6335 ;; Defined at:
  6336 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  divisor         2    3[COMMON] int 
  6339 ;;  dividend        2    5[COMMON] int 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;  quotient        2    2[BANK0 ] int 
  6342 ;;  sign            1    1[BANK0 ] unsigned char 
  6343 ;;  counter         1    0[BANK0 ] unsigned char 
  6344 ;; Return value:  Size  Location     Type
  6345 ;;                  2    3[COMMON] int 
  6346 ;; Registers used:
  6347 ;;		wreg, status,2, status,0
  6348 ;; Tracked objects:
  6349 ;;		On entry : 0/0
  6350 ;;		On exit  : 0/0
  6351 ;;		Unchanged: 0/0
  6352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6353 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6354 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6355 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6356 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6357 ;;Total ram usage:        9 bytes
  6358 ;; Hardware stack levels used:    1
  6359 ;; Hardware stack levels required when called:    1
  6360 ;; This function calls:
  6361 ;;		Nothing
  6362 ;; This function is called by:
  6363 ;;		_pid_pwm2_vout_run
  6364 ;; This function uses a non-reentrant model
  6365 ;;
  6366                           
  6367                           
  6368                           ;psect for function ___awdiv
  6369  1CF2                     ___awdiv:	
  6370                           
  6371                           ;incstack = 0
  6372                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6373  1CF2  0020               	movlb	0	; select bank0
  6374  1CF3  01A1               	clrf	___awdiv@sign
  6375  1CF4  1FF4               	btfss	___awdiv@divisor+1,7
  6376  1CF5  2CFD               	goto	l3973
  6377  1CF6  09F3               	comf	___awdiv@divisor,f
  6378  1CF7  09F4               	comf	___awdiv@divisor+1,f
  6379  1CF8  0AF3               	incf	___awdiv@divisor,f
  6380  1CF9  1903               	skipnz
  6381  1CFA  0AF4               	incf	___awdiv@divisor+1,f
  6382  1CFB  01A1               	clrf	___awdiv@sign
  6383  1CFC  0AA1               	incf	___awdiv@sign,f
  6384  1CFD                     l3973:	
  6385  1CFD  1FF6               	btfss	___awdiv@dividend+1,7
  6386  1CFE  2D08               	goto	l3979
  6387  1CFF  09F5               	comf	___awdiv@dividend,f
  6388  1D00  09F6               	comf	___awdiv@dividend+1,f
  6389  1D01  0AF5               	incf	___awdiv@dividend,f
  6390  1D02  1903               	skipnz
  6391  1D03  0AF6               	incf	___awdiv@dividend+1,f
  6392  1D04  3001               	movlw	1
  6393  1D05  00F7               	movwf	??___awdiv
  6394  1D06  0877               	movf	??___awdiv,w
  6395  1D07  06A1               	xorwf	___awdiv@sign,f
  6396  1D08                     l3979:	
  6397  1D08  01A2               	clrf	___awdiv@quotient
  6398  1D09  01A3               	clrf	___awdiv@quotient+1
  6399  1D0A  0873               	movf	___awdiv@divisor,w
  6400  1D0B  0474               	iorwf	___awdiv@divisor+1,w
  6401  1D0C  1903               	btfsc	3,2
  6402  1D0D  2D37               	goto	l4001
  6403  1D0E  01A0               	clrf	___awdiv@counter
  6404  1D0F  0AA0               	incf	___awdiv@counter,f
  6405  1D10                     l3989:	
  6406  1D10  1BF4               	btfsc	___awdiv@divisor+1,7
  6407  1D11  2D1C               	goto	l3991
  6408  1D12  3001               	movlw	1
  6409  1D13                     u2975:	
  6410  1D13  35F3               	lslf	___awdiv@divisor,f
  6411  1D14  0DF4               	rlf	___awdiv@divisor+1,f
  6412  1D15  0B89               	decfsz	9,f
  6413  1D16  2D13               	goto	u2975
  6414  1D17  3001               	movlw	1
  6415  1D18  00F7               	movwf	??___awdiv
  6416  1D19  0877               	movf	??___awdiv,w
  6417  1D1A  07A0               	addwf	___awdiv@counter,f
  6418  1D1B  2D10               	goto	l3989
  6419  1D1C                     l3991:	
  6420  1D1C  3001               	movlw	1
  6421  1D1D                     u2995:	
  6422  1D1D  35A2               	lslf	___awdiv@quotient,f
  6423  1D1E  0DA3               	rlf	___awdiv@quotient+1,f
  6424  1D1F  0B89               	decfsz	9,f
  6425  1D20  2D1D               	goto	u2995
  6426  1D21  0874               	movf	___awdiv@divisor+1,w
  6427  1D22  0276               	subwf	___awdiv@dividend+1,w
  6428  1D23  1D03               	skipz
  6429  1D24  2D27               	goto	u3005
  6430  1D25  0873               	movf	___awdiv@divisor,w
  6431  1D26  0275               	subwf	___awdiv@dividend,w
  6432  1D27                     u3005:	
  6433  1D27  1C03               	skipc
  6434  1D28  2D2E               	goto	l3997
  6435  1D29  0873               	movf	___awdiv@divisor,w
  6436  1D2A  02F5               	subwf	___awdiv@dividend,f
  6437  1D2B  0874               	movf	___awdiv@divisor+1,w
  6438  1D2C  3BF6               	subwfb	___awdiv@dividend+1,f
  6439  1D2D  1422               	bsf	___awdiv@quotient,0
  6440  1D2E                     l3997:	
  6441  1D2E  3001               	movlw	1
  6442  1D2F                     u3015:	
  6443  1D2F  36F4               	lsrf	___awdiv@divisor+1,f
  6444  1D30  0CF3               	rrf	___awdiv@divisor,f
  6445  1D31  0B89               	decfsz	9,f
  6446  1D32  2D2F               	goto	u3015
  6447  1D33  3001               	movlw	1
  6448  1D34  02A0               	subwf	___awdiv@counter,f
  6449  1D35  1D03               	btfss	3,2
  6450  1D36  2D1C               	goto	l3991
  6451  1D37                     l4001:	
  6452  1D37  0821               	movf	___awdiv@sign,w
  6453  1D38  1903               	btfsc	3,2
  6454  1D39  2D3F               	goto	l4005
  6455  1D3A  09A2               	comf	___awdiv@quotient,f
  6456  1D3B  09A3               	comf	___awdiv@quotient+1,f
  6457  1D3C  0AA2               	incf	___awdiv@quotient,f
  6458  1D3D  1903               	skipnz
  6459  1D3E  0AA3               	incf	___awdiv@quotient+1,f
  6460  1D3F                     l4005:	
  6461  1D3F  0823               	movf	___awdiv@quotient+1,w
  6462  1D40  00F4               	movwf	?___awdiv+1
  6463  1D41  0822               	movf	___awdiv@quotient,w
  6464  1D42  00F3               	movwf	?___awdiv
  6465  1D43  0008               	return
  6466  1D44                     __end_of___awdiv:	
  6467                           
  6468                           	psect	text8
  6469  1691                     __ptext8:	
  6470 ;; *************** function _pid_pwm1_idrv_run *****************
  6471 ;; Defined at:
  6472 ;;		line 321 in file "src/api/sample.c"
  6473 ;; Parameters:    Size  Location     Type
  6474 ;;		None
  6475 ;; Auto vars:     Size  Location     Type
  6476 ;;  t32             4   38[BANK0 ] long 
  6477 ;;  ei              4   34[BANK0 ] long 
  6478 ;;  ep              4   30[BANK0 ] long 
  6479 ;;  ed              4    0        long 
  6480 ;; Return value:  Size  Location     Type
  6481 ;;                  1    wreg      void 
  6482 ;; Registers used:
  6483 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6484 ;; Tracked objects:
  6485 ;;		On entry : 0/0
  6486 ;;		On exit  : 0/0
  6487 ;;		Unchanged: 0/0
  6488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6490 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6491 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6492 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6493 ;;Total ram usage:       20 bytes
  6494 ;; Hardware stack levels used:    1
  6495 ;; Hardware stack levels required when called:    3
  6496 ;; This function calls:
  6497 ;;		___aldiv
  6498 ;;		___lmul
  6499 ;;		_set_idrv_pwm1_duty
  6500 ;; This function is called by:
  6501 ;;		_main
  6502 ;; This function uses a non-reentrant model
  6503 ;;
  6504                           
  6505                           
  6506                           ;psect for function _pid_pwm1_idrv_run
  6507  1691                     _pid_pwm1_idrv_run:	
  6508                           
  6509                           ;sample.c: 324: int32_t ep,ei,ed;
  6510                           ;sample.c: 325: int32_t t32;
  6511                           ;sample.c: 326: t32=((int32_t)resRs-(int32_t)resRc);
  6512                           
  6513                           ;incstack = 0
  6514                           ; Regs used in _pid_pwm1_idrv_run: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6515  1691  0020               	movlb	0	; select bank0
  6516  1692  085F               	movf	_resRc,w
  6517  1693  00B6               	movwf	??_pid_pwm1_idrv_run
  6518  1694  0860               	movf	_resRc+1,w
  6519  1695  00B7               	movwf	??_pid_pwm1_idrv_run+1
  6520  1696  01B8               	clrf	??_pid_pwm1_idrv_run+2
  6521  1697  01B9               	clrf	??_pid_pwm1_idrv_run+3
  6522  1698  09B6               	comf	??_pid_pwm1_idrv_run,f
  6523  1699  09B7               	comf	??_pid_pwm1_idrv_run+1,f
  6524  169A  09B8               	comf	??_pid_pwm1_idrv_run+2,f
  6525  169B  09B9               	comf	??_pid_pwm1_idrv_run+3,f
  6526  169C  0AB6               	incf	??_pid_pwm1_idrv_run,f
  6527  169D  1903               	skipnz
  6528  169E  0AB7               	incf	??_pid_pwm1_idrv_run+1,f
  6529  169F  1903               	skipnz
  6530  16A0  0AB8               	incf	??_pid_pwm1_idrv_run+2,f
  6531  16A1  1903               	skipnz
  6532  16A2  0AB9               	incf	??_pid_pwm1_idrv_run+3,f
  6533  16A3  085D               	movf	_resRs,w
  6534  16A4  00BA               	movwf	??_pid_pwm1_idrv_run+4
  6535  16A5  085E               	movf	_resRs+1,w
  6536  16A6  00BB               	movwf	??_pid_pwm1_idrv_run+5
  6537  16A7  01BC               	clrf	??_pid_pwm1_idrv_run+6
  6538  16A8  01BD               	clrf	??_pid_pwm1_idrv_run+7
  6539  16A9  083A               	movf	??_pid_pwm1_idrv_run+4,w
  6540  16AA  07B6               	addwf	??_pid_pwm1_idrv_run,f
  6541  16AB  083B               	movf	??_pid_pwm1_idrv_run+5,w
  6542  16AC  3DB7               	addwfc	??_pid_pwm1_idrv_run+1,f
  6543  16AD  083C               	movf	??_pid_pwm1_idrv_run+6,w
  6544  16AE  3DB8               	addwfc	??_pid_pwm1_idrv_run+2,f
  6545  16AF  083D               	movf	??_pid_pwm1_idrv_run+7,w
  6546  16B0  3DB9               	addwfc	??_pid_pwm1_idrv_run+3,f
  6547  16B1  0839               	movf	??_pid_pwm1_idrv_run+3,w
  6548  16B2  00C9               	movwf	pid_pwm1_idrv_run@t32+3
  6549  16B3  0838               	movf	??_pid_pwm1_idrv_run+2,w
  6550  16B4  00C8               	movwf	pid_pwm1_idrv_run@t32+2
  6551  16B5  0837               	movf	??_pid_pwm1_idrv_run+1,w
  6552  16B6  00C7               	movwf	pid_pwm1_idrv_run@t32+1
  6553  16B7  0836               	movf	??_pid_pwm1_idrv_run,w
  6554  16B8  00C6               	movwf	pid_pwm1_idrv_run@t32
  6555                           
  6556                           ;sample.c: 327: t32=2000-t32;
  6557  16B9  30D0               	movlw	208
  6558  16BA  00B6               	movwf	??_pid_pwm1_idrv_run
  6559  16BB  3007               	movlw	7
  6560  16BC  00B7               	movwf	??_pid_pwm1_idrv_run+1
  6561  16BD  3000               	movlw	0
  6562  16BE  00B8               	movwf	??_pid_pwm1_idrv_run+2
  6563  16BF  3000               	movlw	0
  6564  16C0  00B9               	movwf	??_pid_pwm1_idrv_run+3
  6565  16C1  0946               	comf	pid_pwm1_idrv_run@t32,w
  6566  16C2  00BA               	movwf	??_pid_pwm1_idrv_run+4
  6567  16C3  0947               	comf	pid_pwm1_idrv_run@t32+1,w
  6568  16C4  00BB               	movwf	??_pid_pwm1_idrv_run+5
  6569  16C5  0948               	comf	pid_pwm1_idrv_run@t32+2,w
  6570  16C6  00BC               	movwf	??_pid_pwm1_idrv_run+6
  6571  16C7  0949               	comf	pid_pwm1_idrv_run@t32+3,w
  6572  16C8  00BD               	movwf	??_pid_pwm1_idrv_run+7
  6573  16C9  0ABA               	incf	??_pid_pwm1_idrv_run+4,f
  6574  16CA  1903               	skipnz
  6575  16CB  0ABB               	incf	??_pid_pwm1_idrv_run+5,f
  6576  16CC  1903               	skipnz
  6577  16CD  0ABC               	incf	??_pid_pwm1_idrv_run+6,f
  6578  16CE  1903               	skipnz
  6579  16CF  0ABD               	incf	??_pid_pwm1_idrv_run+7,f
  6580  16D0  083A               	movf	??_pid_pwm1_idrv_run+4,w
  6581  16D1  07B6               	addwf	??_pid_pwm1_idrv_run,f
  6582  16D2  083B               	movf	??_pid_pwm1_idrv_run+5,w
  6583  16D3  3DB7               	addwfc	??_pid_pwm1_idrv_run+1,f
  6584  16D4  083C               	movf	??_pid_pwm1_idrv_run+6,w
  6585  16D5  3DB8               	addwfc	??_pid_pwm1_idrv_run+2,f
  6586  16D6  083D               	movf	??_pid_pwm1_idrv_run+7,w
  6587  16D7  3DB9               	addwfc	??_pid_pwm1_idrv_run+3,f
  6588  16D8  0839               	movf	??_pid_pwm1_idrv_run+3,w
  6589  16D9  00C9               	movwf	pid_pwm1_idrv_run@t32+3
  6590  16DA  0838               	movf	??_pid_pwm1_idrv_run+2,w
  6591  16DB  00C8               	movwf	pid_pwm1_idrv_run@t32+2
  6592  16DC  0837               	movf	??_pid_pwm1_idrv_run+1,w
  6593  16DD  00C7               	movwf	pid_pwm1_idrv_run@t32+1
  6594  16DE  0836               	movf	??_pid_pwm1_idrv_run,w
  6595  16DF  00C6               	movwf	pid_pwm1_idrv_run@t32
  6596                           
  6597                           ;sample.c: 329: err[2]=err[1];
  6598  16E0  3004               	movlw	4
  6599  16E1  3EA0               	addlw	(low (_err| 0))& (0+255)
  6600  16E2  0086               	movwf	6
  6601  16E3  0187               	clrf	7
  6602  16E4  3F40               	moviw [0]fsr1
  6603  16E5  0021               	movlb	1	; select bank1
  6604  16E6  00A8               	movwf	(_err^(0+128)+8)
  6605  16E7  3F41               	moviw [1]fsr1
  6606  16E8  00A9               	movwf	((_err+1)^(0+128)+8)
  6607  16E9  3F42               	moviw [2]fsr1
  6608  16EA  00AA               	movwf	((_err+2)^(0+128)+8)
  6609  16EB  3F43               	moviw [3]fsr1
  6610  16EC  00AB               	movwf	((_err+3)^(0+128)+8)
  6611                           
  6612                           ;sample.c: 330: err[1]=err[0];
  6613  16ED  0823               	movf	(_err+3)^(0+128),w
  6614  16EE  00A7               	movwf	((_err+3)^(0+128)+4)
  6615  16EF  0822               	movf	(_err+2)^(0+128),w
  6616  16F0  00A6               	movwf	((_err+2)^(0+128)+4)
  6617  16F1  0821               	movf	(_err+1)^(0+128),w
  6618  16F2  00A5               	movwf	((_err+1)^(0+128)+4)
  6619  16F3  0820               	movf	_err^(0+128),w
  6620  16F4  00A4               	movwf	(_err^(0+128)+4)
  6621                           
  6622                           ;sample.c: 331: err[0]=t32;
  6623  16F5  0020               	movlb	0	; select bank0
  6624  16F6  0849               	movf	pid_pwm1_idrv_run@t32+3,w
  6625  16F7  0021               	movlb	1	; select bank1
  6626  16F8  00A3               	movwf	(_err+3)^(0+128)
  6627  16F9  0020               	movlb	0	; select bank0
  6628  16FA  0848               	movf	pid_pwm1_idrv_run@t32+2,w
  6629  16FB  0021               	movlb	1	; select bank1
  6630  16FC  00A2               	movwf	(_err+2)^(0+128)
  6631  16FD  0020               	movlb	0	; select bank0
  6632  16FE  0847               	movf	pid_pwm1_idrv_run@t32+1,w
  6633  16FF  0021               	movlb	1	; select bank1
  6634  1700  00A1               	movwf	(_err+1)^(0+128)
  6635  1701  0020               	movlb	0	; select bank0
  6636  1702  0846               	movf	pid_pwm1_idrv_run@t32,w
  6637  1703  0021               	movlb	1	; select bank1
  6638  1704  00A0               	movwf	_err^(0+128)
  6639                           
  6640                           ;sample.c: 334: ep=(err[0]-err[1])*PidKp;
  6641  1705  0820               	movf	_err^(0+128),w
  6642  1706  0020               	movlb	0	; select bank0
  6643  1707  00B6               	movwf	??_pid_pwm1_idrv_run
  6644  1708  0021               	movlb	1	; select bank1
  6645  1709  0821               	movf	(_err+1)^(0+128),w
  6646  170A  0020               	movlb	0	; select bank0
  6647  170B  00B7               	movwf	??_pid_pwm1_idrv_run+1
  6648  170C  0021               	movlb	1	; select bank1
  6649  170D  0822               	movf	(_err+2)^(0+128),w
  6650  170E  0020               	movlb	0	; select bank0
  6651  170F  00B8               	movwf	??_pid_pwm1_idrv_run+2
  6652  1710  0021               	movlb	1	; select bank1
  6653  1711  0823               	movf	(_err+3)^(0+128),w
  6654  1712  0020               	movlb	0	; select bank0
  6655  1713  00B9               	movwf	??_pid_pwm1_idrv_run+3
  6656  1714  0021               	movlb	1	; select bank1
  6657  1715  0924               	comf	(_err^(0+128)+4),w
  6658  1716  0020               	movlb	0	; select bank0
  6659  1717  00BA               	movwf	??_pid_pwm1_idrv_run+4
  6660  1718  0021               	movlb	1	; select bank1
  6661  1719  0925               	comf	((_err+1)^(0+128)+4),w
  6662  171A  0020               	movlb	0	; select bank0
  6663  171B  00BB               	movwf	??_pid_pwm1_idrv_run+5
  6664  171C  0021               	movlb	1	; select bank1
  6665  171D  0926               	comf	((_err+2)^(0+128)+4),w
  6666  171E  0020               	movlb	0	; select bank0
  6667  171F  00BC               	movwf	??_pid_pwm1_idrv_run+6
  6668  1720  0021               	movlb	1	; select bank1
  6669  1721  0927               	comf	((_err+3)^(0+128)+4),w
  6670  1722  0020               	movlb	0	; select bank0
  6671  1723  00BD               	movwf	??_pid_pwm1_idrv_run+7
  6672  1724  0ABA               	incf	??_pid_pwm1_idrv_run+4,f
  6673  1725  1903               	skipnz
  6674  1726  0ABB               	incf	??_pid_pwm1_idrv_run+5,f
  6675  1727  1903               	skipnz
  6676  1728  0ABC               	incf	??_pid_pwm1_idrv_run+6,f
  6677  1729  1903               	skipnz
  6678  172A  0ABD               	incf	??_pid_pwm1_idrv_run+7,f
  6679  172B  083A               	movf	??_pid_pwm1_idrv_run+4,w
  6680  172C  07B6               	addwf	??_pid_pwm1_idrv_run,f
  6681  172D  083B               	movf	??_pid_pwm1_idrv_run+5,w
  6682  172E  3DB7               	addwfc	??_pid_pwm1_idrv_run+1,f
  6683  172F  083C               	movf	??_pid_pwm1_idrv_run+6,w
  6684  1730  3DB8               	addwfc	??_pid_pwm1_idrv_run+2,f
  6685  1731  083D               	movf	??_pid_pwm1_idrv_run+7,w
  6686  1732  3DB9               	addwfc	??_pid_pwm1_idrv_run+3,f
  6687  1733  0839               	movf	??_pid_pwm1_idrv_run+3,w
  6688  1734  00A3               	movwf	___lmul@multiplier+3
  6689  1735  0838               	movf	??_pid_pwm1_idrv_run+2,w
  6690  1736  00A2               	movwf	___lmul@multiplier+2
  6691  1737  0837               	movf	??_pid_pwm1_idrv_run+1,w
  6692  1738  00A1               	movwf	___lmul@multiplier+1
  6693  1739  0836               	movf	??_pid_pwm1_idrv_run,w
  6694  173A  00A0               	movwf	___lmul@multiplier
  6695  173B  0852               	movf	_PidKp,w
  6696  173C  00A4               	movwf	___lmul@multiplicand
  6697  173D  0853               	movf	_PidKp+1,w
  6698  173E  00A5               	movwf	___lmul@multiplicand+1
  6699  173F  01A6               	clrf	___lmul@multiplicand+2
  6700  1740  01A7               	clrf	___lmul@multiplicand+3
  6701  1741  319B  2330  3196   	fcall	___lmul
  6702  1744  0020               	movlb	0	; select bank0
  6703  1745  0823               	movf	?___lmul+3,w
  6704  1746  00C1               	movwf	pid_pwm1_idrv_run@ep+3
  6705  1747  0822               	movf	?___lmul+2,w
  6706  1748  00C0               	movwf	pid_pwm1_idrv_run@ep+2
  6707  1749  0821               	movf	?___lmul+1,w
  6708  174A  00BF               	movwf	pid_pwm1_idrv_run@ep+1
  6709  174B  0820               	movf	?___lmul,w
  6710  174C  00BE               	movwf	pid_pwm1_idrv_run@ep
  6711                           
  6712                           ;sample.c: 335: ei=PidKp*err[0]/PidTi;
  6713  174D  0021               	movlb	1	; select bank1
  6714  174E  084E               	movf	_PidTi^(0+128),w
  6715  174F  0020               	movlb	0	; select bank0
  6716  1750  00A8               	movwf	___aldiv@divisor
  6717  1751  0021               	movlb	1	; select bank1
  6718  1752  084F               	movf	(_PidTi+1)^(0+128),w
  6719  1753  0020               	movlb	0	; select bank0
  6720  1754  00A9               	movwf	___aldiv@divisor+1
  6721  1755  01AA               	clrf	___aldiv@divisor+2
  6722  1756  01AB               	clrf	___aldiv@divisor+3
  6723  1757  0852               	movf	_PidKp,w
  6724  1758  00A0               	movwf	___lmul@multiplier
  6725  1759  0853               	movf	_PidKp+1,w
  6726  175A  00A1               	movwf	___lmul@multiplier+1
  6727  175B  01A2               	clrf	___lmul@multiplier+2
  6728  175C  01A3               	clrf	___lmul@multiplier+3
  6729  175D  0021               	movlb	1	; select bank1
  6730  175E  0823               	movf	(_err+3)^(0+128),w
  6731  175F  0020               	movlb	0	; select bank0
  6732  1760  00A7               	movwf	___lmul@multiplicand+3
  6733  1761  0021               	movlb	1	; select bank1
  6734  1762  0822               	movf	(_err+2)^(0+128),w
  6735  1763  0020               	movlb	0	; select bank0
  6736  1764  00A6               	movwf	___lmul@multiplicand+2
  6737  1765  0021               	movlb	1	; select bank1
  6738  1766  0821               	movf	(_err+1)^(0+128),w
  6739  1767  0020               	movlb	0	; select bank0
  6740  1768  00A5               	movwf	___lmul@multiplicand+1
  6741  1769  0021               	movlb	1	; select bank1
  6742  176A  0820               	movf	_err^(0+128),w
  6743  176B  0020               	movlb	0	; select bank0
  6744  176C  00A4               	movwf	___lmul@multiplicand
  6745  176D  319B  2330  3196   	fcall	___lmul
  6746  1770  0020               	movlb	0	; select bank0
  6747  1771  0823               	movf	?___lmul+3,w
  6748  1772  00AF               	movwf	___aldiv@dividend+3
  6749  1773  0822               	movf	?___lmul+2,w
  6750  1774  00AE               	movwf	___aldiv@dividend+2
  6751  1775  0821               	movf	?___lmul+1,w
  6752  1776  00AD               	movwf	___aldiv@dividend+1
  6753  1777  0820               	movf	?___lmul,w
  6754  1778  00AC               	movwf	___aldiv@dividend
  6755  1779  3190  202D  3196   	fcall	___aldiv
  6756  177C  0020               	movlb	0	; select bank0
  6757  177D  082B               	movf	?___aldiv+3,w
  6758  177E  00C5               	movwf	pid_pwm1_idrv_run@ei+3
  6759  177F  082A               	movf	?___aldiv+2,w
  6760  1780  00C4               	movwf	pid_pwm1_idrv_run@ei+2
  6761  1781  0829               	movf	?___aldiv+1,w
  6762  1782  00C3               	movwf	pid_pwm1_idrv_run@ei+1
  6763  1783  0828               	movf	?___aldiv,w
  6764  1784  00C2               	movwf	pid_pwm1_idrv_run@ei
  6765                           
  6766                           ;sample.c: 338: t32=ep+ei;
  6767  1785  083E               	movf	pid_pwm1_idrv_run@ep,w
  6768  1786  0742               	addwf	pid_pwm1_idrv_run@ei,w
  6769  1787  00B6               	movwf	??_pid_pwm1_idrv_run
  6770  1788  083F               	movf	pid_pwm1_idrv_run@ep+1,w
  6771  1789  3D43               	addwfc	pid_pwm1_idrv_run@ei+1,w
  6772  178A  00B7               	movwf	??_pid_pwm1_idrv_run+1
  6773  178B  0840               	movf	pid_pwm1_idrv_run@ep+2,w
  6774  178C  3D44               	addwfc	pid_pwm1_idrv_run@ei+2,w
  6775  178D  00B8               	movwf	??_pid_pwm1_idrv_run+2
  6776  178E  0841               	movf	pid_pwm1_idrv_run@ep+3,w
  6777  178F  3D45               	addwfc	pid_pwm1_idrv_run@ei+3,w
  6778  1790  00B9               	movwf	??_pid_pwm1_idrv_run+3
  6779  1791  0839               	movf	??_pid_pwm1_idrv_run+3,w
  6780  1792  00C9               	movwf	pid_pwm1_idrv_run@t32+3
  6781  1793  0838               	movf	??_pid_pwm1_idrv_run+2,w
  6782  1794  00C8               	movwf	pid_pwm1_idrv_run@t32+2
  6783  1795  0837               	movf	??_pid_pwm1_idrv_run+1,w
  6784  1796  00C7               	movwf	pid_pwm1_idrv_run@t32+1
  6785  1797  0836               	movf	??_pid_pwm1_idrv_run,w
  6786  1798  00C6               	movwf	pid_pwm1_idrv_run@t32
  6787                           
  6788                           ;sample.c: 339: t32/=10000;
  6789  1799  3000               	movlw	0
  6790  179A  00AB               	movwf	___aldiv@divisor+3
  6791  179B  3000               	movlw	0
  6792  179C  00AA               	movwf	___aldiv@divisor+2
  6793  179D  3027               	movlw	39
  6794  179E  00A9               	movwf	___aldiv@divisor+1
  6795  179F  3010               	movlw	16
  6796  17A0  00A8               	movwf	___aldiv@divisor
  6797  17A1  0849               	movf	pid_pwm1_idrv_run@t32+3,w
  6798  17A2  00AF               	movwf	___aldiv@dividend+3
  6799  17A3  0848               	movf	pid_pwm1_idrv_run@t32+2,w
  6800  17A4  00AE               	movwf	___aldiv@dividend+2
  6801  17A5  0847               	movf	pid_pwm1_idrv_run@t32+1,w
  6802  17A6  00AD               	movwf	___aldiv@dividend+1
  6803  17A7  0846               	movf	pid_pwm1_idrv_run@t32,w
  6804  17A8  00AC               	movwf	___aldiv@dividend
  6805  17A9  3190  202D  3196   	fcall	___aldiv
  6806  17AC  0020               	movlb	0	; select bank0
  6807  17AD  082B               	movf	?___aldiv+3,w
  6808  17AE  00C9               	movwf	pid_pwm1_idrv_run@t32+3
  6809  17AF  082A               	movf	?___aldiv+2,w
  6810  17B0  00C8               	movwf	pid_pwm1_idrv_run@t32+2
  6811  17B1  0829               	movf	?___aldiv+1,w
  6812  17B2  00C7               	movwf	pid_pwm1_idrv_run@t32+1
  6813  17B3  0828               	movf	?___aldiv,w
  6814  17B4  00C6               	movwf	pid_pwm1_idrv_run@t32
  6815                           
  6816                           ;sample.c: 340: t32+=pidU;
  6817  17B5  0021               	movlb	1	; select bank1
  6818  17B6  0862               	movf	_pidU^(0+128),w
  6819  17B7  0020               	movlb	0	; select bank0
  6820  17B8  07C6               	addwf	pid_pwm1_idrv_run@t32,f
  6821  17B9  0021               	movlb	1	; select bank1
  6822  17BA  0863               	movf	(_pidU+1)^(0+128),w
  6823  17BB  0020               	movlb	0	; select bank0
  6824  17BC  3DC7               	addwfc	pid_pwm1_idrv_run@t32+1,f
  6825  17BD  3000               	movlw	0
  6826  17BE  3DC8               	addwfc	pid_pwm1_idrv_run@t32+2,f
  6827  17BF  3DC9               	addwfc	pid_pwm1_idrv_run@t32+3,f
  6828                           
  6829                           ;sample.c: 342: __nop();
  6830  17C0  0000               	nop
  6831                           
  6832                           ;sample.c: 343: if(t32>1200)t32=1200;
  6833  17C1  0020               	movlb	0	; select bank0
  6834  17C2  1BC9               	btfsc	pid_pwm1_idrv_run@t32+3,7
  6835  17C3  2FD8               	goto	l5443
  6836  17C4  0849               	movf	pid_pwm1_idrv_run@t32+3,w
  6837  17C5  1D03               	btfss	3,2
  6838  17C6  2FD0               	goto	l5441
  6839  17C7  0848               	movf	pid_pwm1_idrv_run@t32+2,w
  6840  17C8  1D03               	btfss	3,2
  6841  17C9  2FD0               	goto	l5441
  6842  17CA  30B1               	movlw	177
  6843  17CB  0246               	subwf	pid_pwm1_idrv_run@t32,w
  6844  17CC  3004               	movlw	4
  6845  17CD  3B47               	subwfb	pid_pwm1_idrv_run@t32+1,w
  6846  17CE  1C03               	btfss	3,0
  6847  17CF  2FD8               	goto	l5443
  6848  17D0                     l5441:	
  6849  17D0  3000               	movlw	0
  6850  17D1  00C9               	movwf	pid_pwm1_idrv_run@t32+3
  6851  17D2  3000               	movlw	0
  6852  17D3  00C8               	movwf	pid_pwm1_idrv_run@t32+2
  6853  17D4  3004               	movlw	4
  6854  17D5  00C7               	movwf	pid_pwm1_idrv_run@t32+1
  6855  17D6  30B0               	movlw	176
  6856  17D7  00C6               	movwf	pid_pwm1_idrv_run@t32
  6857  17D8                     l5443:	
  6858                           
  6859                           ;sample.c: 344: if(t32<5)t32=5;
  6860  17D8  1BC9               	btfsc	pid_pwm1_idrv_run@t32+3,7
  6861  17D9  2FE7               	goto	l5445
  6862  17DA  0849               	movf	pid_pwm1_idrv_run@t32+3,w
  6863  17DB  1D03               	btfss	3,2
  6864  17DC  2FEF               	goto	l675
  6865  17DD  0848               	movf	pid_pwm1_idrv_run@t32+2,w
  6866  17DE  1D03               	btfss	3,2
  6867  17DF  2FEF               	goto	l675
  6868  17E0  0847               	movf	pid_pwm1_idrv_run@t32+1,w
  6869  17E1  1D03               	btfss	3,2
  6870  17E2  2FEF               	goto	l675
  6871  17E3  3005               	movlw	5
  6872  17E4  0246               	subwf	pid_pwm1_idrv_run@t32,w
  6873  17E5  1803               	btfsc	3,0
  6874  17E6  2FEF               	goto	l675
  6875  17E7                     l5445:	
  6876  17E7  3000               	movlw	0
  6877  17E8  00C9               	movwf	pid_pwm1_idrv_run@t32+3
  6878  17E9  3000               	movlw	0
  6879  17EA  00C8               	movwf	pid_pwm1_idrv_run@t32+2
  6880  17EB  3000               	movlw	0
  6881  17EC  00C7               	movwf	pid_pwm1_idrv_run@t32+1
  6882  17ED  3005               	movlw	5
  6883  17EE  00C6               	movwf	pid_pwm1_idrv_run@t32
  6884  17EF                     l675:	
  6885                           
  6886                           ;sample.c: 345: pidU=(uint16_t)t32;
  6887  17EF  0847               	movf	pid_pwm1_idrv_run@t32+1,w
  6888  17F0  0021               	movlb	1	; select bank1
  6889  17F1  00E3               	movwf	(_pidU+1)^(0+128)
  6890  17F2  0020               	movlb	0	; select bank0
  6891  17F3  0846               	movf	pid_pwm1_idrv_run@t32,w
  6892  17F4  0021               	movlb	1	; select bank1
  6893  17F5  00E2               	movwf	_pidU^(0+128)
  6894                           
  6895                           ;sample.c: 347: set_idrv_pwm1_duty(pidU);
  6896  17F6  0863               	movf	(_pidU+1)^(0+128),w
  6897  17F7  0020               	movlb	0	; select bank0
  6898  17F8  00A3               	movwf	set_idrv_pwm1_duty@duty+1
  6899  17F9  0021               	movlb	1	; select bank1
  6900  17FA  0862               	movf	_pidU^(0+128),w
  6901  17FB  0020               	movlb	0	; select bank0
  6902  17FC  00A2               	movwf	set_idrv_pwm1_duty@duty
  6903  17FD  319B  230C         	fcall	_set_idrv_pwm1_duty
  6904  17FF  0008               	return
  6905  1800                     __end_of_pid_pwm1_idrv_run:	
  6906                           
  6907                           	psect	text9
  6908  0B69                     __ptext9:	
  6909 ;; *************** function _pid_pwm1_idrv_b_b *****************
  6910 ;; Defined at:
  6911 ;;		line 265 in file "src/api/sample.c"
  6912 ;; Parameters:    Size  Location     Type
  6913 ;;		None
  6914 ;; Auto vars:     Size  Location     Type
  6915 ;;  t32             4   30[BANK0 ] long 
  6916 ;; Return value:  Size  Location     Type
  6917 ;;                  1    wreg      void 
  6918 ;; Registers used:
  6919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6920 ;; Tracked objects:
  6921 ;;		On entry : 0/0
  6922 ;;		On exit  : 0/0
  6923 ;;		Unchanged: 0/0
  6924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6926 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6927 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6928 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6929 ;;Total ram usage:       12 bytes
  6930 ;; Hardware stack levels used:    1
  6931 ;; Hardware stack levels required when called:    3
  6932 ;; This function calls:
  6933 ;;		___aldiv
  6934 ;;		___lmul
  6935 ;;		___lwdiv
  6936 ;;		___wmul
  6937 ;;		_set_idrv_pwm1_duty
  6938 ;; This function is called by:
  6939 ;;		_main
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           
  6943                           
  6944                           ;psect for function _pid_pwm1_idrv_b_b
  6945  0B69                     _pid_pwm1_idrv_b_b:	
  6946                           
  6947                           ;sample.c: 267: int32_t t32;
  6948                           ;sample.c: 268: t32=(resRs-resRc);
  6949                           
  6950                           ;incstack = 0
  6951                           ; Regs used in _pid_pwm1_idrv_b_b: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6952  0B69  0020               	movlb	0	; select bank0
  6953  0B6A  095F               	comf	_resRc,w
  6954  0B6B  00B6               	movwf	??_pid_pwm1_idrv_b_b
  6955  0B6C  0960               	comf	_resRc+1,w
  6956  0B6D  00B7               	movwf	??_pid_pwm1_idrv_b_b+1
  6957  0B6E  0AB6               	incf	??_pid_pwm1_idrv_b_b,f
  6958  0B6F  1903               	skipnz
  6959  0B70  0AB7               	incf	??_pid_pwm1_idrv_b_b+1,f
  6960  0B71  085D               	movf	_resRs,w
  6961  0B72  0736               	addwf	??_pid_pwm1_idrv_b_b,w
  6962  0B73  00BE               	movwf	pid_pwm1_idrv_b_b@t32
  6963  0B74  085E               	movf	_resRs+1,w
  6964  0B75  3D37               	addwfc	??_pid_pwm1_idrv_b_b+1,w
  6965  0B76  00BF               	movwf	pid_pwm1_idrv_b_b@t32+1
  6966  0B77  01C0               	clrf	pid_pwm1_idrv_b_b@t32+2
  6967  0B78  01C1               	clrf	pid_pwm1_idrv_b_b@t32+3
  6968                           
  6969                           ;sample.c: 269: switch(pidBbSm){
  6970  0B79  2D37               	goto	l5405
  6971  0B7A                     l5357:	
  6972                           ;sample.c: 271: case 0:
  6973                           
  6974                           ;sample.c: 270: case 5:return;
  6975                           
  6976                           
  6977                           ;sample.c: 272: case 1:
  6978                           ;sample.c: 273: pidTestNum=0;
  6979  0B7A  01D8               	clrf	_pidTestNum
  6980  0B7B  2BB5               	goto	l5379
  6981  0B7C                     l5363:	
  6982                           ;sample.c: 277: case 2:
  6983                           
  6984                           ;sample.c: 276: break;
  6985                           
  6986                           ;sample.c: 275: pidBbSm=2;
  6987                           
  6988                           ;sample.c: 274: set_idrv_pwm1_duty(1200);
  6989                           
  6990                           
  6991                           ;sample.c: 278: if(t32>4500){
  6992  0B7C  1BC1               	btfsc	pid_pwm1_idrv_b_b@t32+3,7
  6993  0B7D  2D41               	goto	l5407
  6994  0B7E  0841               	movf	pid_pwm1_idrv_b_b@t32+3,w
  6995  0B7F  1D03               	btfss	3,2
  6996  0B80  2B8A               	goto	l5365
  6997  0B81  0840               	movf	pid_pwm1_idrv_b_b@t32+2,w
  6998  0B82  1D03               	btfss	3,2
  6999  0B83  2B8A               	goto	l5365
  7000  0B84  3095               	movlw	149
  7001  0B85  023E               	subwf	pid_pwm1_idrv_b_b@t32,w
  7002  0B86  3011               	movlw	17
  7003  0B87  3B3F               	subwfb	pid_pwm1_idrv_b_b@t32+1,w
  7004  0B88  1C03               	btfss	3,0
  7005  0B89  2D41               	goto	l5407
  7006  0B8A                     l5365:	
  7007                           
  7008                           ;sample.c: 279: set_idrv_pwm1_duty(5);
  7009  0B8A  3005               	movlw	5
  7010  0B8B  00A2               	movwf	set_idrv_pwm1_duty@duty
  7011  0B8C  3000               	movlw	0
  7012  0B8D  00A3               	movwf	set_idrv_pwm1_duty@duty+1
  7013  0B8E  319B  230C  318B   	fcall	_set_idrv_pwm1_duty
  7014                           
  7015                           ;sample.c: 280: pidBbSm=3;
  7016  0B91  3003               	movlw	3
  7017  0B92  2D32               	goto	L5
  7018  0B93                     l5369:	
  7019                           ;sample.c: 284: case 3:
  7020                           
  7021                           ;sample.c: 282: }
  7022                           ;sample.c: 283: break;
  7023                           
  7024                           ;sample.c: 281: break;
  7025                           
  7026                           
  7027                           ;sample.c: 285: if(t32<1500){
  7028  0B93  1BC1               	btfsc	pid_pwm1_idrv_b_b@t32+3,7
  7029  0B94  2BA1               	goto	l5371
  7030  0B95  0841               	movf	pid_pwm1_idrv_b_b@t32+3,w
  7031  0B96  1D03               	btfss	3,2
  7032  0B97  2D41               	goto	l5407
  7033  0B98  0840               	movf	pid_pwm1_idrv_b_b@t32+2,w
  7034  0B99  1D03               	btfss	3,2
  7035  0B9A  2D41               	goto	l5407
  7036  0B9B  30DC               	movlw	220
  7037  0B9C  023E               	subwf	pid_pwm1_idrv_b_b@t32,w
  7038  0B9D  3005               	movlw	5
  7039  0B9E  3B3F               	subwfb	pid_pwm1_idrv_b_b@t32+1,w
  7040  0B9F  1803               	btfsc	3,0
  7041  0BA0  2D41               	goto	l5407
  7042  0BA1                     l5371:	
  7043                           
  7044                           ;sample.c: 286: bbt0=bbt1;
  7045  0BA1  0021               	movlb	1	; select bank1
  7046  0BA2  0847               	movf	(_bbt1+1)^(0+128),w
  7047  0BA3  00C9               	movwf	(_bbt0+1)^(0+128)
  7048  0BA4  0846               	movf	_bbt1^(0+128),w
  7049  0BA5  00C8               	movwf	_bbt0^(0+128)
  7050                           
  7051                           ;sample.c: 287: bbt1=globalTicker;
  7052  0BA6  0857               	movf	(_globalTicker+1)^(0+128),w	;volatile
  7053  0BA7  00C7               	movwf	(_bbt1+1)^(0+128)
  7054  0BA8  0856               	movf	_globalTicker^(0+128),w	;volatile
  7055  0BA9  00C6               	movwf	_bbt1^(0+128)
  7056                           
  7057                           ;sample.c: 288: pidTestNum++;
  7058  0BAA  3001               	movlw	1
  7059  0BAB  0020               	movlb	0	; select bank0
  7060  0BAC  00B6               	movwf	??_pid_pwm1_idrv_b_b
  7061  0BAD  0836               	movf	??_pid_pwm1_idrv_b_b,w
  7062  0BAE  07D8               	addwf	_pidTestNum,f
  7063                           
  7064                           ;sample.c: 289: if(pidTestNum>4){
  7065  0BAF  3005               	movlw	5
  7066  0BB0  0258               	subwf	_pidTestNum,w
  7067  0BB1  1C03               	skipc
  7068  0BB2  2BB5               	goto	l5379
  7069                           
  7070                           ;sample.c: 290: pidBbSm=4;
  7071  0BB3  3004               	movlw	4
  7072  0BB4  2D33               	goto	L4
  7073  0BB5                     l5379:	
  7074                           ;sample.c: 291: break;
  7075                           
  7076                           
  7077                           ;sample.c: 292: }
  7078                           ;sample.c: 293: set_idrv_pwm1_duty(1200);
  7079  0BB5  30B0               	movlw	176
  7080  0BB6  00A2               	movwf	set_idrv_pwm1_duty@duty
  7081  0BB7  3004               	movlw	4
  7082  0BB8  00A3               	movwf	set_idrv_pwm1_duty@duty+1
  7083  0BB9  319B  230C  318B   	fcall	_set_idrv_pwm1_duty
  7084                           
  7085                           ;sample.c: 294: pidBbSm=2;
  7086  0BBC  3002               	movlw	2
  7087  0BBD  2D32               	goto	L5
  7088  0BBE                     l5383:	
  7089                           ;sample.c: 298: case 4:
  7090                           
  7091                           ;sample.c: 296: }
  7092                           ;sample.c: 297: break;
  7093                           
  7094                           ;sample.c: 295: break;
  7095                           
  7096                           
  7097                           ;sample.c: 299: bbtu=bbt1-bbt0;
  7098  0BBE  0021               	movlb	1	; select bank1
  7099  0BBF  0948               	comf	_bbt0^(0+128),w
  7100  0BC0  0020               	movlb	0	; select bank0
  7101  0BC1  00B6               	movwf	??_pid_pwm1_idrv_b_b
  7102  0BC2  0021               	movlb	1	; select bank1
  7103  0BC3  0949               	comf	(_bbt0+1)^(0+128),w
  7104  0BC4  0020               	movlb	0	; select bank0
  7105  0BC5  00B7               	movwf	??_pid_pwm1_idrv_b_b+1
  7106  0BC6  0AB6               	incf	??_pid_pwm1_idrv_b_b,f
  7107  0BC7  1903               	skipnz
  7108  0BC8  0AB7               	incf	??_pid_pwm1_idrv_b_b+1,f
  7109  0BC9  0021               	movlb	1	; select bank1
  7110  0BCA  0846               	movf	_bbt1^(0+128),w
  7111  0BCB  0020               	movlb	0	; select bank0
  7112  0BCC  0736               	addwf	??_pid_pwm1_idrv_b_b,w
  7113  0BCD  00CC               	movwf	_bbtu
  7114  0BCE  0021               	movlb	1	; select bank1
  7115  0BCF  0847               	movf	(_bbt1+1)^(0+128),w
  7116  0BD0  0020               	movlb	0	; select bank0
  7117  0BD1  3D37               	addwfc	??_pid_pwm1_idrv_b_b+1,w
  7118  0BD2  00CD               	movwf	_bbtu+1
  7119                           
  7120                           ;sample.c: 300: bbtu=bbtu/5;
  7121  0BD3  3005               	movlw	5
  7122  0BD4  00A2               	movwf	___lwdiv@divisor
  7123  0BD5  3000               	movlw	0
  7124  0BD6  00A3               	movwf	___lwdiv@divisor+1
  7125  0BD7  084D               	movf	_bbtu+1,w
  7126  0BD8  00A5               	movwf	___lwdiv@dividend+1
  7127  0BD9  084C               	movf	_bbtu,w
  7128  0BDA  00A4               	movwf	___lwdiv@dividend
  7129  0BDB  319B  2391  318B   	fcall	___lwdiv
  7130  0BDE  0020               	movlb	0	; select bank0
  7131  0BDF  0823               	movf	?___lwdiv+1,w
  7132  0BE0  00CD               	movwf	_bbtu+1
  7133  0BE1  0822               	movf	?___lwdiv,w
  7134  0BE2  00CC               	movwf	_bbtu
  7135                           
  7136                           ;sample.c: 301: bbta=(bbmax-bbmin)/2;
  7137  0BE3  3000               	movlw	0
  7138  0BE4  00AB               	movwf	___aldiv@divisor+3
  7139  0BE5  3000               	movlw	0
  7140  0BE6  00AA               	movwf	___aldiv@divisor+2
  7141  0BE7  3000               	movlw	0
  7142  0BE8  00A9               	movwf	___aldiv@divisor+1
  7143  0BE9  3002               	movlw	2
  7144  0BEA  00A8               	movwf	___aldiv@divisor
  7145  0BEB  0021               	movlb	1	; select bank1
  7146  0BEC  085E               	movf	_bbmax^(0+128),w
  7147  0BED  0020               	movlb	0	; select bank0
  7148  0BEE  00B6               	movwf	??_pid_pwm1_idrv_b_b
  7149  0BEF  0021               	movlb	1	; select bank1
  7150  0BF0  085F               	movf	(_bbmax+1)^(0+128),w
  7151  0BF1  0020               	movlb	0	; select bank0
  7152  0BF2  00B7               	movwf	??_pid_pwm1_idrv_b_b+1
  7153  0BF3  0021               	movlb	1	; select bank1
  7154  0BF4  0860               	movf	(_bbmax+2)^(0+128),w
  7155  0BF5  0020               	movlb	0	; select bank0
  7156  0BF6  00B8               	movwf	??_pid_pwm1_idrv_b_b+2
  7157  0BF7  0021               	movlb	1	; select bank1
  7158  0BF8  0861               	movf	(_bbmax+3)^(0+128),w
  7159  0BF9  0020               	movlb	0	; select bank0
  7160  0BFA  00B9               	movwf	??_pid_pwm1_idrv_b_b+3
  7161  0BFB  0021               	movlb	1	; select bank1
  7162  0BFC  095A               	comf	_bbmin^(0+128),w
  7163  0BFD  0020               	movlb	0	; select bank0
  7164  0BFE  00BA               	movwf	??_pid_pwm1_idrv_b_b+4
  7165  0BFF  0021               	movlb	1	; select bank1
  7166  0C00  095B               	comf	(_bbmin+1)^(0+128),w
  7167  0C01  0020               	movlb	0	; select bank0
  7168  0C02  00BB               	movwf	??_pid_pwm1_idrv_b_b+5
  7169  0C03  0021               	movlb	1	; select bank1
  7170  0C04  095C               	comf	(_bbmin+2)^(0+128),w
  7171  0C05  0020               	movlb	0	; select bank0
  7172  0C06  00BC               	movwf	??_pid_pwm1_idrv_b_b+6
  7173  0C07  0021               	movlb	1	; select bank1
  7174  0C08  095D               	comf	(_bbmin+3)^(0+128),w
  7175  0C09  0020               	movlb	0	; select bank0
  7176  0C0A  00BD               	movwf	??_pid_pwm1_idrv_b_b+7
  7177  0C0B  0ABA               	incf	??_pid_pwm1_idrv_b_b+4,f
  7178  0C0C  1903               	skipnz
  7179  0C0D  0ABB               	incf	??_pid_pwm1_idrv_b_b+5,f
  7180  0C0E  1903               	skipnz
  7181  0C0F  0ABC               	incf	??_pid_pwm1_idrv_b_b+6,f
  7182  0C10  1903               	skipnz
  7183  0C11  0ABD               	incf	??_pid_pwm1_idrv_b_b+7,f
  7184  0C12  083A               	movf	??_pid_pwm1_idrv_b_b+4,w
  7185  0C13  07B6               	addwf	??_pid_pwm1_idrv_b_b,f
  7186  0C14  083B               	movf	??_pid_pwm1_idrv_b_b+5,w
  7187  0C15  3DB7               	addwfc	??_pid_pwm1_idrv_b_b+1,f
  7188  0C16  083C               	movf	??_pid_pwm1_idrv_b_b+6,w
  7189  0C17  3DB8               	addwfc	??_pid_pwm1_idrv_b_b+2,f
  7190  0C18  083D               	movf	??_pid_pwm1_idrv_b_b+7,w
  7191  0C19  3DB9               	addwfc	??_pid_pwm1_idrv_b_b+3,f
  7192  0C1A  0839               	movf	??_pid_pwm1_idrv_b_b+3,w
  7193  0C1B  00AF               	movwf	___aldiv@dividend+3
  7194  0C1C  0838               	movf	??_pid_pwm1_idrv_b_b+2,w
  7195  0C1D  00AE               	movwf	___aldiv@dividend+2
  7196  0C1E  0837               	movf	??_pid_pwm1_idrv_b_b+1,w
  7197  0C1F  00AD               	movwf	___aldiv@dividend+1
  7198  0C20  0836               	movf	??_pid_pwm1_idrv_b_b,w
  7199  0C21  00AC               	movwf	___aldiv@dividend
  7200  0C22  3190  202D  318B   	fcall	___aldiv
  7201  0C25  0020               	movlb	0	; select bank0
  7202  0C26  082B               	movf	?___aldiv+3,w
  7203  0C27  0021               	movlb	1	; select bank1
  7204  0C28  00C3               	movwf	(_bbta+3)^(0+128)
  7205  0C29  0020               	movlb	0	; select bank0
  7206  0C2A  082A               	movf	?___aldiv+2,w
  7207  0C2B  0021               	movlb	1	; select bank1
  7208  0C2C  00C2               	movwf	(_bbta+2)^(0+128)
  7209  0C2D  0020               	movlb	0	; select bank0
  7210  0C2E  0829               	movf	?___aldiv+1,w
  7211  0C2F  0021               	movlb	1	; select bank1
  7212  0C30  00C1               	movwf	(_bbta+1)^(0+128)
  7213  0C31  0020               	movlb	0	; select bank0
  7214  0C32  0828               	movf	?___aldiv,w
  7215  0C33  0021               	movlb	1	; select bank1
  7216  0C34  00C0               	movwf	_bbta^(0+128)
  7217                           
  7218                           ;sample.c: 302: bbu=(1200-5)/2;
  7219  0C35  3000               	movlw	0
  7220  0C36  00BF               	movwf	(_bbu+3)^(0+128)
  7221  0C37  3000               	movlw	0
  7222  0C38  00BE               	movwf	(_bbu+2)^(0+128)
  7223  0C39  3002               	movlw	2
  7224  0C3A  00BD               	movwf	(_bbu+1)^(0+128)
  7225  0C3B  3055               	movlw	85
  7226  0C3C  00BC               	movwf	_bbu^(0+128)
  7227                           
  7228                           ;sample.c: 304: bbku=(bbu*40000)/(bbta*314);
  7229  0C3D  0843               	movf	(_bbta+3)^(0+128),w
  7230  0C3E  0020               	movlb	0	; select bank0
  7231  0C3F  00A3               	movwf	___lmul@multiplier+3
  7232  0C40  0021               	movlb	1	; select bank1
  7233  0C41  0842               	movf	(_bbta+2)^(0+128),w
  7234  0C42  0020               	movlb	0	; select bank0
  7235  0C43  00A2               	movwf	___lmul@multiplier+2
  7236  0C44  0021               	movlb	1	; select bank1
  7237  0C45  0841               	movf	(_bbta+1)^(0+128),w
  7238  0C46  0020               	movlb	0	; select bank0
  7239  0C47  00A1               	movwf	___lmul@multiplier+1
  7240  0C48  0021               	movlb	1	; select bank1
  7241  0C49  0840               	movf	_bbta^(0+128),w
  7242  0C4A  0020               	movlb	0	; select bank0
  7243  0C4B  00A0               	movwf	___lmul@multiplier
  7244  0C4C  3000               	movlw	0
  7245  0C4D  00A7               	movwf	___lmul@multiplicand+3
  7246  0C4E  3000               	movlw	0
  7247  0C4F  00A6               	movwf	___lmul@multiplicand+2
  7248  0C50  3001               	movlw	1
  7249  0C51  00A5               	movwf	___lmul@multiplicand+1
  7250  0C52  303A               	movlw	58
  7251  0C53  00A4               	movwf	___lmul@multiplicand
  7252  0C54  319B  2330  318B   	fcall	___lmul
  7253  0C57  0020               	movlb	0	; select bank0
  7254  0C58  0823               	movf	?___lmul+3,w
  7255  0C59  00AB               	movwf	___aldiv@divisor+3
  7256  0C5A  0822               	movf	?___lmul+2,w
  7257  0C5B  00AA               	movwf	___aldiv@divisor+2
  7258  0C5C  0821               	movf	?___lmul+1,w
  7259  0C5D  00A9               	movwf	___aldiv@divisor+1
  7260  0C5E  0820               	movf	?___lmul,w
  7261  0C5F  00A8               	movwf	___aldiv@divisor
  7262  0C60  0021               	movlb	1	; select bank1
  7263  0C61  083F               	movf	(_bbu+3)^(0+128),w
  7264  0C62  0020               	movlb	0	; select bank0
  7265  0C63  00A3               	movwf	___lmul@multiplier+3
  7266  0C64  0021               	movlb	1	; select bank1
  7267  0C65  083E               	movf	(_bbu+2)^(0+128),w
  7268  0C66  0020               	movlb	0	; select bank0
  7269  0C67  00A2               	movwf	___lmul@multiplier+2
  7270  0C68  0021               	movlb	1	; select bank1
  7271  0C69  083D               	movf	(_bbu+1)^(0+128),w
  7272  0C6A  0020               	movlb	0	; select bank0
  7273  0C6B  00A1               	movwf	___lmul@multiplier+1
  7274  0C6C  0021               	movlb	1	; select bank1
  7275  0C6D  083C               	movf	_bbu^(0+128),w
  7276  0C6E  0020               	movlb	0	; select bank0
  7277  0C6F  00A0               	movwf	___lmul@multiplier
  7278  0C70  3000               	movlw	0
  7279  0C71  00A7               	movwf	___lmul@multiplicand+3
  7280  0C72  3000               	movlw	0
  7281  0C73  00A6               	movwf	___lmul@multiplicand+2
  7282  0C74  309C               	movlw	156
  7283  0C75  00A5               	movwf	___lmul@multiplicand+1
  7284  0C76  3040               	movlw	64
  7285  0C77  00A4               	movwf	___lmul@multiplicand
  7286  0C78  319B  2330  318B   	fcall	___lmul
  7287  0C7B  0020               	movlb	0	; select bank0
  7288  0C7C  0823               	movf	?___lmul+3,w
  7289  0C7D  00AF               	movwf	___aldiv@dividend+3
  7290  0C7E  0822               	movf	?___lmul+2,w
  7291  0C7F  00AE               	movwf	___aldiv@dividend+2
  7292  0C80  0821               	movf	?___lmul+1,w
  7293  0C81  00AD               	movwf	___aldiv@dividend+1
  7294  0C82  0820               	movf	?___lmul,w
  7295  0C83  00AC               	movwf	___aldiv@dividend
  7296  0C84  3190  202D  318B   	fcall	___aldiv
  7297  0C87  0020               	movlb	0	; select bank0
  7298  0C88  082B               	movf	?___aldiv+3,w
  7299  0C89  0021               	movlb	1	; select bank1
  7300  0C8A  00BB               	movwf	(_bbku+3)^(0+128)
  7301  0C8B  0020               	movlb	0	; select bank0
  7302  0C8C  082A               	movf	?___aldiv+2,w
  7303  0C8D  0021               	movlb	1	; select bank1
  7304  0C8E  00BA               	movwf	(_bbku+2)^(0+128)
  7305  0C8F  0020               	movlb	0	; select bank0
  7306  0C90  0829               	movf	?___aldiv+1,w
  7307  0C91  0021               	movlb	1	; select bank1
  7308  0C92  00B9               	movwf	(_bbku+1)^(0+128)
  7309  0C93  0020               	movlb	0	; select bank0
  7310  0C94  0828               	movf	?___aldiv,w
  7311  0C95  0021               	movlb	1	; select bank1
  7312  0C96  00B8               	movwf	_bbku^(0+128)
  7313                           
  7314                           ;sample.c: 305: bbku*=100;
  7315  0C97  3000               	movlw	0
  7316  0C98  0020               	movlb	0	; select bank0
  7317  0C99  00A3               	movwf	___lmul@multiplier+3
  7318  0C9A  3000               	movlw	0
  7319  0C9B  00A2               	movwf	___lmul@multiplier+2
  7320  0C9C  3000               	movlw	0
  7321  0C9D  00A1               	movwf	___lmul@multiplier+1
  7322  0C9E  3064               	movlw	100
  7323  0C9F  00A0               	movwf	___lmul@multiplier
  7324  0CA0  0021               	movlb	1	; select bank1
  7325  0CA1  083B               	movf	(_bbku+3)^(0+128),w
  7326  0CA2  0020               	movlb	0	; select bank0
  7327  0CA3  00A7               	movwf	___lmul@multiplicand+3
  7328  0CA4  0021               	movlb	1	; select bank1
  7329  0CA5  083A               	movf	(_bbku+2)^(0+128),w
  7330  0CA6  0020               	movlb	0	; select bank0
  7331  0CA7  00A6               	movwf	___lmul@multiplicand+2
  7332  0CA8  0021               	movlb	1	; select bank1
  7333  0CA9  0839               	movf	(_bbku+1)^(0+128),w
  7334  0CAA  0020               	movlb	0	; select bank0
  7335  0CAB  00A5               	movwf	___lmul@multiplicand+1
  7336  0CAC  0021               	movlb	1	; select bank1
  7337  0CAD  0838               	movf	_bbku^(0+128),w
  7338  0CAE  0020               	movlb	0	; select bank0
  7339  0CAF  00A4               	movwf	___lmul@multiplicand
  7340  0CB0  319B  2330  318B   	fcall	___lmul
  7341  0CB3  0020               	movlb	0	; select bank0
  7342  0CB4  0823               	movf	?___lmul+3,w
  7343  0CB5  0021               	movlb	1	; select bank1
  7344  0CB6  00BB               	movwf	(_bbku+3)^(0+128)
  7345  0CB7  0020               	movlb	0	; select bank0
  7346  0CB8  0822               	movf	?___lmul+2,w
  7347  0CB9  0021               	movlb	1	; select bank1
  7348  0CBA  00BA               	movwf	(_bbku+2)^(0+128)
  7349  0CBB  0020               	movlb	0	; select bank0
  7350  0CBC  0821               	movf	?___lmul+1,w
  7351  0CBD  0021               	movlb	1	; select bank1
  7352  0CBE  00B9               	movwf	(_bbku+1)^(0+128)
  7353  0CBF  0020               	movlb	0	; select bank0
  7354  0CC0  0820               	movf	?___lmul,w
  7355  0CC1  0021               	movlb	1	; select bank1
  7356  0CC2  00B8               	movwf	_bbku^(0+128)
  7357                           
  7358                           ;sample.c: 307: t32=(bbku*10/14);
  7359  0CC3  3000               	movlw	0
  7360  0CC4  0020               	movlb	0	; select bank0
  7361  0CC5  00AB               	movwf	___aldiv@divisor+3
  7362  0CC6  3000               	movlw	0
  7363  0CC7  00AA               	movwf	___aldiv@divisor+2
  7364  0CC8  3000               	movlw	0
  7365  0CC9  00A9               	movwf	___aldiv@divisor+1
  7366  0CCA  300E               	movlw	14
  7367  0CCB  00A8               	movwf	___aldiv@divisor
  7368  0CCC  0021               	movlb	1	; select bank1
  7369  0CCD  083B               	movf	(_bbku+3)^(0+128),w
  7370  0CCE  0020               	movlb	0	; select bank0
  7371  0CCF  00A3               	movwf	___lmul@multiplier+3
  7372  0CD0  0021               	movlb	1	; select bank1
  7373  0CD1  083A               	movf	(_bbku+2)^(0+128),w
  7374  0CD2  0020               	movlb	0	; select bank0
  7375  0CD3  00A2               	movwf	___lmul@multiplier+2
  7376  0CD4  0021               	movlb	1	; select bank1
  7377  0CD5  0839               	movf	(_bbku+1)^(0+128),w
  7378  0CD6  0020               	movlb	0	; select bank0
  7379  0CD7  00A1               	movwf	___lmul@multiplier+1
  7380  0CD8  0021               	movlb	1	; select bank1
  7381  0CD9  0838               	movf	_bbku^(0+128),w
  7382  0CDA  0020               	movlb	0	; select bank0
  7383  0CDB  00A0               	movwf	___lmul@multiplier
  7384  0CDC  3000               	movlw	0
  7385  0CDD  00A7               	movwf	___lmul@multiplicand+3
  7386  0CDE  3000               	movlw	0
  7387  0CDF  00A6               	movwf	___lmul@multiplicand+2
  7388  0CE0  3000               	movlw	0
  7389  0CE1  00A5               	movwf	___lmul@multiplicand+1
  7390  0CE2  300A               	movlw	10
  7391  0CE3  00A4               	movwf	___lmul@multiplicand
  7392  0CE4  319B  2330  318B   	fcall	___lmul
  7393  0CE7  0020               	movlb	0	; select bank0
  7394  0CE8  0823               	movf	?___lmul+3,w
  7395  0CE9  00AF               	movwf	___aldiv@dividend+3
  7396  0CEA  0822               	movf	?___lmul+2,w
  7397  0CEB  00AE               	movwf	___aldiv@dividend+2
  7398  0CEC  0821               	movf	?___lmul+1,w
  7399  0CED  00AD               	movwf	___aldiv@dividend+1
  7400  0CEE  0820               	movf	?___lmul,w
  7401  0CEF  00AC               	movwf	___aldiv@dividend
  7402  0CF0  3190  202D  318B   	fcall	___aldiv
  7403  0CF3  0020               	movlb	0	; select bank0
  7404  0CF4  082B               	movf	?___aldiv+3,w
  7405  0CF5  00C1               	movwf	pid_pwm1_idrv_b_b@t32+3
  7406  0CF6  082A               	movf	?___aldiv+2,w
  7407  0CF7  00C0               	movwf	pid_pwm1_idrv_b_b@t32+2
  7408  0CF8  0829               	movf	?___aldiv+1,w
  7409  0CF9  00BF               	movwf	pid_pwm1_idrv_b_b@t32+1
  7410  0CFA  0828               	movf	?___aldiv,w
  7411  0CFB  00BE               	movwf	pid_pwm1_idrv_b_b@t32
  7412                           
  7413                           ;sample.c: 308: PidKp=(uint16_t)t32;
  7414  0CFC  083F               	movf	pid_pwm1_idrv_b_b@t32+1,w
  7415  0CFD  00D3               	movwf	_PidKp+1
  7416  0CFE  083E               	movf	pid_pwm1_idrv_b_b@t32,w
  7417  0CFF  00D2               	movwf	_PidKp
  7418                           
  7419                           ;sample.c: 309: PidTi=bbtu*10/20;
  7420  0D00  3014               	movlw	20
  7421  0D01  00A2               	movwf	___lwdiv@divisor
  7422  0D02  3000               	movlw	0
  7423  0D03  00A3               	movwf	___lwdiv@divisor+1
  7424  0D04  084D               	movf	_bbtu+1,w
  7425  0D05  00F4               	movwf	___wmul@multiplier+1
  7426  0D06  084C               	movf	_bbtu,w
  7427  0D07  00F3               	movwf	___wmul@multiplier
  7428  0D08  300A               	movlw	10
  7429  0D09  00F5               	movwf	___wmul@multiplicand
  7430  0D0A  3000               	movlw	0
  7431  0D0B  00F6               	movwf	___wmul@multiplicand+1
  7432  0D0C  319A  2289  318B   	fcall	___wmul
  7433  0D0F  0874               	movf	?___wmul+1,w
  7434  0D10  0020               	movlb	0	; select bank0
  7435  0D11  00A5               	movwf	___lwdiv@dividend+1
  7436  0D12  0873               	movf	?___wmul,w
  7437  0D13  00A4               	movwf	___lwdiv@dividend
  7438  0D14  319B  2391  318B   	fcall	___lwdiv
  7439  0D17  0020               	movlb	0	; select bank0
  7440  0D18  0823               	movf	?___lwdiv+1,w
  7441  0D19  0021               	movlb	1	; select bank1
  7442  0D1A  00CF               	movwf	(_PidTi+1)^(0+128)
  7443  0D1B  0020               	movlb	0	; select bank0
  7444  0D1C  0822               	movf	?___lwdiv,w
  7445  0D1D  0021               	movlb	1	; select bank1
  7446  0D1E  00CE               	movwf	_PidTi^(0+128)
  7447                           
  7448                           ;sample.c: 310: PidTd=bbtu/8;
  7449  0D1F  0020               	movlb	0	; select bank0
  7450  0D20  084D               	movf	_bbtu+1,w
  7451  0D21  00B7               	movwf	??_pid_pwm1_idrv_b_b+1
  7452  0D22  084C               	movf	_bbtu,w
  7453  0D23  00B6               	movwf	??_pid_pwm1_idrv_b_b
  7454  0D24  36B7               	lsrf	??_pid_pwm1_idrv_b_b+1,f
  7455  0D25  0CB6               	rrf	??_pid_pwm1_idrv_b_b,f
  7456  0D26  36B7               	lsrf	??_pid_pwm1_idrv_b_b+1,f
  7457  0D27  0CB6               	rrf	??_pid_pwm1_idrv_b_b,f
  7458  0D28  36B7               	lsrf	??_pid_pwm1_idrv_b_b+1,f
  7459  0D29  0CB6               	rrf	??_pid_pwm1_idrv_b_b,f
  7460  0D2A  0836               	movf	??_pid_pwm1_idrv_b_b,w
  7461  0D2B  0021               	movlb	1	; select bank1
  7462  0D2C  00CC               	movwf	_PidTd^(0+128)
  7463  0D2D  0020               	movlb	0	; select bank0
  7464  0D2E  0837               	movf	??_pid_pwm1_idrv_b_b+1,w
  7465  0D2F  0021               	movlb	1	; select bank1
  7466  0D30  00CD               	movwf	(_PidTd+1)^(0+128)
  7467                           
  7468                           ;sample.c: 311: pidBbSm=5;
  7469  0D31  3005               	movlw	5
  7470  0D32                     L5:	
  7471  0D32  0020               	movlb	0	; select bank0
  7472  0D33                     L4:	
  7473  0D33  00B6               	movwf	??_pid_pwm1_idrv_b_b
  7474  0D34  0836               	movf	??_pid_pwm1_idrv_b_b,w
  7475  0D35  00D9               	movwf	_pidBbSm
  7476                           
  7477                           ;sample.c: 313: }
  7478                           
  7479                           ;sample.c: 312: break;
  7480  0D36  2D41               	goto	l5407
  7481  0D37                     l5405:	
  7482  0D37  0859               	movf	_pidBbSm,w
  7483                           
  7484                           ; Switch size 1, requested type "space"
  7485                           ; Number of cases is 6, Range of values is 0 to 5
  7486                           ; switch strategies available:
  7487                           ; Name         Instructions Cycles
  7488                           ; direct_byte           18     6 (fixed)
  7489                           ; simple_byte           19    10 (average)
  7490                           ; jumptable            260     6 (fixed)
  7491                           ;	Chosen strategy is direct_byte
  7492  0D38  0084               	movwf	4
  7493  0D39  3006               	movlw	6
  7494  0D3A  0204               	subwf	4,w
  7495  0D3B  1803               	skipnc
  7496  0D3C  2D41               	goto	l5407
  7497  0D3D  3198               	movlp	high S5825
  7498  0D3E  3504               	lslf	4,w
  7499  0D3F  3E2F               	addlw	low S5825
  7500  0D40  0082               	movwf	2
  7501  0D41                     l5407:	
  7502                           
  7503                           ;sample.c: 314: if(pidTestNum>2){
  7504  0D41  3003               	movlw	3
  7505  0D42  0258               	subwf	_pidTestNum,w
  7506  0D43  1C03               	skipc
  7507  0D44  0008               	return
  7508                           
  7509                           ;sample.c: 315: if(bbmax<t32)bbmax=t32;
  7510  0D45  0021               	movlb	1	; select bank1
  7511  0D46  0861               	movf	(_bbmax+3)^(0+128),w
  7512  0D47  3A80               	xorlw	128
  7513  0D48  0020               	movlb	0	; select bank0
  7514  0D49  00B6               	movwf	??_pid_pwm1_idrv_b_b
  7515  0D4A  0841               	movf	pid_pwm1_idrv_b_b@t32+3,w
  7516  0D4B  3A80               	xorlw	128
  7517  0D4C  0236               	subwf	??_pid_pwm1_idrv_b_b,w
  7518  0D4D  0021               	movlb	1	; select bank1
  7519  0D4E  1D03               	skipz
  7520  0D4F  2D60               	goto	u4983
  7521  0D50  0020               	movlb	0	; select bank0
  7522  0D51  0840               	movf	pid_pwm1_idrv_b_b@t32+2,w
  7523  0D52  0021               	movlb	1	; select bank1
  7524  0D53  0260               	subwf	(_bbmax+2)^(0+128),w
  7525  0D54  1D03               	skipz
  7526  0D55  2D60               	goto	u4983
  7527  0D56  0020               	movlb	0	; select bank0
  7528  0D57  083F               	movf	pid_pwm1_idrv_b_b@t32+1,w
  7529  0D58  0021               	movlb	1	; select bank1
  7530  0D59  025F               	subwf	(_bbmax+1)^(0+128),w
  7531  0D5A  1D03               	skipz
  7532  0D5B  2D60               	goto	u4983
  7533  0D5C  0020               	movlb	0	; select bank0
  7534  0D5D  083E               	movf	pid_pwm1_idrv_b_b@t32,w
  7535  0D5E  0021               	movlb	1	; select bank1
  7536  0D5F  025E               	subwf	_bbmax^(0+128),w
  7537  0D60                     u4983:	
  7538  0D60  1803               	skipnc
  7539  0D61  2D72               	goto	l670
  7540  0D62  0020               	movlb	0	; select bank0
  7541  0D63  0841               	movf	pid_pwm1_idrv_b_b@t32+3,w
  7542  0D64  0021               	movlb	1	; select bank1
  7543  0D65  00E1               	movwf	(_bbmax+3)^(0+128)
  7544  0D66  0020               	movlb	0	; select bank0
  7545  0D67  0840               	movf	pid_pwm1_idrv_b_b@t32+2,w
  7546  0D68  0021               	movlb	1	; select bank1
  7547  0D69  00E0               	movwf	(_bbmax+2)^(0+128)
  7548  0D6A  0020               	movlb	0	; select bank0
  7549  0D6B  083F               	movf	pid_pwm1_idrv_b_b@t32+1,w
  7550  0D6C  0021               	movlb	1	; select bank1
  7551  0D6D  00DF               	movwf	(_bbmax+1)^(0+128)
  7552  0D6E  0020               	movlb	0	; select bank0
  7553  0D6F  083E               	movf	pid_pwm1_idrv_b_b@t32,w
  7554  0D70  0021               	movlb	1	; select bank1
  7555  0D71  00DE               	movwf	_bbmax^(0+128)
  7556  0D72                     l670:	
  7557                           
  7558                           ;sample.c: 316: if(bbmin>t32)bbmin=t32;
  7559  0D72  0020               	movlb	0	; select bank0
  7560  0D73  0841               	movf	pid_pwm1_idrv_b_b@t32+3,w
  7561  0D74  3A80               	xorlw	128
  7562  0D75  00B6               	movwf	??_pid_pwm1_idrv_b_b
  7563  0D76  0021               	movlb	1	; select bank1
  7564  0D77  085D               	movf	(_bbmin+3)^(0+128),w
  7565  0D78  3A80               	xorlw	128
  7566  0D79  0020               	movlb	0	; select bank0
  7567  0D7A  0236               	subwf	??_pid_pwm1_idrv_b_b,w
  7568  0D7B  1D03               	skipz
  7569  0D7C  2D8D               	goto	u4993
  7570  0D7D  0021               	movlb	1	; select bank1
  7571  0D7E  085C               	movf	(_bbmin+2)^(0+128),w
  7572  0D7F  0020               	movlb	0	; select bank0
  7573  0D80  0240               	subwf	pid_pwm1_idrv_b_b@t32+2,w
  7574  0D81  1D03               	skipz
  7575  0D82  2D8D               	goto	u4993
  7576  0D83  0021               	movlb	1	; select bank1
  7577  0D84  085B               	movf	(_bbmin+1)^(0+128),w
  7578  0D85  0020               	movlb	0	; select bank0
  7579  0D86  023F               	subwf	pid_pwm1_idrv_b_b@t32+1,w
  7580  0D87  1D03               	skipz
  7581  0D88  2D8D               	goto	u4993
  7582  0D89  0021               	movlb	1	; select bank1
  7583  0D8A  085A               	movf	_bbmin^(0+128),w
  7584  0D8B  0020               	movlb	0	; select bank0
  7585  0D8C  023E               	subwf	pid_pwm1_idrv_b_b@t32,w
  7586  0D8D                     u4993:	
  7587  0D8D  1803               	skipnc
  7588  0D8E  0008               	return
  7589  0D8F  0841               	movf	pid_pwm1_idrv_b_b@t32+3,w
  7590  0D90  0021               	movlb	1	; select bank1
  7591  0D91  00DD               	movwf	(_bbmin+3)^(0+128)
  7592  0D92  0020               	movlb	0	; select bank0
  7593  0D93  0840               	movf	pid_pwm1_idrv_b_b@t32+2,w
  7594  0D94  0021               	movlb	1	; select bank1
  7595  0D95  00DC               	movwf	(_bbmin+2)^(0+128)
  7596  0D96  0020               	movlb	0	; select bank0
  7597  0D97  083F               	movf	pid_pwm1_idrv_b_b@t32+1,w
  7598  0D98  0021               	movlb	1	; select bank1
  7599  0D99  00DB               	movwf	(_bbmin+1)^(0+128)
  7600  0D9A  0020               	movlb	0	; select bank0
  7601  0D9B  083E               	movf	pid_pwm1_idrv_b_b@t32,w
  7602  0D9C  0021               	movlb	1	; select bank1
  7603  0D9D  00DA               	movwf	_bbmin^(0+128)
  7604  0D9E  0008               	return
  7605  0D9F                     l659:	
  7606  0D9F  0008               	return
  7607  0DA0                     __end_of_pid_pwm1_idrv_b_b:	
  7608                           
  7609                           	psect	swtext1
  7610  182F                     __pswtext1:	
  7611  182F                     S5825:	
  7612  182F  318B  2B7A         	ljmp	l5357
  7613  1831  318B  2B7A         	ljmp	l5357
  7614  1833  318B  2B7C         	ljmp	l5363
  7615  1835  318B  2B93         	ljmp	l5369
  7616  1837  318B  2BBE         	ljmp	l5383
  7617  1839  318D  2D9F         	ljmp	l659
  7618                           
  7619                           	psect	text10
  7620  1B0C                     __ptext10:	
  7621 ;; *************** function _set_idrv_pwm1_duty *****************
  7622 ;; Defined at:
  7623 ;;		line 72 in file "src/api/sample.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;  duty            2    2[BANK0 ] unsigned int 
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;  t16             2    4[BANK0 ] unsigned int 
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  1    wreg      void 
  7630 ;; Registers used:
  7631 ;;		wreg, status,2, pclath, cstack
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7637 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7638 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7640 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7641 ;;Total ram usage:        4 bytes
  7642 ;; Hardware stack levels used:    1
  7643 ;; Hardware stack levels required when called:    2
  7644 ;; This function calls:
  7645 ;;		_get_idrv_pwm1_duty
  7646 ;; This function is called by:
  7647 ;;		_pid_pwm1_idrv_b_b
  7648 ;;		_pid_pwm1_idrv_run
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           
  7653                           ;psect for function _set_idrv_pwm1_duty
  7654  1B0C                     _set_idrv_pwm1_duty:	
  7655                           
  7656                           ;sample.c: 75: uint16_t t16;
  7657                           ;sample.c: 76: pwm1DutyForIdrv=duty;
  7658                           
  7659                           ;incstack = 0
  7660                           ; Regs used in _set_idrv_pwm1_duty: [wreg+status,2+pclath+cstack]
  7661  1B0C  0020               	movlb	0	; select bank0
  7662  1B0D  0823               	movf	set_idrv_pwm1_duty@duty+1,w
  7663  1B0E  0021               	movlb	1	; select bank1
  7664  1B0F  00E7               	movwf	(_pwm1DutyForIdrv+1)^(0+128)
  7665  1B10  0020               	movlb	0	; select bank0
  7666  1B11  0822               	movf	set_idrv_pwm1_duty@duty,w
  7667  1B12  0021               	movlb	1	; select bank1
  7668  1B13  00E6               	movwf	_pwm1DutyForIdrv^(0+128)
  7669                           
  7670                           ;sample.c: 77: t16=get_idrv_pwm1_duty();
  7671  1B14  319A  2251  319B   	fcall	_get_idrv_pwm1_duty
  7672  1B17  0874               	movf	?_get_idrv_pwm1_duty+1,w
  7673  1B18  0020               	movlb	0	; select bank0
  7674  1B19  00A5               	movwf	set_idrv_pwm1_duty@t16+1
  7675  1B1A  0873               	movf	?_get_idrv_pwm1_duty,w
  7676  1B1B  00A4               	movwf	set_idrv_pwm1_duty@t16
  7677                           
  7678                           ;sample.c: 78: if(t16==duty)return;
  7679  1B1C  0823               	movf	set_idrv_pwm1_duty@duty+1,w
  7680  1B1D  0625               	xorwf	set_idrv_pwm1_duty@t16+1,w
  7681  1B1E  1D03               	skipz
  7682  1B1F  2B22               	goto	u4285
  7683  1B20  0822               	movf	set_idrv_pwm1_duty@duty,w
  7684  1B21  0624               	xorwf	set_idrv_pwm1_duty@t16,w
  7685  1B22                     u4285:	
  7686  1B22  1903               	btfsc	3,2
  7687  1B23  0008               	return
  7688                           
  7689                           ;sample.c: 81: PWM1CONbits.EN = 0;
  7690  1B24  003B               	movlb	27	; select bank27
  7691  1B25  139B               	bcf	27,7	;volatile
  7692                           
  7693                           ;sample.c: 82: PWM1DCL= (uint8_t)(duty&0xff);
  7694  1B26  0020               	movlb	0	; select bank0
  7695  1B27  0822               	movf	set_idrv_pwm1_duty@duty,w
  7696  1B28  003B               	movlb	27	; select bank27
  7697  1B29  0093               	movwf	19	;volatile
  7698                           
  7699                           ;sample.c: 83: PWM1DCH=(uint8_t)(duty>>8);
  7700  1B2A  0020               	movlb	0	; select bank0
  7701  1B2B  0823               	movf	set_idrv_pwm1_duty@duty+1,w
  7702  1B2C  003B               	movlb	27	; select bank27
  7703  1B2D  0094               	movwf	20	;volatile
  7704                           
  7705                           ;sample.c: 84: PWM1CONbits.EN = 1;
  7706  1B2E  179B               	bsf	27,7	;volatile
  7707  1B2F  0008               	return
  7708  1B30                     __end_of_set_idrv_pwm1_duty:	
  7709                           
  7710                           	psect	text11
  7711  1A51                     __ptext11:	
  7712 ;; *************** function _get_idrv_pwm1_duty *****************
  7713 ;; Defined at:
  7714 ;;		line 63 in file "src/api/sample.c"
  7715 ;; Parameters:    Size  Location     Type
  7716 ;;		None
  7717 ;; Auto vars:     Size  Location     Type
  7718 ;;  t16             2    0[BANK0 ] unsigned int 
  7719 ;; Return value:  Size  Location     Type
  7720 ;;                  2    3[COMMON] unsigned int 
  7721 ;; Registers used:
  7722 ;;		wreg
  7723 ;; Tracked objects:
  7724 ;;		On entry : 0/0
  7725 ;;		On exit  : 0/0
  7726 ;;		Unchanged: 0/0
  7727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7728 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7729 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7730 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7731 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7732 ;;Total ram usage:        6 bytes
  7733 ;; Hardware stack levels used:    1
  7734 ;; Hardware stack levels required when called:    1
  7735 ;; This function calls:
  7736 ;;		Nothing
  7737 ;; This function is called by:
  7738 ;;		_set_idrv_pwm1_duty
  7739 ;; This function uses a non-reentrant model
  7740 ;;
  7741                           
  7742                           
  7743                           ;psect for function _get_idrv_pwm1_duty
  7744  1A51                     _get_idrv_pwm1_duty:	
  7745                           
  7746                           ;sample.c: 66: uint16_t t16=PWM1DCH;
  7747                           
  7748                           ;incstack = 0
  7749                           ; Regs used in _get_idrv_pwm1_duty: [wreg]
  7750  1A51  003B               	movlb	27	; select bank27
  7751  1A52  0814               	movf	20,w	;volatile
  7752  1A53  00F5               	movwf	??_get_idrv_pwm1_duty
  7753  1A54  01F6               	clrf	??_get_idrv_pwm1_duty+1
  7754  1A55  0875               	movf	??_get_idrv_pwm1_duty,w
  7755  1A56  0020               	movlb	0	; select bank0
  7756  1A57  00A0               	movwf	get_idrv_pwm1_duty@t16
  7757  1A58  0876               	movf	??_get_idrv_pwm1_duty+1,w
  7758  1A59  00A1               	movwf	get_idrv_pwm1_duty@t16+1
  7759                           
  7760                           ;sample.c: 67: t16<<=8;
  7761  1A5A  3008               	movlw	8
  7762  1A5B                     u4225:	
  7763  1A5B  35A0               	lslf	get_idrv_pwm1_duty@t16,f
  7764  1A5C  0DA1               	rlf	get_idrv_pwm1_duty@t16+1,f
  7765  1A5D  0B89               	decfsz	9,f
  7766  1A5E  2A5B               	goto	u4225
  7767                           
  7768                           ;sample.c: 68: t16|=PWM1DCL;
  7769  1A5F  003B               	movlb	27	; select bank27
  7770  1A60  0813               	movf	19,w	;volatile
  7771  1A61  00F5               	movwf	??_get_idrv_pwm1_duty
  7772  1A62  01F6               	clrf	??_get_idrv_pwm1_duty+1
  7773  1A63  0875               	movf	??_get_idrv_pwm1_duty,w
  7774  1A64  0020               	movlb	0	; select bank0
  7775  1A65  04A0               	iorwf	get_idrv_pwm1_duty@t16,f
  7776  1A66  0876               	movf	??_get_idrv_pwm1_duty+1,w
  7777  1A67  04A1               	iorwf	get_idrv_pwm1_duty@t16+1,f
  7778                           
  7779                           ;sample.c: 69: return t16;
  7780  1A68  0821               	movf	get_idrv_pwm1_duty@t16+1,w
  7781  1A69  00F4               	movwf	?_get_idrv_pwm1_duty+1
  7782  1A6A  0820               	movf	get_idrv_pwm1_duty@t16,w
  7783  1A6B  00F3               	movwf	?_get_idrv_pwm1_duty
  7784  1A6C  0008               	return
  7785  1A6D                     __end_of_get_idrv_pwm1_duty:	
  7786                           
  7787                           	psect	text12
  7788  1A89                     __ptext12:	
  7789 ;; *************** function ___wmul *****************
  7790 ;; Defined at:
  7791 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
  7792 ;; Parameters:    Size  Location     Type
  7793 ;;  multiplier      2    3[COMMON] unsigned int 
  7794 ;;  multiplicand    2    5[COMMON] unsigned int 
  7795 ;; Auto vars:     Size  Location     Type
  7796 ;;  product         2    0[BANK0 ] unsigned int 
  7797 ;; Return value:  Size  Location     Type
  7798 ;;                  2    3[COMMON] unsigned int 
  7799 ;; Registers used:
  7800 ;;		wreg, status,2, status,0
  7801 ;; Tracked objects:
  7802 ;;		On entry : 0/0
  7803 ;;		On exit  : 0/0
  7804 ;;		Unchanged: 0/0
  7805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7806 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7807 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7809 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7810 ;;Total ram usage:        6 bytes
  7811 ;; Hardware stack levels used:    1
  7812 ;; Hardware stack levels required when called:    1
  7813 ;; This function calls:
  7814 ;;		Nothing
  7815 ;; This function is called by:
  7816 ;;		_pid_pwm1_idrv_b_b
  7817 ;;		_sys_data_init
  7818 ;; This function uses a non-reentrant model
  7819 ;;
  7820                           
  7821                           
  7822                           ;psect for function ___wmul
  7823  1A89                     ___wmul:	
  7824                           
  7825                           ;incstack = 0
  7826                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7827  1A89  0020               	movlb	0	; select bank0
  7828  1A8A  01A0               	clrf	___wmul@product
  7829  1A8B  01A1               	clrf	___wmul@product+1
  7830  1A8C                     l5201:	
  7831  1A8C  1C73               	btfss	___wmul@multiplier,0
  7832  1A8D  2A93               	goto	l1125
  7833  1A8E  0875               	movf	___wmul@multiplicand,w
  7834  1A8F  0020               	movlb	0	; select bank0
  7835  1A90  07A0               	addwf	___wmul@product,f
  7836  1A91  0876               	movf	___wmul@multiplicand+1,w
  7837  1A92  3DA1               	addwfc	___wmul@product+1,f
  7838  1A93                     l1125:	
  7839  1A93  3001               	movlw	1
  7840  1A94                     u4605:	
  7841  1A94  35F5               	lslf	___wmul@multiplicand,f
  7842  1A95  0DF6               	rlf	___wmul@multiplicand+1,f
  7843  1A96  0B89               	decfsz	9,f
  7844  1A97  2A94               	goto	u4605
  7845  1A98  3001               	movlw	1
  7846  1A99                     u4615:	
  7847  1A99  36F4               	lsrf	___wmul@multiplier+1,f
  7848  1A9A  0CF3               	rrf	___wmul@multiplier,f
  7849  1A9B  0B89               	decfsz	9,f
  7850  1A9C  2A99               	goto	u4615
  7851  1A9D  0873               	movf	___wmul@multiplier,w
  7852  1A9E  0474               	iorwf	___wmul@multiplier+1,w
  7853  1A9F  1D03               	btfss	3,2
  7854  1AA0  2A8C               	goto	l5201
  7855  1AA1  0020               	movlb	0	; select bank0
  7856  1AA2  0821               	movf	___wmul@product+1,w
  7857  1AA3  00F4               	movwf	?___wmul+1
  7858  1AA4  0820               	movf	___wmul@product,w
  7859  1AA5  00F3               	movwf	?___wmul
  7860  1AA6  0008               	return
  7861  1AA7                     __end_of___wmul:	
  7862                           
  7863                           	psect	text13
  7864  1B91                     __ptext13:	
  7865 ;; *************** function ___lwdiv *****************
  7866 ;; Defined at:
  7867 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
  7868 ;; Parameters:    Size  Location     Type
  7869 ;;  divisor         2    2[BANK0 ] unsigned int 
  7870 ;;  dividend        2    4[BANK0 ] unsigned int 
  7871 ;; Auto vars:     Size  Location     Type
  7872 ;;  quotient        2    6[BANK0 ] unsigned int 
  7873 ;;  counter         1    8[BANK0 ] unsigned char 
  7874 ;; Return value:  Size  Location     Type
  7875 ;;                  2    2[BANK0 ] unsigned int 
  7876 ;; Registers used:
  7877 ;;		wreg, status,2, status,0
  7878 ;; Tracked objects:
  7879 ;;		On entry : 0/0
  7880 ;;		On exit  : 0/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7883 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7884 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7885 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7886 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7887 ;;Total ram usage:        8 bytes
  7888 ;; Hardware stack levels used:    1
  7889 ;; Hardware stack levels required when called:    1
  7890 ;; This function calls:
  7891 ;;		Nothing
  7892 ;; This function is called by:
  7893 ;;		_pid_pwm1_idrv_b_b
  7894 ;;		_pid_pwm2_vout_run
  7895 ;; This function uses a non-reentrant model
  7896 ;;
  7897                           
  7898                           
  7899                           ;psect for function ___lwdiv
  7900  1B91                     ___lwdiv:	
  7901                           
  7902                           ;incstack = 0
  7903                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7904  1B91  0020               	movlb	0	; select bank0
  7905  1B92  01A6               	clrf	___lwdiv@quotient
  7906  1B93  01A7               	clrf	___lwdiv@quotient+1
  7907  1B94  0822               	movf	___lwdiv@divisor,w
  7908  1B95  0423               	iorwf	___lwdiv@divisor+1,w
  7909  1B96  1903               	btfsc	3,2
  7910  1B97  2BC1               	goto	l4055
  7911  1B98  01A8               	clrf	___lwdiv@counter
  7912  1B99  0AA8               	incf	___lwdiv@counter,f
  7913  1B9A                     l4043:	
  7914  1B9A  1BA3               	btfsc	___lwdiv@divisor+1,7
  7915  1B9B  2BA6               	goto	l4045
  7916  1B9C  3001               	movlw	1
  7917  1B9D                     u3125:	
  7918  1B9D  35A2               	lslf	___lwdiv@divisor,f
  7919  1B9E  0DA3               	rlf	___lwdiv@divisor+1,f
  7920  1B9F  0B89               	decfsz	9,f
  7921  1BA0  2B9D               	goto	u3125
  7922  1BA1  3001               	movlw	1
  7923  1BA2  00F7               	movwf	??___lwdiv
  7924  1BA3  0877               	movf	??___lwdiv,w
  7925  1BA4  07A8               	addwf	___lwdiv@counter,f
  7926  1BA5  2B9A               	goto	l4043
  7927  1BA6                     l4045:	
  7928  1BA6  3001               	movlw	1
  7929  1BA7                     u3145:	
  7930  1BA7  35A6               	lslf	___lwdiv@quotient,f
  7931  1BA8  0DA7               	rlf	___lwdiv@quotient+1,f
  7932  1BA9  0B89               	decfsz	9,f
  7933  1BAA  2BA7               	goto	u3145
  7934  1BAB  0823               	movf	___lwdiv@divisor+1,w
  7935  1BAC  0225               	subwf	___lwdiv@dividend+1,w
  7936  1BAD  1D03               	skipz
  7937  1BAE  2BB1               	goto	u3155
  7938  1BAF  0822               	movf	___lwdiv@divisor,w
  7939  1BB0  0224               	subwf	___lwdiv@dividend,w
  7940  1BB1                     u3155:	
  7941  1BB1  1C03               	skipc
  7942  1BB2  2BB8               	goto	l4051
  7943  1BB3  0822               	movf	___lwdiv@divisor,w
  7944  1BB4  02A4               	subwf	___lwdiv@dividend,f
  7945  1BB5  0823               	movf	___lwdiv@divisor+1,w
  7946  1BB6  3BA5               	subwfb	___lwdiv@dividend+1,f
  7947  1BB7  1426               	bsf	___lwdiv@quotient,0
  7948  1BB8                     l4051:	
  7949  1BB8  3001               	movlw	1
  7950  1BB9                     u3165:	
  7951  1BB9  36A3               	lsrf	___lwdiv@divisor+1,f
  7952  1BBA  0CA2               	rrf	___lwdiv@divisor,f
  7953  1BBB  0B89               	decfsz	9,f
  7954  1BBC  2BB9               	goto	u3165
  7955  1BBD  3001               	movlw	1
  7956  1BBE  02A8               	subwf	___lwdiv@counter,f
  7957  1BBF  1D03               	btfss	3,2
  7958  1BC0  2BA6               	goto	l4045
  7959  1BC1                     l4055:	
  7960  1BC1  0827               	movf	___lwdiv@quotient+1,w
  7961  1BC2  00A3               	movwf	?___lwdiv+1
  7962  1BC3  0826               	movf	___lwdiv@quotient,w
  7963  1BC4  00A2               	movwf	?___lwdiv
  7964  1BC5  0008               	return
  7965  1BC6                     __end_of___lwdiv:	
  7966                           
  7967                           	psect	text14
  7968  1D97                     __ptext14:	
  7969 ;; *************** function _modbus_response_process *****************
  7970 ;; Defined at:
  7971 ;;		line 208 in file "src/api/modbus.c"
  7972 ;; Parameters:    Size  Location     Type
  7973 ;;  rbuf            1    wreg     PTR unsigned char 
  7974 ;;		 -> modbusBuf(60), 
  7975 ;;  rlen            2   31[BANK0 ] unsigned int 
  7976 ;; Auto vars:     Size  Location     Type
  7977 ;;  rbuf            1   36[BANK0 ] PTR unsigned char 
  7978 ;;		 -> modbusBuf(60), 
  7979 ;;  pmdbs           1   35[BANK0 ] PTR struct .
  7980 ;;		 -> modbusBuf(60), 
  7981 ;;  resp            1   34[BANK0 ] unsigned char 
  7982 ;; Return value:  Size  Location     Type
  7983 ;;                  1    wreg      void 
  7984 ;; Registers used:
  7985 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7986 ;; Tracked objects:
  7987 ;;		On entry : 0/0
  7988 ;;		On exit  : 0/0
  7989 ;;		Unchanged: 0/0
  7990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7991 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7992 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7993 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7994 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7995 ;;Total ram usage:        6 bytes
  7996 ;; Hardware stack levels used:    1
  7997 ;; Hardware stack levels required when called:    5
  7998 ;; This function calls:
  7999 ;;		_crc_verify
  8000 ;;		_modbus_response_command
  8001 ;;		_modbus_response_illgeal_function
  8002 ;;		_modbus_response_write_mult_register
  8003 ;;		_modbus_response_write_single_register
  8004 ;; This function is called by:
  8005 ;;		_main
  8006 ;; This function uses a non-reentrant model
  8007 ;;
  8008                           
  8009                           
  8010                           ;psect for function _modbus_response_process
  8011  1D97                     _modbus_response_process:	
  8012                           
  8013                           ;incstack = 0
  8014                           ; Regs used in _modbus_response_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8015                           ;modbus_response_process@rbuf stored from wreg
  8016  1D97  0020               	movlb	0	; select bank0
  8017  1D98  00C4               	movwf	modbus_response_process@rbuf
  8018                           
  8019                           ;modbus.c: 209: uint8_t resp=0;
  8020  1D99  01C2               	clrf	modbus_response_process@resp
  8021                           
  8022                           ;modbus.c: 210: st_modbusComReqStructDef* pmdbs=(st_modbusComReqStructDef*)rbuf;
  8023  1D9A  0844               	movf	modbus_response_process@rbuf,w
  8024  1D9B  00C1               	movwf	??_modbus_response_process
  8025  1D9C  0841               	movf	??_modbus_response_process,w
  8026  1D9D  00C3               	movwf	modbus_response_process@pmdbs
  8027                           
  8028                           ;modbus.c: 213: if((pmdbs->addr!=sysData.id) && (pmdbs->addr!=0x00))return;
  8029  1D9E  305C               	movlw	92
  8030  1D9F  0086               	movwf	6
  8031  1DA0  3023               	movlw	35
  8032  1DA1  0087               	movwf	7
  8033  1DA2  3142               	addfsr 1,2
  8034  1DA3  0843               	movf	modbus_response_process@pmdbs,w
  8035  1DA4  0084               	movwf	4
  8036  1DA5  3001               	movlw	1	; select bank2/3
  8037  1DA6  0085               	movwf	5
  8038  1DA7  0800               	movf	0,w
  8039  1DA8  0601               	xorwf	1,w
  8040  1DA9  1903               	skipnz
  8041  1DAA  2DB2               	goto	l5585
  8042  1DAB  0843               	movf	modbus_response_process@pmdbs,w
  8043  1DAC  0086               	movwf	6
  8044  1DAD  3001               	movlw	1	; select bank2/3
  8045  1DAE  0087               	movwf	7
  8046  1DAF  0801               	movf	1,w
  8047  1DB0  1D03               	btfss	3,2
  8048  1DB1  0008               	return
  8049  1DB2                     l5585:	
  8050                           
  8051                           ;modbus.c: 214: if(!(crc_verify(rbuf,rlen)))return ;
  8052  1DB2  0844               	movf	modbus_response_process@rbuf,w
  8053  1DB3  00A8               	movwf	crc_verify@message
  8054  1DB4  3001               	movlw	1
  8055  1DB5  00A9               	movwf	crc_verify@message+1
  8056  1DB6  0840               	movf	modbus_response_process@rlen+1,w
  8057  1DB7  00AB               	movwf	crc_verify@n+1
  8058  1DB8  083F               	movf	modbus_response_process@rlen,w
  8059  1DB9  00AA               	movwf	crc_verify@n
  8060  1DBA  319B  23C6  319D   	fcall	_crc_verify
  8061  1DBD  3A00               	xorlw	0
  8062  1DBE  1903               	btfsc	3,2
  8063  1DBF  0008               	return
  8064  1DC0  2DD7               	goto	l5599
  8065  1DC1                     l5589:	
  8066                           ;modbus.c: 217: case 0x03:
  8067                           
  8068                           ;modbus.c: 216: switch(pmdbs->func){
  8069                           
  8070                           
  8071                           ;modbus.c: 218: modbus_response_command(rbuf);
  8072  1DC1  0020               	movlb	0	; select bank0
  8073  1DC2  0844               	movf	modbus_response_process@rbuf,w
  8074  1DC3  3193  2385         	fcall	_modbus_response_command
  8075                           
  8076                           ;modbus.c: 219: break;
  8077  1DC5  0008               	return
  8078  1DC6                     l5591:	
  8079                           ;modbus.c: 220: case 0x06:
  8080                           
  8081                           
  8082                           ;modbus.c: 221: case 0x26:
  8083                           ;modbus.c: 222: modbus_response_write_single_register(rbuf);
  8084  1DC6  0020               	movlb	0	; select bank0
  8085  1DC7  0844               	movf	modbus_response_process@rbuf,w
  8086  1DC8  3195  253D         	fcall	_modbus_response_write_single_register
  8087                           
  8088                           ;modbus.c: 223: break;
  8089  1DCA  0008               	return
  8090  1DCB                     l5593:	
  8091                           ;modbus.c: 224: case 0x10:
  8092                           
  8093                           
  8094                           ;modbus.c: 225: modbus_response_write_mult_register(rbuf);
  8095  1DCB  0020               	movlb	0	; select bank0
  8096  1DCC  0844               	movf	modbus_response_process@rbuf,w
  8097  1DCD  3190  20AF         	fcall	_modbus_response_write_mult_register
  8098                           
  8099                           ;modbus.c: 226: break;
  8100  1DCF  0008               	return
  8101  1DD0                     l5595:	
  8102                           ;modbus.c: 249: default:
  8103                           
  8104                           
  8105                           ;modbus.c: 250: modbus_response_illgeal_function(rbuf,0x01);break;
  8106  1DD0  0020               	movlb	0	; select bank0
  8107  1DD1  01B3               	clrf	modbus_response_illgeal_function@errcode
  8108  1DD2  0AB3               	incf	modbus_response_illgeal_function@errcode,f
  8109  1DD3  0844               	movf	modbus_response_process@rbuf,w
  8110  1DD4  319C  24B0         	fcall	_modbus_response_illgeal_function
  8111                           
  8112                           ;modbus.c: 251: }
  8113  1DD6  0008               	return
  8114  1DD7                     l5599:	
  8115  1DD7  0020               	movlb	0	; select bank0
  8116  1DD8  0A43               	incf	modbus_response_process@pmdbs,w
  8117  1DD9  0086               	movwf	6
  8118  1DDA  3001               	movlw	1	; select bank2/3
  8119  1DDB  0087               	movwf	7
  8120  1DDC  0801               	movf	1,w
  8121                           
  8122                           ; Switch size 1, requested type "space"
  8123                           ; Number of cases is 4, Range of values is 3 to 38
  8124                           ; switch strategies available:
  8125                           ; Name         Instructions Cycles
  8126                           ; simple_byte           13     7 (average)
  8127                           ; direct_byte           81     9 (fixed)
  8128                           ; jumptable            263     9 (fixed)
  8129                           ;	Chosen strategy is simple_byte
  8130  1DDD  3A03               	xorlw	3	; case 3
  8131  1DDE  1903               	skipnz
  8132  1DDF  2DC1               	goto	l5589
  8133  1DE0  3A05               	xorlw	5	; case 6
  8134  1DE1  1903               	skipnz
  8135  1DE2  2DC6               	goto	l5591
  8136  1DE3  3A16               	xorlw	22	; case 16
  8137  1DE4  1903               	skipnz
  8138  1DE5  2DCB               	goto	l5593
  8139  1DE6  3A36               	xorlw	54	; case 38
  8140  1DE7  1903               	skipnz
  8141  1DE8  2DC6               	goto	l5591
  8142  1DE9  2DD0               	goto	l5595
  8143  1DEA  0008               	return
  8144  1DEB                     __end_of_modbus_response_process:	
  8145                           
  8146                           	psect	text15
  8147  153D                     __ptext15:	
  8148 ;; *************** function _modbus_response_write_single_register *****************
  8149 ;; Defined at:
  8150 ;;		line 115 in file "src/api/modbus.c"
  8151 ;; Parameters:    Size  Location     Type
  8152 ;;  rbuf            1    wreg     PTR unsigned char 
  8153 ;;		 -> modbusBuf(60), 
  8154 ;; Auto vars:     Size  Location     Type
  8155 ;;  rbuf            1   28[BANK0 ] PTR unsigned char 
  8156 ;;		 -> modbusBuf(60), 
  8157 ;;  startAddr       2   29[BANK0 ] unsigned int 
  8158 ;;  t16             2   24[BANK0 ] unsigned int 
  8159 ;;  pmdbs           1   27[BANK0 ] PTR struct .
  8160 ;;		 -> modbusBuf(60), 
  8161 ;;  i               1   26[BANK0 ] unsigned char 
  8162 ;;  fiSave          1   23[BANK0 ] unsigned char 
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  1    wreg      void 
  8165 ;; Registers used:
  8166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8173 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8174 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8175 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8176 ;;Total ram usage:       12 bytes
  8177 ;; Hardware stack levels used:    1
  8178 ;; Hardware stack levels required when called:    4
  8179 ;; This function calls:
  8180 ;;		_crc_append
  8181 ;;		_sys_data_save
  8182 ;;		_uart_send_len
  8183 ;; This function is called by:
  8184 ;;		_modbus_response_process
  8185 ;; This function uses a non-reentrant model
  8186 ;;
  8187                           
  8188                           
  8189                           ;psect for function _modbus_response_write_single_register
  8190  153D                     _modbus_response_write_single_register:	
  8191                           
  8192                           ;incstack = 0
  8193                           ; Regs used in _modbus_response_write_single_register: [wreg-fsr1h+status,2+status,0+pcl
      +                          ath+cstack]
  8194                           ;modbus_response_write_single_register@rbuf stored from wreg
  8195  153D  0020               	movlb	0	; select bank0
  8196  153E  00BC               	movwf	modbus_response_write_single_register@rbuf
  8197                           
  8198                           ;modbus.c: 117: uint16_t startAddr=0;
  8199  153F  01BD               	clrf	modbus_response_write_single_register@startAddr
  8200  1540  01BE               	clrf	modbus_response_write_single_register@startAddr+1
  8201                           
  8202                           ;modbus.c: 118: uint16_t t16;
  8203                           ;modbus.c: 119: uint8_t fiSave=0,i;
  8204  1541  01B7               	clrf	modbus_response_write_single_register@fiSave
  8205                           
  8206                           ;modbus.c: 120: st_modbusComReqStructDef* pmdbs=(st_modbusComReqStructDef*)rbuf;
  8207  1542  083C               	movf	modbus_response_write_single_register@rbuf,w
  8208  1543  00B3               	movwf	??_modbus_response_write_single_register
  8209  1544  0833               	movf	??_modbus_response_write_single_register,w
  8210  1545  00BB               	movwf	modbus_response_write_single_register@pmdbs
  8211                           
  8212                           ;modbus.c: 121: if(pmdbs->addr!=sysData.id && pmdbs->addr!=0)return;
  8213  1546  305C               	movlw	92
  8214  1547  0086               	movwf	6
  8215  1548  3023               	movlw	35
  8216  1549  0087               	movwf	7
  8217  154A  3142               	addfsr 1,2
  8218  154B  083B               	movf	modbus_response_write_single_register@pmdbs,w
  8219  154C  0084               	movwf	4
  8220  154D  3001               	movlw	1	; select bank2/3
  8221  154E  0085               	movwf	5
  8222  154F  0800               	movf	0,w
  8223  1550  0601               	xorwf	1,w
  8224  1551  1903               	skipnz
  8225  1552  2D5A               	goto	l5055
  8226  1553  083B               	movf	modbus_response_write_single_register@pmdbs,w
  8227  1554  0086               	movwf	6
  8228  1555  3001               	movlw	1	; select bank2/3
  8229  1556  0087               	movwf	7
  8230  1557  0801               	movf	1,w
  8231  1558  1D03               	btfss	3,2
  8232  1559  0008               	return
  8233  155A                     l5055:	
  8234                           
  8235                           ;modbus.c: 122: if(sysData.id==253 && pmdbs->addr==0)return;
  8236  155A  305C               	movlw	92
  8237  155B  0086               	movwf	6
  8238  155C  3023               	movlw	35
  8239  155D  0087               	movwf	7
  8240  155E  3142               	addfsr 1,2
  8241  155F  30FD               	movlw	253
  8242  1560  0601               	xorwf	1,w
  8243  1561  1D03               	btfss	3,2
  8244  1562  2D6A               	goto	l5061
  8245  1563  083B               	movf	modbus_response_write_single_register@pmdbs,w
  8246  1564  0086               	movwf	6
  8247  1565  3001               	movlw	1	; select bank2/3
  8248  1566  0087               	movwf	7
  8249  1567  0801               	movf	1,w
  8250  1568  1903               	btfsc	3,2
  8251  1569  0008               	return
  8252  156A                     l5061:	
  8253                           
  8254                           ;modbus.c: 123: startAddr=pmdbs->addr_hi;
  8255  156A  083B               	movf	modbus_response_write_single_register@pmdbs,w
  8256  156B  3E02               	addlw	2
  8257  156C  0086               	movwf	6
  8258  156D  3001               	movlw	1	; select bank2/3
  8259  156E  0087               	movwf	7
  8260  156F  0801               	movf	1,w
  8261  1570  00B3               	movwf	??_modbus_response_write_single_register
  8262  1571  01B4               	clrf	??_modbus_response_write_single_register+1
  8263  1572  0833               	movf	??_modbus_response_write_single_register,w
  8264  1573  00BD               	movwf	modbus_response_write_single_register@startAddr
  8265  1574  0834               	movf	??_modbus_response_write_single_register+1,w
  8266  1575  00BE               	movwf	modbus_response_write_single_register@startAddr+1
  8267                           
  8268                           ;modbus.c: 124: startAddr<<=8;
  8269  1576  3008               	movlw	8
  8270  1577                     u4385:	
  8271  1577  35BD               	lslf	modbus_response_write_single_register@startAddr,f
  8272  1578  0DBE               	rlf	modbus_response_write_single_register@startAddr+1,f
  8273  1579  0B89               	decfsz	9,f
  8274  157A  2D77               	goto	u4385
  8275                           
  8276                           ;modbus.c: 125: startAddr |= pmdbs->addr_lo;
  8277  157B  083B               	movf	modbus_response_write_single_register@pmdbs,w
  8278  157C  3E03               	addlw	3
  8279  157D  0086               	movwf	6
  8280  157E  3001               	movlw	1	; select bank2/3
  8281  157F  0087               	movwf	7
  8282  1580  0801               	movf	1,w
  8283  1581  00B3               	movwf	??_modbus_response_write_single_register
  8284  1582  01B4               	clrf	??_modbus_response_write_single_register+1
  8285  1583  0833               	movf	??_modbus_response_write_single_register,w
  8286  1584  04BD               	iorwf	modbus_response_write_single_register@startAddr,f
  8287  1585  0834               	movf	??_modbus_response_write_single_register+1,w
  8288  1586  04BE               	iorwf	modbus_response_write_single_register@startAddr+1,f
  8289                           
  8290                           ;modbus.c: 126: startAddr = startAddr & 0xff;
  8291  1587  30FF               	movlw	255
  8292  1588  053D               	andwf	modbus_response_write_single_register@startAddr,w
  8293  1589  00BD               	movwf	modbus_response_write_single_register@startAddr
  8294  158A  3000               	movlw	0
  8295  158B  053E               	andwf	modbus_response_write_single_register@startAddr+1,w
  8296  158C  00BE               	movwf	modbus_response_write_single_register@startAddr+1
  8297                           
  8298                           ;modbus.c: 127: if(startAddr==0x02){
  8299  158D  3002               	movlw	2
  8300  158E  063D               	xorwf	modbus_response_write_single_register@startAddr,w
  8301  158F  043E               	iorwf	modbus_response_write_single_register@startAddr+1,w
  8302  1590  1D03               	btfss	3,2
  8303  1591  2DA0               	goto	l5073
  8304                           
  8305                           ;modbus.c: 128: sysData.id=rbuf[5];
  8306  1592  083C               	movf	modbus_response_write_single_register@rbuf,w
  8307  1593  3E05               	addlw	5
  8308  1594  0086               	movwf	6
  8309  1595  3001               	movlw	1	; select bank2/3
  8310  1596  0087               	movwf	7
  8311  1597  0801               	movf	1,w
  8312  1598  00B3               	movwf	??_modbus_response_write_single_register
  8313  1599  305E               	movlw	94
  8314  159A  0086               	movwf	6
  8315  159B  3023               	movlw	35
  8316  159C  0087               	movwf	7
  8317  159D  0833               	movf	??_modbus_response_write_single_register,w
  8318  159E  0081               	movwf	1
  8319  159F  2E60               	goto	l840
  8320  15A0                     l5073:	
  8321                           ;modbus.c: 130: }else if(startAddr==0x03){
  8322                           
  8323                           ;modbus.c: 129: fiSave=1;
  8324                           
  8325  15A0  3003               	movlw	3
  8326  15A1  063D               	xorwf	modbus_response_write_single_register@startAddr,w
  8327  15A2  043E               	iorwf	modbus_response_write_single_register@startAddr+1,w
  8328  15A3  1D03               	btfss	3,2
  8329  15A4  2DBE               	goto	l5081
  8330                           
  8331                           ;modbus.c: 131: sysData.pidSetFlg1=rbuf[4];
  8332  15A5  083C               	movf	modbus_response_write_single_register@rbuf,w
  8333  15A6  3E04               	addlw	4
  8334  15A7  0086               	movwf	6
  8335  15A8  3001               	movlw	1	; select bank2/3
  8336  15A9  0087               	movwf	7
  8337  15AA  0801               	movf	1,w
  8338  15AB  00B3               	movwf	??_modbus_response_write_single_register
  8339  15AC  305D               	movlw	93
  8340  15AD  0086               	movwf	6
  8341  15AE  3023               	movlw	35
  8342  15AF  0087               	movwf	7
  8343  15B0  0833               	movf	??_modbus_response_write_single_register,w
  8344  15B1  0081               	movwf	1
  8345                           
  8346                           ;modbus.c: 132: sysData.pidSetFlg0=rbuf[5];
  8347  15B2  305C               	movlw	92
  8348  15B3  0086               	movwf	6
  8349  15B4  3023               	movlw	35
  8350  15B5  0087               	movwf	7
  8351  15B6  083C               	movf	modbus_response_write_single_register@rbuf,w
  8352  15B7  3E05               	addlw	5
  8353  15B8  0084               	movwf	4
  8354  15B9  3001               	movlw	1	; select bank2/3
  8355  15BA  0085               	movwf	5
  8356  15BB  0800               	movf	0,w
  8357  15BC  3FC0               	movwi [0]fsr1
  8358  15BD  2E60               	goto	l840
  8359  15BE                     l5081:	
  8360                           ;modbus.c: 134: }else if(startAddr>0x0f && startAddr < 0x10+30*2){
  8361                           
  8362                           ;modbus.c: 133: fiSave=1;
  8363                           
  8364  15BE  3000               	movlw	0
  8365  15BF  023E               	subwf	modbus_response_write_single_register@startAddr+1,w
  8366  15C0  3010               	movlw	16
  8367  15C1  1903               	skipnz
  8368  15C2  023D               	subwf	modbus_response_write_single_register@startAddr,w
  8369  15C3  1C03               	skipc
  8370  15C4  0008               	return
  8371  15C5  3000               	movlw	0
  8372  15C6  023E               	subwf	modbus_response_write_single_register@startAddr+1,w
  8373  15C7  304C               	movlw	76
  8374  15C8  1903               	skipnz
  8375  15C9  023D               	subwf	modbus_response_write_single_register@startAddr,w
  8376  15CA  1803               	skipnc
  8377  15CB  0008               	return
  8378                           
  8379                           ;modbus.c: 135: startAddr-=0x10;
  8380  15CC  3010               	movlw	16
  8381  15CD  02BD               	subwf	modbus_response_write_single_register@startAddr,f
  8382  15CE  3000               	movlw	0
  8383  15CF  3BBE               	subwfb	modbus_response_write_single_register@startAddr+1,f
  8384                           
  8385                           ;modbus.c: 136: if(startAddr & 0x01){
  8386  15D0  1C3D               	btfss	modbus_response_write_single_register@startAddr,0
  8387  15D1  2E62               	goto	l5113
  8388                           
  8389                           ;modbus.c: 137: t16=rbuf[4];
  8390  15D2  083C               	movf	modbus_response_write_single_register@rbuf,w
  8391  15D3  3E04               	addlw	4
  8392  15D4  0086               	movwf	6
  8393  15D5  3001               	movlw	1	; select bank2/3
  8394  15D6  0087               	movwf	7
  8395  15D7  0801               	movf	1,w
  8396  15D8  00B3               	movwf	??_modbus_response_write_single_register
  8397  15D9  01B4               	clrf	??_modbus_response_write_single_register+1
  8398  15DA  0833               	movf	??_modbus_response_write_single_register,w
  8399  15DB  00B8               	movwf	modbus_response_write_single_register@t16
  8400  15DC  0834               	movf	??_modbus_response_write_single_register+1,w
  8401  15DD  00B9               	movwf	modbus_response_write_single_register@t16+1
  8402                           
  8403                           ;modbus.c: 138: t16<<=8;
  8404  15DE  3008               	movlw	8
  8405  15DF                     u4445:	
  8406  15DF  35B8               	lslf	modbus_response_write_single_register@t16,f
  8407  15E0  0DB9               	rlf	modbus_response_write_single_register@t16+1,f
  8408  15E1  0B89               	decfsz	9,f
  8409  15E2  2DDF               	goto	u4445
  8410                           
  8411                           ;modbus.c: 139: t16 |= rbuf[5];
  8412  15E3  083C               	movf	modbus_response_write_single_register@rbuf,w
  8413  15E4  3E05               	addlw	5
  8414  15E5  0086               	movwf	6
  8415  15E6  3001               	movlw	1	; select bank2/3
  8416  15E7  0087               	movwf	7
  8417  15E8  0801               	movf	1,w
  8418  15E9  00B3               	movwf	??_modbus_response_write_single_register
  8419  15EA  01B4               	clrf	??_modbus_response_write_single_register+1
  8420  15EB  0833               	movf	??_modbus_response_write_single_register,w
  8421  15EC  04B8               	iorwf	modbus_response_write_single_register@t16,f
  8422  15ED  0834               	movf	??_modbus_response_write_single_register+1,w
  8423  15EE  04B9               	iorwf	modbus_response_write_single_register@t16+1,f
  8424                           
  8425                           ;modbus.c: 140: sysData.calibVoMV[startAddr>>1]=t16;
  8426  15EF  083E               	movf	modbus_response_write_single_register@startAddr+1,w
  8427  15F0  00B4               	movwf	??_modbus_response_write_single_register+1
  8428  15F1  083D               	movf	modbus_response_write_single_register@startAddr,w
  8429  15F2  00B3               	movwf	??_modbus_response_write_single_register
  8430  15F3  36B4               	lsrf	??_modbus_response_write_single_register+1,f
  8431  15F4  0CB3               	rrf	??_modbus_response_write_single_register,f
  8432  15F5  35B3               	lslf	??_modbus_response_write_single_register,f
  8433  15F6  0DB4               	rlf	??_modbus_response_write_single_register+1,f
  8434  15F7  30A2               	movlw	162
  8435  15F8  00B5               	movwf	??_modbus_response_write_single_register+2
  8436  15F9  3023               	movlw	35
  8437  15FA  00B6               	movwf	??_modbus_response_write_single_register+3
  8438  15FB  0833               	movf	??_modbus_response_write_single_register,w
  8439  15FC  0735               	addwf	??_modbus_response_write_single_register+2,w
  8440  15FD  0086               	movwf	6
  8441  15FE  0834               	movf	??_modbus_response_write_single_register+1,w
  8442  15FF  3D36               	addwfc	??_modbus_response_write_single_register+3,w
  8443  1600  0087               	movwf	7
  8444  1601  0838               	movf	modbus_response_write_single_register@t16,w
  8445  1602  3FC0               	movwi [0]fsr1
  8446  1603  0839               	movf	modbus_response_write_single_register@t16+1,w
  8447  1604  3FC1               	movwi [1]fsr1
  8448                           
  8449                           ;modbus.c: 141: sysData.calibRsAdc[startAddr>>1]=rsLoAvg;
  8450  1605  083E               	movf	modbus_response_write_single_register@startAddr+1,w
  8451  1606  00B4               	movwf	??_modbus_response_write_single_register+1
  8452  1607  083D               	movf	modbus_response_write_single_register@startAddr,w
  8453  1608  00B3               	movwf	??_modbus_response_write_single_register
  8454  1609  36B4               	lsrf	??_modbus_response_write_single_register+1,f
  8455  160A  0CB3               	rrf	??_modbus_response_write_single_register,f
  8456  160B  35B3               	lslf	??_modbus_response_write_single_register,f
  8457  160C  0DB4               	rlf	??_modbus_response_write_single_register+1,f
  8458  160D  3066               	movlw	102
  8459  160E  00B5               	movwf	??_modbus_response_write_single_register+2
  8460  160F  3023               	movlw	35
  8461  1610  00B6               	movwf	??_modbus_response_write_single_register+3
  8462  1611  0833               	movf	??_modbus_response_write_single_register,w
  8463  1612  0735               	addwf	??_modbus_response_write_single_register+2,w
  8464  1613  0086               	movwf	6
  8465  1614  0834               	movf	??_modbus_response_write_single_register+1,w
  8466  1615  3D36               	addwfc	??_modbus_response_write_single_register+3,w
  8467  1616  0087               	movwf	7
  8468  1617  084E               	movf	_rsLoAvg,w
  8469  1618  3FC0               	movwi [0]fsr1
  8470  1619  084F               	movf	_rsLoAvg+1,w
  8471  161A  3FC1               	movwi [1]fsr1
  8472                           
  8473                           ;modbus.c: 143: if(rbuf[1]==0x26){
  8474  161B  0A3C               	incf	modbus_response_write_single_register@rbuf,w
  8475  161C  0086               	movwf	6
  8476  161D  3001               	movlw	1	; select bank2/3
  8477  161E  0087               	movwf	7
  8478  161F  3026               	movlw	38
  8479  1620  0601               	xorwf	1,w
  8480  1621  1D03               	btfss	3,2
  8481  1622  2E60               	goto	l840
  8482                           
  8483                           ;modbus.c: 144: for(i=(startAddr>>1)+1;i<30;i++){
  8484  1623  083E               	movf	modbus_response_write_single_register@startAddr+1,w
  8485  1624  00B4               	movwf	??_modbus_response_write_single_register+1
  8486  1625  083D               	movf	modbus_response_write_single_register@startAddr,w
  8487  1626  00B3               	movwf	??_modbus_response_write_single_register
  8488  1627  36B4               	lsrf	??_modbus_response_write_single_register+1,f
  8489  1628  0CB3               	rrf	??_modbus_response_write_single_register,f
  8490  1629  0833               	movf	??_modbus_response_write_single_register,w
  8491  162A  3E01               	addlw	1
  8492  162B  00B5               	movwf	??_modbus_response_write_single_register+2
  8493  162C  0835               	movf	??_modbus_response_write_single_register+2,w
  8494  162D  00BA               	movwf	modbus_response_write_single_register@i
  8495  162E  301E               	movlw	30
  8496  162F  023A               	subwf	modbus_response_write_single_register@i,w
  8497  1630  1803               	btfsc	3,0
  8498  1631  2E60               	goto	l840
  8499  1632                     l5107:	
  8500                           
  8501                           ;modbus.c: 145: sysData.calibVoMV[i]=t16;
  8502  1632  083A               	movf	modbus_response_write_single_register@i,w
  8503  1633  00B3               	movwf	??_modbus_response_write_single_register
  8504  1634  01B4               	clrf	??_modbus_response_write_single_register+1
  8505  1635  35B3               	lslf	??_modbus_response_write_single_register,f
  8506  1636  0DB4               	rlf	??_modbus_response_write_single_register+1,f
  8507  1637  30A2               	movlw	162
  8508  1638  00B5               	movwf	??_modbus_response_write_single_register+2
  8509  1639  3023               	movlw	35
  8510  163A  00B6               	movwf	??_modbus_response_write_single_register+3
  8511  163B  0833               	movf	??_modbus_response_write_single_register,w
  8512  163C  0735               	addwf	??_modbus_response_write_single_register+2,w
  8513  163D  0086               	movwf	6
  8514  163E  0834               	movf	??_modbus_response_write_single_register+1,w
  8515  163F  3D36               	addwfc	??_modbus_response_write_single_register+3,w
  8516  1640  0087               	movwf	7
  8517  1641  0838               	movf	modbus_response_write_single_register@t16,w
  8518  1642  3FC0               	movwi [0]fsr1
  8519  1643  0839               	movf	modbus_response_write_single_register@t16+1,w
  8520  1644  3FC1               	movwi [1]fsr1
  8521                           
  8522                           ;modbus.c: 146: sysData.calibRsAdc[i]=rsLoAvg;
  8523  1645  083A               	movf	modbus_response_write_single_register@i,w
  8524  1646  00B3               	movwf	??_modbus_response_write_single_register
  8525  1647  01B4               	clrf	??_modbus_response_write_single_register+1
  8526  1648  35B3               	lslf	??_modbus_response_write_single_register,f
  8527  1649  0DB4               	rlf	??_modbus_response_write_single_register+1,f
  8528  164A  3066               	movlw	102
  8529  164B  00B5               	movwf	??_modbus_response_write_single_register+2
  8530  164C  3023               	movlw	35
  8531  164D  00B6               	movwf	??_modbus_response_write_single_register+3
  8532  164E  0833               	movf	??_modbus_response_write_single_register,w
  8533  164F  0735               	addwf	??_modbus_response_write_single_register+2,w
  8534  1650  0086               	movwf	6
  8535  1651  0834               	movf	??_modbus_response_write_single_register+1,w
  8536  1652  3D36               	addwfc	??_modbus_response_write_single_register+3,w
  8537  1653  0087               	movwf	7
  8538  1654  084E               	movf	_rsLoAvg,w
  8539  1655  3FC0               	movwi [0]fsr1
  8540  1656  084F               	movf	_rsLoAvg+1,w
  8541  1657  3FC1               	movwi [1]fsr1
  8542  1658  3001               	movlw	1
  8543  1659  00B3               	movwf	??_modbus_response_write_single_register
  8544  165A  0833               	movf	??_modbus_response_write_single_register,w
  8545  165B  07BA               	addwf	modbus_response_write_single_register@i,f
  8546  165C  301E               	movlw	30
  8547  165D  023A               	subwf	modbus_response_write_single_register@i,w
  8548  165E  1C03               	skipc
  8549  165F  2E32               	goto	l5107
  8550  1660                     l840:	
  8551                           
  8552                           ;modbus.c: 147: }
  8553                           ;modbus.c: 148: }
  8554                           ;modbus.c: 149: fiSave=1;
  8555  1660  01B7               	clrf	modbus_response_write_single_register@fiSave
  8556  1661  0AB7               	incf	modbus_response_write_single_register@fiSave,f
  8557  1662                     l5113:	
  8558                           ;modbus.c: 153: return;
  8559                           
  8560                           ;modbus.c: 150: }
  8561                           ;modbus.c: 151: }else{
  8562                           
  8563                           
  8564                           ;modbus.c: 154: }
  8565                           ;modbus.c: 155: if(fiSave)sys_data_save();
  8566  1662  0837               	movf	modbus_response_write_single_register@fiSave,w
  8567  1663  1903               	btfsc	3,2
  8568  1664  2E68               	goto	l5117
  8569  1665  319B  23FD  3195   	fcall	_sys_data_save
  8570  1668                     l5117:	
  8571                           
  8572                           ;modbus.c: 156: if(pmdbs->addr==0)return;
  8573  1668  0020               	movlb	0	; select bank0
  8574  1669  083B               	movf	modbus_response_write_single_register@pmdbs,w
  8575  166A  0086               	movwf	6
  8576  166B  3001               	movlw	1	; select bank2/3
  8577  166C  0087               	movwf	7
  8578  166D  0801               	movf	1,w
  8579  166E  1903               	btfsc	3,2
  8580  166F  0008               	return
  8581                           
  8582                           ;modbus.c: 157: rbuf[0]=sysData.id;
  8583  1670  305C               	movlw	92
  8584  1671  0086               	movwf	6
  8585  1672  3023               	movlw	35
  8586  1673  0087               	movwf	7
  8587  1674  3142               	addfsr 1,2
  8588  1675  0801               	movf	1,w
  8589  1676  00B3               	movwf	??_modbus_response_write_single_register
  8590  1677  083C               	movf	modbus_response_write_single_register@rbuf,w
  8591  1678  0086               	movwf	6
  8592  1679  3001               	movlw	1	; select bank2/3
  8593  167A  0087               	movwf	7
  8594  167B  0833               	movf	??_modbus_response_write_single_register,w
  8595  167C  0081               	movwf	1
  8596                           
  8597                           ;modbus.c: 158: crc_append(rbuf,6);
  8598  167D  083C               	movf	modbus_response_write_single_register@rbuf,w
  8599  167E  00A8               	movwf	crc_append@message
  8600  167F  3001               	movlw	1
  8601  1680  00A9               	movwf	crc_append@message+1
  8602  1681  3006               	movlw	6
  8603  1682  00AA               	movwf	crc_append@n
  8604  1683  3000               	movlw	0
  8605  1684  00AB               	movwf	crc_append@n+1
  8606  1685  319B  2360  3195   	fcall	_crc_append
  8607                           
  8608                           ;modbus.c: 159: uart_send_len(rbuf,8);
  8609  1688  3008               	movlw	8
  8610  1689  0020               	movlb	0	; select bank0
  8611  168A  00B3               	movwf	??_modbus_response_write_single_register
  8612  168B  0833               	movf	??_modbus_response_write_single_register,w
  8613  168C  00F3               	movwf	uart_send_len@len
  8614  168D  083C               	movf	modbus_response_write_single_register@rbuf,w
  8615  168E  319A  22C6         	fcall	_uart_send_len
  8616  1690  0008               	return
  8617  1691                     __end_of_modbus_response_write_single_register:	
  8618                           
  8619                           	psect	text16
  8620  10AF                     __ptext16:	
  8621 ;; *************** function _modbus_response_write_mult_register *****************
  8622 ;; Defined at:
  8623 ;;		line 162 in file "src/api/modbus.c"
  8624 ;; Parameters:    Size  Location     Type
  8625 ;;  rbuf            1    wreg     PTR unsigned char 
  8626 ;;		 -> modbusBuf(60), 
  8627 ;; Auto vars:     Size  Location     Type
  8628 ;;  rbuf            1   21[BANK0 ] PTR unsigned char 
  8629 ;;		 -> modbusBuf(60), 
  8630 ;;  stb             1   22[BANK0 ] PTR struct .
  8631 ;;		 -> modbusBuf(60), 
  8632 ;;  len             1   20[BANK0 ] unsigned char 
  8633 ;;  startAddr       1   19[BANK0 ] unsigned char 
  8634 ;; Return value:  Size  Location     Type
  8635 ;;                  1    wreg      void 
  8636 ;; Registers used:
  8637 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8638 ;; Tracked objects:
  8639 ;;		On entry : 0/0
  8640 ;;		On exit  : 0/0
  8641 ;;		Unchanged: 0/0
  8642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8644 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8645 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8646 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8647 ;;Total ram usage:        5 bytes
  8648 ;; Hardware stack levels used:    1
  8649 ;; Hardware stack levels required when called:    4
  8650 ;; This function calls:
  8651 ;;		_crc_append
  8652 ;;		_sys_data_save
  8653 ;;		_uart_send_len
  8654 ;; This function is called by:
  8655 ;;		_modbus_response_process
  8656 ;; This function uses a non-reentrant model
  8657 ;;
  8658                           
  8659                           
  8660                           ;psect for function _modbus_response_write_mult_register
  8661  10AF                     _modbus_response_write_mult_register:	
  8662                           
  8663                           ;incstack = 0
  8664                           ; Regs used in _modbus_response_write_mult_register: [wreg-fsr1h+status,2+status,0+pclat
      +                          h+cstack]
  8665                           ;modbus_response_write_mult_register@rbuf stored from wreg
  8666  10AF  0020               	movlb	0	; select bank0
  8667  10B0  00B5               	movwf	modbus_response_write_mult_register@rbuf
  8668                           
  8669                           ;modbus.c: 164: uint8_t startAddr,len;
  8670                           ;modbus.c: 165: st_modbusWriteMultReg_t* stb=(st_modbusWriteMultReg_t*)rbuf;
  8671  10B1  0835               	movf	modbus_response_write_mult_register@rbuf,w
  8672  10B2  00F7               	movwf	??_modbus_response_write_mult_register
  8673  10B3  0877               	movf	??_modbus_response_write_mult_register,w
  8674  10B4  00B6               	movwf	modbus_response_write_mult_register@stb
  8675                           
  8676                           ;modbus.c: 166: if(stb->addr!=sysData.id || stb->addr==0)return;
  8677  10B5  305C               	movlw	92
  8678  10B6  0086               	movwf	6
  8679  10B7  3023               	movlw	35
  8680  10B8  0087               	movwf	7
  8681  10B9  3142               	addfsr 1,2
  8682  10BA  0836               	movf	modbus_response_write_mult_register@stb,w
  8683  10BB  0084               	movwf	4
  8684  10BC  3001               	movlw	1	; select bank2/3
  8685  10BD  0085               	movwf	5
  8686  10BE  0800               	movf	0,w
  8687  10BF  0601               	xorwf	1,w
  8688  10C0  1D03               	skipz
  8689  10C1  0008               	return
  8690  10C2  0836               	movf	modbus_response_write_mult_register@stb,w
  8691  10C3  0086               	movwf	6
  8692  10C4  3001               	movlw	1	; select bank2/3
  8693  10C5  0087               	movwf	7
  8694  10C6  0801               	movf	1,w
  8695  10C7  1903               	btfsc	3,2
  8696  10C8  0008               	return
  8697                           
  8698                           ;modbus.c: 167: startAddr=stb->addr_lo;
  8699  10C9  0836               	movf	modbus_response_write_mult_register@stb,w
  8700  10CA  0086               	movwf	6
  8701  10CB  3001               	movlw	1	; select bank2/3
  8702  10CC  0087               	movwf	7
  8703  10CD  3001               	movlw	1	; select bank2/3
  8704  10CE  3F43               	moviw [3]fsr1
  8705  10CF  00B3               	movwf	modbus_response_write_mult_register@startAddr
  8706                           
  8707                           ;modbus.c: 168: len=stb->len_lo;
  8708  10D0  0836               	movf	modbus_response_write_mult_register@stb,w
  8709  10D1  0086               	movwf	6
  8710  10D2  3001               	movlw	1	; select bank2/3
  8711  10D3  0087               	movwf	7
  8712  10D4  3001               	movlw	1	; select bank2/3
  8713  10D5  3F45               	moviw [5]fsr1
  8714  10D6  00B4               	movwf	modbus_response_write_mult_register@len
  8715                           
  8716                           ;modbus.c: 169: if(len!=3)return ;
  8717  10D7  3003               	movlw	3
  8718  10D8  0634               	xorwf	modbus_response_write_mult_register@len,w
  8719  10D9  1D03               	btfss	3,2
  8720  10DA  0008               	return
  8721                           
  8722                           ;modbus.c: 170: if(startAddr!=4)return;
  8723  10DB  3004               	movlw	4
  8724  10DC  0633               	xorwf	modbus_response_write_mult_register@startAddr,w
  8725  10DD  1D03               	btfss	3,2
  8726  10DE  0008               	return
  8727                           
  8728                           ;modbus.c: 171: sysData.pidKp=(stb->data[0]<<8)|(stb->data[1]);
  8729  10DF  0836               	movf	modbus_response_write_mult_register@stb,w
  8730  10E0  3E06               	addlw	6
  8731  10E1  0084               	movwf	4
  8732  10E2  3001               	movlw	1	; select bank2/3
  8733  10E3  0085               	movwf	5
  8734  10E4  0800               	movf	0,w
  8735  10E5  00F7               	movwf	??_modbus_response_write_mult_register
  8736  10E6  0836               	movf	modbus_response_write_mult_register@stb,w
  8737  10E7  3E07               	addlw	7
  8738  10E8  0084               	movwf	4
  8739  10E9  3001               	movlw	1	; select bank2/3
  8740  10EA  0085               	movwf	5
  8741  10EB  305C               	movlw	92
  8742  10EC  0086               	movwf	6
  8743  10ED  3023               	movlw	35
  8744  10EE  0087               	movwf	7
  8745  10EF  3144               	addfsr 1,4
  8746  10F0  0800               	movf	0,w
  8747  10F1  3FC0               	movwi [0]fsr1
  8748  10F2  0877               	movf	??_modbus_response_write_mult_register,w
  8749  10F3  3FC1               	movwi [1]fsr1
  8750                           
  8751                           ;modbus.c: 172: sysData.pidTi=(stb->data[2]<<8)|(stb->data[3]);
  8752  10F4  0836               	movf	modbus_response_write_mult_register@stb,w
  8753  10F5  3E08               	addlw	8
  8754  10F6  0084               	movwf	4
  8755  10F7  3001               	movlw	1	; select bank2/3
  8756  10F8  0085               	movwf	5
  8757  10F9  0800               	movf	0,w
  8758  10FA  00F7               	movwf	??_modbus_response_write_mult_register
  8759  10FB  0836               	movf	modbus_response_write_mult_register@stb,w
  8760  10FC  3E09               	addlw	9
  8761  10FD  0084               	movwf	4
  8762  10FE  3001               	movlw	1	; select bank2/3
  8763  10FF  0085               	movwf	5
  8764  1100  305C               	movlw	92
  8765  1101  0086               	movwf	6
  8766  1102  3023               	movlw	35
  8767  1103  0087               	movwf	7
  8768  1104  3146               	addfsr 1,6
  8769  1105  0800               	movf	0,w
  8770  1106  3FC0               	movwi [0]fsr1
  8771  1107  0877               	movf	??_modbus_response_write_mult_register,w
  8772  1108  3FC1               	movwi [1]fsr1
  8773                           
  8774                           ;modbus.c: 173: sysData.pidTd=(stb->data[4]<<8)|(stb->data[5]);
  8775  1109  0836               	movf	modbus_response_write_mult_register@stb,w
  8776  110A  3E0A               	addlw	10
  8777  110B  0084               	movwf	4
  8778  110C  3001               	movlw	1	; select bank2/3
  8779  110D  0085               	movwf	5
  8780  110E  0800               	movf	0,w
  8781  110F  00F7               	movwf	??_modbus_response_write_mult_register
  8782  1110  0836               	movf	modbus_response_write_mult_register@stb,w
  8783  1111  3E0B               	addlw	11
  8784  1112  0084               	movwf	4
  8785  1113  3001               	movlw	1	; select bank2/3
  8786  1114  0085               	movwf	5
  8787  1115  305C               	movlw	92
  8788  1116  0086               	movwf	6
  8789  1117  3023               	movlw	35
  8790  1118  0087               	movwf	7
  8791  1119  3148               	addfsr 1,8
  8792  111A  0800               	movf	0,w
  8793  111B  3FC0               	movwi [0]fsr1
  8794  111C  0877               	movf	??_modbus_response_write_mult_register,w
  8795  111D  3FC1               	movwi [1]fsr1
  8796                           
  8797                           ;modbus.c: 174: sys_data_save();
  8798  111E  319B  23FD  3190   	fcall	_sys_data_save
  8799                           
  8800                           ;modbus.c: 175: crc_append(rbuf,sizeof(st_modbusWriteMultReg_t)-2);
  8801  1121  0020               	movlb	0	; select bank0
  8802  1122  0835               	movf	modbus_response_write_mult_register@rbuf,w
  8803  1123  00A8               	movwf	crc_append@message
  8804  1124  3001               	movlw	1
  8805  1125  00A9               	movwf	crc_append@message+1
  8806  1126  3006               	movlw	6
  8807  1127  00AA               	movwf	crc_append@n
  8808  1128  3000               	movlw	0
  8809  1129  00AB               	movwf	crc_append@n+1
  8810  112A  319B  2360  3190   	fcall	_crc_append
  8811                           
  8812                           ;modbus.c: 176: uart_send_len(rbuf,sizeof(st_modbusWriteMultReg_t));
  8813  112D  3008               	movlw	8
  8814  112E  00F7               	movwf	??_modbus_response_write_mult_register
  8815  112F  0877               	movf	??_modbus_response_write_mult_register,w
  8816  1130  00F3               	movwf	uart_send_len@len
  8817  1131  0020               	movlb	0	; select bank0
  8818  1132  0835               	movf	modbus_response_write_mult_register@rbuf,w
  8819  1133  319A  22C6         	fcall	_uart_send_len
  8820  1135  0008               	return
  8821  1136                     __end_of_modbus_response_write_mult_register:	
  8822                           
  8823                           	psect	text17
  8824  1BFD                     __ptext17:	
  8825 ;; *************** function _sys_data_save *****************
  8826 ;; Defined at:
  8827 ;;		line 95 in file "src/api/sysData.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;		None
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;		None
  8832 ;; Return value:  Size  Location     Type
  8833 ;;                  1    wreg      void 
  8834 ;; Registers used:
  8835 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8836 ;; Tracked objects:
  8837 ;;		On entry : 0/0
  8838 ;;		On exit  : 0/0
  8839 ;;		Unchanged: 0/0
  8840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8845 ;;Total ram usage:        0 bytes
  8846 ;; Hardware stack levels used:    1
  8847 ;; Hardware stack levels required when called:    3
  8848 ;; This function calls:
  8849 ;;		_crc_append
  8850 ;;		_my_flash_read_system_erase
  8851 ;;		_my_flash_system_write
  8852 ;; This function is called by:
  8853 ;;		_sys_data_init
  8854 ;;		_modbus_response_write_single_register
  8855 ;;		_modbus_response_write_mult_register
  8856 ;;		_main
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860                           
  8861                           ;psect for function _sys_data_save
  8862  1BFD                     _sys_data_save:	
  8863                           
  8864                           ;sysData.c: 97: crc_append((uint8_t*)&sysData,sizeof(sysData_t)-2);
  8865                           
  8866                           ;incstack = 0
  8867                           ; Regs used in _sys_data_save: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8868  1BFD  305C               	movlw	92
  8869  1BFE  0020               	movlb	0	; select bank0
  8870  1BFF  00A8               	movwf	crc_append@message
  8871  1C00  3023               	movlw	35
  8872  1C01  00A9               	movwf	crc_append@message+1
  8873  1C02  3082               	movlw	130
  8874  1C03  00AA               	movwf	crc_append@n
  8875  1C04  3000               	movlw	0
  8876  1C05  00AB               	movwf	crc_append@n+1
  8877  1C06  319B  2360  319B   	fcall	_crc_append
  8878                           
  8879                           ;sysData.c: 98: my_flash_read_system_erase();
  8880  1C09  319A  22E9  319B   	fcall	_my_flash_read_system_erase
  8881                           
  8882                           ;sysData.c: 99: my_flash_system_write((uint8_t*)&sysData,sizeof(sysData_t));
  8883  1C0C  305C               	movlw	92
  8884  1C0D  00F3               	movwf	my_flash_system_write@buf
  8885  1C0E  3023               	movlw	35
  8886  1C0F  00F4               	movwf	my_flash_system_write@buf+1
  8887  1C10  3084               	movlw	132
  8888  1C11  00F5               	movwf	my_flash_system_write@len
  8889  1C12  3000               	movlw	0
  8890  1C13  00F6               	movwf	my_flash_system_write@len+1
  8891  1C14  3192  22EB         	fcall	_my_flash_system_write
  8892                           
  8893                           ;sysData.c: 100: PidKp=sysData.pidKp;
  8894  1C16  305C               	movlw	92
  8895  1C17  0086               	movwf	6
  8896  1C18  3023               	movlw	35
  8897  1C19  0087               	movwf	7
  8898  1C1A  3144               	addfsr 1,4
  8899  1C1B  3F40               	moviw [0]fsr1
  8900  1C1C  0020               	movlb	0	; select bank0
  8901  1C1D  00D2               	movwf	_PidKp
  8902  1C1E  3F41               	moviw [1]fsr1
  8903  1C1F  00D3               	movwf	_PidKp+1
  8904                           
  8905                           ;sysData.c: 101: PidTi=sysData.pidTi;
  8906  1C20  305C               	movlw	92
  8907  1C21  0086               	movwf	6
  8908  1C22  3023               	movlw	35
  8909  1C23  0087               	movwf	7
  8910  1C24  3146               	addfsr 1,6
  8911  1C25  3F40               	moviw [0]fsr1
  8912  1C26  0021               	movlb	1	; select bank1
  8913  1C27  00CE               	movwf	_PidTi^(0+128)
  8914  1C28  3F41               	moviw [1]fsr1
  8915  1C29  00CF               	movwf	(_PidTi+1)^(0+128)
  8916                           
  8917                           ;sysData.c: 102: PidTd=sysData.pidTd;;
  8918  1C2A  305C               	movlw	92
  8919  1C2B  0086               	movwf	6
  8920  1C2C  3023               	movlw	35
  8921  1C2D  0087               	movwf	7
  8922  1C2E  3148               	addfsr 1,8
  8923  1C2F  3F40               	moviw [0]fsr1
  8924  1C30  00CC               	movwf	_PidTd^(0+128)
  8925  1C31  3F41               	moviw [1]fsr1
  8926  1C32  00CD               	movwf	(_PidTd+1)^(0+128)
  8927  1C33  0008               	return
  8928  1C34                     __end_of_sys_data_save:	
  8929                           
  8930                           	psect	text18
  8931  12EB                     __ptext18:	
  8932 ;; *************** function _my_flash_system_write *****************
  8933 ;; Defined at:
  8934 ;;		line 47 in file "src/api/sysData.c"
  8935 ;; Parameters:    Size  Location     Type
  8936 ;;  buf             2    3[COMMON] PTR unsigned char 
  8937 ;;		 -> sysData(132), 
  8938 ;;  len             2    5[COMMON] unsigned int 
  8939 ;; Auto vars:     Size  Location     Type
  8940 ;;  i               2   11[BANK0 ] unsigned int 
  8941 ;;  flashAddr       2    9[BANK0 ] unsigned int 
  8942 ;;  loc             2    7[BANK0 ] unsigned int 
  8943 ;;  blocNum         2    5[BANK0 ] unsigned int 
  8944 ;;  j               2    3[BANK0 ] unsigned int 
  8945 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
  8946 ;; Return value:  Size  Location     Type
  8947 ;;                  2    3[COMMON] unsigned int 
  8948 ;; Registers used:
  8949 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8950 ;; Tracked objects:
  8951 ;;		On entry : 0/0
  8952 ;;		On exit  : 0/0
  8953 ;;		Unchanged: 0/0
  8954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8955 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8956 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8957 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8958 ;;      Totals:         4      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8959 ;;Total ram usage:       17 bytes
  8960 ;; Hardware stack levels used:    1
  8961 ;; Hardware stack levels required when called:    1
  8962 ;; This function calls:
  8963 ;;		Nothing
  8964 ;; This function is called by:
  8965 ;;		_sys_data_save
  8966 ;; This function uses a non-reentrant model
  8967 ;;
  8968                           
  8969                           
  8970                           ;psect for function _my_flash_system_write
  8971  12EB                     _my_flash_system_write:	
  8972                           
  8973                           ;sysData.c: 49: uint16_t blocNum=0;
  8974                           
  8975                           ;incstack = 0
  8976                           ; Regs used in _my_flash_system_write: [wreg+fsr1l+fsr1h+status,2+status,0]
  8977  12EB  0020               	movlb	0	; select bank0
  8978  12EC  01A5               	clrf	my_flash_system_write@blocNum
  8979  12ED  01A6               	clrf	my_flash_system_write@blocNum+1
  8980                           
  8981                           ;sysData.c: 50: uint16_t loc,j,i=0;
  8982  12EE  01AB               	clrf	my_flash_system_write@i
  8983  12EF  01AC               	clrf	my_flash_system_write@i+1
  8984                           
  8985                           ;sysData.c: 51: uint16_t flashAddr=0x1f00;
  8986  12F0  3000               	movlw	0
  8987  12F1  00A9               	movwf	my_flash_system_write@flashAddr
  8988  12F2  301F               	movlw	31
  8989  12F3  00AA               	movwf	my_flash_system_write@flashAddr+1
  8990                           
  8991                           ;sysData.c: 52: uint8_t GIEBitValue=INTCONbits.GIE;
  8992  12F4  3000               	movlw	0
  8993  12F5  1B8B               	btfsc	11,7	;volatile
  8994  12F6  3001               	movlw	1
  8995  12F7  00A2               	movwf	my_flash_system_write@GIEBitValue
  8996                           
  8997                           ;sysData.c: 54: blocNum=len/32;
  8998  12F8  0876               	movf	my_flash_system_write@len+1,w
  8999  12F9  00A1               	movwf	??_my_flash_system_write+1
  9000  12FA  0875               	movf	my_flash_system_write@len,w
  9001  12FB  00A0               	movwf	??_my_flash_system_write
  9002  12FC  3005               	movlw	5
  9003  12FD                     u4155:	
  9004  12FD  36A1               	lsrf	??_my_flash_system_write+1,f
  9005  12FE  0CA0               	rrf	??_my_flash_system_write,f
  9006  12FF  0B89               	decfsz	9,f
  9007  1300  2AFD               	goto	u4155
  9008  1301  0820               	movf	??_my_flash_system_write,w
  9009  1302  00A5               	movwf	my_flash_system_write@blocNum
  9010  1303  0821               	movf	??_my_flash_system_write+1,w
  9011  1304  00A6               	movwf	my_flash_system_write@blocNum+1
  9012                           
  9013                           ;sysData.c: 55: if(len%32)blocNum++;
  9014  1305  301F               	movlw	31
  9015  1306  0575               	andwf	my_flash_system_write@len,w
  9016  1307  00A0               	movwf	??_my_flash_system_write
  9017  1308  3000               	movlw	0
  9018  1309  0576               	andwf	my_flash_system_write@len+1,w
  9019  130A  00A1               	movwf	??_my_flash_system_write+1
  9020  130B  0820               	movf	??_my_flash_system_write,w
  9021  130C  0421               	iorwf	??_my_flash_system_write+1,w
  9022  130D  1903               	btfsc	3,2
  9023  130E  2B13               	goto	l4819
  9024  130F  3001               	movlw	1
  9025  1310  07A5               	addwf	my_flash_system_write@blocNum,f
  9026  1311  3000               	movlw	0
  9027  1312  3DA6               	addwfc	my_flash_system_write@blocNum+1,f
  9028  1313                     l4819:	
  9029                           
  9030                           ;sysData.c: 57: INTCONbits.GIE = 0;
  9031  1313  138B               	bcf	11,7	;volatile
  9032                           
  9033                           ;sysData.c: 58: loc=0;
  9034  1314  01A7               	clrf	my_flash_system_write@loc
  9035  1315  01A8               	clrf	my_flash_system_write@loc+1
  9036                           
  9037                           ;sysData.c: 59: for(j=0;j<blocNum;j++){
  9038  1316  01A3               	clrf	my_flash_system_write@j
  9039  1317  01A4               	clrf	my_flash_system_write@j+1
  9040  1318                     l750:	
  9041  1318  0826               	movf	my_flash_system_write@blocNum+1,w
  9042  1319  0224               	subwf	my_flash_system_write@j+1,w
  9043  131A  1D03               	skipz
  9044  131B  2B1E               	goto	u4215
  9045  131C  0825               	movf	my_flash_system_write@blocNum,w
  9046  131D  0223               	subwf	my_flash_system_write@j,w
  9047  131E                     u4215:	
  9048  131E  1803               	btfsc	3,0
  9049  131F  2B7F               	goto	l4859
  9050                           
  9051                           ;sysData.c: 60: PMCON1bits.CFGS = 0;
  9052  1320  0023               	movlb	3	; select bank3
  9053  1321  1315               	bcf	21,6	;volatile
  9054                           
  9055                           ;sysData.c: 61: PMCON1bits.WREN = 1;
  9056  1322  1515               	bsf	21,2	;volatile
  9057                           
  9058                           ;sysData.c: 62: PMCON1bits.LWLO = 1;
  9059  1323  1695               	bsf	21,5	;volatile
  9060                           
  9061                           ;sysData.c: 64: for(i=0;i<32;i++){
  9062  1324  0020               	movlb	0	; select bank0
  9063  1325  01AB               	clrf	my_flash_system_write@i
  9064  1326  01AC               	clrf	my_flash_system_write@i+1
  9065  1327  3000               	movlw	0
  9066  1328  022C               	subwf	my_flash_system_write@i+1,w
  9067  1329  3020               	movlw	32
  9068  132A  1903               	skipnz
  9069  132B  022B               	subwf	my_flash_system_write@i,w
  9070  132C  1803               	btfsc	3,0
  9071  132D  2B77               	goto	l753
  9072  132E                     l4831:	
  9073                           
  9074                           ;sysData.c: 66: PMADRL = (flashAddr & 0xFF);
  9075  132E  0829               	movf	my_flash_system_write@flashAddr,w
  9076  132F  0023               	movlb	3	; select bank3
  9077  1330  0091               	movwf	17	;volatile
  9078                           
  9079                           ;sysData.c: 68: PMADRH = ((flashAddr & 0xFF00) >> 8);
  9080  1331  0020               	movlb	0	; select bank0
  9081  1332  082A               	movf	my_flash_system_write@flashAddr+1,w
  9082  1333  0023               	movlb	3	; select bank3
  9083  1334  0092               	movwf	18	;volatile
  9084                           
  9085                           ;sysData.c: 71: if(loc<len){
  9086  1335  0876               	movf	my_flash_system_write@len+1,w
  9087  1336  0020               	movlb	0	; select bank0
  9088  1337  0228               	subwf	my_flash_system_write@loc+1,w
  9089  1338  1D03               	skipz
  9090  1339  2B3C               	goto	u4185
  9091  133A  0875               	movf	my_flash_system_write@len,w
  9092  133B  0227               	subwf	my_flash_system_write@loc,w
  9093  133C                     u4185:	
  9094  133C  1803               	skipnc
  9095  133D  2B48               	goto	l4839
  9096                           
  9097                           ;sysData.c: 72: PMDATL = buf[loc];
  9098  133E  0827               	movf	my_flash_system_write@loc,w
  9099  133F  0773               	addwf	my_flash_system_write@buf,w
  9100  1340  0086               	movwf	6
  9101  1341  0828               	movf	my_flash_system_write@loc+1,w
  9102  1342  3D74               	addwfc	my_flash_system_write@buf+1,w
  9103  1343  0087               	movwf	7
  9104  1344  0801               	movf	1,w
  9105  1345  0023               	movlb	3	; select bank3
  9106  1346  0093               	movwf	19	;volatile
  9107                           
  9108                           ;sysData.c: 73: }else{
  9109  1347  2B4A               	goto	l4841
  9110  1348                     l4839:	
  9111                           
  9112                           ;sysData.c: 74: PMDATL = 0x00;
  9113  1348  0023               	movlb	3	; select bank3
  9114  1349  0193               	clrf	19	;volatile
  9115  134A                     l4841:	
  9116                           
  9117                           ;sysData.c: 75: }
  9118                           ;sysData.c: 76: loc++;
  9119  134A  3001               	movlw	1
  9120  134B  0020               	movlb	0	; select bank0
  9121  134C  07A7               	addwf	my_flash_system_write@loc,f
  9122  134D  3000               	movlw	0
  9123  134E  3DA8               	addwfc	my_flash_system_write@loc+1,f
  9124                           
  9125                           ;sysData.c: 77: PMDATH = 0x00;
  9126  134F  0023               	movlb	3	; select bank3
  9127  1350  0194               	clrf	20	;volatile
  9128                           
  9129                           ;sysData.c: 78: if((i%32) == 32 -1 ){
  9130  1351  301F               	movlw	31
  9131  1352  0020               	movlb	0	; select bank0
  9132  1353  052B               	andwf	my_flash_system_write@i,w
  9133  1354  00A0               	movwf	??_my_flash_system_write
  9134  1355  3000               	movlw	0
  9135  1356  052C               	andwf	my_flash_system_write@i+1,w
  9136  1357  00A1               	movwf	??_my_flash_system_write+1
  9137  1358  301F               	movlw	31
  9138  1359  0620               	xorwf	??_my_flash_system_write,w
  9139  135A  0421               	iorwf	??_my_flash_system_write+1,w
  9140  135B  1D03               	btfss	3,2
  9141  135C  2B5F               	goto	l4849
  9142                           
  9143                           ;sysData.c: 79: PMCON1bits.LWLO = 0;
  9144  135D  0023               	movlb	3	; select bank3
  9145  135E  1295               	bcf	21,5	;volatile
  9146  135F                     l4849:	
  9147                           
  9148                           ;sysData.c: 80: }
  9149                           ;sysData.c: 82: PMCON2 = 0x55;
  9150  135F  3055               	movlw	85
  9151  1360  0023               	movlb	3	; select bank3
  9152  1361  0096               	movwf	22	;volsfr
  9153                           
  9154                           ;sysData.c: 83: PMCON2 = 0xAA;
  9155  1362  30AA               	movlw	170
  9156  1363  0096               	movwf	22	;volsfr
  9157                           
  9158                           ;sysData.c: 84: PMCON1bits.WR = 1;
  9159  1364  1495               	bsf	21,1	;volatile
  9160                           
  9161                           ;sysData.c: 85: __nop();
  9162  1365  0000               	nop
  9163                           
  9164                           ;sysData.c: 86: __nop();
  9165  1366  0000               	nop
  9166                           
  9167                           ;sysData.c: 87: flashAddr++;
  9168  1367  3001               	movlw	1
  9169  1368  0020               	movlb	0	; select bank0
  9170  1369  07A9               	addwf	my_flash_system_write@flashAddr,f
  9171  136A  3000               	movlw	0
  9172  136B  3DAA               	addwfc	my_flash_system_write@flashAddr+1,f
  9173  136C  3001               	movlw	1
  9174  136D  07AB               	addwf	my_flash_system_write@i,f
  9175  136E  3000               	movlw	0
  9176  136F  3DAC               	addwfc	my_flash_system_write@i+1,f
  9177  1370  3000               	movlw	0
  9178  1371  022C               	subwf	my_flash_system_write@i+1,w
  9179  1372  3020               	movlw	32
  9180  1373  1903               	skipnz
  9181  1374  022B               	subwf	my_flash_system_write@i,w
  9182  1375  1C03               	skipc
  9183  1376  2B2E               	goto	l4831
  9184  1377                     l753:	
  9185                           
  9186                           ;sysData.c: 88: }
  9187                           ;sysData.c: 89: PMCON1bits.WREN = 0;
  9188  1377  0023               	movlb	3	; select bank3
  9189  1378  1115               	bcf	21,2	;volatile
  9190  1379  3001               	movlw	1
  9191  137A  0020               	movlb	0	; select bank0
  9192  137B  07A3               	addwf	my_flash_system_write@j,f
  9193  137C  3000               	movlw	0
  9194  137D  3DA4               	addwfc	my_flash_system_write@j+1,f
  9195  137E  2B18               	goto	l750
  9196  137F                     l4859:	
  9197                           
  9198                           ;sysData.c: 90: }
  9199                           ;sysData.c: 91: INTCONbits.GIE = GIEBitValue;
  9200  137F  0C22               	rrf	my_flash_system_write@GIEBitValue,w
  9201  1380  1C03               	skipc
  9202  1381  138B               	bcf	11,7	;volatile
  9203  1382  1803               	skipnc
  9204  1383  178B               	bsf	11,7	;volatile
  9205  1384  0008               	return
  9206  1385                     __end_of_my_flash_system_write:	
  9207                           ;sysData.c: 93: return 0;
  9208                           ;	Return value of _my_flash_system_write is never used
  9209                           
  9210                           
  9211                           	psect	text19
  9212  1AE9                     __ptext19:	
  9213 ;; *************** function _my_flash_read_system_erase *****************
  9214 ;; Defined at:
  9215 ;;		line 9 in file "src/api/sysData.c"
  9216 ;; Parameters:    Size  Location     Type
  9217 ;;		None
  9218 ;; Auto vars:     Size  Location     Type
  9219 ;;		None
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  1    wreg      void 
  9222 ;; Registers used:
  9223 ;;		wreg, status,2, status,0, pclath, cstack
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9233 ;;Total ram usage:        0 bytes
  9234 ;; Hardware stack levels used:    1
  9235 ;; Hardware stack levels required when called:    2
  9236 ;; This function calls:
  9237 ;;		_FLASH_EraseBlock
  9238 ;; This function is called by:
  9239 ;;		_sys_data_save
  9240 ;; This function uses a non-reentrant model
  9241 ;;
  9242                           
  9243                           
  9244                           ;psect for function _my_flash_read_system_erase
  9245  1AE9                     _my_flash_read_system_erase:	
  9246                           
  9247                           ;sysData.c: 16: FLASH_EraseBlock(0x1f00);
  9248                           
  9249                           ;incstack = 0
  9250                           ; Regs used in _my_flash_read_system_erase: [wreg+status,2+status,0+pclath+cstack]
  9251  1AE9  3000               	movlw	0
  9252  1AEA  00F3               	movwf	FLASH_EraseBlock@startAddr
  9253  1AEB  301F               	movlw	31
  9254  1AEC  00F4               	movwf	FLASH_EraseBlock@startAddr+1
  9255  1AED  319A  2235  319A   	fcall	_FLASH_EraseBlock
  9256                           
  9257                           ;sysData.c: 17: FLASH_EraseBlock(0x1f00+32);
  9258  1AF0  3020               	movlw	32
  9259  1AF1  00F3               	movwf	FLASH_EraseBlock@startAddr
  9260  1AF2  301F               	movlw	31
  9261  1AF3  00F4               	movwf	FLASH_EraseBlock@startAddr+1
  9262  1AF4  319A  2235  319A   	fcall	_FLASH_EraseBlock
  9263                           
  9264                           ;sysData.c: 18: FLASH_EraseBlock(0x1f00+64);
  9265  1AF7  3040               	movlw	64
  9266  1AF8  00F3               	movwf	FLASH_EraseBlock@startAddr
  9267  1AF9  301F               	movlw	31
  9268  1AFA  00F4               	movwf	FLASH_EraseBlock@startAddr+1
  9269  1AFB  319A  2235  319A   	fcall	_FLASH_EraseBlock
  9270                           
  9271                           ;sysData.c: 19: FLASH_EraseBlock(0x1f00+96);
  9272  1AFE  3060               	movlw	96
  9273  1AFF  00F3               	movwf	FLASH_EraseBlock@startAddr
  9274  1B00  301F               	movlw	31
  9275  1B01  00F4               	movwf	FLASH_EraseBlock@startAddr+1
  9276  1B02  319A  2235  319A   	fcall	_FLASH_EraseBlock
  9277                           
  9278                           ;sysData.c: 20: FLASH_EraseBlock(0x1f00+128);
  9279  1B05  3080               	movlw	128
  9280  1B06  00F3               	movwf	FLASH_EraseBlock@startAddr
  9281  1B07  301F               	movlw	31
  9282  1B08  00F4               	movwf	FLASH_EraseBlock@startAddr+1
  9283  1B09  319A  2235         	fcall	_FLASH_EraseBlock
  9284  1B0B  0008               	return
  9285  1B0C                     __end_of_my_flash_read_system_erase:	
  9286                           
  9287                           	psect	text20
  9288  1A35                     __ptext20:	
  9289 ;; *************** function _FLASH_EraseBlock *****************
  9290 ;; Defined at:
  9291 ;;		line 147 in file "mcc_generated_files/memory.c"
  9292 ;; Parameters:    Size  Location     Type
  9293 ;;  startAddr       2    3[COMMON] unsigned int 
  9294 ;; Auto vars:     Size  Location     Type
  9295 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  9296 ;; Return value:  Size  Location     Type
  9297 ;;                  1    wreg      void 
  9298 ;; Registers used:
  9299 ;;		wreg, status,2, status,0
  9300 ;; Tracked objects:
  9301 ;;		On entry : 0/0
  9302 ;;		On exit  : 0/0
  9303 ;;		Unchanged: 0/0
  9304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9305 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9306 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9308 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9309 ;;Total ram usage:        3 bytes
  9310 ;; Hardware stack levels used:    1
  9311 ;; Hardware stack levels required when called:    1
  9312 ;; This function calls:
  9313 ;;		Nothing
  9314 ;; This function is called by:
  9315 ;;		_my_flash_read_system_erase
  9316 ;;		_FLASH_WriteBlock
  9317 ;; This function uses a non-reentrant model
  9318 ;;
  9319                           
  9320                           
  9321                           ;psect for function _FLASH_EraseBlock
  9322  1A35                     _FLASH_EraseBlock:	
  9323                           
  9324                           ;memory.c: 149: uint8_t GIEBitValue = INTCONbits.GIE;
  9325                           
  9326                           ;incstack = 0
  9327                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  9328  1A35  3000               	movlw	0
  9329  1A36  1B8B               	btfsc	11,7	;volatile
  9330  1A37  3001               	movlw	1
  9331  1A38  00F5               	movwf	FLASH_EraseBlock@GIEBitValue
  9332                           
  9333                           ;memory.c: 152: INTCONbits.GIE = 0;
  9334  1A39  138B               	bcf	11,7	;volatile
  9335                           
  9336                           ;memory.c: 154: PMADRL = (startAddr & 0xFF);
  9337  1A3A  0873               	movf	FLASH_EraseBlock@startAddr,w
  9338  1A3B  0023               	movlb	3	; select bank3
  9339  1A3C  0091               	movwf	17	;volatile
  9340                           
  9341                           ;memory.c: 156: PMADRH = ((startAddr & 0xFF00) >> 8);
  9342  1A3D  0874               	movf	FLASH_EraseBlock@startAddr+1,w
  9343  1A3E  0092               	movwf	18	;volatile
  9344                           
  9345                           ;memory.c: 159: PMCON1bits.CFGS = 0;
  9346  1A3F  1315               	bcf	21,6	;volatile
  9347                           
  9348                           ;memory.c: 160: PMCON1bits.FREE = 1;
  9349  1A40  1615               	bsf	21,4	;volatile
  9350                           
  9351                           ;memory.c: 161: PMCON1bits.WREN = 1;
  9352  1A41  1515               	bsf	21,2	;volatile
  9353                           
  9354                           ;memory.c: 164: PMCON2 = 0x55;
  9355  1A42  3055               	movlw	85
  9356  1A43  0096               	movwf	22	;volsfr
  9357                           
  9358                           ;memory.c: 165: PMCON2 = 0xAA;
  9359  1A44  30AA               	movlw	170
  9360  1A45  0096               	movwf	22	;volsfr
  9361                           
  9362                           ;memory.c: 166: PMCON1bits.WR = 1;
  9363  1A46  1495               	bsf	21,1	;volatile
  9364                           
  9365                           ;memory.c: 167: __nop();
  9366  1A47  0000               	nop
  9367                           
  9368                           ;memory.c: 168: __nop();
  9369  1A48  0000               	nop
  9370                           
  9371                           ;memory.c: 170: PMCON1bits.WREN = 0;
  9372  1A49  0023               	movlb	3	; select bank3
  9373  1A4A  1115               	bcf	21,2	;volatile
  9374                           
  9375                           ;memory.c: 171: INTCONbits.GIE = GIEBitValue;
  9376  1A4B  0C75               	rrf	FLASH_EraseBlock@GIEBitValue,w
  9377  1A4C  1C03               	skipc
  9378  1A4D  138B               	bcf	11,7	;volatile
  9379  1A4E  1803               	skipnc
  9380  1A4F  178B               	bsf	11,7	;volatile
  9381  1A50  0008               	return
  9382  1A51                     __end_of_FLASH_EraseBlock:	
  9383                           
  9384                           	psect	text21
  9385  1CB0                     __ptext21:	
  9386 ;; *************** function _modbus_response_illgeal_function *****************
  9387 ;; Defined at:
  9388 ;;		line 8 in file "src/api/modbus.c"
  9389 ;; Parameters:    Size  Location     Type
  9390 ;;  buf             1    wreg     PTR unsigned char 
  9391 ;;		 -> modbusBuf(60), 
  9392 ;;  errcode         1   19[BANK0 ] unsigned char 
  9393 ;; Auto vars:     Size  Location     Type
  9394 ;;  buf             1   20[BANK0 ] PTR unsigned char 
  9395 ;;		 -> modbusBuf(60), 
  9396 ;;  pmdbs           1   21[BANK0 ] PTR struct .
  9397 ;;		 -> modbusBuf(60), 
  9398 ;; Return value:  Size  Location     Type
  9399 ;;                  1    wreg      void 
  9400 ;; Registers used:
  9401 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9402 ;; Tracked objects:
  9403 ;;		On entry : 0/0
  9404 ;;		On exit  : 0/0
  9405 ;;		Unchanged: 0/0
  9406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9407 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9408 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9409 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9410 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9411 ;;Total ram usage:        4 bytes
  9412 ;; Hardware stack levels used:    1
  9413 ;; Hardware stack levels required when called:    3
  9414 ;; This function calls:
  9415 ;;		_crc_append
  9416 ;;		_uart_send_len
  9417 ;; This function is called by:
  9418 ;;		_modbus_response_process
  9419 ;; This function uses a non-reentrant model
  9420 ;;
  9421                           
  9422                           
  9423                           ;psect for function _modbus_response_illgeal_function
  9424  1CB0                     _modbus_response_illgeal_function:	
  9425                           
  9426                           ;incstack = 0
  9427                           ; Regs used in _modbus_response_illgeal_function: [wreg+fsr1l+fsr1h+status,2+status,0+pc
      +                          lath+cstack]
  9428                           ;modbus_response_illgeal_function@buf stored from wreg
  9429  1CB0  0020               	movlb	0	; select bank0
  9430  1CB1  00B4               	movwf	modbus_response_illgeal_function@buf
  9431                           
  9432                           ;modbus.c: 10: st_modbusErrRespStructDef* pmdbs=(st_modbusErrRespStructDef*)buf;
  9433  1CB2  0834               	movf	modbus_response_illgeal_function@buf,w
  9434  1CB3  00F7               	movwf	??_modbus_response_illgeal_function
  9435  1CB4  0877               	movf	??_modbus_response_illgeal_function,w
  9436  1CB5  00B5               	movwf	modbus_response_illgeal_function@pmdbs
  9437                           
  9438                           ;modbus.c: 11: if(pmdbs->addr==0x00)return;
  9439  1CB6  0835               	movf	modbus_response_illgeal_function@pmdbs,w
  9440  1CB7  0086               	movwf	6
  9441  1CB8  3001               	movlw	1	; select bank2/3
  9442  1CB9  0087               	movwf	7
  9443  1CBA  0801               	movf	1,w
  9444  1CBB  1903               	btfsc	3,2
  9445  1CBC  0008               	return
  9446                           
  9447                           ;modbus.c: 12: pmdbs->addr=sysData.id;
  9448  1CBD  305C               	movlw	92
  9449  1CBE  0086               	movwf	6
  9450  1CBF  3023               	movlw	35
  9451  1CC0  0087               	movwf	7
  9452  1CC1  3142               	addfsr 1,2
  9453  1CC2  0801               	movf	1,w
  9454  1CC3  00F7               	movwf	??_modbus_response_illgeal_function
  9455  1CC4  0835               	movf	modbus_response_illgeal_function@pmdbs,w
  9456  1CC5  0086               	movwf	6
  9457  1CC6  3001               	movlw	1	; select bank2/3
  9458  1CC7  0087               	movwf	7
  9459  1CC8  0877               	movf	??_modbus_response_illgeal_function,w
  9460  1CC9  0081               	movwf	1
  9461                           
  9462                           ;modbus.c: 13: if(errcode){
  9463  1CCA  0833               	movf	modbus_response_illgeal_function@errcode,w
  9464  1CCB  1903               	btfsc	3,2
  9465  1CCC  2CD5               	goto	l804
  9466                           
  9467                           ;modbus.c: 14: pmdbs->func+=0x80;
  9468  1CCD  3080               	movlw	128
  9469  1CCE  00F7               	movwf	??_modbus_response_illgeal_function
  9470  1CCF  0A35               	incf	modbus_response_illgeal_function@pmdbs,w
  9471  1CD0  0086               	movwf	6
  9472  1CD1  3001               	movlw	1	; select bank2/3
  9473  1CD2  0087               	movwf	7
  9474  1CD3  0877               	movf	??_modbus_response_illgeal_function,w
  9475  1CD4  0781               	addwf	1,f
  9476  1CD5                     l804:	
  9477                           
  9478                           ;modbus.c: 15: }
  9479                           ;modbus.c: 16: pmdbs->errcord=errcode;
  9480  1CD5  0833               	movf	modbus_response_illgeal_function@errcode,w
  9481  1CD6  00F7               	movwf	??_modbus_response_illgeal_function
  9482  1CD7  0835               	movf	modbus_response_illgeal_function@pmdbs,w
  9483  1CD8  3E02               	addlw	2
  9484  1CD9  0086               	movwf	6
  9485  1CDA  3001               	movlw	1	; select bank2/3
  9486  1CDB  0087               	movwf	7
  9487  1CDC  0877               	movf	??_modbus_response_illgeal_function,w
  9488  1CDD  0081               	movwf	1
  9489                           
  9490                           ;modbus.c: 17: crc_append(buf,3);
  9491  1CDE  0834               	movf	modbus_response_illgeal_function@buf,w
  9492  1CDF  00A8               	movwf	crc_append@message
  9493  1CE0  3001               	movlw	1
  9494  1CE1  00A9               	movwf	crc_append@message+1
  9495  1CE2  3003               	movlw	3
  9496  1CE3  00AA               	movwf	crc_append@n
  9497  1CE4  3000               	movlw	0
  9498  1CE5  00AB               	movwf	crc_append@n+1
  9499  1CE6  319B  2360  319C   	fcall	_crc_append
  9500                           
  9501                           ;modbus.c: 18: uart_send_len(buf,5);
  9502  1CE9  3005               	movlw	5
  9503  1CEA  00F7               	movwf	??_modbus_response_illgeal_function
  9504  1CEB  0877               	movf	??_modbus_response_illgeal_function,w
  9505  1CEC  00F3               	movwf	uart_send_len@len
  9506  1CED  0020               	movlb	0	; select bank0
  9507  1CEE  0834               	movf	modbus_response_illgeal_function@buf,w
  9508  1CEF  319A  22C6         	fcall	_uart_send_len
  9509  1CF1  0008               	return
  9510  1CF2                     __end_of_modbus_response_illgeal_function:	
  9511                           
  9512                           	psect	text22
  9513  1385                     __ptext22:	
  9514 ;; *************** function _modbus_response_command *****************
  9515 ;; Defined at:
  9516 ;;		line 179 in file "src/api/modbus.c"
  9517 ;; Parameters:    Size  Location     Type
  9518 ;;  rbuf            1    wreg     PTR unsigned char 
  9519 ;;		 -> modbusBuf(60), 
  9520 ;; Auto vars:     Size  Location     Type
  9521 ;;  rbuf            1   28[BANK0 ] PTR unsigned char 
  9522 ;;		 -> modbusBuf(60), 
  9523 ;;  tempData        2   29[BANK0 ] unsigned int 
  9524 ;;  startAddr       2   23[BANK0 ] unsigned int 
  9525 ;;  tmpAddr         2   21[BANK0 ] unsigned int 
  9526 ;;  len             1   27[BANK0 ] unsigned char 
  9527 ;;  pmdbs           1   26[BANK0 ] PTR struct .
  9528 ;;		 -> modbusBuf(60), 
  9529 ;;  i               1   25[BANK0 ] unsigned char 
  9530 ;; Return value:  Size  Location     Type
  9531 ;;                  1    wreg      void 
  9532 ;; Registers used:
  9533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9534 ;; Tracked objects:
  9535 ;;		On entry : 0/0
  9536 ;;		On exit  : 0/0
  9537 ;;		Unchanged: 0/0
  9538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9540 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9541 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9542 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9543 ;;Total ram usage:       12 bytes
  9544 ;; Hardware stack levels used:    1
  9545 ;; Hardware stack levels required when called:    3
  9546 ;; This function calls:
  9547 ;;		_crc_append
  9548 ;;		_getRegisterVal
  9549 ;;		_uart_send_len
  9550 ;; This function is called by:
  9551 ;;		_modbus_response_process
  9552 ;; This function uses a non-reentrant model
  9553 ;;
  9554                           
  9555                           
  9556                           ;psect for function _modbus_response_command
  9557  1385                     _modbus_response_command:	
  9558                           
  9559                           ;incstack = 0
  9560                           ; Regs used in _modbus_response_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9561                           ;modbus_response_command@rbuf stored from wreg
  9562  1385  0020               	movlb	0	; select bank0
  9563  1386  00BC               	movwf	modbus_response_command@rbuf
  9564                           
  9565                           ;modbus.c: 180: uint8_t i;
  9566                           ;modbus.c: 181: uint16_t startAddr=0;
  9567  1387  01B7               	clrf	modbus_response_command@startAddr
  9568  1388  01B8               	clrf	modbus_response_command@startAddr+1
  9569                           
  9570                           ;modbus.c: 182: uint16_t tempData,tmpAddr;
  9571                           ;modbus.c: 183: uint8_t len=0;
  9572  1389  01BB               	clrf	modbus_response_command@len
  9573                           
  9574                           ;modbus.c: 184: st_modbusComReqStructDef* pmdbs=(st_modbusComReqStructDef*)rbuf;
  9575  138A  083C               	movf	modbus_response_command@rbuf,w
  9576  138B  00B3               	movwf	??_modbus_response_command
  9577  138C  0833               	movf	??_modbus_response_command,w
  9578  138D  00BA               	movwf	modbus_response_command@pmdbs
  9579                           
  9580                           ;modbus.c: 185: if(pmdbs->addr!=sysData.id || pmdbs->addr==0)return;
  9581  138E  305C               	movlw	92
  9582  138F  0086               	movwf	6
  9583  1390  3023               	movlw	35
  9584  1391  0087               	movwf	7
  9585  1392  3142               	addfsr 1,2
  9586  1393  083A               	movf	modbus_response_command@pmdbs,w
  9587  1394  0084               	movwf	4
  9588  1395  3001               	movlw	1	; select bank2/3
  9589  1396  0085               	movwf	5
  9590  1397  0800               	movf	0,w
  9591  1398  0601               	xorwf	1,w
  9592  1399  1D03               	skipz
  9593  139A  0008               	return
  9594  139B  083A               	movf	modbus_response_command@pmdbs,w
  9595  139C  0086               	movwf	6
  9596  139D  3001               	movlw	1	; select bank2/3
  9597  139E  0087               	movwf	7
  9598  139F  0801               	movf	1,w
  9599  13A0  1903               	btfsc	3,2
  9600  13A1  0008               	return
  9601                           
  9602                           ;modbus.c: 186: startAddr=pmdbs->addr_hi;
  9603  13A2  083A               	movf	modbus_response_command@pmdbs,w
  9604  13A3  3E02               	addlw	2
  9605  13A4  0086               	movwf	6
  9606  13A5  3001               	movlw	1	; select bank2/3
  9607  13A6  0087               	movwf	7
  9608  13A7  0801               	movf	1,w
  9609  13A8  00B3               	movwf	??_modbus_response_command
  9610  13A9  01B4               	clrf	??_modbus_response_command+1
  9611  13AA  0833               	movf	??_modbus_response_command,w
  9612  13AB  00B7               	movwf	modbus_response_command@startAddr
  9613  13AC  0834               	movf	??_modbus_response_command+1,w
  9614  13AD  00B8               	movwf	modbus_response_command@startAddr+1
  9615                           
  9616                           ;modbus.c: 187: startAddr<<=8;
  9617  13AE  3008               	movlw	8
  9618  13AF                     u4565:	
  9619  13AF  35B7               	lslf	modbus_response_command@startAddr,f
  9620  13B0  0DB8               	rlf	modbus_response_command@startAddr+1,f
  9621  13B1  0B89               	decfsz	9,f
  9622  13B2  2BAF               	goto	u4565
  9623                           
  9624                           ;modbus.c: 188: startAddr |= pmdbs->addr_lo;
  9625  13B3  083A               	movf	modbus_response_command@pmdbs,w
  9626  13B4  3E03               	addlw	3
  9627  13B5  0086               	movwf	6
  9628  13B6  3001               	movlw	1	; select bank2/3
  9629  13B7  0087               	movwf	7
  9630  13B8  0801               	movf	1,w
  9631  13B9  00B3               	movwf	??_modbus_response_command
  9632  13BA  01B4               	clrf	??_modbus_response_command+1
  9633  13BB  0833               	movf	??_modbus_response_command,w
  9634  13BC  04B7               	iorwf	modbus_response_command@startAddr,f
  9635  13BD  0834               	movf	??_modbus_response_command+1,w
  9636  13BE  04B8               	iorwf	modbus_response_command@startAddr+1,f
  9637                           
  9638                           ;modbus.c: 189: tmpAddr=startAddr;
  9639  13BF  0838               	movf	modbus_response_command@startAddr+1,w
  9640  13C0  00B6               	movwf	modbus_response_command@tmpAddr+1
  9641  13C1  0837               	movf	modbus_response_command@startAddr,w
  9642  13C2  00B5               	movwf	modbus_response_command@tmpAddr
  9643                           
  9644                           ;modbus.c: 190: len = pmdbs->len_lo;
  9645  13C3  083A               	movf	modbus_response_command@pmdbs,w
  9646  13C4  0086               	movwf	6
  9647  13C5  3001               	movlw	1	; select bank2/3
  9648  13C6  0087               	movwf	7
  9649  13C7  3001               	movlw	1	; select bank2/3
  9650  13C8  3F45               	moviw [5]fsr1
  9651  13C9  00BB               	movwf	modbus_response_command@len
  9652                           
  9653                           ;modbus.c: 191: len<<=1;
  9654  13CA  1003               	clrc
  9655  13CB  0DBB               	rlf	modbus_response_command@len,f
  9656                           
  9657                           ;modbus.c: 192: if(len>32)len=32;
  9658  13CC  3021               	movlw	33
  9659  13CD  023B               	subwf	modbus_response_command@len,w
  9660  13CE  1C03               	skipc
  9661  13CF  2BD4               	goto	l5173
  9662  13D0  3020               	movlw	32
  9663  13D1  00B3               	movwf	??_modbus_response_command
  9664  13D2  0833               	movf	??_modbus_response_command,w
  9665  13D3  00BB               	movwf	modbus_response_command@len
  9666  13D4                     l5173:	
  9667                           
  9668                           ;modbus.c: 193: for(i=0;i<len;i=i+2,tmpAddr++){
  9669  13D4  01B9               	clrf	modbus_response_command@i
  9670  13D5                     l5185:	
  9671  13D5  083B               	movf	modbus_response_command@len,w
  9672  13D6  0239               	subwf	modbus_response_command@i,w
  9673  13D7  1803               	btfsc	3,0
  9674  13D8  2C07               	goto	l5187
  9675                           
  9676                           ;modbus.c: 194: getRegisterVal(tmpAddr,&tempData);
  9677  13D9  0836               	movf	modbus_response_command@tmpAddr+1,w
  9678  13DA  00F4               	movwf	getRegisterVal@addr+1
  9679  13DB  0835               	movf	modbus_response_command@tmpAddr,w
  9680  13DC  00F3               	movwf	getRegisterVal@addr
  9681  13DD  303D               	movlw	(low (modbus_response_command@tempData| 0))& (0+255)
  9682  13DE  00B3               	movwf	??_modbus_response_command
  9683  13DF  0833               	movf	??_modbus_response_command,w
  9684  13E0  00F5               	movwf	getRegisterVal@tempData
  9685  13E1  3194  2444  3193   	fcall	_getRegisterVal
  9686                           
  9687                           ;modbus.c: 195: rbuf[i+3] = tempData >> 8;
  9688  13E4  0020               	movlb	0	; select bank0
  9689  13E5  083E               	movf	modbus_response_command@tempData+1,w
  9690  13E6  00B3               	movwf	??_modbus_response_command
  9691  13E7  0839               	movf	modbus_response_command@i,w
  9692  13E8  3E03               	addlw	3
  9693  13E9  073C               	addwf	modbus_response_command@rbuf,w
  9694  13EA  00B4               	movwf	??_modbus_response_command+1
  9695  13EB  0834               	movf	??_modbus_response_command+1,w
  9696  13EC  0086               	movwf	6
  9697  13ED  3001               	movlw	1	; select bank2/3
  9698  13EE  0087               	movwf	7
  9699  13EF  0833               	movf	??_modbus_response_command,w
  9700  13F0  0081               	movwf	1
  9701                           
  9702                           ;modbus.c: 196: rbuf[i+4] = tempData & 0xff;
  9703  13F1  083D               	movf	modbus_response_command@tempData,w
  9704  13F2  00B3               	movwf	??_modbus_response_command
  9705  13F3  0839               	movf	modbus_response_command@i,w
  9706  13F4  3E04               	addlw	4
  9707  13F5  073C               	addwf	modbus_response_command@rbuf,w
  9708  13F6  00B4               	movwf	??_modbus_response_command+1
  9709  13F7  0834               	movf	??_modbus_response_command+1,w
  9710  13F8  0086               	movwf	6
  9711  13F9  3001               	movlw	1	; select bank2/3
  9712  13FA  0087               	movwf	7
  9713  13FB  0833               	movf	??_modbus_response_command,w
  9714  13FC  0081               	movwf	1
  9715  13FD  0839               	movf	modbus_response_command@i,w
  9716  13FE  3E02               	addlw	2
  9717  13FF  00B3               	movwf	??_modbus_response_command
  9718  1400  0833               	movf	??_modbus_response_command,w
  9719  1401  00B9               	movwf	modbus_response_command@i
  9720  1402  3001               	movlw	1
  9721  1403  07B5               	addwf	modbus_response_command@tmpAddr,f
  9722  1404  3000               	movlw	0
  9723  1405  3DB6               	addwfc	modbus_response_command@tmpAddr+1,f
  9724  1406  2BD5               	goto	l5185
  9725  1407                     l5187:	
  9726                           
  9727                           ;modbus.c: 198: }
  9728                           ;modbus.c: 199: rbuf[0] = sysData.id;
  9729  1407  305C               	movlw	92
  9730  1408  0086               	movwf	6
  9731  1409  3023               	movlw	35
  9732  140A  0087               	movwf	7
  9733  140B  3142               	addfsr 1,2
  9734  140C  0801               	movf	1,w
  9735  140D  00B3               	movwf	??_modbus_response_command
  9736  140E  083C               	movf	modbus_response_command@rbuf,w
  9737  140F  0086               	movwf	6
  9738  1410  3001               	movlw	1	; select bank2/3
  9739  1411  0087               	movwf	7
  9740  1412  0833               	movf	??_modbus_response_command,w
  9741  1413  0081               	movwf	1
  9742                           
  9743                           ;modbus.c: 200: rbuf[1] = 3;
  9744  1414  3003               	movlw	3
  9745  1415  00B3               	movwf	??_modbus_response_command
  9746  1416  0A3C               	incf	modbus_response_command@rbuf,w
  9747  1417  0086               	movwf	6
  9748  1418  3001               	movlw	1	; select bank2/3
  9749  1419  0087               	movwf	7
  9750  141A  0833               	movf	??_modbus_response_command,w
  9751  141B  0081               	movwf	1
  9752                           
  9753                           ;modbus.c: 201: rbuf[2] = len;
  9754  141C  083B               	movf	modbus_response_command@len,w
  9755  141D  00B3               	movwf	??_modbus_response_command
  9756  141E  083C               	movf	modbus_response_command@rbuf,w
  9757  141F  3E02               	addlw	2
  9758  1420  0086               	movwf	6
  9759  1421  3001               	movlw	1	; select bank2/3
  9760  1422  0087               	movwf	7
  9761  1423  0833               	movf	??_modbus_response_command,w
  9762  1424  0081               	movwf	1
  9763                           
  9764                           ;modbus.c: 202: len += 3;
  9765  1425  3003               	movlw	3
  9766  1426  00B3               	movwf	??_modbus_response_command
  9767  1427  0833               	movf	??_modbus_response_command,w
  9768  1428  07BB               	addwf	modbus_response_command@len,f
  9769                           
  9770                           ;modbus.c: 203: crc_append(rbuf,len);
  9771  1429  083C               	movf	modbus_response_command@rbuf,w
  9772  142A  00A8               	movwf	crc_append@message
  9773  142B  3001               	movlw	1
  9774  142C  00A9               	movwf	crc_append@message+1
  9775  142D  083B               	movf	modbus_response_command@len,w
  9776  142E  00B3               	movwf	??_modbus_response_command
  9777  142F  01B4               	clrf	??_modbus_response_command+1
  9778  1430  0833               	movf	??_modbus_response_command,w
  9779  1431  00AA               	movwf	crc_append@n
  9780  1432  0834               	movf	??_modbus_response_command+1,w
  9781  1433  00AB               	movwf	crc_append@n+1
  9782  1434  319B  2360  3193   	fcall	_crc_append
  9783                           
  9784                           ;modbus.c: 204: len += 2;
  9785  1437  3002               	movlw	2
  9786  1438  0020               	movlb	0	; select bank0
  9787  1439  00B3               	movwf	??_modbus_response_command
  9788  143A  0833               	movf	??_modbus_response_command,w
  9789  143B  07BB               	addwf	modbus_response_command@len,f
  9790                           
  9791                           ;modbus.c: 205: uart_send_len(rbuf,len);
  9792  143C  083B               	movf	modbus_response_command@len,w
  9793  143D  00B3               	movwf	??_modbus_response_command
  9794  143E  0833               	movf	??_modbus_response_command,w
  9795  143F  00F3               	movwf	uart_send_len@len
  9796  1440  083C               	movf	modbus_response_command@rbuf,w
  9797  1441  319A  22C6         	fcall	_uart_send_len
  9798  1443  0008               	return
  9799  1444                     __end_of_modbus_response_command:	
  9800                           
  9801                           	psect	text23
  9802  1AC6                     __ptext23:	
  9803 ;; *************** function _uart_send_len *****************
  9804 ;; Defined at:
  9805 ;;		line 37 in file "src/api/my_uart.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;  buf             1    wreg     PTR unsigned char 
  9808 ;;		 -> modbusBuf(60), 
  9809 ;;  len             1    3[COMMON] unsigned char 
  9810 ;; Auto vars:     Size  Location     Type
  9811 ;;  buf             1    6[COMMON] PTR unsigned char 
  9812 ;;		 -> modbusBuf(60), 
  9813 ;;  i               1    5[COMMON] unsigned char 
  9814 ;; Return value:  Size  Location     Type
  9815 ;;                  1    wreg      void 
  9816 ;; Registers used:
  9817 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9818 ;; Tracked objects:
  9819 ;;		On entry : 0/0
  9820 ;;		On exit  : 0/0
  9821 ;;		Unchanged: 0/0
  9822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9823 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9824 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9825 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9826 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9827 ;;Total ram usage:        4 bytes
  9828 ;; Hardware stack levels used:    1
  9829 ;; Hardware stack levels required when called:    1
  9830 ;; This function calls:
  9831 ;;		Nothing
  9832 ;; This function is called by:
  9833 ;;		_modbus_response_illgeal_function
  9834 ;;		_modbus_response_write_single_register
  9835 ;;		_modbus_response_write_mult_register
  9836 ;;		_modbus_response_command
  9837 ;;		_main
  9838 ;; This function uses a non-reentrant model
  9839 ;;
  9840                           
  9841                           
  9842                           ;psect for function _uart_send_len
  9843  1AC6                     _uart_send_len:	
  9844                           
  9845                           ;incstack = 0
  9846                           ; Regs used in _uart_send_len: [wreg+fsr1l+fsr1h+status,2+status,0]
  9847                           ;uart_send_len@buf stored from wreg
  9848  1AC6  00F6               	movwf	uart_send_len@buf
  9849                           
  9850                           ;my_uart.c: 39: uint8_t i;
  9851                           ;my_uart.c: 40: xlen=len;
  9852  1AC7  0873               	movf	uart_send_len@len,w
  9853  1AC8  00F4               	movwf	??_uart_send_len
  9854  1AC9  0874               	movf	??_uart_send_len,w
  9855  1ACA  0020               	movlb	0	; select bank0
  9856  1ACB  00DA               	movwf	_xlen
  9857                           
  9858                           ;my_uart.c: 41: if(!TXSTAbits.TXEN)TXSTAbits.TXEN=1;
  9859  1ACC  0023               	movlb	3	; select bank3
  9860  1ACD  1E9E               	btfss	30,5	;volatile
  9861  1ACE  169E               	bsf	30,5	;volatile
  9862                           
  9863                           ;my_uart.c: 43: for(i=0;i<xlen;i++){
  9864  1ACF  01F5               	clrf	uart_send_len@i
  9865  1AD0                     l3425:	
  9866  1AD0  0020               	movlb	0	; select bank0
  9867  1AD1  085A               	movf	_xlen,w
  9868  1AD2  0275               	subwf	uart_send_len@i,w
  9869  1AD3  1803               	btfsc	3,0
  9870  1AD4  0008               	return
  9871  1AD5                     l501:	
  9872                           ;my_uart.c: 44: while(0 == PIR1bits.TXIF);
  9873                           
  9874  1AD5  0020               	movlb	0	; select bank0
  9875  1AD6  1E11               	btfss	17,4	;volatile
  9876  1AD7  2AD5               	goto	l501
  9877                           
  9878                           ;my_uart.c: 46: TXREG = buf[i];
  9879  1AD8  0875               	movf	uart_send_len@i,w
  9880  1AD9  0776               	addwf	uart_send_len@buf,w
  9881  1ADA  00F4               	movwf	??_uart_send_len
  9882  1ADB  0874               	movf	??_uart_send_len,w
  9883  1ADC  0086               	movwf	6
  9884  1ADD  3001               	movlw	1	; select bank2/3
  9885  1ADE  0087               	movwf	7
  9886  1ADF  0801               	movf	1,w
  9887  1AE0  0023               	movlb	3	; select bank3
  9888  1AE1  009A               	movwf	26	;volatile
  9889                           
  9890                           ;my_uart.c: 47: do{__nop();__nop();}while(0);;
  9891  1AE2  0000               	nop
  9892  1AE3  0000               	nop
  9893  1AE4  3001               	movlw	1
  9894  1AE5  00F4               	movwf	??_uart_send_len
  9895  1AE6  0874               	movf	??_uart_send_len,w
  9896  1AE7  07F5               	addwf	uart_send_len@i,f
  9897  1AE8  2AD0               	goto	l3425
  9898  1AE9                     __end_of_uart_send_len:	
  9899                           
  9900                           	psect	text24
  9901  1444                     __ptext24:	
  9902 ;; *************** function _getRegisterVal *****************
  9903 ;; Defined at:
  9904 ;;		line 80 in file "src/api/modbus.c"
  9905 ;; Parameters:    Size  Location     Type
  9906 ;;  addr            2    3[COMMON] unsigned int 
  9907 ;;  tempData        1    5[COMMON] PTR unsigned int 
  9908 ;;		 -> modbus_response_command@tempData(2), 
  9909 ;; Auto vars:     Size  Location     Type
  9910 ;;  t16             2    4[BANK0 ] unsigned int 
  9911 ;;  tempAddr        1    6[BANK0 ] unsigned char 
  9912 ;; Return value:  Size  Location     Type
  9913 ;;                  2    3[COMMON] unsigned int 
  9914 ;; Registers used:
  9915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  9916 ;; Tracked objects:
  9917 ;;		On entry : 0/0
  9918 ;;		On exit  : 0/0
  9919 ;;		Unchanged: 0/0
  9920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9921 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9922 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9923 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9924 ;;      Totals:         3       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9925 ;;Total ram usage:       10 bytes
  9926 ;; Hardware stack levels used:    1
  9927 ;; Hardware stack levels required when called:    1
  9928 ;; This function calls:
  9929 ;;		Nothing
  9930 ;; This function is called by:
  9931 ;;		_modbus_response_command
  9932 ;; This function uses a non-reentrant model
  9933 ;;
  9934                           
  9935                           
  9936                           ;psect for function _getRegisterVal
  9937  1444                     _getRegisterVal:	
  9938                           
  9939                           ;modbus.c: 82: uint16_t t16 = 0;
  9940                           
  9941                           ;incstack = 0
  9942                           ; Regs used in _getRegisterVal: [wreg-fsr1h+status,2+status,0]
  9943  1444  0020               	movlb	0	; select bank0
  9944  1445  01A4               	clrf	getRegisterVal@t16
  9945  1446  01A5               	clrf	getRegisterVal@t16+1
  9946                           
  9947                           ;modbus.c: 83: uint8_t tempAddr;
  9948                           ;modbus.c: 85: tempAddr = addr & 0xff;
  9949  1447  0873               	movf	getRegisterVal@addr,w
  9950  1448  00A0               	movwf	??_getRegisterVal
  9951  1449  0820               	movf	??_getRegisterVal,w
  9952  144A  00A6               	movwf	getRegisterVal@tempAddr
  9953                           
  9954                           ;modbus.c: 86: switch(tempAddr){
  9955  144B  2CF5               	goto	l4927
  9956  144C                     l4893:	
  9957                           ;modbus.c: 87: case 0x01:*tempData = 0100; break;
  9958                           
  9959  144C  0875               	movf	getRegisterVal@tempData,w
  9960  144D  0086               	movwf	6
  9961  144E  0187               	clrf	7
  9962  144F  3040               	movlw	64
  9963  1450  3FC0               	movwi [0]fsr1
  9964  1451  3000               	movlw	0
  9965  1452  3FC1               	movwi [1]fsr1
  9966  1453  2D02               	goto	l4929
  9967  1454                     l4895:	
  9968                           ;modbus.c: 88: case 0x02:*tempData=sysData.id;break;
  9969                           
  9970  1454  305C               	movlw	92
  9971  1455  0086               	movwf	6
  9972  1456  3023               	movlw	35
  9973  1457  0087               	movwf	7
  9974  1458  3142               	addfsr 1,2
  9975  1459  0801               	movf	1,w
  9976  145A  00A0               	movwf	??_getRegisterVal
  9977  145B  01A1               	clrf	??_getRegisterVal+1
  9978  145C  0875               	movf	getRegisterVal@tempData,w
  9979  145D  0086               	movwf	6
  9980  145E  0187               	clrf	7
  9981  145F  0820               	movf	??_getRegisterVal,w
  9982  1460  3FC0               	movwi [0]fsr1
  9983  1461  0821               	movf	??_getRegisterVal+1,w
  9984  1462  3FC1               	movwi [1]fsr1
  9985  1463  2D02               	goto	l4929
  9986  1464                     l4897:	
  9987                           ;modbus.c: 89: case 0x03:*tempData=(sysData.pidSetFlg1<<8 | sysData.pidSetFlg0);break;
  9988                           
  9989  1464  305C               	movlw	92
  9990  1465  0084               	movwf	4
  9991  1466  3023               	movlw	35
  9992  1467  0085               	movwf	5
  9993  1468  3101               	addfsr 0,1
  9994  1469  0800               	movf	0,w
  9995  146A  00A0               	movwf	??_getRegisterVal
  9996  146B  305C               	movlw	92
  9997  146C  0084               	movwf	4
  9998  146D  3023               	movlw	35
  9999  146E  0085               	movwf	5
 10000  146F  0875               	movf	getRegisterVal@tempData,w
 10001  1470  0086               	movwf	6
 10002  1471  0187               	clrf	7
 10003  1472  0800               	movf	0,w
 10004  1473  3FC0               	movwi [0]fsr1
 10005  1474  0820               	movf	??_getRegisterVal,w
 10006  1475  3FC1               	movwi [1]fsr1
 10007  1476  2D02               	goto	l4929
 10008  1477                     l4899:	
 10009                           ;modbus.c: 90: case 0x04:*tempData=sysData.pidKp;break;
 10010                           
 10011  1477  305C               	movlw	92
 10012  1478  0086               	movwf	6
 10013  1479  3023               	movlw	35
 10014  147A  0087               	movwf	7
 10015  147B  3144               	addfsr 1,4
 10016  147C  0875               	movf	getRegisterVal@tempData,w
 10017  147D  0084               	movwf	4
 10018  147E  0185               	clrf	5
 10019  147F  3F40               	moviw [0]fsr1
 10020  1480  3F80               	movwi [0]fsr0
 10021  1481  3F41               	moviw [1]fsr1
 10022  1482  3F81               	movwi [1]fsr0
 10023  1483  2D02               	goto	l4929
 10024  1484                     l4901:	
 10025                           ;modbus.c: 91: case 0x05:*tempData=sysData.pidTi;break;
 10026                           
 10027  1484  305C               	movlw	92
 10028  1485  0086               	movwf	6
 10029  1486  3023               	movlw	35
 10030  1487  0087               	movwf	7
 10031  1488  3146               	addfsr 1,6
 10032  1489  0875               	movf	getRegisterVal@tempData,w
 10033  148A  0084               	movwf	4
 10034  148B  0185               	clrf	5
 10035  148C  3F40               	moviw [0]fsr1
 10036  148D  3F80               	movwi [0]fsr0
 10037  148E  3F41               	moviw [1]fsr1
 10038  148F  3F81               	movwi [1]fsr0
 10039  1490  2D02               	goto	l4929
 10040  1491                     l4903:	
 10041                           ;modbus.c: 92: case 0x06:*tempData=sysData.pidTd;break;
 10042                           
 10043  1491  305C               	movlw	92
 10044  1492  0086               	movwf	6
 10045  1493  3023               	movlw	35
 10046  1494  0087               	movwf	7
 10047  1495  3148               	addfsr 1,8
 10048  1496  0875               	movf	getRegisterVal@tempData,w
 10049  1497  0084               	movwf	4
 10050  1498  0185               	clrf	5
 10051  1499  3F40               	moviw [0]fsr1
 10052  149A  3F80               	movwi [0]fsr0
 10053  149B  3F41               	moviw [1]fsr1
 10054  149C  3F81               	movwi [1]fsr0
 10055  149D  2D02               	goto	l4929
 10056  149E                     l4905:	
 10057                           ;modbus.c: 93: case 0x07:*tempData=rtAdcValueRsLo; break;
 10058                           
 10059  149E  0875               	movf	getRegisterVal@tempData,w
 10060  149F  0086               	movwf	6
 10061  14A0  0187               	clrf	7
 10062  14A1  0856               	movf	_rtAdcValueRsLo,w
 10063  14A2  3FC0               	movwi [0]fsr1
 10064  14A3  0857               	movf	_rtAdcValueRsLo+1,w
 10065  14A4  3FC1               	movwi [1]fsr1
 10066  14A5  2D02               	goto	l4929
 10067  14A6                     l4907:	
 10068                           ;modbus.c: 94: case 0x08:*tempData=rtAdcValueRsHi;break;
 10069                           
 10070  14A6  0875               	movf	getRegisterVal@tempData,w
 10071  14A7  0086               	movwf	6
 10072  14A8  0187               	clrf	7
 10073  14A9  0021               	movlb	1	; select bank1
 10074  14AA  0854               	movf	_rtAdcValueRsHi^(0+128),w
 10075  14AB  3FC0               	movwi [0]fsr1
 10076  14AC  0855               	movf	(_rtAdcValueRsHi+1)^(0+128),w
 10077  14AD  3FC1               	movwi [1]fsr1
 10078  14AE  2D02               	goto	l4929
 10079  14AF                     l4909:	
 10080                           ;modbus.c: 95: case 0x09:*tempData=rtAdcValueRcLo;break;
 10081                           
 10082  14AF  0875               	movf	getRegisterVal@tempData,w
 10083  14B0  0086               	movwf	6
 10084  14B1  0187               	clrf	7
 10085  14B2  0020               	movlb	0	; select bank0
 10086  14B3  0854               	movf	_rtAdcValueRcLo,w
 10087  14B4  3FC0               	movwi [0]fsr1
 10088  14B5  0855               	movf	_rtAdcValueRcLo+1,w
 10089  14B6  3FC1               	movwi [1]fsr1
 10090  14B7  2D02               	goto	l4929
 10091  14B8                     l4911:	
 10092                           ;modbus.c: 96: case 0x0a:*tempData=rtAdcValueRcHi;break;
 10093                           
 10094  14B8  0875               	movf	getRegisterVal@tempData,w
 10095  14B9  0086               	movwf	6
 10096  14BA  0187               	clrf	7
 10097  14BB  0021               	movlb	1	; select bank1
 10098  14BC  0852               	movf	_rtAdcValueRcHi^(0+128),w
 10099  14BD  3FC0               	movwi [0]fsr1
 10100  14BE  0853               	movf	(_rtAdcValueRcHi+1)^(0+128),w
 10101  14BF  3FC1               	movwi [1]fsr1
 10102  14C0  2D02               	goto	l4929
 10103  14C1                     l4913:	
 10104                           ;modbus.c: 97: case 0x0b:*tempData=resRc;break;
 10105                           
 10106  14C1  0875               	movf	getRegisterVal@tempData,w
 10107  14C2  0086               	movwf	6
 10108  14C3  0187               	clrf	7
 10109  14C4  0020               	movlb	0	; select bank0
 10110  14C5  085F               	movf	_resRc,w
 10111  14C6  3FC0               	movwi [0]fsr1
 10112  14C7  0860               	movf	_resRc+1,w
 10113  14C8  3FC1               	movwi [1]fsr1
 10114  14C9  2D02               	goto	l4929
 10115  14CA                     l4915:	
 10116                           ;modbus.c: 98: case 0x0c:*tempData=resRs;break;
 10117                           
 10118  14CA  0875               	movf	getRegisterVal@tempData,w
 10119  14CB  0086               	movwf	6
 10120  14CC  0187               	clrf	7
 10121  14CD  085D               	movf	_resRs,w
 10122  14CE  3FC0               	movwi [0]fsr1
 10123  14CF  085E               	movf	_resRs+1,w
 10124  14D0  3FC1               	movwi [1]fsr1
 10125  14D1  2D02               	goto	l4929
 10126  14D2                     l4917:	
 10127                           ;modbus.c: 99: case 0x0d:*tempData=rtAdcValueVoFb;break;
 10128                           
 10129  14D2  0875               	movf	getRegisterVal@tempData,w
 10130  14D3  0086               	movwf	6
 10131  14D4  0187               	clrf	7
 10132  14D5  0021               	movlb	1	; select bank1
 10133  14D6  0850               	movf	_rtAdcValueVoFb^(0+128),w
 10134  14D7  3FC0               	movwi [0]fsr1
 10135  14D8  0851               	movf	(_rtAdcValueVoFb+1)^(0+128),w
 10136  14D9  3FC1               	movwi [1]fsr1
 10137  14DA  2D02               	goto	l4929
 10138  14DB                     l4919:	
 10139                           ;modbus.c: 100: case 0x0e:*tempData=voExpectMv;break;
 10140                           
 10141  14DB  0875               	movf	getRegisterVal@tempData,w
 10142  14DC  0086               	movwf	6
 10143  14DD  0187               	clrf	7
 10144  14DE  0021               	movlb	1	; select bank1
 10145  14DF  084A               	movf	_voExpectMv^(0+128),w
 10146  14E0  3FC0               	movwi [0]fsr1
 10147  14E1  084B               	movf	(_voExpectMv+1)^(0+128),w
 10148  14E2  3FC1               	movwi [1]fsr1
 10149  14E3  2D02               	goto	l4929
 10150  14E4                     l4921:	
 10151                           ;modbus.c: 101: case 0x0f:*tempData=voExpectAdcValue;break;
 10152                           
 10153  14E4  0875               	movf	getRegisterVal@tempData,w
 10154  14E5  0086               	movwf	6
 10155  14E6  0187               	clrf	7
 10156  14E7  0020               	movlb	0	; select bank0
 10157  14E8  0850               	movf	_voExpectAdcValue,w
 10158  14E9  3FC0               	movwi [0]fsr1
 10159  14EA  0851               	movf	_voExpectAdcValue+1,w
 10160  14EB  3FC1               	movwi [1]fsr1
 10161  14EC  2D02               	goto	l4929
 10162  14ED                     l4923:	
 10163                           ;modbus.c: 102: default: *tempData=0x55aa;break;
 10164                           
 10165  14ED  0875               	movf	getRegisterVal@tempData,w
 10166  14EE  0086               	movwf	6
 10167  14EF  0187               	clrf	7
 10168  14F0  30AA               	movlw	170
 10169  14F1  3FC0               	movwi [0]fsr1
 10170  14F2  3055               	movlw	85
 10171  14F3  3FC1               	movwi [1]fsr1
 10172                           
 10173                           ;modbus.c: 103: }
 10174  14F4  2D02               	goto	l4929
 10175  14F5                     l4927:	
 10176  14F5  0826               	movf	getRegisterVal@tempAddr,w
 10177                           
 10178                           ; Switch size 1, requested type "space"
 10179                           ; Number of cases is 15, Range of values is 1 to 15
 10180                           ; switch strategies available:
 10181                           ; Name         Instructions Cycles
 10182                           ; direct_byte           39     9 (fixed)
 10183                           ; simple_byte           46    24 (average)
 10184                           ; jumptable            263     9 (fixed)
 10185                           ;	Chosen strategy is direct_byte
 10186  14F6  3EFF               	addlw	-1
 10187  14F7  1C03               	skipc
 10188  14F8  2CED               	goto	l4923
 10189  14F9  0084               	movwf	4
 10190  14FA  300F               	movlw	15
 10191  14FB  0204               	subwf	4,w
 10192  14FC  1803               	skipnc
 10193  14FD  2CED               	goto	l4923
 10194  14FE  3198               	movlp	high S5827
 10195  14FF  3504               	lslf	4,w
 10196  1500  3E00               	addlw	low S5827
 10197  1501  0082               	movwf	2
 10198  1502                     l4929:	
 10199                           
 10200                           ;modbus.c: 104: if(tempAddr>0x0f && tempAddr < 0x10+30*2){
 10201  1502  3010               	movlw	16
 10202  1503  0020               	movlb	0	; select bank0
 10203  1504  0226               	subwf	getRegisterVal@tempAddr,w
 10204  1505  1C03               	skipc
 10205  1506  0008               	return
 10206  1507  304C               	movlw	76
 10207  1508  0226               	subwf	getRegisterVal@tempAddr,w
 10208  1509  1803               	skipnc
 10209  150A  0008               	return
 10210                           
 10211                           ;modbus.c: 105: tempAddr-=0x10;
 10212  150B  3010               	movlw	16
 10213  150C  02A6               	subwf	getRegisterVal@tempAddr,f
 10214                           
 10215                           ;modbus.c: 106: if(tempAddr & 0x01){
 10216  150D  1C26               	btfss	getRegisterVal@tempAddr,0
 10217  150E  2D26               	goto	l4939
 10218                           
 10219                           ;modbus.c: 107: *tempData=sysData.calibVoMV[tempAddr>>1];
 10220  150F  3626               	lsrf	getRegisterVal@tempAddr,w
 10221  1510  00A0               	movwf	??_getRegisterVal
 10222  1511  01A1               	clrf	??_getRegisterVal+1
 10223  1512  35A0               	lslf	??_getRegisterVal,f
 10224  1513  0DA1               	rlf	??_getRegisterVal+1,f
 10225  1514  30A2               	movlw	162
 10226  1515  00A2               	movwf	??_getRegisterVal+2
 10227  1516  3023               	movlw	35
 10228  1517  00A3               	movwf	??_getRegisterVal+3
 10229  1518  0820               	movf	??_getRegisterVal,w
 10230  1519  0722               	addwf	??_getRegisterVal+2,w
 10231  151A  0086               	movwf	6
 10232  151B  0821               	movf	??_getRegisterVal+1,w
 10233  151C  3D23               	addwfc	??_getRegisterVal+3,w
 10234  151D  0087               	movwf	7
 10235  151E  0875               	movf	getRegisterVal@tempData,w
 10236  151F  0084               	movwf	4
 10237  1520  0185               	clrf	5
 10238  1521  3F40               	moviw [0]fsr1
 10239  1522  3F80               	movwi [0]fsr0
 10240  1523  3F41               	moviw [1]fsr1
 10241  1524  3F81               	movwi [1]fsr0
 10242                           
 10243                           ;modbus.c: 108: }else{
 10244  1525  0008               	return
 10245  1526                     l4939:	
 10246                           
 10247                           ;modbus.c: 109: *tempData=sysData.calibRsAdc[tempAddr>>1];
 10248  1526  3626               	lsrf	getRegisterVal@tempAddr,w
 10249  1527  00A0               	movwf	??_getRegisterVal
 10250  1528  01A1               	clrf	??_getRegisterVal+1
 10251  1529  35A0               	lslf	??_getRegisterVal,f
 10252  152A  0DA1               	rlf	??_getRegisterVal+1,f
 10253  152B  3066               	movlw	102
 10254  152C  00A2               	movwf	??_getRegisterVal+2
 10255  152D  3023               	movlw	35
 10256  152E  00A3               	movwf	??_getRegisterVal+3
 10257  152F  0820               	movf	??_getRegisterVal,w
 10258  1530  0722               	addwf	??_getRegisterVal+2,w
 10259  1531  0086               	movwf	6
 10260  1532  0821               	movf	??_getRegisterVal+1,w
 10261  1533  3D23               	addwfc	??_getRegisterVal+3,w
 10262  1534  0087               	movwf	7
 10263  1535  0875               	movf	getRegisterVal@tempData,w
 10264  1536  0084               	movwf	4
 10265  1537  0185               	clrf	5
 10266  1538  3F40               	moviw [0]fsr1
 10267  1539  3F80               	movwi [0]fsr0
 10268  153A  3F41               	moviw [1]fsr1
 10269  153B  3F81               	movwi [1]fsr0
 10270  153C  0008               	return
 10271  153D                     __end_of_getRegisterVal:	
 10272                           ;modbus.c: 110: }
 10273                           ;modbus.c: 111: }
 10274                           ;modbus.c: 112: return t16;
 10275                           ;	Return value of _getRegisterVal is never used
 10276                           
 10277                           
 10278                           	psect	swtext2
 10279  1800                     __pswtext2:	
 10280  1800                     S5827:	
 10281  1800  3194  2C4C         	ljmp	l4893
 10282  1802  3194  2C54         	ljmp	l4895
 10283  1804  3194  2C64         	ljmp	l4897
 10284  1806  3194  2C77         	ljmp	l4899
 10285  1808  3194  2C84         	ljmp	l4901
 10286  180A  3194  2C91         	ljmp	l4903
 10287  180C  3194  2C9E         	ljmp	l4905
 10288  180E  3194  2CA6         	ljmp	l4907
 10289  1810  3194  2CAF         	ljmp	l4909
 10290  1812  3194  2CB8         	ljmp	l4911
 10291  1814  3194  2CC1         	ljmp	l4913
 10292  1816  3194  2CCA         	ljmp	l4915
 10293  1818  3194  2CD2         	ljmp	l4917
 10294  181A  3194  2CDB         	ljmp	l4919
 10295  181C  3194  2CE4         	ljmp	l4921
 10296                           
 10297                           	psect	text25
 10298  1B60                     __ptext25:	
 10299 ;; *************** function _crc_append *****************
 10300 ;; Defined at:
 10301 ;;		line 143 in file "src/depend/crc16.c"
 10302 ;; Parameters:    Size  Location     Type
 10303 ;;  message         2    8[BANK0 ] PTR unsigned char 
 10304 ;;		 -> modbusBuf(60), sysData(132), 
 10305 ;;  n               2   10[BANK0 ] unsigned int 
 10306 ;; Auto vars:     Size  Location     Type
 10307 ;;  crc             2   17[BANK0 ] unsigned int 
 10308 ;; Return value:  Size  Location     Type
 10309 ;;                  1    wreg      void 
 10310 ;; Registers used:
 10311 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10312 ;; Tracked objects:
 10313 ;;		On entry : 0/0
 10314 ;;		On exit  : 0/0
 10315 ;;		Unchanged: 0/0
 10316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10317 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10318 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10319 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10320 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10321 ;;Total ram usage:       11 bytes
 10322 ;; Hardware stack levels used:    1
 10323 ;; Hardware stack levels required when called:    2
 10324 ;; This function calls:
 10325 ;;		_crc_sum
 10326 ;; This function is called by:
 10327 ;;		_sys_data_save
 10328 ;;		_modbus_response_illgeal_function
 10329 ;;		_modbus_response_write_single_register
 10330 ;;		_modbus_response_write_mult_register
 10331 ;;		_modbus_response_command
 10332 ;; This function uses a non-reentrant model
 10333 ;;
 10334                           
 10335                           
 10336                           ;psect for function _crc_append
 10337  1B60                     _crc_append:	
 10338                           
 10339                           ;crc16.c: 145: uint16_t crc;
 10340                           ;crc16.c: 146: crc = crc_sum(message, n);
 10341                           
 10342                           ;incstack = 0
 10343                           ; Regs used in _crc_append: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10344  1B60  0020               	movlb	0	; select bank0
 10345  1B61  0829               	movf	crc_append@message+1,w
 10346  1B62  00F4               	movwf	crc_sum@buf+1
 10347  1B63  0828               	movf	crc_append@message,w
 10348  1B64  00F3               	movwf	crc_sum@buf
 10349  1B65  082B               	movf	crc_append@n+1,w
 10350  1B66  00F6               	movwf	crc_sum@len+1
 10351  1B67  082A               	movf	crc_append@n,w
 10352  1B68  00F5               	movwf	crc_sum@len
 10353  1B69  319D  25EB         	fcall	_crc_sum
 10354  1B6B  0874               	movf	?_crc_sum+1,w
 10355  1B6C  0020               	movlb	0	; select bank0
 10356  1B6D  00B2               	movwf	crc_append@crc+1
 10357  1B6E  0873               	movf	?_crc_sum,w
 10358  1B6F  00B1               	movwf	crc_append@crc
 10359                           
 10360                           ;crc16.c: 147: message[n] = (uint8_t)(crc & 0xff);
 10361  1B70  082A               	movf	crc_append@n,w
 10362  1B71  0728               	addwf	crc_append@message,w
 10363  1B72  00AC               	movwf	??_crc_append
 10364  1B73  082B               	movf	crc_append@n+1,w
 10365  1B74  3D29               	addwfc	crc_append@message+1,w
 10366  1B75  00AD               	movwf	??_crc_append+1
 10367  1B76  082C               	movf	??_crc_append,w
 10368  1B77  0086               	movwf	6
 10369  1B78  082D               	movf	??_crc_append+1,w
 10370  1B79  0087               	movwf	7
 10371  1B7A  0831               	movf	crc_append@crc,w
 10372  1B7B  0081               	movwf	1
 10373                           
 10374                           ;crc16.c: 148: message[n+1] = (uint8_t)((crc >> 8) & 0xff);
 10375  1B7C  0832               	movf	crc_append@crc+1,w
 10376  1B7D  00AC               	movwf	??_crc_append
 10377  1B7E  082A               	movf	crc_append@n,w
 10378  1B7F  3E01               	addlw	1
 10379  1B80  00AD               	movwf	??_crc_append+1
 10380  1B81  3000               	movlw	0
 10381  1B82  3D2B               	addwfc	crc_append@n+1,w
 10382  1B83  00AE               	movwf	??_crc_append+2
 10383  1B84  082D               	movf	??_crc_append+1,w
 10384  1B85  0728               	addwf	crc_append@message,w
 10385  1B86  00AF               	movwf	??_crc_append+3
 10386  1B87  082E               	movf	??_crc_append+2,w
 10387  1B88  3D29               	addwfc	crc_append@message+1,w
 10388  1B89  00B0               	movwf	??_crc_append+4
 10389  1B8A  082F               	movf	??_crc_append+3,w
 10390  1B8B  0086               	movwf	6
 10391  1B8C  0830               	movf	??_crc_append+4,w
 10392  1B8D  0087               	movwf	7
 10393  1B8E  082C               	movf	??_crc_append,w
 10394  1B8F  0081               	movwf	1
 10395  1B90  0008               	return
 10396  1B91                     __end_of_crc_append:	
 10397                           
 10398                           	psect	text26
 10399  1BC6                     __ptext26:	
 10400 ;; *************** function _crc_verify *****************
 10401 ;; Defined at:
 10402 ;;		line 135 in file "src/depend/crc16.c"
 10403 ;; Parameters:    Size  Location     Type
 10404 ;;  message         2    8[BANK0 ] PTR unsigned char 
 10405 ;;		 -> modbusBuf(60), sysData(132), 
 10406 ;;  n               2   10[BANK0 ] unsigned int 
 10407 ;; Auto vars:     Size  Location     Type
 10408 ;;  expected        2   16[BANK0 ] unsigned int 
 10409 ;;  crccal          2   14[BANK0 ] unsigned int 
 10410 ;; Return value:  Size  Location     Type
 10411 ;;                  1    wreg      unsigned char 
 10412 ;; Registers used:
 10413 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10414 ;; Tracked objects:
 10415 ;;		On entry : 0/0
 10416 ;;		On exit  : 0/0
 10417 ;;		Unchanged: 0/0
 10418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10419 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10420 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10421 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10422 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10423 ;;Total ram usage:       10 bytes
 10424 ;; Hardware stack levels used:    1
 10425 ;; Hardware stack levels required when called:    2
 10426 ;; This function calls:
 10427 ;;		_crc_sum
 10428 ;;		_m_mem_cpy_len
 10429 ;; This function is called by:
 10430 ;;		_sys_data_init
 10431 ;;		_modbus_response_process
 10432 ;; This function uses a non-reentrant model
 10433 ;;
 10434                           
 10435                           
 10436                           ;psect for function _crc_verify
 10437  1BC6                     _crc_verify:	
 10438                           
 10439                           ;crc16.c: 137: uint16_t expected,crccal;
 10440                           ;crc16.c: 138: m_mem_cpy_len((uint8_t*)(&expected),(message+n-2),2);
 10441                           
 10442                           ;incstack = 0
 10443                           ; Regs used in _crc_verify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10444  1BC6  3030               	movlw	low crc_verify@expected
 10445  1BC7  0020               	movlb	0	; select bank0
 10446  1BC8  00A0               	movwf	m_mem_cpy_len@d
 10447  1BC9  3000               	movlw	high crc_verify@expected
 10448  1BCA  00A1               	movwf	m_mem_cpy_len@d+1
 10449  1BCB  082A               	movf	crc_verify@n,w
 10450  1BCC  0728               	addwf	crc_verify@message,w
 10451  1BCD  00AC               	movwf	??_crc_verify
 10452  1BCE  082B               	movf	crc_verify@n+1,w
 10453  1BCF  3D29               	addwfc	crc_verify@message+1,w
 10454  1BD0  00AD               	movwf	??_crc_verify+1
 10455  1BD1  082C               	movf	??_crc_verify,w
 10456  1BD2  3EFE               	addlw	254
 10457  1BD3  00A2               	movwf	m_mem_cpy_len@s
 10458  1BD4  30FF               	movlw	255
 10459  1BD5  3D2D               	addwfc	??_crc_verify+1,w
 10460  1BD6  00A3               	movwf	m_mem_cpy_len@s+1
 10461  1BD7  3002               	movlw	2
 10462  1BD8  00A4               	movwf	m_mem_cpy_len@len
 10463  1BD9  3000               	movlw	0
 10464  1BDA  00A5               	movwf	m_mem_cpy_len@len+1
 10465  1BDB  319A  22A7  319B   	fcall	_m_mem_cpy_len
 10466                           
 10467                           ;crc16.c: 139: crccal=crc_sum(message,n - 2);
 10468  1BDE  0020               	movlb	0	; select bank0
 10469  1BDF  0829               	movf	crc_verify@message+1,w
 10470  1BE0  00F4               	movwf	crc_sum@buf+1
 10471  1BE1  0828               	movf	crc_verify@message,w
 10472  1BE2  00F3               	movwf	crc_sum@buf
 10473  1BE3  082A               	movf	crc_verify@n,w
 10474  1BE4  3EFE               	addlw	254
 10475  1BE5  00F5               	movwf	crc_sum@len
 10476  1BE6  30FF               	movlw	255
 10477  1BE7  3D2B               	addwfc	crc_verify@n+1,w
 10478  1BE8  00F6               	movwf	crc_sum@len+1
 10479  1BE9  319D  25EB  319B   	fcall	_crc_sum
 10480  1BEC  0874               	movf	?_crc_sum+1,w
 10481  1BED  0020               	movlb	0	; select bank0
 10482  1BEE  00AF               	movwf	crc_verify@crccal+1
 10483  1BEF  0873               	movf	?_crc_sum,w
 10484  1BF0  00AE               	movwf	crc_verify@crccal
 10485                           
 10486                           ;crc16.c: 140: if(expected!=crccal)return 0;
 10487  1BF1  082F               	movf	crc_verify@crccal+1,w
 10488  1BF2  0631               	xorwf	crc_verify@expected+1,w
 10489  1BF3  1D03               	skipz
 10490  1BF4  2BF7               	goto	u4315
 10491  1BF5  082E               	movf	crc_verify@crccal,w
 10492  1BF6  0630               	xorwf	crc_verify@expected,w
 10493  1BF7                     u4315:	
 10494  1BF7  1903               	skipnz
 10495  1BF8  2BFB               	goto	l5025
 10496  1BF9  3000               	movlw	0
 10497  1BFA  0008               	return
 10498  1BFB                     l5025:	
 10499                           
 10500                           ;crc16.c: 141: return 1;
 10501  1BFB  3001               	movlw	1
 10502  1BFC  0008               	return
 10503  1BFD                     __end_of_crc_verify:	
 10504                           
 10505                           	psect	text27
 10506  1AA7                     __ptext27:	
 10507 ;; *************** function _m_mem_cpy_len *****************
 10508 ;; Defined at:
 10509 ;;		line 47 in file "src/depend/m_string.c"
 10510 ;; Parameters:    Size  Location     Type
 10511 ;;  d               2    0[BANK0 ] PTR unsigned char 
 10512 ;;		 -> crc_verify@expected(2), modbusBuf(60), 
 10513 ;;  s               2    2[BANK0 ] PTR unsigned char 
 10514 ;;		 -> modbusBuf(60), sysData(132), eusartRxBuffer(60), 
 10515 ;;  len             2    4[BANK0 ] unsigned int 
 10516 ;; Auto vars:     Size  Location     Type
 10517 ;;		None
 10518 ;; Return value:  Size  Location     Type
 10519 ;;                  1    wreg      void 
 10520 ;; Registers used:
 10521 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10522 ;; Tracked objects:
 10523 ;;		On entry : 0/0
 10524 ;;		On exit  : 0/0
 10525 ;;		Unchanged: 0/0
 10526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10527 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10529 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10530 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10531 ;;Total ram usage:        7 bytes
 10532 ;; Hardware stack levels used:    1
 10533 ;; Hardware stack levels required when called:    1
 10534 ;; This function calls:
 10535 ;;		Nothing
 10536 ;; This function is called by:
 10537 ;;		_main
 10538 ;;		_crc_verify
 10539 ;; This function uses a non-reentrant model
 10540 ;;
 10541                           
 10542                           
 10543                           ;psect for function _m_mem_cpy_len
 10544  1AA7                     _m_mem_cpy_len:	
 10545  1AA7                     l4959:	
 10546                           ;m_string.c: 50: while(len)
 10547                           
 10548                           ;incstack = 0
 10549                           ; Regs used in _m_mem_cpy_len: [wreg+fsr1l+fsr1h+status,2+status,0]
 10550                           
 10551  1AA7  0020               	movlb	0	; select bank0
 10552  1AA8  0824               	movf	m_mem_cpy_len@len,w
 10553  1AA9  0425               	iorwf	m_mem_cpy_len@len+1,w
 10554  1AAA  1903               	btfsc	3,2
 10555  1AAB  0008               	return
 10556                           
 10557                           ;m_string.c: 51: {
 10558                           ;m_string.c: 52: *d++=*s++;
 10559  1AAC  0020               	movlb	0	; select bank0
 10560  1AAD  0822               	movf	m_mem_cpy_len@s,w
 10561  1AAE  0086               	movwf	6
 10562  1AAF  0823               	movf	m_mem_cpy_len@s+1,w
 10563  1AB0  0087               	movwf	7
 10564  1AB1  0801               	movf	1,w
 10565  1AB2  00F3               	movwf	??_m_mem_cpy_len
 10566  1AB3  0820               	movf	m_mem_cpy_len@d,w
 10567  1AB4  0086               	movwf	6
 10568  1AB5  0821               	movf	m_mem_cpy_len@d+1,w
 10569  1AB6  0087               	movwf	7
 10570  1AB7  0873               	movf	??_m_mem_cpy_len,w
 10571  1AB8  0081               	movwf	1
 10572  1AB9  3001               	movlw	1
 10573  1ABA  07A2               	addwf	m_mem_cpy_len@s,f
 10574  1ABB  3000               	movlw	0
 10575  1ABC  3DA3               	addwfc	m_mem_cpy_len@s+1,f
 10576  1ABD  3001               	movlw	1
 10577  1ABE  07A0               	addwf	m_mem_cpy_len@d,f
 10578  1ABF  3000               	movlw	0
 10579  1AC0  3DA1               	addwfc	m_mem_cpy_len@d+1,f
 10580                           
 10581                           ;m_string.c: 53: len--;
 10582  1AC1  3001               	movlw	1
 10583  1AC2  02A4               	subwf	m_mem_cpy_len@len,f
 10584  1AC3  3000               	movlw	0
 10585  1AC4  3BA5               	subwfb	m_mem_cpy_len@len+1,f
 10586  1AC5  2AA7               	goto	l4959
 10587  1AC6                     __end_of_m_mem_cpy_len:	
 10588                           
 10589                           	psect	text28
 10590  1DEB                     __ptext28:	
 10591 ;; *************** function _crc_sum *****************
 10592 ;; Defined at:
 10593 ;;		line 116 in file "src/depend/crc16.c"
 10594 ;; Parameters:    Size  Location     Type
 10595 ;;  buf             2    3[COMMON] PTR unsigned char 
 10596 ;;		 -> modbusBuf(60), sysData(132), 
 10597 ;;  len             2    5[COMMON] unsigned int 
 10598 ;; Auto vars:     Size  Location     Type
 10599 ;;  crc             2    6[BANK0 ] unsigned int 
 10600 ;;  i               2    4[BANK0 ] unsigned int 
 10601 ;;  j               2    2[BANK0 ] unsigned int 
 10602 ;; Return value:  Size  Location     Type
 10603 ;;                  2    3[COMMON] unsigned int 
 10604 ;; Registers used:
 10605 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10606 ;; Tracked objects:
 10607 ;;		On entry : 0/0
 10608 ;;		On exit  : 0/0
 10609 ;;		Unchanged: 0/0
 10610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10611 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10612 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10613 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10614 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10615 ;;Total ram usage:       12 bytes
 10616 ;; Hardware stack levels used:    1
 10617 ;; Hardware stack levels required when called:    1
 10618 ;; This function calls:
 10619 ;;		Nothing
 10620 ;; This function is called by:
 10621 ;;		_crc_verify
 10622 ;;		_crc_append
 10623 ;; This function uses a non-reentrant model
 10624 ;;
 10625                           
 10626                           
 10627                           ;psect for function _crc_sum
 10628  1DEB                     _crc_sum:	
 10629                           
 10630                           ;crc16.c: 118: uint16_t crc=0xFFFF;
 10631                           
 10632                           ;incstack = 0
 10633                           ; Regs used in _crc_sum: [wreg+fsr1l+fsr1h+status,2+status,0]
 10634  1DEB  30FF               	movlw	255
 10635  1DEC  0020               	movlb	0	; select bank0
 10636  1DED  00A6               	movwf	crc_sum@crc
 10637  1DEE  30FF               	movlw	255
 10638  1DEF  00A7               	movwf	crc_sum@crc+1
 10639                           
 10640                           ;crc16.c: 119: uint16_t i, j;
 10641                           ;crc16.c: 120: for ( j=0; j<len;j++){
 10642  1DF0  01A2               	clrf	crc_sum@j
 10643  1DF1  01A3               	clrf	crc_sum@j+1
 10644  1DF2                     l1101:	
 10645  1DF2  0876               	movf	crc_sum@len+1,w
 10646  1DF3  0223               	subwf	crc_sum@j+1,w
 10647  1DF4  1D03               	skipz
 10648  1DF5  2DF8               	goto	u4145
 10649  1DF6  0875               	movf	crc_sum@len,w
 10650  1DF7  0222               	subwf	crc_sum@j,w
 10651  1DF8                     u4145:	
 10652  1DF8  1803               	btfsc	3,0
 10653  1DF9  2E3C               	goto	l4805
 10654                           
 10655                           ;crc16.c: 121: crc=crc ^*buf++;
 10656  1DFA  0873               	movf	crc_sum@buf,w
 10657  1DFB  0086               	movwf	6
 10658  1DFC  0874               	movf	crc_sum@buf+1,w
 10659  1DFD  0087               	movwf	7
 10660  1DFE  0826               	movf	crc_sum@crc,w
 10661  1DFF  0601               	xorwf	1,w
 10662  1E00  00A6               	movwf	crc_sum@crc
 10663  1E01  0827               	movf	crc_sum@crc+1,w
 10664  1E02  00A7               	movwf	crc_sum@crc+1
 10665  1E03  3001               	movlw	1
 10666  1E04  07F3               	addwf	crc_sum@buf,f
 10667  1E05  3000               	movlw	0
 10668  1E06  3DF4               	addwfc	crc_sum@buf+1,f
 10669                           
 10670                           ;crc16.c: 122: for ( i=0; i<8; i++){
 10671  1E07  01A4               	clrf	crc_sum@i
 10672  1E08  01A5               	clrf	crc_sum@i+1
 10673  1E09  3000               	movlw	0
 10674  1E0A  0225               	subwf	crc_sum@i+1,w
 10675  1E0B  3008               	movlw	8
 10676  1E0C  1903               	skipnz
 10677  1E0D  0224               	subwf	crc_sum@i,w
 10678  1E0E  1803               	btfsc	3,0
 10679  1E0F  2E37               	goto	l4803
 10680  1E10                     l1103:	
 10681                           
 10682                           ;crc16.c: 124: if(crc&0x0001){
 10683  1E10  1C26               	btfss	crc_sum@crc,0
 10684  1E11  2E22               	goto	l4797
 10685                           
 10686                           ;crc16.c: 125: crc=crc>>1;
 10687  1E12  0827               	movf	crc_sum@crc+1,w
 10688  1E13  00A1               	movwf	??_crc_sum+1
 10689  1E14  0826               	movf	crc_sum@crc,w
 10690  1E15  00A0               	movwf	??_crc_sum
 10691  1E16  36A1               	lsrf	??_crc_sum+1,f
 10692  1E17  0CA0               	rrf	??_crc_sum,f
 10693  1E18  0820               	movf	??_crc_sum,w
 10694  1E19  00A6               	movwf	crc_sum@crc
 10695  1E1A  0821               	movf	??_crc_sum+1,w
 10696  1E1B  00A7               	movwf	crc_sum@crc+1
 10697                           
 10698                           ;crc16.c: 126: crc=crc^ 0xa001;
 10699  1E1C  3001               	movlw	1
 10700  1E1D  0626               	xorwf	crc_sum@crc,w
 10701  1E1E  00A6               	movwf	crc_sum@crc
 10702  1E1F  30A0               	movlw	160
 10703  1E20  0627               	xorwf	crc_sum@crc+1,w
 10704  1E21  2E2B               	goto	L7
 10705  1E22                     l4797:	
 10706                           ;crc16.c: 127: }else{
 10707                           
 10708                           
 10709                           ;crc16.c: 128: crc=crc>>1;
 10710  1E22  0827               	movf	crc_sum@crc+1,w
 10711  1E23  00A1               	movwf	??_crc_sum+1
 10712  1E24  0826               	movf	crc_sum@crc,w
 10713  1E25  00A0               	movwf	??_crc_sum
 10714  1E26  36A1               	lsrf	??_crc_sum+1,f
 10715  1E27  0CA0               	rrf	??_crc_sum,f
 10716  1E28  0820               	movf	??_crc_sum,w
 10717  1E29  00A6               	movwf	crc_sum@crc
 10718  1E2A  0821               	movf	??_crc_sum+1,w
 10719  1E2B                     L7:	
 10720  1E2B  00A7               	movwf	crc_sum@crc+1
 10721  1E2C  3001               	movlw	1
 10722  1E2D  07A4               	addwf	crc_sum@i,f
 10723  1E2E  3000               	movlw	0
 10724  1E2F  3DA5               	addwfc	crc_sum@i+1,f
 10725  1E30  3000               	movlw	0
 10726  1E31  0225               	subwf	crc_sum@i+1,w
 10727  1E32  3008               	movlw	8
 10728  1E33  1903               	skipnz
 10729  1E34  0224               	subwf	crc_sum@i,w
 10730  1E35  1C03               	skipc
 10731  1E36  2E10               	goto	l1103
 10732  1E37                     l4803:	
 10733  1E37  3001               	movlw	1
 10734  1E38  07A2               	addwf	crc_sum@j,f
 10735  1E39  3000               	movlw	0
 10736  1E3A  3DA3               	addwfc	crc_sum@j+1,f
 10737  1E3B  2DF2               	goto	l1101
 10738  1E3C                     l4805:	
 10739                           
 10740                           ;crc16.c: 129: }
 10741                           ;crc16.c: 130: }
 10742                           ;crc16.c: 132: }
 10743                           ;crc16.c: 133: return ( crc);
 10744  1E3C  0827               	movf	crc_sum@crc+1,w
 10745  1E3D  00F4               	movwf	?_crc_sum+1
 10746  1E3E  0826               	movf	crc_sum@crc,w
 10747  1E3F  00F3               	movwf	?_crc_sum
 10748  1E40  0008               	return
 10749  1E41                     __end_of_crc_sum:	
 10750                           
 10751                           	psect	text29
 10752  1136                     __ptext29:	
 10753 ;; *************** function _calc_temp_rs *****************
 10754 ;; Defined at:
 10755 ;;		line 206 in file "src/api/sample.c"
 10756 ;; Parameters:    Size  Location     Type
 10757 ;;		None
 10758 ;; Auto vars:     Size  Location     Type
 10759 ;;  y               4   25[BANK0 ] unsigned long 
 10760 ;;  x               4   21[BANK0 ] unsigned long 
 10761 ;; Return value:  Size  Location     Type
 10762 ;;                  4   13[BANK0 ] unsigned long 
 10763 ;; Registers used:
 10764 ;;		wreg, status,2, status,0, pclath, cstack
 10765 ;; Tracked objects:
 10766 ;;		On entry : 0/0
 10767 ;;		On exit  : 0/0
 10768 ;;		Unchanged: 0/0
 10769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10770 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10771 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10772 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10773 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10774 ;;Total ram usage:       16 bytes
 10775 ;; Hardware stack levels used:    1
 10776 ;; Hardware stack levels required when called:    2
 10777 ;; This function calls:
 10778 ;;		___lldiv
 10779 ;;		___lmul
 10780 ;; This function is called by:
 10781 ;;		_main
 10782 ;; This function uses a non-reentrant model
 10783 ;;
 10784                           
 10785                           
 10786                           ;psect for function _calc_temp_rs
 10787  1136                     _calc_temp_rs:	
 10788                           
 10789                           ;sample.c: 219: uint32_t x,y;
 10790                           ;sample.c: 220: y=12000UL;
 10791                           
 10792                           ;incstack = 0
 10793                           ; Regs used in _calc_temp_rs: [wreg+status,2+status,0+pclath+cstack]
 10794  1136  3000               	movlw	0
 10795  1137  0020               	movlb	0	; select bank0
 10796  1138  00BC               	movwf	calc_temp_rs@y+3
 10797  1139  3000               	movlw	0
 10798  113A  00BB               	movwf	calc_temp_rs@y+2
 10799  113B  302E               	movlw	46
 10800  113C  00BA               	movwf	calc_temp_rs@y+1
 10801  113D  30E0               	movlw	224
 10802  113E  00B9               	movwf	calc_temp_rs@y
 10803                           
 10804                           ;sample.c: 221: y=y*rtAdcValueRsHi;
 10805  113F  0021               	movlb	1	; select bank1
 10806  1140  0854               	movf	_rtAdcValueRsHi^(0+128),w
 10807  1141  0020               	movlb	0	; select bank0
 10808  1142  00A0               	movwf	___lmul@multiplier
 10809  1143  0021               	movlb	1	; select bank1
 10810  1144  0855               	movf	(_rtAdcValueRsHi+1)^(0+128),w
 10811  1145  0020               	movlb	0	; select bank0
 10812  1146  00A1               	movwf	___lmul@multiplier+1
 10813  1147  01A2               	clrf	___lmul@multiplier+2
 10814  1148  01A3               	clrf	___lmul@multiplier+3
 10815  1149  083C               	movf	calc_temp_rs@y+3,w
 10816  114A  00A7               	movwf	___lmul@multiplicand+3
 10817  114B  083B               	movf	calc_temp_rs@y+2,w
 10818  114C  00A6               	movwf	___lmul@multiplicand+2
 10819  114D  083A               	movf	calc_temp_rs@y+1,w
 10820  114E  00A5               	movwf	___lmul@multiplicand+1
 10821  114F  0839               	movf	calc_temp_rs@y,w
 10822  1150  00A4               	movwf	___lmul@multiplicand
 10823  1151  319B  2330  3191   	fcall	___lmul
 10824  1154  0020               	movlb	0	; select bank0
 10825  1155  0823               	movf	?___lmul+3,w
 10826  1156  00BC               	movwf	calc_temp_rs@y+3
 10827  1157  0822               	movf	?___lmul+2,w
 10828  1158  00BB               	movwf	calc_temp_rs@y+2
 10829  1159  0821               	movf	?___lmul+1,w
 10830  115A  00BA               	movwf	calc_temp_rs@y+1
 10831  115B  0820               	movf	?___lmul,w
 10832  115C  00B9               	movwf	calc_temp_rs@y
 10833                           
 10834                           ;sample.c: 222: x=rtAdcValueRsLo;
 10835  115D  0856               	movf	_rtAdcValueRsLo,w
 10836  115E  00B5               	movwf	calc_temp_rs@x
 10837  115F  0857               	movf	_rtAdcValueRsLo+1,w
 10838  1160  00B6               	movwf	calc_temp_rs@x+1
 10839  1161  01B7               	clrf	calc_temp_rs@x+2
 10840  1162  01B8               	clrf	calc_temp_rs@x+3
 10841                           
 10842                           ;sample.c: 223: y=y/x;
 10843  1163  0838               	movf	calc_temp_rs@x+3,w
 10844  1164  00A3               	movwf	___lldiv@divisor+3
 10845  1165  0837               	movf	calc_temp_rs@x+2,w
 10846  1166  00A2               	movwf	___lldiv@divisor+2
 10847  1167  0836               	movf	calc_temp_rs@x+1,w
 10848  1168  00A1               	movwf	___lldiv@divisor+1
 10849  1169  0835               	movf	calc_temp_rs@x,w
 10850  116A  00A0               	movwf	___lldiv@divisor
 10851  116B  083C               	movf	calc_temp_rs@y+3,w
 10852  116C  00A7               	movwf	___lldiv@dividend+3
 10853  116D  083B               	movf	calc_temp_rs@y+2,w
 10854  116E  00A6               	movwf	___lldiv@dividend+2
 10855  116F  083A               	movf	calc_temp_rs@y+1,w
 10856  1170  00A5               	movwf	___lldiv@dividend+1
 10857  1171  0839               	movf	calc_temp_rs@y,w
 10858  1172  00A4               	movwf	___lldiv@dividend
 10859  1173  319D  2544  3191   	fcall	___lldiv
 10860  1176  0020               	movlb	0	; select bank0
 10861  1177  0823               	movf	?___lldiv+3,w
 10862  1178  00BC               	movwf	calc_temp_rs@y+3
 10863  1179  0822               	movf	?___lldiv+2,w
 10864  117A  00BB               	movwf	calc_temp_rs@y+2
 10865  117B  0821               	movf	?___lldiv+1,w
 10866  117C  00BA               	movwf	calc_temp_rs@y+1
 10867  117D  0820               	movf	?___lldiv,w
 10868  117E  00B9               	movwf	calc_temp_rs@y
 10869                           
 10870                           ;sample.c: 224: if(y<2000)y=2000;
 10871  117F  083C               	movf	calc_temp_rs@y+3,w
 10872  1180  1D03               	btfss	3,2
 10873  1181  2993               	goto	l5331
 10874  1182  083B               	movf	calc_temp_rs@y+2,w
 10875  1183  1D03               	btfss	3,2
 10876  1184  2993               	goto	l5331
 10877  1185  30D0               	movlw	208
 10878  1186  0239               	subwf	calc_temp_rs@y,w
 10879  1187  3007               	movlw	7
 10880  1188  3B3A               	subwfb	calc_temp_rs@y+1,w
 10881  1189  1803               	btfsc	3,0
 10882  118A  2993               	goto	l5331
 10883  118B  3000               	movlw	0
 10884  118C  00BC               	movwf	calc_temp_rs@y+3
 10885  118D  3000               	movlw	0
 10886  118E  00BB               	movwf	calc_temp_rs@y+2
 10887  118F  3007               	movlw	7
 10888  1190  00BA               	movwf	calc_temp_rs@y+1
 10889  1191  30D0               	movlw	208
 10890  1192  00B9               	movwf	calc_temp_rs@y
 10891  1193                     l5331:	
 10892                           
 10893                           ;sample.c: 225: if(y>25000)y=25000;
 10894  1193  083C               	movf	calc_temp_rs@y+3,w
 10895  1194  1D03               	btfss	3,2
 10896  1195  299F               	goto	l5333
 10897  1196  083B               	movf	calc_temp_rs@y+2,w
 10898  1197  1D03               	btfss	3,2
 10899  1198  299F               	goto	l5333
 10900  1199  30A9               	movlw	169
 10901  119A  0239               	subwf	calc_temp_rs@y,w
 10902  119B  3061               	movlw	97
 10903  119C  3B3A               	subwfb	calc_temp_rs@y+1,w
 10904  119D  1C03               	btfss	3,0
 10905  119E  29A7               	goto	l648
 10906  119F                     l5333:	
 10907  119F  3000               	movlw	0
 10908  11A0  00BC               	movwf	calc_temp_rs@y+3
 10909  11A1  3000               	movlw	0
 10910  11A2  00BB               	movwf	calc_temp_rs@y+2
 10911  11A3  3061               	movlw	97
 10912  11A4  00BA               	movwf	calc_temp_rs@y+1
 10913  11A5  30A8               	movlw	168
 10914  11A6  00B9               	movwf	calc_temp_rs@y
 10915  11A7                     l648:	
 10916                           
 10917                           ;sample.c: 226: y=y-1000;
 10918  11A7  3018               	movlw	24
 10919  11A8  00B1               	movwf	??_calc_temp_rs
 10920  11A9  30FC               	movlw	252
 10921  11AA  00B2               	movwf	??_calc_temp_rs+1
 10922  11AB  30FF               	movlw	255
 10923  11AC  00B3               	movwf	??_calc_temp_rs+2
 10924  11AD  30FF               	movlw	255
 10925  11AE  00B4               	movwf	??_calc_temp_rs+3
 10926  11AF  0839               	movf	calc_temp_rs@y,w
 10927  11B0  07B1               	addwf	??_calc_temp_rs,f
 10928  11B1  083A               	movf	calc_temp_rs@y+1,w
 10929  11B2  3DB2               	addwfc	??_calc_temp_rs+1,f
 10930  11B3  083B               	movf	calc_temp_rs@y+2,w
 10931  11B4  3DB3               	addwfc	??_calc_temp_rs+2,f
 10932  11B5  083C               	movf	calc_temp_rs@y+3,w
 10933  11B6  3DB4               	addwfc	??_calc_temp_rs+3,f
 10934  11B7  0834               	movf	??_calc_temp_rs+3,w
 10935  11B8  00BC               	movwf	calc_temp_rs@y+3
 10936  11B9  0833               	movf	??_calc_temp_rs+2,w
 10937  11BA  00BB               	movwf	calc_temp_rs@y+2
 10938  11BB  0832               	movf	??_calc_temp_rs+1,w
 10939  11BC  00BA               	movwf	calc_temp_rs@y+1
 10940  11BD  0831               	movf	??_calc_temp_rs,w
 10941  11BE  00B9               	movwf	calc_temp_rs@y
 10942                           
 10943                           ;sample.c: 228: return (uint16_t)y;
 10944  11BF  0839               	movf	calc_temp_rs@y,w
 10945  11C0  00AD               	movwf	?_calc_temp_rs
 10946  11C1  083A               	movf	calc_temp_rs@y+1,w
 10947  11C2  00AE               	movwf	?_calc_temp_rs+1
 10948  11C3  01AF               	clrf	?_calc_temp_rs+2
 10949  11C4  01B0               	clrf	?_calc_temp_rs+3
 10950  11C5  0008               	return
 10951  11C6                     __end_of_calc_temp_rs:	
 10952                           
 10953                           	psect	text30
 10954  0F12                     __ptext30:	
 10955 ;; *************** function _calc_temp_rc *****************
 10956 ;; Defined at:
 10957 ;;		line 232 in file "src/api/sample.c"
 10958 ;; Parameters:    Size  Location     Type
 10959 ;;		None
 10960 ;; Auto vars:     Size  Location     Type
 10961 ;;  y               4   29[BANK0 ] unsigned long 
 10962 ;;  x               4   25[BANK0 ] unsigned long 
 10963 ;; Return value:  Size  Location     Type
 10964 ;;                  4   13[BANK0 ] unsigned long 
 10965 ;; Registers used:
 10966 ;;		wreg, status,2, status,0, pclath, cstack
 10967 ;; Tracked objects:
 10968 ;;		On entry : 0/0
 10969 ;;		On exit  : 0/0
 10970 ;;		Unchanged: 0/0
 10971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10972 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10973 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10974 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10975 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10976 ;;Total ram usage:       20 bytes
 10977 ;; Hardware stack levels used:    1
 10978 ;; Hardware stack levels required when called:    2
 10979 ;; This function calls:
 10980 ;;		___lldiv
 10981 ;;		___lmul
 10982 ;; This function is called by:
 10983 ;;		_main
 10984 ;; This function uses a non-reentrant model
 10985 ;;
 10986                           
 10987                           
 10988                           ;psect for function _calc_temp_rc
 10989  0F12                     _calc_temp_rc:	
 10990                           
 10991                           ;sample.c: 235: uint32_t x,y;
 10992                           ;sample.c: 236: x=300000UL;
 10993                           
 10994                           ;incstack = 0
 10995                           ; Regs used in _calc_temp_rc: [wreg+status,2+status,0+pclath+cstack]
 10996  0F12  3000               	movlw	0
 10997  0F13  0020               	movlb	0	; select bank0
 10998  0F14  00BC               	movwf	calc_temp_rc@x+3
 10999  0F15  3004               	movlw	4
 11000  0F16  00BB               	movwf	calc_temp_rc@x+2
 11001  0F17  3093               	movlw	147
 11002  0F18  00BA               	movwf	calc_temp_rc@x+1
 11003  0F19  30E0               	movlw	224
 11004  0F1A  00B9               	movwf	calc_temp_rc@x
 11005                           
 11006                           ;sample.c: 237: x=x*rtAdcValueRcLo;
 11007  0F1B  0854               	movf	_rtAdcValueRcLo,w
 11008  0F1C  00A0               	movwf	___lmul@multiplier
 11009  0F1D  0855               	movf	_rtAdcValueRcLo+1,w
 11010  0F1E  00A1               	movwf	___lmul@multiplier+1
 11011  0F1F  01A2               	clrf	___lmul@multiplier+2
 11012  0F20  01A3               	clrf	___lmul@multiplier+3
 11013  0F21  083C               	movf	calc_temp_rc@x+3,w
 11014  0F22  00A7               	movwf	___lmul@multiplicand+3
 11015  0F23  083B               	movf	calc_temp_rc@x+2,w
 11016  0F24  00A6               	movwf	___lmul@multiplicand+2
 11017  0F25  083A               	movf	calc_temp_rc@x+1,w
 11018  0F26  00A5               	movwf	___lmul@multiplicand+1
 11019  0F27  0839               	movf	calc_temp_rc@x,w
 11020  0F28  00A4               	movwf	___lmul@multiplicand
 11021  0F29  319B  2330  318F   	fcall	___lmul
 11022  0F2C  0020               	movlb	0	; select bank0
 11023  0F2D  0823               	movf	?___lmul+3,w
 11024  0F2E  00BC               	movwf	calc_temp_rc@x+3
 11025  0F2F  0822               	movf	?___lmul+2,w
 11026  0F30  00BB               	movwf	calc_temp_rc@x+2
 11027  0F31  0821               	movf	?___lmul+1,w
 11028  0F32  00BA               	movwf	calc_temp_rc@x+1
 11029  0F33  0820               	movf	?___lmul,w
 11030  0F34  00B9               	movwf	calc_temp_rc@x
 11031                           
 11032                           ;sample.c: 240: y=rtAdcValueRcHi;
 11033  0F35  0021               	movlb	1	; select bank1
 11034  0F36  0852               	movf	_rtAdcValueRcHi^(0+128),w
 11035  0F37  0020               	movlb	0	; select bank0
 11036  0F38  00BD               	movwf	calc_temp_rc@y
 11037  0F39  0021               	movlb	1	; select bank1
 11038  0F3A  0853               	movf	(_rtAdcValueRcHi+1)^(0+128),w
 11039  0F3B  0020               	movlb	0	; select bank0
 11040  0F3C  00BE               	movwf	calc_temp_rc@y+1
 11041  0F3D  01BF               	clrf	calc_temp_rc@y+2
 11042  0F3E  01C0               	clrf	calc_temp_rc@y+3
 11043                           
 11044                           ;sample.c: 241: y=y*3100;
 11045  0F3F  0840               	movf	calc_temp_rc@y+3,w
 11046  0F40  00A3               	movwf	___lmul@multiplier+3
 11047  0F41  083F               	movf	calc_temp_rc@y+2,w
 11048  0F42  00A2               	movwf	___lmul@multiplier+2
 11049  0F43  083E               	movf	calc_temp_rc@y+1,w
 11050  0F44  00A1               	movwf	___lmul@multiplier+1
 11051  0F45  083D               	movf	calc_temp_rc@y,w
 11052  0F46  00A0               	movwf	___lmul@multiplier
 11053  0F47  3000               	movlw	0
 11054  0F48  00A7               	movwf	___lmul@multiplicand+3
 11055  0F49  3000               	movlw	0
 11056  0F4A  00A6               	movwf	___lmul@multiplicand+2
 11057  0F4B  300C               	movlw	12
 11058  0F4C  00A5               	movwf	___lmul@multiplicand+1
 11059  0F4D  301C               	movlw	28
 11060  0F4E  00A4               	movwf	___lmul@multiplicand
 11061  0F4F  319B  2330  318F   	fcall	___lmul
 11062  0F52  0020               	movlb	0	; select bank0
 11063  0F53  0823               	movf	?___lmul+3,w
 11064  0F54  00C0               	movwf	calc_temp_rc@y+3
 11065  0F55  0822               	movf	?___lmul+2,w
 11066  0F56  00BF               	movwf	calc_temp_rc@y+2
 11067  0F57  0821               	movf	?___lmul+1,w
 11068  0F58  00BE               	movwf	calc_temp_rc@y+1
 11069  0F59  0820               	movf	?___lmul,w
 11070  0F5A  00BD               	movwf	calc_temp_rc@y
 11071                           
 11072                           ;sample.c: 242: y=y/100;
 11073  0F5B  3000               	movlw	0
 11074  0F5C  00A3               	movwf	___lldiv@divisor+3
 11075  0F5D  3000               	movlw	0
 11076  0F5E  00A2               	movwf	___lldiv@divisor+2
 11077  0F5F  3000               	movlw	0
 11078  0F60  00A1               	movwf	___lldiv@divisor+1
 11079  0F61  3064               	movlw	100
 11080  0F62  00A0               	movwf	___lldiv@divisor
 11081  0F63  0840               	movf	calc_temp_rc@y+3,w
 11082  0F64  00A7               	movwf	___lldiv@dividend+3
 11083  0F65  083F               	movf	calc_temp_rc@y+2,w
 11084  0F66  00A6               	movwf	___lldiv@dividend+2
 11085  0F67  083E               	movf	calc_temp_rc@y+1,w
 11086  0F68  00A5               	movwf	___lldiv@dividend+1
 11087  0F69  083D               	movf	calc_temp_rc@y,w
 11088  0F6A  00A4               	movwf	___lldiv@dividend
 11089  0F6B  319D  2544  318F   	fcall	___lldiv
 11090  0F6E  0020               	movlb	0	; select bank0
 11091  0F6F  0823               	movf	?___lldiv+3,w
 11092  0F70  00C0               	movwf	calc_temp_rc@y+3
 11093  0F71  0822               	movf	?___lldiv+2,w
 11094  0F72  00BF               	movwf	calc_temp_rc@y+2
 11095  0F73  0821               	movf	?___lldiv+1,w
 11096  0F74  00BE               	movwf	calc_temp_rc@y+1
 11097  0F75  0820               	movf	?___lldiv,w
 11098  0F76  00BD               	movwf	calc_temp_rc@y
 11099                           
 11100                           ;sample.c: 243: y=y-rtAdcValueRcLo;
 11101  0F77  083D               	movf	calc_temp_rc@y,w
 11102  0F78  00B1               	movwf	??_calc_temp_rc
 11103  0F79  083E               	movf	calc_temp_rc@y+1,w
 11104  0F7A  00B2               	movwf	??_calc_temp_rc+1
 11105  0F7B  083F               	movf	calc_temp_rc@y+2,w
 11106  0F7C  00B3               	movwf	??_calc_temp_rc+2
 11107  0F7D  0840               	movf	calc_temp_rc@y+3,w
 11108  0F7E  00B4               	movwf	??_calc_temp_rc+3
 11109  0F7F  0854               	movf	_rtAdcValueRcLo,w
 11110  0F80  00B5               	movwf	??_calc_temp_rc+4
 11111  0F81  0855               	movf	_rtAdcValueRcLo+1,w
 11112  0F82  00B6               	movwf	??_calc_temp_rc+5
 11113  0F83  01B7               	clrf	??_calc_temp_rc+6
 11114  0F84  01B8               	clrf	??_calc_temp_rc+7
 11115  0F85  09B5               	comf	??_calc_temp_rc+4,f
 11116  0F86  09B6               	comf	??_calc_temp_rc+5,f
 11117  0F87  09B7               	comf	??_calc_temp_rc+6,f
 11118  0F88  09B8               	comf	??_calc_temp_rc+7,f
 11119  0F89  0AB5               	incf	??_calc_temp_rc+4,f
 11120  0F8A  1903               	skipnz
 11121  0F8B  0AB6               	incf	??_calc_temp_rc+5,f
 11122  0F8C  1903               	skipnz
 11123  0F8D  0AB7               	incf	??_calc_temp_rc+6,f
 11124  0F8E  1903               	skipnz
 11125  0F8F  0AB8               	incf	??_calc_temp_rc+7,f
 11126  0F90  0835               	movf	??_calc_temp_rc+4,w
 11127  0F91  07B1               	addwf	??_calc_temp_rc,f
 11128  0F92  0836               	movf	??_calc_temp_rc+5,w
 11129  0F93  3DB2               	addwfc	??_calc_temp_rc+1,f
 11130  0F94  0837               	movf	??_calc_temp_rc+6,w
 11131  0F95  3DB3               	addwfc	??_calc_temp_rc+2,f
 11132  0F96  0838               	movf	??_calc_temp_rc+7,w
 11133  0F97  3DB4               	addwfc	??_calc_temp_rc+3,f
 11134  0F98  0834               	movf	??_calc_temp_rc+3,w
 11135  0F99  00C0               	movwf	calc_temp_rc@y+3
 11136  0F9A  0833               	movf	??_calc_temp_rc+2,w
 11137  0F9B  00BF               	movwf	calc_temp_rc@y+2
 11138  0F9C  0832               	movf	??_calc_temp_rc+1,w
 11139  0F9D  00BE               	movwf	calc_temp_rc@y+1
 11140  0F9E  0831               	movf	??_calc_temp_rc,w
 11141  0F9F  00BD               	movwf	calc_temp_rc@y
 11142                           
 11143                           ;sample.c: 246: y=x/y;
 11144  0FA0  0840               	movf	calc_temp_rc@y+3,w
 11145  0FA1  00A3               	movwf	___lldiv@divisor+3
 11146  0FA2  083F               	movf	calc_temp_rc@y+2,w
 11147  0FA3  00A2               	movwf	___lldiv@divisor+2
 11148  0FA4  083E               	movf	calc_temp_rc@y+1,w
 11149  0FA5  00A1               	movwf	___lldiv@divisor+1
 11150  0FA6  083D               	movf	calc_temp_rc@y,w
 11151  0FA7  00A0               	movwf	___lldiv@divisor
 11152  0FA8  083C               	movf	calc_temp_rc@x+3,w
 11153  0FA9  00A7               	movwf	___lldiv@dividend+3
 11154  0FAA  083B               	movf	calc_temp_rc@x+2,w
 11155  0FAB  00A6               	movwf	___lldiv@dividend+2
 11156  0FAC  083A               	movf	calc_temp_rc@x+1,w
 11157  0FAD  00A5               	movwf	___lldiv@dividend+1
 11158  0FAE  0839               	movf	calc_temp_rc@x,w
 11159  0FAF  00A4               	movwf	___lldiv@dividend
 11160  0FB0  319D  2544  318F   	fcall	___lldiv
 11161  0FB3  0020               	movlb	0	; select bank0
 11162  0FB4  0823               	movf	?___lldiv+3,w
 11163  0FB5  00C0               	movwf	calc_temp_rc@y+3
 11164  0FB6  0822               	movf	?___lldiv+2,w
 11165  0FB7  00BF               	movwf	calc_temp_rc@y+2
 11166  0FB8  0821               	movf	?___lldiv+1,w
 11167  0FB9  00BE               	movwf	calc_temp_rc@y+1
 11168  0FBA  0820               	movf	?___lldiv,w
 11169  0FBB  00BD               	movwf	calc_temp_rc@y
 11170                           
 11171                           ;sample.c: 247: if(y<2000)y=2000;
 11172  0FBC  0840               	movf	calc_temp_rc@y+3,w
 11173  0FBD  1D03               	btfss	3,2
 11174  0FBE  2FD0               	goto	l5349
 11175  0FBF  083F               	movf	calc_temp_rc@y+2,w
 11176  0FC0  1D03               	btfss	3,2
 11177  0FC1  2FD0               	goto	l5349
 11178  0FC2  30D0               	movlw	208
 11179  0FC3  023D               	subwf	calc_temp_rc@y,w
 11180  0FC4  3007               	movlw	7
 11181  0FC5  3B3E               	subwfb	calc_temp_rc@y+1,w
 11182  0FC6  1803               	btfsc	3,0
 11183  0FC7  2FD0               	goto	l5349
 11184  0FC8  3000               	movlw	0
 11185  0FC9  00C0               	movwf	calc_temp_rc@y+3
 11186  0FCA  3000               	movlw	0
 11187  0FCB  00BF               	movwf	calc_temp_rc@y+2
 11188  0FCC  3007               	movlw	7
 11189  0FCD  00BE               	movwf	calc_temp_rc@y+1
 11190  0FCE  30D0               	movlw	208
 11191  0FCF  00BD               	movwf	calc_temp_rc@y
 11192  0FD0                     l5349:	
 11193                           
 11194                           ;sample.c: 248: if(y>25000)y=25000;
 11195  0FD0  0840               	movf	calc_temp_rc@y+3,w
 11196  0FD1  1D03               	btfss	3,2
 11197  0FD2  2FDC               	goto	l5351
 11198  0FD3  083F               	movf	calc_temp_rc@y+2,w
 11199  0FD4  1D03               	btfss	3,2
 11200  0FD5  2FDC               	goto	l5351
 11201  0FD6  30A9               	movlw	169
 11202  0FD7  023D               	subwf	calc_temp_rc@y,w
 11203  0FD8  3061               	movlw	97
 11204  0FD9  3B3E               	subwfb	calc_temp_rc@y+1,w
 11205  0FDA  1C03               	btfss	3,0
 11206  0FDB  2FE4               	goto	l653
 11207  0FDC                     l5351:	
 11208  0FDC  3000               	movlw	0
 11209  0FDD  00C0               	movwf	calc_temp_rc@y+3
 11210  0FDE  3000               	movlw	0
 11211  0FDF  00BF               	movwf	calc_temp_rc@y+2
 11212  0FE0  3061               	movlw	97
 11213  0FE1  00BE               	movwf	calc_temp_rc@y+1
 11214  0FE2  30A8               	movlw	168
 11215  0FE3  00BD               	movwf	calc_temp_rc@y
 11216  0FE4                     l653:	
 11217                           
 11218                           ;sample.c: 250: return (uint16_t)y;
 11219  0FE4  083D               	movf	calc_temp_rc@y,w
 11220  0FE5  00AD               	movwf	?_calc_temp_rc
 11221  0FE6  083E               	movf	calc_temp_rc@y+1,w
 11222  0FE7  00AE               	movwf	?_calc_temp_rc+1
 11223  0FE8  01AF               	clrf	?_calc_temp_rc+2
 11224  0FE9  01B0               	clrf	?_calc_temp_rc+3
 11225  0FEA  0008               	return
 11226  0FEB                     __end_of_calc_temp_rc:	
 11227                           
 11228                           	psect	text31
 11229  1E9F                     __ptext31:	
 11230 ;; *************** function _calc_rs_lo_avg *****************
 11231 ;; Defined at:
 11232 ;;		line 423 in file "src/api/sample.c"
 11233 ;; Parameters:    Size  Location     Type
 11234 ;;  x               2   13[BANK0 ] unsigned int 
 11235 ;; Auto vars:     Size  Location     Type
 11236 ;;  t32             4   15[BANK0 ] unsigned long 
 11237 ;;  i               1   19[BANK0 ] unsigned char 
 11238 ;; Return value:  Size  Location     Type
 11239 ;;                  2   13[BANK0 ] unsigned int 
 11240 ;; Registers used:
 11241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11242 ;; Tracked objects:
 11243 ;;		On entry : 0/0
 11244 ;;		On exit  : 0/0
 11245 ;;		Unchanged: 0/0
 11246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11247 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11248 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11249 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11250 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11251 ;;Total ram usage:        9 bytes
 11252 ;; Hardware stack levels used:    1
 11253 ;; Hardware stack levels required when called:    2
 11254 ;; This function calls:
 11255 ;;		___lldiv
 11256 ;; This function is called by:
 11257 ;;		_main
 11258 ;; This function uses a non-reentrant model
 11259 ;;
 11260                           
 11261                           
 11262                           ;psect for function _calc_rs_lo_avg
 11263  1E9F                     _calc_rs_lo_avg:	
 11264                           
 11265                           ;sample.c: 425: uint8_t i;
 11266                           ;sample.c: 426: uint32_t t32=0;
 11267                           
 11268                           ;incstack = 0
 11269                           ; Regs used in _calc_rs_lo_avg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11270  1E9F  3000               	movlw	0
 11271  1EA0  0020               	movlb	0	; select bank0
 11272  1EA1  00B2               	movwf	calc_rs_lo_avg@t32+3
 11273  1EA2  3000               	movlw	0
 11274  1EA3  00B1               	movwf	calc_rs_lo_avg@t32+2
 11275  1EA4  3000               	movlw	0
 11276  1EA5  00B0               	movwf	calc_rs_lo_avg@t32+1
 11277  1EA6  3000               	movlw	0
 11278  1EA7  00AF               	movwf	calc_rs_lo_avg@t32
 11279                           
 11280                           ;sample.c: 428: for(i=0;i<6-1;i++){
 11281  1EA8  01B3               	clrf	calc_rs_lo_avg@i
 11282  1EA9  3005               	movlw	5
 11283  1EAA  0233               	subwf	calc_rs_lo_avg@i,w
 11284  1EAB  1803               	btfsc	3,0
 11285  1EAC  2ED1               	goto	l5491
 11286  1EAD                     l5483:	
 11287                           
 11288                           ;sample.c: 429: rsLoAvgBuf[i]=rsLoAvgBuf[i+1];
 11289  1EAD  3533               	lslf	calc_rs_lo_avg@i,w
 11290  1EAE  3E02               	addlw	2
 11291  1EAF  3EAC               	addlw	(low (_rsLoAvgBuf| 0))& (0+255)
 11292  1EB0  0086               	movwf	6
 11293  1EB1  0187               	clrf	7
 11294  1EB2  3533               	lslf	calc_rs_lo_avg@i,w
 11295  1EB3  3EAC               	addlw	(low (_rsLoAvgBuf| 0))& (0+255)
 11296  1EB4  0084               	movwf	4
 11297  1EB5  0185               	clrf	5
 11298  1EB6  3F40               	moviw [0]fsr1
 11299  1EB7  3F80               	movwi [0]fsr0
 11300  1EB8  3F41               	moviw [1]fsr1
 11301  1EB9  3F81               	movwi [1]fsr0
 11302                           
 11303                           ;sample.c: 430: t32+=((uint32_t)rsLoAvgBuf[i]);
 11304  1EBA  3533               	lslf	calc_rs_lo_avg@i,w
 11305  1EBB  3EAC               	addlw	(low (_rsLoAvgBuf| 0))& (0+255)
 11306  1EBC  0086               	movwf	6
 11307  1EBD  0187               	clrf	7
 11308  1EBE  3F40               	moviw [0]fsr1
 11309  1EBF  00F4               	movwf	??_calc_rs_lo_avg
 11310  1EC0  3F41               	moviw [1]fsr1
 11311  1EC1  00F5               	movwf	??_calc_rs_lo_avg+1
 11312  1EC2  0874               	movf	??_calc_rs_lo_avg,w
 11313  1EC3  07AF               	addwf	calc_rs_lo_avg@t32,f
 11314  1EC4  0875               	movf	??_calc_rs_lo_avg+1,w
 11315  1EC5  3DB0               	addwfc	calc_rs_lo_avg@t32+1,f
 11316  1EC6  3000               	movlw	0
 11317  1EC7  3DB1               	addwfc	calc_rs_lo_avg@t32+2,f
 11318  1EC8  3DB2               	addwfc	calc_rs_lo_avg@t32+3,f
 11319  1EC9  3001               	movlw	1
 11320  1ECA  00F4               	movwf	??_calc_rs_lo_avg
 11321  1ECB  0874               	movf	??_calc_rs_lo_avg,w
 11322  1ECC  07B3               	addwf	calc_rs_lo_avg@i,f
 11323  1ECD  3005               	movlw	5
 11324  1ECE  0233               	subwf	calc_rs_lo_avg@i,w
 11325  1ECF  1C03               	skipc
 11326  1ED0  2EAD               	goto	l5483
 11327  1ED1                     l5491:	
 11328                           
 11329                           ;sample.c: 431: }
 11330                           ;sample.c: 432: rsLoAvgBuf[i]=x;
 11331  1ED1  3533               	lslf	calc_rs_lo_avg@i,w
 11332  1ED2  3EAC               	addlw	(low (_rsLoAvgBuf| 0))& (0+255)
 11333  1ED3  0086               	movwf	6
 11334  1ED4  0187               	clrf	7
 11335  1ED5  082D               	movf	calc_rs_lo_avg@x,w
 11336  1ED6  3FC0               	movwi [0]fsr1
 11337  1ED7  082E               	movf	calc_rs_lo_avg@x+1,w
 11338  1ED8  3FC1               	movwi [1]fsr1
 11339                           
 11340                           ;sample.c: 433: t32+=x;
 11341  1ED9  082D               	movf	calc_rs_lo_avg@x,w
 11342  1EDA  07AF               	addwf	calc_rs_lo_avg@t32,f
 11343  1EDB  082E               	movf	calc_rs_lo_avg@x+1,w
 11344  1EDC  3DB0               	addwfc	calc_rs_lo_avg@t32+1,f
 11345  1EDD  3000               	movlw	0
 11346  1EDE  3DB1               	addwfc	calc_rs_lo_avg@t32+2,f
 11347  1EDF  3DB2               	addwfc	calc_rs_lo_avg@t32+3,f
 11348                           
 11349                           ;sample.c: 434: t32/=6;
 11350  1EE0  3000               	movlw	0
 11351  1EE1  00A3               	movwf	___lldiv@divisor+3
 11352  1EE2  3000               	movlw	0
 11353  1EE3  00A2               	movwf	___lldiv@divisor+2
 11354  1EE4  3000               	movlw	0
 11355  1EE5  00A1               	movwf	___lldiv@divisor+1
 11356  1EE6  3006               	movlw	6
 11357  1EE7  00A0               	movwf	___lldiv@divisor
 11358  1EE8  0832               	movf	calc_rs_lo_avg@t32+3,w
 11359  1EE9  00A7               	movwf	___lldiv@dividend+3
 11360  1EEA  0831               	movf	calc_rs_lo_avg@t32+2,w
 11361  1EEB  00A6               	movwf	___lldiv@dividend+2
 11362  1EEC  0830               	movf	calc_rs_lo_avg@t32+1,w
 11363  1EED  00A5               	movwf	___lldiv@dividend+1
 11364  1EEE  082F               	movf	calc_rs_lo_avg@t32,w
 11365  1EEF  00A4               	movwf	___lldiv@dividend
 11366  1EF0  319D  2544         	fcall	___lldiv
 11367  1EF2  0020               	movlb	0	; select bank0
 11368  1EF3  0823               	movf	?___lldiv+3,w
 11369  1EF4  00B2               	movwf	calc_rs_lo_avg@t32+3
 11370  1EF5  0822               	movf	?___lldiv+2,w
 11371  1EF6  00B1               	movwf	calc_rs_lo_avg@t32+2
 11372  1EF7  0821               	movf	?___lldiv+1,w
 11373  1EF8  00B0               	movwf	calc_rs_lo_avg@t32+1
 11374  1EF9  0820               	movf	?___lldiv,w
 11375  1EFA  00AF               	movwf	calc_rs_lo_avg@t32
 11376                           
 11377                           ;sample.c: 435: return (uint16_t)t32;
 11378  1EFB  0830               	movf	calc_rs_lo_avg@t32+1,w
 11379  1EFC  00AE               	movwf	?_calc_rs_lo_avg+1
 11380  1EFD  082F               	movf	calc_rs_lo_avg@t32,w
 11381  1EFE  00AD               	movwf	?_calc_rs_lo_avg
 11382  1EFF  0008               	return
 11383  1F00                     __end_of_calc_rs_lo_avg:	
 11384                           
 11385                           	psect	text32
 11386  1D44                     __ptext32:	
 11387 ;; *************** function ___lldiv *****************
 11388 ;; Defined at:
 11389 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lldiv.c"
 11390 ;; Parameters:    Size  Location     Type
 11391 ;;  divisor         4    0[BANK0 ] unsigned long 
 11392 ;;  dividend        4    4[BANK0 ] unsigned long 
 11393 ;; Auto vars:     Size  Location     Type
 11394 ;;  quotient        4    8[BANK0 ] unsigned long 
 11395 ;;  counter         1   12[BANK0 ] unsigned char 
 11396 ;; Return value:  Size  Location     Type
 11397 ;;                  4    0[BANK0 ] unsigned long 
 11398 ;; Registers used:
 11399 ;;		wreg, status,2, status,0
 11400 ;; Tracked objects:
 11401 ;;		On entry : 0/0
 11402 ;;		On exit  : 0/0
 11403 ;;		Unchanged: 0/0
 11404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11405 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11406 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11407 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11408 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11409 ;;Total ram usage:       14 bytes
 11410 ;; Hardware stack levels used:    1
 11411 ;; Hardware stack levels required when called:    1
 11412 ;; This function calls:
 11413 ;;		Nothing
 11414 ;; This function is called by:
 11415 ;;		_calc_temp_rs
 11416 ;;		_calc_temp_rc
 11417 ;;		_calc_rs_lo_avg
 11418 ;; This function uses a non-reentrant model
 11419 ;;
 11420                           
 11421                           
 11422                           ;psect for function ___lldiv
 11423  1D44                     ___lldiv:	
 11424                           
 11425                           ;incstack = 0
 11426                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 11427  1D44  3000               	movlw	0
 11428  1D45  0020               	movlb	0	; select bank0
 11429  1D46  00AB               	movwf	___lldiv@quotient+3
 11430  1D47  3000               	movlw	0
 11431  1D48  00AA               	movwf	___lldiv@quotient+2
 11432  1D49  3000               	movlw	0
 11433  1D4A  00A9               	movwf	___lldiv@quotient+1
 11434  1D4B  3000               	movlw	0
 11435  1D4C  00A8               	movwf	___lldiv@quotient
 11436  1D4D  0823               	movf	___lldiv@divisor+3,w
 11437  1D4E  0422               	iorwf	___lldiv@divisor+2,w
 11438  1D4F  0421               	iorwf	___lldiv@divisor+1,w
 11439  1D50  0420               	iorwf	___lldiv@divisor,w
 11440  1D51  1903               	skipnz
 11441  1D52  2D8E               	goto	l5287
 11442  1D53  01AC               	clrf	___lldiv@counter
 11443  1D54  0AAC               	incf	___lldiv@counter,f
 11444  1D55                     l5273:	
 11445  1D55  1BA3               	btfsc	___lldiv@divisor+3,7
 11446  1D56  2D63               	goto	l5275
 11447  1D57  3001               	movlw	1
 11448  1D58                     u4785:	
 11449  1D58  35A0               	lslf	___lldiv@divisor,f
 11450  1D59  0DA1               	rlf	___lldiv@divisor+1,f
 11451  1D5A  0DA2               	rlf	___lldiv@divisor+2,f
 11452  1D5B  0DA3               	rlf	___lldiv@divisor+3,f
 11453  1D5C  0B89               	decfsz	9,f
 11454  1D5D  2D58               	goto	u4785
 11455  1D5E  3001               	movlw	1
 11456  1D5F  00F3               	movwf	??___lldiv
 11457  1D60  0873               	movf	??___lldiv,w
 11458  1D61  07AC               	addwf	___lldiv@counter,f
 11459  1D62  2D55               	goto	l5273
 11460  1D63                     l5275:	
 11461  1D63  3001               	movlw	1
 11462  1D64                     u4805:	
 11463  1D64  35A8               	lslf	___lldiv@quotient,f
 11464  1D65  0DA9               	rlf	___lldiv@quotient+1,f
 11465  1D66  0DAA               	rlf	___lldiv@quotient+2,f
 11466  1D67  0DAB               	rlf	___lldiv@quotient+3,f
 11467  1D68  0B89               	decfsz	9,f
 11468  1D69  2D64               	goto	u4805
 11469  1D6A  0823               	movf	___lldiv@divisor+3,w
 11470  1D6B  0227               	subwf	___lldiv@dividend+3,w
 11471  1D6C  1D03               	skipz
 11472  1D6D  2D78               	goto	u4815
 11473  1D6E  0822               	movf	___lldiv@divisor+2,w
 11474  1D6F  0226               	subwf	___lldiv@dividend+2,w
 11475  1D70  1D03               	skipz
 11476  1D71  2D78               	goto	u4815
 11477  1D72  0821               	movf	___lldiv@divisor+1,w
 11478  1D73  0225               	subwf	___lldiv@dividend+1,w
 11479  1D74  1D03               	skipz
 11480  1D75  2D78               	goto	u4815
 11481  1D76  0820               	movf	___lldiv@divisor,w
 11482  1D77  0224               	subwf	___lldiv@dividend,w
 11483  1D78                     u4815:	
 11484  1D78  1C03               	skipc
 11485  1D79  2D83               	goto	l5283
 11486  1D7A  0820               	movf	___lldiv@divisor,w
 11487  1D7B  02A4               	subwf	___lldiv@dividend,f
 11488  1D7C  0821               	movf	___lldiv@divisor+1,w
 11489  1D7D  3BA5               	subwfb	___lldiv@dividend+1,f
 11490  1D7E  0822               	movf	___lldiv@divisor+2,w
 11491  1D7F  3BA6               	subwfb	___lldiv@dividend+2,f
 11492  1D80  0823               	movf	___lldiv@divisor+3,w
 11493  1D81  3BA7               	subwfb	___lldiv@dividend+3,f
 11494  1D82  1428               	bsf	___lldiv@quotient,0
 11495  1D83                     l5283:	
 11496  1D83  3001               	movlw	1
 11497  1D84                     u4825:	
 11498  1D84  36A3               	lsrf	___lldiv@divisor+3,f
 11499  1D85  0CA2               	rrf	___lldiv@divisor+2,f
 11500  1D86  0CA1               	rrf	___lldiv@divisor+1,f
 11501  1D87  0CA0               	rrf	___lldiv@divisor,f
 11502  1D88  0B89               	decfsz	9,f
 11503  1D89  2D84               	goto	u4825
 11504  1D8A  3001               	movlw	1
 11505  1D8B  02AC               	subwf	___lldiv@counter,f
 11506  1D8C  1D03               	btfss	3,2
 11507  1D8D  2D63               	goto	l5275
 11508  1D8E                     l5287:	
 11509  1D8E  082B               	movf	___lldiv@quotient+3,w
 11510  1D8F  00A3               	movwf	?___lldiv+3
 11511  1D90  082A               	movf	___lldiv@quotient+2,w
 11512  1D91  00A2               	movwf	?___lldiv+2
 11513  1D92  0829               	movf	___lldiv@quotient+1,w
 11514  1D93  00A1               	movwf	?___lldiv+1
 11515  1D94  0828               	movf	___lldiv@quotient,w
 11516  1D95  00A0               	movwf	?___lldiv
 11517  1D96  0008               	return
 11518  1D97                     __end_of___lldiv:	
 11519                           
 11520                           	psect	text33
 11521  08ED                     __ptext33:	
 11522 ;; *************** function _calc_expect_vout_adc_value *****************
 11523 ;; Defined at:
 11524 ;;		line 438 in file "src/api/sample.c"
 11525 ;; Parameters:    Size  Location     Type
 11526 ;;  x               2   22[BANK0 ] unsigned int 
 11527 ;; Auto vars:     Size  Location     Type
 11528 ;;  t32             4   16[BANK4 ] long 
 11529 ;;  x0              4   12[BANK4 ] long 
 11530 ;;  y0              4    8[BANK4 ] long 
 11531 ;;  x1              4    4[BANK4 ] long 
 11532 ;;  y1              4    0[BANK4 ] long 
 11533 ;;  i               2   20[BANK4 ] unsigned int 
 11534 ;; Return value:  Size  Location     Type
 11535 ;;                  2   22[BANK0 ] unsigned int 
 11536 ;; Registers used:
 11537 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11538 ;; Tracked objects:
 11539 ;;		On entry : 0/0
 11540 ;;		On exit  : 0/0
 11541 ;;		Unchanged: 0/0
 11542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11543 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11544 ;;      Locals:         0       0       0       0       0      22       0       0       0       0       0       0       
      +0       0
 11545 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11546 ;;      Totals:         0      16       0       0       0      22       0       0       0       0       0       0       
      +0       0
 11547 ;;Total ram usage:       38 bytes
 11548 ;; Hardware stack levels used:    1
 11549 ;; Hardware stack levels required when called:    2
 11550 ;; This function calls:
 11551 ;;		___aldiv
 11552 ;;		___lmul
 11553 ;; This function is called by:
 11554 ;;		_main
 11555 ;; This function uses a non-reentrant model
 11556 ;;
 11557                           
 11558                           
 11559                           ;psect for function _calc_expect_vout_adc_value
 11560  08ED                     _calc_expect_vout_adc_value:	
 11561                           
 11562                           ;sample.c: 441: uint16_t i;
 11563                           ;sample.c: 442: int32_t y0;
 11564                           ;sample.c: 443: int32_t y1;
 11565                           ;sample.c: 444: int32_t x0;
 11566                           ;sample.c: 445: int32_t x1;
 11567                           ;sample.c: 446: int32_t t32;
 11568                           ;sample.c: 449: for (i = 0; i < 30-1; i++) {
 11569                           
 11570                           ;incstack = 0
 11571                           ; Regs used in _calc_expect_vout_adc_value: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 11572  08ED  0024               	movlb	4	; select bank4
 11573  08EE  01B4               	clrf	calc_expect_vout_adc_value@i^(0+512)
 11574  08EF  01B5               	clrf	(calc_expect_vout_adc_value@i+1)^(0+512)
 11575  08F0  3000               	movlw	0
 11576  08F1  0235               	subwf	(calc_expect_vout_adc_value@i+1)^(0+512),w
 11577  08F2  301D               	movlw	29
 11578  08F3  1903               	skipnz
 11579  08F4  0234               	subwf	calc_expect_vout_adc_value@i^(0+512),w
 11580  08F5  1803               	btfsc	3,0
 11581  08F6  2966               	goto	l5515
 11582  08F7                     l5507:	
 11583                           
 11584                           ;sample.c: 450: if(sysData.calibRsAdc[i]<sysData.calibRsAdc[i+1]){
 11585  08F7  0835               	movf	(calc_expect_vout_adc_value@i+1)^(0+512),w
 11586  08F8  0020               	movlb	0	; select bank0
 11587  08F9  00B9               	movwf	??_calc_expect_vout_adc_value+1
 11588  08FA  0024               	movlb	4	; select bank4
 11589  08FB  0834               	movf	calc_expect_vout_adc_value@i^(0+512),w
 11590  08FC  0020               	movlb	0	; select bank0
 11591  08FD  00B8               	movwf	??_calc_expect_vout_adc_value
 11592  08FE  35B8               	lslf	??_calc_expect_vout_adc_value,f
 11593  08FF  0DB9               	rlf	??_calc_expect_vout_adc_value+1,f
 11594  0900  0838               	movf	??_calc_expect_vout_adc_value,w
 11595  0901  3E02               	addlw	2
 11596  0902  00BA               	movwf	??_calc_expect_vout_adc_value+2
 11597  0903  3000               	movlw	0
 11598  0904  3D39               	addwfc	??_calc_expect_vout_adc_value+1,w
 11599  0905  00BB               	movwf	??_calc_expect_vout_adc_value+3
 11600  0906  3066               	movlw	102
 11601  0907  00BC               	movwf	??_calc_expect_vout_adc_value+4
 11602  0908  3023               	movlw	35
 11603  0909  00BD               	movwf	??_calc_expect_vout_adc_value+5
 11604  090A  083A               	movf	??_calc_expect_vout_adc_value+2,w
 11605  090B  073C               	addwf	??_calc_expect_vout_adc_value+4,w
 11606  090C  0086               	movwf	6
 11607  090D  083B               	movf	??_calc_expect_vout_adc_value+3,w
 11608  090E  3D3D               	addwfc	??_calc_expect_vout_adc_value+5,w
 11609  090F  0087               	movwf	7
 11610  0910  3F40               	moviw [0]fsr1
 11611  0911  00BE               	movwf	??_calc_expect_vout_adc_value+6
 11612  0912  3F41               	moviw [1]fsr1
 11613  0913  00BF               	movwf	??_calc_expect_vout_adc_value+7
 11614  0914  0024               	movlb	4	; select bank4
 11615  0915  0835               	movf	(calc_expect_vout_adc_value@i+1)^(0+512),w
 11616  0916  0020               	movlb	0	; select bank0
 11617  0917  00C1               	movwf	??_calc_expect_vout_adc_value+9
 11618  0918  0024               	movlb	4	; select bank4
 11619  0919  0834               	movf	calc_expect_vout_adc_value@i^(0+512),w
 11620  091A  0020               	movlb	0	; select bank0
 11621  091B  00C0               	movwf	??_calc_expect_vout_adc_value+8
 11622  091C  35C0               	lslf	??_calc_expect_vout_adc_value+8,f
 11623  091D  0DC1               	rlf	??_calc_expect_vout_adc_value+9,f
 11624  091E  3066               	movlw	102
 11625  091F  00C2               	movwf	??_calc_expect_vout_adc_value+10
 11626  0920  3023               	movlw	35
 11627  0921  00C3               	movwf	??_calc_expect_vout_adc_value+11
 11628  0922  0840               	movf	??_calc_expect_vout_adc_value+8,w
 11629  0923  0742               	addwf	??_calc_expect_vout_adc_value+10,w
 11630  0924  0086               	movwf	6
 11631  0925  0841               	movf	??_calc_expect_vout_adc_value+9,w
 11632  0926  3D43               	addwfc	??_calc_expect_vout_adc_value+11,w
 11633  0927  0087               	movwf	7
 11634  0928  3F40               	moviw [0]fsr1
 11635  0929  00C4               	movwf	??_calc_expect_vout_adc_value+12
 11636  092A  3F41               	moviw [1]fsr1
 11637  092B  00C5               	movwf	??_calc_expect_vout_adc_value+13
 11638  092C  083F               	movf	??_calc_expect_vout_adc_value+7,w
 11639  092D  0245               	subwf	??_calc_expect_vout_adc_value+13,w
 11640  092E  1D03               	skipz
 11641  092F  2932               	goto	u5105
 11642  0930  083E               	movf	??_calc_expect_vout_adc_value+6,w
 11643  0931  0244               	subwf	??_calc_expect_vout_adc_value+12,w
 11644  0932                     u5105:	
 11645  0932  1803               	skipnc
 11646  0933  2966               	goto	l5515
 11647                           
 11648                           ;sample.c: 451: if (x <= sysData.calibRsAdc[i+1])break;
 11649  0934  0024               	movlb	4	; select bank4
 11650  0935  0835               	movf	(calc_expect_vout_adc_value@i+1)^(0+512),w
 11651  0936  0020               	movlb	0	; select bank0
 11652  0937  00B9               	movwf	??_calc_expect_vout_adc_value+1
 11653  0938  0024               	movlb	4	; select bank4
 11654  0939  0834               	movf	calc_expect_vout_adc_value@i^(0+512),w
 11655  093A  0020               	movlb	0	; select bank0
 11656  093B  00B8               	movwf	??_calc_expect_vout_adc_value
 11657  093C  35B8               	lslf	??_calc_expect_vout_adc_value,f
 11658  093D  0DB9               	rlf	??_calc_expect_vout_adc_value+1,f
 11659  093E  0838               	movf	??_calc_expect_vout_adc_value,w
 11660  093F  3E02               	addlw	2
 11661  0940  00BA               	movwf	??_calc_expect_vout_adc_value+2
 11662  0941  3000               	movlw	0
 11663  0942  3D39               	addwfc	??_calc_expect_vout_adc_value+1,w
 11664  0943  00BB               	movwf	??_calc_expect_vout_adc_value+3
 11665  0944  3066               	movlw	102
 11666  0945  00BC               	movwf	??_calc_expect_vout_adc_value+4
 11667  0946  3023               	movlw	35
 11668  0947  00BD               	movwf	??_calc_expect_vout_adc_value+5
 11669  0948  083A               	movf	??_calc_expect_vout_adc_value+2,w
 11670  0949  073C               	addwf	??_calc_expect_vout_adc_value+4,w
 11671  094A  0086               	movwf	6
 11672  094B  083B               	movf	??_calc_expect_vout_adc_value+3,w
 11673  094C  3D3D               	addwfc	??_calc_expect_vout_adc_value+5,w
 11674  094D  0087               	movwf	7
 11675  094E  3F40               	moviw [0]fsr1
 11676  094F  00BE               	movwf	??_calc_expect_vout_adc_value+6
 11677  0950  3F41               	moviw [1]fsr1
 11678  0951  00BF               	movwf	??_calc_expect_vout_adc_value+7
 11679  0952  0837               	movf	calc_expect_vout_adc_value@x+1,w
 11680  0953  023F               	subwf	??_calc_expect_vout_adc_value+7,w
 11681  0954  1D03               	skipz
 11682  0955  2958               	goto	u5115
 11683  0956  0836               	movf	calc_expect_vout_adc_value@x,w
 11684  0957  023E               	subwf	??_calc_expect_vout_adc_value+6,w
 11685  0958                     u5115:	
 11686  0958  1803               	btfsc	3,0
 11687  0959  2966               	goto	l5515
 11688                           
 11689                           ;sample.c: 454: break;
 11690                           
 11691                           ;sample.c: 452: }else{
 11692  095A  3001               	movlw	1
 11693  095B  0024               	movlb	4	; select bank4
 11694  095C  07B4               	addwf	calc_expect_vout_adc_value@i^(0+512),f
 11695  095D  3000               	movlw	0
 11696  095E  3DB5               	addwfc	(calc_expect_vout_adc_value@i+1)^(0+512),f
 11697  095F  3000               	movlw	0
 11698  0960  0235               	subwf	(calc_expect_vout_adc_value@i+1)^(0+512),w
 11699  0961  301D               	movlw	29
 11700  0962  1903               	skipnz
 11701  0963  0234               	subwf	calc_expect_vout_adc_value@i^(0+512),w
 11702  0964  1C03               	skipc
 11703  0965  28F7               	goto	l5507
 11704  0966                     l5515:	
 11705                           
 11706                           ;sample.c: 455: }
 11707                           ;sample.c: 456: }
 11708                           ;sample.c: 458: if (i > 30-2)i=30-2;
 11709  0966  3000               	movlw	0
 11710  0967  0024               	movlb	4	; select bank4
 11711  0968  0235               	subwf	(calc_expect_vout_adc_value@i+1)^(0+512),w
 11712  0969  301D               	movlw	29
 11713  096A  1903               	skipnz
 11714  096B  0234               	subwf	calc_expect_vout_adc_value@i^(0+512),w
 11715  096C  1C03               	skipc
 11716  096D  2972               	goto	l5519
 11717  096E  301C               	movlw	28
 11718  096F  00B4               	movwf	calc_expect_vout_adc_value@i^(0+512)
 11719  0970  3000               	movlw	0
 11720  0971  00B5               	movwf	(calc_expect_vout_adc_value@i^(0+512)+1)
 11721  0972                     l5519:	
 11722                           
 11723                           ;sample.c: 459: y1=sysData.calibVoMV[i+1];
 11724  0972  0835               	movf	(calc_expect_vout_adc_value@i+1)^(0+512),w
 11725  0973  0020               	movlb	0	; select bank0
 11726  0974  00B9               	movwf	??_calc_expect_vout_adc_value+1
 11727  0975  0024               	movlb	4	; select bank4
 11728  0976  0834               	movf	calc_expect_vout_adc_value@i^(0+512),w
 11729  0977  0020               	movlb	0	; select bank0
 11730  0978  00B8               	movwf	??_calc_expect_vout_adc_value
 11731  0979  35B8               	lslf	??_calc_expect_vout_adc_value,f
 11732  097A  0DB9               	rlf	??_calc_expect_vout_adc_value+1,f
 11733  097B  0838               	movf	??_calc_expect_vout_adc_value,w
 11734  097C  3E02               	addlw	2
 11735  097D  00BA               	movwf	??_calc_expect_vout_adc_value+2
 11736  097E  3000               	movlw	0
 11737  097F  3D39               	addwfc	??_calc_expect_vout_adc_value+1,w
 11738  0980  00BB               	movwf	??_calc_expect_vout_adc_value+3
 11739  0981  30A2               	movlw	162
 11740  0982  00BC               	movwf	??_calc_expect_vout_adc_value+4
 11741  0983  3023               	movlw	35
 11742  0984  00BD               	movwf	??_calc_expect_vout_adc_value+5
 11743  0985  083A               	movf	??_calc_expect_vout_adc_value+2,w
 11744  0986  073C               	addwf	??_calc_expect_vout_adc_value+4,w
 11745  0987  0086               	movwf	6
 11746  0988  083B               	movf	??_calc_expect_vout_adc_value+3,w
 11747  0989  3D3D               	addwfc	??_calc_expect_vout_adc_value+5,w
 11748  098A  0087               	movwf	7
 11749  098B  3F40               	moviw [0]fsr1
 11750  098C  00BE               	movwf	??_calc_expect_vout_adc_value+6
 11751  098D  3F41               	moviw [1]fsr1
 11752  098E  00BF               	movwf	??_calc_expect_vout_adc_value+7
 11753  098F  083E               	movf	??_calc_expect_vout_adc_value+6,w
 11754  0990  0024               	movlb	4	; select bank4
 11755  0991  00A0               	movwf	calc_expect_vout_adc_value@y1^(0+512)
 11756  0992  0020               	movlb	0	; select bank0
 11757  0993  083F               	movf	??_calc_expect_vout_adc_value+7,w
 11758  0994  0024               	movlb	4	; select bank4
 11759  0995  00A1               	movwf	(calc_expect_vout_adc_value@y1^(0+512)+1)
 11760  0996  01A2               	clrf	(calc_expect_vout_adc_value@y1^(0+512)+2)
 11761  0997  01A3               	clrf	(calc_expect_vout_adc_value@y1^(0+512)+3)
 11762                           
 11763                           ;sample.c: 460: y0=sysData.calibVoMV[i];
 11764  0998  0835               	movf	(calc_expect_vout_adc_value@i+1)^(0+512),w
 11765  0999  0020               	movlb	0	; select bank0
 11766  099A  00B9               	movwf	??_calc_expect_vout_adc_value+1
 11767  099B  0024               	movlb	4	; select bank4
 11768  099C  0834               	movf	calc_expect_vout_adc_value@i^(0+512),w
 11769  099D  0020               	movlb	0	; select bank0
 11770  099E  00B8               	movwf	??_calc_expect_vout_adc_value
 11771  099F  35B8               	lslf	??_calc_expect_vout_adc_value,f
 11772  09A0  0DB9               	rlf	??_calc_expect_vout_adc_value+1,f
 11773  09A1  30A2               	movlw	162
 11774  09A2  00BA               	movwf	??_calc_expect_vout_adc_value+2
 11775  09A3  3023               	movlw	35
 11776  09A4  00BB               	movwf	??_calc_expect_vout_adc_value+3
 11777  09A5  0838               	movf	??_calc_expect_vout_adc_value,w
 11778  09A6  073A               	addwf	??_calc_expect_vout_adc_value+2,w
 11779  09A7  0086               	movwf	6
 11780  09A8  0839               	movf	??_calc_expect_vout_adc_value+1,w
 11781  09A9  3D3B               	addwfc	??_calc_expect_vout_adc_value+3,w
 11782  09AA  0087               	movwf	7
 11783  09AB  3F40               	moviw [0]fsr1
 11784  09AC  00BC               	movwf	??_calc_expect_vout_adc_value+4
 11785  09AD  3F41               	moviw [1]fsr1
 11786  09AE  00BD               	movwf	??_calc_expect_vout_adc_value+5
 11787  09AF  083C               	movf	??_calc_expect_vout_adc_value+4,w
 11788  09B0  0024               	movlb	4	; select bank4
 11789  09B1  00A8               	movwf	calc_expect_vout_adc_value@y0^(0+512)
 11790  09B2  0020               	movlb	0	; select bank0
 11791  09B3  083D               	movf	??_calc_expect_vout_adc_value+5,w
 11792  09B4  0024               	movlb	4	; select bank4
 11793  09B5  00A9               	movwf	(calc_expect_vout_adc_value@y0^(0+512)+1)
 11794  09B6  01AA               	clrf	(calc_expect_vout_adc_value@y0^(0+512)+2)
 11795  09B7  01AB               	clrf	(calc_expect_vout_adc_value@y0^(0+512)+3)
 11796                           
 11797                           ;sample.c: 463: x1=sysData.calibRsAdc[i+1];
 11798  09B8  0835               	movf	(calc_expect_vout_adc_value@i+1)^(0+512),w
 11799  09B9  0020               	movlb	0	; select bank0
 11800  09BA  00B9               	movwf	??_calc_expect_vout_adc_value+1
 11801  09BB  0024               	movlb	4	; select bank4
 11802  09BC  0834               	movf	calc_expect_vout_adc_value@i^(0+512),w
 11803  09BD  0020               	movlb	0	; select bank0
 11804  09BE  00B8               	movwf	??_calc_expect_vout_adc_value
 11805  09BF  35B8               	lslf	??_calc_expect_vout_adc_value,f
 11806  09C0  0DB9               	rlf	??_calc_expect_vout_adc_value+1,f
 11807  09C1  0838               	movf	??_calc_expect_vout_adc_value,w
 11808  09C2  3E02               	addlw	2
 11809  09C3  00BA               	movwf	??_calc_expect_vout_adc_value+2
 11810  09C4  3000               	movlw	0
 11811  09C5  3D39               	addwfc	??_calc_expect_vout_adc_value+1,w
 11812  09C6  00BB               	movwf	??_calc_expect_vout_adc_value+3
 11813  09C7  3066               	movlw	102
 11814  09C8  00BC               	movwf	??_calc_expect_vout_adc_value+4
 11815  09C9  3023               	movlw	35
 11816  09CA  00BD               	movwf	??_calc_expect_vout_adc_value+5
 11817  09CB  083A               	movf	??_calc_expect_vout_adc_value+2,w
 11818  09CC  073C               	addwf	??_calc_expect_vout_adc_value+4,w
 11819  09CD  0086               	movwf	6
 11820  09CE  083B               	movf	??_calc_expect_vout_adc_value+3,w
 11821  09CF  3D3D               	addwfc	??_calc_expect_vout_adc_value+5,w
 11822  09D0  0087               	movwf	7
 11823  09D1  3F40               	moviw [0]fsr1
 11824  09D2  00BE               	movwf	??_calc_expect_vout_adc_value+6
 11825  09D3  3F41               	moviw [1]fsr1
 11826  09D4  00BF               	movwf	??_calc_expect_vout_adc_value+7
 11827  09D5  083E               	movf	??_calc_expect_vout_adc_value+6,w
 11828  09D6  0024               	movlb	4	; select bank4
 11829  09D7  00A4               	movwf	calc_expect_vout_adc_value@x1^(0+512)
 11830  09D8  0020               	movlb	0	; select bank0
 11831  09D9  083F               	movf	??_calc_expect_vout_adc_value+7,w
 11832  09DA  0024               	movlb	4	; select bank4
 11833  09DB  00A5               	movwf	(calc_expect_vout_adc_value@x1^(0+512)+1)
 11834  09DC  01A6               	clrf	(calc_expect_vout_adc_value@x1^(0+512)+2)
 11835  09DD  01A7               	clrf	(calc_expect_vout_adc_value@x1^(0+512)+3)
 11836                           
 11837                           ;sample.c: 464: x0=sysData.calibRsAdc[i];
 11838  09DE  0835               	movf	(calc_expect_vout_adc_value@i+1)^(0+512),w
 11839  09DF  0020               	movlb	0	; select bank0
 11840  09E0  00B9               	movwf	??_calc_expect_vout_adc_value+1
 11841  09E1  0024               	movlb	4	; select bank4
 11842  09E2  0834               	movf	calc_expect_vout_adc_value@i^(0+512),w
 11843  09E3  0020               	movlb	0	; select bank0
 11844  09E4  00B8               	movwf	??_calc_expect_vout_adc_value
 11845  09E5  35B8               	lslf	??_calc_expect_vout_adc_value,f
 11846  09E6  0DB9               	rlf	??_calc_expect_vout_adc_value+1,f
 11847  09E7  3066               	movlw	102
 11848  09E8  00BA               	movwf	??_calc_expect_vout_adc_value+2
 11849  09E9  3023               	movlw	35
 11850  09EA  00BB               	movwf	??_calc_expect_vout_adc_value+3
 11851  09EB  0838               	movf	??_calc_expect_vout_adc_value,w
 11852  09EC  073A               	addwf	??_calc_expect_vout_adc_value+2,w
 11853  09ED  0086               	movwf	6
 11854  09EE  0839               	movf	??_calc_expect_vout_adc_value+1,w
 11855  09EF  3D3B               	addwfc	??_calc_expect_vout_adc_value+3,w
 11856  09F0  0087               	movwf	7
 11857  09F1  3F40               	moviw [0]fsr1
 11858  09F2  00BC               	movwf	??_calc_expect_vout_adc_value+4
 11859  09F3  3F41               	moviw [1]fsr1
 11860  09F4  00BD               	movwf	??_calc_expect_vout_adc_value+5
 11861  09F5  083C               	movf	??_calc_expect_vout_adc_value+4,w
 11862  09F6  0024               	movlb	4	; select bank4
 11863  09F7  00AC               	movwf	calc_expect_vout_adc_value@x0^(0+512)
 11864  09F8  0020               	movlb	0	; select bank0
 11865  09F9  083D               	movf	??_calc_expect_vout_adc_value+5,w
 11866  09FA  0024               	movlb	4	; select bank4
 11867  09FB  00AD               	movwf	(calc_expect_vout_adc_value@x0^(0+512)+1)
 11868  09FC  01AE               	clrf	(calc_expect_vout_adc_value@x0^(0+512)+2)
 11869  09FD  01AF               	clrf	(calc_expect_vout_adc_value@x0^(0+512)+3)
 11870                           
 11871                           ;sample.c: 466: if(x<=x0 && i==0)return (uint16_t)y0;
 11872  09FE  0020               	movlb	0	; select bank0
 11873  09FF  0836               	movf	calc_expect_vout_adc_value@x,w
 11874  0A00  00B8               	movwf	??_calc_expect_vout_adc_value
 11875  0A01  0837               	movf	calc_expect_vout_adc_value@x+1,w
 11876  0A02  00B9               	movwf	??_calc_expect_vout_adc_value+1
 11877  0A03  01BA               	clrf	??_calc_expect_vout_adc_value+2
 11878  0A04  01BB               	clrf	??_calc_expect_vout_adc_value+3
 11879  0A05  0024               	movlb	4	; select bank4
 11880  0A06  082F               	movf	(calc_expect_vout_adc_value@x0+3)^(0+512),w
 11881  0A07  3A80               	xorlw	128
 11882  0A08  0020               	movlb	0	; select bank0
 11883  0A09  00BC               	movwf	??_calc_expect_vout_adc_value+4
 11884  0A0A  083B               	movf	??_calc_expect_vout_adc_value+3,w
 11885  0A0B  3A80               	xorlw	128
 11886  0A0C  023C               	subwf	??_calc_expect_vout_adc_value+4,w
 11887  0A0D  0024               	movlb	4	; select bank4
 11888  0A0E  1D03               	skipz
 11889  0A0F  2A20               	goto	u5143
 11890  0A10  0020               	movlb	0	; select bank0
 11891  0A11  083A               	movf	??_calc_expect_vout_adc_value+2,w
 11892  0A12  0024               	movlb	4	; select bank4
 11893  0A13  022E               	subwf	(calc_expect_vout_adc_value@x0+2)^(0+512),w
 11894  0A14  1D03               	skipz
 11895  0A15  2A20               	goto	u5143
 11896  0A16  0020               	movlb	0	; select bank0
 11897  0A17  0839               	movf	??_calc_expect_vout_adc_value+1,w
 11898  0A18  0024               	movlb	4	; select bank4
 11899  0A19  022D               	subwf	(calc_expect_vout_adc_value@x0+1)^(0+512),w
 11900  0A1A  1D03               	skipz
 11901  0A1B  2A20               	goto	u5143
 11902  0A1C  0020               	movlb	0	; select bank0
 11903  0A1D  0838               	movf	??_calc_expect_vout_adc_value,w
 11904  0A1E  0024               	movlb	4	; select bank4
 11905  0A1F  022C               	subwf	calc_expect_vout_adc_value@x0^(0+512),w
 11906  0A20                     u5143:	
 11907  0A20  1C03               	skipc
 11908  0A21  2A2E               	goto	l5533
 11909  0A22  0834               	movf	calc_expect_vout_adc_value@i^(0+512),w
 11910  0A23  0435               	iorwf	(calc_expect_vout_adc_value@i+1)^(0+512),w
 11911  0A24  1D03               	btfss	3,2
 11912  0A25  2A2E               	goto	l5533
 11913  0A26  0829               	movf	(calc_expect_vout_adc_value@y0+1)^(0+512),w
 11914  0A27  0020               	movlb	0	; select bank0
 11915  0A28  00B7               	movwf	?_calc_expect_vout_adc_value+1
 11916  0A29  0024               	movlb	4	; select bank4
 11917  0A2A  0828               	movf	calc_expect_vout_adc_value@y0^(0+512),w
 11918  0A2B  0020               	movlb	0	; select bank0
 11919  0A2C  00B6               	movwf	?_calc_expect_vout_adc_value
 11920  0A2D  0008               	return
 11921  0A2E                     l5533:	
 11922                           
 11923                           ;sample.c: 467: if(x1<=x0)return (uint16_t)y0;
 11924  0A2E  0024               	movlb	4	; select bank4
 11925  0A2F  082F               	movf	(calc_expect_vout_adc_value@x0+3)^(0+512),w
 11926  0A30  3A80               	xorlw	128
 11927  0A31  0020               	movlb	0	; select bank0
 11928  0A32  00B8               	movwf	??_calc_expect_vout_adc_value
 11929  0A33  0024               	movlb	4	; select bank4
 11930  0A34  0827               	movf	(calc_expect_vout_adc_value@x1+3)^(0+512),w
 11931  0A35  3A80               	xorlw	128
 11932  0A36  0020               	movlb	0	; select bank0
 11933  0A37  0238               	subwf	??_calc_expect_vout_adc_value,w
 11934  0A38  0024               	movlb	4	; select bank4
 11935  0A39  1D03               	skipz
 11936  0A3A  2A45               	goto	u5163
 11937  0A3B  0826               	movf	(calc_expect_vout_adc_value@x1+2)^(0+512),w
 11938  0A3C  022E               	subwf	(calc_expect_vout_adc_value@x0+2)^(0+512),w
 11939  0A3D  1D03               	skipz
 11940  0A3E  2A45               	goto	u5163
 11941  0A3F  0825               	movf	(calc_expect_vout_adc_value@x1+1)^(0+512),w
 11942  0A40  022D               	subwf	(calc_expect_vout_adc_value@x0+1)^(0+512),w
 11943  0A41  1D03               	skipz
 11944  0A42  2A45               	goto	u5163
 11945  0A43  0824               	movf	calc_expect_vout_adc_value@x1^(0+512),w
 11946  0A44  022C               	subwf	calc_expect_vout_adc_value@x0^(0+512),w
 11947  0A45                     u5163:	
 11948  0A45  1C03               	skipc
 11949  0A46  2A4F               	goto	l5539
 11950  0A47  0829               	movf	(calc_expect_vout_adc_value@y0+1)^(0+512),w
 11951  0A48  0020               	movlb	0	; select bank0
 11952  0A49  00B7               	movwf	?_calc_expect_vout_adc_value+1
 11953  0A4A  0024               	movlb	4	; select bank4
 11954  0A4B  0828               	movf	calc_expect_vout_adc_value@y0^(0+512),w
 11955  0A4C  0020               	movlb	0	; select bank0
 11956  0A4D  00B6               	movwf	?_calc_expect_vout_adc_value
 11957  0A4E  0008               	return
 11958  0A4F                     l5539:	
 11959                           
 11960                           ;sample.c: 470: t32=(x-x0);
 11961  0A4F  0024               	movlb	4	; select bank4
 11962  0A50  092C               	comf	calc_expect_vout_adc_value@x0^(0+512),w
 11963  0A51  0020               	movlb	0	; select bank0
 11964  0A52  00B8               	movwf	??_calc_expect_vout_adc_value
 11965  0A53  0024               	movlb	4	; select bank4
 11966  0A54  092D               	comf	(calc_expect_vout_adc_value@x0+1)^(0+512),w
 11967  0A55  0020               	movlb	0	; select bank0
 11968  0A56  00B9               	movwf	??_calc_expect_vout_adc_value+1
 11969  0A57  0024               	movlb	4	; select bank4
 11970  0A58  092E               	comf	(calc_expect_vout_adc_value@x0+2)^(0+512),w
 11971  0A59  0020               	movlb	0	; select bank0
 11972  0A5A  00BA               	movwf	??_calc_expect_vout_adc_value+2
 11973  0A5B  0024               	movlb	4	; select bank4
 11974  0A5C  092F               	comf	(calc_expect_vout_adc_value@x0+3)^(0+512),w
 11975  0A5D  0020               	movlb	0	; select bank0
 11976  0A5E  00BB               	movwf	??_calc_expect_vout_adc_value+3
 11977  0A5F  0AB8               	incf	??_calc_expect_vout_adc_value,f
 11978  0A60  1903               	skipnz
 11979  0A61  0AB9               	incf	??_calc_expect_vout_adc_value+1,f
 11980  0A62  1903               	skipnz
 11981  0A63  0ABA               	incf	??_calc_expect_vout_adc_value+2,f
 11982  0A64  1903               	skipnz
 11983  0A65  0ABB               	incf	??_calc_expect_vout_adc_value+3,f
 11984  0A66  0836               	movf	calc_expect_vout_adc_value@x,w
 11985  0A67  00BC               	movwf	??_calc_expect_vout_adc_value+4
 11986  0A68  0837               	movf	calc_expect_vout_adc_value@x+1,w
 11987  0A69  00BD               	movwf	??_calc_expect_vout_adc_value+5
 11988  0A6A  01BE               	clrf	??_calc_expect_vout_adc_value+6
 11989  0A6B  01BF               	clrf	??_calc_expect_vout_adc_value+7
 11990  0A6C  083C               	movf	??_calc_expect_vout_adc_value+4,w
 11991  0A6D  07B8               	addwf	??_calc_expect_vout_adc_value,f
 11992  0A6E  083D               	movf	??_calc_expect_vout_adc_value+5,w
 11993  0A6F  3DB9               	addwfc	??_calc_expect_vout_adc_value+1,f
 11994  0A70  083E               	movf	??_calc_expect_vout_adc_value+6,w
 11995  0A71  3DBA               	addwfc	??_calc_expect_vout_adc_value+2,f
 11996  0A72  083F               	movf	??_calc_expect_vout_adc_value+7,w
 11997  0A73  3DBB               	addwfc	??_calc_expect_vout_adc_value+3,f
 11998  0A74  083B               	movf	??_calc_expect_vout_adc_value+3,w
 11999  0A75  0024               	movlb	4	; select bank4
 12000  0A76  00B3               	movwf	(calc_expect_vout_adc_value@t32+3)^(0+512)
 12001  0A77  0020               	movlb	0	; select bank0
 12002  0A78  083A               	movf	??_calc_expect_vout_adc_value+2,w
 12003  0A79  0024               	movlb	4	; select bank4
 12004  0A7A  00B2               	movwf	(calc_expect_vout_adc_value@t32+2)^(0+512)
 12005  0A7B  0020               	movlb	0	; select bank0
 12006  0A7C  0839               	movf	??_calc_expect_vout_adc_value+1,w
 12007  0A7D  0024               	movlb	4	; select bank4
 12008  0A7E  00B1               	movwf	(calc_expect_vout_adc_value@t32+1)^(0+512)
 12009  0A7F  0020               	movlb	0	; select bank0
 12010  0A80  0838               	movf	??_calc_expect_vout_adc_value,w
 12011  0A81  0024               	movlb	4	; select bank4
 12012  0A82  00B0               	movwf	calc_expect_vout_adc_value@t32^(0+512)
 12013                           
 12014                           ;sample.c: 471: t32=t32*(y1-y0);
 12015  0A83  0820               	movf	calc_expect_vout_adc_value@y1^(0+512),w
 12016  0A84  0020               	movlb	0	; select bank0
 12017  0A85  00B8               	movwf	??_calc_expect_vout_adc_value
 12018  0A86  0024               	movlb	4	; select bank4
 12019  0A87  0821               	movf	(calc_expect_vout_adc_value@y1+1)^(0+512),w
 12020  0A88  0020               	movlb	0	; select bank0
 12021  0A89  00B9               	movwf	??_calc_expect_vout_adc_value+1
 12022  0A8A  0024               	movlb	4	; select bank4
 12023  0A8B  0822               	movf	(calc_expect_vout_adc_value@y1+2)^(0+512),w
 12024  0A8C  0020               	movlb	0	; select bank0
 12025  0A8D  00BA               	movwf	??_calc_expect_vout_adc_value+2
 12026  0A8E  0024               	movlb	4	; select bank4
 12027  0A8F  0823               	movf	(calc_expect_vout_adc_value@y1+3)^(0+512),w
 12028  0A90  0020               	movlb	0	; select bank0
 12029  0A91  00BB               	movwf	??_calc_expect_vout_adc_value+3
 12030  0A92  0024               	movlb	4	; select bank4
 12031  0A93  0928               	comf	calc_expect_vout_adc_value@y0^(0+512),w
 12032  0A94  0020               	movlb	0	; select bank0
 12033  0A95  00BC               	movwf	??_calc_expect_vout_adc_value+4
 12034  0A96  0024               	movlb	4	; select bank4
 12035  0A97  0929               	comf	(calc_expect_vout_adc_value@y0+1)^(0+512),w
 12036  0A98  0020               	movlb	0	; select bank0
 12037  0A99  00BD               	movwf	??_calc_expect_vout_adc_value+5
 12038  0A9A  0024               	movlb	4	; select bank4
 12039  0A9B  092A               	comf	(calc_expect_vout_adc_value@y0+2)^(0+512),w
 12040  0A9C  0020               	movlb	0	; select bank0
 12041  0A9D  00BE               	movwf	??_calc_expect_vout_adc_value+6
 12042  0A9E  0024               	movlb	4	; select bank4
 12043  0A9F  092B               	comf	(calc_expect_vout_adc_value@y0+3)^(0+512),w
 12044  0AA0  0020               	movlb	0	; select bank0
 12045  0AA1  00BF               	movwf	??_calc_expect_vout_adc_value+7
 12046  0AA2  0ABC               	incf	??_calc_expect_vout_adc_value+4,f
 12047  0AA3  1903               	skipnz
 12048  0AA4  0ABD               	incf	??_calc_expect_vout_adc_value+5,f
 12049  0AA5  1903               	skipnz
 12050  0AA6  0ABE               	incf	??_calc_expect_vout_adc_value+6,f
 12051  0AA7  1903               	skipnz
 12052  0AA8  0ABF               	incf	??_calc_expect_vout_adc_value+7,f
 12053  0AA9  083C               	movf	??_calc_expect_vout_adc_value+4,w
 12054  0AAA  07B8               	addwf	??_calc_expect_vout_adc_value,f
 12055  0AAB  083D               	movf	??_calc_expect_vout_adc_value+5,w
 12056  0AAC  3DB9               	addwfc	??_calc_expect_vout_adc_value+1,f
 12057  0AAD  083E               	movf	??_calc_expect_vout_adc_value+6,w
 12058  0AAE  3DBA               	addwfc	??_calc_expect_vout_adc_value+2,f
 12059  0AAF  083F               	movf	??_calc_expect_vout_adc_value+7,w
 12060  0AB0  3DBB               	addwfc	??_calc_expect_vout_adc_value+3,f
 12061  0AB1  083B               	movf	??_calc_expect_vout_adc_value+3,w
 12062  0AB2  00A3               	movwf	___lmul@multiplier+3
 12063  0AB3  083A               	movf	??_calc_expect_vout_adc_value+2,w
 12064  0AB4  00A2               	movwf	___lmul@multiplier+2
 12065  0AB5  0839               	movf	??_calc_expect_vout_adc_value+1,w
 12066  0AB6  00A1               	movwf	___lmul@multiplier+1
 12067  0AB7  0838               	movf	??_calc_expect_vout_adc_value,w
 12068  0AB8  00A0               	movwf	___lmul@multiplier
 12069  0AB9  0024               	movlb	4	; select bank4
 12070  0ABA  0833               	movf	(calc_expect_vout_adc_value@t32+3)^(0+512),w
 12071  0ABB  0020               	movlb	0	; select bank0
 12072  0ABC  00A7               	movwf	___lmul@multiplicand+3
 12073  0ABD  0024               	movlb	4	; select bank4
 12074  0ABE  0832               	movf	(calc_expect_vout_adc_value@t32+2)^(0+512),w
 12075  0ABF  0020               	movlb	0	; select bank0
 12076  0AC0  00A6               	movwf	___lmul@multiplicand+2
 12077  0AC1  0024               	movlb	4	; select bank4
 12078  0AC2  0831               	movf	(calc_expect_vout_adc_value@t32+1)^(0+512),w
 12079  0AC3  0020               	movlb	0	; select bank0
 12080  0AC4  00A5               	movwf	___lmul@multiplicand+1
 12081  0AC5  0024               	movlb	4	; select bank4
 12082  0AC6  0830               	movf	calc_expect_vout_adc_value@t32^(0+512),w
 12083  0AC7  0020               	movlb	0	; select bank0
 12084  0AC8  00A4               	movwf	___lmul@multiplicand
 12085  0AC9  319B  2330  3188   	fcall	___lmul
 12086  0ACC  0020               	movlb	0	; select bank0
 12087  0ACD  0823               	movf	?___lmul+3,w
 12088  0ACE  0024               	movlb	4	; select bank4
 12089  0ACF  00B3               	movwf	(calc_expect_vout_adc_value@t32+3)^(0+512)
 12090  0AD0  0020               	movlb	0	; select bank0
 12091  0AD1  0822               	movf	?___lmul+2,w
 12092  0AD2  0024               	movlb	4	; select bank4
 12093  0AD3  00B2               	movwf	(calc_expect_vout_adc_value@t32+2)^(0+512)
 12094  0AD4  0020               	movlb	0	; select bank0
 12095  0AD5  0821               	movf	?___lmul+1,w
 12096  0AD6  0024               	movlb	4	; select bank4
 12097  0AD7  00B1               	movwf	(calc_expect_vout_adc_value@t32+1)^(0+512)
 12098  0AD8  0020               	movlb	0	; select bank0
 12099  0AD9  0820               	movf	?___lmul,w
 12100  0ADA  0024               	movlb	4	; select bank4
 12101  0ADB  00B0               	movwf	calc_expect_vout_adc_value@t32^(0+512)
 12102                           
 12103                           ;sample.c: 472: t32=t32/(x1-x0);
 12104  0ADC  0824               	movf	calc_expect_vout_adc_value@x1^(0+512),w
 12105  0ADD  0020               	movlb	0	; select bank0
 12106  0ADE  00B8               	movwf	??_calc_expect_vout_adc_value
 12107  0ADF  0024               	movlb	4	; select bank4
 12108  0AE0  0825               	movf	(calc_expect_vout_adc_value@x1+1)^(0+512),w
 12109  0AE1  0020               	movlb	0	; select bank0
 12110  0AE2  00B9               	movwf	??_calc_expect_vout_adc_value+1
 12111  0AE3  0024               	movlb	4	; select bank4
 12112  0AE4  0826               	movf	(calc_expect_vout_adc_value@x1+2)^(0+512),w
 12113  0AE5  0020               	movlb	0	; select bank0
 12114  0AE6  00BA               	movwf	??_calc_expect_vout_adc_value+2
 12115  0AE7  0024               	movlb	4	; select bank4
 12116  0AE8  0827               	movf	(calc_expect_vout_adc_value@x1+3)^(0+512),w
 12117  0AE9  0020               	movlb	0	; select bank0
 12118  0AEA  00BB               	movwf	??_calc_expect_vout_adc_value+3
 12119  0AEB  0024               	movlb	4	; select bank4
 12120  0AEC  092C               	comf	calc_expect_vout_adc_value@x0^(0+512),w
 12121  0AED  0020               	movlb	0	; select bank0
 12122  0AEE  00BC               	movwf	??_calc_expect_vout_adc_value+4
 12123  0AEF  0024               	movlb	4	; select bank4
 12124  0AF0  092D               	comf	(calc_expect_vout_adc_value@x0+1)^(0+512),w
 12125  0AF1  0020               	movlb	0	; select bank0
 12126  0AF2  00BD               	movwf	??_calc_expect_vout_adc_value+5
 12127  0AF3  0024               	movlb	4	; select bank4
 12128  0AF4  092E               	comf	(calc_expect_vout_adc_value@x0+2)^(0+512),w
 12129  0AF5  0020               	movlb	0	; select bank0
 12130  0AF6  00BE               	movwf	??_calc_expect_vout_adc_value+6
 12131  0AF7  0024               	movlb	4	; select bank4
 12132  0AF8  092F               	comf	(calc_expect_vout_adc_value@x0+3)^(0+512),w
 12133  0AF9  0020               	movlb	0	; select bank0
 12134  0AFA  00BF               	movwf	??_calc_expect_vout_adc_value+7
 12135  0AFB  0ABC               	incf	??_calc_expect_vout_adc_value+4,f
 12136  0AFC  1903               	skipnz
 12137  0AFD  0ABD               	incf	??_calc_expect_vout_adc_value+5,f
 12138  0AFE  1903               	skipnz
 12139  0AFF  0ABE               	incf	??_calc_expect_vout_adc_value+6,f
 12140  0B00  1903               	skipnz
 12141  0B01  0ABF               	incf	??_calc_expect_vout_adc_value+7,f
 12142  0B02  083C               	movf	??_calc_expect_vout_adc_value+4,w
 12143  0B03  07B8               	addwf	??_calc_expect_vout_adc_value,f
 12144  0B04  083D               	movf	??_calc_expect_vout_adc_value+5,w
 12145  0B05  3DB9               	addwfc	??_calc_expect_vout_adc_value+1,f
 12146  0B06  083E               	movf	??_calc_expect_vout_adc_value+6,w
 12147  0B07  3DBA               	addwfc	??_calc_expect_vout_adc_value+2,f
 12148  0B08  083F               	movf	??_calc_expect_vout_adc_value+7,w
 12149  0B09  3DBB               	addwfc	??_calc_expect_vout_adc_value+3,f
 12150  0B0A  083B               	movf	??_calc_expect_vout_adc_value+3,w
 12151  0B0B  00AB               	movwf	___aldiv@divisor+3
 12152  0B0C  083A               	movf	??_calc_expect_vout_adc_value+2,w
 12153  0B0D  00AA               	movwf	___aldiv@divisor+2
 12154  0B0E  0839               	movf	??_calc_expect_vout_adc_value+1,w
 12155  0B0F  00A9               	movwf	___aldiv@divisor+1
 12156  0B10  0838               	movf	??_calc_expect_vout_adc_value,w
 12157  0B11  00A8               	movwf	___aldiv@divisor
 12158  0B12  0024               	movlb	4	; select bank4
 12159  0B13  0833               	movf	(calc_expect_vout_adc_value@t32+3)^(0+512),w
 12160  0B14  0020               	movlb	0	; select bank0
 12161  0B15  00AF               	movwf	___aldiv@dividend+3
 12162  0B16  0024               	movlb	4	; select bank4
 12163  0B17  0832               	movf	(calc_expect_vout_adc_value@t32+2)^(0+512),w
 12164  0B18  0020               	movlb	0	; select bank0
 12165  0B19  00AE               	movwf	___aldiv@dividend+2
 12166  0B1A  0024               	movlb	4	; select bank4
 12167  0B1B  0831               	movf	(calc_expect_vout_adc_value@t32+1)^(0+512),w
 12168  0B1C  0020               	movlb	0	; select bank0
 12169  0B1D  00AD               	movwf	___aldiv@dividend+1
 12170  0B1E  0024               	movlb	4	; select bank4
 12171  0B1F  0830               	movf	calc_expect_vout_adc_value@t32^(0+512),w
 12172  0B20  0020               	movlb	0	; select bank0
 12173  0B21  00AC               	movwf	___aldiv@dividend
 12174  0B22  3190  202D  3188   	fcall	___aldiv
 12175  0B25  0020               	movlb	0	; select bank0
 12176  0B26  082B               	movf	?___aldiv+3,w
 12177  0B27  0024               	movlb	4	; select bank4
 12178  0B28  00B3               	movwf	(calc_expect_vout_adc_value@t32+3)^(0+512)
 12179  0B29  0020               	movlb	0	; select bank0
 12180  0B2A  082A               	movf	?___aldiv+2,w
 12181  0B2B  0024               	movlb	4	; select bank4
 12182  0B2C  00B2               	movwf	(calc_expect_vout_adc_value@t32+2)^(0+512)
 12183  0B2D  0020               	movlb	0	; select bank0
 12184  0B2E  0829               	movf	?___aldiv+1,w
 12185  0B2F  0024               	movlb	4	; select bank4
 12186  0B30  00B1               	movwf	(calc_expect_vout_adc_value@t32+1)^(0+512)
 12187  0B31  0020               	movlb	0	; select bank0
 12188  0B32  0828               	movf	?___aldiv,w
 12189  0B33  0024               	movlb	4	; select bank4
 12190  0B34  00B0               	movwf	calc_expect_vout_adc_value@t32^(0+512)
 12191                           
 12192                           ;sample.c: 473: t32=t32+y0;
 12193  0B35  0830               	movf	calc_expect_vout_adc_value@t32^(0+512),w
 12194  0B36  0728               	addwf	calc_expect_vout_adc_value@y0^(0+512),w
 12195  0B37  0020               	movlb	0	; select bank0
 12196  0B38  00B8               	movwf	??_calc_expect_vout_adc_value
 12197  0B39  0024               	movlb	4	; select bank4
 12198  0B3A  0831               	movf	(calc_expect_vout_adc_value@t32+1)^(0+512),w
 12199  0B3B  3D29               	addwfc	(calc_expect_vout_adc_value@y0+1)^(0+512),w
 12200  0B3C  0020               	movlb	0	; select bank0
 12201  0B3D  00B9               	movwf	??_calc_expect_vout_adc_value+1
 12202  0B3E  0024               	movlb	4	; select bank4
 12203  0B3F  0832               	movf	(calc_expect_vout_adc_value@t32+2)^(0+512),w
 12204  0B40  3D2A               	addwfc	(calc_expect_vout_adc_value@y0+2)^(0+512),w
 12205  0B41  0020               	movlb	0	; select bank0
 12206  0B42  00BA               	movwf	??_calc_expect_vout_adc_value+2
 12207  0B43  0024               	movlb	4	; select bank4
 12208  0B44  0833               	movf	(calc_expect_vout_adc_value@t32+3)^(0+512),w
 12209  0B45  3D2B               	addwfc	(calc_expect_vout_adc_value@y0+3)^(0+512),w
 12210  0B46  0020               	movlb	0	; select bank0
 12211  0B47  00BB               	movwf	??_calc_expect_vout_adc_value+3
 12212  0B48  083B               	movf	??_calc_expect_vout_adc_value+3,w
 12213  0B49  0024               	movlb	4	; select bank4
 12214  0B4A  00B3               	movwf	(calc_expect_vout_adc_value@t32+3)^(0+512)
 12215  0B4B  0020               	movlb	0	; select bank0
 12216  0B4C  083A               	movf	??_calc_expect_vout_adc_value+2,w
 12217  0B4D  0024               	movlb	4	; select bank4
 12218  0B4E  00B2               	movwf	(calc_expect_vout_adc_value@t32+2)^(0+512)
 12219  0B4F  0020               	movlb	0	; select bank0
 12220  0B50  0839               	movf	??_calc_expect_vout_adc_value+1,w
 12221  0B51  0024               	movlb	4	; select bank4
 12222  0B52  00B1               	movwf	(calc_expect_vout_adc_value@t32+1)^(0+512)
 12223  0B53  0020               	movlb	0	; select bank0
 12224  0B54  0838               	movf	??_calc_expect_vout_adc_value,w
 12225  0B55  0024               	movlb	4	; select bank4
 12226  0B56  00B0               	movwf	calc_expect_vout_adc_value@t32^(0+512)
 12227                           
 12228                           ;sample.c: 474: if(t32<0)t32=0;
 12229  0B57  1FB3               	btfss	(calc_expect_vout_adc_value@t32+3)^(0+512),7
 12230  0B58  2B61               	goto	l701
 12231  0B59  3000               	movlw	0
 12232  0B5A  00B3               	movwf	(calc_expect_vout_adc_value@t32+3)^(0+512)
 12233  0B5B  3000               	movlw	0
 12234  0B5C  00B2               	movwf	(calc_expect_vout_adc_value@t32+2)^(0+512)
 12235  0B5D  3000               	movlw	0
 12236  0B5E  00B1               	movwf	(calc_expect_vout_adc_value@t32+1)^(0+512)
 12237  0B5F  3000               	movlw	0
 12238  0B60  00B0               	movwf	calc_expect_vout_adc_value@t32^(0+512)
 12239  0B61                     l701:	
 12240                           
 12241                           ;sample.c: 475: return (uint16_t)t32;
 12242  0B61  0831               	movf	(calc_expect_vout_adc_value@t32+1)^(0+512),w
 12243  0B62  0020               	movlb	0	; select bank0
 12244  0B63  00B7               	movwf	?_calc_expect_vout_adc_value+1
 12245  0B64  0024               	movlb	4	; select bank4
 12246  0B65  0830               	movf	calc_expect_vout_adc_value@t32^(0+512),w
 12247  0B66  0020               	movlb	0	; select bank0
 12248  0B67  00B6               	movwf	?_calc_expect_vout_adc_value
 12249  0B68  0008               	return
 12250  0B69                     __end_of_calc_expect_vout_adc_value:	
 12251                           
 12252                           	psect	text34
 12253  1B30                     __ptext34:	
 12254 ;; *************** function ___lmul *****************
 12255 ;; Defined at:
 12256 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul32.c"
 12257 ;; Parameters:    Size  Location     Type
 12258 ;;  multiplier      4    0[BANK0 ] unsigned long 
 12259 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 12260 ;; Auto vars:     Size  Location     Type
 12261 ;;  product         4    3[COMMON] unsigned long 
 12262 ;; Return value:  Size  Location     Type
 12263 ;;                  4    0[BANK0 ] unsigned long 
 12264 ;; Registers used:
 12265 ;;		wreg, status,2, status,0
 12266 ;; Tracked objects:
 12267 ;;		On entry : 0/0
 12268 ;;		On exit  : 0/0
 12269 ;;		Unchanged: 0/0
 12270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12271 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12272 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12274 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12275 ;;Total ram usage:       12 bytes
 12276 ;; Hardware stack levels used:    1
 12277 ;; Hardware stack levels required when called:    1
 12278 ;; This function calls:
 12279 ;;		Nothing
 12280 ;; This function is called by:
 12281 ;;		_calc_temp_rs
 12282 ;;		_calc_temp_rc
 12283 ;;		_pid_pwm1_idrv_b_b
 12284 ;;		_pid_pwm1_idrv_run
 12285 ;;		_calc_expect_vout_adc_value
 12286 ;;		_cal_rs_simulate_power
 12287 ;;		_m_math_pow
 12288 ;; This function uses a non-reentrant model
 12289 ;;
 12290                           
 12291                           
 12292                           ;psect for function ___lmul
 12293  1B30                     ___lmul:	
 12294                           
 12295                           ;incstack = 0
 12296                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 12297  1B30  3000               	movlw	0
 12298  1B31  00F6               	movwf	___lmul@product+3
 12299  1B32  3000               	movlw	0
 12300  1B33  00F5               	movwf	___lmul@product+2
 12301  1B34  3000               	movlw	0
 12302  1B35  00F4               	movwf	___lmul@product+1
 12303  1B36  3000               	movlw	0
 12304  1B37  00F3               	movwf	___lmul@product
 12305  1B38                     l5215:	
 12306  1B38  0020               	movlb	0	; select bank0
 12307  1B39  1C20               	btfss	___lmul@multiplier,0
 12308  1B3A  2B43               	goto	l5219
 12309  1B3B  0824               	movf	___lmul@multiplicand,w
 12310  1B3C  07F3               	addwf	___lmul@product,f
 12311  1B3D  0825               	movf	___lmul@multiplicand+1,w
 12312  1B3E  3DF4               	addwfc	___lmul@product+1,f
 12313  1B3F  0826               	movf	___lmul@multiplicand+2,w
 12314  1B40  3DF5               	addwfc	___lmul@product+2,f
 12315  1B41  0827               	movf	___lmul@multiplicand+3,w
 12316  1B42  3DF6               	addwfc	___lmul@product+3,f
 12317  1B43                     l5219:	
 12318  1B43  3001               	movlw	1
 12319  1B44                     u4645:	
 12320  1B44  35A4               	lslf	___lmul@multiplicand,f
 12321  1B45  0DA5               	rlf	___lmul@multiplicand+1,f
 12322  1B46  0DA6               	rlf	___lmul@multiplicand+2,f
 12323  1B47  0DA7               	rlf	___lmul@multiplicand+3,f
 12324  1B48  0B89               	decfsz	9,f
 12325  1B49  2B44               	goto	u4645
 12326  1B4A  3001               	movlw	1
 12327  1B4B                     u4655:	
 12328  1B4B  36A3               	lsrf	___lmul@multiplier+3,f
 12329  1B4C  0CA2               	rrf	___lmul@multiplier+2,f
 12330  1B4D  0CA1               	rrf	___lmul@multiplier+1,f
 12331  1B4E  0CA0               	rrf	___lmul@multiplier,f
 12332  1B4F  0B89               	decfsz	9,f
 12333  1B50  2B4B               	goto	u4655
 12334  1B51  0823               	movf	___lmul@multiplier+3,w
 12335  1B52  0422               	iorwf	___lmul@multiplier+2,w
 12336  1B53  0421               	iorwf	___lmul@multiplier+1,w
 12337  1B54  0420               	iorwf	___lmul@multiplier,w
 12338  1B55  1D03               	skipz
 12339  1B56  2B38               	goto	l5215
 12340  1B57  0876               	movf	___lmul@product+3,w
 12341  1B58  00A3               	movwf	?___lmul+3
 12342  1B59  0875               	movf	___lmul@product+2,w
 12343  1B5A  00A2               	movwf	?___lmul+2
 12344  1B5B  0874               	movf	___lmul@product+1,w
 12345  1B5C  00A1               	movwf	?___lmul+1
 12346  1B5D  0873               	movf	___lmul@product,w
 12347  1B5E  00A0               	movwf	?___lmul
 12348  1B5F  0008               	return
 12349  1B60                     __end_of___lmul:	
 12350                           
 12351                           	psect	text35
 12352  102D                     __ptext35:	
 12353 ;; *************** function ___aldiv *****************
 12354 ;; Defined at:
 12355 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\aldiv.c"
 12356 ;; Parameters:    Size  Location     Type
 12357 ;;  divisor         4    8[BANK0 ] long 
 12358 ;;  dividend        4   12[BANK0 ] long 
 12359 ;; Auto vars:     Size  Location     Type
 12360 ;;  quotient        4   18[BANK0 ] long 
 12361 ;;  sign            1   17[BANK0 ] unsigned char 
 12362 ;;  counter         1   16[BANK0 ] unsigned char 
 12363 ;; Return value:  Size  Location     Type
 12364 ;;                  4    8[BANK0 ] long 
 12365 ;; Registers used:
 12366 ;;		wreg, status,2, status,0
 12367 ;; Tracked objects:
 12368 ;;		On entry : 0/0
 12369 ;;		On exit  : 0/0
 12370 ;;		Unchanged: 0/0
 12371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12372 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12373 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12374 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12375 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12376 ;;Total ram usage:       15 bytes
 12377 ;; Hardware stack levels used:    1
 12378 ;; Hardware stack levels required when called:    1
 12379 ;; This function calls:
 12380 ;;		Nothing
 12381 ;; This function is called by:
 12382 ;;		_pid_pwm1_idrv_b_b
 12383 ;;		_pid_pwm1_idrv_run
 12384 ;;		_calc_expect_vout_adc_value
 12385 ;;		_m_int_2_str
 12386 ;;		_m_int_2_str_ex
 12387 ;; This function uses a non-reentrant model
 12388 ;;
 12389                           
 12390                           
 12391                           ;psect for function ___aldiv
 12392  102D                     ___aldiv:	
 12393                           
 12394                           ;incstack = 0
 12395                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 12396  102D  0020               	movlb	0	; select bank0
 12397  102E  01B1               	clrf	___aldiv@sign
 12398  102F  1FAB               	btfss	___aldiv@divisor+3,7
 12399  1030  283E               	goto	l1180
 12400  1031  09A8               	comf	___aldiv@divisor,f
 12401  1032  09A9               	comf	___aldiv@divisor+1,f
 12402  1033  09AA               	comf	___aldiv@divisor+2,f
 12403  1034  09AB               	comf	___aldiv@divisor+3,f
 12404  1035  0AA8               	incf	___aldiv@divisor,f
 12405  1036  1903               	skipnz
 12406  1037  0AA9               	incf	___aldiv@divisor+1,f
 12407  1038  1903               	skipnz
 12408  1039  0AAA               	incf	___aldiv@divisor+2,f
 12409  103A  1903               	skipnz
 12410  103B  0AAB               	incf	___aldiv@divisor+3,f
 12411  103C  01B1               	clrf	___aldiv@sign
 12412  103D  0AB1               	incf	___aldiv@sign,f
 12413  103E                     l1180:	
 12414  103E  1FAF               	btfss	___aldiv@dividend+3,7
 12415  103F  284F               	goto	l5237
 12416  1040  09AC               	comf	___aldiv@dividend,f
 12417  1041  09AD               	comf	___aldiv@dividend+1,f
 12418  1042  09AE               	comf	___aldiv@dividend+2,f
 12419  1043  09AF               	comf	___aldiv@dividend+3,f
 12420  1044  0AAC               	incf	___aldiv@dividend,f
 12421  1045  1903               	skipnz
 12422  1046  0AAD               	incf	___aldiv@dividend+1,f
 12423  1047  1903               	skipnz
 12424  1048  0AAE               	incf	___aldiv@dividend+2,f
 12425  1049  1903               	skipnz
 12426  104A  0AAF               	incf	___aldiv@dividend+3,f
 12427  104B  3001               	movlw	1
 12428  104C  00F7               	movwf	??___aldiv
 12429  104D  0877               	movf	??___aldiv,w
 12430  104E  06B1               	xorwf	___aldiv@sign,f
 12431  104F                     l5237:	
 12432  104F  3000               	movlw	0
 12433  1050  00B5               	movwf	___aldiv@quotient+3
 12434  1051  3000               	movlw	0
 12435  1052  00B4               	movwf	___aldiv@quotient+2
 12436  1053  3000               	movlw	0
 12437  1054  00B3               	movwf	___aldiv@quotient+1
 12438  1055  3000               	movlw	0
 12439  1056  00B2               	movwf	___aldiv@quotient
 12440  1057  082B               	movf	___aldiv@divisor+3,w
 12441  1058  042A               	iorwf	___aldiv@divisor+2,w
 12442  1059  0429               	iorwf	___aldiv@divisor+1,w
 12443  105A  0428               	iorwf	___aldiv@divisor,w
 12444  105B  1903               	skipnz
 12445  105C  2898               	goto	l5259
 12446  105D  01B0               	clrf	___aldiv@counter
 12447  105E  0AB0               	incf	___aldiv@counter,f
 12448  105F                     l5245:	
 12449  105F  1BAB               	btfsc	___aldiv@divisor+3,7
 12450  1060  286D               	goto	l5247
 12451  1061  3001               	movlw	1
 12452  1062                     u4705:	
 12453  1062  35A8               	lslf	___aldiv@divisor,f
 12454  1063  0DA9               	rlf	___aldiv@divisor+1,f
 12455  1064  0DAA               	rlf	___aldiv@divisor+2,f
 12456  1065  0DAB               	rlf	___aldiv@divisor+3,f
 12457  1066  0B89               	decfsz	9,f
 12458  1067  2862               	goto	u4705
 12459  1068  3001               	movlw	1
 12460  1069  00F7               	movwf	??___aldiv
 12461  106A  0877               	movf	??___aldiv,w
 12462  106B  07B0               	addwf	___aldiv@counter,f
 12463  106C  285F               	goto	l5245
 12464  106D                     l5247:	
 12465  106D  3001               	movlw	1
 12466  106E                     u4725:	
 12467  106E  35B2               	lslf	___aldiv@quotient,f
 12468  106F  0DB3               	rlf	___aldiv@quotient+1,f
 12469  1070  0DB4               	rlf	___aldiv@quotient+2,f
 12470  1071  0DB5               	rlf	___aldiv@quotient+3,f
 12471  1072  0B89               	decfsz	9,f
 12472  1073  286E               	goto	u4725
 12473  1074  082B               	movf	___aldiv@divisor+3,w
 12474  1075  022F               	subwf	___aldiv@dividend+3,w
 12475  1076  1D03               	skipz
 12476  1077  2882               	goto	u4735
 12477  1078  082A               	movf	___aldiv@divisor+2,w
 12478  1079  022E               	subwf	___aldiv@dividend+2,w
 12479  107A  1D03               	skipz
 12480  107B  2882               	goto	u4735
 12481  107C  0829               	movf	___aldiv@divisor+1,w
 12482  107D  022D               	subwf	___aldiv@dividend+1,w
 12483  107E  1D03               	skipz
 12484  107F  2882               	goto	u4735
 12485  1080  0828               	movf	___aldiv@divisor,w
 12486  1081  022C               	subwf	___aldiv@dividend,w
 12487  1082                     u4735:	
 12488  1082  1C03               	skipc
 12489  1083  288D               	goto	l5255
 12490  1084  0828               	movf	___aldiv@divisor,w
 12491  1085  02AC               	subwf	___aldiv@dividend,f
 12492  1086  0829               	movf	___aldiv@divisor+1,w
 12493  1087  3BAD               	subwfb	___aldiv@dividend+1,f
 12494  1088  082A               	movf	___aldiv@divisor+2,w
 12495  1089  3BAE               	subwfb	___aldiv@dividend+2,f
 12496  108A  082B               	movf	___aldiv@divisor+3,w
 12497  108B  3BAF               	subwfb	___aldiv@dividend+3,f
 12498  108C  1432               	bsf	___aldiv@quotient,0
 12499  108D                     l5255:	
 12500  108D  3001               	movlw	1
 12501  108E                     u4745:	
 12502  108E  36AB               	lsrf	___aldiv@divisor+3,f
 12503  108F  0CAA               	rrf	___aldiv@divisor+2,f
 12504  1090  0CA9               	rrf	___aldiv@divisor+1,f
 12505  1091  0CA8               	rrf	___aldiv@divisor,f
 12506  1092  0B89               	decfsz	9,f
 12507  1093  288E               	goto	u4745
 12508  1094  3001               	movlw	1
 12509  1095  02B0               	subwf	___aldiv@counter,f
 12510  1096  1D03               	btfss	3,2
 12511  1097  286D               	goto	l5247
 12512  1098                     l5259:	
 12513  1098  0831               	movf	___aldiv@sign,w
 12514  1099  1903               	btfsc	3,2
 12515  109A  28A6               	goto	l5263
 12516  109B  09B2               	comf	___aldiv@quotient,f
 12517  109C  09B3               	comf	___aldiv@quotient+1,f
 12518  109D  09B4               	comf	___aldiv@quotient+2,f
 12519  109E  09B5               	comf	___aldiv@quotient+3,f
 12520  109F  0AB2               	incf	___aldiv@quotient,f
 12521  10A0  1903               	skipnz
 12522  10A1  0AB3               	incf	___aldiv@quotient+1,f
 12523  10A2  1903               	skipnz
 12524  10A3  0AB4               	incf	___aldiv@quotient+2,f
 12525  10A4  1903               	skipnz
 12526  10A5  0AB5               	incf	___aldiv@quotient+3,f
 12527  10A6                     l5263:	
 12528  10A6  0835               	movf	___aldiv@quotient+3,w
 12529  10A7  00AB               	movwf	?___aldiv+3
 12530  10A8  0834               	movf	___aldiv@quotient+2,w
 12531  10A9  00AA               	movwf	?___aldiv+2
 12532  10AA  0833               	movf	___aldiv@quotient+1,w
 12533  10AB  00A9               	movwf	?___aldiv+1
 12534  10AC  0832               	movf	___aldiv@quotient,w
 12535  10AD  00A8               	movwf	?___aldiv
 12536  10AE  0008               	return
 12537  10AF                     __end_of___aldiv:	
 12538                           
 12539                           	psect	text36
 12540  1E41                     __ptext36:	
 12541 ;; *************** function _adc_sample *****************
 12542 ;; Defined at:
 12543 ;;		line 177 in file "src/api/sample.c"
 12544 ;; Parameters:    Size  Location     Type
 12545 ;;  ch              1    wreg     unsigned char 
 12546 ;;  gfvr            1    6[COMMON] unsigned char 
 12547 ;;  num             1    7[COMMON] unsigned char 
 12548 ;; Auto vars:     Size  Location     Type
 12549 ;;  ch              1    3[BANK0 ] unsigned char 
 12550 ;;  t16             2    8[BANK0 ] unsigned int 
 12551 ;;  ret             2    6[BANK0 ] unsigned int 
 12552 ;;  i               2    4[BANK0 ] unsigned int 
 12553 ;; Return value:  Size  Location     Type
 12554 ;;                  2    6[COMMON] unsigned int 
 12555 ;; Registers used:
 12556 ;;		wreg, status,2, status,0, pclath, cstack
 12557 ;; Tracked objects:
 12558 ;;		On entry : 0/0
 12559 ;;		On exit  : 0/0
 12560 ;;		Unchanged: 0/0
 12561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12562 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12563 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12564 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12565 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12566 ;;Total ram usage:       12 bytes
 12567 ;; Hardware stack levels used:    1
 12568 ;; Hardware stack levels required when called:    2
 12569 ;; This function calls:
 12570 ;;		_adc_init
 12571 ;;		_fvr_set_gain
 12572 ;; This function is called by:
 12573 ;;		_main
 12574 ;; This function uses a non-reentrant model
 12575 ;;
 12576                           
 12577                           
 12578                           ;psect for function _adc_sample
 12579  1E41                     _adc_sample:	
 12580                           
 12581                           ;incstack = 0
 12582                           ; Regs used in _adc_sample: [wreg+status,2+status,0+pclath+cstack]
 12583                           ;adc_sample@ch stored from wreg
 12584  1E41  0020               	movlb	0	; select bank0
 12585  1E42  00A3               	movwf	adc_sample@ch
 12586                           
 12587                           ;sample.c: 179: uint16_t i;
 12588                           ;sample.c: 180: uint16_t ret=0;
 12589  1E43  01A6               	clrf	adc_sample@ret
 12590  1E44  01A7               	clrf	adc_sample@ret+1
 12591                           
 12592                           ;sample.c: 181: uint16_t t16=0;
 12593  1E45  01A8               	clrf	adc_sample@t16
 12594  1E46  01A9               	clrf	adc_sample@t16+1
 12595                           
 12596                           ;sample.c: 183: fvr_set_gain(gfvr);
 12597  1E47  0876               	movf	adc_sample@gfvr,w
 12598  1E48  3199  21D1  319E   	fcall	_fvr_set_gain
 12599                           
 12600                           ;sample.c: 184: adc_init((adc_channel_t)ch);
 12601  1E4B  0020               	movlb	0	; select bank0
 12602  1E4C  0823               	movf	adc_sample@ch,w
 12603  1E4D  318F  27EB  319E   	fcall	_adc_init
 12604                           
 12605                           ;sample.c: 185: _delay((unsigned long)((50)*(16000000/4000000.0)));
 12606  1E50  3042               	movlw	66
 12607  1E51                     u5497:	
 12608  1E51  0B89               	decfsz	9,f
 12609  1E52  2E51               	goto	u5497
 12610  1E53  3200               	nop2
 12611                           
 12612                           ;sample.c: 186: ADCON0bits.GO_nDONE = 1;
 12613  1E54  0021               	movlb	1	; select bank1
 12614  1E55  149D               	bsf	29,1	;volatile
 12615  1E56                     l634:	
 12616                           ;sample.c: 187: while (ADCON0bits.GO_nDONE);
 12617                           
 12618  1E56  189D               	btfsc	29,1	;volatile
 12619  1E57  2E56               	goto	l634
 12620                           
 12621                           ;sample.c: 188: if(num>64)num=64;
 12622  1E58  3041               	movlw	65
 12623  1E59  0277               	subwf	adc_sample@num,w
 12624  1E5A  1C03               	skipc
 12625  1E5B  2E61               	goto	l5305
 12626  1E5C  3040               	movlw	64
 12627  1E5D  0020               	movlb	0	; select bank0
 12628  1E5E  00A0               	movwf	??_adc_sample
 12629  1E5F  0820               	movf	??_adc_sample,w
 12630  1E60  00F7               	movwf	adc_sample@num
 12631  1E61                     l5305:	
 12632                           
 12633                           ;sample.c: 189: for(i=0;i<num;i++){
 12634  1E61  0020               	movlb	0	; select bank0
 12635  1E62  01A4               	clrf	adc_sample@i
 12636  1E63  01A5               	clrf	adc_sample@i+1
 12637  1E64                     l5315:	
 12638  1E64  0877               	movf	adc_sample@num,w
 12639  1E65  00A0               	movwf	??_adc_sample
 12640  1E66  01A1               	clrf	??_adc_sample+1
 12641  1E67  0821               	movf	??_adc_sample+1,w
 12642  1E68  0225               	subwf	adc_sample@i+1,w
 12643  1E69  1D03               	skipz
 12644  1E6A  2E6D               	goto	u4895
 12645  1E6B  0820               	movf	??_adc_sample,w
 12646  1E6C  0224               	subwf	adc_sample@i,w
 12647  1E6D                     u4895:	
 12648  1E6D  1803               	btfsc	3,0
 12649  1E6E  2E9A               	goto	l5317
 12650                           
 12651                           ;sample.c: 190: ADCON0bits.GO_nDONE = 1;
 12652  1E6F  0021               	movlb	1	; select bank1
 12653  1E70  149D               	bsf	29,1	;volatile
 12654  1E71                     l640:	
 12655                           ;sample.c: 191: while (ADCON0bits.GO_nDONE);
 12656                           
 12657  1E71  189D               	btfsc	29,1	;volatile
 12658  1E72  2E71               	goto	l640
 12659                           
 12660                           ;sample.c: 192: __nop();
 12661  1E73  0000               	nop
 12662                           
 12663                           ;sample.c: 193: t16=ADRESH;
 12664  1E74  0021               	movlb	1	; select bank1
 12665  1E75  081C               	movf	28,w	;volatile
 12666  1E76  0020               	movlb	0	; select bank0
 12667  1E77  00A0               	movwf	??_adc_sample
 12668  1E78  01A1               	clrf	??_adc_sample+1
 12669  1E79  0820               	movf	??_adc_sample,w
 12670  1E7A  00A8               	movwf	adc_sample@t16
 12671  1E7B  0821               	movf	??_adc_sample+1,w
 12672  1E7C  00A9               	movwf	adc_sample@t16+1
 12673                           
 12674                           ;sample.c: 194: t16<<=2;
 12675  1E7D  3002               	movlw	2
 12676  1E7E                     u4875:	
 12677  1E7E  35A8               	lslf	adc_sample@t16,f
 12678  1E7F  0DA9               	rlf	adc_sample@t16+1,f
 12679  1E80  0B89               	decfsz	9,f
 12680  1E81  2E7E               	goto	u4875
 12681                           
 12682                           ;sample.c: 195: t16|=(uint16_t)(ADRESL>>6);
 12683  1E82  0021               	movlb	1	; select bank1
 12684  1E83  081B               	movf	27,w	;volatile
 12685  1E84  0020               	movlb	0	; select bank0
 12686  1E85  00A0               	movwf	??_adc_sample
 12687  1E86  3006               	movlw	6
 12688  1E87                     u4885:	
 12689  1E87  36A0               	lsrf	??_adc_sample,f
 12690  1E88  0B89               	decfsz	9,f
 12691  1E89  2E87               	goto	u4885
 12692  1E8A  0820               	movf	??_adc_sample,w
 12693  1E8B  00A1               	movwf	??_adc_sample+1
 12694  1E8C  01A2               	clrf	??_adc_sample+2
 12695  1E8D  0821               	movf	??_adc_sample+1,w
 12696  1E8E  04A8               	iorwf	adc_sample@t16,f
 12697  1E8F  0822               	movf	??_adc_sample+2,w
 12698  1E90  04A9               	iorwf	adc_sample@t16+1,f
 12699                           
 12700                           ;sample.c: 197: ret+=t16;
 12701  1E91  0828               	movf	adc_sample@t16,w
 12702  1E92  07A6               	addwf	adc_sample@ret,f
 12703  1E93  0829               	movf	adc_sample@t16+1,w
 12704  1E94  3DA7               	addwfc	adc_sample@ret+1,f
 12705  1E95  3001               	movlw	1
 12706  1E96  07A4               	addwf	adc_sample@i,f
 12707  1E97  3000               	movlw	0
 12708  1E98  3DA5               	addwfc	adc_sample@i+1,f
 12709  1E99  2E64               	goto	l5315
 12710  1E9A                     l5317:	
 12711                           
 12712                           ;sample.c: 202: return ret;
 12713  1E9A  0827               	movf	adc_sample@ret+1,w
 12714  1E9B  00F7               	movwf	?_adc_sample+1
 12715  1E9C  0826               	movf	adc_sample@ret,w
 12716  1E9D  00F6               	movwf	?_adc_sample
 12717  1E9E  0008               	return
 12718  1E9F                     __end_of_adc_sample:	
 12719                           
 12720                           	psect	text37
 12721  19D1                     __ptext37:	
 12722 ;; *************** function _fvr_set_gain *****************
 12723 ;; Defined at:
 12724 ;;		line 124 in file "src/api/sample.c"
 12725 ;; Parameters:    Size  Location     Type
 12726 ;;  g               1    wreg     unsigned char 
 12727 ;; Auto vars:     Size  Location     Type
 12728 ;;  g               1    5[COMMON] unsigned char 
 12729 ;;  t8              1    4[COMMON] unsigned char 
 12730 ;; Return value:  Size  Location     Type
 12731 ;;                  1    wreg      void 
 12732 ;; Registers used:
 12733 ;;		wreg, status,2, status,0
 12734 ;; Tracked objects:
 12735 ;;		On entry : 0/0
 12736 ;;		On exit  : 0/0
 12737 ;;		Unchanged: 0/0
 12738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12740 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12741 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12742 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12743 ;;Total ram usage:        3 bytes
 12744 ;; Hardware stack levels used:    1
 12745 ;; Hardware stack levels required when called:    1
 12746 ;; This function calls:
 12747 ;;		Nothing
 12748 ;; This function is called by:
 12749 ;;		_adc_sample
 12750 ;; This function uses a non-reentrant model
 12751 ;;
 12752                           
 12753                           
 12754                           ;psect for function _fvr_set_gain
 12755  19D1                     _fvr_set_gain:	
 12756                           
 12757                           ;incstack = 0
 12758                           ; Regs used in _fvr_set_gain: [wreg+status,2+status,0]
 12759                           ;fvr_set_gain@g stored from wreg
 12760  19D1  00F5               	movwf	fvr_set_gain@g
 12761                           
 12762                           ;sample.c: 126: uint8_t t8=0x80;
 12763  19D2  3080               	movlw	128
 12764  19D3  00F3               	movwf	??_fvr_set_gain
 12765  19D4  0873               	movf	??_fvr_set_gain,w
 12766  19D5  00F4               	movwf	fvr_set_gain@t8
 12767                           
 12768                           ;sample.c: 127: if(g>3)g=3;
 12769  19D6  3004               	movlw	4
 12770  19D7  0275               	subwf	fvr_set_gain@g,w
 12771  19D8  1C03               	skipc
 12772  19D9  29DE               	goto	l3669
 12773  19DA  3003               	movlw	3
 12774  19DB  00F3               	movwf	??_fvr_set_gain
 12775  19DC  0873               	movf	??_fvr_set_gain,w
 12776  19DD  00F5               	movwf	fvr_set_gain@g
 12777  19DE                     l3669:	
 12778                           
 12779                           ;sample.c: 128: t8|=g;
 12780  19DE  0875               	movf	fvr_set_gain@g,w
 12781  19DF  00F3               	movwf	??_fvr_set_gain
 12782  19E0  0873               	movf	??_fvr_set_gain,w
 12783  19E1  04F4               	iorwf	fvr_set_gain@t8,f
 12784                           
 12785                           ;sample.c: 129: FVRCON = t8;
 12786  19E2  0874               	movf	fvr_set_gain@t8,w
 12787  19E3  0022               	movlb	2	; select bank2
 12788  19E4  0097               	movwf	23	;volatile
 12789  19E5                     l622:	
 12790                           ;sample.c: 130: while(!(FVRCONbits.FVRRDY));
 12791                           
 12792  19E5  1B17               	btfsc	23,6	;volatile
 12793  19E6  0008               	return
 12794  19E7  29E5               	goto	l622
 12795  19E8                     __end_of_fvr_set_gain:	
 12796                           
 12797                           	psect	text38
 12798  0FEB                     __ptext38:	
 12799 ;; *************** function _adc_init *****************
 12800 ;; Defined at:
 12801 ;;		line 133 in file "src/api/sample.c"
 12802 ;; Parameters:    Size  Location     Type
 12803 ;;  ch              1    wreg     enum E4992
 12804 ;; Auto vars:     Size  Location     Type
 12805 ;;  ch              1    4[COMMON] enum E4992
 12806 ;; Return value:  Size  Location     Type
 12807 ;;                  1    wreg      void 
 12808 ;; Registers used:
 12809 ;;		wreg, status,2, status,0
 12810 ;; Tracked objects:
 12811 ;;		On entry : 0/0
 12812 ;;		On exit  : 0/0
 12813 ;;		Unchanged: 0/0
 12814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12817 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12818 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12819 ;;Total ram usage:        2 bytes
 12820 ;; Hardware stack levels used:    1
 12821 ;; Hardware stack levels required when called:    1
 12822 ;; This function calls:
 12823 ;;		Nothing
 12824 ;; This function is called by:
 12825 ;;		_adc_sample
 12826 ;; This function uses a non-reentrant model
 12827 ;;
 12828                           
 12829                           
 12830                           ;psect for function _adc_init
 12831  0FEB                     _adc_init:	
 12832                           
 12833                           ;incstack = 0
 12834                           ; Regs used in _adc_init: [wreg+status,2+status,0]
 12835                           ;adc_init@ch stored from wreg
 12836  0FEB  00F4               	movwf	adc_init@ch
 12837  0FEC                     l628:	
 12838                           ;sample.c: 135: while (ADCON0bits.GO_nDONE);
 12839                           
 12840  0FEC  0021               	movlb	1	; select bank1
 12841  0FED  189D               	btfsc	29,1	;volatile
 12842  0FEE  2FEC               	goto	l628
 12843                           
 12844                           ;sample.c: 136: ADCON0bits.CHS = ch;
 12845  0FEF  0874               	movf	adc_init@ch,w
 12846  0FF0  00F3               	movwf	??_adc_init
 12847  0FF1  0DF3               	rlf	??_adc_init,f
 12848  0FF2  0DF3               	rlf	??_adc_init,f
 12849  0FF3  081D               	movf	29,w	;volatile
 12850  0FF4  0673               	xorwf	??_adc_init,w
 12851  0FF5  3983               	andlw	-125
 12852  0FF6  0673               	xorwf	??_adc_init,w
 12853  0FF7  009D               	movwf	29	;volatile
 12854                           
 12855                           ;sample.c: 137: ADCON0bits.ADON = 1;
 12856  0FF8  141D               	bsf	29,0	;volatile
 12857                           
 12858                           ;sample.c: 138: ADCON1 = 0x63;
 12859  0FF9  3063               	movlw	99
 12860  0FFA  009E               	movwf	30	;volatile
 12861                           
 12862                           ;sample.c: 139: ADCON2 = 0x00;
 12863  0FFB  019F               	clrf	31	;volatile
 12864                           
 12865                           ;sample.c: 140: ADRESL = 0x00;
 12866  0FFC  019B               	clrf	27	;volatile
 12867                           
 12868                           ;sample.c: 141: ADRESH = 0x00;
 12869  0FFD  019C               	clrf	28	;volatile
 12870  0FFE  0008               	return
 12871  0FFF                     __end_of_adc_init:	
 12872                           
 12873                           	psect	text39
 12874  1A1A                     __ptext39:	
 12875 ;; *************** function _SYSTEM_Initialize *****************
 12876 ;; Defined at:
 12877 ;;		line 70 in file "mcc_generated_files/mcc.c"
 12878 ;; Parameters:    Size  Location     Type
 12879 ;;		None
 12880 ;; Auto vars:     Size  Location     Type
 12881 ;;		None
 12882 ;; Return value:  Size  Location     Type
 12883 ;;                  1    wreg      void 
 12884 ;; Registers used:
 12885 ;;		wreg, status,2, status,0, pclath, cstack
 12886 ;; Tracked objects:
 12887 ;;		On entry : 0/0
 12888 ;;		On exit  : 0/0
 12889 ;;		Unchanged: 0/0
 12890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12895 ;;Total ram usage:        0 bytes
 12896 ;; Hardware stack levels used:    1
 12897 ;; Hardware stack levels required when called:    3
 12898 ;; This function calls:
 12899 ;;		_ADC1_Initialize
 12900 ;;		_EUSART_Initialize
 12901 ;;		_FVR_Initialize
 12902 ;;		_OSCILLATOR_Initialize
 12903 ;;		_PIN_MANAGER_Initialize
 12904 ;;		_PWM1_Initialize
 12905 ;;		_PWM2_Initialize
 12906 ;;		_TMR2_Initialize
 12907 ;;		_WDT_Initialize
 12908 ;; This function is called by:
 12909 ;;		_main
 12910 ;; This function uses a non-reentrant model
 12911 ;;
 12912                           
 12913                           
 12914                           ;psect for function _SYSTEM_Initialize
 12915  1A1A                     _SYSTEM_Initialize:	
 12916                           
 12917                           ;mcc.c: 73: PIN_MANAGER_Initialize();
 12918                           
 12919                           ;incstack = 0
 12920                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12921  1A1A  319C  2471  319A   	fcall	_PIN_MANAGER_Initialize
 12922                           
 12923                           ;mcc.c: 74: OSCILLATOR_Initialize();
 12924  1A1D  318F  27FF  319A   	fcall	_OSCILLATOR_Initialize
 12925                           
 12926                           ;mcc.c: 75: WDT_Initialize();
 12927  1A20  3199  2168  319A   	fcall	_WDT_Initialize
 12928                           
 12929                           ;mcc.c: 76: FVR_Initialize();
 12930  1A23  3199  2164  319A   	fcall	_FVR_Initialize
 12931                           
 12932                           ;mcc.c: 77: PWM1_Initialize();
 12933  1A26  3199  21E8  319A   	fcall	_PWM1_Initialize
 12934                           
 12935                           ;mcc.c: 78: PWM2_Initialize();
 12936  1A29  319A  2201  319A   	fcall	_PWM2_Initialize
 12937                           
 12938                           ;mcc.c: 79: ADC1_Initialize();
 12939  1A2C  3190  2000  319A   	fcall	_ADC1_Initialize
 12940                           
 12941                           ;mcc.c: 80: TMR2_Initialize();
 12942  1A2F  3199  21BE  319A   	fcall	_TMR2_Initialize
 12943                           
 12944                           ;mcc.c: 81: EUSART_Initialize();
 12945  1A32  3199  21AB         	fcall	_EUSART_Initialize
 12946  1A34  0008               	return
 12947  1A35                     __end_of_SYSTEM_Initialize:	
 12948                           
 12949                           	psect	text40
 12950  1968                     __ptext40:	
 12951 ;; *************** function _WDT_Initialize *****************
 12952 ;; Defined at:
 12953 ;;		line 94 in file "mcc_generated_files/mcc.c"
 12954 ;; Parameters:    Size  Location     Type
 12955 ;;		None
 12956 ;; Auto vars:     Size  Location     Type
 12957 ;;		None
 12958 ;; Return value:  Size  Location     Type
 12959 ;;                  1    wreg      void 
 12960 ;; Registers used:
 12961 ;;		wreg
 12962 ;; Tracked objects:
 12963 ;;		On entry : 0/0
 12964 ;;		On exit  : 0/0
 12965 ;;		Unchanged: 0/0
 12966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12971 ;;Total ram usage:        0 bytes
 12972 ;; Hardware stack levels used:    1
 12973 ;; Hardware stack levels required when called:    1
 12974 ;; This function calls:
 12975 ;;		Nothing
 12976 ;; This function is called by:
 12977 ;;		_SYSTEM_Initialize
 12978 ;; This function uses a non-reentrant model
 12979 ;;
 12980                           
 12981                           
 12982                           ;psect for function _WDT_Initialize
 12983  1968                     _WDT_Initialize:	
 12984                           
 12985                           ;mcc.c: 97: WDTCON = 0x16;
 12986                           
 12987                           ;incstack = 0
 12988                           ; Regs used in _WDT_Initialize: [wreg]
 12989  1968  3016               	movlw	22
 12990  1969  0021               	movlb	1	; select bank1
 12991  196A  0097               	movwf	23	;volatile
 12992  196B  0008               	return
 12993  196C                     __end_of_WDT_Initialize:	
 12994                           
 12995                           	psect	text41
 12996  19BE                     __ptext41:	
 12997 ;; *************** function _TMR2_Initialize *****************
 12998 ;; Defined at:
 12999 ;;		line 63 in file "mcc_generated_files/tmr2.c"
 13000 ;; Parameters:    Size  Location     Type
 13001 ;;		None
 13002 ;; Auto vars:     Size  Location     Type
 13003 ;;		None
 13004 ;; Return value:  Size  Location     Type
 13005 ;;                  1    wreg      void 
 13006 ;; Registers used:
 13007 ;;		wreg, status,2, status,0, pclath, cstack
 13008 ;; Tracked objects:
 13009 ;;		On entry : 0/0
 13010 ;;		On exit  : 0/0
 13011 ;;		Unchanged: 0/0
 13012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13017 ;;Total ram usage:        0 bytes
 13018 ;; Hardware stack levels used:    1
 13019 ;; Hardware stack levels required when called:    2
 13020 ;; This function calls:
 13021 ;;		_TMR2_SetInterruptHandler
 13022 ;;		_TMR2_StartTimer
 13023 ;; This function is called by:
 13024 ;;		_SYSTEM_Initialize
 13025 ;; This function uses a non-reentrant model
 13026 ;;
 13027                           
 13028                           
 13029                           ;psect for function _TMR2_Initialize
 13030  19BE                     _TMR2_Initialize:	
 13031                           
 13032                           ;tmr2.c: 68: T2CON = 0x4B;
 13033                           
 13034                           ;incstack = 0
 13035                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13036  19BE  304B               	movlw	75
 13037  19BF  0020               	movlb	0	; select bank0
 13038  19C0  009C               	movwf	28	;volatile
 13039                           
 13040                           ;tmr2.c: 71: PR2 = 0x7C;
 13041  19C1  307C               	movlw	124
 13042  19C2  009B               	movwf	27	;volatile
 13043                           
 13044                           ;tmr2.c: 74: TMR2 = 0x00;
 13045  19C3  019A               	clrf	26	;volatile
 13046                           
 13047                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
 13048  19C4  1091               	bcf	17,1	;volatile
 13049                           
 13050                           ;tmr2.c: 80: PIE1bits.TMR2IE = 1;
 13051  19C5  0021               	movlb	1	; select bank1
 13052  19C6  1491               	bsf	17,1	;volatile
 13053                           
 13054                           ;tmr2.c: 83: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
 13055  19C7  3000               	movlw	0
 13056  19C8  00F3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 13057  19C9  3000               	movlw	0
 13058  19CA  00F4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 13059  19CB  3199  2170  3199   	fcall	_TMR2_SetInterruptHandler
 13060                           
 13061                           ;tmr2.c: 86: TMR2_StartTimer();
 13062  19CE  3199  2161         	fcall	_TMR2_StartTimer
 13063  19D0  0008               	return
 13064  19D1                     __end_of_TMR2_Initialize:	
 13065                           
 13066                           	psect	text42
 13067  1961                     __ptext42:	
 13068 ;; *************** function _TMR2_StartTimer *****************
 13069 ;; Defined at:
 13070 ;;		line 89 in file "mcc_generated_files/tmr2.c"
 13071 ;; Parameters:    Size  Location     Type
 13072 ;;		None
 13073 ;; Auto vars:     Size  Location     Type
 13074 ;;		None
 13075 ;; Return value:  Size  Location     Type
 13076 ;;                  1    wreg      void 
 13077 ;; Registers used:
 13078 ;;		None
 13079 ;; Tracked objects:
 13080 ;;		On entry : 0/0
 13081 ;;		On exit  : 0/0
 13082 ;;		Unchanged: 0/0
 13083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13088 ;;Total ram usage:        0 bytes
 13089 ;; Hardware stack levels used:    1
 13090 ;; Hardware stack levels required when called:    1
 13091 ;; This function calls:
 13092 ;;		Nothing
 13093 ;; This function is called by:
 13094 ;;		_TMR2_Initialize
 13095 ;; This function uses a non-reentrant model
 13096 ;;
 13097                           
 13098                           
 13099                           ;psect for function _TMR2_StartTimer
 13100  1961                     _TMR2_StartTimer:	
 13101                           
 13102                           ;tmr2.c: 92: T2CONbits.TMR2ON = 1;
 13103                           
 13104                           ;incstack = 0
 13105                           ; Regs used in _TMR2_StartTimer: []
 13106  1961  0020               	movlb	0	; select bank0
 13107  1962  151C               	bsf	28,2	;volatile
 13108  1963  0008               	return
 13109  1964                     __end_of_TMR2_StartTimer:	
 13110                           
 13111                           	psect	text43
 13112  1970                     __ptext43:	
 13113 ;; *************** function _TMR2_SetInterruptHandler *****************
 13114 ;; Defined at:
 13115 ;;		line 142 in file "mcc_generated_files/tmr2.c"
 13116 ;; Parameters:    Size  Location     Type
 13117 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
 13118 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 13119 ;; Auto vars:     Size  Location     Type
 13120 ;;		None
 13121 ;; Return value:  Size  Location     Type
 13122 ;;                  1    wreg      void 
 13123 ;; Registers used:
 13124 ;;		wreg
 13125 ;; Tracked objects:
 13126 ;;		On entry : 0/0
 13127 ;;		On exit  : 0/0
 13128 ;;		Unchanged: 0/0
 13129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13130 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13133 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13134 ;;Total ram usage:        2 bytes
 13135 ;; Hardware stack levels used:    1
 13136 ;; Hardware stack levels required when called:    1
 13137 ;; This function calls:
 13138 ;;		Nothing
 13139 ;; This function is called by:
 13140 ;;		_TMR2_Initialize
 13141 ;; This function uses a non-reentrant model
 13142 ;;
 13143                           
 13144                           
 13145                           ;psect for function _TMR2_SetInterruptHandler
 13146  1970                     _TMR2_SetInterruptHandler:	
 13147                           
 13148                           ;tmr2.c: 143: TMR2_InterruptHandler = InterruptHandler;
 13149                           
 13150                           ;incstack = 0
 13151                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 13152  1970  0874               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 13153  1971  0021               	movlb	1	; select bank1
 13154  1972  00D9               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
 13155  1973  0873               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 13156  1974  00D8               	movwf	_TMR2_InterruptHandler^(0+128)
 13157  1975  0008               	return
 13158  1976                     __end_of_TMR2_SetInterruptHandler:	
 13159                           
 13160                           	psect	text44
 13161  1A01                     __ptext44:	
 13162 ;; *************** function _PWM2_Initialize *****************
 13163 ;; Defined at:
 13164 ;;		line 58 in file "mcc_generated_files/pwm2.c"
 13165 ;; Parameters:    Size  Location     Type
 13166 ;;		None
 13167 ;; Auto vars:     Size  Location     Type
 13168 ;;		None
 13169 ;; Return value:  Size  Location     Type
 13170 ;;                  1    wreg      void 
 13171 ;; Registers used:
 13172 ;;		wreg, status,2
 13173 ;; Tracked objects:
 13174 ;;		On entry : 0/0
 13175 ;;		On exit  : 0/0
 13176 ;;		Unchanged: 0/0
 13177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13182 ;;Total ram usage:        0 bytes
 13183 ;; Hardware stack levels used:    1
 13184 ;; Hardware stack levels required when called:    1
 13185 ;; This function calls:
 13186 ;;		Nothing
 13187 ;; This function is called by:
 13188 ;;		_SYSTEM_Initialize
 13189 ;; This function uses a non-reentrant model
 13190 ;;
 13191                           
 13192                           
 13193                           ;psect for function _PWM2_Initialize
 13194  1A01                     _PWM2_Initialize:	
 13195                           
 13196                           ;pwm2.c: 63: PWM2INTE = 0x01;
 13197                           
 13198                           ;incstack = 0
 13199                           ; Regs used in _PWM2_Initialize: [wreg+status,2]
 13200  1A01  3001               	movlw	1
 13201  1A02  003B               	movlb	27	; select bank27
 13202  1A03  00AC               	movwf	44	;volatile
 13203                           
 13204                           ;pwm2.c: 66: PWM2INTF = 0x00;
 13205  1A04  01AD               	clrf	45	;volatile
 13206                           
 13207                           ;pwm2.c: 69: PWM2CLKCON = 0x00;
 13208  1A05  01AE               	clrf	46	;volatile
 13209                           
 13210                           ;pwm2.c: 72: PWM2LDCON = 0x00;
 13211  1A06  01AF               	clrf	47	;volatile
 13212                           
 13213                           ;pwm2.c: 75: PWM2OFCON = 0x00;
 13214  1A07  01B0               	clrf	48	;volatile
 13215                           
 13216                           ;pwm2.c: 78: PWM2PHH = 0x00;
 13217  1A08  01A2               	clrf	34	;volatile
 13218                           
 13219                           ;pwm2.c: 81: PWM2PHL = 0x02;
 13220  1A09  3002               	movlw	2
 13221  1A0A  00A1               	movwf	33	;volatile
 13222                           
 13223                           ;pwm2.c: 84: PWM2DCH = 0x00;
 13224  1A0B  01A4               	clrf	36	;volatile
 13225                           
 13226                           ;pwm2.c: 87: PWM2DCL = 0xA0;
 13227  1A0C  30A0               	movlw	160
 13228  1A0D  00A3               	movwf	35	;volatile
 13229                           
 13230                           ;pwm2.c: 90: PWM2PRH = 0x06;
 13231  1A0E  3006               	movlw	6
 13232  1A0F  00A6               	movwf	38	;volatile
 13233                           
 13234                           ;pwm2.c: 93: PWM2PRL = 0x3F;
 13235  1A10  303F               	movlw	63
 13236  1A11  00A5               	movwf	37	;volatile
 13237                           
 13238                           ;pwm2.c: 96: PWM2OFH = 0x00;
 13239  1A12  01A8               	clrf	40	;volatile
 13240                           
 13241                           ;pwm2.c: 99: PWM2OFL = 0x01;
 13242  1A13  3001               	movlw	1
 13243  1A14  00A7               	movwf	39	;volatile
 13244                           
 13245                           ;pwm2.c: 102: PWM2TMRH = 0x00;
 13246  1A15  01AA               	clrf	42	;volatile
 13247                           
 13248                           ;pwm2.c: 105: PWM2TMRL = 0x00;
 13249  1A16  01A9               	clrf	41	;volatile
 13250                           
 13251                           ;pwm2.c: 108: PWM2CON = 0x90;
 13252  1A17  3090               	movlw	144
 13253  1A18  00AB               	movwf	43	;volatile
 13254  1A19  0008               	return
 13255  1A1A                     __end_of_PWM2_Initialize:	
 13256                           
 13257                           	psect	text45
 13258  19E8                     __ptext45:	
 13259 ;; *************** function _PWM1_Initialize *****************
 13260 ;; Defined at:
 13261 ;;		line 58 in file "mcc_generated_files/pwm1.c"
 13262 ;; Parameters:    Size  Location     Type
 13263 ;;		None
 13264 ;; Auto vars:     Size  Location     Type
 13265 ;;		None
 13266 ;; Return value:  Size  Location     Type
 13267 ;;                  1    wreg      void 
 13268 ;; Registers used:
 13269 ;;		wreg, status,2
 13270 ;; Tracked objects:
 13271 ;;		On entry : 0/0
 13272 ;;		On exit  : 0/0
 13273 ;;		Unchanged: 0/0
 13274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13279 ;;Total ram usage:        0 bytes
 13280 ;; Hardware stack levels used:    1
 13281 ;; Hardware stack levels required when called:    1
 13282 ;; This function calls:
 13283 ;;		Nothing
 13284 ;; This function is called by:
 13285 ;;		_SYSTEM_Initialize
 13286 ;; This function uses a non-reentrant model
 13287 ;;
 13288                           
 13289                           
 13290                           ;psect for function _PWM1_Initialize
 13291  19E8                     _PWM1_Initialize:	
 13292                           
 13293                           ;pwm1.c: 63: PWM1INTE = 0x01;
 13294                           
 13295                           ;incstack = 0
 13296                           ; Regs used in _PWM1_Initialize: [wreg+status,2]
 13297  19E8  3001               	movlw	1
 13298  19E9  003B               	movlb	27	; select bank27
 13299  19EA  009C               	movwf	28	;volatile
 13300                           
 13301                           ;pwm1.c: 66: PWM1INTF = 0x00;
 13302  19EB  019D               	clrf	29	;volatile
 13303                           
 13304                           ;pwm1.c: 69: PWM1CLKCON = 0x00;
 13305  19EC  019E               	clrf	30	;volatile
 13306                           
 13307                           ;pwm1.c: 72: PWM1LDCON = 0x00;
 13308  19ED  019F               	clrf	31	;volatile
 13309                           
 13310                           ;pwm1.c: 75: PWM1OFCON = 0x00;
 13311  19EE  01A0               	clrf	32	;volatile
 13312                           
 13313                           ;pwm1.c: 78: PWM1PHH = 0x00;
 13314  19EF  0192               	clrf	18	;volatile
 13315                           
 13316                           ;pwm1.c: 81: PWM1PHL = 0x02;
 13317  19F0  3002               	movlw	2
 13318  19F1  0091               	movwf	17	;volatile
 13319                           
 13320                           ;pwm1.c: 84: PWM1DCH = 0x00;
 13321  19F2  0194               	clrf	20	;volatile
 13322                           
 13323                           ;pwm1.c: 87: PWM1DCL = 0xa0;
 13324  19F3  30A0               	movlw	160
 13325  19F4  0093               	movwf	19	;volatile
 13326                           
 13327                           ;pwm1.c: 90: PWM1PRH = 0x06;
 13328  19F5  3006               	movlw	6
 13329  19F6  0096               	movwf	22	;volatile
 13330                           
 13331                           ;pwm1.c: 93: PWM1PRL = 0x3F;
 13332  19F7  303F               	movlw	63
 13333  19F8  0095               	movwf	21	;volatile
 13334                           
 13335                           ;pwm1.c: 96: PWM1OFH = 0x00;
 13336  19F9  0198               	clrf	24	;volatile
 13337                           
 13338                           ;pwm1.c: 99: PWM1OFL = 0x01;
 13339  19FA  3001               	movlw	1
 13340  19FB  0097               	movwf	23	;volatile
 13341                           
 13342                           ;pwm1.c: 102: PWM1TMRH = 0x00;
 13343  19FC  019A               	clrf	26	;volatile
 13344                           
 13345                           ;pwm1.c: 105: PWM1TMRL = 0x00;
 13346  19FD  0199               	clrf	25	;volatile
 13347                           
 13348                           ;pwm1.c: 108: PWM1CON = 0x90;
 13349  19FE  3090               	movlw	144
 13350  19FF  009B               	movwf	27	;volatile
 13351  1A00  0008               	return
 13352  1A01                     __end_of_PWM1_Initialize:	
 13353                           
 13354                           	psect	text46
 13355  1C71                     __ptext46:	
 13356 ;; *************** function _PIN_MANAGER_Initialize *****************
 13357 ;; Defined at:
 13358 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 13359 ;; Parameters:    Size  Location     Type
 13360 ;;		None
 13361 ;; Auto vars:     Size  Location     Type
 13362 ;;  state           1    3[COMMON] unsigned char 
 13363 ;; Return value:  Size  Location     Type
 13364 ;;                  1    wreg      void 
 13365 ;; Registers used:
 13366 ;;		wreg, status,2, status,0
 13367 ;; Tracked objects:
 13368 ;;		On entry : 0/0
 13369 ;;		On exit  : 0/0
 13370 ;;		Unchanged: 0/0
 13371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13373 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13375 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13376 ;;Total ram usage:        1 bytes
 13377 ;; Hardware stack levels used:    1
 13378 ;; Hardware stack levels required when called:    1
 13379 ;; This function calls:
 13380 ;;		Nothing
 13381 ;; This function is called by:
 13382 ;;		_SYSTEM_Initialize
 13383 ;; This function uses a non-reentrant model
 13384 ;;
 13385                           
 13386                           
 13387                           ;psect for function _PIN_MANAGER_Initialize
 13388  1C71                     _PIN_MANAGER_Initialize:	
 13389                           
 13390                           ;pin_manager.c: 57: LATA = 0x00;
 13391                           
 13392                           ;incstack = 0
 13393                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 13394  1C71  0022               	movlb	2	; select bank2
 13395  1C72  018C               	clrf	12	;volatile
 13396                           
 13397                           ;pin_manager.c: 58: LATC = 0x00;
 13398  1C73  018E               	clrf	14	;volatile
 13399                           
 13400                           ;pin_manager.c: 63: TRISA = 0x0F;
 13401  1C74  300F               	movlw	15
 13402  1C75  0021               	movlb	1	; select bank1
 13403  1C76  008C               	movwf	12	;volatile
 13404                           
 13405                           ;pin_manager.c: 64: TRISC = 0x1f;
 13406  1C77  301F               	movlw	31
 13407  1C78  008E               	movwf	14	;volatile
 13408                           
 13409                           ;pin_manager.c: 69: ANSELC = 0x0F;
 13410  1C79  300F               	movlw	15
 13411  1C7A  0023               	movlb	3	; select bank3
 13412  1C7B  008E               	movwf	14	;volatile
 13413                           
 13414                           ;pin_manager.c: 70: ANSELA = 0x17;
 13415  1C7C  3017               	movlw	23
 13416  1C7D  008C               	movwf	12	;volatile
 13417                           
 13418                           ;pin_manager.c: 75: WPUA = 0x3B;
 13419  1C7E  303B               	movlw	59
 13420  1C7F  0024               	movlb	4	; select bank4
 13421  1C80  008C               	movwf	12	;volatile
 13422                           
 13423                           ;pin_manager.c: 76: WPUC = 0x30;
 13424  1C81  3030               	movlw	48
 13425  1C82  008E               	movwf	14	;volatile
 13426                           
 13427                           ;pin_manager.c: 77: OPTION_REGbits.nWPUEN = 0;
 13428  1C83  0021               	movlb	1	; select bank1
 13429  1C84  1395               	bcf	21,7	;volatile
 13430                           
 13431                           ;pin_manager.c: 82: ODCONA = 0x00;
 13432  1C85  0025               	movlb	5	; select bank5
 13433  1C86  018C               	clrf	12	;volatile
 13434                           
 13435                           ;pin_manager.c: 83: ODCONC = 0x00;
 13436  1C87  018E               	clrf	14	;volatile
 13437                           
 13438                           ;pin_manager.c: 85: bool state = (unsigned char)GIE;
 13439  1C88  3000               	movlw	0
 13440  1C89  1B8B               	btfsc	11,7	;volatile
 13441  1C8A  3001               	movlw	1
 13442  1C8B  00F3               	movwf	PIN_MANAGER_Initialize@state
 13443                           
 13444                           ;pin_manager.c: 86: GIE = 0;
 13445  1C8C  138B               	bcf	11,7	;volatile
 13446                           
 13447                           ;pin_manager.c: 87: PPSLOCK = 0x55;
 13448  1C8D  3055               	movlw	85
 13449  1C8E  003C               	movlb	28	; select bank28
 13450  1C8F  008F               	movwf	15	;volatile
 13451                           
 13452                           ;pin_manager.c: 88: PPSLOCK = 0xAA;
 13453  1C90  30AA               	movlw	170
 13454  1C91  008F               	movwf	15	;volatile
 13455                           
 13456                           ;pin_manager.c: 89: PPSLOCKbits.PPSLOCKED = 0x00;
 13457  1C92  100F               	bcf	15,0	;volatile
 13458                           
 13459                           ;pin_manager.c: 91: RXPPSbits.RXPPS = 0x14;
 13460  1C93  0815               	movf	21,w	;volatile
 13461  1C94  39E0               	andlw	-32
 13462  1C95  3814               	iorlw	20
 13463  1C96  0095               	movwf	21	;volatile
 13464                           
 13465                           ;pin_manager.c: 92: RA4PPSbits.RA4PPS = 0x04;
 13466  1C97  003D               	movlb	29	; select bank29
 13467  1C98  0814               	movf	20,w	;volatile
 13468  1C99  39F0               	andlw	-16
 13469  1C9A  3804               	iorlw	4
 13470  1C9B  0094               	movwf	20	;volatile
 13471                           
 13472                           ;pin_manager.c: 93: RA5PPSbits.RA5PPS = 0x03;
 13473  1C9C  0815               	movf	21,w	;volatile
 13474  1C9D  39F0               	andlw	-16
 13475  1C9E  3803               	iorlw	3
 13476  1C9F  0095               	movwf	21	;volatile
 13477                           
 13478                           ;pin_manager.c: 94: RC5PPSbits.RC5PPS = 0x09;
 13479  1CA0  0825               	movf	37,w	;volatile
 13480  1CA1  39F0               	andlw	-16
 13481  1CA2  3809               	iorlw	9
 13482  1CA3  00A5               	movwf	37	;volatile
 13483                           
 13484                           ;pin_manager.c: 96: PPSLOCK = 0x55;
 13485  1CA4  3055               	movlw	85
 13486  1CA5  003C               	movlb	28	; select bank28
 13487  1CA6  008F               	movwf	15	;volatile
 13488                           
 13489                           ;pin_manager.c: 97: PPSLOCK = 0xAA;
 13490  1CA7  30AA               	movlw	170
 13491  1CA8  008F               	movwf	15	;volatile
 13492                           
 13493                           ;pin_manager.c: 98: PPSLOCKbits.PPSLOCKED = 0x01;
 13494  1CA9  140F               	bsf	15,0	;volatile
 13495                           
 13496                           ;pin_manager.c: 100: GIE = state;
 13497  1CAA  1C73               	btfss	PIN_MANAGER_Initialize@state,0
 13498  1CAB  2CAE               	goto	u2400
 13499  1CAC  178B               	bsf	11,7	;volatile
 13500  1CAD  0008               	return
 13501  1CAE                     u2400:	
 13502  1CAE  138B               	bcf	11,7	;volatile
 13503  1CAF  0008               	return
 13504  1CB0                     __end_of_PIN_MANAGER_Initialize:	
 13505                           
 13506                           	psect	text47
 13507  0FFF                     __ptext47:	
 13508 ;; *************** function _OSCILLATOR_Initialize *****************
 13509 ;; Defined at:
 13510 ;;		line 84 in file "mcc_generated_files/mcc.c"
 13511 ;; Parameters:    Size  Location     Type
 13512 ;;		None
 13513 ;; Auto vars:     Size  Location     Type
 13514 ;;		None
 13515 ;; Return value:  Size  Location     Type
 13516 ;;                  1    wreg      void 
 13517 ;; Registers used:
 13518 ;;		None
 13519 ;; Tracked objects:
 13520 ;;		On entry : 0/0
 13521 ;;		On exit  : 0/0
 13522 ;;		Unchanged: 0/0
 13523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13528 ;;Total ram usage:        0 bytes
 13529 ;; Hardware stack levels used:    1
 13530 ;; Hardware stack levels required when called:    1
 13531 ;; This function calls:
 13532 ;;		Nothing
 13533 ;; This function is called by:
 13534 ;;		_SYSTEM_Initialize
 13535 ;; This function uses a non-reentrant model
 13536 ;;
 13537                           
 13538                           
 13539                           ;psect for function _OSCILLATOR_Initialize
 13540  0FFF                     _OSCILLATOR_Initialize:	
 13541                           
 13542                           ;incstack = 0
 13543                           ; Regs used in _OSCILLATOR_Initialize: []
 13544  0FFF  0008               	return
 13545  1000                     __end_of_OSCILLATOR_Initialize:	
 13546                           
 13547                           	psect	text48
 13548  1964                     __ptext48:	
 13549 ;; *************** function _FVR_Initialize *****************
 13550 ;; Defined at:
 13551 ;;		line 57 in file "mcc_generated_files/fvr.c"
 13552 ;; Parameters:    Size  Location     Type
 13553 ;;		None
 13554 ;; Auto vars:     Size  Location     Type
 13555 ;;		None
 13556 ;; Return value:  Size  Location     Type
 13557 ;;                  1    wreg      void 
 13558 ;; Registers used:
 13559 ;;		wreg
 13560 ;; Tracked objects:
 13561 ;;		On entry : 0/0
 13562 ;;		On exit  : 0/0
 13563 ;;		Unchanged: 0/0
 13564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13569 ;;Total ram usage:        0 bytes
 13570 ;; Hardware stack levels used:    1
 13571 ;; Hardware stack levels required when called:    1
 13572 ;; This function calls:
 13573 ;;		Nothing
 13574 ;; This function is called by:
 13575 ;;		_SYSTEM_Initialize
 13576 ;; This function uses a non-reentrant model
 13577 ;;
 13578                           
 13579                           
 13580                           ;psect for function _FVR_Initialize
 13581  1964                     _FVR_Initialize:	
 13582                           
 13583                           ;fvr.c: 60: FVRCON = 0x81;
 13584                           
 13585                           ;incstack = 0
 13586                           ; Regs used in _FVR_Initialize: [wreg]
 13587  1964  3081               	movlw	129
 13588  1965  0022               	movlb	2	; select bank2
 13589  1966  0097               	movwf	23	;volatile
 13590  1967  0008               	return
 13591  1968                     __end_of_FVR_Initialize:	
 13592                           
 13593                           	psect	text49
 13594  19AB                     __ptext49:	
 13595 ;; *************** function _EUSART_Initialize *****************
 13596 ;; Defined at:
 13597 ;;		line 55 in file "mcc_generated_files/eusart.c"
 13598 ;; Parameters:    Size  Location     Type
 13599 ;;		None
 13600 ;; Auto vars:     Size  Location     Type
 13601 ;;		None
 13602 ;; Return value:  Size  Location     Type
 13603 ;;                  1    wreg      void 
 13604 ;; Registers used:
 13605 ;;		wreg
 13606 ;; Tracked objects:
 13607 ;;		On entry : 0/0
 13608 ;;		On exit  : 0/0
 13609 ;;		Unchanged: 0/0
 13610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13615 ;;Total ram usage:        0 bytes
 13616 ;; Hardware stack levels used:    1
 13617 ;; Hardware stack levels required when called:    1
 13618 ;; This function calls:
 13619 ;;		Nothing
 13620 ;; This function is called by:
 13621 ;;		_SYSTEM_Initialize
 13622 ;; This function uses a non-reentrant model
 13623 ;;
 13624                           
 13625                           
 13626                           ;psect for function _EUSART_Initialize
 13627  19AB                     _EUSART_Initialize:	
 13628                           
 13629                           ;eusart.c: 58: PIE1bits.RCIE = 0;
 13630                           
 13631                           ;incstack = 0
 13632                           ; Regs used in _EUSART_Initialize: [wreg]
 13633  19AB  0021               	movlb	1	; select bank1
 13634  19AC  1291               	bcf	17,5	;volatile
 13635                           
 13636                           ;eusart.c: 59: PIE1bits.TXIE = 0;
 13637  19AD  1211               	bcf	17,4	;volatile
 13638                           
 13639                           ;eusart.c: 61: BAUDCON = 0x08;
 13640  19AE  3008               	movlw	8
 13641  19AF  0023               	movlb	3	; select bank3
 13642  19B0  009F               	movwf	31	;volatile
 13643                           
 13644                           ;eusart.c: 64: RCSTA = 0x90;
 13645  19B1  3090               	movlw	144
 13646  19B2  009D               	movwf	29	;volatile
 13647                           
 13648                           ;eusart.c: 67: TXSTA = 0x24;
 13649  19B3  3024               	movlw	36
 13650  19B4  009E               	movwf	30	;volatile
 13651                           
 13652                           ;eusart.c: 71: SPBRGL = 0xA0;
 13653  19B5  30A0               	movlw	160
 13654  19B6  009B               	movwf	27	;volatile
 13655                           
 13656                           ;eusart.c: 76: SPBRGH = 0x01;
 13657  19B7  3001               	movlw	1
 13658  19B8  009C               	movwf	28	;volatile
 13659                           
 13660                           ;eusart.c: 77: PIE1bits.RCIE = 1;
 13661  19B9  0021               	movlb	1	; select bank1
 13662  19BA  1691               	bsf	17,5	;volatile
 13663                           
 13664                           ;eusart.c: 78: PIR1bits.TXIF=0;
 13665  19BB  0020               	movlb	0	; select bank0
 13666  19BC  1211               	bcf	17,4	;volatile
 13667  19BD  0008               	return
 13668  19BE                     __end_of_EUSART_Initialize:	
 13669                           
 13670                           	psect	text50
 13671  1000                     __ptext50:	
 13672 ;; *************** function _ADC1_Initialize *****************
 13673 ;; Defined at:
 13674 ;;		line 64 in file "mcc_generated_files/adc1.c"
 13675 ;; Parameters:    Size  Location     Type
 13676 ;;		None
 13677 ;; Auto vars:     Size  Location     Type
 13678 ;;		None
 13679 ;; Return value:  Size  Location     Type
 13680 ;;                  1    wreg      void 
 13681 ;; Registers used:
 13682 ;;		wreg, status,2
 13683 ;; Tracked objects:
 13684 ;;		On entry : 0/0
 13685 ;;		On exit  : 0/0
 13686 ;;		Unchanged: 0/0
 13687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13692 ;;Total ram usage:        0 bytes
 13693 ;; Hardware stack levels used:    1
 13694 ;; Hardware stack levels required when called:    1
 13695 ;; This function calls:
 13696 ;;		Nothing
 13697 ;; This function is called by:
 13698 ;;		_SYSTEM_Initialize
 13699 ;; This function uses a non-reentrant model
 13700 ;;
 13701                           
 13702                           
 13703                           ;psect for function _ADC1_Initialize
 13704  1000                     _ADC1_Initialize:	
 13705                           
 13706                           ;adc1.c: 69: ADCON0 = 0x01;
 13707                           
 13708                           ;incstack = 0
 13709                           ; Regs used in _ADC1_Initialize: [wreg+status,2]
 13710  1000  3001               	movlw	1
 13711  1001  0021               	movlb	1	; select bank1
 13712  1002  009D               	movwf	29	;volatile
 13713                           
 13714                           ;adc1.c: 72: ADCON1 = 0x63;
 13715  1003  3063               	movlw	99
 13716  1004  009E               	movwf	30	;volatile
 13717                           
 13718                           ;adc1.c: 75: ADCON2 = 0x00;
 13719  1005  019F               	clrf	31	;volatile
 13720                           
 13721                           ;adc1.c: 78: ADRESL = 0x00;
 13722  1006  019B               	clrf	27	;volatile
 13723                           
 13724                           ;adc1.c: 81: ADRESH = 0x00;
 13725  1007  019C               	clrf	28	;volatile
 13726  1008  0008               	return
 13727  1009                     __end_of_ADC1_Initialize:	
 13728                           
 13729                           	psect	intentry
 13730  0804                     __pintentry:	
 13731 ;; *************** function _INTERRUPT_InterruptManager *****************
 13732 ;; Defined at:
 13733 ;;		line 55 in file "mcc_generated_files/interrupt_manager.c"
 13734 ;; Parameters:    Size  Location     Type
 13735 ;;		None
 13736 ;; Auto vars:     Size  Location     Type
 13737 ;;  t8              1    2[COMMON] unsigned char 
 13738 ;; Return value:  Size  Location     Type
 13739 ;;                  1    wreg      void 
 13740 ;; Registers used:
 13741 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13742 ;; Tracked objects:
 13743 ;;		On entry : 0/0
 13744 ;;		On exit  : 0/0
 13745 ;;		Unchanged: 0/0
 13746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13748 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13749 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13750 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13751 ;;Total ram usage:        3 bytes
 13752 ;; Hardware stack levels used:    1
 13753 ;; This function calls:
 13754 ;;		Nothing
 13755 ;; This function is called by:
 13756 ;;		Interrupt level 1
 13757 ;; This function uses a non-reentrant model
 13758 ;;
 13759                           
 13760  0804                     _INTERRUPT_InterruptManager:	
 13761                           
 13762                           ;incstack = 0
 13763  0804  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 13764                           
 13765                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0]
 13766  0805  3188               	pagesel	$
 13767  0806  0020               	movlb	0	; select bank0
 13768  0807  087F               	movf	127,w
 13769  0808  00F1               	movwf	??_INTERRUPT_InterruptManager+1
 13770                           
 13771                           ;interrupt_manager.c: 58: uint8_t t8;
 13772                           ;interrupt_manager.c: 59: if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bits.TM
      +                          R2IF == 1)
 13773  0809  1F0B               	btfss	11,6	;volatile
 13774  080A  2839               	goto	i1l4521
 13775  080B  0021               	movlb	1	; select bank1
 13776  080C  1C91               	btfss	17,1	;volatile
 13777  080D  2839               	goto	i1l4521
 13778  080E  0020               	movlb	0	; select bank0
 13779  080F  1C91               	btfss	17,1	;volatile
 13780  0810  2839               	goto	i1l4521
 13781                           
 13782                           ;interrupt_manager.c: 60: {
 13783                           ;interrupt_manager.c: 62: PIR1bits.TMR2IF = 0;
 13784  0811  1091               	bcf	17,1	;volatile
 13785                           
 13786                           ;interrupt_manager.c: 63: Event |= (1<<1);
 13787  0812  14DC               	bsf	_Event,1	;volatile
 13788                           
 13789                           ;interrupt_manager.c: 64: subTickerX++;
 13790  0813  3001               	movlw	1
 13791  0814  00F0               	movwf	??_INTERRUPT_InterruptManager
 13792  0815  0870               	movf	??_INTERRUPT_InterruptManager,w
 13793  0816  07F8               	addwf	_subTickerX,f
 13794                           
 13795                           ;interrupt_manager.c: 65: subTickerX_1s++;
 13796  0817  3001               	movlw	1
 13797  0818  00F0               	movwf	??_INTERRUPT_InterruptManager
 13798  0819  0870               	movf	??_INTERRUPT_InterruptManager,w
 13799  081A  07DB               	addwf	_subTickerX_1s,f
 13800                           
 13801                           ;interrupt_manager.c: 66: if(subTickerX>=5){
 13802  081B  3005               	movlw	5
 13803  081C  0278               	subwf	_subTickerX,w
 13804  081D  1C03               	skipc
 13805  081E  2821               	goto	i1l4503
 13806                           
 13807                           ;interrupt_manager.c: 67: subTickerX=0;
 13808  081F  01F8               	clrf	_subTickerX
 13809                           
 13810                           ;interrupt_manager.c: 68: Event |= (1<<2);
 13811  0820  155C               	bsf	_Event,2	;volatile
 13812  0821                     i1l4503:	
 13813                           
 13814                           ;interrupt_manager.c: 69: }
 13815                           ;interrupt_manager.c: 70: if(subTickerX_1s>=50){
 13816  0821  3032               	movlw	50
 13817  0822  025B               	subwf	_subTickerX_1s,w
 13818  0823  1C03               	skipc
 13819  0824  2827               	goto	i1l4509
 13820                           
 13821                           ;interrupt_manager.c: 71: subTickerX_1s=0;
 13822  0825  01DB               	clrf	_subTickerX_1s
 13823                           
 13824                           ;interrupt_manager.c: 72: Event |= (1<<3);
 13825  0826  15DC               	bsf	_Event,3	;volatile
 13826  0827                     i1l4509:	
 13827                           
 13828                           ;interrupt_manager.c: 73: }
 13829                           ;interrupt_manager.c: 75: if(eusartRxIdleTime_ms){
 13830  0827  087A               	movf	_eusartRxIdleTime_ms,w	;volatile
 13831  0828  1903               	btfsc	3,2
 13832  0829  2834               	goto	i1l4519
 13833                           
 13834                           ;interrupt_manager.c: 76: eusartRxIdleTime_ms++;
 13835  082A  3001               	movlw	1
 13836  082B  00F0               	movwf	??_INTERRUPT_InterruptManager
 13837  082C  0870               	movf	??_INTERRUPT_InterruptManager,w
 13838  082D  07FA               	addwf	_eusartRxIdleTime_ms,f	;volatile
 13839                           
 13840                           ;interrupt_manager.c: 77: if(eusartRxIdleTime_ms>5){
 13841  082E  3006               	movlw	6
 13842  082F  027A               	subwf	_eusartRxIdleTime_ms,w	;volatile
 13843  0830  1C03               	skipc
 13844  0831  2834               	goto	i1l4519
 13845                           
 13846                           ;interrupt_manager.c: 78: Event|=(1<<0);
 13847  0832  145C               	bsf	_Event,0	;volatile
 13848                           
 13849                           ;interrupt_manager.c: 79: eusartRxIdleTime_ms=0;
 13850  0833  01FA               	clrf	_eusartRxIdleTime_ms	;volatile
 13851  0834                     i1l4519:	
 13852                           
 13853                           ;interrupt_manager.c: 80: }
 13854                           ;interrupt_manager.c: 81: }
 13855                           ;interrupt_manager.c: 82: globalTicker++;
 13856  0834  3001               	movlw	1
 13857  0835  0021               	movlb	1	; select bank1
 13858  0836  07D6               	addwf	_globalTicker^(0+128),f	;volatile
 13859  0837  3000               	movlw	0
 13860  0838  3DD7               	addwfc	(_globalTicker+1)^(0+128),f	;volatile
 13861  0839                     i1l4521:	
 13862                           
 13863                           ;interrupt_manager.c: 83: }
 13864                           ;interrupt_manager.c: 84: if(INTCONbits.PEIE == 1 && PIE1bits.RCIE == 1 && PIR1bits.RCIF
      +                           == 1)
 13865  0839  1F0B               	btfss	11,6	;volatile
 13866  083A  2860               	goto	i1l4539
 13867  083B  0021               	movlb	1	; select bank1
 13868  083C  1E91               	btfss	17,5	;volatile
 13869  083D  2860               	goto	i1l4539
 13870  083E  0020               	movlb	0	; select bank0
 13871  083F  1E91               	btfss	17,5	;volatile
 13872  0840  2860               	goto	i1l4539
 13873                           
 13874                           ;interrupt_manager.c: 85: {
 13875                           ;interrupt_manager.c: 87: PIR1bits.RCIF=0;
 13876  0841  1291               	bcf	17,5	;volatile
 13877                           
 13878                           ;interrupt_manager.c: 88: if(1 == RCSTAbits.OERR){
 13879  0842  0023               	movlb	3	; select bank3
 13880  0843  1C9D               	btfss	29,1	;volatile
 13881  0844  2847               	goto	i1l4531
 13882                           
 13883                           ;interrupt_manager.c: 89: RCSTAbits.CREN = 0;
 13884  0845  121D               	bcf	29,4	;volatile
 13885                           
 13886                           ;interrupt_manager.c: 90: RCSTAbits.CREN = 1;
 13887  0846  161D               	bsf	29,4	;volatile
 13888  0847                     i1l4531:	
 13889                           
 13890                           ;interrupt_manager.c: 91: }
 13891                           ;interrupt_manager.c: 92: t8=RCREG;
 13892  0847  0819               	movf	25,w	;volatile
 13893  0848  00F0               	movwf	??_INTERRUPT_InterruptManager
 13894  0849  0870               	movf	??_INTERRUPT_InterruptManager,w
 13895  084A  00F2               	movwf	INTERRUPT_InterruptManager@t8
 13896                           
 13897                           ;interrupt_manager.c: 93: if(eusartRxCount<60){
 13898  084B  303C               	movlw	60
 13899  084C  0279               	subwf	_eusartRxCount,w	;volatile
 13900  084D  1803               	skipnc
 13901  084E  285C               	goto	i1l4537
 13902                           
 13903                           ;interrupt_manager.c: 94: eusartRxBuffer[eusartRxCount]=t8;
 13904  084F  0872               	movf	INTERRUPT_InterruptManager@t8,w
 13905  0850  00F0               	movwf	??_INTERRUPT_InterruptManager
 13906  0851  0879               	movf	_eusartRxCount,w
 13907  0852  3E20               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 13908  0853  0086               	movwf	6
 13909  0854  3001               	movlw	1	; select bank2/3
 13910  0855  0087               	movwf	7
 13911  0856  0870               	movf	??_INTERRUPT_InterruptManager,w
 13912  0857  0081               	movwf	1
 13913                           
 13914                           ;interrupt_manager.c: 95: eusartRxCount++;
 13915  0858  3001               	movlw	1
 13916  0859  00F0               	movwf	??_INTERRUPT_InterruptManager
 13917  085A  0870               	movf	??_INTERRUPT_InterruptManager,w
 13918  085B  07F9               	addwf	_eusartRxCount,f	;volatile
 13919  085C                     i1l4537:	
 13920                           
 13921                           ;interrupt_manager.c: 97: }
 13922                           ;interrupt_manager.c: 98: eusartRxIdleTime_ms=1;
 13923  085C  3001               	movlw	1
 13924  085D  00F0               	movwf	??_INTERRUPT_InterruptManager
 13925  085E  0870               	movf	??_INTERRUPT_InterruptManager,w
 13926  085F  00FA               	movwf	_eusartRxIdleTime_ms	;volatile
 13927  0860                     i1l4539:	
 13928                           
 13929                           ;interrupt_manager.c: 99: }
 13930                           ;interrupt_manager.c: 101: if( PIR1bits.TXIF == 1)
 13931  0860  0020               	movlb	0	; select bank0
 13932  0861  1A11               	btfsc	17,4	;volatile
 13933                           
 13934                           ;interrupt_manager.c: 102: {
 13935                           ;interrupt_manager.c: 103: PIR1bits.TXIF=0;
 13936  0862  1211               	bcf	17,4	;volatile
 13937                           
 13938                           ;interrupt_manager.c: 104: }
 13939                           ;interrupt_manager.c: 106: if(INTCONbits.PEIE == 1 && PIE3bits.PWM2IE == 1 && PIR3bits.P
      +                          WM2IF == 1){
 13940  0863  1F0B               	btfss	11,6	;volatile
 13941  0864  2878               	goto	i1l4555
 13942  0865  0021               	movlb	1	; select bank1
 13943  0866  1E93               	btfss	19,5	;volatile
 13944  0867  2878               	goto	i1l4555
 13945  0868  0020               	movlb	0	; select bank0
 13946  0869  1E93               	btfss	19,5	;volatile
 13947  086A  2878               	goto	i1l4555
 13948                           
 13949                           ;interrupt_manager.c: 108: PIR3bits.PWM2IF = 0;
 13950  086B  1293               	bcf	19,5	;volatile
 13951                           
 13952                           ;interrupt_manager.c: 109: if(PWM2INTFbits.PRIF){
 13953  086C  003B               	movlb	27	; select bank27
 13954  086D  1C2D               	btfss	45,0	;volatile
 13955  086E  2878               	goto	i1l4555
 13956                           
 13957                           ;interrupt_manager.c: 110: PWM2INTFbits.PRIF=0;
 13958  086F  102D               	bcf	45,0	;volatile
 13959                           
 13960                           ;interrupt_manager.c: 111: PWM2DCH = (uint8_t)(pwm2DutyForVout>>8);
 13961  0870  0021               	movlb	1	; select bank1
 13962  0871  0869               	movf	(_pwm2DutyForVout+1)^(0+128),w
 13963  0872  003B               	movlb	27	; select bank27
 13964  0873  00A4               	movwf	36	;volatile
 13965                           
 13966                           ;interrupt_manager.c: 112: PWM2DCL = (uint8_t)(pwm2DutyForVout & 0xff);
 13967  0874  0021               	movlb	1	; select bank1
 13968  0875  0868               	movf	_pwm2DutyForVout^(0+128),w
 13969  0876  003B               	movlb	27	; select bank27
 13970  0877  00A3               	movwf	35	;volatile
 13971  0878                     i1l4555:	
 13972                           
 13973                           ;interrupt_manager.c: 113: }
 13974                           ;interrupt_manager.c: 114: }
 13975                           ;interrupt_manager.c: 115: if(INTCONbits.PEIE == 1 && PIE3bits.PWM1IE == 1 && PIR3bits.P
      +                          WM1IF == 1){
 13976  0878  1F0B               	btfss	11,6	;volatile
 13977  0879  288D               	goto	i1l314
 13978  087A  0021               	movlb	1	; select bank1
 13979  087B  1E13               	btfss	19,4	;volatile
 13980  087C  288D               	goto	i1l314
 13981  087D  0020               	movlb	0	; select bank0
 13982  087E  1E13               	btfss	19,4	;volatile
 13983  087F  288D               	goto	i1l314
 13984                           
 13985                           ;interrupt_manager.c: 116: PIR3bits.PWM1IF = 0;
 13986  0880  1213               	bcf	19,4	;volatile
 13987                           
 13988                           ;interrupt_manager.c: 117: if(PWM1INTFbits.PRIF){
 13989  0881  003B               	movlb	27	; select bank27
 13990  0882  1C1D               	btfss	29,0	;volatile
 13991  0883  288D               	goto	i1l314
 13992                           
 13993                           ;interrupt_manager.c: 118: PWM1INTFbits.PRIF=0;
 13994  0884  101D               	bcf	29,0	;volatile
 13995                           
 13996                           ;interrupt_manager.c: 119: PWM1DCH = (uint8_t)(pwm1DutyForIdrv>>8);
 13997  0885  0021               	movlb	1	; select bank1
 13998  0886  0867               	movf	(_pwm1DutyForIdrv+1)^(0+128),w
 13999  0887  003B               	movlb	27	; select bank27
 14000  0888  0094               	movwf	20	;volatile
 14001                           
 14002                           ;interrupt_manager.c: 120: PWM1DCL = (uint8_t)(pwm1DutyForIdrv&0xff);
 14003  0889  0021               	movlb	1	; select bank1
 14004  088A  0866               	movf	_pwm1DutyForIdrv^(0+128),w
 14005  088B  003B               	movlb	27	; select bank27
 14006  088C  0093               	movwf	19	;volatile
 14007  088D                     i1l314:	
 14008                           ;interrupt_manager.c: 126: else
 14009                           ;interrupt_manager.c: 127: {
 14010                           
 14011                           ;interrupt_manager.c: 121: }
 14012                           ;interrupt_manager.c: 122: }
 14013                           
 14014  088D  0871               	movf	??_INTERRUPT_InterruptManager+1,w
 14015  088E  0020               	movlb	0	; select bank0
 14016  088F  00FF               	movwf	127
 14017  0890  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 14018  0891  0009               	retfie
 14019  0892                     __end_of_INTERRUPT_InterruptManager:	
 14020  007E                     btemp	set	126	;btemp
 14021  007E                     int$flags	set	126
 14022  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    17
    Data        20
    BSS         198
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     44      65
    BANK1            80      0      74
    BANK2            80      0      60
    BANK3            80      0      60
    BANK4            80     22      22
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           60      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    crc_append@message	PTR unsigned char  size(2) Largest target is 132
		 -> modbusBuf(BANK3[60]), sysData(BIGRAM[132]), 

    crc_verify@message	PTR unsigned char  size(2) Largest target is 132
		 -> modbusBuf(BANK3[60]), sysData(BIGRAM[132]), 

    crc_sum@buf	PTR unsigned char  size(2) Largest target is 132
		 -> modbusBuf(BANK3[60]), sysData(BIGRAM[132]), 

    m_mem_cpy_len@s	PTR unsigned char  size(2) Largest target is 132
		 -> modbusBuf(BANK3[60]), sysData(BIGRAM[132]), eusartRxBuffer(BANK2[60]), 

    m_mem_cpy_len@d	PTR unsigned char  size(2) Largest target is 60
		 -> crc_verify@expected(BANK0[2]), modbusBuf(BANK3[60]), 

    modbus_response_process@rbuf	PTR unsigned char  size(1) Largest target is 60
		 -> modbusBuf(BANK3[60]), 

    modbus_response_process@pmdbs	PTR struct . size(1) Largest target is 60
		 -> modbusBuf(BANK3[60]), 

    modbus_response_command@rbuf	PTR unsigned char  size(1) Largest target is 60
		 -> modbusBuf(BANK3[60]), 

    modbus_response_command@pmdbs	PTR struct . size(1) Largest target is 60
		 -> modbusBuf(BANK3[60]), 

    modbus_response_write_mult_register@rbuf	PTR unsigned char  size(1) Largest target is 60
		 -> modbusBuf(BANK3[60]), 

    modbus_response_write_mult_register@stb	PTR struct . size(1) Largest target is 60
		 -> modbusBuf(BANK3[60]), 

    modbus_response_write_single_register@rbuf	PTR unsigned char  size(1) Largest target is 60
		 -> modbusBuf(BANK3[60]), 

    modbus_response_write_single_register@pmdbs	PTR struct . size(1) Largest target is 60
		 -> modbusBuf(BANK3[60]), 

    getRegisterVal@tempData	PTR unsigned int  size(1) Largest target is 2
		 -> modbus_response_command@tempData(BANK0[2]), 

    modbus_response_illgeal_function@buf	PTR unsigned char  size(1) Largest target is 60
		 -> modbusBuf(BANK3[60]), 

    modbus_response_illgeal_function@pmdbs	PTR struct . size(1) Largest target is 60
		 -> modbusBuf(BANK3[60]), 

    my_flash_system_write@buf	PTR unsigned char  size(2) Largest target is 132
		 -> sysData(BIGRAM[132]), 

    my_flash_system_read@buf	PTR unsigned char  size(2) Largest target is 132
		 -> sysData(BIGRAM[132]), 

    uart_send_len@buf	PTR unsigned char  size(1) Largest target is 60
		 -> modbusBuf(BANK3[60]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_adc_sample
    _sys_data_init->___wmul
    _sys_data_init->_my_flash_system_read
    _pid_pwm2_vout_run->___awdiv
    _pid_pwm2_vout_run->___lwdiv
    _set_vout_pwm2_duty->_get_vout_pwm2_duty
    _pid_pwm1_idrv_run->___aldiv
    _pid_pwm1_idrv_b_b->___aldiv
    _pid_pwm1_idrv_b_b->___lwdiv
    _set_idrv_pwm1_duty->_get_idrv_pwm1_duty
    ___lwdiv->___wmul
    _modbus_response_process->_modbus_response_illgeal_function
    _modbus_response_process->_modbus_response_write_mult_register
    _modbus_response_write_single_register->_uart_send_len
    _modbus_response_write_mult_register->_uart_send_len
    _sys_data_save->_my_flash_system_write
    _my_flash_read_system_erase->_FLASH_EraseBlock
    _modbus_response_illgeal_function->_uart_send_len
    _modbus_response_command->_uart_send_len
    _crc_append->_crc_sum
    _crc_verify->_crc_sum
    _calc_temp_rs->___lmul
    _calc_temp_rc->___lmul
    _calc_rs_lo_avg->___lldiv
    _calc_expect_vout_adc_value->___aldiv
    ___aldiv->___lmul
    _adc_sample->_fvr_set_gain
    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_pid_pwm1_idrv_run
    _pid_pwm2_vout_run->___lwdiv
    _set_vout_pwm2_duty->_get_vout_pwm2_duty
    _pid_pwm1_idrv_run->___aldiv
    _pid_pwm1_idrv_b_b->___aldiv
    _set_idrv_pwm1_duty->_get_idrv_pwm1_duty
    ___lwdiv->___wmul
    _modbus_response_process->_modbus_response_command
    _modbus_response_process->_modbus_response_write_single_register
    _modbus_response_write_single_register->_crc_append
    _modbus_response_write_mult_register->_crc_append
    _sys_data_save->_crc_append
    _modbus_response_illgeal_function->_crc_append
    _modbus_response_command->_crc_append
    _crc_append->_crc_sum
    _crc_verify->_crc_sum
    _calc_temp_rs->___lldiv
    _calc_temp_rc->___lldiv
    _calc_rs_lo_avg->___lldiv
    _calc_expect_vout_adc_value->___aldiv
    ___aldiv->___lmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_calc_expect_vout_adc_value

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   55107
                                             42 BANK0      2     2      0
                  _SYSTEM_Initialize
                         _adc_sample
         _calc_expect_vout_adc_value
                     _calc_rs_lo_avg
                       _calc_temp_rc
                       _calc_temp_rs
                      _m_mem_cpy_len
            _modbus_response_process
                  _pid_pwm1_idrv_b_b
                  _pid_pwm1_idrv_run
                  _pid_pwm2_vout_run
                      _sys_data_init
                      _sys_data_save
                _uart_received_start
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (1) _uart_received_start                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sys_data_init                                       10    10      0    5692
                                             19 BANK0     10    10      0
                             ___wmul
                         _crc_verify
               _my_flash_system_read
                      _sys_data_save
 ---------------------------------------------------------------------------------
 (2) _my_flash_system_read                                11     7      4     386
                                              3 COMMON     4     0      4
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _pid_pwm2_vout_run                                    6     6      0    1552
                                              9 BANK0      6     6      0
                            ___awdiv
                            ___lwdiv
                 _set_vout_pwm2_duty
 ---------------------------------------------------------------------------------
 (2) _set_vout_pwm2_duty                                   4     2      2     275
                                              2 BANK0      4     2      2
                 _get_vout_pwm2_duty
 ---------------------------------------------------------------------------------
 (3) _get_vout_pwm2_duty                                   6     4      2      40
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     428
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _pid_pwm1_idrv_run                                   24    24      0    4442
                                             22 BANK0     20    20      0
                            ___aldiv
                             ___lmul
                 _set_idrv_pwm1_duty
 ---------------------------------------------------------------------------------
 (1) _pid_pwm1_idrv_b_b                                   12    12      0    5534
                                             22 BANK0     12    12      0
                            ___aldiv
                             ___lmul
                            ___lwdiv
                             ___wmul
                 _set_idrv_pwm1_duty
 ---------------------------------------------------------------------------------
 (2) _set_idrv_pwm1_duty                                   4     2      2     506
                                              2 BANK0      4     2      2
                 _get_idrv_pwm1_duty
 ---------------------------------------------------------------------------------
 (3) _get_idrv_pwm1_duty                                   6     4      2      40
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     598
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     546
                                              7 COMMON     1     1      0
                                              2 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _modbus_response_process                              6     4      2   20659
                                             31 BANK0      6     4      2
                         _crc_verify
            _modbus_response_command
   _modbus_response_illgeal_function
_modbus_response_write_mult_register
_modbus_response_write_single_regist
 ---------------------------------------------------------------------------------
 (2) _modbus_response_write_single_register               12    12      0    6111
                                             19 BANK0     12    12      0
                         _crc_append
                      _sys_data_save
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (2) _modbus_response_write_mult_register                  5     5      0    5545
                                              7 COMMON     1     1      0
                                             19 BANK0      4     4      0
                         _crc_append
                      _sys_data_save
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (1) _sys_data_save                                        0     0      0    2778
                         _crc_append
         _my_flash_read_system_erase
              _my_flash_system_write
 ---------------------------------------------------------------------------------
 (2) _my_flash_system_write                               17    13      4     627
                                              3 COMMON     4     0      4
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (2) _my_flash_read_system_erase                           0     0      0     451
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_EraseBlock                                     3     1      2     451
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _modbus_response_illgeal_function                     4     3      1    2652
                                              7 COMMON     1     1      0
                                             19 BANK0      3     2      1
                         _crc_append
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (2) _modbus_response_command                             12    12      0    4228
                                             19 BANK0     12    12      0
                         _crc_append
                     _getRegisterVal
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (1) _uart_send_len                                        4     3      1     560
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _getRegisterVal                                      10     7      3     945
                                              3 COMMON     3     0      3
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _crc_append                                          11     7      4    1700
                                              8 BANK0     11     7      4
                            _crc_sum
 ---------------------------------------------------------------------------------
 (2) _crc_verify                                          10     6      4    1697
                                              8 BANK0     10     6      4
                            _crc_sum
                      _m_mem_cpy_len
 ---------------------------------------------------------------------------------
 (3) _m_mem_cpy_len                                        7     1      6     484
                                              3 COMMON     1     1      0
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (3) _crc_sum                                             12     8      4     679
                                              3 COMMON     4     0      4
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (1) _calc_temp_rs                                        16    12      4    3079
                                             13 BANK0     16    12      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _calc_temp_rc                                        20    16      4    3147
                                             13 BANK0     20    16      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _calc_rs_lo_avg                                       9     7      2    1262
                                              4 COMMON     2     2      0
                                             13 BANK0      7     5      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     857
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _calc_expect_vout_adc_value                          38    36      2    4704
                                             22 BANK0     16    14      2
                                              0 BANK4     22    22      0
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1984
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8    1677
                                              7 COMMON     1     1      0
                                              8 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _adc_sample                                          12    10      2    1105
                                              6 COMMON     2     0      2
                                              0 BANK0     10    10      0
                           _adc_init
                       _fvr_set_gain
 ---------------------------------------------------------------------------------
 (2) _fvr_set_gain                                         3     3      0      69
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     109
                    _ADC1_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           3     3      0      23
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC1_Initialize
     _EUSART_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _WDT_Initialize
   _adc_sample
     _adc_init
     _fvr_set_gain
   _calc_expect_vout_adc_value
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _calc_rs_lo_avg
     ___lldiv
   _calc_temp_rc
     ___lldiv
     ___lmul
   _calc_temp_rs
     ___lldiv
     ___lmul
   _m_mem_cpy_len
   _modbus_response_process
     _crc_verify
       _crc_sum
       _m_mem_cpy_len
     _modbus_response_command
       _crc_append
         _crc_sum
       _getRegisterVal
       _uart_send_len
     _modbus_response_illgeal_function
       _crc_append
         _crc_sum
       _uart_send_len
     _modbus_response_write_mult_register
       _crc_append
         _crc_sum
       _sys_data_save
         _crc_append
           _crc_sum
         _my_flash_read_system_erase
           _FLASH_EraseBlock
         _my_flash_system_write
       _uart_send_len
     _modbus_response_write_single_register
       _crc_append
         _crc_sum
       _sys_data_save
         _crc_append
           _crc_sum
         _my_flash_read_system_erase
           _FLASH_EraseBlock
         _my_flash_system_write
       _uart_send_len
   _pid_pwm1_idrv_b_b
     ___aldiv
       ___lmul (ARG)
     ___lmul
     ___lwdiv
       ___wmul (ARG)
     ___wmul
     _set_idrv_pwm1_duty
       _get_idrv_pwm1_duty
   _pid_pwm1_idrv_run
     ___aldiv
       ___lmul (ARG)
     ___lmul
     _set_idrv_pwm1_duty
       _get_idrv_pwm1_duty
   _pid_pwm2_vout_run
     ___awdiv
     ___lwdiv
       ___wmul (ARG)
     _set_vout_pwm2_duty
       _get_vout_pwm2_duty
   _sys_data_init
     ___wmul
     _crc_verify
       _crc_sum
       _m_mem_cpy_len
     _my_flash_system_read
     _sys_data_save
       _crc_append
         _crc_sum
       _my_flash_read_system_erase
         _FLASH_EraseBlock
       _my_flash_system_write
   _sys_data_save
     _crc_append
       _crc_sum
     _my_flash_read_system_erase
       _FLASH_EraseBlock
     _my_flash_system_write
   _uart_received_start
   _uart_send_len

 _INTERRUPT_InterruptManager (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2C      41       5       81.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4A       7       92.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3C       9       75.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      3C      11       75.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50     16      16      13       27.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     124      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              3C      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           20      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     124      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Tue Nov 27 00:30:59 2018

              __end_of_TMR2_SetInterruptHandler 1976                                               pc 0002  
                  ??_my_flash_read_system_erase 0076                                    ___awdiv@sign 0021  
                        __end_of_FVR_Initialize 1968                             ___wmul@multiplicand 0075  
                                           l501 1AD5                                             l701 0B61  
                                           l622 19E5                                             l640 1E71  
                                           l634 1E56                                             l628 0FEC  
                                           l804 1CD5                                             l653 0FE4  
                                           l750 1318                                             l670 0D72  
                                           l648 11A7                                             l840 1660  
                                           l680 128C                                             l753 1377  
                                           l682 12D2                                             l659 0D9F  
                                           l675 17EF                                             _GIE 005F  
                                           _PR2 001B                                 _pwm1DutyForIdrv 00E6  
                                           _bbu 00BC                                             _err 00A0  
                               _TMR2_Initialize 19BE                                             wreg 0009  
                          ??_get_vout_pwm2_duty 0075                            ??_set_vout_pwm2_duty 0077  
                               ??_uart_send_len 0074                                            S5825 182F  
                                          S5827 1800                                            l1101 1DF2  
                                          l1103 1E10                                            l1125 1A93  
                                 calc_temp_rc@x 0039                                   calc_temp_rc@y 003D  
                                          l1180 103E                                            l4001 1D37  
                                          l4005 1D3F                                            l4051 1BB8  
                                          l4043 1B9A                                            l4045 1BA6  
                                          l5013 1C40                                            l4055 1BC1  
                                          l5015 1C6B                                            l5025 1BFB  
                                          l3425 1AD0                                            l5113 1662  
                                          l5201 1A8C                                            l5107 1632  
                                          l5117 1668                                            l5061 156A  
                                          l5215 1B38                                            l5055 155A  
                                          l5305 1E61                                            l5081 15BE  
                                          l5073 15A0                                            l5315 1E64  
                                          l5219 1B43                                            l5331 1193  
                                          l5317 1E9A                                            l5245 105F  
                                          l5237 104F                                            l5333 119F  
                                          l5173 13D4                                            l5405 0D37  
                                          l5263 10A6                                            l5255 108D  
                                          l5247 106D                                            l5351 0FDC  
                                          l5407 0D41                                            l5273 1D55  
                                          l5185 13D5                                            l5441 17D0  
                                          l5259 1098                                            l5515 0966  
                                          l5507 08F7                                            l5283 1D83  
                                          l5275 1D63                                            l4803 1E37  
                                          l5187 1407                                            l5371 0BA1  
                                          l5363 0B7C                                            l5443 17D8  
                                          l3669 19DE                                            l5533 0A2E  
                                          l5349 0FD0                                            l4805 1E3C  
                                          l4901 1484                                            l5365 0B8A  
                                          l5357 0B7A                                            l5445 17E7  
                                          l5461 129D                                            l5519 0972  
                                          l5287 1D8E                                            l4911 14B8  
                                          l4903 1491                                            l4831 132E  
                                          l5383 0BBE                                            l4921 14E4  
                                          l4913 14C1                                            l4905 149E  
                                          l4841 134A                                            l5369 0B93  
                                          l5473 12E3                                            l5721 0F0D  
                                          l5713 0EE6                                            l5539 0A4F  
                                          l5491 1ED1                                            l5483 1EAD  
                                          l4923 14ED                                            l4915 14CA  
                                          l4907 14A6                                            l4819 1313  
                                          l5379 0BB5                                            l5571 1254  
                                          l5723 0F10                                            l5651 0DC8  
                                          l4917 14D2                                            l4909 14AF  
                                          l3973 1CFD                                            l5565 1203  
                                          l5709 0EDF                                            l5661 0DEC  
                                          l5653 0DCB                                            l4919 14DB  
                                          l4927 14F5                                            l4839 1348  
                                          l5591 1DC6                                            l3991 1D1C  
                                          l4929 1502                                            l4849 135F  
                                          l5593 1DCB                                            l5585 1DB2  
                                          l4939 1526                                            l4859 137F  
                                          l5595 1DD0                                            l3979 1D08  
                                          l4797 1E22                                            l4893 144C  
                                          l5589 1DC1                                            l3997 1D2E  
                                          l3989 1D10                                   calc_temp_rs@x 0035  
                                 calc_temp_rs@y 0039                                            l4959 1AA7  
                                          l4895 1454                                            l5599 1DD7  
                                          l5695 0E97                                            l4897 1464  
                                          l4899 1477                         __end_of_PWM1_Initialize 1A01  
                                          u3005 1D27                                            _LATA 010C  
                                          u3015 1D2F                                            _LATC 010E  
                                          u2400 1CAE                                            u3125 1B9D  
                                          u3145 1BA7                                            u3155 1BB1  
                                          u3165 1BB9                                            u4215 131E  
                                          u5105 0932                                            u4145 1DF8  
                                          u4225 1A5B                                            u4305 1C46  
                                          u5115 0958                                            u4315 1BF7  
                                          u4155 12FD                                            u4235 1A77  
                                          u5035 1285                                            u5045 1296  
                                          u5143 0A20                                            u5055 12CB  
                                          u4185 133C                                            u5065 12DC  
                                          u5163 0A45                                            u4445 15DF  
                                          u4605 1A94                                            u4285 1B22  
                                          u4615 1A99                                            u4295 101F  
                                          u5335 0E26                                            u4705 1062  
                                          u4385 1577                                            u5345 0E3C  
                                          u5355 0E53                                            u4725 106E  
                                          u4645 1B44                                            u4805 1D64  
                                          u4565 13AF                                            u4735 1082  
                                          u4655 1B4B                                            u4815 1D78  
                                          u2975 1D13                                            u4745 108E  
                                          u4825 1D84                                            u2995 1D1D  
                                          u5497 1E51                                            u4785 1D58  
                                          u4875 1E7E                                            u4885 1E87  
                                          u4895 1E6D                                            u4983 0D60  
                                          u4993 0D8D                                   _m_mem_cpy_len 1AA7  
                                          _TMR2 001A                                            _WPUA 020C  
                                          _WPUC 020E                                            _bbt0 00C8  
                                          _bbt1 00C6                                            _bbta 00C0  
                                          _bbku 00B8                                            _bbtu 004C  
                                          _main 0DA0  modbus_response_write_single_register@startAddr 003D  
                                          _pidU 00E2             __size_of_my_flash_read_system_erase 0023  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          _xlen 005A                                            btemp 007E  
                                          start 0892                                 _pwm2DutyForVout 00E8  
                     ??_modbus_response_command 0033                             pid_pwm1_idrv_run@ei 0042  
                           pid_pwm1_idrv_run@ep 003E                         __end_of_PWM2_Initialize 1A1A  
                     ??_modbus_response_process 0041                                 ?_FVR_Initialize 0070  
                __size_of_OSCILLATOR_Initialize 0001                   __end_of_OSCILLATOR_Initialize 1000  
                               __end_of___aldiv 10AF                                           ?_main 0070  
                               __end_of___awdiv 1D44                                 __end_of___lldiv 1D97  
                               ___awdiv@divisor 0073                                           _T2CON 001C  
                               __end_of___lwdiv 1BC6                                           i1l314 088D  
                               ___awdiv@counter 0020                                           _RCREG 0199  
                                         _RCSTA 019D                                           _TRISA 008C  
                                         _TRISC 008E                                           _TXREG 019A  
                                         _TXSTA 019E                modbus_response_command@startAddr 0037  
                           ___lmul@multiplicand 0024                                           _PidKp 0052  
                                         _PidTd 00CC                                           _Event 005C  
                                         _PidTi 00CE                                 __end_of_crc_sum 1E41  
                          pid_pwm1_idrv_b_b@t32 003E                                           _bbmax 00DE  
                                         _bbmin 00DA                                  _WDT_Initialize 1968  
                                         _resRc 005F                                           _resRs 005D  
        modbus_response_write_mult_register@len 0034                                  ?_m_mem_cpy_len 0020  
        modbus_response_write_mult_register@stb 0036                      __end_of_get_idrv_pwm1_duty 1A6D  
                    __end_of_set_idrv_pwm1_duty 1B30                              crc_verify@expected 0030  
                                         status 0003                                           wtemp0 007E  
                               _TMR2_StartTimer 1961                                   fvr_set_gain@g 0075  
   __end_of_modbus_response_write_mult_register 1136    __size_of_modbus_response_write_mult_register 0087  
         ??_modbus_response_write_mult_register 0077            ?_modbus_response_write_mult_register 0070  
           _modbus_response_write_mult_register 10AF              __end_of_calc_expect_vout_adc_value 0B69  
                    _calc_expect_vout_adc_value 08ED                                __end_of_HexTable 182F  
                          pid_pwm1_idrv_run@t32 0046                                 __initialization 0894  
                                  __end_of_main 0F12                           __size_of_calc_temp_rc 00D9  
                         __size_of_calc_temp_rs 0090                         __end_of_TMR2_Initialize 19D1  
                   ?_INTERRUPT_InterruptManager 0070             modbus_response_illgeal_function@buf 0034  
                      _TMR2_SetInterruptHandler 1970                                          ??_main 004A  
                              ??_calc_rs_lo_avg 0074                     modbus_response_process@rbuf 0044  
                 __size_of_my_flash_system_read 003D                     modbus_response_process@rlen 003F  
                   modbus_response_process@resp 0042                 __end_of_modbus_response_command 1444  
                        __end_of_WDT_Initialize 196C                    my_flash_system_write@blocNum 0025  
                                        _ADCON0 009D                                          _ADCON1 009E  
                                        _ADCON2 009F                                          _ADRESH 009C  
                                        _ADRESL 009B                                ___awdiv@dividend 0075  
                                        _ANSELA 018C                                          _ANSELC 018E  
               __end_of_modbus_response_process 1DEB                                __end_of_adc_init 0FFF  
                              ?_PWM1_Initialize 0070                                          _ODCONA 028C  
                                        _ODCONC 028E                                          i1l4503 0821  
                                        i1l4521 0839                                          i1l4531 0847  
                                        i1l4509 0827                                          i1l4519 0834  
                                        i1l4537 085C                                          i1l4555 0878  
                                        i1l4539 0860                                          _FVRCON 0117  
                                        _PMADRH 0192                                          _PMADRL 0191  
                                        _PMDATH 0194                                          _PMDATL 0193  
                                        _PMCON2 0196                       __size_of_FLASH_EraseBlock 001C  
                   __end_of_uart_received_start 199B                                          _SPBRGH 019C  
                                        _SPBRGL 019B                                          _WDTCON 0097  
                                  _calc_temp_rc 0F12                                    _calc_temp_rs 1136  
                               calc_rs_lo_avg@i 0033                                 calc_rs_lo_avg@x 002D  
            __end_of_my_flash_read_system_erase 1B0C                      _my_flash_read_system_erase 1AE9  
    modbus_response_write_single_register@pmdbs 003B                                          ___lmul 1B30  
                                     ??___aldiv 0077                                          ___wmul 1A89  
                                     ??___awdiv 0077                                       ??___lldiv 0073  
                                     ??___lwdiv 0077                                ?_PWM2_Initialize 0070  
                                        _pwm2Ei 00C4                                ___awdiv@quotient 0022  
                      my_flash_system_write@buf 0073                        my_flash_system_write@len 0075  
                      my_flash_system_write@loc 0027                                       ??_crc_sum 0020  
                      __size_of_ADC1_Initialize 0009                                 ?_WDT_Initialize 0070  
                               ??_m_mem_cpy_len 0073                my_flash_system_write@GIEBitValue 0022  
                       __end_of_TMR2_StartTimer 1964        TMR2_SetInterruptHandler@InterruptHandler 0073  
               modbus_response_command@tempData 003D        __end_of_modbus_response_illgeal_function 1CF2  
     __size_of_modbus_response_illgeal_function 0042               ?_modbus_response_illgeal_function 0033  
            ??_modbus_response_illgeal_function 0077                _modbus_response_illgeal_function 1CB0  
                                 ?_fvr_set_gain 0070                                  fvr_set_gain@t8 0074  
                             _SYSTEM_Initialize 1A1A                         __end_of__initialization 08E9  
                        __size_of_sys_data_init 0091                           _my_flash_system_write 12EB  
                            ?_SYSTEM_Initialize 0070                          __size_of_sys_data_save 0037  
                            getRegisterVal@addr 0073                                  __pcstackCOMMON 0070  
                                  __pidataBANK0 196C                                    __pidataBANK1 199B  
                           ??_SYSTEM_Initialize 0075                                      _adc_sample 1E41  
        modbus_response_write_single_register@i 003A                                ?_TMR2_Initialize 0070  
                                _OPTION_REGbits 0095        modbus_response_write_single_register@t16 0038  
                             crc_append@message 0028                          getRegisterVal@tempAddr 0026  
                        my_flash_system_write@i 002B                          my_flash_system_write@j 0023  
                        getRegisterVal@tempData 0075                       __end_of_SYSTEM_Initialize 1A35  
                                ??_fvr_set_gain 0073                                      __pbssBANK0 004C  
                                    __pbssBANK1 00A0                                      __pbssBANK2 0120  
                                    __pbssBANK3 01A0                  modbus_response_command@tmpAddr 0035  
               my_flash_system_read@GIEBitValue 0022                                      adc_init@ch 0074  
                              ??_FVR_Initialize 0073                                      __pmaintext 0DA0  
                    modbus_response_command@len 003B                                         ?___lmul 0020  
                                       ?___wmul 0073                                      __pintentry 0804  
                  ??_calc_expect_vout_adc_value 0038                                         _BAUDCON 019F  
                                ___lmul@product 0073                                      _crc_append 1B60  
                                     ?_adc_init 0070                                    adc_sample@ch 0023  
                                 _sys_data_init 11C6                                   _sys_data_save 1BFD  
                                    _crc_verify 1BC6                                   _eusartRxCount 0079  
                   __size_of_get_vout_pwm2_duty 001C                     __size_of_set_vout_pwm2_duty 0024  
                                       _PWM1DCH 0D94                                         _PWM1DCL 0D93  
                                       _PWM2DCH 0DA4                                         _PWM2DCL 0DA3  
                                       _PWM1CON 0D9B                                         _PWM2CON 0DAB  
                                       _PWM1OFH 0D98                                         _PWM1OFL 0D97  
                                       _PWM2OFH 0DA8                                         _PWM1PHH 0D92  
                                       _PWM2OFL 0DA7                                         _PWM1PHL 0D91  
                                       _PWM2PHH 0DA2                                         _PWM2PHL 0DA1  
                                       _PWM1PRH 0D96                                         _PWM1PRL 0D95  
                                       _PWM2PRH 0DA6                                         _PWM2PRL 0DA5  
         modbus_response_illgeal_function@pmdbs 0035                                         _PPSLOCK 0E0F  
                             ??_ADC1_Initialize 0073                                ?_TMR2_StartTimer 0070  
                        set_idrv_pwm1_duty@duty 0022                           __end_of_uart_send_len 1AE9  
                              _FLASH_EraseBlock 1A35                          ?_my_flash_system_write 0073  
                       __size_of_getRegisterVal 00F9                     ?_calc_expect_vout_adc_value 0036  
   modbus_response_write_single_register@fiSave 0037                      ??_TMR2_SetInterruptHandler 0075  
                                       ___aldiv 102D                                         ___awdiv 1CF2  
                               __size_of___lmul 0030                                         ___lldiv 1D44  
                               __size_of___wmul 001E                              _get_idrv_pwm1_duty 1A51  
                            _set_idrv_pwm1_duty 1B0C                                         ___lwdiv 1B91  
                                   ?_adc_sample 0076                                  adc_sample@gfvr 0076  
                                    _pidTestNum 0058                                  ?_sys_data_init 0070  
                                ?_sys_data_save 0070                                      ??_adc_init 0073  
                                       __ptext1 198E                                         __ptext2 11C6  
                                       __ptext3 1C34                                         __ptext4 1257  
                                       __ptext5 1009                                         __ptext6 1A6D  
                                       __ptext7 1CF2                                         __ptext8 1691  
                                       __ptext9 0B69                                         _crc_sum 1DEB  
                                       _pidBbSm 0059                             ?_get_idrv_pwm1_duty 0073  
                           ?_set_idrv_pwm1_duty 0022                           _OSCILLATOR_Initialize 0FFF  
                                     _T2CONbits 001C                                      _rsLoAvgBuf 00AC  
                                       _rsLoAvg 004E                                ___aldiv@dividend 002C  
                      ??_PIN_MANAGER_Initialize 0073                                         _sysData 235C  
                    __size_of_SYSTEM_Initialize 001B                                         clrloop0 1977  
                          end_of_initialization 08E9                                         init_ram 1982  
                      ?_modbus_response_command 0070                                         initloop 1983  
                  __end_of_my_flash_system_read 1C71                            ??_get_idrv_pwm1_duty 0075  
                           pid_pwm2_vout_run@ei 002B                            ??_set_idrv_pwm1_duty 0077  
                             _EUSART_Initialize 19AB                                 ___lldiv@divisor 0020  
                                    _voExpectMv 00CA                                 ___lldiv@counter 002C  
                            ?_EUSART_Initialize 0070                        ?_modbus_response_process 003F  
                                     _RCSTAbits 019D                     ?_my_flash_read_system_erase 0070  
                              ___aldiv@quotient 0032                                       _PWM1LDCON 0D9F  
                                     _PWM2LDCON 0DAF                                       _PWM1OFCON 0DA0  
                                     _PWM2OFCON 0DB0                            __end_of_fvr_set_gain 19E8  
                                   ?_crc_append 0028                                      _subTickerX 0078  
                           ??_EUSART_Initialize 0073                                ??_WDT_Initialize 0073  
                                   ?_crc_verify 0028                                      crc_sum@crc 0026  
                                    crc_sum@buf 0073                                      crc_sum@len 0075  
                                     _RXPPSbits 0E15                             __size_of_adc_sample 005E  
                     __end_of_EUSART_Initialize 19BE                                    _globalTicker 00D6  
                                     _TXSTAbits 019E                        __size_of_PWM1_Initialize 0019  
                  __size_of_uart_received_start 000D                    _TMR2_DefaultInterruptHandler 0000  
                               ??_sys_data_init 0033                                 ??_sys_data_save 0077  
                                __end_of___lmul 1B60                                  __end_of___wmul 1AA7  
                              _voExpectAdcValue 0050                                  _rtAdcValueRcHi 00D2  
                                _rtAdcValueRcLo 0054                                  _rtAdcValueRsHi 00D4  
                                _rtAdcValueVoFb 00D0                                  _rtAdcValueRsLo 0056  
                        ?_OSCILLATOR_Initialize 0070                               crc_verify@message 0028  
                           start_initialization 0894                        __size_of_PWM2_Initialize 0019  
               __size_of_PIN_MANAGER_Initialize 003F                                   _PWM1LDCONbits 0D9F  
                       my_flash_system_read@buf 0073                         my_flash_system_read@len 0075  
                         __end_of_m_mem_cpy_len 1AC6                                   _PWM2LDCONbits 0DAF  
                                _getRegisterVal 1444                         __size_of_calc_rs_lo_avg 0061  
                           __size_of_crc_append 0031                             __size_of_crc_verify 0037  
     modbus_response_write_single_register@rbuf 003C                                        ??___lmul 0073  
                                      ??___wmul 0077                                     __pdataBANK0 005D  
                                   __pdataBANK1 00DA                     FLASH_EraseBlock@GIEBitValue 0075  
                               _ADC1_Initialize 1000                        __end_of_FLASH_EraseBlock 1A51  
                          _my_flash_system_read 1C34                                     __pbssBIGRAM 235C  
                             __size_of_adc_init 0014                                     __pbssCOMMON 0078  
                                     ___latbits 0002                               getRegisterVal@t16 0024  
                                 __pcstackBANK0 0020                                   __pcstackBANK4 0220  
                      __size_of_TMR2_Initialize 0013                         ??_my_flash_system_write 0020  
                        __end_of_getRegisterVal 153D                           my_flash_system_read@i 0025  
                    __size_of_EUSART_Initialize 0013         modbus_response_illgeal_function@errcode 0033  
                         __size_of_fvr_set_gain 0017                                ___lwdiv@dividend 0024  
                        _PIN_MANAGER_Initialize 1C71                     modbus_response_command@rbuf 003C  
                                      ?___aldiv 0028                           get_idrv_pwm1_duty@t16 0020  
                                      ?___awdiv 0073                                        ?___lldiv 0020  
                                  ??_adc_sample 0020                                     adc_sample@i 0024  
                                      ?___lwdiv 0022                               ??_PWM1_Initialize 0073  
                  ??_INTERRUPT_InterruptManager 0070                           set_idrv_pwm1_duty@t16 0024  
                                     __pswtext1 182F                                       __pswtext2 1800  
                                      ?_crc_sum 0073                   my_flash_system_read@flashAddr 0023  
                    __end_of_get_vout_pwm2_duty 1A89                           ?_my_flash_system_read 0073  
                    __end_of_set_vout_pwm2_duty 102D                                uart_send_len@buf 0076  
                              uart_send_len@len 0073                                   adc_sample@t16 0028  
                              ___lwdiv@quotient 0026                                   adc_sample@ret 0026  
                                 adc_sample@num 0077                                 ?_getRegisterVal 0073  
                                  _fvr_set_gain 19D1                                  _eusartRxBuffer 0120  
                                     _modbusBuf 01A0                                 ___aldiv@divisor 0028  
                             ??_PWM2_Initialize 0073                              __end_of_adc_sample 1E9F  
                               ___aldiv@counter 0030                                  ___wmul@product 0020  
                                     _pidpwm2_U 00E4                               _pid_pwm1_idrv_b_b 0B69  
                             _pid_pwm1_idrv_run 1691                                       clear_ram0 1976  
                                m_mem_cpy_len@d 0020                                  m_mem_cpy_len@s 0022  
                                 ?_calc_temp_rc 002D                                   ?_calc_temp_rs 002D  
                                      _PIE1bits 0091                                        _PIE3bits 0093  
                      __size_of_TMR2_StartTimer 0003                          set_vout_pwm2_duty@duty 0022  
                            ?_pid_pwm1_idrv_b_b 0070             __size_of_INTERRUPT_InterruptManager 008E  
                            ?_pid_pwm1_idrv_run 0070                         __end_of_ADC1_Initialize 1009  
                                      _PIR1bits 0011                                        _PIR3bits 0013  
                     FLASH_EraseBlock@startAddr 0073                                        _PWM1INTE 0D9C  
                                      _PWM1INTF 0D9D                                        _PWM2INTE 0DAC  
                                      _PWM2INTF 0DAD                                        _PWM1TMRH 0D9A  
                                      _PWM1TMRL 0D99                                        _PWM2TMRH 0DAA  
                                      _PWM2TMRL 0DA9                             ??_pid_pwm1_idrv_b_b 0036  
                                  ??_crc_append 002C                __size_of_modbus_response_command 00BF  
                           ??_pid_pwm1_idrv_run 0036                          __size_of_uart_send_len 0023  
                                    _ADCON0bits 009D                               ___wmul@multiplier 0073  
                                  ??_crc_verify 002C                         __size_of_FVR_Initialize 0004  
              __size_of_modbus_response_process 0054               __size_of_TMR2_SetInterruptHandler 0006  
                     ?_TMR2_SetInterruptHandler 0073                                     _isRunInBoot 0FFF  
                           _uart_received_start 198E                               _pid_pwm2_vout_run 1257  
                                      _HexTable 181E                               ___lmul@multiplier 0020  
                              crc_verify@crccal 002E                       __end_of_pid_pwm1_idrv_b_b 0DA0  
                                _calc_rs_lo_avg 1E9F                              ?_pid_pwm2_vout_run 0070  
                     __end_of_pid_pwm1_idrv_run 1800                               ??_TMR2_Initialize 0075  
                                ??_calc_temp_rc 0031                                  ??_calc_temp_rs 0031  
                            __end_of_crc_append 1B91                               calc_rs_lo_avg@t32 002F  
                   __size_of_get_idrv_pwm1_duty 001C                     __size_of_set_idrv_pwm1_duty 0024  
                           ??_pid_pwm2_vout_run 0029                              __end_of_crc_verify 1BFD  
                                  _PWM1INTFbits 0D9D                            ?_uart_received_start 0070  
                                  _PWM2INTFbits 0DAD                         ??_OSCILLATOR_Initialize 0073  
       modbus_response_write_mult_register@rbuf 0035                                __size_of___aldiv 0082  
                              __size_of___awdiv 0052                                __size_of___lldiv 0053  
                              __size_of___lwdiv 0035                          ??_my_flash_system_read 0020  
                                      _adc_init 0FEB                                __size_of_crc_sum 0056  
                           _eusartRxIdleTime_ms 007A                       __end_of_pid_pwm2_vout_run 12EB  
                                 crc_append@crc 0031                                sys_data_init@ret 0039  
                               ___lwdiv@divisor 0022                                 ___lwdiv@counter 0028  
                                      __ptext10 1B0C                                        __ptext11 1A51  
                                      __ptext20 1A35                                        __ptext12 1A89  
                                      __ptext21 1CB0                                        __ptext13 1B91  
                                      __ptext30 0F12                                        __ptext22 1385  
                                      __ptext14 1D97                                        __ptext31 1E9F  
                                      __ptext23 1AC6                                        __ptext15 153D  
                                      __ptext40 1968                                        __ptext32 1D44  
                                      __ptext24 1444                                        __ptext16 10AF  
                                      __ptext41 19BE                                        __ptext33 08ED  
                                      __ptext25 1B60                                        __ptext17 1BFD  
                                      __ptext50 1000                                        __ptext42 1961  
                                      __ptext34 1B30                                        __ptext26 1BC6  
                                      __ptext18 12EB                                        __ptext43 1970  
                                      __ptext35 102D                                        __ptext27 1AA7  
                                      __ptext19 1AE9                                        __ptext44 1A01  
                                      __ptext36 1E41                                        __ptext28 1DEB  
                                      __ptext45 19E8                                        __ptext37 19D1  
                                      __ptext29 1136                                        __ptext46 1C71  
                                      __ptext38 0FEB                                        __ptext47 0FFF  
                                      __ptext39 1A1A                                        __ptext48 1964  
                                      __ptext49 19AB                          __end_of_calc_rs_lo_avg 1F00  
                                 _uart_send_len 1AC6                           get_vout_pwm2_duty@t16 0020  
                                 __size_of_main 0172                                   _subTickerX_1s 005B  
                         set_vout_pwm2_duty@t16 0024                                      _RA4PPSbits 0E94  
                         ??_uart_received_start 0073                                      _RA5PPSbits 0E95  
                              ?_ADC1_Initialize 0070                  my_flash_system_write@flashAddr 0029  
                                      int$flags 007E                                        crc_sum@i 0024  
                                      crc_sum@j 0022                                      _RC5PPSbits 0EA5  
 __end_of_modbus_response_write_single_register 1691  __size_of_modbus_response_write_single_register 0154  
       ??_modbus_response_write_single_register 0033          ?_modbus_response_write_single_register 0070  
         _modbus_response_write_single_register 153D                               ??_TMR2_StartTimer 0073  
            __end_of_INTERRUPT_InterruptManager 0892                      _INTERRUPT_InterruptManager 0804  
                         __end_of_sys_data_init 1257                           __end_of_sys_data_save 1C34  
                             ?_FLASH_EraseBlock 0073                   calc_expect_vout_adc_value@t32 0230  
                   PIN_MANAGER_Initialize@state 0073                        modbus_response_command@i 0039  
                            ??_FLASH_EraseBlock 0075                                      _INTCONbits 000B  
                                   _PWM1CONbits 0D9B                                m_mem_cpy_len@len 0024  
                                    _FVRCONbits 0117                                     _PWM2CONbits 0DAB  
                  INTERRUPT_InterruptManager@t8 0072                                 ?_calc_rs_lo_avg 002D  
                  modbus_response_process@pmdbs 0043                         __size_of_WDT_Initialize 0004  
                                ?_uart_send_len 0073                                        intlevel1 0000  
                __size_of_my_flash_system_write 009A                            pid_pwm2_vout_run@t16 002D  
                    __size_of_pid_pwm1_idrv_b_b 0237                   __end_of_my_flash_system_write 1385  
                    __size_of_pid_pwm1_idrv_run 016F                                      _PMCON1bits 0195  
                              ___lldiv@dividend 0024                         ?_PIN_MANAGER_Initialize 0070  
  modbus_response_write_mult_register@startAddr 0033                                  uart_send_len@i 0075  
                                   _PPSLOCKbits 0E0F                                 _PWM1_Initialize 19E8  
                  modbus_response_command@pmdbs 003A                         _modbus_response_command 1385  
                  calc_expect_vout_adc_value@x0 022C                    calc_expect_vout_adc_value@x1 0224  
                  calc_expect_vout_adc_value@y0 0228                    calc_expect_vout_adc_value@y1 0220  
                                    _PWM1CLKCON 0D9E                                      _PWM2CLKCON 0DAE  
                        __size_of_m_mem_cpy_len 001F                                   __pstringtext1 181E  
                                _FVR_Initialize 1964                         _modbus_response_process 1D97  
                                sys_data_init@i 003B                                     crc_append@n 002A  
                          __end_of_calc_temp_rc 0FEB                            __end_of_calc_temp_rs 11C6  
                              ___lldiv@quotient 0028                                ??_getRegisterVal 0020  
                               _PWM2_Initialize 1A01                      __size_of_pid_pwm2_vout_run 0094  
                                  ___aldiv@sign 0031                     calc_expect_vout_adc_value@i 0234  
                   calc_expect_vout_adc_value@x 0036             __size_of_calc_expect_vout_adc_value 027C  
                __end_of_PIN_MANAGER_Initialize 1CB0                              _get_vout_pwm2_duty 1A6D  
                            _set_vout_pwm2_duty 1009                           _TMR2_InterruptHandler 00D8  
                                   crc_verify@n 002A                             ?_get_vout_pwm2_duty 0073  
                           ?_set_vout_pwm2_duty 0022  
