

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Wed Nov 28 21:29:31 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1575
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	swtext1,local,class=CONST,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,delta=2
    67                           	psect	text48,local,class=CODE,merge=1,delta=2
    68                           	psect	text49,local,class=CODE,merge=1,delta=2
    69                           	psect	intentry,global,class=CODE,delta=2
    70                           	dabs	1,0x620,32
    71                           	dabs	1,0x5A0,80
    72                           	dabs	1,0x55C,20
    73                           	dabs	1,0xFFF,1,_isRunInBoot
    74                           	dabs	1,0x235C,0,_sysData
    75                           	dabs	1,0x7E,2
    76  0000                     
    77                           ; Version 1.42
    78                           ; Generated 13/04/2017 GMT
    79                           ; 
    80                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC16F1575 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000E                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  008C                     	;# 
   138  008E                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0097                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009A                     	;# 
   148  009B                     	;# 
   149  009B                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  010C                     	;# 
   155  010E                     	;# 
   156  0111                     	;# 
   157  0112                     	;# 
   158  0113                     	;# 
   159  0114                     	;# 
   160  0115                     	;# 
   161  0116                     	;# 
   162  0117                     	;# 
   163  0118                     	;# 
   164  0119                     	;# 
   165  018C                     	;# 
   166  018E                     	;# 
   167  0191                     	;# 
   168  0191                     	;# 
   169  0192                     	;# 
   170  0193                     	;# 
   171  0193                     	;# 
   172  0194                     	;# 
   173  0195                     	;# 
   174  0196                     	;# 
   175  0197                     	;# 
   176  0199                     	;# 
   177  019A                     	;# 
   178  019B                     	;# 
   179  019B                     	;# 
   180  019C                     	;# 
   181  019D                     	;# 
   182  019E                     	;# 
   183  019F                     	;# 
   184  020C                     	;# 
   185  020E                     	;# 
   186  028C                     	;# 
   187  028E                     	;# 
   188  030C                     	;# 
   189  030E                     	;# 
   190  038C                     	;# 
   191  038E                     	;# 
   192  0391                     	;# 
   193  0392                     	;# 
   194  0393                     	;# 
   195  0397                     	;# 
   196  0398                     	;# 
   197  0399                     	;# 
   198  0691                     	;# 
   199  0692                     	;# 
   200  0693                     	;# 
   201  0694                     	;# 
   202  0695                     	;# 
   203  0D8E                     	;# 
   204  0D8F                     	;# 
   205  0D90                     	;# 
   206  0D91                     	;# 
   207  0D91                     	;# 
   208  0D92                     	;# 
   209  0D93                     	;# 
   210  0D93                     	;# 
   211  0D94                     	;# 
   212  0D95                     	;# 
   213  0D95                     	;# 
   214  0D96                     	;# 
   215  0D97                     	;# 
   216  0D97                     	;# 
   217  0D98                     	;# 
   218  0D99                     	;# 
   219  0D99                     	;# 
   220  0D9A                     	;# 
   221  0D9B                     	;# 
   222  0D9C                     	;# 
   223  0D9C                     	;# 
   224  0D9D                     	;# 
   225  0D9D                     	;# 
   226  0D9E                     	;# 
   227  0D9F                     	;# 
   228  0DA0                     	;# 
   229  0DA1                     	;# 
   230  0DA1                     	;# 
   231  0DA2                     	;# 
   232  0DA3                     	;# 
   233  0DA3                     	;# 
   234  0DA4                     	;# 
   235  0DA5                     	;# 
   236  0DA5                     	;# 
   237  0DA6                     	;# 
   238  0DA7                     	;# 
   239  0DA7                     	;# 
   240  0DA8                     	;# 
   241  0DA9                     	;# 
   242  0DA9                     	;# 
   243  0DAA                     	;# 
   244  0DAB                     	;# 
   245  0DAC                     	;# 
   246  0DAC                     	;# 
   247  0DAD                     	;# 
   248  0DAD                     	;# 
   249  0DAE                     	;# 
   250  0DAF                     	;# 
   251  0DB0                     	;# 
   252  0DB1                     	;# 
   253  0DB1                     	;# 
   254  0DB2                     	;# 
   255  0DB3                     	;# 
   256  0DB3                     	;# 
   257  0DB4                     	;# 
   258  0DB5                     	;# 
   259  0DB5                     	;# 
   260  0DB6                     	;# 
   261  0DB7                     	;# 
   262  0DB7                     	;# 
   263  0DB8                     	;# 
   264  0DB9                     	;# 
   265  0DB9                     	;# 
   266  0DBA                     	;# 
   267  0DBB                     	;# 
   268  0DBC                     	;# 
   269  0DBC                     	;# 
   270  0DBD                     	;# 
   271  0DBD                     	;# 
   272  0DBE                     	;# 
   273  0DBF                     	;# 
   274  0DC0                     	;# 
   275  0DC1                     	;# 
   276  0DC1                     	;# 
   277  0DC2                     	;# 
   278  0DC3                     	;# 
   279  0DC3                     	;# 
   280  0DC4                     	;# 
   281  0DC5                     	;# 
   282  0DC5                     	;# 
   283  0DC6                     	;# 
   284  0DC7                     	;# 
   285  0DC7                     	;# 
   286  0DC8                     	;# 
   287  0DC9                     	;# 
   288  0DC9                     	;# 
   289  0DCA                     	;# 
   290  0DCB                     	;# 
   291  0DCC                     	;# 
   292  0DCC                     	;# 
   293  0DCD                     	;# 
   294  0DCD                     	;# 
   295  0DCE                     	;# 
   296  0DCF                     	;# 
   297  0DD0                     	;# 
   298  0E0F                     	;# 
   299  0E10                     	;# 
   300  0E11                     	;# 
   301  0E12                     	;# 
   302  0E13                     	;# 
   303  0E14                     	;# 
   304  0E15                     	;# 
   305  0E16                     	;# 
   306  0E17                     	;# 
   307  0E90                     	;# 
   308  0E91                     	;# 
   309  0E92                     	;# 
   310  0E94                     	;# 
   311  0E95                     	;# 
   312  0EA0                     	;# 
   313  0EA1                     	;# 
   314  0EA2                     	;# 
   315  0EA3                     	;# 
   316  0EA4                     	;# 
   317  0EA5                     	;# 
   318  0FE4                     	;# 
   319  0FE5                     	;# 
   320  0FE6                     	;# 
   321  0FE7                     	;# 
   322  0FE8                     	;# 
   323  0FE8                     	;# 
   324  0FE9                     	;# 
   325  0FEA                     	;# 
   326  0FEA                     	;# 
   327  0FEB                     	;# 
   328  0FED                     	;# 
   329  0FEE                     	;# 
   330  0FEE                     	;# 
   331  0FEF                     	;# 
   332  0000                     	;# 
   333  0001                     	;# 
   334  0002                     	;# 
   335  0003                     	;# 
   336  0004                     	;# 
   337  0005                     	;# 
   338  0006                     	;# 
   339  0007                     	;# 
   340  0008                     	;# 
   341  0009                     	;# 
   342  000A                     	;# 
   343  000B                     	;# 
   344  000C                     	;# 
   345  000E                     	;# 
   346  0011                     	;# 
   347  0012                     	;# 
   348  0013                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0016                     	;# 
   352  0017                     	;# 
   353  0018                     	;# 
   354  0019                     	;# 
   355  001A                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  008C                     	;# 
   359  008E                     	;# 
   360  0091                     	;# 
   361  0092                     	;# 
   362  0093                     	;# 
   363  0095                     	;# 
   364  0096                     	;# 
   365  0097                     	;# 
   366  0098                     	;# 
   367  0099                     	;# 
   368  009A                     	;# 
   369  009B                     	;# 
   370  009B                     	;# 
   371  009C                     	;# 
   372  009D                     	;# 
   373  009E                     	;# 
   374  009F                     	;# 
   375  010C                     	;# 
   376  010E                     	;# 
   377  0111                     	;# 
   378  0112                     	;# 
   379  0113                     	;# 
   380  0114                     	;# 
   381  0115                     	;# 
   382  0116                     	;# 
   383  0117                     	;# 
   384  0118                     	;# 
   385  0119                     	;# 
   386  018C                     	;# 
   387  018E                     	;# 
   388  0191                     	;# 
   389  0191                     	;# 
   390  0192                     	;# 
   391  0193                     	;# 
   392  0193                     	;# 
   393  0194                     	;# 
   394  0195                     	;# 
   395  0196                     	;# 
   396  0197                     	;# 
   397  0199                     	;# 
   398  019A                     	;# 
   399  019B                     	;# 
   400  019B                     	;# 
   401  019C                     	;# 
   402  019D                     	;# 
   403  019E                     	;# 
   404  019F                     	;# 
   405  020C                     	;# 
   406  020E                     	;# 
   407  028C                     	;# 
   408  028E                     	;# 
   409  030C                     	;# 
   410  030E                     	;# 
   411  038C                     	;# 
   412  038E                     	;# 
   413  0391                     	;# 
   414  0392                     	;# 
   415  0393                     	;# 
   416  0397                     	;# 
   417  0398                     	;# 
   418  0399                     	;# 
   419  0691                     	;# 
   420  0692                     	;# 
   421  0693                     	;# 
   422  0694                     	;# 
   423  0695                     	;# 
   424  0D8E                     	;# 
   425  0D8F                     	;# 
   426  0D90                     	;# 
   427  0D91                     	;# 
   428  0D91                     	;# 
   429  0D92                     	;# 
   430  0D93                     	;# 
   431  0D93                     	;# 
   432  0D94                     	;# 
   433  0D95                     	;# 
   434  0D95                     	;# 
   435  0D96                     	;# 
   436  0D97                     	;# 
   437  0D97                     	;# 
   438  0D98                     	;# 
   439  0D99                     	;# 
   440  0D99                     	;# 
   441  0D9A                     	;# 
   442  0D9B                     	;# 
   443  0D9C                     	;# 
   444  0D9C                     	;# 
   445  0D9D                     	;# 
   446  0D9D                     	;# 
   447  0D9E                     	;# 
   448  0D9F                     	;# 
   449  0DA0                     	;# 
   450  0DA1                     	;# 
   451  0DA1                     	;# 
   452  0DA2                     	;# 
   453  0DA3                     	;# 
   454  0DA3                     	;# 
   455  0DA4                     	;# 
   456  0DA5                     	;# 
   457  0DA5                     	;# 
   458  0DA6                     	;# 
   459  0DA7                     	;# 
   460  0DA7                     	;# 
   461  0DA8                     	;# 
   462  0DA9                     	;# 
   463  0DA9                     	;# 
   464  0DAA                     	;# 
   465  0DAB                     	;# 
   466  0DAC                     	;# 
   467  0DAC                     	;# 
   468  0DAD                     	;# 
   469  0DAD                     	;# 
   470  0DAE                     	;# 
   471  0DAF                     	;# 
   472  0DB0                     	;# 
   473  0DB1                     	;# 
   474  0DB1                     	;# 
   475  0DB2                     	;# 
   476  0DB3                     	;# 
   477  0DB3                     	;# 
   478  0DB4                     	;# 
   479  0DB5                     	;# 
   480  0DB5                     	;# 
   481  0DB6                     	;# 
   482  0DB7                     	;# 
   483  0DB7                     	;# 
   484  0DB8                     	;# 
   485  0DB9                     	;# 
   486  0DB9                     	;# 
   487  0DBA                     	;# 
   488  0DBB                     	;# 
   489  0DBC                     	;# 
   490  0DBC                     	;# 
   491  0DBD                     	;# 
   492  0DBD                     	;# 
   493  0DBE                     	;# 
   494  0DBF                     	;# 
   495  0DC0                     	;# 
   496  0DC1                     	;# 
   497  0DC1                     	;# 
   498  0DC2                     	;# 
   499  0DC3                     	;# 
   500  0DC3                     	;# 
   501  0DC4                     	;# 
   502  0DC5                     	;# 
   503  0DC5                     	;# 
   504  0DC6                     	;# 
   505  0DC7                     	;# 
   506  0DC7                     	;# 
   507  0DC8                     	;# 
   508  0DC9                     	;# 
   509  0DC9                     	;# 
   510  0DCA                     	;# 
   511  0DCB                     	;# 
   512  0DCC                     	;# 
   513  0DCC                     	;# 
   514  0DCD                     	;# 
   515  0DCD                     	;# 
   516  0DCE                     	;# 
   517  0DCF                     	;# 
   518  0DD0                     	;# 
   519  0E0F                     	;# 
   520  0E10                     	;# 
   521  0E11                     	;# 
   522  0E12                     	;# 
   523  0E13                     	;# 
   524  0E14                     	;# 
   525  0E15                     	;# 
   526  0E16                     	;# 
   527  0E17                     	;# 
   528  0E90                     	;# 
   529  0E91                     	;# 
   530  0E92                     	;# 
   531  0E94                     	;# 
   532  0E95                     	;# 
   533  0EA0                     	;# 
   534  0EA1                     	;# 
   535  0EA2                     	;# 
   536  0EA3                     	;# 
   537  0EA4                     	;# 
   538  0EA5                     	;# 
   539  0FE4                     	;# 
   540  0FE5                     	;# 
   541  0FE6                     	;# 
   542  0FE7                     	;# 
   543  0FE8                     	;# 
   544  0FE8                     	;# 
   545  0FE9                     	;# 
   546  0FEA                     	;# 
   547  0FEA                     	;# 
   548  0FEB                     	;# 
   549  0FED                     	;# 
   550  0FEE                     	;# 
   551  0FEE                     	;# 
   552  0FEF                     	;# 
   553  0000                     	;# 
   554  0001                     	;# 
   555  0002                     	;# 
   556  0003                     	;# 
   557  0004                     	;# 
   558  0005                     	;# 
   559  0006                     	;# 
   560  0007                     	;# 
   561  0008                     	;# 
   562  0009                     	;# 
   563  000A                     	;# 
   564  000B                     	;# 
   565  000C                     	;# 
   566  000E                     	;# 
   567  0011                     	;# 
   568  0012                     	;# 
   569  0013                     	;# 
   570  0015                     	;# 
   571  0016                     	;# 
   572  0016                     	;# 
   573  0017                     	;# 
   574  0018                     	;# 
   575  0019                     	;# 
   576  001A                     	;# 
   577  001B                     	;# 
   578  001C                     	;# 
   579  008C                     	;# 
   580  008E                     	;# 
   581  0091                     	;# 
   582  0092                     	;# 
   583  0093                     	;# 
   584  0095                     	;# 
   585  0096                     	;# 
   586  0097                     	;# 
   587  0098                     	;# 
   588  0099                     	;# 
   589  009A                     	;# 
   590  009B                     	;# 
   591  009B                     	;# 
   592  009C                     	;# 
   593  009D                     	;# 
   594  009E                     	;# 
   595  009F                     	;# 
   596  010C                     	;# 
   597  010E                     	;# 
   598  0111                     	;# 
   599  0112                     	;# 
   600  0113                     	;# 
   601  0114                     	;# 
   602  0115                     	;# 
   603  0116                     	;# 
   604  0117                     	;# 
   605  0118                     	;# 
   606  0119                     	;# 
   607  018C                     	;# 
   608  018E                     	;# 
   609  0191                     	;# 
   610  0191                     	;# 
   611  0192                     	;# 
   612  0193                     	;# 
   613  0193                     	;# 
   614  0194                     	;# 
   615  0195                     	;# 
   616  0196                     	;# 
   617  0197                     	;# 
   618  0199                     	;# 
   619  019A                     	;# 
   620  019B                     	;# 
   621  019B                     	;# 
   622  019C                     	;# 
   623  019D                     	;# 
   624  019E                     	;# 
   625  019F                     	;# 
   626  020C                     	;# 
   627  020E                     	;# 
   628  028C                     	;# 
   629  028E                     	;# 
   630  030C                     	;# 
   631  030E                     	;# 
   632  038C                     	;# 
   633  038E                     	;# 
   634  0391                     	;# 
   635  0392                     	;# 
   636  0393                     	;# 
   637  0397                     	;# 
   638  0398                     	;# 
   639  0399                     	;# 
   640  0691                     	;# 
   641  0692                     	;# 
   642  0693                     	;# 
   643  0694                     	;# 
   644  0695                     	;# 
   645  0D8E                     	;# 
   646  0D8F                     	;# 
   647  0D90                     	;# 
   648  0D91                     	;# 
   649  0D91                     	;# 
   650  0D92                     	;# 
   651  0D93                     	;# 
   652  0D93                     	;# 
   653  0D94                     	;# 
   654  0D95                     	;# 
   655  0D95                     	;# 
   656  0D96                     	;# 
   657  0D97                     	;# 
   658  0D97                     	;# 
   659  0D98                     	;# 
   660  0D99                     	;# 
   661  0D99                     	;# 
   662  0D9A                     	;# 
   663  0D9B                     	;# 
   664  0D9C                     	;# 
   665  0D9C                     	;# 
   666  0D9D                     	;# 
   667  0D9D                     	;# 
   668  0D9E                     	;# 
   669  0D9F                     	;# 
   670  0DA0                     	;# 
   671  0DA1                     	;# 
   672  0DA1                     	;# 
   673  0DA2                     	;# 
   674  0DA3                     	;# 
   675  0DA3                     	;# 
   676  0DA4                     	;# 
   677  0DA5                     	;# 
   678  0DA5                     	;# 
   679  0DA6                     	;# 
   680  0DA7                     	;# 
   681  0DA7                     	;# 
   682  0DA8                     	;# 
   683  0DA9                     	;# 
   684  0DA9                     	;# 
   685  0DAA                     	;# 
   686  0DAB                     	;# 
   687  0DAC                     	;# 
   688  0DAC                     	;# 
   689  0DAD                     	;# 
   690  0DAD                     	;# 
   691  0DAE                     	;# 
   692  0DAF                     	;# 
   693  0DB0                     	;# 
   694  0DB1                     	;# 
   695  0DB1                     	;# 
   696  0DB2                     	;# 
   697  0DB3                     	;# 
   698  0DB3                     	;# 
   699  0DB4                     	;# 
   700  0DB5                     	;# 
   701  0DB5                     	;# 
   702  0DB6                     	;# 
   703  0DB7                     	;# 
   704  0DB7                     	;# 
   705  0DB8                     	;# 
   706  0DB9                     	;# 
   707  0DB9                     	;# 
   708  0DBA                     	;# 
   709  0DBB                     	;# 
   710  0DBC                     	;# 
   711  0DBC                     	;# 
   712  0DBD                     	;# 
   713  0DBD                     	;# 
   714  0DBE                     	;# 
   715  0DBF                     	;# 
   716  0DC0                     	;# 
   717  0DC1                     	;# 
   718  0DC1                     	;# 
   719  0DC2                     	;# 
   720  0DC3                     	;# 
   721  0DC3                     	;# 
   722  0DC4                     	;# 
   723  0DC5                     	;# 
   724  0DC5                     	;# 
   725  0DC6                     	;# 
   726  0DC7                     	;# 
   727  0DC7                     	;# 
   728  0DC8                     	;# 
   729  0DC9                     	;# 
   730  0DC9                     	;# 
   731  0DCA                     	;# 
   732  0DCB                     	;# 
   733  0DCC                     	;# 
   734  0DCC                     	;# 
   735  0DCD                     	;# 
   736  0DCD                     	;# 
   737  0DCE                     	;# 
   738  0DCF                     	;# 
   739  0DD0                     	;# 
   740  0E0F                     	;# 
   741  0E10                     	;# 
   742  0E11                     	;# 
   743  0E12                     	;# 
   744  0E13                     	;# 
   745  0E14                     	;# 
   746  0E15                     	;# 
   747  0E16                     	;# 
   748  0E17                     	;# 
   749  0E90                     	;# 
   750  0E91                     	;# 
   751  0E92                     	;# 
   752  0E94                     	;# 
   753  0E95                     	;# 
   754  0EA0                     	;# 
   755  0EA1                     	;# 
   756  0EA2                     	;# 
   757  0EA3                     	;# 
   758  0EA4                     	;# 
   759  0EA5                     	;# 
   760  0FE4                     	;# 
   761  0FE5                     	;# 
   762  0FE6                     	;# 
   763  0FE7                     	;# 
   764  0FE8                     	;# 
   765  0FE8                     	;# 
   766  0FE9                     	;# 
   767  0FEA                     	;# 
   768  0FEA                     	;# 
   769  0FEB                     	;# 
   770  0FED                     	;# 
   771  0FEE                     	;# 
   772  0FEE                     	;# 
   773  0FEF                     	;# 
   774  0000                     	;# 
   775  0001                     	;# 
   776  0002                     	;# 
   777  0003                     	;# 
   778  0004                     	;# 
   779  0005                     	;# 
   780  0006                     	;# 
   781  0007                     	;# 
   782  0008                     	;# 
   783  0009                     	;# 
   784  000A                     	;# 
   785  000B                     	;# 
   786  000C                     	;# 
   787  000E                     	;# 
   788  0011                     	;# 
   789  0012                     	;# 
   790  0013                     	;# 
   791  0015                     	;# 
   792  0016                     	;# 
   793  0016                     	;# 
   794  0017                     	;# 
   795  0018                     	;# 
   796  0019                     	;# 
   797  001A                     	;# 
   798  001B                     	;# 
   799  001C                     	;# 
   800  008C                     	;# 
   801  008E                     	;# 
   802  0091                     	;# 
   803  0092                     	;# 
   804  0093                     	;# 
   805  0095                     	;# 
   806  0096                     	;# 
   807  0097                     	;# 
   808  0098                     	;# 
   809  0099                     	;# 
   810  009A                     	;# 
   811  009B                     	;# 
   812  009B                     	;# 
   813  009C                     	;# 
   814  009D                     	;# 
   815  009E                     	;# 
   816  009F                     	;# 
   817  010C                     	;# 
   818  010E                     	;# 
   819  0111                     	;# 
   820  0112                     	;# 
   821  0113                     	;# 
   822  0114                     	;# 
   823  0115                     	;# 
   824  0116                     	;# 
   825  0117                     	;# 
   826  0118                     	;# 
   827  0119                     	;# 
   828  018C                     	;# 
   829  018E                     	;# 
   830  0191                     	;# 
   831  0191                     	;# 
   832  0192                     	;# 
   833  0193                     	;# 
   834  0193                     	;# 
   835  0194                     	;# 
   836  0195                     	;# 
   837  0196                     	;# 
   838  0197                     	;# 
   839  0199                     	;# 
   840  019A                     	;# 
   841  019B                     	;# 
   842  019B                     	;# 
   843  019C                     	;# 
   844  019D                     	;# 
   845  019E                     	;# 
   846  019F                     	;# 
   847  020C                     	;# 
   848  020E                     	;# 
   849  028C                     	;# 
   850  028E                     	;# 
   851  030C                     	;# 
   852  030E                     	;# 
   853  038C                     	;# 
   854  038E                     	;# 
   855  0391                     	;# 
   856  0392                     	;# 
   857  0393                     	;# 
   858  0397                     	;# 
   859  0398                     	;# 
   860  0399                     	;# 
   861  0691                     	;# 
   862  0692                     	;# 
   863  0693                     	;# 
   864  0694                     	;# 
   865  0695                     	;# 
   866  0D8E                     	;# 
   867  0D8F                     	;# 
   868  0D90                     	;# 
   869  0D91                     	;# 
   870  0D91                     	;# 
   871  0D92                     	;# 
   872  0D93                     	;# 
   873  0D93                     	;# 
   874  0D94                     	;# 
   875  0D95                     	;# 
   876  0D95                     	;# 
   877  0D96                     	;# 
   878  0D97                     	;# 
   879  0D97                     	;# 
   880  0D98                     	;# 
   881  0D99                     	;# 
   882  0D99                     	;# 
   883  0D9A                     	;# 
   884  0D9B                     	;# 
   885  0D9C                     	;# 
   886  0D9C                     	;# 
   887  0D9D                     	;# 
   888  0D9D                     	;# 
   889  0D9E                     	;# 
   890  0D9F                     	;# 
   891  0DA0                     	;# 
   892  0DA1                     	;# 
   893  0DA1                     	;# 
   894  0DA2                     	;# 
   895  0DA3                     	;# 
   896  0DA3                     	;# 
   897  0DA4                     	;# 
   898  0DA5                     	;# 
   899  0DA5                     	;# 
   900  0DA6                     	;# 
   901  0DA7                     	;# 
   902  0DA7                     	;# 
   903  0DA8                     	;# 
   904  0DA9                     	;# 
   905  0DA9                     	;# 
   906  0DAA                     	;# 
   907  0DAB                     	;# 
   908  0DAC                     	;# 
   909  0DAC                     	;# 
   910  0DAD                     	;# 
   911  0DAD                     	;# 
   912  0DAE                     	;# 
   913  0DAF                     	;# 
   914  0DB0                     	;# 
   915  0DB1                     	;# 
   916  0DB1                     	;# 
   917  0DB2                     	;# 
   918  0DB3                     	;# 
   919  0DB3                     	;# 
   920  0DB4                     	;# 
   921  0DB5                     	;# 
   922  0DB5                     	;# 
   923  0DB6                     	;# 
   924  0DB7                     	;# 
   925  0DB7                     	;# 
   926  0DB8                     	;# 
   927  0DB9                     	;# 
   928  0DB9                     	;# 
   929  0DBA                     	;# 
   930  0DBB                     	;# 
   931  0DBC                     	;# 
   932  0DBC                     	;# 
   933  0DBD                     	;# 
   934  0DBD                     	;# 
   935  0DBE                     	;# 
   936  0DBF                     	;# 
   937  0DC0                     	;# 
   938  0DC1                     	;# 
   939  0DC1                     	;# 
   940  0DC2                     	;# 
   941  0DC3                     	;# 
   942  0DC3                     	;# 
   943  0DC4                     	;# 
   944  0DC5                     	;# 
   945  0DC5                     	;# 
   946  0DC6                     	;# 
   947  0DC7                     	;# 
   948  0DC7                     	;# 
   949  0DC8                     	;# 
   950  0DC9                     	;# 
   951  0DC9                     	;# 
   952  0DCA                     	;# 
   953  0DCB                     	;# 
   954  0DCC                     	;# 
   955  0DCC                     	;# 
   956  0DCD                     	;# 
   957  0DCD                     	;# 
   958  0DCE                     	;# 
   959  0DCF                     	;# 
   960  0DD0                     	;# 
   961  0E0F                     	;# 
   962  0E10                     	;# 
   963  0E11                     	;# 
   964  0E12                     	;# 
   965  0E13                     	;# 
   966  0E14                     	;# 
   967  0E15                     	;# 
   968  0E16                     	;# 
   969  0E17                     	;# 
   970  0E90                     	;# 
   971  0E91                     	;# 
   972  0E92                     	;# 
   973  0E94                     	;# 
   974  0E95                     	;# 
   975  0EA0                     	;# 
   976  0EA1                     	;# 
   977  0EA2                     	;# 
   978  0EA3                     	;# 
   979  0EA4                     	;# 
   980  0EA5                     	;# 
   981  0FE4                     	;# 
   982  0FE5                     	;# 
   983  0FE6                     	;# 
   984  0FE7                     	;# 
   985  0FE8                     	;# 
   986  0FE8                     	;# 
   987  0FE9                     	;# 
   988  0FEA                     	;# 
   989  0FEA                     	;# 
   990  0FEB                     	;# 
   991  0FED                     	;# 
   992  0FEE                     	;# 
   993  0FEE                     	;# 
   994  0FEF                     	;# 
   995  0000                     	;# 
   996  0001                     	;# 
   997  0002                     	;# 
   998  0003                     	;# 
   999  0004                     	;# 
  1000  0005                     	;# 
  1001  0006                     	;# 
  1002  0007                     	;# 
  1003  0008                     	;# 
  1004  0009                     	;# 
  1005  000A                     	;# 
  1006  000B                     	;# 
  1007  000C                     	;# 
  1008  000E                     	;# 
  1009  0011                     	;# 
  1010  0012                     	;# 
  1011  0013                     	;# 
  1012  0015                     	;# 
  1013  0016                     	;# 
  1014  0016                     	;# 
  1015  0017                     	;# 
  1016  0018                     	;# 
  1017  0019                     	;# 
  1018  001A                     	;# 
  1019  001B                     	;# 
  1020  001C                     	;# 
  1021  008C                     	;# 
  1022  008E                     	;# 
  1023  0091                     	;# 
  1024  0092                     	;# 
  1025  0093                     	;# 
  1026  0095                     	;# 
  1027  0096                     	;# 
  1028  0097                     	;# 
  1029  0098                     	;# 
  1030  0099                     	;# 
  1031  009A                     	;# 
  1032  009B                     	;# 
  1033  009B                     	;# 
  1034  009C                     	;# 
  1035  009D                     	;# 
  1036  009E                     	;# 
  1037  009F                     	;# 
  1038  010C                     	;# 
  1039  010E                     	;# 
  1040  0111                     	;# 
  1041  0112                     	;# 
  1042  0113                     	;# 
  1043  0114                     	;# 
  1044  0115                     	;# 
  1045  0116                     	;# 
  1046  0117                     	;# 
  1047  0118                     	;# 
  1048  0119                     	;# 
  1049  018C                     	;# 
  1050  018E                     	;# 
  1051  0191                     	;# 
  1052  0191                     	;# 
  1053  0192                     	;# 
  1054  0193                     	;# 
  1055  0193                     	;# 
  1056  0194                     	;# 
  1057  0195                     	;# 
  1058  0196                     	;# 
  1059  0197                     	;# 
  1060  0199                     	;# 
  1061  019A                     	;# 
  1062  019B                     	;# 
  1063  019B                     	;# 
  1064  019C                     	;# 
  1065  019D                     	;# 
  1066  019E                     	;# 
  1067  019F                     	;# 
  1068  020C                     	;# 
  1069  020E                     	;# 
  1070  028C                     	;# 
  1071  028E                     	;# 
  1072  030C                     	;# 
  1073  030E                     	;# 
  1074  038C                     	;# 
  1075  038E                     	;# 
  1076  0391                     	;# 
  1077  0392                     	;# 
  1078  0393                     	;# 
  1079  0397                     	;# 
  1080  0398                     	;# 
  1081  0399                     	;# 
  1082  0691                     	;# 
  1083  0692                     	;# 
  1084  0693                     	;# 
  1085  0694                     	;# 
  1086  0695                     	;# 
  1087  0D8E                     	;# 
  1088  0D8F                     	;# 
  1089  0D90                     	;# 
  1090  0D91                     	;# 
  1091  0D91                     	;# 
  1092  0D92                     	;# 
  1093  0D93                     	;# 
  1094  0D93                     	;# 
  1095  0D94                     	;# 
  1096  0D95                     	;# 
  1097  0D95                     	;# 
  1098  0D96                     	;# 
  1099  0D97                     	;# 
  1100  0D97                     	;# 
  1101  0D98                     	;# 
  1102  0D99                     	;# 
  1103  0D99                     	;# 
  1104  0D9A                     	;# 
  1105  0D9B                     	;# 
  1106  0D9C                     	;# 
  1107  0D9C                     	;# 
  1108  0D9D                     	;# 
  1109  0D9D                     	;# 
  1110  0D9E                     	;# 
  1111  0D9F                     	;# 
  1112  0DA0                     	;# 
  1113  0DA1                     	;# 
  1114  0DA1                     	;# 
  1115  0DA2                     	;# 
  1116  0DA3                     	;# 
  1117  0DA3                     	;# 
  1118  0DA4                     	;# 
  1119  0DA5                     	;# 
  1120  0DA5                     	;# 
  1121  0DA6                     	;# 
  1122  0DA7                     	;# 
  1123  0DA7                     	;# 
  1124  0DA8                     	;# 
  1125  0DA9                     	;# 
  1126  0DA9                     	;# 
  1127  0DAA                     	;# 
  1128  0DAB                     	;# 
  1129  0DAC                     	;# 
  1130  0DAC                     	;# 
  1131  0DAD                     	;# 
  1132  0DAD                     	;# 
  1133  0DAE                     	;# 
  1134  0DAF                     	;# 
  1135  0DB0                     	;# 
  1136  0DB1                     	;# 
  1137  0DB1                     	;# 
  1138  0DB2                     	;# 
  1139  0DB3                     	;# 
  1140  0DB3                     	;# 
  1141  0DB4                     	;# 
  1142  0DB5                     	;# 
  1143  0DB5                     	;# 
  1144  0DB6                     	;# 
  1145  0DB7                     	;# 
  1146  0DB7                     	;# 
  1147  0DB8                     	;# 
  1148  0DB9                     	;# 
  1149  0DB9                     	;# 
  1150  0DBA                     	;# 
  1151  0DBB                     	;# 
  1152  0DBC                     	;# 
  1153  0DBC                     	;# 
  1154  0DBD                     	;# 
  1155  0DBD                     	;# 
  1156  0DBE                     	;# 
  1157  0DBF                     	;# 
  1158  0DC0                     	;# 
  1159  0DC1                     	;# 
  1160  0DC1                     	;# 
  1161  0DC2                     	;# 
  1162  0DC3                     	;# 
  1163  0DC3                     	;# 
  1164  0DC4                     	;# 
  1165  0DC5                     	;# 
  1166  0DC5                     	;# 
  1167  0DC6                     	;# 
  1168  0DC7                     	;# 
  1169  0DC7                     	;# 
  1170  0DC8                     	;# 
  1171  0DC9                     	;# 
  1172  0DC9                     	;# 
  1173  0DCA                     	;# 
  1174  0DCB                     	;# 
  1175  0DCC                     	;# 
  1176  0DCC                     	;# 
  1177  0DCD                     	;# 
  1178  0DCD                     	;# 
  1179  0DCE                     	;# 
  1180  0DCF                     	;# 
  1181  0DD0                     	;# 
  1182  0E0F                     	;# 
  1183  0E10                     	;# 
  1184  0E11                     	;# 
  1185  0E12                     	;# 
  1186  0E13                     	;# 
  1187  0E14                     	;# 
  1188  0E15                     	;# 
  1189  0E16                     	;# 
  1190  0E17                     	;# 
  1191  0E90                     	;# 
  1192  0E91                     	;# 
  1193  0E92                     	;# 
  1194  0E94                     	;# 
  1195  0E95                     	;# 
  1196  0EA0                     	;# 
  1197  0EA1                     	;# 
  1198  0EA2                     	;# 
  1199  0EA3                     	;# 
  1200  0EA4                     	;# 
  1201  0EA5                     	;# 
  1202  0FE4                     	;# 
  1203  0FE5                     	;# 
  1204  0FE6                     	;# 
  1205  0FE7                     	;# 
  1206  0FE8                     	;# 
  1207  0FE8                     	;# 
  1208  0FE9                     	;# 
  1209  0FEA                     	;# 
  1210  0FEA                     	;# 
  1211  0FEB                     	;# 
  1212  0FED                     	;# 
  1213  0FEE                     	;# 
  1214  0FEE                     	;# 
  1215  0FEF                     	;# 
  1216  0FFF                     	;# 
  1217  0000                     	;# 
  1218  0001                     	;# 
  1219  0002                     	;# 
  1220  0003                     	;# 
  1221  0004                     	;# 
  1222  0005                     	;# 
  1223  0006                     	;# 
  1224  0007                     	;# 
  1225  0008                     	;# 
  1226  0009                     	;# 
  1227  000A                     	;# 
  1228  000B                     	;# 
  1229  000C                     	;# 
  1230  000E                     	;# 
  1231  0011                     	;# 
  1232  0012                     	;# 
  1233  0013                     	;# 
  1234  0015                     	;# 
  1235  0016                     	;# 
  1236  0016                     	;# 
  1237  0017                     	;# 
  1238  0018                     	;# 
  1239  0019                     	;# 
  1240  001A                     	;# 
  1241  001B                     	;# 
  1242  001C                     	;# 
  1243  008C                     	;# 
  1244  008E                     	;# 
  1245  0091                     	;# 
  1246  0092                     	;# 
  1247  0093                     	;# 
  1248  0095                     	;# 
  1249  0096                     	;# 
  1250  0097                     	;# 
  1251  0098                     	;# 
  1252  0099                     	;# 
  1253  009A                     	;# 
  1254  009B                     	;# 
  1255  009B                     	;# 
  1256  009C                     	;# 
  1257  009D                     	;# 
  1258  009E                     	;# 
  1259  009F                     	;# 
  1260  010C                     	;# 
  1261  010E                     	;# 
  1262  0111                     	;# 
  1263  0112                     	;# 
  1264  0113                     	;# 
  1265  0114                     	;# 
  1266  0115                     	;# 
  1267  0116                     	;# 
  1268  0117                     	;# 
  1269  0118                     	;# 
  1270  0119                     	;# 
  1271  018C                     	;# 
  1272  018E                     	;# 
  1273  0191                     	;# 
  1274  0191                     	;# 
  1275  0192                     	;# 
  1276  0193                     	;# 
  1277  0193                     	;# 
  1278  0194                     	;# 
  1279  0195                     	;# 
  1280  0196                     	;# 
  1281  0197                     	;# 
  1282  0199                     	;# 
  1283  019A                     	;# 
  1284  019B                     	;# 
  1285  019B                     	;# 
  1286  019C                     	;# 
  1287  019D                     	;# 
  1288  019E                     	;# 
  1289  019F                     	;# 
  1290  020C                     	;# 
  1291  020E                     	;# 
  1292  028C                     	;# 
  1293  028E                     	;# 
  1294  030C                     	;# 
  1295  030E                     	;# 
  1296  038C                     	;# 
  1297  038E                     	;# 
  1298  0391                     	;# 
  1299  0392                     	;# 
  1300  0393                     	;# 
  1301  0397                     	;# 
  1302  0398                     	;# 
  1303  0399                     	;# 
  1304  0691                     	;# 
  1305  0692                     	;# 
  1306  0693                     	;# 
  1307  0694                     	;# 
  1308  0695                     	;# 
  1309  0D8E                     	;# 
  1310  0D8F                     	;# 
  1311  0D90                     	;# 
  1312  0D91                     	;# 
  1313  0D91                     	;# 
  1314  0D92                     	;# 
  1315  0D93                     	;# 
  1316  0D93                     	;# 
  1317  0D94                     	;# 
  1318  0D95                     	;# 
  1319  0D95                     	;# 
  1320  0D96                     	;# 
  1321  0D97                     	;# 
  1322  0D97                     	;# 
  1323  0D98                     	;# 
  1324  0D99                     	;# 
  1325  0D99                     	;# 
  1326  0D9A                     	;# 
  1327  0D9B                     	;# 
  1328  0D9C                     	;# 
  1329  0D9C                     	;# 
  1330  0D9D                     	;# 
  1331  0D9D                     	;# 
  1332  0D9E                     	;# 
  1333  0D9F                     	;# 
  1334  0DA0                     	;# 
  1335  0DA1                     	;# 
  1336  0DA1                     	;# 
  1337  0DA2                     	;# 
  1338  0DA3                     	;# 
  1339  0DA3                     	;# 
  1340  0DA4                     	;# 
  1341  0DA5                     	;# 
  1342  0DA5                     	;# 
  1343  0DA6                     	;# 
  1344  0DA7                     	;# 
  1345  0DA7                     	;# 
  1346  0DA8                     	;# 
  1347  0DA9                     	;# 
  1348  0DA9                     	;# 
  1349  0DAA                     	;# 
  1350  0DAB                     	;# 
  1351  0DAC                     	;# 
  1352  0DAC                     	;# 
  1353  0DAD                     	;# 
  1354  0DAD                     	;# 
  1355  0DAE                     	;# 
  1356  0DAF                     	;# 
  1357  0DB0                     	;# 
  1358  0DB1                     	;# 
  1359  0DB1                     	;# 
  1360  0DB2                     	;# 
  1361  0DB3                     	;# 
  1362  0DB3                     	;# 
  1363  0DB4                     	;# 
  1364  0DB5                     	;# 
  1365  0DB5                     	;# 
  1366  0DB6                     	;# 
  1367  0DB7                     	;# 
  1368  0DB7                     	;# 
  1369  0DB8                     	;# 
  1370  0DB9                     	;# 
  1371  0DB9                     	;# 
  1372  0DBA                     	;# 
  1373  0DBB                     	;# 
  1374  0DBC                     	;# 
  1375  0DBC                     	;# 
  1376  0DBD                     	;# 
  1377  0DBD                     	;# 
  1378  0DBE                     	;# 
  1379  0DBF                     	;# 
  1380  0DC0                     	;# 
  1381  0DC1                     	;# 
  1382  0DC1                     	;# 
  1383  0DC2                     	;# 
  1384  0DC3                     	;# 
  1385  0DC3                     	;# 
  1386  0DC4                     	;# 
  1387  0DC5                     	;# 
  1388  0DC5                     	;# 
  1389  0DC6                     	;# 
  1390  0DC7                     	;# 
  1391  0DC7                     	;# 
  1392  0DC8                     	;# 
  1393  0DC9                     	;# 
  1394  0DC9                     	;# 
  1395  0DCA                     	;# 
  1396  0DCB                     	;# 
  1397  0DCC                     	;# 
  1398  0DCC                     	;# 
  1399  0DCD                     	;# 
  1400  0DCD                     	;# 
  1401  0DCE                     	;# 
  1402  0DCF                     	;# 
  1403  0DD0                     	;# 
  1404  0E0F                     	;# 
  1405  0E10                     	;# 
  1406  0E11                     	;# 
  1407  0E12                     	;# 
  1408  0E13                     	;# 
  1409  0E14                     	;# 
  1410  0E15                     	;# 
  1411  0E16                     	;# 
  1412  0E17                     	;# 
  1413  0E90                     	;# 
  1414  0E91                     	;# 
  1415  0E92                     	;# 
  1416  0E94                     	;# 
  1417  0E95                     	;# 
  1418  0EA0                     	;# 
  1419  0EA1                     	;# 
  1420  0EA2                     	;# 
  1421  0EA3                     	;# 
  1422  0EA4                     	;# 
  1423  0EA5                     	;# 
  1424  0FE4                     	;# 
  1425  0FE5                     	;# 
  1426  0FE6                     	;# 
  1427  0FE7                     	;# 
  1428  0FE8                     	;# 
  1429  0FE8                     	;# 
  1430  0FE9                     	;# 
  1431  0FEA                     	;# 
  1432  0FEA                     	;# 
  1433  0FEB                     	;# 
  1434  0FED                     	;# 
  1435  0FEE                     	;# 
  1436  0FEE                     	;# 
  1437  0FEF                     	;# 
  1438  0000                     	;# 
  1439  0001                     	;# 
  1440  0002                     	;# 
  1441  0003                     	;# 
  1442  0004                     	;# 
  1443  0005                     	;# 
  1444  0006                     	;# 
  1445  0007                     	;# 
  1446  0008                     	;# 
  1447  0009                     	;# 
  1448  000A                     	;# 
  1449  000B                     	;# 
  1450  000C                     	;# 
  1451  000E                     	;# 
  1452  0011                     	;# 
  1453  0012                     	;# 
  1454  0013                     	;# 
  1455  0015                     	;# 
  1456  0016                     	;# 
  1457  0016                     	;# 
  1458  0017                     	;# 
  1459  0018                     	;# 
  1460  0019                     	;# 
  1461  001A                     	;# 
  1462  001B                     	;# 
  1463  001C                     	;# 
  1464  008C                     	;# 
  1465  008E                     	;# 
  1466  0091                     	;# 
  1467  0092                     	;# 
  1468  0093                     	;# 
  1469  0095                     	;# 
  1470  0096                     	;# 
  1471  0097                     	;# 
  1472  0098                     	;# 
  1473  0099                     	;# 
  1474  009A                     	;# 
  1475  009B                     	;# 
  1476  009B                     	;# 
  1477  009C                     	;# 
  1478  009D                     	;# 
  1479  009E                     	;# 
  1480  009F                     	;# 
  1481  010C                     	;# 
  1482  010E                     	;# 
  1483  0111                     	;# 
  1484  0112                     	;# 
  1485  0113                     	;# 
  1486  0114                     	;# 
  1487  0115                     	;# 
  1488  0116                     	;# 
  1489  0117                     	;# 
  1490  0118                     	;# 
  1491  0119                     	;# 
  1492  018C                     	;# 
  1493  018E                     	;# 
  1494  0191                     	;# 
  1495  0191                     	;# 
  1496  0192                     	;# 
  1497  0193                     	;# 
  1498  0193                     	;# 
  1499  0194                     	;# 
  1500  0195                     	;# 
  1501  0196                     	;# 
  1502  0197                     	;# 
  1503  0199                     	;# 
  1504  019A                     	;# 
  1505  019B                     	;# 
  1506  019B                     	;# 
  1507  019C                     	;# 
  1508  019D                     	;# 
  1509  019E                     	;# 
  1510  019F                     	;# 
  1511  020C                     	;# 
  1512  020E                     	;# 
  1513  028C                     	;# 
  1514  028E                     	;# 
  1515  030C                     	;# 
  1516  030E                     	;# 
  1517  038C                     	;# 
  1518  038E                     	;# 
  1519  0391                     	;# 
  1520  0392                     	;# 
  1521  0393                     	;# 
  1522  0397                     	;# 
  1523  0398                     	;# 
  1524  0399                     	;# 
  1525  0691                     	;# 
  1526  0692                     	;# 
  1527  0693                     	;# 
  1528  0694                     	;# 
  1529  0695                     	;# 
  1530  0D8E                     	;# 
  1531  0D8F                     	;# 
  1532  0D90                     	;# 
  1533  0D91                     	;# 
  1534  0D91                     	;# 
  1535  0D92                     	;# 
  1536  0D93                     	;# 
  1537  0D93                     	;# 
  1538  0D94                     	;# 
  1539  0D95                     	;# 
  1540  0D95                     	;# 
  1541  0D96                     	;# 
  1542  0D97                     	;# 
  1543  0D97                     	;# 
  1544  0D98                     	;# 
  1545  0D99                     	;# 
  1546  0D99                     	;# 
  1547  0D9A                     	;# 
  1548  0D9B                     	;# 
  1549  0D9C                     	;# 
  1550  0D9C                     	;# 
  1551  0D9D                     	;# 
  1552  0D9D                     	;# 
  1553  0D9E                     	;# 
  1554  0D9F                     	;# 
  1555  0DA0                     	;# 
  1556  0DA1                     	;# 
  1557  0DA1                     	;# 
  1558  0DA2                     	;# 
  1559  0DA3                     	;# 
  1560  0DA3                     	;# 
  1561  0DA4                     	;# 
  1562  0DA5                     	;# 
  1563  0DA5                     	;# 
  1564  0DA6                     	;# 
  1565  0DA7                     	;# 
  1566  0DA7                     	;# 
  1567  0DA8                     	;# 
  1568  0DA9                     	;# 
  1569  0DA9                     	;# 
  1570  0DAA                     	;# 
  1571  0DAB                     	;# 
  1572  0DAC                     	;# 
  1573  0DAC                     	;# 
  1574  0DAD                     	;# 
  1575  0DAD                     	;# 
  1576  0DAE                     	;# 
  1577  0DAF                     	;# 
  1578  0DB0                     	;# 
  1579  0DB1                     	;# 
  1580  0DB1                     	;# 
  1581  0DB2                     	;# 
  1582  0DB3                     	;# 
  1583  0DB3                     	;# 
  1584  0DB4                     	;# 
  1585  0DB5                     	;# 
  1586  0DB5                     	;# 
  1587  0DB6                     	;# 
  1588  0DB7                     	;# 
  1589  0DB7                     	;# 
  1590  0DB8                     	;# 
  1591  0DB9                     	;# 
  1592  0DB9                     	;# 
  1593  0DBA                     	;# 
  1594  0DBB                     	;# 
  1595  0DBC                     	;# 
  1596  0DBC                     	;# 
  1597  0DBD                     	;# 
  1598  0DBD                     	;# 
  1599  0DBE                     	;# 
  1600  0DBF                     	;# 
  1601  0DC0                     	;# 
  1602  0DC1                     	;# 
  1603  0DC1                     	;# 
  1604  0DC2                     	;# 
  1605  0DC3                     	;# 
  1606  0DC3                     	;# 
  1607  0DC4                     	;# 
  1608  0DC5                     	;# 
  1609  0DC5                     	;# 
  1610  0DC6                     	;# 
  1611  0DC7                     	;# 
  1612  0DC7                     	;# 
  1613  0DC8                     	;# 
  1614  0DC9                     	;# 
  1615  0DC9                     	;# 
  1616  0DCA                     	;# 
  1617  0DCB                     	;# 
  1618  0DCC                     	;# 
  1619  0DCC                     	;# 
  1620  0DCD                     	;# 
  1621  0DCD                     	;# 
  1622  0DCE                     	;# 
  1623  0DCF                     	;# 
  1624  0DD0                     	;# 
  1625  0E0F                     	;# 
  1626  0E10                     	;# 
  1627  0E11                     	;# 
  1628  0E12                     	;# 
  1629  0E13                     	;# 
  1630  0E14                     	;# 
  1631  0E15                     	;# 
  1632  0E16                     	;# 
  1633  0E17                     	;# 
  1634  0E90                     	;# 
  1635  0E91                     	;# 
  1636  0E92                     	;# 
  1637  0E94                     	;# 
  1638  0E95                     	;# 
  1639  0EA0                     	;# 
  1640  0EA1                     	;# 
  1641  0EA2                     	;# 
  1642  0EA3                     	;# 
  1643  0EA4                     	;# 
  1644  0EA5                     	;# 
  1645  0FE4                     	;# 
  1646  0FE5                     	;# 
  1647  0FE6                     	;# 
  1648  0FE7                     	;# 
  1649  0FE8                     	;# 
  1650  0FE8                     	;# 
  1651  0FE9                     	;# 
  1652  0FEA                     	;# 
  1653  0FEA                     	;# 
  1654  0FEB                     	;# 
  1655  0FED                     	;# 
  1656  0FEE                     	;# 
  1657  0FEE                     	;# 
  1658  0FEF                     	;# 
  1659  0000                     	;# 
  1660  0001                     	;# 
  1661  0002                     	;# 
  1662  0003                     	;# 
  1663  0004                     	;# 
  1664  0005                     	;# 
  1665  0006                     	;# 
  1666  0007                     	;# 
  1667  0008                     	;# 
  1668  0009                     	;# 
  1669  000A                     	;# 
  1670  000B                     	;# 
  1671  000C                     	;# 
  1672  000E                     	;# 
  1673  0011                     	;# 
  1674  0012                     	;# 
  1675  0013                     	;# 
  1676  0015                     	;# 
  1677  0016                     	;# 
  1678  0016                     	;# 
  1679  0017                     	;# 
  1680  0018                     	;# 
  1681  0019                     	;# 
  1682  001A                     	;# 
  1683  001B                     	;# 
  1684  001C                     	;# 
  1685  008C                     	;# 
  1686  008E                     	;# 
  1687  0091                     	;# 
  1688  0092                     	;# 
  1689  0093                     	;# 
  1690  0095                     	;# 
  1691  0096                     	;# 
  1692  0097                     	;# 
  1693  0098                     	;# 
  1694  0099                     	;# 
  1695  009A                     	;# 
  1696  009B                     	;# 
  1697  009B                     	;# 
  1698  009C                     	;# 
  1699  009D                     	;# 
  1700  009E                     	;# 
  1701  009F                     	;# 
  1702  010C                     	;# 
  1703  010E                     	;# 
  1704  0111                     	;# 
  1705  0112                     	;# 
  1706  0113                     	;# 
  1707  0114                     	;# 
  1708  0115                     	;# 
  1709  0116                     	;# 
  1710  0117                     	;# 
  1711  0118                     	;# 
  1712  0119                     	;# 
  1713  018C                     	;# 
  1714  018E                     	;# 
  1715  0191                     	;# 
  1716  0191                     	;# 
  1717  0192                     	;# 
  1718  0193                     	;# 
  1719  0193                     	;# 
  1720  0194                     	;# 
  1721  0195                     	;# 
  1722  0196                     	;# 
  1723  0197                     	;# 
  1724  0199                     	;# 
  1725  019A                     	;# 
  1726  019B                     	;# 
  1727  019B                     	;# 
  1728  019C                     	;# 
  1729  019D                     	;# 
  1730  019E                     	;# 
  1731  019F                     	;# 
  1732  020C                     	;# 
  1733  020E                     	;# 
  1734  028C                     	;# 
  1735  028E                     	;# 
  1736  030C                     	;# 
  1737  030E                     	;# 
  1738  038C                     	;# 
  1739  038E                     	;# 
  1740  0391                     	;# 
  1741  0392                     	;# 
  1742  0393                     	;# 
  1743  0397                     	;# 
  1744  0398                     	;# 
  1745  0399                     	;# 
  1746  0691                     	;# 
  1747  0692                     	;# 
  1748  0693                     	;# 
  1749  0694                     	;# 
  1750  0695                     	;# 
  1751  0D8E                     	;# 
  1752  0D8F                     	;# 
  1753  0D90                     	;# 
  1754  0D91                     	;# 
  1755  0D91                     	;# 
  1756  0D92                     	;# 
  1757  0D93                     	;# 
  1758  0D93                     	;# 
  1759  0D94                     	;# 
  1760  0D95                     	;# 
  1761  0D95                     	;# 
  1762  0D96                     	;# 
  1763  0D97                     	;# 
  1764  0D97                     	;# 
  1765  0D98                     	;# 
  1766  0D99                     	;# 
  1767  0D99                     	;# 
  1768  0D9A                     	;# 
  1769  0D9B                     	;# 
  1770  0D9C                     	;# 
  1771  0D9C                     	;# 
  1772  0D9D                     	;# 
  1773  0D9D                     	;# 
  1774  0D9E                     	;# 
  1775  0D9F                     	;# 
  1776  0DA0                     	;# 
  1777  0DA1                     	;# 
  1778  0DA1                     	;# 
  1779  0DA2                     	;# 
  1780  0DA3                     	;# 
  1781  0DA3                     	;# 
  1782  0DA4                     	;# 
  1783  0DA5                     	;# 
  1784  0DA5                     	;# 
  1785  0DA6                     	;# 
  1786  0DA7                     	;# 
  1787  0DA7                     	;# 
  1788  0DA8                     	;# 
  1789  0DA9                     	;# 
  1790  0DA9                     	;# 
  1791  0DAA                     	;# 
  1792  0DAB                     	;# 
  1793  0DAC                     	;# 
  1794  0DAC                     	;# 
  1795  0DAD                     	;# 
  1796  0DAD                     	;# 
  1797  0DAE                     	;# 
  1798  0DAF                     	;# 
  1799  0DB0                     	;# 
  1800  0DB1                     	;# 
  1801  0DB1                     	;# 
  1802  0DB2                     	;# 
  1803  0DB3                     	;# 
  1804  0DB3                     	;# 
  1805  0DB4                     	;# 
  1806  0DB5                     	;# 
  1807  0DB5                     	;# 
  1808  0DB6                     	;# 
  1809  0DB7                     	;# 
  1810  0DB7                     	;# 
  1811  0DB8                     	;# 
  1812  0DB9                     	;# 
  1813  0DB9                     	;# 
  1814  0DBA                     	;# 
  1815  0DBB                     	;# 
  1816  0DBC                     	;# 
  1817  0DBC                     	;# 
  1818  0DBD                     	;# 
  1819  0DBD                     	;# 
  1820  0DBE                     	;# 
  1821  0DBF                     	;# 
  1822  0DC0                     	;# 
  1823  0DC1                     	;# 
  1824  0DC1                     	;# 
  1825  0DC2                     	;# 
  1826  0DC3                     	;# 
  1827  0DC3                     	;# 
  1828  0DC4                     	;# 
  1829  0DC5                     	;# 
  1830  0DC5                     	;# 
  1831  0DC6                     	;# 
  1832  0DC7                     	;# 
  1833  0DC7                     	;# 
  1834  0DC8                     	;# 
  1835  0DC9                     	;# 
  1836  0DC9                     	;# 
  1837  0DCA                     	;# 
  1838  0DCB                     	;# 
  1839  0DCC                     	;# 
  1840  0DCC                     	;# 
  1841  0DCD                     	;# 
  1842  0DCD                     	;# 
  1843  0DCE                     	;# 
  1844  0DCF                     	;# 
  1845  0DD0                     	;# 
  1846  0E0F                     	;# 
  1847  0E10                     	;# 
  1848  0E11                     	;# 
  1849  0E12                     	;# 
  1850  0E13                     	;# 
  1851  0E14                     	;# 
  1852  0E15                     	;# 
  1853  0E16                     	;# 
  1854  0E17                     	;# 
  1855  0E90                     	;# 
  1856  0E91                     	;# 
  1857  0E92                     	;# 
  1858  0E94                     	;# 
  1859  0E95                     	;# 
  1860  0EA0                     	;# 
  1861  0EA1                     	;# 
  1862  0EA2                     	;# 
  1863  0EA3                     	;# 
  1864  0EA4                     	;# 
  1865  0EA5                     	;# 
  1866  0FE4                     	;# 
  1867  0FE5                     	;# 
  1868  0FE6                     	;# 
  1869  0FE7                     	;# 
  1870  0FE8                     	;# 
  1871  0FE8                     	;# 
  1872  0FE9                     	;# 
  1873  0FEA                     	;# 
  1874  0FEA                     	;# 
  1875  0FEB                     	;# 
  1876  0FED                     	;# 
  1877  0FEE                     	;# 
  1878  0FEE                     	;# 
  1879  0FEF                     	;# 
  1880  0000                     	;# 
  1881  0001                     	;# 
  1882  0002                     	;# 
  1883  0003                     	;# 
  1884  0004                     	;# 
  1885  0005                     	;# 
  1886  0006                     	;# 
  1887  0007                     	;# 
  1888  0008                     	;# 
  1889  0009                     	;# 
  1890  000A                     	;# 
  1891  000B                     	;# 
  1892  000C                     	;# 
  1893  000E                     	;# 
  1894  0011                     	;# 
  1895  0012                     	;# 
  1896  0013                     	;# 
  1897  0015                     	;# 
  1898  0016                     	;# 
  1899  0016                     	;# 
  1900  0017                     	;# 
  1901  0018                     	;# 
  1902  0019                     	;# 
  1903  001A                     	;# 
  1904  001B                     	;# 
  1905  001C                     	;# 
  1906  008C                     	;# 
  1907  008E                     	;# 
  1908  0091                     	;# 
  1909  0092                     	;# 
  1910  0093                     	;# 
  1911  0095                     	;# 
  1912  0096                     	;# 
  1913  0097                     	;# 
  1914  0098                     	;# 
  1915  0099                     	;# 
  1916  009A                     	;# 
  1917  009B                     	;# 
  1918  009B                     	;# 
  1919  009C                     	;# 
  1920  009D                     	;# 
  1921  009E                     	;# 
  1922  009F                     	;# 
  1923  010C                     	;# 
  1924  010E                     	;# 
  1925  0111                     	;# 
  1926  0112                     	;# 
  1927  0113                     	;# 
  1928  0114                     	;# 
  1929  0115                     	;# 
  1930  0116                     	;# 
  1931  0117                     	;# 
  1932  0118                     	;# 
  1933  0119                     	;# 
  1934  018C                     	;# 
  1935  018E                     	;# 
  1936  0191                     	;# 
  1937  0191                     	;# 
  1938  0192                     	;# 
  1939  0193                     	;# 
  1940  0193                     	;# 
  1941  0194                     	;# 
  1942  0195                     	;# 
  1943  0196                     	;# 
  1944  0197                     	;# 
  1945  0199                     	;# 
  1946  019A                     	;# 
  1947  019B                     	;# 
  1948  019B                     	;# 
  1949  019C                     	;# 
  1950  019D                     	;# 
  1951  019E                     	;# 
  1952  019F                     	;# 
  1953  020C                     	;# 
  1954  020E                     	;# 
  1955  028C                     	;# 
  1956  028E                     	;# 
  1957  030C                     	;# 
  1958  030E                     	;# 
  1959  038C                     	;# 
  1960  038E                     	;# 
  1961  0391                     	;# 
  1962  0392                     	;# 
  1963  0393                     	;# 
  1964  0397                     	;# 
  1965  0398                     	;# 
  1966  0399                     	;# 
  1967  0691                     	;# 
  1968  0692                     	;# 
  1969  0693                     	;# 
  1970  0694                     	;# 
  1971  0695                     	;# 
  1972  0D8E                     	;# 
  1973  0D8F                     	;# 
  1974  0D90                     	;# 
  1975  0D91                     	;# 
  1976  0D91                     	;# 
  1977  0D92                     	;# 
  1978  0D93                     	;# 
  1979  0D93                     	;# 
  1980  0D94                     	;# 
  1981  0D95                     	;# 
  1982  0D95                     	;# 
  1983  0D96                     	;# 
  1984  0D97                     	;# 
  1985  0D97                     	;# 
  1986  0D98                     	;# 
  1987  0D99                     	;# 
  1988  0D99                     	;# 
  1989  0D9A                     	;# 
  1990  0D9B                     	;# 
  1991  0D9C                     	;# 
  1992  0D9C                     	;# 
  1993  0D9D                     	;# 
  1994  0D9D                     	;# 
  1995  0D9E                     	;# 
  1996  0D9F                     	;# 
  1997  0DA0                     	;# 
  1998  0DA1                     	;# 
  1999  0DA1                     	;# 
  2000  0DA2                     	;# 
  2001  0DA3                     	;# 
  2002  0DA3                     	;# 
  2003  0DA4                     	;# 
  2004  0DA5                     	;# 
  2005  0DA5                     	;# 
  2006  0DA6                     	;# 
  2007  0DA7                     	;# 
  2008  0DA7                     	;# 
  2009  0DA8                     	;# 
  2010  0DA9                     	;# 
  2011  0DA9                     	;# 
  2012  0DAA                     	;# 
  2013  0DAB                     	;# 
  2014  0DAC                     	;# 
  2015  0DAC                     	;# 
  2016  0DAD                     	;# 
  2017  0DAD                     	;# 
  2018  0DAE                     	;# 
  2019  0DAF                     	;# 
  2020  0DB0                     	;# 
  2021  0DB1                     	;# 
  2022  0DB1                     	;# 
  2023  0DB2                     	;# 
  2024  0DB3                     	;# 
  2025  0DB3                     	;# 
  2026  0DB4                     	;# 
  2027  0DB5                     	;# 
  2028  0DB5                     	;# 
  2029  0DB6                     	;# 
  2030  0DB7                     	;# 
  2031  0DB7                     	;# 
  2032  0DB8                     	;# 
  2033  0DB9                     	;# 
  2034  0DB9                     	;# 
  2035  0DBA                     	;# 
  2036  0DBB                     	;# 
  2037  0DBC                     	;# 
  2038  0DBC                     	;# 
  2039  0DBD                     	;# 
  2040  0DBD                     	;# 
  2041  0DBE                     	;# 
  2042  0DBF                     	;# 
  2043  0DC0                     	;# 
  2044  0DC1                     	;# 
  2045  0DC1                     	;# 
  2046  0DC2                     	;# 
  2047  0DC3                     	;# 
  2048  0DC3                     	;# 
  2049  0DC4                     	;# 
  2050  0DC5                     	;# 
  2051  0DC5                     	;# 
  2052  0DC6                     	;# 
  2053  0DC7                     	;# 
  2054  0DC7                     	;# 
  2055  0DC8                     	;# 
  2056  0DC9                     	;# 
  2057  0DC9                     	;# 
  2058  0DCA                     	;# 
  2059  0DCB                     	;# 
  2060  0DCC                     	;# 
  2061  0DCC                     	;# 
  2062  0DCD                     	;# 
  2063  0DCD                     	;# 
  2064  0DCE                     	;# 
  2065  0DCF                     	;# 
  2066  0DD0                     	;# 
  2067  0E0F                     	;# 
  2068  0E10                     	;# 
  2069  0E11                     	;# 
  2070  0E12                     	;# 
  2071  0E13                     	;# 
  2072  0E14                     	;# 
  2073  0E15                     	;# 
  2074  0E16                     	;# 
  2075  0E17                     	;# 
  2076  0E90                     	;# 
  2077  0E91                     	;# 
  2078  0E92                     	;# 
  2079  0E94                     	;# 
  2080  0E95                     	;# 
  2081  0EA0                     	;# 
  2082  0EA1                     	;# 
  2083  0EA2                     	;# 
  2084  0EA3                     	;# 
  2085  0EA4                     	;# 
  2086  0EA5                     	;# 
  2087  0FE4                     	;# 
  2088  0FE5                     	;# 
  2089  0FE6                     	;# 
  2090  0FE7                     	;# 
  2091  0FE8                     	;# 
  2092  0FE8                     	;# 
  2093  0FE9                     	;# 
  2094  0FEA                     	;# 
  2095  0FEA                     	;# 
  2096  0FEB                     	;# 
  2097  0FED                     	;# 
  2098  0FEE                     	;# 
  2099  0FEE                     	;# 
  2100  0FEF                     	;# 
  2101  0000                     	;# 
  2102  0001                     	;# 
  2103  0002                     	;# 
  2104  0003                     	;# 
  2105  0004                     	;# 
  2106  0005                     	;# 
  2107  0006                     	;# 
  2108  0007                     	;# 
  2109  0008                     	;# 
  2110  0009                     	;# 
  2111  000A                     	;# 
  2112  000B                     	;# 
  2113  000C                     	;# 
  2114  000E                     	;# 
  2115  0011                     	;# 
  2116  0012                     	;# 
  2117  0013                     	;# 
  2118  0015                     	;# 
  2119  0016                     	;# 
  2120  0016                     	;# 
  2121  0017                     	;# 
  2122  0018                     	;# 
  2123  0019                     	;# 
  2124  001A                     	;# 
  2125  001B                     	;# 
  2126  001C                     	;# 
  2127  008C                     	;# 
  2128  008E                     	;# 
  2129  0091                     	;# 
  2130  0092                     	;# 
  2131  0093                     	;# 
  2132  0095                     	;# 
  2133  0096                     	;# 
  2134  0097                     	;# 
  2135  0098                     	;# 
  2136  0099                     	;# 
  2137  009A                     	;# 
  2138  009B                     	;# 
  2139  009B                     	;# 
  2140  009C                     	;# 
  2141  009D                     	;# 
  2142  009E                     	;# 
  2143  009F                     	;# 
  2144  010C                     	;# 
  2145  010E                     	;# 
  2146  0111                     	;# 
  2147  0112                     	;# 
  2148  0113                     	;# 
  2149  0114                     	;# 
  2150  0115                     	;# 
  2151  0116                     	;# 
  2152  0117                     	;# 
  2153  0118                     	;# 
  2154  0119                     	;# 
  2155  018C                     	;# 
  2156  018E                     	;# 
  2157  0191                     	;# 
  2158  0191                     	;# 
  2159  0192                     	;# 
  2160  0193                     	;# 
  2161  0193                     	;# 
  2162  0194                     	;# 
  2163  0195                     	;# 
  2164  0196                     	;# 
  2165  0197                     	;# 
  2166  0199                     	;# 
  2167  019A                     	;# 
  2168  019B                     	;# 
  2169  019B                     	;# 
  2170  019C                     	;# 
  2171  019D                     	;# 
  2172  019E                     	;# 
  2173  019F                     	;# 
  2174  020C                     	;# 
  2175  020E                     	;# 
  2176  028C                     	;# 
  2177  028E                     	;# 
  2178  030C                     	;# 
  2179  030E                     	;# 
  2180  038C                     	;# 
  2181  038E                     	;# 
  2182  0391                     	;# 
  2183  0392                     	;# 
  2184  0393                     	;# 
  2185  0397                     	;# 
  2186  0398                     	;# 
  2187  0399                     	;# 
  2188  0691                     	;# 
  2189  0692                     	;# 
  2190  0693                     	;# 
  2191  0694                     	;# 
  2192  0695                     	;# 
  2193  0D8E                     	;# 
  2194  0D8F                     	;# 
  2195  0D90                     	;# 
  2196  0D91                     	;# 
  2197  0D91                     	;# 
  2198  0D92                     	;# 
  2199  0D93                     	;# 
  2200  0D93                     	;# 
  2201  0D94                     	;# 
  2202  0D95                     	;# 
  2203  0D95                     	;# 
  2204  0D96                     	;# 
  2205  0D97                     	;# 
  2206  0D97                     	;# 
  2207  0D98                     	;# 
  2208  0D99                     	;# 
  2209  0D99                     	;# 
  2210  0D9A                     	;# 
  2211  0D9B                     	;# 
  2212  0D9C                     	;# 
  2213  0D9C                     	;# 
  2214  0D9D                     	;# 
  2215  0D9D                     	;# 
  2216  0D9E                     	;# 
  2217  0D9F                     	;# 
  2218  0DA0                     	;# 
  2219  0DA1                     	;# 
  2220  0DA1                     	;# 
  2221  0DA2                     	;# 
  2222  0DA3                     	;# 
  2223  0DA3                     	;# 
  2224  0DA4                     	;# 
  2225  0DA5                     	;# 
  2226  0DA5                     	;# 
  2227  0DA6                     	;# 
  2228  0DA7                     	;# 
  2229  0DA7                     	;# 
  2230  0DA8                     	;# 
  2231  0DA9                     	;# 
  2232  0DA9                     	;# 
  2233  0DAA                     	;# 
  2234  0DAB                     	;# 
  2235  0DAC                     	;# 
  2236  0DAC                     	;# 
  2237  0DAD                     	;# 
  2238  0DAD                     	;# 
  2239  0DAE                     	;# 
  2240  0DAF                     	;# 
  2241  0DB0                     	;# 
  2242  0DB1                     	;# 
  2243  0DB1                     	;# 
  2244  0DB2                     	;# 
  2245  0DB3                     	;# 
  2246  0DB3                     	;# 
  2247  0DB4                     	;# 
  2248  0DB5                     	;# 
  2249  0DB5                     	;# 
  2250  0DB6                     	;# 
  2251  0DB7                     	;# 
  2252  0DB7                     	;# 
  2253  0DB8                     	;# 
  2254  0DB9                     	;# 
  2255  0DB9                     	;# 
  2256  0DBA                     	;# 
  2257  0DBB                     	;# 
  2258  0DBC                     	;# 
  2259  0DBC                     	;# 
  2260  0DBD                     	;# 
  2261  0DBD                     	;# 
  2262  0DBE                     	;# 
  2263  0DBF                     	;# 
  2264  0DC0                     	;# 
  2265  0DC1                     	;# 
  2266  0DC1                     	;# 
  2267  0DC2                     	;# 
  2268  0DC3                     	;# 
  2269  0DC3                     	;# 
  2270  0DC4                     	;# 
  2271  0DC5                     	;# 
  2272  0DC5                     	;# 
  2273  0DC6                     	;# 
  2274  0DC7                     	;# 
  2275  0DC7                     	;# 
  2276  0DC8                     	;# 
  2277  0DC9                     	;# 
  2278  0DC9                     	;# 
  2279  0DCA                     	;# 
  2280  0DCB                     	;# 
  2281  0DCC                     	;# 
  2282  0DCC                     	;# 
  2283  0DCD                     	;# 
  2284  0DCD                     	;# 
  2285  0DCE                     	;# 
  2286  0DCF                     	;# 
  2287  0DD0                     	;# 
  2288  0E0F                     	;# 
  2289  0E10                     	;# 
  2290  0E11                     	;# 
  2291  0E12                     	;# 
  2292  0E13                     	;# 
  2293  0E14                     	;# 
  2294  0E15                     	;# 
  2295  0E16                     	;# 
  2296  0E17                     	;# 
  2297  0E90                     	;# 
  2298  0E91                     	;# 
  2299  0E92                     	;# 
  2300  0E94                     	;# 
  2301  0E95                     	;# 
  2302  0EA0                     	;# 
  2303  0EA1                     	;# 
  2304  0EA2                     	;# 
  2305  0EA3                     	;# 
  2306  0EA4                     	;# 
  2307  0EA5                     	;# 
  2308  0FE4                     	;# 
  2309  0FE5                     	;# 
  2310  0FE6                     	;# 
  2311  0FE7                     	;# 
  2312  0FE8                     	;# 
  2313  0FE8                     	;# 
  2314  0FE9                     	;# 
  2315  0FEA                     	;# 
  2316  0FEA                     	;# 
  2317  0FEB                     	;# 
  2318  0FED                     	;# 
  2319  0FEE                     	;# 
  2320  0FEE                     	;# 
  2321  0FEF                     	;# 
  2322  0000                     	;# 
  2323  0001                     	;# 
  2324  0002                     	;# 
  2325  0003                     	;# 
  2326  0004                     	;# 
  2327  0005                     	;# 
  2328  0006                     	;# 
  2329  0007                     	;# 
  2330  0008                     	;# 
  2331  0009                     	;# 
  2332  000A                     	;# 
  2333  000B                     	;# 
  2334  000C                     	;# 
  2335  000E                     	;# 
  2336  0011                     	;# 
  2337  0012                     	;# 
  2338  0013                     	;# 
  2339  0015                     	;# 
  2340  0016                     	;# 
  2341  0016                     	;# 
  2342  0017                     	;# 
  2343  0018                     	;# 
  2344  0019                     	;# 
  2345  001A                     	;# 
  2346  001B                     	;# 
  2347  001C                     	;# 
  2348  008C                     	;# 
  2349  008E                     	;# 
  2350  0091                     	;# 
  2351  0092                     	;# 
  2352  0093                     	;# 
  2353  0095                     	;# 
  2354  0096                     	;# 
  2355  0097                     	;# 
  2356  0098                     	;# 
  2357  0099                     	;# 
  2358  009A                     	;# 
  2359  009B                     	;# 
  2360  009B                     	;# 
  2361  009C                     	;# 
  2362  009D                     	;# 
  2363  009E                     	;# 
  2364  009F                     	;# 
  2365  010C                     	;# 
  2366  010E                     	;# 
  2367  0111                     	;# 
  2368  0112                     	;# 
  2369  0113                     	;# 
  2370  0114                     	;# 
  2371  0115                     	;# 
  2372  0116                     	;# 
  2373  0117                     	;# 
  2374  0118                     	;# 
  2375  0119                     	;# 
  2376  018C                     	;# 
  2377  018E                     	;# 
  2378  0191                     	;# 
  2379  0191                     	;# 
  2380  0192                     	;# 
  2381  0193                     	;# 
  2382  0193                     	;# 
  2383  0194                     	;# 
  2384  0195                     	;# 
  2385  0196                     	;# 
  2386  0197                     	;# 
  2387  0199                     	;# 
  2388  019A                     	;# 
  2389  019B                     	;# 
  2390  019B                     	;# 
  2391  019C                     	;# 
  2392  019D                     	;# 
  2393  019E                     	;# 
  2394  019F                     	;# 
  2395  020C                     	;# 
  2396  020E                     	;# 
  2397  028C                     	;# 
  2398  028E                     	;# 
  2399  030C                     	;# 
  2400  030E                     	;# 
  2401  038C                     	;# 
  2402  038E                     	;# 
  2403  0391                     	;# 
  2404  0392                     	;# 
  2405  0393                     	;# 
  2406  0397                     	;# 
  2407  0398                     	;# 
  2408  0399                     	;# 
  2409  0691                     	;# 
  2410  0692                     	;# 
  2411  0693                     	;# 
  2412  0694                     	;# 
  2413  0695                     	;# 
  2414  0D8E                     	;# 
  2415  0D8F                     	;# 
  2416  0D90                     	;# 
  2417  0D91                     	;# 
  2418  0D91                     	;# 
  2419  0D92                     	;# 
  2420  0D93                     	;# 
  2421  0D93                     	;# 
  2422  0D94                     	;# 
  2423  0D95                     	;# 
  2424  0D95                     	;# 
  2425  0D96                     	;# 
  2426  0D97                     	;# 
  2427  0D97                     	;# 
  2428  0D98                     	;# 
  2429  0D99                     	;# 
  2430  0D99                     	;# 
  2431  0D9A                     	;# 
  2432  0D9B                     	;# 
  2433  0D9C                     	;# 
  2434  0D9C                     	;# 
  2435  0D9D                     	;# 
  2436  0D9D                     	;# 
  2437  0D9E                     	;# 
  2438  0D9F                     	;# 
  2439  0DA0                     	;# 
  2440  0DA1                     	;# 
  2441  0DA1                     	;# 
  2442  0DA2                     	;# 
  2443  0DA3                     	;# 
  2444  0DA3                     	;# 
  2445  0DA4                     	;# 
  2446  0DA5                     	;# 
  2447  0DA5                     	;# 
  2448  0DA6                     	;# 
  2449  0DA7                     	;# 
  2450  0DA7                     	;# 
  2451  0DA8                     	;# 
  2452  0DA9                     	;# 
  2453  0DA9                     	;# 
  2454  0DAA                     	;# 
  2455  0DAB                     	;# 
  2456  0DAC                     	;# 
  2457  0DAC                     	;# 
  2458  0DAD                     	;# 
  2459  0DAD                     	;# 
  2460  0DAE                     	;# 
  2461  0DAF                     	;# 
  2462  0DB0                     	;# 
  2463  0DB1                     	;# 
  2464  0DB1                     	;# 
  2465  0DB2                     	;# 
  2466  0DB3                     	;# 
  2467  0DB3                     	;# 
  2468  0DB4                     	;# 
  2469  0DB5                     	;# 
  2470  0DB5                     	;# 
  2471  0DB6                     	;# 
  2472  0DB7                     	;# 
  2473  0DB7                     	;# 
  2474  0DB8                     	;# 
  2475  0DB9                     	;# 
  2476  0DB9                     	;# 
  2477  0DBA                     	;# 
  2478  0DBB                     	;# 
  2479  0DBC                     	;# 
  2480  0DBC                     	;# 
  2481  0DBD                     	;# 
  2482  0DBD                     	;# 
  2483  0DBE                     	;# 
  2484  0DBF                     	;# 
  2485  0DC0                     	;# 
  2486  0DC1                     	;# 
  2487  0DC1                     	;# 
  2488  0DC2                     	;# 
  2489  0DC3                     	;# 
  2490  0DC3                     	;# 
  2491  0DC4                     	;# 
  2492  0DC5                     	;# 
  2493  0DC5                     	;# 
  2494  0DC6                     	;# 
  2495  0DC7                     	;# 
  2496  0DC7                     	;# 
  2497  0DC8                     	;# 
  2498  0DC9                     	;# 
  2499  0DC9                     	;# 
  2500  0DCA                     	;# 
  2501  0DCB                     	;# 
  2502  0DCC                     	;# 
  2503  0DCC                     	;# 
  2504  0DCD                     	;# 
  2505  0DCD                     	;# 
  2506  0DCE                     	;# 
  2507  0DCF                     	;# 
  2508  0DD0                     	;# 
  2509  0E0F                     	;# 
  2510  0E10                     	;# 
  2511  0E11                     	;# 
  2512  0E12                     	;# 
  2513  0E13                     	;# 
  2514  0E14                     	;# 
  2515  0E15                     	;# 
  2516  0E16                     	;# 
  2517  0E17                     	;# 
  2518  0E90                     	;# 
  2519  0E91                     	;# 
  2520  0E92                     	;# 
  2521  0E94                     	;# 
  2522  0E95                     	;# 
  2523  0EA0                     	;# 
  2524  0EA1                     	;# 
  2525  0EA2                     	;# 
  2526  0EA3                     	;# 
  2527  0EA4                     	;# 
  2528  0EA5                     	;# 
  2529  0FE4                     	;# 
  2530  0FE5                     	;# 
  2531  0FE6                     	;# 
  2532  0FE7                     	;# 
  2533  0FE8                     	;# 
  2534  0FE8                     	;# 
  2535  0FE9                     	;# 
  2536  0FEA                     	;# 
  2537  0FEA                     	;# 
  2538  0FEB                     	;# 
  2539  0FED                     	;# 
  2540  0FEE                     	;# 
  2541  0FEE                     	;# 
  2542  0FEF                     	;# 
  2543  0FFF                     	;# 
  2544  0000                     	;# 
  2545  0001                     	;# 
  2546  0002                     	;# 
  2547  0003                     	;# 
  2548  0004                     	;# 
  2549  0005                     	;# 
  2550  0006                     	;# 
  2551  0007                     	;# 
  2552  0008                     	;# 
  2553  0009                     	;# 
  2554  000A                     	;# 
  2555  000B                     	;# 
  2556  000C                     	;# 
  2557  000E                     	;# 
  2558  0011                     	;# 
  2559  0012                     	;# 
  2560  0013                     	;# 
  2561  0015                     	;# 
  2562  0016                     	;# 
  2563  0016                     	;# 
  2564  0017                     	;# 
  2565  0018                     	;# 
  2566  0019                     	;# 
  2567  001A                     	;# 
  2568  001B                     	;# 
  2569  001C                     	;# 
  2570  008C                     	;# 
  2571  008E                     	;# 
  2572  0091                     	;# 
  2573  0092                     	;# 
  2574  0093                     	;# 
  2575  0095                     	;# 
  2576  0096                     	;# 
  2577  0097                     	;# 
  2578  0098                     	;# 
  2579  0099                     	;# 
  2580  009A                     	;# 
  2581  009B                     	;# 
  2582  009B                     	;# 
  2583  009C                     	;# 
  2584  009D                     	;# 
  2585  009E                     	;# 
  2586  009F                     	;# 
  2587  010C                     	;# 
  2588  010E                     	;# 
  2589  0111                     	;# 
  2590  0112                     	;# 
  2591  0113                     	;# 
  2592  0114                     	;# 
  2593  0115                     	;# 
  2594  0116                     	;# 
  2595  0117                     	;# 
  2596  0118                     	;# 
  2597  0119                     	;# 
  2598  018C                     	;# 
  2599  018E                     	;# 
  2600  0191                     	;# 
  2601  0191                     	;# 
  2602  0192                     	;# 
  2603  0193                     	;# 
  2604  0193                     	;# 
  2605  0194                     	;# 
  2606  0195                     	;# 
  2607  0196                     	;# 
  2608  0197                     	;# 
  2609  0199                     	;# 
  2610  019A                     	;# 
  2611  019B                     	;# 
  2612  019B                     	;# 
  2613  019C                     	;# 
  2614  019D                     	;# 
  2615  019E                     	;# 
  2616  019F                     	;# 
  2617  020C                     	;# 
  2618  020E                     	;# 
  2619  028C                     	;# 
  2620  028E                     	;# 
  2621  030C                     	;# 
  2622  030E                     	;# 
  2623  038C                     	;# 
  2624  038E                     	;# 
  2625  0391                     	;# 
  2626  0392                     	;# 
  2627  0393                     	;# 
  2628  0397                     	;# 
  2629  0398                     	;# 
  2630  0399                     	;# 
  2631  0691                     	;# 
  2632  0692                     	;# 
  2633  0693                     	;# 
  2634  0694                     	;# 
  2635  0695                     	;# 
  2636  0D8E                     	;# 
  2637  0D8F                     	;# 
  2638  0D90                     	;# 
  2639  0D91                     	;# 
  2640  0D91                     	;# 
  2641  0D92                     	;# 
  2642  0D93                     	;# 
  2643  0D93                     	;# 
  2644  0D94                     	;# 
  2645  0D95                     	;# 
  2646  0D95                     	;# 
  2647  0D96                     	;# 
  2648  0D97                     	;# 
  2649  0D97                     	;# 
  2650  0D98                     	;# 
  2651  0D99                     	;# 
  2652  0D99                     	;# 
  2653  0D9A                     	;# 
  2654  0D9B                     	;# 
  2655  0D9C                     	;# 
  2656  0D9C                     	;# 
  2657  0D9D                     	;# 
  2658  0D9D                     	;# 
  2659  0D9E                     	;# 
  2660  0D9F                     	;# 
  2661  0DA0                     	;# 
  2662  0DA1                     	;# 
  2663  0DA1                     	;# 
  2664  0DA2                     	;# 
  2665  0DA3                     	;# 
  2666  0DA3                     	;# 
  2667  0DA4                     	;# 
  2668  0DA5                     	;# 
  2669  0DA5                     	;# 
  2670  0DA6                     	;# 
  2671  0DA7                     	;# 
  2672  0DA7                     	;# 
  2673  0DA8                     	;# 
  2674  0DA9                     	;# 
  2675  0DA9                     	;# 
  2676  0DAA                     	;# 
  2677  0DAB                     	;# 
  2678  0DAC                     	;# 
  2679  0DAC                     	;# 
  2680  0DAD                     	;# 
  2681  0DAD                     	;# 
  2682  0DAE                     	;# 
  2683  0DAF                     	;# 
  2684  0DB0                     	;# 
  2685  0DB1                     	;# 
  2686  0DB1                     	;# 
  2687  0DB2                     	;# 
  2688  0DB3                     	;# 
  2689  0DB3                     	;# 
  2690  0DB4                     	;# 
  2691  0DB5                     	;# 
  2692  0DB5                     	;# 
  2693  0DB6                     	;# 
  2694  0DB7                     	;# 
  2695  0DB7                     	;# 
  2696  0DB8                     	;# 
  2697  0DB9                     	;# 
  2698  0DB9                     	;# 
  2699  0DBA                     	;# 
  2700  0DBB                     	;# 
  2701  0DBC                     	;# 
  2702  0DBC                     	;# 
  2703  0DBD                     	;# 
  2704  0DBD                     	;# 
  2705  0DBE                     	;# 
  2706  0DBF                     	;# 
  2707  0DC0                     	;# 
  2708  0DC1                     	;# 
  2709  0DC1                     	;# 
  2710  0DC2                     	;# 
  2711  0DC3                     	;# 
  2712  0DC3                     	;# 
  2713  0DC4                     	;# 
  2714  0DC5                     	;# 
  2715  0DC5                     	;# 
  2716  0DC6                     	;# 
  2717  0DC7                     	;# 
  2718  0DC7                     	;# 
  2719  0DC8                     	;# 
  2720  0DC9                     	;# 
  2721  0DC9                     	;# 
  2722  0DCA                     	;# 
  2723  0DCB                     	;# 
  2724  0DCC                     	;# 
  2725  0DCC                     	;# 
  2726  0DCD                     	;# 
  2727  0DCD                     	;# 
  2728  0DCE                     	;# 
  2729  0DCF                     	;# 
  2730  0DD0                     	;# 
  2731  0E0F                     	;# 
  2732  0E10                     	;# 
  2733  0E11                     	;# 
  2734  0E12                     	;# 
  2735  0E13                     	;# 
  2736  0E14                     	;# 
  2737  0E15                     	;# 
  2738  0E16                     	;# 
  2739  0E17                     	;# 
  2740  0E90                     	;# 
  2741  0E91                     	;# 
  2742  0E92                     	;# 
  2743  0E94                     	;# 
  2744  0E95                     	;# 
  2745  0EA0                     	;# 
  2746  0EA1                     	;# 
  2747  0EA2                     	;# 
  2748  0EA3                     	;# 
  2749  0EA4                     	;# 
  2750  0EA5                     	;# 
  2751  0FE4                     	;# 
  2752  0FE5                     	;# 
  2753  0FE6                     	;# 
  2754  0FE7                     	;# 
  2755  0FE8                     	;# 
  2756  0FE8                     	;# 
  2757  0FE9                     	;# 
  2758  0FEA                     	;# 
  2759  0FEA                     	;# 
  2760  0FEB                     	;# 
  2761  0FED                     	;# 
  2762  0FEE                     	;# 
  2763  0FEE                     	;# 
  2764  0FEF                     	;# 
  2765  0FFF                     	;# 
  2766  0000                     	;# 
  2767  0001                     	;# 
  2768  0002                     	;# 
  2769  0003                     	;# 
  2770  0004                     	;# 
  2771  0005                     	;# 
  2772  0006                     	;# 
  2773  0007                     	;# 
  2774  0008                     	;# 
  2775  0009                     	;# 
  2776  000A                     	;# 
  2777  000B                     	;# 
  2778  000C                     	;# 
  2779  000E                     	;# 
  2780  0011                     	;# 
  2781  0012                     	;# 
  2782  0013                     	;# 
  2783  0015                     	;# 
  2784  0016                     	;# 
  2785  0016                     	;# 
  2786  0017                     	;# 
  2787  0018                     	;# 
  2788  0019                     	;# 
  2789  001A                     	;# 
  2790  001B                     	;# 
  2791  001C                     	;# 
  2792  008C                     	;# 
  2793  008E                     	;# 
  2794  0091                     	;# 
  2795  0092                     	;# 
  2796  0093                     	;# 
  2797  0095                     	;# 
  2798  0096                     	;# 
  2799  0097                     	;# 
  2800  0098                     	;# 
  2801  0099                     	;# 
  2802  009A                     	;# 
  2803  009B                     	;# 
  2804  009B                     	;# 
  2805  009C                     	;# 
  2806  009D                     	;# 
  2807  009E                     	;# 
  2808  009F                     	;# 
  2809  010C                     	;# 
  2810  010E                     	;# 
  2811  0111                     	;# 
  2812  0112                     	;# 
  2813  0113                     	;# 
  2814  0114                     	;# 
  2815  0115                     	;# 
  2816  0116                     	;# 
  2817  0117                     	;# 
  2818  0118                     	;# 
  2819  0119                     	;# 
  2820  018C                     	;# 
  2821  018E                     	;# 
  2822  0191                     	;# 
  2823  0191                     	;# 
  2824  0192                     	;# 
  2825  0193                     	;# 
  2826  0193                     	;# 
  2827  0194                     	;# 
  2828  0195                     	;# 
  2829  0196                     	;# 
  2830  0197                     	;# 
  2831  0199                     	;# 
  2832  019A                     	;# 
  2833  019B                     	;# 
  2834  019B                     	;# 
  2835  019C                     	;# 
  2836  019D                     	;# 
  2837  019E                     	;# 
  2838  019F                     	;# 
  2839  020C                     	;# 
  2840  020E                     	;# 
  2841  028C                     	;# 
  2842  028E                     	;# 
  2843  030C                     	;# 
  2844  030E                     	;# 
  2845  038C                     	;# 
  2846  038E                     	;# 
  2847  0391                     	;# 
  2848  0392                     	;# 
  2849  0393                     	;# 
  2850  0397                     	;# 
  2851  0398                     	;# 
  2852  0399                     	;# 
  2853  0691                     	;# 
  2854  0692                     	;# 
  2855  0693                     	;# 
  2856  0694                     	;# 
  2857  0695                     	;# 
  2858  0D8E                     	;# 
  2859  0D8F                     	;# 
  2860  0D90                     	;# 
  2861  0D91                     	;# 
  2862  0D91                     	;# 
  2863  0D92                     	;# 
  2864  0D93                     	;# 
  2865  0D93                     	;# 
  2866  0D94                     	;# 
  2867  0D95                     	;# 
  2868  0D95                     	;# 
  2869  0D96                     	;# 
  2870  0D97                     	;# 
  2871  0D97                     	;# 
  2872  0D98                     	;# 
  2873  0D99                     	;# 
  2874  0D99                     	;# 
  2875  0D9A                     	;# 
  2876  0D9B                     	;# 
  2877  0D9C                     	;# 
  2878  0D9C                     	;# 
  2879  0D9D                     	;# 
  2880  0D9D                     	;# 
  2881  0D9E                     	;# 
  2882  0D9F                     	;# 
  2883  0DA0                     	;# 
  2884  0DA1                     	;# 
  2885  0DA1                     	;# 
  2886  0DA2                     	;# 
  2887  0DA3                     	;# 
  2888  0DA3                     	;# 
  2889  0DA4                     	;# 
  2890  0DA5                     	;# 
  2891  0DA5                     	;# 
  2892  0DA6                     	;# 
  2893  0DA7                     	;# 
  2894  0DA7                     	;# 
  2895  0DA8                     	;# 
  2896  0DA9                     	;# 
  2897  0DA9                     	;# 
  2898  0DAA                     	;# 
  2899  0DAB                     	;# 
  2900  0DAC                     	;# 
  2901  0DAC                     	;# 
  2902  0DAD                     	;# 
  2903  0DAD                     	;# 
  2904  0DAE                     	;# 
  2905  0DAF                     	;# 
  2906  0DB0                     	;# 
  2907  0DB1                     	;# 
  2908  0DB1                     	;# 
  2909  0DB2                     	;# 
  2910  0DB3                     	;# 
  2911  0DB3                     	;# 
  2912  0DB4                     	;# 
  2913  0DB5                     	;# 
  2914  0DB5                     	;# 
  2915  0DB6                     	;# 
  2916  0DB7                     	;# 
  2917  0DB7                     	;# 
  2918  0DB8                     	;# 
  2919  0DB9                     	;# 
  2920  0DB9                     	;# 
  2921  0DBA                     	;# 
  2922  0DBB                     	;# 
  2923  0DBC                     	;# 
  2924  0DBC                     	;# 
  2925  0DBD                     	;# 
  2926  0DBD                     	;# 
  2927  0DBE                     	;# 
  2928  0DBF                     	;# 
  2929  0DC0                     	;# 
  2930  0DC1                     	;# 
  2931  0DC1                     	;# 
  2932  0DC2                     	;# 
  2933  0DC3                     	;# 
  2934  0DC3                     	;# 
  2935  0DC4                     	;# 
  2936  0DC5                     	;# 
  2937  0DC5                     	;# 
  2938  0DC6                     	;# 
  2939  0DC7                     	;# 
  2940  0DC7                     	;# 
  2941  0DC8                     	;# 
  2942  0DC9                     	;# 
  2943  0DC9                     	;# 
  2944  0DCA                     	;# 
  2945  0DCB                     	;# 
  2946  0DCC                     	;# 
  2947  0DCC                     	;# 
  2948  0DCD                     	;# 
  2949  0DCD                     	;# 
  2950  0DCE                     	;# 
  2951  0DCF                     	;# 
  2952  0DD0                     	;# 
  2953  0E0F                     	;# 
  2954  0E10                     	;# 
  2955  0E11                     	;# 
  2956  0E12                     	;# 
  2957  0E13                     	;# 
  2958  0E14                     	;# 
  2959  0E15                     	;# 
  2960  0E16                     	;# 
  2961  0E17                     	;# 
  2962  0E90                     	;# 
  2963  0E91                     	;# 
  2964  0E92                     	;# 
  2965  0E94                     	;# 
  2966  0E95                     	;# 
  2967  0EA0                     	;# 
  2968  0EA1                     	;# 
  2969  0EA2                     	;# 
  2970  0EA3                     	;# 
  2971  0EA4                     	;# 
  2972  0EA5                     	;# 
  2973  0FE4                     	;# 
  2974  0FE5                     	;# 
  2975  0FE6                     	;# 
  2976  0FE7                     	;# 
  2977  0FE8                     	;# 
  2978  0FE8                     	;# 
  2979  0FE9                     	;# 
  2980  0FEA                     	;# 
  2981  0FEA                     	;# 
  2982  0FEB                     	;# 
  2983  0FED                     	;# 
  2984  0FEE                     	;# 
  2985  0FEE                     	;# 
  2986  0FEF                     	;# 
  2987  0FFF                     	;# 
  2988  0000                     	;# 
  2989  0001                     	;# 
  2990  0002                     	;# 
  2991  0003                     	;# 
  2992  0004                     	;# 
  2993  0005                     	;# 
  2994  0006                     	;# 
  2995  0007                     	;# 
  2996  0008                     	;# 
  2997  0009                     	;# 
  2998  000A                     	;# 
  2999  000B                     	;# 
  3000  000C                     	;# 
  3001  000E                     	;# 
  3002  0011                     	;# 
  3003  0012                     	;# 
  3004  0013                     	;# 
  3005  0015                     	;# 
  3006  0016                     	;# 
  3007  0016                     	;# 
  3008  0017                     	;# 
  3009  0018                     	;# 
  3010  0019                     	;# 
  3011  001A                     	;# 
  3012  001B                     	;# 
  3013  001C                     	;# 
  3014  008C                     	;# 
  3015  008E                     	;# 
  3016  0091                     	;# 
  3017  0092                     	;# 
  3018  0093                     	;# 
  3019  0095                     	;# 
  3020  0096                     	;# 
  3021  0097                     	;# 
  3022  0098                     	;# 
  3023  0099                     	;# 
  3024  009A                     	;# 
  3025  009B                     	;# 
  3026  009B                     	;# 
  3027  009C                     	;# 
  3028  009D                     	;# 
  3029  009E                     	;# 
  3030  009F                     	;# 
  3031  010C                     	;# 
  3032  010E                     	;# 
  3033  0111                     	;# 
  3034  0112                     	;# 
  3035  0113                     	;# 
  3036  0114                     	;# 
  3037  0115                     	;# 
  3038  0116                     	;# 
  3039  0117                     	;# 
  3040  0118                     	;# 
  3041  0119                     	;# 
  3042  018C                     	;# 
  3043  018E                     	;# 
  3044  0191                     	;# 
  3045  0191                     	;# 
  3046  0192                     	;# 
  3047  0193                     	;# 
  3048  0193                     	;# 
  3049  0194                     	;# 
  3050  0195                     	;# 
  3051  0196                     	;# 
  3052  0197                     	;# 
  3053  0199                     	;# 
  3054  019A                     	;# 
  3055  019B                     	;# 
  3056  019B                     	;# 
  3057  019C                     	;# 
  3058  019D                     	;# 
  3059  019E                     	;# 
  3060  019F                     	;# 
  3061  020C                     	;# 
  3062  020E                     	;# 
  3063  028C                     	;# 
  3064  028E                     	;# 
  3065  030C                     	;# 
  3066  030E                     	;# 
  3067  038C                     	;# 
  3068  038E                     	;# 
  3069  0391                     	;# 
  3070  0392                     	;# 
  3071  0393                     	;# 
  3072  0397                     	;# 
  3073  0398                     	;# 
  3074  0399                     	;# 
  3075  0691                     	;# 
  3076  0692                     	;# 
  3077  0693                     	;# 
  3078  0694                     	;# 
  3079  0695                     	;# 
  3080  0D8E                     	;# 
  3081  0D8F                     	;# 
  3082  0D90                     	;# 
  3083  0D91                     	;# 
  3084  0D91                     	;# 
  3085  0D92                     	;# 
  3086  0D93                     	;# 
  3087  0D93                     	;# 
  3088  0D94                     	;# 
  3089  0D95                     	;# 
  3090  0D95                     	;# 
  3091  0D96                     	;# 
  3092  0D97                     	;# 
  3093  0D97                     	;# 
  3094  0D98                     	;# 
  3095  0D99                     	;# 
  3096  0D99                     	;# 
  3097  0D9A                     	;# 
  3098  0D9B                     	;# 
  3099  0D9C                     	;# 
  3100  0D9C                     	;# 
  3101  0D9D                     	;# 
  3102  0D9D                     	;# 
  3103  0D9E                     	;# 
  3104  0D9F                     	;# 
  3105  0DA0                     	;# 
  3106  0DA1                     	;# 
  3107  0DA1                     	;# 
  3108  0DA2                     	;# 
  3109  0DA3                     	;# 
  3110  0DA3                     	;# 
  3111  0DA4                     	;# 
  3112  0DA5                     	;# 
  3113  0DA5                     	;# 
  3114  0DA6                     	;# 
  3115  0DA7                     	;# 
  3116  0DA7                     	;# 
  3117  0DA8                     	;# 
  3118  0DA9                     	;# 
  3119  0DA9                     	;# 
  3120  0DAA                     	;# 
  3121  0DAB                     	;# 
  3122  0DAC                     	;# 
  3123  0DAC                     	;# 
  3124  0DAD                     	;# 
  3125  0DAD                     	;# 
  3126  0DAE                     	;# 
  3127  0DAF                     	;# 
  3128  0DB0                     	;# 
  3129  0DB1                     	;# 
  3130  0DB1                     	;# 
  3131  0DB2                     	;# 
  3132  0DB3                     	;# 
  3133  0DB3                     	;# 
  3134  0DB4                     	;# 
  3135  0DB5                     	;# 
  3136  0DB5                     	;# 
  3137  0DB6                     	;# 
  3138  0DB7                     	;# 
  3139  0DB7                     	;# 
  3140  0DB8                     	;# 
  3141  0DB9                     	;# 
  3142  0DB9                     	;# 
  3143  0DBA                     	;# 
  3144  0DBB                     	;# 
  3145  0DBC                     	;# 
  3146  0DBC                     	;# 
  3147  0DBD                     	;# 
  3148  0DBD                     	;# 
  3149  0DBE                     	;# 
  3150  0DBF                     	;# 
  3151  0DC0                     	;# 
  3152  0DC1                     	;# 
  3153  0DC1                     	;# 
  3154  0DC2                     	;# 
  3155  0DC3                     	;# 
  3156  0DC3                     	;# 
  3157  0DC4                     	;# 
  3158  0DC5                     	;# 
  3159  0DC5                     	;# 
  3160  0DC6                     	;# 
  3161  0DC7                     	;# 
  3162  0DC7                     	;# 
  3163  0DC8                     	;# 
  3164  0DC9                     	;# 
  3165  0DC9                     	;# 
  3166  0DCA                     	;# 
  3167  0DCB                     	;# 
  3168  0DCC                     	;# 
  3169  0DCC                     	;# 
  3170  0DCD                     	;# 
  3171  0DCD                     	;# 
  3172  0DCE                     	;# 
  3173  0DCF                     	;# 
  3174  0DD0                     	;# 
  3175  0E0F                     	;# 
  3176  0E10                     	;# 
  3177  0E11                     	;# 
  3178  0E12                     	;# 
  3179  0E13                     	;# 
  3180  0E14                     	;# 
  3181  0E15                     	;# 
  3182  0E16                     	;# 
  3183  0E17                     	;# 
  3184  0E90                     	;# 
  3185  0E91                     	;# 
  3186  0E92                     	;# 
  3187  0E94                     	;# 
  3188  0E95                     	;# 
  3189  0EA0                     	;# 
  3190  0EA1                     	;# 
  3191  0EA2                     	;# 
  3192  0EA3                     	;# 
  3193  0EA4                     	;# 
  3194  0EA5                     	;# 
  3195  0FE4                     	;# 
  3196  0FE5                     	;# 
  3197  0FE6                     	;# 
  3198  0FE7                     	;# 
  3199  0FE8                     	;# 
  3200  0FE8                     	;# 
  3201  0FE9                     	;# 
  3202  0FEA                     	;# 
  3203  0FEA                     	;# 
  3204  0FEB                     	;# 
  3205  0FED                     	;# 
  3206  0FEE                     	;# 
  3207  0FEE                     	;# 
  3208  0FEF                     	;# 
  3209  0FFF                     	;# 
  3210  0000                     	;# 
  3211  0001                     	;# 
  3212  0002                     	;# 
  3213  0003                     	;# 
  3214  0004                     	;# 
  3215  0005                     	;# 
  3216  0006                     	;# 
  3217  0007                     	;# 
  3218  0008                     	;# 
  3219  0009                     	;# 
  3220  000A                     	;# 
  3221  000B                     	;# 
  3222  000C                     	;# 
  3223  000E                     	;# 
  3224  0011                     	;# 
  3225  0012                     	;# 
  3226  0013                     	;# 
  3227  0015                     	;# 
  3228  0016                     	;# 
  3229  0016                     	;# 
  3230  0017                     	;# 
  3231  0018                     	;# 
  3232  0019                     	;# 
  3233  001A                     	;# 
  3234  001B                     	;# 
  3235  001C                     	;# 
  3236  008C                     	;# 
  3237  008E                     	;# 
  3238  0091                     	;# 
  3239  0092                     	;# 
  3240  0093                     	;# 
  3241  0095                     	;# 
  3242  0096                     	;# 
  3243  0097                     	;# 
  3244  0098                     	;# 
  3245  0099                     	;# 
  3246  009A                     	;# 
  3247  009B                     	;# 
  3248  009B                     	;# 
  3249  009C                     	;# 
  3250  009D                     	;# 
  3251  009E                     	;# 
  3252  009F                     	;# 
  3253  010C                     	;# 
  3254  010E                     	;# 
  3255  0111                     	;# 
  3256  0112                     	;# 
  3257  0113                     	;# 
  3258  0114                     	;# 
  3259  0115                     	;# 
  3260  0116                     	;# 
  3261  0117                     	;# 
  3262  0118                     	;# 
  3263  0119                     	;# 
  3264  018C                     	;# 
  3265  018E                     	;# 
  3266  0191                     	;# 
  3267  0191                     	;# 
  3268  0192                     	;# 
  3269  0193                     	;# 
  3270  0193                     	;# 
  3271  0194                     	;# 
  3272  0195                     	;# 
  3273  0196                     	;# 
  3274  0197                     	;# 
  3275  0199                     	;# 
  3276  019A                     	;# 
  3277  019B                     	;# 
  3278  019B                     	;# 
  3279  019C                     	;# 
  3280  019D                     	;# 
  3281  019E                     	;# 
  3282  019F                     	;# 
  3283  020C                     	;# 
  3284  020E                     	;# 
  3285  028C                     	;# 
  3286  028E                     	;# 
  3287  030C                     	;# 
  3288  030E                     	;# 
  3289  038C                     	;# 
  3290  038E                     	;# 
  3291  0391                     	;# 
  3292  0392                     	;# 
  3293  0393                     	;# 
  3294  0397                     	;# 
  3295  0398                     	;# 
  3296  0399                     	;# 
  3297  0691                     	;# 
  3298  0692                     	;# 
  3299  0693                     	;# 
  3300  0694                     	;# 
  3301  0695                     	;# 
  3302  0D8E                     	;# 
  3303  0D8F                     	;# 
  3304  0D90                     	;# 
  3305  0D91                     	;# 
  3306  0D91                     	;# 
  3307  0D92                     	;# 
  3308  0D93                     	;# 
  3309  0D93                     	;# 
  3310  0D94                     	;# 
  3311  0D95                     	;# 
  3312  0D95                     	;# 
  3313  0D96                     	;# 
  3314  0D97                     	;# 
  3315  0D97                     	;# 
  3316  0D98                     	;# 
  3317  0D99                     	;# 
  3318  0D99                     	;# 
  3319  0D9A                     	;# 
  3320  0D9B                     	;# 
  3321  0D9C                     	;# 
  3322  0D9C                     	;# 
  3323  0D9D                     	;# 
  3324  0D9D                     	;# 
  3325  0D9E                     	;# 
  3326  0D9F                     	;# 
  3327  0DA0                     	;# 
  3328  0DA1                     	;# 
  3329  0DA1                     	;# 
  3330  0DA2                     	;# 
  3331  0DA3                     	;# 
  3332  0DA3                     	;# 
  3333  0DA4                     	;# 
  3334  0DA5                     	;# 
  3335  0DA5                     	;# 
  3336  0DA6                     	;# 
  3337  0DA7                     	;# 
  3338  0DA7                     	;# 
  3339  0DA8                     	;# 
  3340  0DA9                     	;# 
  3341  0DA9                     	;# 
  3342  0DAA                     	;# 
  3343  0DAB                     	;# 
  3344  0DAC                     	;# 
  3345  0DAC                     	;# 
  3346  0DAD                     	;# 
  3347  0DAD                     	;# 
  3348  0DAE                     	;# 
  3349  0DAF                     	;# 
  3350  0DB0                     	;# 
  3351  0DB1                     	;# 
  3352  0DB1                     	;# 
  3353  0DB2                     	;# 
  3354  0DB3                     	;# 
  3355  0DB3                     	;# 
  3356  0DB4                     	;# 
  3357  0DB5                     	;# 
  3358  0DB5                     	;# 
  3359  0DB6                     	;# 
  3360  0DB7                     	;# 
  3361  0DB7                     	;# 
  3362  0DB8                     	;# 
  3363  0DB9                     	;# 
  3364  0DB9                     	;# 
  3365  0DBA                     	;# 
  3366  0DBB                     	;# 
  3367  0DBC                     	;# 
  3368  0DBC                     	;# 
  3369  0DBD                     	;# 
  3370  0DBD                     	;# 
  3371  0DBE                     	;# 
  3372  0DBF                     	;# 
  3373  0DC0                     	;# 
  3374  0DC1                     	;# 
  3375  0DC1                     	;# 
  3376  0DC2                     	;# 
  3377  0DC3                     	;# 
  3378  0DC3                     	;# 
  3379  0DC4                     	;# 
  3380  0DC5                     	;# 
  3381  0DC5                     	;# 
  3382  0DC6                     	;# 
  3383  0DC7                     	;# 
  3384  0DC7                     	;# 
  3385  0DC8                     	;# 
  3386  0DC9                     	;# 
  3387  0DC9                     	;# 
  3388  0DCA                     	;# 
  3389  0DCB                     	;# 
  3390  0DCC                     	;# 
  3391  0DCC                     	;# 
  3392  0DCD                     	;# 
  3393  0DCD                     	;# 
  3394  0DCE                     	;# 
  3395  0DCF                     	;# 
  3396  0DD0                     	;# 
  3397  0E0F                     	;# 
  3398  0E10                     	;# 
  3399  0E11                     	;# 
  3400  0E12                     	;# 
  3401  0E13                     	;# 
  3402  0E14                     	;# 
  3403  0E15                     	;# 
  3404  0E16                     	;# 
  3405  0E17                     	;# 
  3406  0E90                     	;# 
  3407  0E91                     	;# 
  3408  0E92                     	;# 
  3409  0E94                     	;# 
  3410  0E95                     	;# 
  3411  0EA0                     	;# 
  3412  0EA1                     	;# 
  3413  0EA2                     	;# 
  3414  0EA3                     	;# 
  3415  0EA4                     	;# 
  3416  0EA5                     	;# 
  3417  0FE4                     	;# 
  3418  0FE5                     	;# 
  3419  0FE6                     	;# 
  3420  0FE7                     	;# 
  3421  0FE8                     	;# 
  3422  0FE8                     	;# 
  3423  0FE9                     	;# 
  3424  0FEA                     	;# 
  3425  0FEA                     	;# 
  3426  0FEB                     	;# 
  3427  0FED                     	;# 
  3428  0FEE                     	;# 
  3429  0FEE                     	;# 
  3430  0FEF                     	;# 
  3431  0FFF                     	;# 
  3432  0000                     	;# 
  3433  0001                     	;# 
  3434  0002                     	;# 
  3435  0003                     	;# 
  3436  0004                     	;# 
  3437  0005                     	;# 
  3438  0006                     	;# 
  3439  0007                     	;# 
  3440  0008                     	;# 
  3441  0009                     	;# 
  3442  000A                     	;# 
  3443  000B                     	;# 
  3444  000C                     	;# 
  3445  000E                     	;# 
  3446  0011                     	;# 
  3447  0012                     	;# 
  3448  0013                     	;# 
  3449  0015                     	;# 
  3450  0016                     	;# 
  3451  0016                     	;# 
  3452  0017                     	;# 
  3453  0018                     	;# 
  3454  0019                     	;# 
  3455  001A                     	;# 
  3456  001B                     	;# 
  3457  001C                     	;# 
  3458  008C                     	;# 
  3459  008E                     	;# 
  3460  0091                     	;# 
  3461  0092                     	;# 
  3462  0093                     	;# 
  3463  0095                     	;# 
  3464  0096                     	;# 
  3465  0097                     	;# 
  3466  0098                     	;# 
  3467  0099                     	;# 
  3468  009A                     	;# 
  3469  009B                     	;# 
  3470  009B                     	;# 
  3471  009C                     	;# 
  3472  009D                     	;# 
  3473  009E                     	;# 
  3474  009F                     	;# 
  3475  010C                     	;# 
  3476  010E                     	;# 
  3477  0111                     	;# 
  3478  0112                     	;# 
  3479  0113                     	;# 
  3480  0114                     	;# 
  3481  0115                     	;# 
  3482  0116                     	;# 
  3483  0117                     	;# 
  3484  0118                     	;# 
  3485  0119                     	;# 
  3486  018C                     	;# 
  3487  018E                     	;# 
  3488  0191                     	;# 
  3489  0191                     	;# 
  3490  0192                     	;# 
  3491  0193                     	;# 
  3492  0193                     	;# 
  3493  0194                     	;# 
  3494  0195                     	;# 
  3495  0196                     	;# 
  3496  0197                     	;# 
  3497  0199                     	;# 
  3498  019A                     	;# 
  3499  019B                     	;# 
  3500  019B                     	;# 
  3501  019C                     	;# 
  3502  019D                     	;# 
  3503  019E                     	;# 
  3504  019F                     	;# 
  3505  020C                     	;# 
  3506  020E                     	;# 
  3507  028C                     	;# 
  3508  028E                     	;# 
  3509  030C                     	;# 
  3510  030E                     	;# 
  3511  038C                     	;# 
  3512  038E                     	;# 
  3513  0391                     	;# 
  3514  0392                     	;# 
  3515  0393                     	;# 
  3516  0397                     	;# 
  3517  0398                     	;# 
  3518  0399                     	;# 
  3519  0691                     	;# 
  3520  0692                     	;# 
  3521  0693                     	;# 
  3522  0694                     	;# 
  3523  0695                     	;# 
  3524  0D8E                     	;# 
  3525  0D8F                     	;# 
  3526  0D90                     	;# 
  3527  0D91                     	;# 
  3528  0D91                     	;# 
  3529  0D92                     	;# 
  3530  0D93                     	;# 
  3531  0D93                     	;# 
  3532  0D94                     	;# 
  3533  0D95                     	;# 
  3534  0D95                     	;# 
  3535  0D96                     	;# 
  3536  0D97                     	;# 
  3537  0D97                     	;# 
  3538  0D98                     	;# 
  3539  0D99                     	;# 
  3540  0D99                     	;# 
  3541  0D9A                     	;# 
  3542  0D9B                     	;# 
  3543  0D9C                     	;# 
  3544  0D9C                     	;# 
  3545  0D9D                     	;# 
  3546  0D9D                     	;# 
  3547  0D9E                     	;# 
  3548  0D9F                     	;# 
  3549  0DA0                     	;# 
  3550  0DA1                     	;# 
  3551  0DA1                     	;# 
  3552  0DA2                     	;# 
  3553  0DA3                     	;# 
  3554  0DA3                     	;# 
  3555  0DA4                     	;# 
  3556  0DA5                     	;# 
  3557  0DA5                     	;# 
  3558  0DA6                     	;# 
  3559  0DA7                     	;# 
  3560  0DA7                     	;# 
  3561  0DA8                     	;# 
  3562  0DA9                     	;# 
  3563  0DA9                     	;# 
  3564  0DAA                     	;# 
  3565  0DAB                     	;# 
  3566  0DAC                     	;# 
  3567  0DAC                     	;# 
  3568  0DAD                     	;# 
  3569  0DAD                     	;# 
  3570  0DAE                     	;# 
  3571  0DAF                     	;# 
  3572  0DB0                     	;# 
  3573  0DB1                     	;# 
  3574  0DB1                     	;# 
  3575  0DB2                     	;# 
  3576  0DB3                     	;# 
  3577  0DB3                     	;# 
  3578  0DB4                     	;# 
  3579  0DB5                     	;# 
  3580  0DB5                     	;# 
  3581  0DB6                     	;# 
  3582  0DB7                     	;# 
  3583  0DB7                     	;# 
  3584  0DB8                     	;# 
  3585  0DB9                     	;# 
  3586  0DB9                     	;# 
  3587  0DBA                     	;# 
  3588  0DBB                     	;# 
  3589  0DBC                     	;# 
  3590  0DBC                     	;# 
  3591  0DBD                     	;# 
  3592  0DBD                     	;# 
  3593  0DBE                     	;# 
  3594  0DBF                     	;# 
  3595  0DC0                     	;# 
  3596  0DC1                     	;# 
  3597  0DC1                     	;# 
  3598  0DC2                     	;# 
  3599  0DC3                     	;# 
  3600  0DC3                     	;# 
  3601  0DC4                     	;# 
  3602  0DC5                     	;# 
  3603  0DC5                     	;# 
  3604  0DC6                     	;# 
  3605  0DC7                     	;# 
  3606  0DC7                     	;# 
  3607  0DC8                     	;# 
  3608  0DC9                     	;# 
  3609  0DC9                     	;# 
  3610  0DCA                     	;# 
  3611  0DCB                     	;# 
  3612  0DCC                     	;# 
  3613  0DCC                     	;# 
  3614  0DCD                     	;# 
  3615  0DCD                     	;# 
  3616  0DCE                     	;# 
  3617  0DCF                     	;# 
  3618  0DD0                     	;# 
  3619  0E0F                     	;# 
  3620  0E10                     	;# 
  3621  0E11                     	;# 
  3622  0E12                     	;# 
  3623  0E13                     	;# 
  3624  0E14                     	;# 
  3625  0E15                     	;# 
  3626  0E16                     	;# 
  3627  0E17                     	;# 
  3628  0E90                     	;# 
  3629  0E91                     	;# 
  3630  0E92                     	;# 
  3631  0E94                     	;# 
  3632  0E95                     	;# 
  3633  0EA0                     	;# 
  3634  0EA1                     	;# 
  3635  0EA2                     	;# 
  3636  0EA3                     	;# 
  3637  0EA4                     	;# 
  3638  0EA5                     	;# 
  3639  0FE4                     	;# 
  3640  0FE5                     	;# 
  3641  0FE6                     	;# 
  3642  0FE7                     	;# 
  3643  0FE8                     	;# 
  3644  0FE8                     	;# 
  3645  0FE9                     	;# 
  3646  0FEA                     	;# 
  3647  0FEA                     	;# 
  3648  0FEB                     	;# 
  3649  0FED                     	;# 
  3650  0FEE                     	;# 
  3651  0FEE                     	;# 
  3652  0FEF                     	;# 
  3653  0FFF                     	;# 
  3654  0000                     	;# 
  3655  0001                     	;# 
  3656  0002                     	;# 
  3657  0003                     	;# 
  3658  0004                     	;# 
  3659  0005                     	;# 
  3660  0006                     	;# 
  3661  0007                     	;# 
  3662  0008                     	;# 
  3663  0009                     	;# 
  3664  000A                     	;# 
  3665  000B                     	;# 
  3666  000C                     	;# 
  3667  000E                     	;# 
  3668  0011                     	;# 
  3669  0012                     	;# 
  3670  0013                     	;# 
  3671  0015                     	;# 
  3672  0016                     	;# 
  3673  0016                     	;# 
  3674  0017                     	;# 
  3675  0018                     	;# 
  3676  0019                     	;# 
  3677  001A                     	;# 
  3678  001B                     	;# 
  3679  001C                     	;# 
  3680  008C                     	;# 
  3681  008E                     	;# 
  3682  0091                     	;# 
  3683  0092                     	;# 
  3684  0093                     	;# 
  3685  0095                     	;# 
  3686  0096                     	;# 
  3687  0097                     	;# 
  3688  0098                     	;# 
  3689  0099                     	;# 
  3690  009A                     	;# 
  3691  009B                     	;# 
  3692  009B                     	;# 
  3693  009C                     	;# 
  3694  009D                     	;# 
  3695  009E                     	;# 
  3696  009F                     	;# 
  3697  010C                     	;# 
  3698  010E                     	;# 
  3699  0111                     	;# 
  3700  0112                     	;# 
  3701  0113                     	;# 
  3702  0114                     	;# 
  3703  0115                     	;# 
  3704  0116                     	;# 
  3705  0117                     	;# 
  3706  0118                     	;# 
  3707  0119                     	;# 
  3708  018C                     	;# 
  3709  018E                     	;# 
  3710  0191                     	;# 
  3711  0191                     	;# 
  3712  0192                     	;# 
  3713  0193                     	;# 
  3714  0193                     	;# 
  3715  0194                     	;# 
  3716  0195                     	;# 
  3717  0196                     	;# 
  3718  0197                     	;# 
  3719  0199                     	;# 
  3720  019A                     	;# 
  3721  019B                     	;# 
  3722  019B                     	;# 
  3723  019C                     	;# 
  3724  019D                     	;# 
  3725  019E                     	;# 
  3726  019F                     	;# 
  3727  020C                     	;# 
  3728  020E                     	;# 
  3729  028C                     	;# 
  3730  028E                     	;# 
  3731  030C                     	;# 
  3732  030E                     	;# 
  3733  038C                     	;# 
  3734  038E                     	;# 
  3735  0391                     	;# 
  3736  0392                     	;# 
  3737  0393                     	;# 
  3738  0397                     	;# 
  3739  0398                     	;# 
  3740  0399                     	;# 
  3741  0691                     	;# 
  3742  0692                     	;# 
  3743  0693                     	;# 
  3744  0694                     	;# 
  3745  0695                     	;# 
  3746  0D8E                     	;# 
  3747  0D8F                     	;# 
  3748  0D90                     	;# 
  3749  0D91                     	;# 
  3750  0D91                     	;# 
  3751  0D92                     	;# 
  3752  0D93                     	;# 
  3753  0D93                     	;# 
  3754  0D94                     	;# 
  3755  0D95                     	;# 
  3756  0D95                     	;# 
  3757  0D96                     	;# 
  3758  0D97                     	;# 
  3759  0D97                     	;# 
  3760  0D98                     	;# 
  3761  0D99                     	;# 
  3762  0D99                     	;# 
  3763  0D9A                     	;# 
  3764  0D9B                     	;# 
  3765  0D9C                     	;# 
  3766  0D9C                     	;# 
  3767  0D9D                     	;# 
  3768  0D9D                     	;# 
  3769  0D9E                     	;# 
  3770  0D9F                     	;# 
  3771  0DA0                     	;# 
  3772  0DA1                     	;# 
  3773  0DA1                     	;# 
  3774  0DA2                     	;# 
  3775  0DA3                     	;# 
  3776  0DA3                     	;# 
  3777  0DA4                     	;# 
  3778  0DA5                     	;# 
  3779  0DA5                     	;# 
  3780  0DA6                     	;# 
  3781  0DA7                     	;# 
  3782  0DA7                     	;# 
  3783  0DA8                     	;# 
  3784  0DA9                     	;# 
  3785  0DA9                     	;# 
  3786  0DAA                     	;# 
  3787  0DAB                     	;# 
  3788  0DAC                     	;# 
  3789  0DAC                     	;# 
  3790  0DAD                     	;# 
  3791  0DAD                     	;# 
  3792  0DAE                     	;# 
  3793  0DAF                     	;# 
  3794  0DB0                     	;# 
  3795  0DB1                     	;# 
  3796  0DB1                     	;# 
  3797  0DB2                     	;# 
  3798  0DB3                     	;# 
  3799  0DB3                     	;# 
  3800  0DB4                     	;# 
  3801  0DB5                     	;# 
  3802  0DB5                     	;# 
  3803  0DB6                     	;# 
  3804  0DB7                     	;# 
  3805  0DB7                     	;# 
  3806  0DB8                     	;# 
  3807  0DB9                     	;# 
  3808  0DB9                     	;# 
  3809  0DBA                     	;# 
  3810  0DBB                     	;# 
  3811  0DBC                     	;# 
  3812  0DBC                     	;# 
  3813  0DBD                     	;# 
  3814  0DBD                     	;# 
  3815  0DBE                     	;# 
  3816  0DBF                     	;# 
  3817  0DC0                     	;# 
  3818  0DC1                     	;# 
  3819  0DC1                     	;# 
  3820  0DC2                     	;# 
  3821  0DC3                     	;# 
  3822  0DC3                     	;# 
  3823  0DC4                     	;# 
  3824  0DC5                     	;# 
  3825  0DC5                     	;# 
  3826  0DC6                     	;# 
  3827  0DC7                     	;# 
  3828  0DC7                     	;# 
  3829  0DC8                     	;# 
  3830  0DC9                     	;# 
  3831  0DC9                     	;# 
  3832  0DCA                     	;# 
  3833  0DCB                     	;# 
  3834  0DCC                     	;# 
  3835  0DCC                     	;# 
  3836  0DCD                     	;# 
  3837  0DCD                     	;# 
  3838  0DCE                     	;# 
  3839  0DCF                     	;# 
  3840  0DD0                     	;# 
  3841  0E0F                     	;# 
  3842  0E10                     	;# 
  3843  0E11                     	;# 
  3844  0E12                     	;# 
  3845  0E13                     	;# 
  3846  0E14                     	;# 
  3847  0E15                     	;# 
  3848  0E16                     	;# 
  3849  0E17                     	;# 
  3850  0E90                     	;# 
  3851  0E91                     	;# 
  3852  0E92                     	;# 
  3853  0E94                     	;# 
  3854  0E95                     	;# 
  3855  0EA0                     	;# 
  3856  0EA1                     	;# 
  3857  0EA2                     	;# 
  3858  0EA3                     	;# 
  3859  0EA4                     	;# 
  3860  0EA5                     	;# 
  3861  0FE4                     	;# 
  3862  0FE5                     	;# 
  3863  0FE6                     	;# 
  3864  0FE7                     	;# 
  3865  0FE8                     	;# 
  3866  0FE8                     	;# 
  3867  0FE9                     	;# 
  3868  0FEA                     	;# 
  3869  0FEA                     	;# 
  3870  0FEB                     	;# 
  3871  0FED                     	;# 
  3872  0FEE                     	;# 
  3873  0FEE                     	;# 
  3874  0FEF                     	;# 
  3875  0FFF                     	;_sysData
  3876                           
  3877 ;; Function _TMR2_DefaultInterruptHandler is unused but had its address taken
  3878  0000                     
  3879                           	psect	idataBANK0
  3880  1CF8                     __pidataBANK0:	
  3881                           
  3882                           ;initializer for _resRs
  3883  1CF8  3410               	retlw	16
  3884  1CF9  3427               	retlw	39
  3885                           
  3886                           ;initializer for _resRc
  3887  1CFA  3410               	retlw	16
  3888  1CFB  3427               	retlw	39
  3889                           
  3890                           	psect	idataBANK1
  3891  1D02                     __pidataBANK1:	
  3892                           
  3893                           ;initializer for _pidU
  3894  1D02  3414               	retlw	20
  3895  1D03  3400               	retlw	0
  3896                           
  3897                           ;initializer for _pidpwm2_U
  3898  1D04  3414               	retlw	20
  3899  1D05  3400               	retlw	0
  3900                           
  3901                           ;initializer for _pwm1DutyForIdrv
  3902  1D06  3405               	retlw	5
  3903  1D07  3400               	retlw	0
  3904                           
  3905                           ;initializer for _pwm2DutyForVout
  3906  1D08  3405               	retlw	5
  3907  1D09  3400               	retlw	0
  3908                           
  3909                           	psect	stringtext1
  3910  181E                     __pstringtext1:	
  3911  181E                     _HexTable:	
  3912  181E  3430               	retlw	48
  3913  181F  3431               	retlw	49
  3914  1820  3432               	retlw	50
  3915  1821  3433               	retlw	51
  3916  1822  3434               	retlw	52
  3917  1823  3435               	retlw	53
  3918  1824  3436               	retlw	54
  3919  1825  3437               	retlw	55
  3920  1826  3438               	retlw	56
  3921  1827  3439               	retlw	57
  3922  1828  3441               	retlw	65
  3923  1829  3442               	retlw	66
  3924  182A  3443               	retlw	67
  3925  182B  3444               	retlw	68
  3926  182C  3445               	retlw	69
  3927  182D  3446               	retlw	70
  3928  182E  3400               	retlw	0
  3929  182F                     __end_of_HexTable:	
  3930  0013                     _PIR3bits	set	19
  3931  001C                     _T2CONbits	set	28
  3932  0011                     _PIR1bits	set	17
  3933  001A                     _TMR2	set	26
  3934  001B                     _PR2	set	27
  3935  001C                     _T2CON	set	28
  3936  000B                     _INTCONbits	set	11
  3937  005F                     _GIE	set	95
  3938  0095                     _OPTION_REGbits	set	149
  3939  008E                     _TRISC	set	142
  3940  008C                     _TRISA	set	140
  3941  009D                     _ADCON0bits	set	157
  3942  009C                     _ADRESH	set	156
  3943  009B                     _ADRESL	set	155
  3944  009F                     _ADCON2	set	159
  3945  009E                     _ADCON1	set	158
  3946  009D                     _ADCON0	set	157
  3947  0097                     _WDTCON	set	151
  3948  0091                     _PIE1bits	set	145
  3949  010E                     _LATC	set	270
  3950  010C                     _LATA	set	268
  3951  0117                     _FVRCONbits	set	279
  3952  0117                     _FVRCON	set	279
  3953  019E                     _TXSTAbits	set	414
  3954  018C                     _ANSELA	set	396
  3955  018E                     _ANSELC	set	398
  3956  019A                     _TXREG	set	410
  3957  019C                     _SPBRGH	set	412
  3958  019B                     _SPBRGL	set	411
  3959  019E                     _TXSTA	set	414
  3960  019D                     _RCSTA	set	413
  3961  019F                     _BAUDCON	set	415
  3962  0199                     _RCREG	set	409
  3963  019D                     _RCSTAbits	set	413
  3964  0196                     _PMCON2	set	406
  3965  0193                     _PMDATL	set	403
  3966  0194                     _PMDATH	set	404
  3967  0195                     _PMCON1bits	set	405
  3968  0192                     _PMADRH	set	402
  3969  0191                     _PMADRL	set	401
  3970  020E                     _WPUC	set	526
  3971  020C                     _WPUA	set	524
  3972  028E                     _ODCONC	set	654
  3973  028C                     _ODCONA	set	652
  3974  0D9D                     _PWM1INTFbits	set	3485
  3975  0D9F                     _PWM1LDCONbits	set	3487
  3976  0D9B                     _PWM1CONbits	set	3483
  3977  0D9B                     _PWM1CON	set	3483
  3978  0D99                     _PWM1TMRL	set	3481
  3979  0D9A                     _PWM1TMRH	set	3482
  3980  0D97                     _PWM1OFL	set	3479
  3981  0D98                     _PWM1OFH	set	3480
  3982  0D95                     _PWM1PRL	set	3477
  3983  0D96                     _PWM1PRH	set	3478
  3984  0D93                     _PWM1DCL	set	3475
  3985  0D94                     _PWM1DCH	set	3476
  3986  0D91                     _PWM1PHL	set	3473
  3987  0D92                     _PWM1PHH	set	3474
  3988  0DA0                     _PWM1OFCON	set	3488
  3989  0D9F                     _PWM1LDCON	set	3487
  3990  0D9E                     _PWM1CLKCON	set	3486
  3991  0D9D                     _PWM1INTF	set	3485
  3992  0D9C                     _PWM1INTE	set	3484
  3993  0DAD                     _PWM2INTFbits	set	3501
  3994  0DAF                     _PWM2LDCONbits	set	3503
  3995  0DAB                     _PWM2CONbits	set	3499
  3996  0DAB                     _PWM2CON	set	3499
  3997  0DA9                     _PWM2TMRL	set	3497
  3998  0DAA                     _PWM2TMRH	set	3498
  3999  0DA7                     _PWM2OFL	set	3495
  4000  0DA8                     _PWM2OFH	set	3496
  4001  0DA5                     _PWM2PRL	set	3493
  4002  0DA6                     _PWM2PRH	set	3494
  4003  0DA3                     _PWM2DCL	set	3491
  4004  0DA4                     _PWM2DCH	set	3492
  4005  0DA1                     _PWM2PHL	set	3489
  4006  0DA2                     _PWM2PHH	set	3490
  4007  0DB0                     _PWM2OFCON	set	3504
  4008  0DAF                     _PWM2LDCON	set	3503
  4009  0DAE                     _PWM2CLKCON	set	3502
  4010  0DAD                     _PWM2INTF	set	3501
  4011  0DAC                     _PWM2INTE	set	3500
  4012  0E15                     _RXPPSbits	set	3605
  4013  0E0F                     _PPSLOCKbits	set	3599
  4014  0E0F                     _PPSLOCK	set	3599
  4015  0EA5                     _RC5PPSbits	set	3749
  4016  0E95                     _RA5PPSbits	set	3733
  4017  0E94                     _RA4PPSbits	set	3732
  4018                           
  4019                           	psect	cinit
  4020  086E                     start_initialization:	
  4021                           ; #config settings
  4022                           
  4023  086E                     __initialization:		;BIGRAM
  4024                           
  4025                           ; Initialize objects allocated to BANK0
  4026  086E  30F8               	movlw	low __pidataBANK0
  4027  086F  0084               	movwf	4
  4028  0870  309C               	movlw	(high __pidataBANK0)| (0+128)
  4029  0871  0085               	movwf	5
  4030  0872  306C               	movlw	low __pdataBANK0
  4031  0873  0086               	movwf	6
  4032  0874  3000               	movlw	high __pdataBANK0
  4033  0875  0087               	movwf	7
  4034  0876  3000               	movlw	0
  4035  0877  00FF               	movwf	btemp+1
  4036  0878  3004               	movlw	4
  4037  0879  319D  251F  3188   	fcall	init_ram
  4038                           
  4039                           ; Initialize objects allocated to BANK1
  4040  087C  3002               	movlw	low __pidataBANK1
  4041  087D  0084               	movwf	4
  4042  087E  309D               	movlw	(high __pidataBANK1)| (0+128)
  4043  087F  0085               	movwf	5
  4044  0880  30D0               	movlw	low __pdataBANK1
  4045  0881  0086               	movwf	6
  4046  0882  3000               	movlw	high __pdataBANK1
  4047  0883  0087               	movwf	7
  4048  0884  3000               	movlw	0
  4049  0885  00FF               	movwf	btemp+1
  4050  0886  3008               	movlw	8
  4051  0887  319D  251F  3188   	fcall	init_ram
  4052                           
  4053                           ; Clear objects allocated to BIGRAM
  4054  088A  305C               	movlw	low (0+9052)
  4055  088B  0084               	movwf	4
  4056  088C  3023               	movlw	high (0+9052)
  4057  088D  0085               	movwf	5
  4058  088E  3084               	movlw	132
  4059  088F  00FE               	movwf	btemp
  4060  0890  3000               	movlw	0
  4061  0891  00FF               	movwf	btemp+1
  4062  0892  319D  2513  3188   	fcall	clear_ram0
  4063                           
  4064                           ; Clear objects allocated to COMMON
  4065  0895  01FA               	clrf	__pbssCOMMON& (0+127)
  4066  0896  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  4067                           
  4068                           ; Clear objects allocated to BANK0
  4069  0897  304A               	movlw	low __pbssBANK0
  4070  0898  0084               	movwf	4
  4071  0899  3000               	movlw	high __pbssBANK0
  4072  089A  0085               	movwf	5
  4073  089B  3022               	movlw	34
  4074  089C  00FE               	movwf	btemp
  4075  089D  3000               	movlw	0
  4076  089E  00FF               	movwf	btemp+1
  4077  089F  319D  2513  3188   	fcall	clear_ram0
  4078                           
  4079                           ; Clear objects allocated to BANK1
  4080  08A2  30A0               	movlw	low __pbssBANK1
  4081  08A3  0084               	movwf	4
  4082  08A4  3000               	movlw	high __pbssBANK1
  4083  08A5  0085               	movwf	5
  4084  08A6  3030               	movlw	48
  4085  08A7  00FE               	movwf	btemp
  4086  08A8  3000               	movlw	0
  4087  08A9  00FF               	movwf	btemp+1
  4088  08AA  319D  2513  3188   	fcall	clear_ram0
  4089                           
  4090                           ; Clear objects allocated to BANK2
  4091  08AD  3020               	movlw	low __pbssBANK2
  4092  08AE  0084               	movwf	4
  4093  08AF  3001               	movlw	high __pbssBANK2
  4094  08B0  0085               	movwf	5
  4095  08B1  3040               	movlw	64
  4096  08B2  00FE               	movwf	btemp
  4097  08B3  3000               	movlw	0
  4098  08B4  00FF               	movwf	btemp+1
  4099  08B5  319D  2513         	fcall	clear_ram0
  4100  08B7                     end_of_initialization:	
  4101                           ;End of C runtime variable initialization code
  4102                           
  4103  08B7                     __end_of__initialization:	
  4104  08B7  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4105  08B8  0020               	movlb	0
  4106  08B9  318D  2D79         	ljmp	_main	;jump to C main() function
  4107                           
  4108                           	psect	bssCOMMON
  4109  007A                     __pbssCOMMON:	
  4110  007A                     _subTickerX:	
  4111  007A                     	ds	1
  4112  007B                     _eusartRxIdleTime_ms:	
  4113  007B                     	ds	1
  4114                           
  4115                           	psect	bssBANK0
  4116  004A                     __pbssBANK0:	
  4117  004A                     _y32:	
  4118  004A                     	ds	4
  4119  004E                     _x0:	
  4120  004E                     	ds	4
  4121  0052                     _y0:	
  4122  0052                     	ds	4
  4123  0056                     _rsLoAvg:	
  4124  0056                     	ds	2
  4125  0058                     _voExpectAdcValue:	
  4126  0058                     	ds	2
  4127  005A                     _rtAdcValueVoFb:	
  4128  005A                     	ds	2
  4129  005C                     _rtAdcValueRcHi:	
  4130  005C                     	ds	2
  4131  005E                     _rtAdcValueRcLo:	
  4132  005E                     	ds	2
  4133  0060                     _rtAdcValueRsHi:	
  4134  0060                     	ds	2
  4135  0062                     _rtAdcValueRsLo:	
  4136  0062                     	ds	2
  4137  0064                     _TMR2_InterruptHandler:	
  4138  0064                     	ds	2
  4139  0066                     _pidBbSm:	
  4140  0066                     	ds	1
  4141  0067                     _xlen:	
  4142  0067                     	ds	1
  4143  0068                     _rxtemp:	
  4144  0068                     	ds	1
  4145  0069                     _subTickerX_1s:	
  4146  0069                     	ds	1
  4147  006A                     _eusartRxCount:	
  4148  006A                     	ds	1
  4149  006B                     _Event:	
  4150  006B                     	ds	1
  4151                           
  4152                           	psect	dataBANK0
  4153  006C                     __pdataBANK0:	
  4154  006C                     _resRs:	
  4155  006C                     	ds	2
  4156  006E                     _resRc:	
  4157  006E                     	ds	2
  4158                           
  4159                           	psect	bssBANK1
  4160  00A0                     __pbssBANK1:	
  4161  00A0                     _err:	
  4162  00A0                     	ds	12
  4163  00AC                     _rsLoAvgBuf:	
  4164  00AC                     	ds	12
  4165  00B8                     _x32:	
  4166  00B8                     	ds	4
  4167  00BC                     _x1:	
  4168  00BC                     	ds	4
  4169  00C0                     _y1:	
  4170  00C0                     	ds	4
  4171  00C4                     _pwm2Ei:	
  4172  00C4                     	ds	2
  4173  00C6                     _voExpectMv:	
  4174  00C6                     	ds	2
  4175  00C8                     _PidTd:	
  4176  00C8                     	ds	2
  4177  00CA                     _PidTi:	
  4178  00CA                     	ds	2
  4179  00CC                     _PidKp:	
  4180  00CC                     	ds	2
  4181  00CE                     _globalTicker:	
  4182  00CE                     	ds	2
  4183                           
  4184                           	psect	dataBANK1
  4185  00D0                     __pdataBANK1:	
  4186  00D0                     _pidU:	
  4187  00D0                     	ds	2
  4188  00D2                     _pidpwm2_U:	
  4189  00D2                     	ds	2
  4190  00D4                     _pwm1DutyForIdrv:	
  4191  00D4                     	ds	2
  4192  00D6                     _pwm2DutyForVout:	
  4193  00D6                     	ds	2
  4194                           
  4195                           	psect	bssBANK2
  4196  0120                     __pbssBANK2:	
  4197  0120                     _modbusBuf:	
  4198  0120                     	ds	32
  4199  0140                     _eusartRxBuffer:	
  4200  0140                     	ds	32
  4201                           
  4202                           	psect	inittext
  4203  1D1F                     init_ram:	
  4204  1D1F  00FE               	movwf	126
  4205  1D20                     initloop:	
  4206  1D20  0012               	moviw fsr0++
  4207  1D21  001E               	movwi fsr1++
  4208  1D22  3001               	movlw	1
  4209  1D23  02FE               	subwf	126,f
  4210  1D24  3000               	movlw	0
  4211  1D25  3BFF               	subwfb	127,f
  4212  1D26  087F               	movf	127,w
  4213  1D27  047E               	iorwf	126,w
  4214  1D28  1903               	btfsc	3,2
  4215  1D29  3400               	retlw	0
  4216  1D2A  2D20               	goto	initloop
  4217                           
  4218                           	psect	clrtext
  4219  1D13                     clear_ram0:	
  4220                           ;	Called with FSR0 containing the base address, and
  4221                           ;	btemp/btemp+1 has the size to clear
  4222                           
  4223  1D13  0064               	clrwdt	;clear the watchdog before getting into this loop
  4224  1D14                     clrloop0:	
  4225  1D14  0180               	clrf	0	;clear RAM location pointed to by FSR
  4226  1D15  3101               	addfsr 0,1
  4227  1D16  3001               	movlw	1
  4228  1D17  02FE               	subwf	126,f
  4229  1D18  3000               	movlw	0
  4230  1D19  3BFF               	subwfb	127,f
  4231  1D1A  087F               	movf	127,w
  4232  1D1B  047E               	iorwf	126,w
  4233  1D1C  1903               	btfsc	3,2
  4234  1D1D  3400               	retlw	0	;all done for this memory range, return
  4235  1D1E  2D14               	goto	clrloop0	;have we reached the end yet?
  4236                           
  4237                           	psect	cstackCOMMON
  4238  0070                     __pcstackCOMMON:	
  4239  0070                     ?_TMR2_StartTimer:	
  4240  0070                     ?_PIN_MANAGER_Initialize:	
  4241                           ; 1 bytes @ 0x0
  4242                           
  4243  0070                     ?_OSCILLATOR_Initialize:	
  4244                           ; 1 bytes @ 0x0
  4245                           
  4246  0070                     ?_WDT_Initialize:	
  4247                           ; 1 bytes @ 0x0
  4248                           
  4249  0070                     ?_ADC1_Initialize:	
  4250                           ; 1 bytes @ 0x0
  4251                           
  4252  0070                     ?_EUSART_Initialize:	
  4253                           ; 1 bytes @ 0x0
  4254                           
  4255  0070                     ?_PWM2_Initialize:	
  4256                           ; 1 bytes @ 0x0
  4257                           
  4258  0070                     ?_PWM1_Initialize:	
  4259                           ; 1 bytes @ 0x0
  4260                           
  4261  0070                     ?_TMR2_Initialize:	
  4262                           ; 1 bytes @ 0x0
  4263                           
  4264  0070                     ?_INTERRUPT_InterruptManager:	
  4265                           ; 1 bytes @ 0x0
  4266                           
  4267  0070                     ??_INTERRUPT_InterruptManager:	
  4268                           ; 1 bytes @ 0x0
  4269                           
  4270  0070                     ?_FVR_Initialize:	
  4271                           ; 1 bytes @ 0x0
  4272                           
  4273  0070                     ?_SYSTEM_Initialize:	
  4274                           ; 1 bytes @ 0x0
  4275                           
  4276  0070                     ?_uart_received_start:	
  4277                           ; 1 bytes @ 0x0
  4278                           
  4279  0070                     ?_fvr_set_gain:	
  4280                           ; 1 bytes @ 0x0
  4281                           
  4282  0070                     ?_adc_init:	
  4283                           ; 1 bytes @ 0x0
  4284                           
  4285  0070                     ?_pid_pwm1_idrv_run:	
  4286                           ; 1 bytes @ 0x0
  4287                           
  4288  0070                     ?_pid_pwm2_vout_run:	
  4289                           ; 1 bytes @ 0x0
  4290                           
  4291  0070                     ?_my_flash_read_system_erase:	
  4292                           ; 1 bytes @ 0x0
  4293                           
  4294  0070                     ?_sys_data_save:	
  4295                           ; 1 bytes @ 0x0
  4296                           
  4297  0070                     ?_modbus_response_write_single_register:	
  4298                           ; 1 bytes @ 0x0
  4299                           
  4300  0070                     ?_modbus_response_write_mult_register:	
  4301                           ; 1 bytes @ 0x0
  4302                           
  4303  0070                     ?_modbus_response_command:	
  4304                           ; 1 bytes @ 0x0
  4305                           
  4306  0070                     ?_main:	
  4307                           ; 1 bytes @ 0x0
  4308                           
  4309  0070                     ?_sys_data_init:	
  4310                           ; 1 bytes @ 0x0
  4311                           
  4312                           
  4313                           ; 2 bytes @ 0x0
  4314  0070                     	ds	2
  4315  0072                     ?_FLASH_EraseBlock:	
  4316  0072                     ?_TMR2_SetInterruptHandler:	
  4317                           ; 1 bytes @ 0x2
  4318                           
  4319  0072                     ??_TMR2_StartTimer:	
  4320                           ; 1 bytes @ 0x2
  4321                           
  4322  0072                     ??_PIN_MANAGER_Initialize:	
  4323                           ; 1 bytes @ 0x2
  4324                           
  4325  0072                     ??_OSCILLATOR_Initialize:	
  4326                           ; 1 bytes @ 0x2
  4327                           
  4328  0072                     ??_WDT_Initialize:	
  4329                           ; 1 bytes @ 0x2
  4330                           
  4331  0072                     ??_ADC1_Initialize:	
  4332                           ; 1 bytes @ 0x2
  4333                           
  4334  0072                     ??_EUSART_Initialize:	
  4335                           ; 1 bytes @ 0x2
  4336                           
  4337  0072                     ?_m_mem_cpy_len:	
  4338                           ; 1 bytes @ 0x2
  4339                           
  4340  0072                     ??_PWM2_Initialize:	
  4341                           ; 1 bytes @ 0x2
  4342                           
  4343  0072                     ??_PWM1_Initialize:	
  4344                           ; 1 bytes @ 0x2
  4345                           
  4346  0072                     ??_FVR_Initialize:	
  4347                           ; 1 bytes @ 0x2
  4348                           
  4349  0072                     ?_uart_send_len:	
  4350                           ; 1 bytes @ 0x2
  4351                           
  4352  0072                     ??_uart_received_start:	
  4353                           ; 1 bytes @ 0x2
  4354                           
  4355  0072                     ??_fvr_set_gain:	
  4356                           ; 1 bytes @ 0x2
  4357                           
  4358  0072                     ??_adc_init:	
  4359                           ; 1 bytes @ 0x2
  4360                           
  4361  0072                     ?_my_flash_system_read:	
  4362                           ; 1 bytes @ 0x2
  4363                           
  4364  0072                     ?_get_idrv_pwm1_duty:	
  4365                           ; 1 bytes @ 0x2
  4366                           
  4367  0072                     ?_get_vout_pwm2_duty:	
  4368                           ; 2 bytes @ 0x2
  4369                           
  4370  0072                     ?_my_flash_system_write:	
  4371                           ; 2 bytes @ 0x2
  4372                           
  4373  0072                     ?_getRegisterVal:	
  4374                           ; 2 bytes @ 0x2
  4375                           
  4376  0072                     ?_crc_sum:	
  4377                           ; 2 bytes @ 0x2
  4378                           
  4379  0072                     ?___wmul:	
  4380                           ; 2 bytes @ 0x2
  4381                           
  4382  0072                     ?___awdiv:	
  4383                           ; 2 bytes @ 0x2
  4384                           
  4385  0072                     ?___lwdiv:	
  4386                           ; 2 bytes @ 0x2
  4387                           
  4388  0072                     ?___lmul:	
  4389                           ; 2 bytes @ 0x2
  4390                           
  4391  0072                     ?___lldiv:	
  4392                           ; 4 bytes @ 0x2
  4393                           
  4394  0072                     PIN_MANAGER_Initialize@state:	
  4395                           ; 4 bytes @ 0x2
  4396                           
  4397  0072                     uart_send_len@len:	
  4398                           ; 1 bytes @ 0x2
  4399                           
  4400  0072                     FLASH_EraseBlock@startAddr:	
  4401                           ; 1 bytes @ 0x2
  4402                           
  4403  0072                     TMR2_SetInterruptHandler@InterruptHandler:	
  4404                           ; 2 bytes @ 0x2
  4405                           
  4406  0072                     my_flash_system_read@buf:	
  4407                           ; 2 bytes @ 0x2
  4408                           
  4409  0072                     my_flash_system_write@buf:	
  4410                           ; 2 bytes @ 0x2
  4411                           
  4412  0072                     getRegisterVal@addr:	
  4413                           ; 2 bytes @ 0x2
  4414                           
  4415  0072                     m_mem_cpy_len@d:	
  4416                           ; 2 bytes @ 0x2
  4417                           
  4418  0072                     crc_sum@buf:	
  4419                           ; 2 bytes @ 0x2
  4420                           
  4421  0072                     ___wmul@multiplier:	
  4422                           ; 2 bytes @ 0x2
  4423                           
  4424  0072                     ___awdiv@divisor:	
  4425                           ; 2 bytes @ 0x2
  4426                           
  4427  0072                     ___lwdiv@divisor:	
  4428                           ; 2 bytes @ 0x2
  4429                           
  4430  0072                     ___lmul@multiplier:	
  4431                           ; 2 bytes @ 0x2
  4432                           
  4433  0072                     ___lldiv@divisor:	
  4434                           ; 4 bytes @ 0x2
  4435                           
  4436                           
  4437                           ; 4 bytes @ 0x2
  4438  0072                     	ds	1
  4439  0073                     ??_uart_send_len:	
  4440  0073                     fvr_set_gain@t8:	
  4441                           ; 1 bytes @ 0x3
  4442                           
  4443  0073                     adc_init@ch:	
  4444                           ; 1 bytes @ 0x3
  4445                           
  4446                           
  4447                           ; 1 bytes @ 0x3
  4448  0073                     	ds	1
  4449  0074                     ??_FLASH_EraseBlock:	
  4450  0074                     ??_TMR2_SetInterruptHandler:	
  4451                           ; 1 bytes @ 0x4
  4452                           
  4453  0074                     ??_TMR2_Initialize:	
  4454                           ; 1 bytes @ 0x4
  4455                           
  4456  0074                     ??_SYSTEM_Initialize:	
  4457                           ; 1 bytes @ 0x4
  4458                           
  4459  0074                     ??_get_idrv_pwm1_duty:	
  4460                           ; 1 bytes @ 0x4
  4461                           
  4462  0074                     ??_get_vout_pwm2_duty:	
  4463                           ; 1 bytes @ 0x4
  4464                           
  4465  0074                     FLASH_EraseBlock@GIEBitValue:	
  4466                           ; 1 bytes @ 0x4
  4467                           
  4468  0074                     uart_send_len@i:	
  4469                           ; 1 bytes @ 0x4
  4470                           
  4471  0074                     fvr_set_gain@g:	
  4472                           ; 1 bytes @ 0x4
  4473                           
  4474  0074                     getRegisterVal@tempData:	
  4475                           ; 1 bytes @ 0x4
  4476                           
  4477  0074                     my_flash_system_read@len:	
  4478                           ; 1 bytes @ 0x4
  4479                           
  4480  0074                     my_flash_system_write@len:	
  4481                           ; 2 bytes @ 0x4
  4482                           
  4483  0074                     m_mem_cpy_len@s:	
  4484                           ; 2 bytes @ 0x4
  4485                           
  4486  0074                     crc_sum@len:	
  4487                           ; 2 bytes @ 0x4
  4488                           
  4489  0074                     ___wmul@multiplicand:	
  4490                           ; 2 bytes @ 0x4
  4491                           
  4492  0074                     ___awdiv@dividend:	
  4493                           ; 2 bytes @ 0x4
  4494                           
  4495  0074                     ___lwdiv@dividend:	
  4496                           ; 2 bytes @ 0x4
  4497                           
  4498                           
  4499                           ; 2 bytes @ 0x4
  4500  0074                     	ds	1
  4501  0075                     ??_my_flash_read_system_erase:	
  4502  0075                     ??_getRegisterVal:	
  4503                           ; 1 bytes @ 0x5
  4504                           
  4505  0075                     ?_adc_sample:	
  4506                           ; 1 bytes @ 0x5
  4507                           
  4508  0075                     uart_send_len@buf:	
  4509                           ; 2 bytes @ 0x5
  4510                           
  4511  0075                     adc_sample@gfvr:	
  4512                           ; 1 bytes @ 0x5
  4513                           
  4514                           
  4515                           ; 1 bytes @ 0x5
  4516  0075                     	ds	1
  4517  0076                     ??_my_flash_system_read:	
  4518  0076                     ??_my_flash_system_write:	
  4519                           ; 1 bytes @ 0x6
  4520                           
  4521  0076                     ??_crc_sum:	
  4522                           ; 1 bytes @ 0x6
  4523                           
  4524  0076                     ??___wmul:	
  4525                           ; 1 bytes @ 0x6
  4526                           
  4527  0076                     ??___awdiv:	
  4528                           ; 1 bytes @ 0x6
  4529                           
  4530  0076                     ??___lwdiv:	
  4531                           ; 1 bytes @ 0x6
  4532                           
  4533  0076                     adc_sample@num:	
  4534                           ; 1 bytes @ 0x6
  4535                           
  4536  0076                     get_idrv_pwm1_duty@t16:	
  4537                           ; 1 bytes @ 0x6
  4538                           
  4539  0076                     get_vout_pwm2_duty@t16:	
  4540                           ; 2 bytes @ 0x6
  4541                           
  4542  0076                     m_mem_cpy_len@len:	
  4543                           ; 2 bytes @ 0x6
  4544                           
  4545  0076                     ___wmul@product:	
  4546                           ; 2 bytes @ 0x6
  4547                           
  4548  0076                     ___lmul@multiplicand:	
  4549                           ; 2 bytes @ 0x6
  4550                           
  4551  0076                     ___lldiv@dividend:	
  4552                           ; 4 bytes @ 0x6
  4553                           
  4554                           
  4555                           ; 4 bytes @ 0x6
  4556  0076                     	ds	1
  4557  0077                     ??_adc_sample:	
  4558  0077                     ___lwdiv@quotient:	
  4559                           ; 1 bytes @ 0x7
  4560                           
  4561                           
  4562                           ; 2 bytes @ 0x7
  4563  0077                     	ds	1
  4564  0078                     ??_m_mem_cpy_len:	
  4565  0078                     ?_set_idrv_pwm1_duty:	
  4566                           ; 1 bytes @ 0x8
  4567                           
  4568  0078                     ?_set_vout_pwm2_duty:	
  4569                           ; 1 bytes @ 0x8
  4570                           
  4571  0078                     set_idrv_pwm1_duty@duty:	
  4572                           ; 1 bytes @ 0x8
  4573                           
  4574  0078                     set_vout_pwm2_duty@duty:	
  4575                           ; 2 bytes @ 0x8
  4576                           
  4577  0078                     crc_append@crc:	
  4578                           ; 2 bytes @ 0x8
  4579                           
  4580                           
  4581                           ; 2 bytes @ 0x8
  4582  0078                     	ds	1
  4583  0079                     ___lwdiv@counter:	
  4584                           
  4585                           ; 1 bytes @ 0x9
  4586  0079                     	ds	1
  4587  007A                     ??_set_idrv_pwm1_duty:	
  4588  007A                     ??_set_vout_pwm2_duty:	
  4589                           ; 1 bytes @ 0xA
  4590                           
  4591  007A                     ??_sys_data_save:	
  4592                           ; 1 bytes @ 0xA
  4593                           
  4594  007A                     ??___lmul:	
  4595                           ; 1 bytes @ 0xA
  4596                           
  4597                           
  4598                           	psect	cstackBANK0
  4599  0020                     __pcstackBANK0:	
  4600                           ; 1 bytes @ 0xA
  4601                           
  4602  0020                     ??___lldiv:	
  4603  0020                     adc_sample@ch:	
  4604                           ; 1 bytes @ 0x0
  4605                           
  4606  0020                     my_flash_system_read@GIEBitValue:	
  4607                           ; 1 bytes @ 0x0
  4608                           
  4609  0020                     ___awdiv@counter:	
  4610                           ; 1 bytes @ 0x0
  4611                           
  4612  0020                     set_idrv_pwm1_duty@t16:	
  4613                           ; 1 bytes @ 0x0
  4614                           
  4615  0020                     set_vout_pwm2_duty@t16:	
  4616                           ; 2 bytes @ 0x0
  4617                           
  4618  0020                     my_flash_system_write@j:	
  4619                           ; 2 bytes @ 0x0
  4620                           
  4621  0020                     getRegisterVal@t16:	
  4622                           ; 2 bytes @ 0x0
  4623                           
  4624  0020                     crc_sum@j:	
  4625                           ; 2 bytes @ 0x0
  4626                           
  4627  0020                     ___lmul@product:	
  4628                           ; 2 bytes @ 0x0
  4629                           
  4630                           
  4631                           ; 4 bytes @ 0x0
  4632  0020                     	ds	1
  4633  0021                     ___awdiv@sign:	
  4634  0021                     adc_sample@i:	
  4635                           ; 1 bytes @ 0x1
  4636                           
  4637  0021                     my_flash_system_read@flashAddr:	
  4638                           ; 2 bytes @ 0x1
  4639                           
  4640  0021                     ___lldiv@quotient:	
  4641                           ; 2 bytes @ 0x1
  4642                           
  4643                           
  4644                           ; 4 bytes @ 0x1
  4645  0021                     	ds	1
  4646  0022                     my_flash_system_write@GIEBitValue:	
  4647  0022                     getRegisterVal@tempAddr:	
  4648                           ; 1 bytes @ 0x2
  4649                           
  4650  0022                     crc_sum@i:	
  4651                           ; 1 bytes @ 0x2
  4652                           
  4653  0022                     ___awdiv@quotient:	
  4654                           ; 2 bytes @ 0x2
  4655                           
  4656                           
  4657                           ; 2 bytes @ 0x2
  4658  0022                     	ds	1
  4659  0023                     adc_sample@ret:	
  4660  0023                     my_flash_system_read@i:	
  4661                           ; 2 bytes @ 0x3
  4662                           
  4663  0023                     my_flash_system_write@blocNum:	
  4664                           ; 2 bytes @ 0x3
  4665                           
  4666                           
  4667                           ; 2 bytes @ 0x3
  4668  0023                     	ds	1
  4669  0024                     ??_pid_pwm2_vout_run:	
  4670  0024                     ?___aldiv:	
  4671                           ; 1 bytes @ 0x4
  4672                           
  4673  0024                     crc_sum@crc:	
  4674                           ; 4 bytes @ 0x4
  4675                           
  4676  0024                     ___aldiv@divisor:	
  4677                           ; 2 bytes @ 0x4
  4678                           
  4679                           
  4680                           ; 4 bytes @ 0x4
  4681  0024                     	ds	1
  4682  0025                     ___lldiv@counter:	
  4683  0025                     adc_sample@t16:	
  4684                           ; 1 bytes @ 0x5
  4685                           
  4686  0025                     my_flash_system_write@loc:	
  4687                           ; 2 bytes @ 0x5
  4688                           
  4689                           
  4690                           ; 2 bytes @ 0x5
  4691  0025                     	ds	1
  4692  0026                     ?_crc_append:	
  4693  0026                     ?_crc_verify:	
  4694                           ; 1 bytes @ 0x6
  4695                           
  4696  0026                     ?_calc_rs_lo_avg:	
  4697                           ; 1 bytes @ 0x6
  4698                           
  4699  0026                     ?_calc_temp_rs:	
  4700                           ; 2 bytes @ 0x6
  4701                           
  4702  0026                     ?_calc_temp_rc:	
  4703                           ; 4 bytes @ 0x6
  4704                           
  4705  0026                     pid_pwm2_vout_run@__ei:	
  4706                           ; 4 bytes @ 0x6
  4707                           
  4708  0026                     calc_rs_lo_avg@x:	
  4709                           ; 2 bytes @ 0x6
  4710                           
  4711  0026                     crc_verify@message:	
  4712                           ; 2 bytes @ 0x6
  4713                           
  4714  0026                     crc_append@message:	
  4715                           ; 2 bytes @ 0x6
  4716                           
  4717                           
  4718                           ; 2 bytes @ 0x6
  4719  0026                     	ds	1
  4720  0027                     my_flash_system_write@flashAddr:	
  4721                           
  4722                           ; 2 bytes @ 0x7
  4723  0027                     	ds	1
  4724  0028                     ??_calc_rs_lo_avg:	
  4725  0028                     pid_pwm2_vout_run@t16:	
  4726                           ; 1 bytes @ 0x8
  4727                           
  4728  0028                     crc_verify@n:	
  4729                           ; 2 bytes @ 0x8
  4730                           
  4731  0028                     crc_append@n:	
  4732                           ; 2 bytes @ 0x8
  4733                           
  4734  0028                     ___aldiv@dividend:	
  4735                           ; 2 bytes @ 0x8
  4736                           
  4737                           
  4738                           ; 4 bytes @ 0x8
  4739  0028                     	ds	1
  4740  0029                     my_flash_system_write@i:	
  4741                           
  4742                           ; 1 bytes @ 0x9
  4743  0029                     	ds	1
  4744  002A                     ??_crc_append:	
  4745  002A                     ??_crc_verify:	
  4746                           ; 1 bytes @ 0xA
  4747                           
  4748  002A                     ??_calc_temp_rs:	
  4749                           ; 1 bytes @ 0xA
  4750                           
  4751  002A                     ??_calc_temp_rc:	
  4752                           ; 1 bytes @ 0xA
  4753                           
  4754  002A                     calc_rs_lo_avg@t32:	
  4755                           ; 1 bytes @ 0xA
  4756                           
  4757                           
  4758                           ; 4 bytes @ 0xA
  4759  002A                     	ds	2
  4760  002C                     ??___aldiv:	
  4761  002C                     crc_verify@crccal:	
  4762                           ; 1 bytes @ 0xC
  4763                           
  4764                           
  4765                           ; 2 bytes @ 0xC
  4766  002C                     	ds	1
  4767  002D                     ___aldiv@counter:	
  4768                           
  4769                           ; 1 bytes @ 0xD
  4770  002D                     	ds	1
  4771  002E                     calc_rs_lo_avg@i:	
  4772  002E                     ___aldiv@sign:	
  4773                           ; 1 bytes @ 0xE
  4774                           
  4775  002E                     crc_verify@expected:	
  4776                           ; 1 bytes @ 0xE
  4777                           
  4778                           
  4779                           ; 2 bytes @ 0xE
  4780  002E                     	ds	1
  4781  002F                     ?_modbus_response_illgeal_function:	
  4782  002F                     ??_modbus_response_write_single_register:	
  4783                           ; 1 bytes @ 0xF
  4784                           
  4785  002F                     ??_modbus_response_write_mult_register:	
  4786                           ; 1 bytes @ 0xF
  4787                           
  4788  002F                     ??_modbus_response_command:	
  4789                           ; 1 bytes @ 0xF
  4790                           
  4791  002F                     modbus_response_illgeal_function@errcode:	
  4792                           ; 1 bytes @ 0xF
  4793                           
  4794  002F                     ___aldiv@quotient:	
  4795                           ; 1 bytes @ 0xF
  4796                           
  4797                           
  4798                           ; 4 bytes @ 0xF
  4799  002F                     	ds	1
  4800  0030                     ??_sys_data_init:	
  4801  0030                     ??_modbus_response_illgeal_function:	
  4802                           ; 1 bytes @ 0x10
  4803                           
  4804  0030                     modbus_response_write_mult_register@startAddr:	
  4805                           ; 1 bytes @ 0x10
  4806                           
  4807                           
  4808                           ; 1 bytes @ 0x10
  4809  0030                     	ds	1
  4810  0031                     modbus_response_illgeal_function@buf:	
  4811  0031                     modbus_response_write_mult_register@len:	
  4812                           ; 1 bytes @ 0x11
  4813                           
  4814  0031                     modbus_response_command@tmpAddr:	
  4815                           ; 1 bytes @ 0x11
  4816                           
  4817                           
  4818                           ; 2 bytes @ 0x11
  4819  0031                     	ds	1
  4820  0032                     modbus_response_illgeal_function@pmdbs:	
  4821  0032                     modbus_response_write_mult_register@rbuf:	
  4822                           ; 1 bytes @ 0x12
  4823                           
  4824                           
  4825                           ; 1 bytes @ 0x12
  4826  0032                     	ds	1
  4827  0033                     ??_pid_pwm1_idrv_run:	
  4828  0033                     ?_calc_expect_vout_adc_value:	
  4829                           ; 1 bytes @ 0x13
  4830                           
  4831  0033                     modbus_response_write_single_register@fiSave:	
  4832                           ; 2 bytes @ 0x13
  4833                           
  4834  0033                     modbus_response_write_mult_register@stb:	
  4835                           ; 1 bytes @ 0x13
  4836                           
  4837  0033                     calc_expect_vout_adc_value@x:	
  4838                           ; 1 bytes @ 0x13
  4839                           
  4840  0033                     modbus_response_command@startAddr:	
  4841                           ; 2 bytes @ 0x13
  4842                           
  4843                           
  4844                           ; 2 bytes @ 0x13
  4845  0033                     	ds	1
  4846  0034                     modbus_response_write_single_register@t16:	
  4847                           
  4848                           ; 2 bytes @ 0x14
  4849  0034                     	ds	1
  4850  0035                     ??_calc_expect_vout_adc_value:	
  4851  0035                     modbus_response_command@i:	
  4852                           ; 1 bytes @ 0x15
  4853                           
  4854                           
  4855                           ; 1 bytes @ 0x15
  4856  0035                     	ds	1
  4857  0036                     modbus_response_write_single_register@i:	
  4858  0036                     modbus_response_command@pmdbs:	
  4859                           ; 1 bytes @ 0x16
  4860                           
  4861  0036                     sys_data_init@ret:	
  4862                           ; 1 bytes @ 0x16
  4863                           
  4864                           
  4865                           ; 2 bytes @ 0x16
  4866  0036                     	ds	1
  4867  0037                     modbus_response_write_single_register@pmdbs:	
  4868  0037                     modbus_response_command@len:	
  4869                           ; 1 bytes @ 0x17
  4870                           
  4871                           
  4872                           ; 1 bytes @ 0x17
  4873  0037                     	ds	1
  4874  0038                     modbus_response_write_single_register@rbuf:	
  4875  0038                     modbus_response_command@rbuf:	
  4876                           ; 1 bytes @ 0x18
  4877                           
  4878  0038                     sys_data_init@i:	
  4879                           ; 1 bytes @ 0x18
  4880                           
  4881                           
  4882                           ; 2 bytes @ 0x18
  4883  0038                     	ds	1
  4884  0039                     modbus_response_write_single_register@startAddr:	
  4885  0039                     modbus_response_command@tempData:	
  4886                           ; 2 bytes @ 0x19
  4887                           
  4888                           
  4889                           ; 2 bytes @ 0x19
  4890  0039                     	ds	2
  4891  003B                     ?_modbus_response_process:	
  4892  003B                     modbus_response_process@rlen:	
  4893                           ; 1 bytes @ 0x1B
  4894                           
  4895  003B                     pid_pwm1_idrv_run@t32:	
  4896                           ; 2 bytes @ 0x1B
  4897                           
  4898                           
  4899                           ; 4 bytes @ 0x1B
  4900  003B                     	ds	2
  4901  003D                     ??_modbus_response_process:	
  4902                           
  4903                           ; 1 bytes @ 0x1D
  4904  003D                     	ds	1
  4905  003E                     modbus_response_process@resp:	
  4906                           
  4907                           ; 1 bytes @ 0x1E
  4908  003E                     	ds	1
  4909  003F                     modbus_response_process@pmdbs:	
  4910                           
  4911                           ; 1 bytes @ 0x1F
  4912  003F                     	ds	1
  4913  0040                     modbus_response_process@rbuf:	
  4914                           
  4915                           ; 1 bytes @ 0x20
  4916  0040                     	ds	3
  4917  0043                     calc_expect_vout_adc_value@t32:	
  4918                           
  4919                           ; 4 bytes @ 0x23
  4920  0043                     	ds	4
  4921  0047                     calc_expect_vout_adc_value@i:	
  4922                           
  4923                           ; 1 bytes @ 0x27
  4924  0047                     	ds	1
  4925  0048                     ??_main:	
  4926                           
  4927                           ; 1 bytes @ 0x28
  4928  0048                     	ds	2
  4929                           
  4930                           	psect	maintext
  4931  0D79                     __pmaintext:	
  4932 ;;
  4933 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4934 ;;
  4935 ;; *************** function _main *****************
  4936 ;; Defined at:
  4937 ;;		line 17 in file "src/app/main.c"
  4938 ;; Parameters:    Size  Location     Type
  4939 ;;		None
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;		None
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  1    wreg      void 
  4944 ;; Registers used:
  4945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4946 ;; Tracked objects:
  4947 ;;		On entry : B1F/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4953 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4954 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4955 ;;Total ram usage:        2 bytes
  4956 ;; Hardware stack levels required when called:    6
  4957 ;; This function calls:
  4958 ;;		_SYSTEM_Initialize
  4959 ;;		_adc_sample
  4960 ;;		_calc_expect_vout_adc_value
  4961 ;;		_calc_rs_lo_avg
  4962 ;;		_calc_temp_rc
  4963 ;;		_calc_temp_rs
  4964 ;;		_m_mem_cpy_len
  4965 ;;		_modbus_response_process
  4966 ;;		_pid_pwm1_idrv_run
  4967 ;;		_pid_pwm2_vout_run
  4968 ;;		_sys_data_init
  4969 ;;		_uart_received_start
  4970 ;;		_uart_send_len
  4971 ;; This function is called by:
  4972 ;;		Startup code after reset
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           
  4977                           ;psect for function _main
  4978  0D79                     _main:	
  4979                           
  4980                           ;main.c: 19: __nop();
  4981                           
  4982                           ;incstack = 0
  4983                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4984  0D79  0000               	nop
  4985                           
  4986                           ;main.c: 20: isRunInBoot=0xaa;
  4987  0D7A  30AA               	movlw	170
  4988  0D7B  0020               	movlb	0	; select bank0
  4989  0D7C  00C8               	movwf	??_main
  4990  0D7D  0848               	movf	??_main,w
  4991  0D7E  003F               	movlb	31	; select bank31
  4992  0D7F  00FF               	movwf	127	;volatile
  4993                           
  4994                           ;main.c: 21: isRunInBoot=isRunInBoot;
  4995  0D80  087F               	movf	127,w	;volatile
  4996  0D81  0020               	movlb	0	; select bank0
  4997  0D82  00C8               	movwf	??_main
  4998  0D83  0848               	movf	??_main,w
  4999  0D84  003F               	movlb	31	; select bank31
  5000  0D85  00FF               	movwf	127	;volatile
  5001                           
  5002                           ;main.c: 22: SYSTEM_Initialize();
  5003  0D86  319D  25E0  318D   	fcall	_SYSTEM_Initialize
  5004                           
  5005                           ;main.c: 23: do{ (INTCONbits.GIE = 1); (INTCONbits.PEIE = 1); }while(0);;
  5006  0D89  178B               	bsf	11,7	;volatile
  5007  0D8A  170B               	bsf	11,6	;volatile
  5008                           
  5009                           ;main.c: 26: TXSTAbits.TXEN=0;
  5010  0D8B  0023               	movlb	3	; select bank3
  5011  0D8C  129E               	bcf	30,5	;volatile
  5012                           
  5013                           ;main.c: 27: sys_data_init();
  5014  0D8D  3195  25B0  318D   	fcall	_sys_data_init
  5015                           
  5016                           ;main.c: 30: modbusBuf[0]=0x55;
  5017  0D90  3055               	movlw	85
  5018  0D91  0020               	movlb	0	; select bank0
  5019  0D92  00C8               	movwf	??_main
  5020  0D93  0848               	movf	??_main,w
  5021  0D94  0022               	movlb	2	; select bank2
  5022  0D95  00A0               	movwf	_modbusBuf^(0+256)
  5023                           
  5024                           ;main.c: 31: modbusBuf[1]=0xaa;
  5025  0D96  30AA               	movlw	170
  5026  0D97  0020               	movlb	0	; select bank0
  5027  0D98  00C8               	movwf	??_main
  5028  0D99  0848               	movf	??_main,w
  5029  0D9A  0022               	movlb	2	; select bank2
  5030  0D9B  00A1               	movwf	(_modbusBuf^(0+256)+1)
  5031                           
  5032                           ;main.c: 32: uart_send_len(modbusBuf,2);
  5033  0D9C  3002               	movlw	2
  5034  0D9D  0020               	movlb	0	; select bank0
  5035  0D9E  00C8               	movwf	??_main
  5036  0D9F  0848               	movf	??_main,w
  5037  0DA0  00F2               	movwf	uart_send_len@len
  5038  0DA1  3020               	movlw	(low (_modbusBuf| (0+256)))& (0+255)
  5039  0DA2  319E  2689  318D   	fcall	_uart_send_len
  5040  0DA5                     l5148:	
  5041                           ;main.c: 33: while (1){
  5042                           
  5043                           
  5044                           ;main.c: 34: if(Event & (1<<2)){
  5045  0DA5  0020               	movlb	0	; select bank0
  5046  0DA6  1D6B               	btfss	_Event,2	;volatile
  5047  0DA7  2E47               	goto	l5178
  5048                           
  5049                           ;main.c: 35: Event &= ~(1<<2);
  5050  0DA8  30FB               	movlw	251
  5051  0DA9  00C8               	movwf	??_main
  5052  0DAA  0848               	movf	??_main,w
  5053  0DAB  05EB               	andwf	_Event,f	;volatile
  5054                           
  5055                           ;main.c: 37: rtAdcValueRsLo=adc_sample(channel_AN6,1,32);
  5056  0DAC  01F5               	clrf	adc_sample@gfvr
  5057  0DAD  0AF5               	incf	adc_sample@gfvr,f
  5058  0DAE  3020               	movlw	32
  5059  0DAF  00C8               	movwf	??_main
  5060  0DB0  0848               	movf	??_main,w
  5061  0DB1  00F6               	movwf	adc_sample@num
  5062  0DB2  3006               	movlw	6
  5063  0DB3  3192  22E0  318D   	fcall	_adc_sample
  5064  0DB6  0876               	movf	?_adc_sample+1,w
  5065  0DB7  0020               	movlb	0	; select bank0
  5066  0DB8  00E3               	movwf	_rtAdcValueRsLo+1
  5067  0DB9  0875               	movf	?_adc_sample,w
  5068  0DBA  00E2               	movwf	_rtAdcValueRsLo
  5069                           
  5070                           ;main.c: 39: rtAdcValueRsHi=adc_sample(channel_AN5,3,32);
  5071  0DBB  3003               	movlw	3
  5072  0DBC  00C8               	movwf	??_main
  5073  0DBD  0848               	movf	??_main,w
  5074  0DBE  00F5               	movwf	adc_sample@gfvr
  5075  0DBF  3020               	movlw	32
  5076  0DC0  00C9               	movwf	??_main+1
  5077  0DC1  0849               	movf	??_main+1,w
  5078  0DC2  00F6               	movwf	adc_sample@num
  5079  0DC3  3005               	movlw	5
  5080  0DC4  3192  22E0  318D   	fcall	_adc_sample
  5081  0DC7  0876               	movf	?_adc_sample+1,w
  5082  0DC8  0020               	movlb	0	; select bank0
  5083  0DC9  00E1               	movwf	_rtAdcValueRsHi+1
  5084  0DCA  0875               	movf	?_adc_sample,w
  5085  0DCB  00E0               	movwf	_rtAdcValueRsHi
  5086                           
  5087                           ;main.c: 42: rtAdcValueRcLo=adc_sample(channel_AN4,3,32);
  5088  0DCC  3003               	movlw	3
  5089  0DCD  00C8               	movwf	??_main
  5090  0DCE  0848               	movf	??_main,w
  5091  0DCF  00F5               	movwf	adc_sample@gfvr
  5092  0DD0  3020               	movlw	32
  5093  0DD1  00C9               	movwf	??_main+1
  5094  0DD2  0849               	movf	??_main+1,w
  5095  0DD3  00F6               	movwf	adc_sample@num
  5096  0DD4  3004               	movlw	4
  5097  0DD5  3192  22E0  318D   	fcall	_adc_sample
  5098  0DD8  0876               	movf	?_adc_sample+1,w
  5099  0DD9  0020               	movlb	0	; select bank0
  5100  0DDA  00DF               	movwf	_rtAdcValueRcLo+1
  5101  0DDB  0875               	movf	?_adc_sample,w
  5102  0DDC  00DE               	movwf	_rtAdcValueRcLo
  5103                           
  5104                           ;main.c: 43: rtAdcValueRcLo>>=1;
  5105  0DDD  3001               	movlw	1
  5106  0DDE                     u4775:	
  5107  0DDE  36DF               	lsrf	_rtAdcValueRcLo+1,f
  5108  0DDF  0CDE               	rrf	_rtAdcValueRcLo,f
  5109  0DE0  0B89               	decfsz	9,f
  5110  0DE1  2DDE               	goto	u4775
  5111                           
  5112                           ;main.c: 44: rtAdcValueRcHi=adc_sample(channel_AN2,3,32);
  5113  0DE2  3003               	movlw	3
  5114  0DE3  00C8               	movwf	??_main
  5115  0DE4  0848               	movf	??_main,w
  5116  0DE5  00F5               	movwf	adc_sample@gfvr
  5117  0DE6  3020               	movlw	32
  5118  0DE7  00C9               	movwf	??_main+1
  5119  0DE8  0849               	movf	??_main+1,w
  5120  0DE9  00F6               	movwf	adc_sample@num
  5121  0DEA  3002               	movlw	2
  5122  0DEB  3192  22E0  318D   	fcall	_adc_sample
  5123  0DEE  0876               	movf	?_adc_sample+1,w
  5124  0DEF  0020               	movlb	0	; select bank0
  5125  0DF0  00DD               	movwf	_rtAdcValueRcHi+1
  5126  0DF1  0875               	movf	?_adc_sample,w
  5127  0DF2  00DC               	movwf	_rtAdcValueRcHi
  5128                           
  5129                           ;main.c: 45: rtAdcValueRcHi>>=1;
  5130  0DF3  3001               	movlw	1
  5131  0DF4                     u4785:	
  5132  0DF4  36DD               	lsrf	_rtAdcValueRcHi+1,f
  5133  0DF5  0CDC               	rrf	_rtAdcValueRcHi,f
  5134  0DF6  0B89               	decfsz	9,f
  5135  0DF7  2DF4               	goto	u4785
  5136                           
  5137                           ;main.c: 47: rtAdcValueVoFb=adc_sample(channel_AN7,3,32);
  5138  0DF8  3003               	movlw	3
  5139  0DF9  00C8               	movwf	??_main
  5140  0DFA  0848               	movf	??_main,w
  5141  0DFB  00F5               	movwf	adc_sample@gfvr
  5142  0DFC  3020               	movlw	32
  5143  0DFD  00C9               	movwf	??_main+1
  5144  0DFE  0849               	movf	??_main+1,w
  5145  0DFF  00F6               	movwf	adc_sample@num
  5146  0E00  3007               	movlw	7
  5147  0E01  3192  22E0  318D   	fcall	_adc_sample
  5148  0E04  0876               	movf	?_adc_sample+1,w
  5149  0E05  0020               	movlb	0	; select bank0
  5150  0E06  00DB               	movwf	_rtAdcValueVoFb+1
  5151  0E07  0875               	movf	?_adc_sample,w
  5152  0E08  00DA               	movwf	_rtAdcValueVoFb
  5153                           
  5154                           ;main.c: 48: rtAdcValueVoFb>>=1;
  5155  0E09  3001               	movlw	1
  5156  0E0A                     u4795:	
  5157  0E0A  36DB               	lsrf	_rtAdcValueVoFb+1,f
  5158  0E0B  0CDA               	rrf	_rtAdcValueVoFb,f
  5159  0E0C  0B89               	decfsz	9,f
  5160  0E0D  2E0A               	goto	u4795
  5161                           
  5162                           ;main.c: 50: resRc=calc_temp_rc();
  5163  0E0E  3197  2727  318D   	fcall	_calc_temp_rc
  5164  0E11  0020               	movlb	0	; select bank0
  5165  0E12  0827               	movf	?_calc_temp_rc+1,w
  5166  0E13  00EF               	movwf	_resRc+1
  5167  0E14  0826               	movf	?_calc_temp_rc,w
  5168  0E15  00EE               	movwf	_resRc
  5169                           
  5170                           ;main.c: 51: resRs=calc_temp_rs();
  5171  0E16  3195  2520  318D   	fcall	_calc_temp_rs
  5172  0E19  0020               	movlb	0	; select bank0
  5173  0E1A  0827               	movf	?_calc_temp_rs+1,w
  5174  0E1B  00ED               	movwf	_resRs+1
  5175  0E1C  0826               	movf	?_calc_temp_rs,w
  5176  0E1D  00EC               	movwf	_resRs
  5177                           
  5178                           ;main.c: 53: pid_pwm1_idrv_run();
  5179  0E1E  318A  22AF  318D   	fcall	_pid_pwm1_idrv_run
  5180                           
  5181                           ;main.c: 54: rsLoAvg=calc_rs_lo_avg(rtAdcValueRsLo);
  5182  0E21  0020               	movlb	0	; select bank0
  5183  0E22  0863               	movf	_rtAdcValueRsLo+1,w
  5184  0E23  00A7               	movwf	calc_rs_lo_avg@x+1
  5185  0E24  0862               	movf	_rtAdcValueRsLo,w
  5186  0E25  00A6               	movwf	calc_rs_lo_avg@x
  5187  0E26  3193  233D  318D   	fcall	_calc_rs_lo_avg
  5188  0E29  0020               	movlb	0	; select bank0
  5189  0E2A  0827               	movf	?_calc_rs_lo_avg+1,w
  5190  0E2B  00D7               	movwf	_rsLoAvg+1
  5191  0E2C  0826               	movf	?_calc_rs_lo_avg,w
  5192  0E2D  00D6               	movwf	_rsLoAvg
  5193                           
  5194                           ;main.c: 55: voExpectMv=calc_expect_vout_adc_value(rsLoAvg);
  5195  0E2E  0857               	movf	_rsLoAvg+1,w
  5196  0E2F  00B4               	movwf	calc_expect_vout_adc_value@x+1
  5197  0E30  0856               	movf	_rsLoAvg,w
  5198  0E31  00B3               	movwf	calc_expect_vout_adc_value@x
  5199  0E32  3188  20BB  318D   	fcall	_calc_expect_vout_adc_value
  5200  0E35  0020               	movlb	0	; select bank0
  5201  0E36  0834               	movf	?_calc_expect_vout_adc_value+1,w
  5202  0E37  0021               	movlb	1	; select bank1
  5203  0E38  00C7               	movwf	(_voExpectMv+1)^(0+128)
  5204  0E39  0020               	movlb	0	; select bank0
  5205  0E3A  0833               	movf	?_calc_expect_vout_adc_value,w
  5206  0E3B  0021               	movlb	1	; select bank1
  5207  0E3C  00C6               	movwf	_voExpectMv^(0+128)
  5208                           
  5209                           ;main.c: 56: voExpectAdcValue=(voExpectMv<<1);
  5210  0E3D  3546               	lslf	_voExpectMv^(0+128),w
  5211  0E3E  0020               	movlb	0	; select bank0
  5212  0E3F  00D8               	movwf	_voExpectAdcValue
  5213  0E40  0021               	movlb	1	; select bank1
  5214  0E41  0D47               	rlf	(_voExpectMv+1)^(0+128),w
  5215  0E42  0020               	movlb	0	; select bank0
  5216  0E43  00D9               	movwf	_voExpectAdcValue+1
  5217                           
  5218                           ;main.c: 57: pid_pwm2_vout_run();
  5219  0E44  318F  276E  318D   	fcall	_pid_pwm2_vout_run
  5220  0E47                     l5178:	
  5221                           
  5222                           ;main.c: 59: }
  5223                           ;main.c: 61: if(Event & (1<<3)){
  5224  0E47  0020               	movlb	0	; select bank0
  5225  0E48  1DEB               	btfss	_Event,3	;volatile
  5226  0E49  2E4E               	goto	l5182
  5227                           
  5228                           ;main.c: 62: Event &= ~(1<<3);
  5229  0E4A  30F7               	movlw	247
  5230  0E4B  00C8               	movwf	??_main
  5231  0E4C  0848               	movf	??_main,w
  5232  0E4D  05EB               	andwf	_Event,f	;volatile
  5233  0E4E                     l5182:	
  5234                           
  5235                           ;main.c: 104: }
  5236                           ;main.c: 106: if(Event & (1<<0)){
  5237  0E4E  1C6B               	btfss	_Event,0	;volatile
  5238  0E4F  2E78               	goto	l5192
  5239                           
  5240                           ;main.c: 107: Event &= ~ (1<<0);
  5241  0E50  30FE               	movlw	254
  5242  0E51  00C8               	movwf	??_main
  5243  0E52  0848               	movf	??_main,w
  5244  0E53  05EB               	andwf	_Event,f	;volatile
  5245                           
  5246                           ;main.c: 108: if(eusartRxCount>0){
  5247  0E54  086A               	movf	_eusartRxCount,w	;volatile
  5248  0E55  1903               	btfsc	3,2
  5249  0E56  2E75               	goto	l5190
  5250                           
  5251                           ;main.c: 109: m_mem_cpy_len(modbusBuf,eusartRxBuffer,eusartRxCount);
  5252  0E57  3020               	movlw	low _modbusBuf
  5253  0E58  00F2               	movwf	m_mem_cpy_len@d
  5254  0E59  3001               	movlw	high _modbusBuf
  5255  0E5A  00F3               	movwf	m_mem_cpy_len@d+1
  5256  0E5B  3040               	movlw	low _eusartRxBuffer
  5257  0E5C  00F4               	movwf	m_mem_cpy_len@s
  5258  0E5D  3001               	movlw	high _eusartRxBuffer
  5259  0E5E  00F5               	movwf	m_mem_cpy_len@s+1
  5260  0E5F  086A               	movf	_eusartRxCount,w	;volatile
  5261  0E60  00C8               	movwf	??_main
  5262  0E61  01C9               	clrf	??_main+1
  5263  0E62  0848               	movf	??_main,w
  5264  0E63  00F6               	movwf	m_mem_cpy_len@len
  5265  0E64  0849               	movf	??_main+1,w
  5266  0E65  00F7               	movwf	m_mem_cpy_len@len+1
  5267  0E66  319E  2632  318D   	fcall	_m_mem_cpy_len
  5268                           
  5269                           ;main.c: 110: modbus_response_process(modbusBuf,eusartRxCount);
  5270  0E69  0020               	movlb	0	; select bank0
  5271  0E6A  086A               	movf	_eusartRxCount,w	;volatile
  5272  0E6B  00C8               	movwf	??_main
  5273  0E6C  01C9               	clrf	??_main+1
  5274  0E6D  0848               	movf	??_main,w
  5275  0E6E  00BB               	movwf	modbus_response_process@rlen
  5276  0E6F  0849               	movf	??_main+1,w
  5277  0E70  00BC               	movwf	modbus_response_process@rlen+1
  5278  0E71  3020               	movlw	(low (_modbusBuf| (0+256)))& (0+255)
  5279  0E72  3192  2236  318D   	fcall	_modbus_response_process
  5280  0E75                     l5190:	
  5281                           
  5282                           ;main.c: 112: }
  5283                           ;main.c: 114: uart_received_start();
  5284  0E75  319C  24F4  318D   	fcall	_uart_received_start
  5285  0E78                     l5192:	
  5286                           
  5287                           ;main.c: 115: }
  5288                           ;main.c: 117: __nop();
  5289  0E78  0000               	nop
  5290  0E79  2DA5               	goto	l5148
  5291  0E7A                     __end_of_main:	
  5292                           
  5293                           	psect	text1
  5294  1CF4                     __ptext1:	
  5295 ;; *************** function _uart_received_start *****************
  5296 ;; Defined at:
  5297 ;;		line 52 in file "src/api/my_uart.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;		None
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;		None
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  1    wreg      void 
  5304 ;; Registers used:
  5305 ;;		status,2
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5315 ;;Total ram usage:        0 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; Hardware stack levels required when called:    1
  5318 ;; This function calls:
  5319 ;;		Nothing
  5320 ;; This function is called by:
  5321 ;;		_main
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           
  5326                           ;psect for function _uart_received_start
  5327  1CF4                     _uart_received_start:	
  5328                           
  5329                           ;my_uart.c: 54: eusartRxCount=0;
  5330                           
  5331                           ;incstack = 0
  5332                           ; Regs used in _uart_received_start: [status,2]
  5333  1CF4  0020               	movlb	0	; select bank0
  5334  1CF5  01EA               	clrf	_eusartRxCount	;volatile
  5335                           
  5336                           ;my_uart.c: 63: eusartRxIdleTime_ms=0;
  5337  1CF6  01FB               	clrf	_eusartRxIdleTime_ms	;volatile
  5338  1CF7  0008               	return
  5339  1CF8                     __end_of_uart_received_start:	
  5340                           
  5341                           	psect	text2
  5342  15B0                     __ptext2:	
  5343 ;; *************** function _sys_data_init *****************
  5344 ;; Defined at:
  5345 ;;		line 104 in file "src/api/sysData.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;		None
  5348 ;; Auto vars:     Size  Location     Type
  5349 ;;  i               2   24[BANK0 ] unsigned int 
  5350 ;;  ret             2   22[BANK0 ] unsigned int 
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  2  727[None  ] unsigned int 
  5353 ;; Registers used:
  5354 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5361 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5362 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5363 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5364 ;;Total ram usage:       10 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; Hardware stack levels required when called:    4
  5367 ;; This function calls:
  5368 ;;		___wmul
  5369 ;;		_crc_verify
  5370 ;;		_my_flash_system_read
  5371 ;;		_sys_data_save
  5372 ;; This function is called by:
  5373 ;;		_main
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377                           
  5378                           ;psect for function _sys_data_init
  5379  15B0                     _sys_data_init:	
  5380                           
  5381                           ;sysData.c: 106: uint16_t ret,i;
  5382                           ;sysData.c: 107: my_flash_system_read((uint8_t*)&sysData,sizeof(sysData_t));
  5383                           
  5384                           ;incstack = 0
  5385                           ; Regs used in _sys_data_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5386  15B0  305C               	movlw	92
  5387  15B1  00F2               	movwf	my_flash_system_read@buf
  5388  15B2  3023               	movlw	35
  5389  15B3  00F3               	movwf	my_flash_system_read@buf+1
  5390  15B4  3084               	movlw	132
  5391  15B5  00F4               	movwf	my_flash_system_read@len
  5392  15B6  3000               	movlw	0
  5393  15B7  00F5               	movwf	my_flash_system_read@len+1
  5394  15B8  3190  20D3  3195   	fcall	_my_flash_system_read
  5395                           
  5396                           ;sysData.c: 108: ret=crc_verify((uint8_t*)&sysData,sizeof(sysData_t));
  5397  15BB  305C               	movlw	92
  5398  15BC  0020               	movlb	0	; select bank0
  5399  15BD  00A6               	movwf	crc_verify@message
  5400  15BE  3023               	movlw	35
  5401  15BF  00A7               	movwf	crc_verify@message+1
  5402  15C0  3084               	movlw	132
  5403  15C1  00A8               	movwf	crc_verify@n
  5404  15C2  3000               	movlw	0
  5405  15C3  00A9               	movwf	crc_verify@n+1
  5406  15C4  3190  209C  3195   	fcall	_crc_verify
  5407  15C7  0020               	movlb	0	; select bank0
  5408  15C8  00B0               	movwf	??_sys_data_init
  5409  15C9  01B1               	clrf	??_sys_data_init+1
  5410  15CA  0830               	movf	??_sys_data_init,w
  5411  15CB  00B6               	movwf	sys_data_init@ret
  5412  15CC  0831               	movf	??_sys_data_init+1,w
  5413  15CD  00B7               	movwf	sys_data_init@ret+1
  5414                           
  5415                           ;sysData.c: 109: if(!ret){
  5416  15CE  0836               	movf	sys_data_init@ret,w
  5417  15CF  0437               	iorwf	sys_data_init@ret+1,w
  5418  15D0  1D03               	btfss	3,2
  5419  15D1  0008               	return
  5420                           
  5421                           ;sysData.c: 110: sysData.pidSetFlg0=0x55;
  5422  15D2  305C               	movlw	92
  5423  15D3  0086               	movwf	6
  5424  15D4  3023               	movlw	35
  5425  15D5  0087               	movwf	7
  5426  15D6  3055               	movlw	85
  5427  15D7  3FC0               	movwi [0]fsr1
  5428                           
  5429                           ;sysData.c: 111: sysData.pidSetFlg1=0xaa;
  5430  15D8  305D               	movlw	93
  5431  15D9  0086               	movwf	6
  5432  15DA  3023               	movlw	35
  5433  15DB  0087               	movwf	7
  5434  15DC  30AA               	movlw	170
  5435  15DD  0081               	movwf	1
  5436                           
  5437                           ;sysData.c: 112: sysData.id=0x01;
  5438  15DE  305E               	movlw	94
  5439  15DF  0086               	movwf	6
  5440  15E0  3023               	movlw	35
  5441  15E1  0087               	movwf	7
  5442  15E2  3001               	movlw	1
  5443  15E3  0081               	movwf	1
  5444                           
  5445                           ;sysData.c: 113: for(i=0;i<30;i++){
  5446  15E4  01B8               	clrf	sys_data_init@i
  5447  15E5  01B9               	clrf	sys_data_init@i+1
  5448  15E6  3000               	movlw	0
  5449  15E7  0239               	subwf	sys_data_init@i+1,w
  5450  15E8  301E               	movlw	30
  5451  15E9  1903               	skipnz
  5452  15EA  0238               	subwf	sys_data_init@i,w
  5453  15EB  1803               	btfsc	3,0
  5454  15EC  2E3E               	goto	l5096
  5455  15ED                     l5090:	
  5456                           
  5457                           ;sysData.c: 115: sysData.calibRsAdc[i]=6400+i*720;
  5458  15ED  0839               	movf	sys_data_init@i+1,w
  5459  15EE  00F3               	movwf	___wmul@multiplier+1
  5460  15EF  0838               	movf	sys_data_init@i,w
  5461  15F0  00F2               	movwf	___wmul@multiplier
  5462  15F1  30D0               	movlw	208
  5463  15F2  00F4               	movwf	___wmul@multiplicand
  5464  15F3  3002               	movlw	2
  5465  15F4  00F5               	movwf	___wmul@multiplicand+1
  5466  15F5  319D  25FB  3195   	fcall	___wmul
  5467  15F8  0872               	movf	?___wmul,w
  5468  15F9  3E00               	addlw	0
  5469  15FA  0020               	movlb	0	; select bank0
  5470  15FB  00B0               	movwf	??_sys_data_init
  5471  15FC  3019               	movlw	25
  5472  15FD  3D73               	addwfc	?___wmul+1,w
  5473  15FE  00B1               	movwf	??_sys_data_init+1
  5474  15FF  0839               	movf	sys_data_init@i+1,w
  5475  1600  00B3               	movwf	??_sys_data_init+3
  5476  1601  0838               	movf	sys_data_init@i,w
  5477  1602  00B2               	movwf	??_sys_data_init+2
  5478  1603  35B2               	lslf	??_sys_data_init+2,f
  5479  1604  0DB3               	rlf	??_sys_data_init+3,f
  5480  1605  3066               	movlw	102
  5481  1606  00B4               	movwf	??_sys_data_init+4
  5482  1607  3023               	movlw	35
  5483  1608  00B5               	movwf	??_sys_data_init+5
  5484  1609  0832               	movf	??_sys_data_init+2,w
  5485  160A  0734               	addwf	??_sys_data_init+4,w
  5486  160B  0086               	movwf	6
  5487  160C  0833               	movf	??_sys_data_init+3,w
  5488  160D  3D35               	addwfc	??_sys_data_init+5,w
  5489  160E  0087               	movwf	7
  5490  160F  0830               	movf	??_sys_data_init,w
  5491  1610  3FC0               	movwi [0]fsr1
  5492  1611  0831               	movf	??_sys_data_init+1,w
  5493  1612  3FC1               	movwi [1]fsr1
  5494                           
  5495                           ;sysData.c: 116: sysData.calibVoMV[i]=i*333;
  5496  1613  0839               	movf	sys_data_init@i+1,w
  5497  1614  00F3               	movwf	___wmul@multiplier+1
  5498  1615  0838               	movf	sys_data_init@i,w
  5499  1616  00F2               	movwf	___wmul@multiplier
  5500  1617  304D               	movlw	77
  5501  1618  00F4               	movwf	___wmul@multiplicand
  5502  1619  3001               	movlw	1
  5503  161A  00F5               	movwf	___wmul@multiplicand+1
  5504  161B  319D  25FB  3195   	fcall	___wmul
  5505  161E  0020               	movlb	0	; select bank0
  5506  161F  0839               	movf	sys_data_init@i+1,w
  5507  1620  00B1               	movwf	??_sys_data_init+1
  5508  1621  0838               	movf	sys_data_init@i,w
  5509  1622  00B0               	movwf	??_sys_data_init
  5510  1623  35B0               	lslf	??_sys_data_init,f
  5511  1624  0DB1               	rlf	??_sys_data_init+1,f
  5512  1625  30A2               	movlw	162
  5513  1626  00B2               	movwf	??_sys_data_init+2
  5514  1627  3023               	movlw	35
  5515  1628  00B3               	movwf	??_sys_data_init+3
  5516  1629  0830               	movf	??_sys_data_init,w
  5517  162A  0732               	addwf	??_sys_data_init+2,w
  5518  162B  0086               	movwf	6
  5519  162C  0831               	movf	??_sys_data_init+1,w
  5520  162D  3D33               	addwfc	??_sys_data_init+3,w
  5521  162E  0087               	movwf	7
  5522  162F  0872               	movf	?___wmul,w
  5523  1630  3FC0               	movwi [0]fsr1
  5524  1631  0873               	movf	?___wmul+1,w
  5525  1632  3FC1               	movwi [1]fsr1
  5526  1633  3001               	movlw	1
  5527  1634  07B8               	addwf	sys_data_init@i,f
  5528  1635  3000               	movlw	0
  5529  1636  3DB9               	addwfc	sys_data_init@i+1,f
  5530  1637  3000               	movlw	0
  5531  1638  0239               	subwf	sys_data_init@i+1,w
  5532  1639  301E               	movlw	30
  5533  163A  1903               	skipnz
  5534  163B  0238               	subwf	sys_data_init@i,w
  5535  163C  1C03               	skipc
  5536  163D  2DED               	goto	l5090
  5537  163E                     l5096:	
  5538                           
  5539                           ;sysData.c: 117: }
  5540                           ;sysData.c: 119: sysData.pidKp=3200;
  5541  163E  3080               	movlw	128
  5542  163F  00B0               	movwf	??_sys_data_init
  5543  1640  300C               	movlw	12
  5544  1641  00B1               	movwf	??_sys_data_init+1
  5545  1642  305C               	movlw	92
  5546  1643  0086               	movwf	6
  5547  1644  3023               	movlw	35
  5548  1645  0087               	movwf	7
  5549  1646  3144               	addfsr 1,4
  5550  1647  0830               	movf	??_sys_data_init,w
  5551  1648  3FC0               	movwi [0]fsr1
  5552  1649  0831               	movf	??_sys_data_init+1,w
  5553  164A  3FC1               	movwi [1]fsr1
  5554                           
  5555                           ;sysData.c: 120: sysData.pidTi=20;
  5556  164B  3014               	movlw	20
  5557  164C  00B0               	movwf	??_sys_data_init
  5558  164D  3000               	movlw	0
  5559  164E  00B1               	movwf	??_sys_data_init+1
  5560  164F  305C               	movlw	92
  5561  1650  0086               	movwf	6
  5562  1651  3023               	movlw	35
  5563  1652  0087               	movwf	7
  5564  1653  3146               	addfsr 1,6
  5565  1654  0830               	movf	??_sys_data_init,w
  5566  1655  3FC0               	movwi [0]fsr1
  5567  1656  0831               	movf	??_sys_data_init+1,w
  5568  1657  3FC1               	movwi [1]fsr1
  5569                           
  5570                           ;sysData.c: 121: sysData.pidTd=5;
  5571  1658  3005               	movlw	5
  5572  1659  00B0               	movwf	??_sys_data_init
  5573  165A  3000               	movlw	0
  5574  165B  00B1               	movwf	??_sys_data_init+1
  5575  165C  305C               	movlw	92
  5576  165D  0086               	movwf	6
  5577  165E  3023               	movlw	35
  5578  165F  0087               	movwf	7
  5579  1660  3148               	addfsr 1,8
  5580  1661  0830               	movf	??_sys_data_init,w
  5581  1662  3FC0               	movwi [0]fsr1
  5582  1663  0831               	movf	??_sys_data_init+1,w
  5583  1664  3FC1               	movwi [1]fsr1
  5584                           
  5585                           ;sysData.c: 123: sys_data_save();
  5586  1665  3190  2066         	fcall	_sys_data_save
  5587  1667  0008               	return
  5588  1668                     __end_of_sys_data_init:	
  5589                           ;sysData.c: 125: }
  5590                           ;sysData.c: 126: return ret;
  5591                           ;	Return value of _sys_data_init is never used
  5592                           
  5593                           
  5594                           	psect	text3
  5595  10D3                     __ptext3:	
  5596 ;; *************** function _my_flash_system_read *****************
  5597 ;; Defined at:
  5598 ;;		line 23 in file "src/api/sysData.c"
  5599 ;; Parameters:    Size  Location     Type
  5600 ;;  buf             2    2[COMMON] PTR unsigned char 
  5601 ;;		 -> sysData(132), 
  5602 ;;  len             2    4[COMMON] unsigned int 
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;  i               2    3[BANK0 ] unsigned int 
  5605 ;;  flashAddr       2    1[BANK0 ] unsigned int 
  5606 ;;  GIEBitValue     1    0[BANK0 ] unsigned char 
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  1    wreg      void 
  5609 ;; Registers used:
  5610 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5616 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5617 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5618 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5619 ;;      Totals:         6       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5620 ;;Total ram usage:       11 bytes
  5621 ;; Hardware stack levels used:    1
  5622 ;; Hardware stack levels required when called:    1
  5623 ;; This function calls:
  5624 ;;		Nothing
  5625 ;; This function is called by:
  5626 ;;		_sys_data_init
  5627 ;; This function uses a non-reentrant model
  5628 ;;
  5629                           
  5630                           
  5631                           ;psect for function _my_flash_system_read
  5632  10D3                     _my_flash_system_read:	
  5633                           
  5634                           ;sysData.c: 25: uint16_t flashAddr=0x1f00;
  5635                           
  5636                           ;incstack = 0
  5637                           ; Regs used in _my_flash_system_read: [wreg+fsr1l+fsr1h+status,2+status,0]
  5638  10D3  3000               	movlw	0
  5639  10D4  0020               	movlb	0	; select bank0
  5640  10D5  00A1               	movwf	my_flash_system_read@flashAddr
  5641  10D6  301F               	movlw	31
  5642  10D7  00A2               	movwf	my_flash_system_read@flashAddr+1
  5643                           
  5644                           ;sysData.c: 26: uint16_t i;
  5645                           ;sysData.c: 28: uint8_t GIEBitValue = INTCONbits.GIE;
  5646  10D8  3000               	movlw	0
  5647  10D9  1B8B               	btfsc	11,7	;volatile
  5648  10DA  3001               	movlw	1
  5649  10DB  00A0               	movwf	my_flash_system_read@GIEBitValue
  5650                           
  5651                           ;sysData.c: 30: INTCONbits.GIE = 0;
  5652  10DC  138B               	bcf	11,7	;volatile
  5653                           
  5654                           ;sysData.c: 32: for(i=0;i<len;i++){
  5655  10DD  01A3               	clrf	my_flash_system_read@i
  5656  10DE  01A4               	clrf	my_flash_system_read@i+1
  5657  10DF                     l3554:	
  5658  10DF  0875               	movf	my_flash_system_read@len+1,w
  5659  10E0  0224               	subwf	my_flash_system_read@i+1,w
  5660  10E1  1D03               	skipz
  5661  10E2  28E5               	goto	u2345
  5662  10E3  0874               	movf	my_flash_system_read@len,w
  5663  10E4  0223               	subwf	my_flash_system_read@i,w
  5664  10E5                     u2345:	
  5665  10E5  1803               	btfsc	3,0
  5666  10E6  290A               	goto	l3556
  5667                           
  5668                           ;sysData.c: 34: PMADRL = (flashAddr & 0x00FF);
  5669  10E7  0821               	movf	my_flash_system_read@flashAddr,w
  5670  10E8  0023               	movlb	3	; select bank3
  5671  10E9  0091               	movwf	17	;volatile
  5672                           
  5673                           ;sysData.c: 35: PMADRH = ((flashAddr & 0xFF00) >> 8);
  5674  10EA  0020               	movlb	0	; select bank0
  5675  10EB  0822               	movf	my_flash_system_read@flashAddr+1,w
  5676  10EC  0023               	movlb	3	; select bank3
  5677  10ED  0092               	movwf	18	;volatile
  5678                           
  5679                           ;sysData.c: 37: PMCON1bits.CFGS = 0;
  5680  10EE  1315               	bcf	21,6	;volatile
  5681                           
  5682                           ;sysData.c: 38: PMCON1bits.RD = 1;
  5683  10EF  1415               	bsf	21,0	;volatile
  5684                           
  5685                           ;sysData.c: 39: __nop();
  5686  10F0  0000               	nop
  5687                           
  5688                           ;sysData.c: 40: __nop();
  5689  10F1  0000               	nop
  5690                           
  5691                           ;sysData.c: 41: buf[i]=PMDATL;
  5692  10F2  0020               	movlb	0	; select bank0
  5693  10F3  0823               	movf	my_flash_system_read@i,w
  5694  10F4  0772               	addwf	my_flash_system_read@buf,w
  5695  10F5  00F6               	movwf	??_my_flash_system_read
  5696  10F6  0824               	movf	my_flash_system_read@i+1,w
  5697  10F7  3D73               	addwfc	my_flash_system_read@buf+1,w
  5698  10F8  00F7               	movwf	??_my_flash_system_read+1
  5699  10F9  0876               	movf	??_my_flash_system_read,w
  5700  10FA  0086               	movwf	6
  5701  10FB  0877               	movf	??_my_flash_system_read+1,w
  5702  10FC  0087               	movwf	7
  5703  10FD  0023               	movlb	3	; select bank3
  5704  10FE  0813               	movf	19,w	;volatile
  5705  10FF  0081               	movwf	1
  5706                           
  5707                           ;sysData.c: 42: flashAddr++;
  5708  1100  3001               	movlw	1
  5709  1101  0020               	movlb	0	; select bank0
  5710  1102  07A1               	addwf	my_flash_system_read@flashAddr,f
  5711  1103  3000               	movlw	0
  5712  1104  3DA2               	addwfc	my_flash_system_read@flashAddr+1,f
  5713  1105  3001               	movlw	1
  5714  1106  07A3               	addwf	my_flash_system_read@i,f
  5715  1107  3000               	movlw	0
  5716  1108  3DA4               	addwfc	my_flash_system_read@i+1,f
  5717  1109  28DF               	goto	l3554
  5718  110A                     l3556:	
  5719                           
  5720                           ;sysData.c: 43: }
  5721                           ;sysData.c: 44: INTCONbits.GIE = GIEBitValue;
  5722  110A  0C20               	rrf	my_flash_system_read@GIEBitValue,w
  5723  110B  1C03               	skipc
  5724  110C  138B               	bcf	11,7	;volatile
  5725  110D  1803               	skipnc
  5726  110E  178B               	bsf	11,7	;volatile
  5727  110F  0008               	return
  5728  1110                     __end_of_my_flash_system_read:	
  5729                           
  5730                           	psect	text4
  5731  1DFB                     __ptext4:	
  5732 ;; *************** function ___wmul *****************
  5733 ;; Defined at:
  5734 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;  multiplier      2    2[COMMON] unsigned int 
  5737 ;;  multiplicand    2    4[COMMON] unsigned int 
  5738 ;; Auto vars:     Size  Location     Type
  5739 ;;  product         2    6[COMMON] unsigned int 
  5740 ;; Return value:  Size  Location     Type
  5741 ;;                  2    2[COMMON] unsigned int 
  5742 ;; Registers used:
  5743 ;;		wreg, status,2, status,0
  5744 ;; Tracked objects:
  5745 ;;		On entry : 0/0
  5746 ;;		On exit  : 0/0
  5747 ;;		Unchanged: 0/0
  5748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5749 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5750 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5752 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5753 ;;Total ram usage:        6 bytes
  5754 ;; Hardware stack levels used:    1
  5755 ;; Hardware stack levels required when called:    1
  5756 ;; This function calls:
  5757 ;;		Nothing
  5758 ;; This function is called by:
  5759 ;;		_sys_data_init
  5760 ;; This function uses a non-reentrant model
  5761 ;;
  5762                           
  5763                           
  5764                           ;psect for function ___wmul
  5765  1DFB                     ___wmul:	
  5766                           
  5767                           ;incstack = 0
  5768                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5769  1DFB  01F6               	clrf	___wmul@product
  5770  1DFC  01F7               	clrf	___wmul@product+1
  5771  1DFD                     l3742:	
  5772  1DFD  1C72               	btfss	___wmul@multiplier,0
  5773  1DFE  2E03               	goto	l1068
  5774  1DFF  0874               	movf	___wmul@multiplicand,w
  5775  1E00  07F6               	addwf	___wmul@product,f
  5776  1E01  0875               	movf	___wmul@multiplicand+1,w
  5777  1E02  3DF7               	addwfc	___wmul@product+1,f
  5778  1E03                     l1068:	
  5779  1E03  3001               	movlw	1
  5780  1E04                     u2645:	
  5781  1E04  35F4               	lslf	___wmul@multiplicand,f
  5782  1E05  0DF5               	rlf	___wmul@multiplicand+1,f
  5783  1E06  0B89               	decfsz	9,f
  5784  1E07  2E04               	goto	u2645
  5785  1E08  3001               	movlw	1
  5786  1E09                     u2655:	
  5787  1E09  36F3               	lsrf	___wmul@multiplier+1,f
  5788  1E0A  0CF2               	rrf	___wmul@multiplier,f
  5789  1E0B  0B89               	decfsz	9,f
  5790  1E0C  2E09               	goto	u2655
  5791  1E0D  0872               	movf	___wmul@multiplier,w
  5792  1E0E  0473               	iorwf	___wmul@multiplier+1,w
  5793  1E0F  1D03               	btfss	3,2
  5794  1E10  2DFD               	goto	l3742
  5795  1E11  0877               	movf	___wmul@product+1,w
  5796  1E12  00F3               	movwf	?___wmul+1
  5797  1E13  0876               	movf	___wmul@product,w
  5798  1E14  00F2               	movwf	?___wmul
  5799  1E15  0008               	return
  5800  1E16                     __end_of___wmul:	
  5801                           
  5802                           	psect	text5
  5803  0F6E                     __ptext5:	
  5804 ;; *************** function _pid_pwm2_vout_run *****************
  5805 ;; Defined at:
  5806 ;;		line 363 in file "src/api/sample.c"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;		None
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;  t16             2    8[BANK0 ] int 
  5811 ;;  __ei            2    6[BANK0 ] int 
  5812 ;; Return value:  Size  Location     Type
  5813 ;;                  1    wreg      void 
  5814 ;; Registers used:
  5815 ;;		wreg, status,2, status,0, pclath, cstack
  5816 ;; Tracked objects:
  5817 ;;		On entry : 0/0
  5818 ;;		On exit  : 0/0
  5819 ;;		Unchanged: 0/0
  5820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5822 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5823 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5824 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5825 ;;Total ram usage:        6 bytes
  5826 ;; Hardware stack levels used:    1
  5827 ;; Hardware stack levels required when called:    3
  5828 ;; This function calls:
  5829 ;;		___awdiv
  5830 ;;		___lwdiv
  5831 ;;		_set_vout_pwm2_duty
  5832 ;; This function is called by:
  5833 ;;		_main
  5834 ;; This function uses a non-reentrant model
  5835 ;;
  5836                           
  5837                           
  5838                           ;psect for function _pid_pwm2_vout_run
  5839  0F6E                     _pid_pwm2_vout_run:	
  5840                           
  5841                           ;sample.c: 365: int16_t t16,__ei;
  5842                           ;sample.c: 366: t16=voExpectAdcValue-rtAdcValueVoFb;
  5843                           
  5844                           ;incstack = 0
  5845                           ; Regs used in _pid_pwm2_vout_run: [wreg+status,2+status,0+pclath+cstack]
  5846  0F6E  0020               	movlb	0	; select bank0
  5847  0F6F  095A               	comf	_rtAdcValueVoFb,w
  5848  0F70  00A4               	movwf	??_pid_pwm2_vout_run
  5849  0F71  095B               	comf	_rtAdcValueVoFb+1,w
  5850  0F72  00A5               	movwf	??_pid_pwm2_vout_run+1
  5851  0F73  0AA4               	incf	??_pid_pwm2_vout_run,f
  5852  0F74  1903               	skipnz
  5853  0F75  0AA5               	incf	??_pid_pwm2_vout_run+1,f
  5854  0F76  0858               	movf	_voExpectAdcValue,w
  5855  0F77  0724               	addwf	??_pid_pwm2_vout_run,w
  5856  0F78  00A8               	movwf	pid_pwm2_vout_run@t16
  5857  0F79  0859               	movf	_voExpectAdcValue+1,w
  5858  0F7A  3D25               	addwfc	??_pid_pwm2_vout_run+1,w
  5859  0F7B  00A9               	movwf	pid_pwm2_vout_run@t16+1
  5860                           
  5861                           ;sample.c: 367: __ei=t16/150;
  5862  0F7C  3096               	movlw	150
  5863  0F7D  00F2               	movwf	___awdiv@divisor
  5864  0F7E  3000               	movlw	0
  5865  0F7F  00F3               	movwf	___awdiv@divisor+1
  5866  0F80  0829               	movf	pid_pwm2_vout_run@t16+1,w
  5867  0F81  00F5               	movwf	___awdiv@dividend+1
  5868  0F82  0828               	movf	pid_pwm2_vout_run@t16,w
  5869  0F83  00F4               	movwf	___awdiv@dividend
  5870  0F84  3191  2191  318F   	fcall	___awdiv
  5871  0F87  0873               	movf	?___awdiv+1,w
  5872  0F88  0020               	movlb	0	; select bank0
  5873  0F89  00A7               	movwf	pid_pwm2_vout_run@__ei+1
  5874  0F8A  0872               	movf	?___awdiv,w
  5875  0F8B  00A6               	movwf	pid_pwm2_vout_run@__ei
  5876                           
  5877                           ;sample.c: 368: if(__ei==0){
  5878  0F8C  0826               	movf	pid_pwm2_vout_run@__ei,w
  5879  0F8D  0427               	iorwf	pid_pwm2_vout_run@__ei+1,w
  5880  0F8E  1D03               	btfss	3,2
  5881  0F8F  2FB1               	goto	l4984
  5882                           
  5883                           ;sample.c: 369: if(t16>16)__ei=1;
  5884  0F90  0829               	movf	pid_pwm2_vout_run@t16+1,w
  5885  0F91  3A80               	xorlw	128
  5886  0F92  00A4               	movwf	??_pid_pwm2_vout_run
  5887  0F93  3080               	movlw	128
  5888  0F94  0224               	subwf	??_pid_pwm2_vout_run,w
  5889  0F95  1D03               	skipz
  5890  0F96  2F99               	goto	u4555
  5891  0F97  3011               	movlw	17
  5892  0F98  0228               	subwf	pid_pwm2_vout_run@t16,w
  5893  0F99                     u4555:	
  5894  0F99  1C03               	skipc
  5895  0F9A  2FA0               	goto	l644
  5896  0F9B  3001               	movlw	1
  5897  0F9C  0020               	movlb	0	; select bank0
  5898  0F9D  00A6               	movwf	pid_pwm2_vout_run@__ei
  5899  0F9E  3000               	movlw	0
  5900  0F9F  00A7               	movwf	pid_pwm2_vout_run@__ei+1
  5901  0FA0                     l644:	
  5902                           
  5903                           ;sample.c: 370: if(t16<-16)__ei=-1;
  5904  0FA0  0020               	movlb	0	; select bank0
  5905  0FA1  0829               	movf	pid_pwm2_vout_run@t16+1,w
  5906  0FA2  3A80               	xorlw	128
  5907  0FA3  00A4               	movwf	??_pid_pwm2_vout_run
  5908  0FA4  307F               	movlw	127
  5909  0FA5  0224               	subwf	??_pid_pwm2_vout_run,w
  5910  0FA6  1D03               	skipz
  5911  0FA7  2FAA               	goto	u4565
  5912  0FA8  30F0               	movlw	240
  5913  0FA9  0228               	subwf	pid_pwm2_vout_run@t16,w
  5914  0FAA                     u4565:	
  5915  0FAA  1803               	skipnc
  5916  0FAB  2FB1               	goto	l4984
  5917  0FAC  30FF               	movlw	255
  5918  0FAD  0020               	movlb	0	; select bank0
  5919  0FAE  00A6               	movwf	pid_pwm2_vout_run@__ei
  5920  0FAF  30FF               	movlw	255
  5921  0FB0  00A7               	movwf	pid_pwm2_vout_run@__ei+1
  5922  0FB1                     l4984:	
  5923                           
  5924                           ;sample.c: 371: }
  5925                           ;sample.c: 373: pwm2Ei=pwm2Ei+__ei;
  5926  0FB1  0020               	movlb	0	; select bank0
  5927  0FB2  0826               	movf	pid_pwm2_vout_run@__ei,w
  5928  0FB3  0021               	movlb	1	; select bank1
  5929  0FB4  0744               	addwf	_pwm2Ei^(0+128),w
  5930  0FB5  00C4               	movwf	_pwm2Ei^(0+128)
  5931  0FB6  0020               	movlb	0	; select bank0
  5932  0FB7  0827               	movf	pid_pwm2_vout_run@__ei+1,w
  5933  0FB8  0021               	movlb	1	; select bank1
  5934  0FB9  3D45               	addwfc	(_pwm2Ei+1)^(0+128),w
  5935  0FBA  00C5               	movwf	(_pwm2Ei+1)^(0+128)
  5936                           
  5937                           ;sample.c: 377: t16=voExpectAdcValue/10;
  5938  0FBB  300A               	movlw	10
  5939  0FBC  00F2               	movwf	___lwdiv@divisor
  5940  0FBD  3000               	movlw	0
  5941  0FBE  00F3               	movwf	___lwdiv@divisor+1
  5942  0FBF  0020               	movlb	0	; select bank0
  5943  0FC0  0859               	movf	_voExpectAdcValue+1,w
  5944  0FC1  00F5               	movwf	___lwdiv@dividend+1
  5945  0FC2  0858               	movf	_voExpectAdcValue,w
  5946  0FC3  00F4               	movwf	___lwdiv@dividend
  5947  0FC4  3190  2032  318F   	fcall	___lwdiv
  5948  0FC7  0873               	movf	?___lwdiv+1,w
  5949  0FC8  0020               	movlb	0	; select bank0
  5950  0FC9  00A9               	movwf	pid_pwm2_vout_run@t16+1
  5951  0FCA  0872               	movf	?___lwdiv,w
  5952  0FCB  00A8               	movwf	pid_pwm2_vout_run@t16
  5953                           
  5954                           ;sample.c: 379: t16=t16+pwm2Ei;
  5955  0FCC  0021               	movlb	1	; select bank1
  5956  0FCD  0844               	movf	_pwm2Ei^(0+128),w
  5957  0FCE  0020               	movlb	0	; select bank0
  5958  0FCF  0728               	addwf	pid_pwm2_vout_run@t16,w
  5959  0FD0  00A8               	movwf	pid_pwm2_vout_run@t16
  5960  0FD1  0021               	movlb	1	; select bank1
  5961  0FD2  0845               	movf	(_pwm2Ei+1)^(0+128),w
  5962  0FD3  0020               	movlb	0	; select bank0
  5963  0FD4  3D29               	addwfc	pid_pwm2_vout_run@t16+1,w
  5964  0FD5  00A9               	movwf	pid_pwm2_vout_run@t16+1
  5965                           
  5966                           ;sample.c: 380: if(t16>1580)t16=1580;
  5967  0FD6  0829               	movf	pid_pwm2_vout_run@t16+1,w
  5968  0FD7  3A80               	xorlw	128
  5969  0FD8  00A4               	movwf	??_pid_pwm2_vout_run
  5970  0FD9  3086               	movlw	134
  5971  0FDA  0224               	subwf	??_pid_pwm2_vout_run,w
  5972  0FDB  1D03               	skipz
  5973  0FDC  2FDF               	goto	u4575
  5974  0FDD  302D               	movlw	45
  5975  0FDE  0228               	subwf	pid_pwm2_vout_run@t16,w
  5976  0FDF                     u4575:	
  5977  0FDF  1C03               	skipc
  5978  0FE0  2FE6               	goto	l646
  5979  0FE1  302C               	movlw	44
  5980  0FE2  0020               	movlb	0	; select bank0
  5981  0FE3  00A8               	movwf	pid_pwm2_vout_run@t16
  5982  0FE4  3006               	movlw	6
  5983  0FE5  00A9               	movwf	pid_pwm2_vout_run@t16+1
  5984  0FE6                     l646:	
  5985                           
  5986                           ;sample.c: 381: if(t16<5)t16=5;
  5987  0FE6  0020               	movlb	0	; select bank0
  5988  0FE7  0829               	movf	pid_pwm2_vout_run@t16+1,w
  5989  0FE8  3A80               	xorlw	128
  5990  0FE9  00A4               	movwf	??_pid_pwm2_vout_run
  5991  0FEA  3080               	movlw	128
  5992  0FEB  0224               	subwf	??_pid_pwm2_vout_run,w
  5993  0FEC  1D03               	skipz
  5994  0FED  2FF0               	goto	u4585
  5995  0FEE  3005               	movlw	5
  5996  0FEF  0228               	subwf	pid_pwm2_vout_run@t16,w
  5997  0FF0                     u4585:	
  5998  0FF0  1803               	skipnc
  5999  0FF1  2FF7               	goto	l4996
  6000  0FF2  3005               	movlw	5
  6001  0FF3  0020               	movlb	0	; select bank0
  6002  0FF4  00A8               	movwf	pid_pwm2_vout_run@t16
  6003  0FF5  3000               	movlw	0
  6004  0FF6  00A9               	movwf	pid_pwm2_vout_run@t16+1
  6005  0FF7                     l4996:	
  6006                           
  6007                           ;sample.c: 382: set_vout_pwm2_duty((uint16_t)t16);
  6008  0FF7  0020               	movlb	0	; select bank0
  6009  0FF8  0829               	movf	pid_pwm2_vout_run@t16+1,w
  6010  0FF9  00F9               	movwf	set_vout_pwm2_duty@duty+1
  6011  0FFA  0828               	movf	pid_pwm2_vout_run@t16,w
  6012  0FFB  00F8               	movwf	set_vout_pwm2_duty@duty
  6013  0FFC  319E  266C         	fcall	_set_vout_pwm2_duty
  6014  0FFE  0008               	return
  6015  0FFF                     __end_of_pid_pwm2_vout_run:	
  6016                           
  6017                           	psect	text6
  6018  1E6C                     __ptext6:	
  6019 ;; *************** function _set_vout_pwm2_duty *****************
  6020 ;; Defined at:
  6021 ;;		line 111 in file "src/api/sample.c"
  6022 ;; Parameters:    Size  Location     Type
  6023 ;;  duty            2    8[COMMON] unsigned int 
  6024 ;; Auto vars:     Size  Location     Type
  6025 ;;  t16             2    0[BANK0 ] unsigned int 
  6026 ;; Return value:  Size  Location     Type
  6027 ;;                  1    wreg      void 
  6028 ;; Registers used:
  6029 ;;		wreg, status,2, pclath, cstack
  6030 ;; Tracked objects:
  6031 ;;		On entry : 0/0
  6032 ;;		On exit  : 0/0
  6033 ;;		Unchanged: 0/0
  6034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6036 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6038 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6039 ;;Total ram usage:        4 bytes
  6040 ;; Hardware stack levels used:    1
  6041 ;; Hardware stack levels required when called:    2
  6042 ;; This function calls:
  6043 ;;		_get_vout_pwm2_duty
  6044 ;; This function is called by:
  6045 ;;		_pid_pwm2_vout_run
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049                           
  6050                           ;psect for function _set_vout_pwm2_duty
  6051  1E6C                     _set_vout_pwm2_duty:	
  6052                           
  6053                           ;sample.c: 114: uint16_t t16;
  6054                           ;sample.c: 115: pwm2DutyForVout=duty;
  6055                           
  6056                           ;incstack = 0
  6057                           ; Regs used in _set_vout_pwm2_duty: [wreg+status,2+pclath+cstack]
  6058  1E6C  0879               	movf	set_vout_pwm2_duty@duty+1,w
  6059  1E6D  0021               	movlb	1	; select bank1
  6060  1E6E  00D7               	movwf	(_pwm2DutyForVout+1)^(0+128)
  6061  1E6F  0878               	movf	set_vout_pwm2_duty@duty,w
  6062  1E70  00D6               	movwf	_pwm2DutyForVout^(0+128)
  6063                           
  6064                           ;sample.c: 116: t16=get_vout_pwm2_duty();
  6065  1E71  319D  25C7  319E   	fcall	_get_vout_pwm2_duty
  6066  1E74  0873               	movf	?_get_vout_pwm2_duty+1,w
  6067  1E75  0020               	movlb	0	; select bank0
  6068  1E76  00A1               	movwf	set_vout_pwm2_duty@t16+1
  6069  1E77  0872               	movf	?_get_vout_pwm2_duty,w
  6070  1E78  00A0               	movwf	set_vout_pwm2_duty@t16
  6071                           
  6072                           ;sample.c: 117: if(t16==duty)return;
  6073  1E79  0879               	movf	set_vout_pwm2_duty@duty+1,w
  6074  1E7A  0621               	xorwf	set_vout_pwm2_duty@t16+1,w
  6075  1E7B  1D03               	skipz
  6076  1E7C  2E7F               	goto	u3925
  6077  1E7D  0878               	movf	set_vout_pwm2_duty@duty,w
  6078  1E7E  0620               	xorwf	set_vout_pwm2_duty@t16,w
  6079  1E7F                     u3925:	
  6080  1E7F  1903               	btfsc	3,2
  6081  1E80  0008               	return
  6082                           
  6083                           ;sample.c: 121: PWM2CONbits.EN = 0;
  6084  1E81  003B               	movlb	27	; select bank27
  6085  1E82  13AB               	bcf	43,7	;volatile
  6086                           
  6087                           ;sample.c: 122: PWM2DCL= (uint8_t)(duty&0xff);
  6088  1E83  0878               	movf	set_vout_pwm2_duty@duty,w
  6089  1E84  00A3               	movwf	35	;volatile
  6090                           
  6091                           ;sample.c: 123: PWM2DCH=(uint8_t)(duty>>8);
  6092  1E85  0879               	movf	set_vout_pwm2_duty@duty+1,w
  6093  1E86  00A4               	movwf	36	;volatile
  6094                           
  6095                           ;sample.c: 124: PWM2CONbits.EN = 1;
  6096  1E87  17AB               	bsf	43,7	;volatile
  6097  1E88  0008               	return
  6098  1E89                     __end_of_set_vout_pwm2_duty:	
  6099                           
  6100                           	psect	text7
  6101  1DC7                     __ptext7:	
  6102 ;; *************** function _get_vout_pwm2_duty *****************
  6103 ;; Defined at:
  6104 ;;		line 102 in file "src/api/sample.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;		None
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;  t16             2    6[COMMON] unsigned int 
  6109 ;; Return value:  Size  Location     Type
  6110 ;;                  2    2[COMMON] unsigned int 
  6111 ;; Registers used:
  6112 ;;		wreg
  6113 ;; Tracked objects:
  6114 ;;		On entry : 0/0
  6115 ;;		On exit  : 0/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6119 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6120 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6121 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6122 ;;Total ram usage:        6 bytes
  6123 ;; Hardware stack levels used:    1
  6124 ;; Hardware stack levels required when called:    1
  6125 ;; This function calls:
  6126 ;;		Nothing
  6127 ;; This function is called by:
  6128 ;;		_set_vout_pwm2_duty
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           
  6133                           ;psect for function _get_vout_pwm2_duty
  6134  1DC7                     _get_vout_pwm2_duty:	
  6135                           
  6136                           ;sample.c: 105: uint16_t t16=PWM2DCH;
  6137                           
  6138                           ;incstack = 0
  6139                           ; Regs used in _get_vout_pwm2_duty: [wreg]
  6140  1DC7  003B               	movlb	27	; select bank27
  6141  1DC8  0824               	movf	36,w	;volatile
  6142  1DC9  00F4               	movwf	??_get_vout_pwm2_duty
  6143  1DCA  01F5               	clrf	??_get_vout_pwm2_duty+1
  6144  1DCB  0874               	movf	??_get_vout_pwm2_duty,w
  6145  1DCC  00F6               	movwf	get_vout_pwm2_duty@t16
  6146  1DCD  0875               	movf	??_get_vout_pwm2_duty+1,w
  6147  1DCE  00F7               	movwf	get_vout_pwm2_duty@t16+1
  6148                           
  6149                           ;sample.c: 106: t16<<=8;
  6150  1DCF  3008               	movlw	8
  6151  1DD0                     u3875:	
  6152  1DD0  35F6               	lslf	get_vout_pwm2_duty@t16,f
  6153  1DD1  0DF7               	rlf	get_vout_pwm2_duty@t16+1,f
  6154  1DD2  0B89               	decfsz	9,f
  6155  1DD3  2DD0               	goto	u3875
  6156                           
  6157                           ;sample.c: 107: t16|=PWM2DCL;
  6158  1DD4  0823               	movf	35,w	;volatile
  6159  1DD5  00F4               	movwf	??_get_vout_pwm2_duty
  6160  1DD6  01F5               	clrf	??_get_vout_pwm2_duty+1
  6161  1DD7  0874               	movf	??_get_vout_pwm2_duty,w
  6162  1DD8  04F6               	iorwf	get_vout_pwm2_duty@t16,f
  6163  1DD9  0875               	movf	??_get_vout_pwm2_duty+1,w
  6164  1DDA  04F7               	iorwf	get_vout_pwm2_duty@t16+1,f
  6165                           
  6166                           ;sample.c: 108: return t16;
  6167  1DDB  0877               	movf	get_vout_pwm2_duty@t16+1,w
  6168  1DDC  00F3               	movwf	?_get_vout_pwm2_duty+1
  6169  1DDD  0876               	movf	get_vout_pwm2_duty@t16,w
  6170  1DDE  00F2               	movwf	?_get_vout_pwm2_duty
  6171  1DDF  0008               	return
  6172  1DE0                     __end_of_get_vout_pwm2_duty:	
  6173                           
  6174                           	psect	text8
  6175  1032                     __ptext8:	
  6176 ;; *************** function ___lwdiv *****************
  6177 ;; Defined at:
  6178 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;  divisor         2    2[COMMON] unsigned int 
  6181 ;;  dividend        2    4[COMMON] unsigned int 
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;  quotient        2    7[COMMON] unsigned int 
  6184 ;;  counter         1    9[COMMON] unsigned char 
  6185 ;; Return value:  Size  Location     Type
  6186 ;;                  2    2[COMMON] unsigned int 
  6187 ;; Registers used:
  6188 ;;		wreg, status,2, status,0
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6194 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6195 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6196 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6197 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6198 ;;Total ram usage:        8 bytes
  6199 ;; Hardware stack levels used:    1
  6200 ;; Hardware stack levels required when called:    1
  6201 ;; This function calls:
  6202 ;;		Nothing
  6203 ;; This function is called by:
  6204 ;;		_pid_pwm2_vout_run
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208                           
  6209                           ;psect for function ___lwdiv
  6210  1032                     ___lwdiv:	
  6211                           
  6212                           ;incstack = 0
  6213                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6214  1032  01F7               	clrf	___lwdiv@quotient
  6215  1033  01F8               	clrf	___lwdiv@quotient+1
  6216  1034  0872               	movf	___lwdiv@divisor,w
  6217  1035  0473               	iorwf	___lwdiv@divisor+1,w
  6218  1036  1903               	btfsc	3,2
  6219  1037  2861               	goto	l3898
  6220  1038  01F9               	clrf	___lwdiv@counter
  6221  1039  0AF9               	incf	___lwdiv@counter,f
  6222  103A                     l3886:	
  6223  103A  1BF3               	btfsc	___lwdiv@divisor+1,7
  6224  103B  2846               	goto	l3888
  6225  103C  3001               	movlw	1
  6226  103D                     u2995:	
  6227  103D  35F2               	lslf	___lwdiv@divisor,f
  6228  103E  0DF3               	rlf	___lwdiv@divisor+1,f
  6229  103F  0B89               	decfsz	9,f
  6230  1040  283D               	goto	u2995
  6231  1041  3001               	movlw	1
  6232  1042  00F6               	movwf	??___lwdiv
  6233  1043  0876               	movf	??___lwdiv,w
  6234  1044  07F9               	addwf	___lwdiv@counter,f
  6235  1045  283A               	goto	l3886
  6236  1046                     l3888:	
  6237  1046  3001               	movlw	1
  6238  1047                     u3015:	
  6239  1047  35F7               	lslf	___lwdiv@quotient,f
  6240  1048  0DF8               	rlf	___lwdiv@quotient+1,f
  6241  1049  0B89               	decfsz	9,f
  6242  104A  2847               	goto	u3015
  6243  104B  0873               	movf	___lwdiv@divisor+1,w
  6244  104C  0275               	subwf	___lwdiv@dividend+1,w
  6245  104D  1D03               	skipz
  6246  104E  2851               	goto	u3025
  6247  104F  0872               	movf	___lwdiv@divisor,w
  6248  1050  0274               	subwf	___lwdiv@dividend,w
  6249  1051                     u3025:	
  6250  1051  1C03               	skipc
  6251  1052  2858               	goto	l3894
  6252  1053  0872               	movf	___lwdiv@divisor,w
  6253  1054  02F4               	subwf	___lwdiv@dividend,f
  6254  1055  0873               	movf	___lwdiv@divisor+1,w
  6255  1056  3BF5               	subwfb	___lwdiv@dividend+1,f
  6256  1057  1477               	bsf	___lwdiv@quotient,0
  6257  1058                     l3894:	
  6258  1058  3001               	movlw	1
  6259  1059                     u3035:	
  6260  1059  36F3               	lsrf	___lwdiv@divisor+1,f
  6261  105A  0CF2               	rrf	___lwdiv@divisor,f
  6262  105B  0B89               	decfsz	9,f
  6263  105C  2859               	goto	u3035
  6264  105D  3001               	movlw	1
  6265  105E  02F9               	subwf	___lwdiv@counter,f
  6266  105F  1D03               	btfss	3,2
  6267  1060  2846               	goto	l3888
  6268  1061                     l3898:	
  6269  1061  0878               	movf	___lwdiv@quotient+1,w
  6270  1062  00F3               	movwf	?___lwdiv+1
  6271  1063  0877               	movf	___lwdiv@quotient,w
  6272  1064  00F2               	movwf	?___lwdiv
  6273  1065  0008               	return
  6274  1066                     __end_of___lwdiv:	
  6275                           
  6276                           	psect	text9
  6277  1191                     __ptext9:	
  6278 ;; *************** function ___awdiv *****************
  6279 ;; Defined at:
  6280 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
  6281 ;; Parameters:    Size  Location     Type
  6282 ;;  divisor         2    2[COMMON] int 
  6283 ;;  dividend        2    4[COMMON] int 
  6284 ;; Auto vars:     Size  Location     Type
  6285 ;;  quotient        2    2[BANK0 ] int 
  6286 ;;  sign            1    1[BANK0 ] unsigned char 
  6287 ;;  counter         1    0[BANK0 ] unsigned char 
  6288 ;; Return value:  Size  Location     Type
  6289 ;;                  2    2[COMMON] int 
  6290 ;; Registers used:
  6291 ;;		wreg, status,2, status,0
  6292 ;; Tracked objects:
  6293 ;;		On entry : 0/0
  6294 ;;		On exit  : 0/0
  6295 ;;		Unchanged: 0/0
  6296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6297 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6298 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6299 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6300 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6301 ;;Total ram usage:        9 bytes
  6302 ;; Hardware stack levels used:    1
  6303 ;; Hardware stack levels required when called:    1
  6304 ;; This function calls:
  6305 ;;		Nothing
  6306 ;; This function is called by:
  6307 ;;		_pid_pwm2_vout_run
  6308 ;; This function uses a non-reentrant model
  6309 ;;
  6310                           
  6311                           
  6312                           ;psect for function ___awdiv
  6313  1191                     ___awdiv:	
  6314                           
  6315                           ;incstack = 0
  6316                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6317  1191  0020               	movlb	0	; select bank0
  6318  1192  01A1               	clrf	___awdiv@sign
  6319  1193  1FF3               	btfss	___awdiv@divisor+1,7
  6320  1194  299C               	goto	l4848
  6321  1195  09F2               	comf	___awdiv@divisor,f
  6322  1196  09F3               	comf	___awdiv@divisor+1,f
  6323  1197  0AF2               	incf	___awdiv@divisor,f
  6324  1198  1903               	skipnz
  6325  1199  0AF3               	incf	___awdiv@divisor+1,f
  6326  119A  01A1               	clrf	___awdiv@sign
  6327  119B  0AA1               	incf	___awdiv@sign,f
  6328  119C                     l4848:	
  6329  119C  1FF5               	btfss	___awdiv@dividend+1,7
  6330  119D  29A7               	goto	l4854
  6331  119E  09F4               	comf	___awdiv@dividend,f
  6332  119F  09F5               	comf	___awdiv@dividend+1,f
  6333  11A0  0AF4               	incf	___awdiv@dividend,f
  6334  11A1  1903               	skipnz
  6335  11A2  0AF5               	incf	___awdiv@dividend+1,f
  6336  11A3  3001               	movlw	1
  6337  11A4  00F6               	movwf	??___awdiv
  6338  11A5  0876               	movf	??___awdiv,w
  6339  11A6  06A1               	xorwf	___awdiv@sign,f
  6340  11A7                     l4854:	
  6341  11A7  01A2               	clrf	___awdiv@quotient
  6342  11A8  01A3               	clrf	___awdiv@quotient+1
  6343  11A9  0872               	movf	___awdiv@divisor,w
  6344  11AA  0473               	iorwf	___awdiv@divisor+1,w
  6345  11AB  1903               	btfsc	3,2
  6346  11AC  29D6               	goto	l4876
  6347  11AD  01A0               	clrf	___awdiv@counter
  6348  11AE  0AA0               	incf	___awdiv@counter,f
  6349  11AF                     l4864:	
  6350  11AF  1BF3               	btfsc	___awdiv@divisor+1,7
  6351  11B0  29BB               	goto	l4866
  6352  11B1  3001               	movlw	1
  6353  11B2                     u4345:	
  6354  11B2  35F2               	lslf	___awdiv@divisor,f
  6355  11B3  0DF3               	rlf	___awdiv@divisor+1,f
  6356  11B4  0B89               	decfsz	9,f
  6357  11B5  29B2               	goto	u4345
  6358  11B6  3001               	movlw	1
  6359  11B7  00F6               	movwf	??___awdiv
  6360  11B8  0876               	movf	??___awdiv,w
  6361  11B9  07A0               	addwf	___awdiv@counter,f
  6362  11BA  29AF               	goto	l4864
  6363  11BB                     l4866:	
  6364  11BB  3001               	movlw	1
  6365  11BC                     u4365:	
  6366  11BC  35A2               	lslf	___awdiv@quotient,f
  6367  11BD  0DA3               	rlf	___awdiv@quotient+1,f
  6368  11BE  0B89               	decfsz	9,f
  6369  11BF  29BC               	goto	u4365
  6370  11C0  0873               	movf	___awdiv@divisor+1,w
  6371  11C1  0275               	subwf	___awdiv@dividend+1,w
  6372  11C2  1D03               	skipz
  6373  11C3  29C6               	goto	u4375
  6374  11C4  0872               	movf	___awdiv@divisor,w
  6375  11C5  0274               	subwf	___awdiv@dividend,w
  6376  11C6                     u4375:	
  6377  11C6  1C03               	skipc
  6378  11C7  29CD               	goto	l4872
  6379  11C8  0872               	movf	___awdiv@divisor,w
  6380  11C9  02F4               	subwf	___awdiv@dividend,f
  6381  11CA  0873               	movf	___awdiv@divisor+1,w
  6382  11CB  3BF5               	subwfb	___awdiv@dividend+1,f
  6383  11CC  1422               	bsf	___awdiv@quotient,0
  6384  11CD                     l4872:	
  6385  11CD  3001               	movlw	1
  6386  11CE                     u4385:	
  6387  11CE  36F3               	lsrf	___awdiv@divisor+1,f
  6388  11CF  0CF2               	rrf	___awdiv@divisor,f
  6389  11D0  0B89               	decfsz	9,f
  6390  11D1  29CE               	goto	u4385
  6391  11D2  3001               	movlw	1
  6392  11D3  02A0               	subwf	___awdiv@counter,f
  6393  11D4  1D03               	btfss	3,2
  6394  11D5  29BB               	goto	l4866
  6395  11D6                     l4876:	
  6396  11D6  0821               	movf	___awdiv@sign,w
  6397  11D7  1903               	btfsc	3,2
  6398  11D8  29DE               	goto	l4880
  6399  11D9  09A2               	comf	___awdiv@quotient,f
  6400  11DA  09A3               	comf	___awdiv@quotient+1,f
  6401  11DB  0AA2               	incf	___awdiv@quotient,f
  6402  11DC  1903               	skipnz
  6403  11DD  0AA3               	incf	___awdiv@quotient+1,f
  6404  11DE                     l4880:	
  6405  11DE  0823               	movf	___awdiv@quotient+1,w
  6406  11DF  00F3               	movwf	?___awdiv+1
  6407  11E0  0822               	movf	___awdiv@quotient,w
  6408  11E1  00F2               	movwf	?___awdiv
  6409  11E2  0008               	return
  6410  11E3                     __end_of___awdiv:	
  6411                           
  6412                           	psect	text10
  6413  0AAF                     __ptext10:	
  6414 ;; *************** function _pid_pwm1_idrv_run *****************
  6415 ;; Defined at:
  6416 ;;		line 333 in file "src/api/sample.c"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;		None
  6419 ;; Auto vars:     Size  Location     Type
  6420 ;;  t32             4   27[BANK0 ] long 
  6421 ;; Return value:  Size  Location     Type
  6422 ;;                  1    wreg      void 
  6423 ;; Registers used:
  6424 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6425 ;; Tracked objects:
  6426 ;;		On entry : 0/0
  6427 ;;		On exit  : 0/0
  6428 ;;		Unchanged: 0/0
  6429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6431 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6432 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6433 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6434 ;;Total ram usage:       12 bytes
  6435 ;; Hardware stack levels used:    1
  6436 ;; Hardware stack levels required when called:    3
  6437 ;; This function calls:
  6438 ;;		___aldiv
  6439 ;;		___lmul
  6440 ;;		_set_idrv_pwm1_duty
  6441 ;; This function is called by:
  6442 ;;		_main
  6443 ;; This function uses a non-reentrant model
  6444 ;;
  6445                           
  6446                           
  6447                           ;psect for function _pid_pwm1_idrv_run
  6448  0AAF                     _pid_pwm1_idrv_run:	
  6449                           
  6450                           ;sample.c: 337: int32_t t32;
  6451                           ;sample.c: 338: t32=((int32_t)resRs-(int32_t)resRc);
  6452                           
  6453                           ;incstack = 0
  6454                           ; Regs used in _pid_pwm1_idrv_run: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6455  0AAF  0020               	movlb	0	; select bank0
  6456  0AB0  086E               	movf	_resRc,w
  6457  0AB1  00B3               	movwf	??_pid_pwm1_idrv_run
  6458  0AB2  086F               	movf	_resRc+1,w
  6459  0AB3  00B4               	movwf	??_pid_pwm1_idrv_run+1
  6460  0AB4  01B5               	clrf	??_pid_pwm1_idrv_run+2
  6461  0AB5  01B6               	clrf	??_pid_pwm1_idrv_run+3
  6462  0AB6  09B3               	comf	??_pid_pwm1_idrv_run,f
  6463  0AB7  09B4               	comf	??_pid_pwm1_idrv_run+1,f
  6464  0AB8  09B5               	comf	??_pid_pwm1_idrv_run+2,f
  6465  0AB9  09B6               	comf	??_pid_pwm1_idrv_run+3,f
  6466  0ABA  0AB3               	incf	??_pid_pwm1_idrv_run,f
  6467  0ABB  1903               	skipnz
  6468  0ABC  0AB4               	incf	??_pid_pwm1_idrv_run+1,f
  6469  0ABD  1903               	skipnz
  6470  0ABE  0AB5               	incf	??_pid_pwm1_idrv_run+2,f
  6471  0ABF  1903               	skipnz
  6472  0AC0  0AB6               	incf	??_pid_pwm1_idrv_run+3,f
  6473  0AC1  086C               	movf	_resRs,w
  6474  0AC2  00B7               	movwf	??_pid_pwm1_idrv_run+4
  6475  0AC3  086D               	movf	_resRs+1,w
  6476  0AC4  00B8               	movwf	??_pid_pwm1_idrv_run+5
  6477  0AC5  01B9               	clrf	??_pid_pwm1_idrv_run+6
  6478  0AC6  01BA               	clrf	??_pid_pwm1_idrv_run+7
  6479  0AC7  0837               	movf	??_pid_pwm1_idrv_run+4,w
  6480  0AC8  07B3               	addwf	??_pid_pwm1_idrv_run,f
  6481  0AC9  0838               	movf	??_pid_pwm1_idrv_run+5,w
  6482  0ACA  3DB4               	addwfc	??_pid_pwm1_idrv_run+1,f
  6483  0ACB  0839               	movf	??_pid_pwm1_idrv_run+6,w
  6484  0ACC  3DB5               	addwfc	??_pid_pwm1_idrv_run+2,f
  6485  0ACD  083A               	movf	??_pid_pwm1_idrv_run+7,w
  6486  0ACE  3DB6               	addwfc	??_pid_pwm1_idrv_run+3,f
  6487  0ACF  0836               	movf	??_pid_pwm1_idrv_run+3,w
  6488  0AD0  00BE               	movwf	pid_pwm1_idrv_run@t32+3
  6489  0AD1  0835               	movf	??_pid_pwm1_idrv_run+2,w
  6490  0AD2  00BD               	movwf	pid_pwm1_idrv_run@t32+2
  6491  0AD3  0834               	movf	??_pid_pwm1_idrv_run+1,w
  6492  0AD4  00BC               	movwf	pid_pwm1_idrv_run@t32+1
  6493  0AD5  0833               	movf	??_pid_pwm1_idrv_run,w
  6494  0AD6  00BB               	movwf	pid_pwm1_idrv_run@t32
  6495                           
  6496                           ;sample.c: 339: t32=2000-t32;
  6497  0AD7  30D0               	movlw	208
  6498  0AD8  00B3               	movwf	??_pid_pwm1_idrv_run
  6499  0AD9  3007               	movlw	7
  6500  0ADA  00B4               	movwf	??_pid_pwm1_idrv_run+1
  6501  0ADB  3000               	movlw	0
  6502  0ADC  00B5               	movwf	??_pid_pwm1_idrv_run+2
  6503  0ADD  3000               	movlw	0
  6504  0ADE  00B6               	movwf	??_pid_pwm1_idrv_run+3
  6505  0ADF  093B               	comf	pid_pwm1_idrv_run@t32,w
  6506  0AE0  00B7               	movwf	??_pid_pwm1_idrv_run+4
  6507  0AE1  093C               	comf	pid_pwm1_idrv_run@t32+1,w
  6508  0AE2  00B8               	movwf	??_pid_pwm1_idrv_run+5
  6509  0AE3  093D               	comf	pid_pwm1_idrv_run@t32+2,w
  6510  0AE4  00B9               	movwf	??_pid_pwm1_idrv_run+6
  6511  0AE5  093E               	comf	pid_pwm1_idrv_run@t32+3,w
  6512  0AE6  00BA               	movwf	??_pid_pwm1_idrv_run+7
  6513  0AE7  0AB7               	incf	??_pid_pwm1_idrv_run+4,f
  6514  0AE8  1903               	skipnz
  6515  0AE9  0AB8               	incf	??_pid_pwm1_idrv_run+5,f
  6516  0AEA  1903               	skipnz
  6517  0AEB  0AB9               	incf	??_pid_pwm1_idrv_run+6,f
  6518  0AEC  1903               	skipnz
  6519  0AED  0ABA               	incf	??_pid_pwm1_idrv_run+7,f
  6520  0AEE  0837               	movf	??_pid_pwm1_idrv_run+4,w
  6521  0AEF  07B3               	addwf	??_pid_pwm1_idrv_run,f
  6522  0AF0  0838               	movf	??_pid_pwm1_idrv_run+5,w
  6523  0AF1  3DB4               	addwfc	??_pid_pwm1_idrv_run+1,f
  6524  0AF2  0839               	movf	??_pid_pwm1_idrv_run+6,w
  6525  0AF3  3DB5               	addwfc	??_pid_pwm1_idrv_run+2,f
  6526  0AF4  083A               	movf	??_pid_pwm1_idrv_run+7,w
  6527  0AF5  3DB6               	addwfc	??_pid_pwm1_idrv_run+3,f
  6528  0AF6  0836               	movf	??_pid_pwm1_idrv_run+3,w
  6529  0AF7  00BE               	movwf	pid_pwm1_idrv_run@t32+3
  6530  0AF8  0835               	movf	??_pid_pwm1_idrv_run+2,w
  6531  0AF9  00BD               	movwf	pid_pwm1_idrv_run@t32+2
  6532  0AFA  0834               	movf	??_pid_pwm1_idrv_run+1,w
  6533  0AFB  00BC               	movwf	pid_pwm1_idrv_run@t32+1
  6534  0AFC  0833               	movf	??_pid_pwm1_idrv_run,w
  6535  0AFD  00BB               	movwf	pid_pwm1_idrv_run@t32
  6536                           
  6537                           ;sample.c: 341: err[2]=err[1];
  6538  0AFE  3004               	movlw	4
  6539  0AFF  3EA0               	addlw	(low (_err| 0))& (0+255)
  6540  0B00  0086               	movwf	6
  6541  0B01  0187               	clrf	7
  6542  0B02  3F40               	moviw [0]fsr1
  6543  0B03  0021               	movlb	1	; select bank1
  6544  0B04  00A8               	movwf	(_err^(0+128)+8)
  6545  0B05  3F41               	moviw [1]fsr1
  6546  0B06  00A9               	movwf	((_err+1)^(0+128)+8)
  6547  0B07  3F42               	moviw [2]fsr1
  6548  0B08  00AA               	movwf	((_err+2)^(0+128)+8)
  6549  0B09  3F43               	moviw [3]fsr1
  6550  0B0A  00AB               	movwf	((_err+3)^(0+128)+8)
  6551                           
  6552                           ;sample.c: 342: err[1]=err[0];
  6553  0B0B  0823               	movf	(_err+3)^(0+128),w
  6554  0B0C  00A7               	movwf	((_err+3)^(0+128)+4)
  6555  0B0D  0822               	movf	(_err+2)^(0+128),w
  6556  0B0E  00A6               	movwf	((_err+2)^(0+128)+4)
  6557  0B0F  0821               	movf	(_err+1)^(0+128),w
  6558  0B10  00A5               	movwf	((_err+1)^(0+128)+4)
  6559  0B11  0820               	movf	_err^(0+128),w
  6560  0B12  00A4               	movwf	(_err^(0+128)+4)
  6561                           
  6562                           ;sample.c: 343: err[0]=t32;
  6563  0B13  0020               	movlb	0	; select bank0
  6564  0B14  083E               	movf	pid_pwm1_idrv_run@t32+3,w
  6565  0B15  0021               	movlb	1	; select bank1
  6566  0B16  00A3               	movwf	(_err+3)^(0+128)
  6567  0B17  0020               	movlb	0	; select bank0
  6568  0B18  083D               	movf	pid_pwm1_idrv_run@t32+2,w
  6569  0B19  0021               	movlb	1	; select bank1
  6570  0B1A  00A2               	movwf	(_err+2)^(0+128)
  6571  0B1B  0020               	movlb	0	; select bank0
  6572  0B1C  083C               	movf	pid_pwm1_idrv_run@t32+1,w
  6573  0B1D  0021               	movlb	1	; select bank1
  6574  0B1E  00A1               	movwf	(_err+1)^(0+128)
  6575  0B1F  0020               	movlb	0	; select bank0
  6576  0B20  083B               	movf	pid_pwm1_idrv_run@t32,w
  6577  0B21  0021               	movlb	1	; select bank1
  6578  0B22  00A0               	movwf	_err^(0+128)
  6579                           
  6580                           ;sample.c: 346: x0=(err[0]-err[1])*PidKp;
  6581  0B23  0820               	movf	_err^(0+128),w
  6582  0B24  0020               	movlb	0	; select bank0
  6583  0B25  00B3               	movwf	??_pid_pwm1_idrv_run
  6584  0B26  0021               	movlb	1	; select bank1
  6585  0B27  0821               	movf	(_err+1)^(0+128),w
  6586  0B28  0020               	movlb	0	; select bank0
  6587  0B29  00B4               	movwf	??_pid_pwm1_idrv_run+1
  6588  0B2A  0021               	movlb	1	; select bank1
  6589  0B2B  0822               	movf	(_err+2)^(0+128),w
  6590  0B2C  0020               	movlb	0	; select bank0
  6591  0B2D  00B5               	movwf	??_pid_pwm1_idrv_run+2
  6592  0B2E  0021               	movlb	1	; select bank1
  6593  0B2F  0823               	movf	(_err+3)^(0+128),w
  6594  0B30  0020               	movlb	0	; select bank0
  6595  0B31  00B6               	movwf	??_pid_pwm1_idrv_run+3
  6596  0B32  0021               	movlb	1	; select bank1
  6597  0B33  0924               	comf	(_err^(0+128)+4),w
  6598  0B34  0020               	movlb	0	; select bank0
  6599  0B35  00B7               	movwf	??_pid_pwm1_idrv_run+4
  6600  0B36  0021               	movlb	1	; select bank1
  6601  0B37  0925               	comf	((_err+1)^(0+128)+4),w
  6602  0B38  0020               	movlb	0	; select bank0
  6603  0B39  00B8               	movwf	??_pid_pwm1_idrv_run+5
  6604  0B3A  0021               	movlb	1	; select bank1
  6605  0B3B  0926               	comf	((_err+2)^(0+128)+4),w
  6606  0B3C  0020               	movlb	0	; select bank0
  6607  0B3D  00B9               	movwf	??_pid_pwm1_idrv_run+6
  6608  0B3E  0021               	movlb	1	; select bank1
  6609  0B3F  0927               	comf	((_err+3)^(0+128)+4),w
  6610  0B40  0020               	movlb	0	; select bank0
  6611  0B41  00BA               	movwf	??_pid_pwm1_idrv_run+7
  6612  0B42  0AB7               	incf	??_pid_pwm1_idrv_run+4,f
  6613  0B43  1903               	skipnz
  6614  0B44  0AB8               	incf	??_pid_pwm1_idrv_run+5,f
  6615  0B45  1903               	skipnz
  6616  0B46  0AB9               	incf	??_pid_pwm1_idrv_run+6,f
  6617  0B47  1903               	skipnz
  6618  0B48  0ABA               	incf	??_pid_pwm1_idrv_run+7,f
  6619  0B49  0837               	movf	??_pid_pwm1_idrv_run+4,w
  6620  0B4A  07B3               	addwf	??_pid_pwm1_idrv_run,f
  6621  0B4B  0838               	movf	??_pid_pwm1_idrv_run+5,w
  6622  0B4C  3DB4               	addwfc	??_pid_pwm1_idrv_run+1,f
  6623  0B4D  0839               	movf	??_pid_pwm1_idrv_run+6,w
  6624  0B4E  3DB5               	addwfc	??_pid_pwm1_idrv_run+2,f
  6625  0B4F  083A               	movf	??_pid_pwm1_idrv_run+7,w
  6626  0B50  3DB6               	addwfc	??_pid_pwm1_idrv_run+3,f
  6627  0B51  0836               	movf	??_pid_pwm1_idrv_run+3,w
  6628  0B52  00F5               	movwf	___lmul@multiplier+3
  6629  0B53  0835               	movf	??_pid_pwm1_idrv_run+2,w
  6630  0B54  00F4               	movwf	___lmul@multiplier+2
  6631  0B55  0834               	movf	??_pid_pwm1_idrv_run+1,w
  6632  0B56  00F3               	movwf	___lmul@multiplier+1
  6633  0B57  0833               	movf	??_pid_pwm1_idrv_run,w
  6634  0B58  00F2               	movwf	___lmul@multiplier
  6635  0B59  0021               	movlb	1	; select bank1
  6636  0B5A  084C               	movf	_PidKp^(0+128),w
  6637  0B5B  00F6               	movwf	___lmul@multiplicand
  6638  0B5C  084D               	movf	(_PidKp+1)^(0+128),w
  6639  0B5D  00F7               	movwf	___lmul@multiplicand+1
  6640  0B5E  01F8               	clrf	___lmul@multiplicand+2
  6641  0B5F  01F9               	clrf	___lmul@multiplicand+3
  6642  0B60  3190  2000  318A   	fcall	___lmul
  6643  0B63  0875               	movf	?___lmul+3,w
  6644  0B64  0020               	movlb	0	; select bank0
  6645  0B65  00D1               	movwf	_x0+3
  6646  0B66  0874               	movf	?___lmul+2,w
  6647  0B67  00D0               	movwf	_x0+2
  6648  0B68  0873               	movf	?___lmul+1,w
  6649  0B69  00CF               	movwf	_x0+1
  6650  0B6A  0872               	movf	?___lmul,w
  6651  0B6B  00CE               	movwf	_x0
  6652                           
  6653                           ;sample.c: 347: x1=PidKp*err[0]/PidTi;
  6654  0B6C  0021               	movlb	1	; select bank1
  6655  0B6D  084A               	movf	_PidTi^(0+128),w
  6656  0B6E  0020               	movlb	0	; select bank0
  6657  0B6F  00A4               	movwf	___aldiv@divisor
  6658  0B70  0021               	movlb	1	; select bank1
  6659  0B71  084B               	movf	(_PidTi+1)^(0+128),w
  6660  0B72  0020               	movlb	0	; select bank0
  6661  0B73  00A5               	movwf	___aldiv@divisor+1
  6662  0B74  01A6               	clrf	___aldiv@divisor+2
  6663  0B75  01A7               	clrf	___aldiv@divisor+3
  6664  0B76  0021               	movlb	1	; select bank1
  6665  0B77  084C               	movf	_PidKp^(0+128),w
  6666  0B78  00F2               	movwf	___lmul@multiplier
  6667  0B79  084D               	movf	(_PidKp+1)^(0+128),w
  6668  0B7A  00F3               	movwf	___lmul@multiplier+1
  6669  0B7B  01F4               	clrf	___lmul@multiplier+2
  6670  0B7C  01F5               	clrf	___lmul@multiplier+3
  6671  0B7D  0823               	movf	(_err+3)^(0+128),w
  6672  0B7E  00F9               	movwf	___lmul@multiplicand+3
  6673  0B7F  0822               	movf	(_err+2)^(0+128),w
  6674  0B80  00F8               	movwf	___lmul@multiplicand+2
  6675  0B81  0821               	movf	(_err+1)^(0+128),w
  6676  0B82  00F7               	movwf	___lmul@multiplicand+1
  6677  0B83  0820               	movf	_err^(0+128),w
  6678  0B84  00F6               	movwf	___lmul@multiplicand
  6679  0B85  3190  2000  318A   	fcall	___lmul
  6680  0B88  0875               	movf	?___lmul+3,w
  6681  0B89  0020               	movlb	0	; select bank0
  6682  0B8A  00AB               	movwf	___aldiv@dividend+3
  6683  0B8B  0874               	movf	?___lmul+2,w
  6684  0B8C  00AA               	movwf	___aldiv@dividend+2
  6685  0B8D  0873               	movf	?___lmul+1,w
  6686  0B8E  00A9               	movwf	___aldiv@dividend+1
  6687  0B8F  0872               	movf	?___lmul,w
  6688  0B90  00A8               	movwf	___aldiv@dividend
  6689  0B91  3194  2410  318A   	fcall	___aldiv
  6690  0B94  0020               	movlb	0	; select bank0
  6691  0B95  0827               	movf	?___aldiv+3,w
  6692  0B96  0021               	movlb	1	; select bank1
  6693  0B97  00BF               	movwf	(_x1+3)^(0+128)
  6694  0B98  0020               	movlb	0	; select bank0
  6695  0B99  0826               	movf	?___aldiv+2,w
  6696  0B9A  0021               	movlb	1	; select bank1
  6697  0B9B  00BE               	movwf	(_x1+2)^(0+128)
  6698  0B9C  0020               	movlb	0	; select bank0
  6699  0B9D  0825               	movf	?___aldiv+1,w
  6700  0B9E  0021               	movlb	1	; select bank1
  6701  0B9F  00BD               	movwf	(_x1+1)^(0+128)
  6702  0BA0  0020               	movlb	0	; select bank0
  6703  0BA1  0824               	movf	?___aldiv,w
  6704  0BA2  0021               	movlb	1	; select bank1
  6705  0BA3  00BC               	movwf	_x1^(0+128)
  6706                           
  6707                           ;sample.c: 350: t32=x0+x1;
  6708  0BA4  0020               	movlb	0	; select bank0
  6709  0BA5  084E               	movf	_x0,w
  6710  0BA6  0021               	movlb	1	; select bank1
  6711  0BA7  073C               	addwf	_x1^(0+128),w
  6712  0BA8  0020               	movlb	0	; select bank0
  6713  0BA9  00B3               	movwf	??_pid_pwm1_idrv_run
  6714  0BAA  084F               	movf	_x0+1,w
  6715  0BAB  0021               	movlb	1	; select bank1
  6716  0BAC  3D3D               	addwfc	(_x1+1)^(0+128),w
  6717  0BAD  0020               	movlb	0	; select bank0
  6718  0BAE  00B4               	movwf	??_pid_pwm1_idrv_run+1
  6719  0BAF  0850               	movf	_x0+2,w
  6720  0BB0  0021               	movlb	1	; select bank1
  6721  0BB1  3D3E               	addwfc	(_x1+2)^(0+128),w
  6722  0BB2  0020               	movlb	0	; select bank0
  6723  0BB3  00B5               	movwf	??_pid_pwm1_idrv_run+2
  6724  0BB4  0851               	movf	_x0+3,w
  6725  0BB5  0021               	movlb	1	; select bank1
  6726  0BB6  3D3F               	addwfc	(_x1+3)^(0+128),w
  6727  0BB7  0020               	movlb	0	; select bank0
  6728  0BB8  00B6               	movwf	??_pid_pwm1_idrv_run+3
  6729  0BB9  0836               	movf	??_pid_pwm1_idrv_run+3,w
  6730  0BBA  00BE               	movwf	pid_pwm1_idrv_run@t32+3
  6731  0BBB  0835               	movf	??_pid_pwm1_idrv_run+2,w
  6732  0BBC  00BD               	movwf	pid_pwm1_idrv_run@t32+2
  6733  0BBD  0834               	movf	??_pid_pwm1_idrv_run+1,w
  6734  0BBE  00BC               	movwf	pid_pwm1_idrv_run@t32+1
  6735  0BBF  0833               	movf	??_pid_pwm1_idrv_run,w
  6736  0BC0  00BB               	movwf	pid_pwm1_idrv_run@t32
  6737                           
  6738                           ;sample.c: 351: t32/=10000;
  6739  0BC1  3000               	movlw	0
  6740  0BC2  00A7               	movwf	___aldiv@divisor+3
  6741  0BC3  3000               	movlw	0
  6742  0BC4  00A6               	movwf	___aldiv@divisor+2
  6743  0BC5  3027               	movlw	39
  6744  0BC6  00A5               	movwf	___aldiv@divisor+1
  6745  0BC7  3010               	movlw	16
  6746  0BC8  00A4               	movwf	___aldiv@divisor
  6747  0BC9  083E               	movf	pid_pwm1_idrv_run@t32+3,w
  6748  0BCA  00AB               	movwf	___aldiv@dividend+3
  6749  0BCB  083D               	movf	pid_pwm1_idrv_run@t32+2,w
  6750  0BCC  00AA               	movwf	___aldiv@dividend+2
  6751  0BCD  083C               	movf	pid_pwm1_idrv_run@t32+1,w
  6752  0BCE  00A9               	movwf	___aldiv@dividend+1
  6753  0BCF  083B               	movf	pid_pwm1_idrv_run@t32,w
  6754  0BD0  00A8               	movwf	___aldiv@dividend
  6755  0BD1  3194  2410  318A   	fcall	___aldiv
  6756  0BD4  0020               	movlb	0	; select bank0
  6757  0BD5  0827               	movf	?___aldiv+3,w
  6758  0BD6  00BE               	movwf	pid_pwm1_idrv_run@t32+3
  6759  0BD7  0826               	movf	?___aldiv+2,w
  6760  0BD8  00BD               	movwf	pid_pwm1_idrv_run@t32+2
  6761  0BD9  0825               	movf	?___aldiv+1,w
  6762  0BDA  00BC               	movwf	pid_pwm1_idrv_run@t32+1
  6763  0BDB  0824               	movf	?___aldiv,w
  6764  0BDC  00BB               	movwf	pid_pwm1_idrv_run@t32
  6765                           
  6766                           ;sample.c: 352: t32+=pidU;
  6767  0BDD  0021               	movlb	1	; select bank1
  6768  0BDE  0850               	movf	_pidU^(0+128),w
  6769  0BDF  0020               	movlb	0	; select bank0
  6770  0BE0  07BB               	addwf	pid_pwm1_idrv_run@t32,f
  6771  0BE1  0021               	movlb	1	; select bank1
  6772  0BE2  0851               	movf	(_pidU+1)^(0+128),w
  6773  0BE3  0020               	movlb	0	; select bank0
  6774  0BE4  3DBC               	addwfc	pid_pwm1_idrv_run@t32+1,f
  6775  0BE5  3000               	movlw	0
  6776  0BE6  3DBD               	addwfc	pid_pwm1_idrv_run@t32+2,f
  6777  0BE7  3DBE               	addwfc	pid_pwm1_idrv_run@t32+3,f
  6778                           
  6779                           ;sample.c: 354: __nop();
  6780  0BE8  0000               	nop
  6781                           
  6782                           ;sample.c: 355: if(t32>1200)t32=1200;
  6783  0BE9  0020               	movlb	0	; select bank0
  6784  0BEA  1BBE               	btfsc	pid_pwm1_idrv_run@t32+3,7
  6785  0BEB  2C00               	goto	l4966
  6786  0BEC  083E               	movf	pid_pwm1_idrv_run@t32+3,w
  6787  0BED  1D03               	btfss	3,2
  6788  0BEE  2BF8               	goto	l4964
  6789  0BEF  083D               	movf	pid_pwm1_idrv_run@t32+2,w
  6790  0BF0  1D03               	btfss	3,2
  6791  0BF1  2BF8               	goto	l4964
  6792  0BF2  30B1               	movlw	177
  6793  0BF3  023B               	subwf	pid_pwm1_idrv_run@t32,w
  6794  0BF4  3004               	movlw	4
  6795  0BF5  3B3C               	subwfb	pid_pwm1_idrv_run@t32+1,w
  6796  0BF6  1C03               	btfss	3,0
  6797  0BF7  2C00               	goto	l4966
  6798  0BF8                     l4964:	
  6799  0BF8  3000               	movlw	0
  6800  0BF9  00BE               	movwf	pid_pwm1_idrv_run@t32+3
  6801  0BFA  3000               	movlw	0
  6802  0BFB  00BD               	movwf	pid_pwm1_idrv_run@t32+2
  6803  0BFC  3004               	movlw	4
  6804  0BFD  00BC               	movwf	pid_pwm1_idrv_run@t32+1
  6805  0BFE  30B0               	movlw	176
  6806  0BFF  00BB               	movwf	pid_pwm1_idrv_run@t32
  6807  0C00                     l4966:	
  6808                           
  6809                           ;sample.c: 356: if(t32<5)t32=5;
  6810  0C00  1BBE               	btfsc	pid_pwm1_idrv_run@t32+3,7
  6811  0C01  2C0F               	goto	l4968
  6812  0C02  083E               	movf	pid_pwm1_idrv_run@t32+3,w
  6813  0C03  1D03               	btfss	3,2
  6814  0C04  2C17               	goto	l639
  6815  0C05  083D               	movf	pid_pwm1_idrv_run@t32+2,w
  6816  0C06  1D03               	btfss	3,2
  6817  0C07  2C17               	goto	l639
  6818  0C08  083C               	movf	pid_pwm1_idrv_run@t32+1,w
  6819  0C09  1D03               	btfss	3,2
  6820  0C0A  2C17               	goto	l639
  6821  0C0B  3005               	movlw	5
  6822  0C0C  023B               	subwf	pid_pwm1_idrv_run@t32,w
  6823  0C0D  1803               	btfsc	3,0
  6824  0C0E  2C17               	goto	l639
  6825  0C0F                     l4968:	
  6826  0C0F  3000               	movlw	0
  6827  0C10  00BE               	movwf	pid_pwm1_idrv_run@t32+3
  6828  0C11  3000               	movlw	0
  6829  0C12  00BD               	movwf	pid_pwm1_idrv_run@t32+2
  6830  0C13  3000               	movlw	0
  6831  0C14  00BC               	movwf	pid_pwm1_idrv_run@t32+1
  6832  0C15  3005               	movlw	5
  6833  0C16  00BB               	movwf	pid_pwm1_idrv_run@t32
  6834  0C17                     l639:	
  6835                           
  6836                           ;sample.c: 357: pidU=(uint16_t)t32;
  6837  0C17  083C               	movf	pid_pwm1_idrv_run@t32+1,w
  6838  0C18  0021               	movlb	1	; select bank1
  6839  0C19  00D1               	movwf	(_pidU+1)^(0+128)
  6840  0C1A  0020               	movlb	0	; select bank0
  6841  0C1B  083B               	movf	pid_pwm1_idrv_run@t32,w
  6842  0C1C  0021               	movlb	1	; select bank1
  6843  0C1D  00D0               	movwf	_pidU^(0+128)
  6844                           
  6845                           ;sample.c: 359: set_idrv_pwm1_duty(pidU);
  6846  0C1E  0851               	movf	(_pidU+1)^(0+128),w
  6847  0C1F  00F9               	movwf	set_idrv_pwm1_duty@duty+1
  6848  0C20  0850               	movf	_pidU^(0+128),w
  6849  0C21  00F8               	movwf	set_idrv_pwm1_duty@duty
  6850  0C22  319E  264F         	fcall	_set_idrv_pwm1_duty
  6851  0C24  0008               	return
  6852  0C25                     __end_of_pid_pwm1_idrv_run:	
  6853                           
  6854                           	psect	text11
  6855  1E4F                     __ptext11:	
  6856 ;; *************** function _set_idrv_pwm1_duty *****************
  6857 ;; Defined at:
  6858 ;;		line 82 in file "src/api/sample.c"
  6859 ;; Parameters:    Size  Location     Type
  6860 ;;  duty            2    8[COMMON] unsigned int 
  6861 ;; Auto vars:     Size  Location     Type
  6862 ;;  t16             2    0[BANK0 ] unsigned int 
  6863 ;; Return value:  Size  Location     Type
  6864 ;;                  1    wreg      void 
  6865 ;; Registers used:
  6866 ;;		wreg, status,2, pclath, cstack
  6867 ;; Tracked objects:
  6868 ;;		On entry : 0/0
  6869 ;;		On exit  : 0/0
  6870 ;;		Unchanged: 0/0
  6871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6872 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6873 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6875 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6876 ;;Total ram usage:        4 bytes
  6877 ;; Hardware stack levels used:    1
  6878 ;; Hardware stack levels required when called:    2
  6879 ;; This function calls:
  6880 ;;		_get_idrv_pwm1_duty
  6881 ;; This function is called by:
  6882 ;;		_pid_pwm1_idrv_run
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886                           
  6887                           ;psect for function _set_idrv_pwm1_duty
  6888  1E4F                     _set_idrv_pwm1_duty:	
  6889                           
  6890                           ;sample.c: 85: uint16_t t16;
  6891                           ;sample.c: 86: pwm1DutyForIdrv=duty;
  6892                           
  6893                           ;incstack = 0
  6894                           ; Regs used in _set_idrv_pwm1_duty: [wreg+status,2+pclath+cstack]
  6895  1E4F  0879               	movf	set_idrv_pwm1_duty@duty+1,w
  6896  1E50  0021               	movlb	1	; select bank1
  6897  1E51  00D5               	movwf	(_pwm1DutyForIdrv+1)^(0+128)
  6898  1E52  0878               	movf	set_idrv_pwm1_duty@duty,w
  6899  1E53  00D4               	movwf	_pwm1DutyForIdrv^(0+128)
  6900                           
  6901                           ;sample.c: 87: t16=get_idrv_pwm1_duty();
  6902  1E54  319D  25AE  319E   	fcall	_get_idrv_pwm1_duty
  6903  1E57  0873               	movf	?_get_idrv_pwm1_duty+1,w
  6904  1E58  0020               	movlb	0	; select bank0
  6905  1E59  00A1               	movwf	set_idrv_pwm1_duty@t16+1
  6906  1E5A  0872               	movf	?_get_idrv_pwm1_duty,w
  6907  1E5B  00A0               	movwf	set_idrv_pwm1_duty@t16
  6908                           
  6909                           ;sample.c: 88: if(t16==duty)return;
  6910  1E5C  0879               	movf	set_idrv_pwm1_duty@duty+1,w
  6911  1E5D  0621               	xorwf	set_idrv_pwm1_duty@t16+1,w
  6912  1E5E  1D03               	skipz
  6913  1E5F  2E62               	goto	u3915
  6914  1E60  0878               	movf	set_idrv_pwm1_duty@duty,w
  6915  1E61  0620               	xorwf	set_idrv_pwm1_duty@t16,w
  6916  1E62                     u3915:	
  6917  1E62  1903               	btfsc	3,2
  6918  1E63  0008               	return
  6919                           
  6920                           ;sample.c: 91: PWM1CONbits.EN = 0;
  6921  1E64  003B               	movlb	27	; select bank27
  6922  1E65  139B               	bcf	27,7	;volatile
  6923                           
  6924                           ;sample.c: 92: PWM1DCL= (uint8_t)(duty&0xff);
  6925  1E66  0878               	movf	set_idrv_pwm1_duty@duty,w
  6926  1E67  0093               	movwf	19	;volatile
  6927                           
  6928                           ;sample.c: 93: PWM1DCH=(uint8_t)(duty>>8);
  6929  1E68  0879               	movf	set_idrv_pwm1_duty@duty+1,w
  6930  1E69  0094               	movwf	20	;volatile
  6931                           
  6932                           ;sample.c: 94: PWM1CONbits.EN = 1;
  6933  1E6A  179B               	bsf	27,7	;volatile
  6934  1E6B  0008               	return
  6935  1E6C                     __end_of_set_idrv_pwm1_duty:	
  6936                           
  6937                           	psect	text12
  6938  1DAE                     __ptext12:	
  6939 ;; *************** function _get_idrv_pwm1_duty *****************
  6940 ;; Defined at:
  6941 ;;		line 73 in file "src/api/sample.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;		None
  6944 ;; Auto vars:     Size  Location     Type
  6945 ;;  t16             2    6[COMMON] unsigned int 
  6946 ;; Return value:  Size  Location     Type
  6947 ;;                  2    2[COMMON] unsigned int 
  6948 ;; Registers used:
  6949 ;;		wreg
  6950 ;; Tracked objects:
  6951 ;;		On entry : 0/0
  6952 ;;		On exit  : 0/0
  6953 ;;		Unchanged: 0/0
  6954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6955 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6956 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6957 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6958 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6959 ;;Total ram usage:        6 bytes
  6960 ;; Hardware stack levels used:    1
  6961 ;; Hardware stack levels required when called:    1
  6962 ;; This function calls:
  6963 ;;		Nothing
  6964 ;; This function is called by:
  6965 ;;		_set_idrv_pwm1_duty
  6966 ;; This function uses a non-reentrant model
  6967 ;;
  6968                           
  6969                           
  6970                           ;psect for function _get_idrv_pwm1_duty
  6971  1DAE                     _get_idrv_pwm1_duty:	
  6972                           
  6973                           ;sample.c: 76: uint16_t t16=PWM1DCH;
  6974                           
  6975                           ;incstack = 0
  6976                           ; Regs used in _get_idrv_pwm1_duty: [wreg]
  6977  1DAE  003B               	movlb	27	; select bank27
  6978  1DAF  0814               	movf	20,w	;volatile
  6979  1DB0  00F4               	movwf	??_get_idrv_pwm1_duty
  6980  1DB1  01F5               	clrf	??_get_idrv_pwm1_duty+1
  6981  1DB2  0874               	movf	??_get_idrv_pwm1_duty,w
  6982  1DB3  00F6               	movwf	get_idrv_pwm1_duty@t16
  6983  1DB4  0875               	movf	??_get_idrv_pwm1_duty+1,w
  6984  1DB5  00F7               	movwf	get_idrv_pwm1_duty@t16+1
  6985                           
  6986                           ;sample.c: 77: t16<<=8;
  6987  1DB6  3008               	movlw	8
  6988  1DB7                     u3865:	
  6989  1DB7  35F6               	lslf	get_idrv_pwm1_duty@t16,f
  6990  1DB8  0DF7               	rlf	get_idrv_pwm1_duty@t16+1,f
  6991  1DB9  0B89               	decfsz	9,f
  6992  1DBA  2DB7               	goto	u3865
  6993                           
  6994                           ;sample.c: 78: t16|=PWM1DCL;
  6995  1DBB  0813               	movf	19,w	;volatile
  6996  1DBC  00F4               	movwf	??_get_idrv_pwm1_duty
  6997  1DBD  01F5               	clrf	??_get_idrv_pwm1_duty+1
  6998  1DBE  0874               	movf	??_get_idrv_pwm1_duty,w
  6999  1DBF  04F6               	iorwf	get_idrv_pwm1_duty@t16,f
  7000  1DC0  0875               	movf	??_get_idrv_pwm1_duty+1,w
  7001  1DC1  04F7               	iorwf	get_idrv_pwm1_duty@t16+1,f
  7002                           
  7003                           ;sample.c: 79: return t16;
  7004  1DC2  0877               	movf	get_idrv_pwm1_duty@t16+1,w
  7005  1DC3  00F3               	movwf	?_get_idrv_pwm1_duty+1
  7006  1DC4  0876               	movf	get_idrv_pwm1_duty@t16,w
  7007  1DC5  00F2               	movwf	?_get_idrv_pwm1_duty
  7008  1DC6  0008               	return
  7009  1DC7                     __end_of_get_idrv_pwm1_duty:	
  7010                           
  7011                           	psect	text13
  7012  1236                     __ptext13:	
  7013 ;; *************** function _modbus_response_process *****************
  7014 ;; Defined at:
  7015 ;;		line 210 in file "src/api/modbus.c"
  7016 ;; Parameters:    Size  Location     Type
  7017 ;;  rbuf            1    wreg     PTR unsigned char 
  7018 ;;		 -> modbusBuf(32), 
  7019 ;;  rlen            2   27[BANK0 ] unsigned int 
  7020 ;; Auto vars:     Size  Location     Type
  7021 ;;  rbuf            1   32[BANK0 ] PTR unsigned char 
  7022 ;;		 -> modbusBuf(32), 
  7023 ;;  pmdbs           1   31[BANK0 ] PTR struct .
  7024 ;;		 -> modbusBuf(32), 
  7025 ;;  resp            1   30[BANK0 ] unsigned char 
  7026 ;; Return value:  Size  Location     Type
  7027 ;;                  1    wreg      void 
  7028 ;; Registers used:
  7029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7030 ;; Tracked objects:
  7031 ;;		On entry : 0/0
  7032 ;;		On exit  : 0/0
  7033 ;;		Unchanged: 0/0
  7034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7035 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7036 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7037 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7038 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7039 ;;Total ram usage:        6 bytes
  7040 ;; Hardware stack levels used:    1
  7041 ;; Hardware stack levels required when called:    5
  7042 ;; This function calls:
  7043 ;;		_crc_verify
  7044 ;;		_modbus_response_command
  7045 ;;		_modbus_response_illgeal_function
  7046 ;;		_modbus_response_write_mult_register
  7047 ;;		_modbus_response_write_single_register
  7048 ;; This function is called by:
  7049 ;;		_main
  7050 ;; This function uses a non-reentrant model
  7051 ;;
  7052                           
  7053                           
  7054                           ;psect for function _modbus_response_process
  7055  1236                     _modbus_response_process:	
  7056                           
  7057                           ;incstack = 0
  7058                           ; Regs used in _modbus_response_process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7059                           ;modbus_response_process@rbuf stored from wreg
  7060  1236  0020               	movlb	0	; select bank0
  7061  1237  00C0               	movwf	modbus_response_process@rbuf
  7062                           
  7063                           ;modbus.c: 211: uint8_t resp=0;
  7064  1238  01BE               	clrf	modbus_response_process@resp
  7065                           
  7066                           ;modbus.c: 212: st_modbusComReqStructDef* pmdbs=(st_modbusComReqStructDef*)rbuf;
  7067  1239  0840               	movf	modbus_response_process@rbuf,w
  7068  123A  00BD               	movwf	??_modbus_response_process
  7069  123B  083D               	movf	??_modbus_response_process,w
  7070  123C  00BF               	movwf	modbus_response_process@pmdbs
  7071                           
  7072                           ;modbus.c: 215: if((pmdbs->addr!=sysData.id) && (pmdbs->addr!=0x00))return;
  7073  123D  305C               	movlw	92
  7074  123E  0086               	movwf	6
  7075  123F  3023               	movlw	35
  7076  1240  0087               	movwf	7
  7077  1241  3142               	addfsr 1,2
  7078  1242  083F               	movf	modbus_response_process@pmdbs,w
  7079  1243  0084               	movwf	4
  7080  1244  3001               	movlw	1	; select bank2/3
  7081  1245  0085               	movwf	5
  7082  1246  0800               	movf	0,w
  7083  1247  0601               	xorwf	1,w
  7084  1248  1903               	skipnz
  7085  1249  2A51               	goto	l5112
  7086  124A  083F               	movf	modbus_response_process@pmdbs,w
  7087  124B  0086               	movwf	6
  7088  124C  3001               	movlw	1	; select bank2/3
  7089  124D  0087               	movwf	7
  7090  124E  0801               	movf	1,w
  7091  124F  1D03               	btfss	3,2
  7092  1250  0008               	return
  7093  1251                     l5112:	
  7094                           
  7095                           ;modbus.c: 216: if(!(crc_verify(rbuf,rlen)))return ;
  7096  1251  0840               	movf	modbus_response_process@rbuf,w
  7097  1252  00A6               	movwf	crc_verify@message
  7098  1253  3001               	movlw	1
  7099  1254  00A7               	movwf	crc_verify@message+1
  7100  1255  083C               	movf	modbus_response_process@rlen+1,w
  7101  1256  00A9               	movwf	crc_verify@n+1
  7102  1257  083B               	movf	modbus_response_process@rlen,w
  7103  1258  00A8               	movwf	crc_verify@n
  7104  1259  3190  209C  3192   	fcall	_crc_verify
  7105  125C  3A00               	xorlw	0
  7106  125D  1903               	btfsc	3,2
  7107  125E  0008               	return
  7108  125F  2A76               	goto	l5126
  7109  1260                     l5116:	
  7110                           ;modbus.c: 219: case 0x03:
  7111                           
  7112                           ;modbus.c: 218: switch(pmdbs->func){
  7113                           
  7114                           
  7115                           ;modbus.c: 220: modbus_response_command(rbuf);
  7116  1260  0020               	movlb	0	; select bank0
  7117  1261  0840               	movf	modbus_response_process@rbuf,w
  7118  1262  3196  2668         	fcall	_modbus_response_command
  7119                           
  7120                           ;modbus.c: 221: break;
  7121  1264  0008               	return
  7122  1265                     l5118:	
  7123                           ;modbus.c: 222: case 0x06:
  7124                           
  7125                           
  7126                           ;modbus.c: 223: case 0x26:
  7127                           ;modbus.c: 224: modbus_response_write_single_register(rbuf);
  7128  1265  0020               	movlb	0	; select bank0
  7129  1266  0840               	movf	modbus_response_process@rbuf,w
  7130  1267  318C  2425         	fcall	_modbus_response_write_single_register
  7131                           
  7132                           ;modbus.c: 225: break;
  7133  1269  0008               	return
  7134  126A                     l5120:	
  7135                           ;modbus.c: 226: case 0x10:
  7136                           
  7137                           
  7138                           ;modbus.c: 227: modbus_response_write_mult_register(rbuf);
  7139  126A  0020               	movlb	0	; select bank0
  7140  126B  0840               	movf	modbus_response_process@rbuf,w
  7141  126C  3193  239E         	fcall	_modbus_response_write_mult_register
  7142                           
  7143                           ;modbus.c: 228: break;
  7144  126E  0008               	return
  7145  126F                     l5122:	
  7146                           ;modbus.c: 251: default:
  7147                           
  7148                           
  7149                           ;modbus.c: 252: modbus_response_illgeal_function(rbuf,0x01);break;
  7150  126F  0020               	movlb	0	; select bank0
  7151  1270  01AF               	clrf	modbus_response_illgeal_function@errcode
  7152  1271  0AAF               	incf	modbus_response_illgeal_function@errcode,f
  7153  1272  0840               	movf	modbus_response_process@rbuf,w
  7154  1273  3191  214F         	fcall	_modbus_response_illgeal_function
  7155                           
  7156                           ;modbus.c: 253: }
  7157  1275  0008               	return
  7158  1276                     l5126:	
  7159  1276  0020               	movlb	0	; select bank0
  7160  1277  0A3F               	incf	modbus_response_process@pmdbs,w
  7161  1278  0086               	movwf	6
  7162  1279  3001               	movlw	1	; select bank2/3
  7163  127A  0087               	movwf	7
  7164  127B  0801               	movf	1,w
  7165                           
  7166                           ; Switch size 1, requested type "space"
  7167                           ; Number of cases is 4, Range of values is 3 to 38
  7168                           ; switch strategies available:
  7169                           ; Name         Instructions Cycles
  7170                           ; simple_byte           13     7 (average)
  7171                           ; direct_byte           81     9 (fixed)
  7172                           ; jumptable            263     9 (fixed)
  7173                           ;	Chosen strategy is simple_byte
  7174  127C  3A03               	xorlw	3	; case 3
  7175  127D  1903               	skipnz
  7176  127E  2A60               	goto	l5116
  7177  127F  3A05               	xorlw	5	; case 6
  7178  1280  1903               	skipnz
  7179  1281  2A65               	goto	l5118
  7180  1282  3A16               	xorlw	22	; case 16
  7181  1283  1903               	skipnz
  7182  1284  2A6A               	goto	l5120
  7183  1285  3A36               	xorlw	54	; case 38
  7184  1286  1903               	skipnz
  7185  1287  2A65               	goto	l5118
  7186  1288  2A6F               	goto	l5122
  7187  1289  0008               	return
  7188  128A                     __end_of_modbus_response_process:	
  7189                           
  7190                           	psect	text14
  7191  0C25                     __ptext14:	
  7192 ;; *************** function _modbus_response_write_single_register *****************
  7193 ;; Defined at:
  7194 ;;		line 115 in file "src/api/modbus.c"
  7195 ;; Parameters:    Size  Location     Type
  7196 ;;  rbuf            1    wreg     PTR unsigned char 
  7197 ;;		 -> modbusBuf(32), 
  7198 ;; Auto vars:     Size  Location     Type
  7199 ;;  rbuf            1   24[BANK0 ] PTR unsigned char 
  7200 ;;		 -> modbusBuf(32), 
  7201 ;;  startAddr       2   25[BANK0 ] unsigned int 
  7202 ;;  t16             2   20[BANK0 ] unsigned int 
  7203 ;;  pmdbs           1   23[BANK0 ] PTR struct .
  7204 ;;		 -> modbusBuf(32), 
  7205 ;;  i               1   22[BANK0 ] unsigned char 
  7206 ;;  fiSave          1   19[BANK0 ] unsigned char 
  7207 ;; Return value:  Size  Location     Type
  7208 ;;                  1    wreg      void 
  7209 ;; Registers used:
  7210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7211 ;; Tracked objects:
  7212 ;;		On entry : 0/0
  7213 ;;		On exit  : 0/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7217 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7218 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7219 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7220 ;;Total ram usage:       12 bytes
  7221 ;; Hardware stack levels used:    1
  7222 ;; Hardware stack levels required when called:    4
  7223 ;; This function calls:
  7224 ;;		_crc_append
  7225 ;;		_sys_data_save
  7226 ;;		_uart_send_len
  7227 ;; This function is called by:
  7228 ;;		_modbus_response_process
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232                           
  7233                           ;psect for function _modbus_response_write_single_register
  7234  0C25                     _modbus_response_write_single_register:	
  7235                           
  7236                           ;incstack = 0
  7237                           ; Regs used in _modbus_response_write_single_register: [wreg-fsr1h+status,2+status,0+pcl
      +                          ath+cstack]
  7238                           ;modbus_response_write_single_register@rbuf stored from wreg
  7239  0C25  0020               	movlb	0	; select bank0
  7240  0C26  00B8               	movwf	modbus_response_write_single_register@rbuf
  7241                           
  7242                           ;modbus.c: 117: uint16_t startAddr=0;
  7243  0C27  01B9               	clrf	modbus_response_write_single_register@startAddr
  7244  0C28  01BA               	clrf	modbus_response_write_single_register@startAddr+1
  7245                           
  7246                           ;modbus.c: 118: uint16_t t16;
  7247                           ;modbus.c: 119: uint8_t fiSave=0,i;
  7248  0C29  01B3               	clrf	modbus_response_write_single_register@fiSave
  7249                           
  7250                           ;modbus.c: 120: st_modbusComReqStructDef* pmdbs=(st_modbusComReqStructDef*)rbuf;
  7251  0C2A  0838               	movf	modbus_response_write_single_register@rbuf,w
  7252  0C2B  00AF               	movwf	??_modbus_response_write_single_register
  7253  0C2C  082F               	movf	??_modbus_response_write_single_register,w
  7254  0C2D  00B7               	movwf	modbus_response_write_single_register@pmdbs
  7255                           
  7256                           ;modbus.c: 121: if(pmdbs->addr!=sysData.id && pmdbs->addr!=0)return;
  7257  0C2E  305C               	movlw	92
  7258  0C2F  0086               	movwf	6
  7259  0C30  3023               	movlw	35
  7260  0C31  0087               	movwf	7
  7261  0C32  3142               	addfsr 1,2
  7262  0C33  0837               	movf	modbus_response_write_single_register@pmdbs,w
  7263  0C34  0084               	movwf	4
  7264  0C35  3001               	movlw	1	; select bank2/3
  7265  0C36  0085               	movwf	5
  7266  0C37  0800               	movf	0,w
  7267  0C38  0601               	xorwf	1,w
  7268  0C39  1903               	skipnz
  7269  0C3A  2C42               	goto	l4656
  7270  0C3B  0837               	movf	modbus_response_write_single_register@pmdbs,w
  7271  0C3C  0086               	movwf	6
  7272  0C3D  3001               	movlw	1	; select bank2/3
  7273  0C3E  0087               	movwf	7
  7274  0C3F  0801               	movf	1,w
  7275  0C40  1D03               	btfss	3,2
  7276  0C41  0008               	return
  7277  0C42                     l4656:	
  7278                           
  7279                           ;modbus.c: 122: if(sysData.id==253 && pmdbs->addr==0)return;
  7280  0C42  305C               	movlw	92
  7281  0C43  0086               	movwf	6
  7282  0C44  3023               	movlw	35
  7283  0C45  0087               	movwf	7
  7284  0C46  3142               	addfsr 1,2
  7285  0C47  30FD               	movlw	253
  7286  0C48  0601               	xorwf	1,w
  7287  0C49  1D03               	btfss	3,2
  7288  0C4A  2C52               	goto	l4662
  7289  0C4B  0837               	movf	modbus_response_write_single_register@pmdbs,w
  7290  0C4C  0086               	movwf	6
  7291  0C4D  3001               	movlw	1	; select bank2/3
  7292  0C4E  0087               	movwf	7
  7293  0C4F  0801               	movf	1,w
  7294  0C50  1903               	btfsc	3,2
  7295  0C51  0008               	return
  7296  0C52                     l4662:	
  7297                           
  7298                           ;modbus.c: 123: startAddr=pmdbs->addr_hi;
  7299  0C52  0837               	movf	modbus_response_write_single_register@pmdbs,w
  7300  0C53  3E02               	addlw	2
  7301  0C54  0086               	movwf	6
  7302  0C55  3001               	movlw	1	; select bank2/3
  7303  0C56  0087               	movwf	7
  7304  0C57  0801               	movf	1,w
  7305  0C58  00AF               	movwf	??_modbus_response_write_single_register
  7306  0C59  01B0               	clrf	??_modbus_response_write_single_register+1
  7307  0C5A  082F               	movf	??_modbus_response_write_single_register,w
  7308  0C5B  00B9               	movwf	modbus_response_write_single_register@startAddr
  7309  0C5C  0830               	movf	??_modbus_response_write_single_register+1,w
  7310  0C5D  00BA               	movwf	modbus_response_write_single_register@startAddr+1
  7311                           
  7312                           ;modbus.c: 124: startAddr<<=8;
  7313  0C5E  3008               	movlw	8
  7314  0C5F                     u4005:	
  7315  0C5F  35B9               	lslf	modbus_response_write_single_register@startAddr,f
  7316  0C60  0DBA               	rlf	modbus_response_write_single_register@startAddr+1,f
  7317  0C61  0B89               	decfsz	9,f
  7318  0C62  2C5F               	goto	u4005
  7319                           
  7320                           ;modbus.c: 125: startAddr |= pmdbs->addr_lo;
  7321  0C63  0837               	movf	modbus_response_write_single_register@pmdbs,w
  7322  0C64  3E03               	addlw	3
  7323  0C65  0086               	movwf	6
  7324  0C66  3001               	movlw	1	; select bank2/3
  7325  0C67  0087               	movwf	7
  7326  0C68  0801               	movf	1,w
  7327  0C69  00AF               	movwf	??_modbus_response_write_single_register
  7328  0C6A  01B0               	clrf	??_modbus_response_write_single_register+1
  7329  0C6B  082F               	movf	??_modbus_response_write_single_register,w
  7330  0C6C  04B9               	iorwf	modbus_response_write_single_register@startAddr,f
  7331  0C6D  0830               	movf	??_modbus_response_write_single_register+1,w
  7332  0C6E  04BA               	iorwf	modbus_response_write_single_register@startAddr+1,f
  7333                           
  7334                           ;modbus.c: 126: startAddr = startAddr & 0xff;
  7335  0C6F  30FF               	movlw	255
  7336  0C70  0539               	andwf	modbus_response_write_single_register@startAddr,w
  7337  0C71  00B9               	movwf	modbus_response_write_single_register@startAddr
  7338  0C72  3000               	movlw	0
  7339  0C73  053A               	andwf	modbus_response_write_single_register@startAddr+1,w
  7340  0C74  00BA               	movwf	modbus_response_write_single_register@startAddr+1
  7341                           
  7342                           ;modbus.c: 127: if(startAddr==0x02){
  7343  0C75  3002               	movlw	2
  7344  0C76  0639               	xorwf	modbus_response_write_single_register@startAddr,w
  7345  0C77  043A               	iorwf	modbus_response_write_single_register@startAddr+1,w
  7346  0C78  1D03               	btfss	3,2
  7347  0C79  2C88               	goto	l4674
  7348                           
  7349                           ;modbus.c: 128: sysData.id=rbuf[5];
  7350  0C7A  0838               	movf	modbus_response_write_single_register@rbuf,w
  7351  0C7B  3E05               	addlw	5
  7352  0C7C  0086               	movwf	6
  7353  0C7D  3001               	movlw	1	; select bank2/3
  7354  0C7E  0087               	movwf	7
  7355  0C7F  0801               	movf	1,w
  7356  0C80  00AF               	movwf	??_modbus_response_write_single_register
  7357  0C81  305E               	movlw	94
  7358  0C82  0086               	movwf	6
  7359  0C83  3023               	movlw	35
  7360  0C84  0087               	movwf	7
  7361  0C85  082F               	movf	??_modbus_response_write_single_register,w
  7362  0C86  0081               	movwf	1
  7363  0C87  2D48               	goto	l804
  7364  0C88                     l4674:	
  7365                           ;modbus.c: 130: }else if(startAddr==0x03){
  7366                           
  7367                           ;modbus.c: 129: fiSave=1;
  7368                           
  7369  0C88  3003               	movlw	3
  7370  0C89  0639               	xorwf	modbus_response_write_single_register@startAddr,w
  7371  0C8A  043A               	iorwf	modbus_response_write_single_register@startAddr+1,w
  7372  0C8B  1D03               	btfss	3,2
  7373  0C8C  2CA6               	goto	l4682
  7374                           
  7375                           ;modbus.c: 131: sysData.pidSetFlg1=rbuf[4];
  7376  0C8D  0838               	movf	modbus_response_write_single_register@rbuf,w
  7377  0C8E  3E04               	addlw	4
  7378  0C8F  0086               	movwf	6
  7379  0C90  3001               	movlw	1	; select bank2/3
  7380  0C91  0087               	movwf	7
  7381  0C92  0801               	movf	1,w
  7382  0C93  00AF               	movwf	??_modbus_response_write_single_register
  7383  0C94  305D               	movlw	93
  7384  0C95  0086               	movwf	6
  7385  0C96  3023               	movlw	35
  7386  0C97  0087               	movwf	7
  7387  0C98  082F               	movf	??_modbus_response_write_single_register,w
  7388  0C99  0081               	movwf	1
  7389                           
  7390                           ;modbus.c: 132: sysData.pidSetFlg0=rbuf[5];
  7391  0C9A  305C               	movlw	92
  7392  0C9B  0086               	movwf	6
  7393  0C9C  3023               	movlw	35
  7394  0C9D  0087               	movwf	7
  7395  0C9E  0838               	movf	modbus_response_write_single_register@rbuf,w
  7396  0C9F  3E05               	addlw	5
  7397  0CA0  0084               	movwf	4
  7398  0CA1  3001               	movlw	1	; select bank2/3
  7399  0CA2  0085               	movwf	5
  7400  0CA3  0800               	movf	0,w
  7401  0CA4  3FC0               	movwi [0]fsr1
  7402  0CA5  2D48               	goto	l804
  7403  0CA6                     l4682:	
  7404                           ;modbus.c: 134: }else if(startAddr>0x0f && startAddr < 0x10+30*2){
  7405                           
  7406                           ;modbus.c: 133: fiSave=1;
  7407                           
  7408  0CA6  3000               	movlw	0
  7409  0CA7  023A               	subwf	modbus_response_write_single_register@startAddr+1,w
  7410  0CA8  3010               	movlw	16
  7411  0CA9  1903               	skipnz
  7412  0CAA  0239               	subwf	modbus_response_write_single_register@startAddr,w
  7413  0CAB  1C03               	skipc
  7414  0CAC  0008               	return
  7415  0CAD  3000               	movlw	0
  7416  0CAE  023A               	subwf	modbus_response_write_single_register@startAddr+1,w
  7417  0CAF  304C               	movlw	76
  7418  0CB0  1903               	skipnz
  7419  0CB1  0239               	subwf	modbus_response_write_single_register@startAddr,w
  7420  0CB2  1803               	skipnc
  7421  0CB3  0008               	return
  7422                           
  7423                           ;modbus.c: 135: startAddr-=0x10;
  7424  0CB4  3010               	movlw	16
  7425  0CB5  02B9               	subwf	modbus_response_write_single_register@startAddr,f
  7426  0CB6  3000               	movlw	0
  7427  0CB7  3BBA               	subwfb	modbus_response_write_single_register@startAddr+1,f
  7428                           
  7429                           ;modbus.c: 136: if(startAddr & 0x01){
  7430  0CB8  1C39               	btfss	modbus_response_write_single_register@startAddr,0
  7431  0CB9  2D4A               	goto	l4714
  7432                           
  7433                           ;modbus.c: 137: t16=rbuf[4];
  7434  0CBA  0838               	movf	modbus_response_write_single_register@rbuf,w
  7435  0CBB  3E04               	addlw	4
  7436  0CBC  0086               	movwf	6
  7437  0CBD  3001               	movlw	1	; select bank2/3
  7438  0CBE  0087               	movwf	7
  7439  0CBF  0801               	movf	1,w
  7440  0CC0  00AF               	movwf	??_modbus_response_write_single_register
  7441  0CC1  01B0               	clrf	??_modbus_response_write_single_register+1
  7442  0CC2  082F               	movf	??_modbus_response_write_single_register,w
  7443  0CC3  00B4               	movwf	modbus_response_write_single_register@t16
  7444  0CC4  0830               	movf	??_modbus_response_write_single_register+1,w
  7445  0CC5  00B5               	movwf	modbus_response_write_single_register@t16+1
  7446                           
  7447                           ;modbus.c: 138: t16<<=8;
  7448  0CC6  3008               	movlw	8
  7449  0CC7                     u4065:	
  7450  0CC7  35B4               	lslf	modbus_response_write_single_register@t16,f
  7451  0CC8  0DB5               	rlf	modbus_response_write_single_register@t16+1,f
  7452  0CC9  0B89               	decfsz	9,f
  7453  0CCA  2CC7               	goto	u4065
  7454                           
  7455                           ;modbus.c: 139: t16 |= rbuf[5];
  7456  0CCB  0838               	movf	modbus_response_write_single_register@rbuf,w
  7457  0CCC  3E05               	addlw	5
  7458  0CCD  0086               	movwf	6
  7459  0CCE  3001               	movlw	1	; select bank2/3
  7460  0CCF  0087               	movwf	7
  7461  0CD0  0801               	movf	1,w
  7462  0CD1  00AF               	movwf	??_modbus_response_write_single_register
  7463  0CD2  01B0               	clrf	??_modbus_response_write_single_register+1
  7464  0CD3  082F               	movf	??_modbus_response_write_single_register,w
  7465  0CD4  04B4               	iorwf	modbus_response_write_single_register@t16,f
  7466  0CD5  0830               	movf	??_modbus_response_write_single_register+1,w
  7467  0CD6  04B5               	iorwf	modbus_response_write_single_register@t16+1,f
  7468                           
  7469                           ;modbus.c: 140: sysData.calibVoMV[startAddr>>1]=t16;
  7470  0CD7  083A               	movf	modbus_response_write_single_register@startAddr+1,w
  7471  0CD8  00B0               	movwf	??_modbus_response_write_single_register+1
  7472  0CD9  0839               	movf	modbus_response_write_single_register@startAddr,w
  7473  0CDA  00AF               	movwf	??_modbus_response_write_single_register
  7474  0CDB  36B0               	lsrf	??_modbus_response_write_single_register+1,f
  7475  0CDC  0CAF               	rrf	??_modbus_response_write_single_register,f
  7476  0CDD  35AF               	lslf	??_modbus_response_write_single_register,f
  7477  0CDE  0DB0               	rlf	??_modbus_response_write_single_register+1,f
  7478  0CDF  30A2               	movlw	162
  7479  0CE0  00B1               	movwf	??_modbus_response_write_single_register+2
  7480  0CE1  3023               	movlw	35
  7481  0CE2  00B2               	movwf	??_modbus_response_write_single_register+3
  7482  0CE3  082F               	movf	??_modbus_response_write_single_register,w
  7483  0CE4  0731               	addwf	??_modbus_response_write_single_register+2,w
  7484  0CE5  0086               	movwf	6
  7485  0CE6  0830               	movf	??_modbus_response_write_single_register+1,w
  7486  0CE7  3D32               	addwfc	??_modbus_response_write_single_register+3,w
  7487  0CE8  0087               	movwf	7
  7488  0CE9  0834               	movf	modbus_response_write_single_register@t16,w
  7489  0CEA  3FC0               	movwi [0]fsr1
  7490  0CEB  0835               	movf	modbus_response_write_single_register@t16+1,w
  7491  0CEC  3FC1               	movwi [1]fsr1
  7492                           
  7493                           ;modbus.c: 141: sysData.calibRsAdc[startAddr>>1]=rsLoAvg;
  7494  0CED  083A               	movf	modbus_response_write_single_register@startAddr+1,w
  7495  0CEE  00B0               	movwf	??_modbus_response_write_single_register+1
  7496  0CEF  0839               	movf	modbus_response_write_single_register@startAddr,w
  7497  0CF0  00AF               	movwf	??_modbus_response_write_single_register
  7498  0CF1  36B0               	lsrf	??_modbus_response_write_single_register+1,f
  7499  0CF2  0CAF               	rrf	??_modbus_response_write_single_register,f
  7500  0CF3  35AF               	lslf	??_modbus_response_write_single_register,f
  7501  0CF4  0DB0               	rlf	??_modbus_response_write_single_register+1,f
  7502  0CF5  3066               	movlw	102
  7503  0CF6  00B1               	movwf	??_modbus_response_write_single_register+2
  7504  0CF7  3023               	movlw	35
  7505  0CF8  00B2               	movwf	??_modbus_response_write_single_register+3
  7506  0CF9  082F               	movf	??_modbus_response_write_single_register,w
  7507  0CFA  0731               	addwf	??_modbus_response_write_single_register+2,w
  7508  0CFB  0086               	movwf	6
  7509  0CFC  0830               	movf	??_modbus_response_write_single_register+1,w
  7510  0CFD  3D32               	addwfc	??_modbus_response_write_single_register+3,w
  7511  0CFE  0087               	movwf	7
  7512  0CFF  0856               	movf	_rsLoAvg,w
  7513  0D00  3FC0               	movwi [0]fsr1
  7514  0D01  0857               	movf	_rsLoAvg+1,w
  7515  0D02  3FC1               	movwi [1]fsr1
  7516                           
  7517                           ;modbus.c: 143: if(rbuf[1]==0x26){
  7518  0D03  0A38               	incf	modbus_response_write_single_register@rbuf,w
  7519  0D04  0086               	movwf	6
  7520  0D05  3001               	movlw	1	; select bank2/3
  7521  0D06  0087               	movwf	7
  7522  0D07  3026               	movlw	38
  7523  0D08  0601               	xorwf	1,w
  7524  0D09  1D03               	btfss	3,2
  7525  0D0A  2D48               	goto	l804
  7526                           
  7527                           ;modbus.c: 144: for(i=(startAddr>>1)+1;i<30;i++){
  7528  0D0B  083A               	movf	modbus_response_write_single_register@startAddr+1,w
  7529  0D0C  00B0               	movwf	??_modbus_response_write_single_register+1
  7530  0D0D  0839               	movf	modbus_response_write_single_register@startAddr,w
  7531  0D0E  00AF               	movwf	??_modbus_response_write_single_register
  7532  0D0F  36B0               	lsrf	??_modbus_response_write_single_register+1,f
  7533  0D10  0CAF               	rrf	??_modbus_response_write_single_register,f
  7534  0D11  082F               	movf	??_modbus_response_write_single_register,w
  7535  0D12  3E01               	addlw	1
  7536  0D13  00B1               	movwf	??_modbus_response_write_single_register+2
  7537  0D14  0831               	movf	??_modbus_response_write_single_register+2,w
  7538  0D15  00B6               	movwf	modbus_response_write_single_register@i
  7539  0D16  301E               	movlw	30
  7540  0D17  0236               	subwf	modbus_response_write_single_register@i,w
  7541  0D18  1803               	btfsc	3,0
  7542  0D19  2D48               	goto	l804
  7543  0D1A                     l4708:	
  7544                           
  7545                           ;modbus.c: 145: sysData.calibVoMV[i]=t16;
  7546  0D1A  0836               	movf	modbus_response_write_single_register@i,w
  7547  0D1B  00AF               	movwf	??_modbus_response_write_single_register
  7548  0D1C  01B0               	clrf	??_modbus_response_write_single_register+1
  7549  0D1D  35AF               	lslf	??_modbus_response_write_single_register,f
  7550  0D1E  0DB0               	rlf	??_modbus_response_write_single_register+1,f
  7551  0D1F  30A2               	movlw	162
  7552  0D20  00B1               	movwf	??_modbus_response_write_single_register+2
  7553  0D21  3023               	movlw	35
  7554  0D22  00B2               	movwf	??_modbus_response_write_single_register+3
  7555  0D23  082F               	movf	??_modbus_response_write_single_register,w
  7556  0D24  0731               	addwf	??_modbus_response_write_single_register+2,w
  7557  0D25  0086               	movwf	6
  7558  0D26  0830               	movf	??_modbus_response_write_single_register+1,w
  7559  0D27  3D32               	addwfc	??_modbus_response_write_single_register+3,w
  7560  0D28  0087               	movwf	7
  7561  0D29  0834               	movf	modbus_response_write_single_register@t16,w
  7562  0D2A  3FC0               	movwi [0]fsr1
  7563  0D2B  0835               	movf	modbus_response_write_single_register@t16+1,w
  7564  0D2C  3FC1               	movwi [1]fsr1
  7565                           
  7566                           ;modbus.c: 146: sysData.calibRsAdc[i]=rsLoAvg;
  7567  0D2D  0836               	movf	modbus_response_write_single_register@i,w
  7568  0D2E  00AF               	movwf	??_modbus_response_write_single_register
  7569  0D2F  01B0               	clrf	??_modbus_response_write_single_register+1
  7570  0D30  35AF               	lslf	??_modbus_response_write_single_register,f
  7571  0D31  0DB0               	rlf	??_modbus_response_write_single_register+1,f
  7572  0D32  3066               	movlw	102
  7573  0D33  00B1               	movwf	??_modbus_response_write_single_register+2
  7574  0D34  3023               	movlw	35
  7575  0D35  00B2               	movwf	??_modbus_response_write_single_register+3
  7576  0D36  082F               	movf	??_modbus_response_write_single_register,w
  7577  0D37  0731               	addwf	??_modbus_response_write_single_register+2,w
  7578  0D38  0086               	movwf	6
  7579  0D39  0830               	movf	??_modbus_response_write_single_register+1,w
  7580  0D3A  3D32               	addwfc	??_modbus_response_write_single_register+3,w
  7581  0D3B  0087               	movwf	7
  7582  0D3C  0856               	movf	_rsLoAvg,w
  7583  0D3D  3FC0               	movwi [0]fsr1
  7584  0D3E  0857               	movf	_rsLoAvg+1,w
  7585  0D3F  3FC1               	movwi [1]fsr1
  7586  0D40  3001               	movlw	1
  7587  0D41  00AF               	movwf	??_modbus_response_write_single_register
  7588  0D42  082F               	movf	??_modbus_response_write_single_register,w
  7589  0D43  07B6               	addwf	modbus_response_write_single_register@i,f
  7590  0D44  301E               	movlw	30
  7591  0D45  0236               	subwf	modbus_response_write_single_register@i,w
  7592  0D46  1C03               	skipc
  7593  0D47  2D1A               	goto	l4708
  7594  0D48                     l804:	
  7595                           
  7596                           ;modbus.c: 147: }
  7597                           ;modbus.c: 148: }
  7598                           ;modbus.c: 149: fiSave=1;
  7599  0D48  01B3               	clrf	modbus_response_write_single_register@fiSave
  7600  0D49  0AB3               	incf	modbus_response_write_single_register@fiSave,f
  7601  0D4A                     l4714:	
  7602                           ;modbus.c: 153: return;
  7603                           
  7604                           ;modbus.c: 150: }
  7605                           ;modbus.c: 151: }else{
  7606                           
  7607                           
  7608                           ;modbus.c: 154: }
  7609                           ;modbus.c: 155: if(fiSave)sys_data_save();
  7610  0D4A  0833               	movf	modbus_response_write_single_register@fiSave,w
  7611  0D4B  1903               	btfsc	3,2
  7612  0D4C  2D50               	goto	l4718
  7613  0D4D  3190  2066  318C   	fcall	_sys_data_save
  7614  0D50                     l4718:	
  7615                           
  7616                           ;modbus.c: 156: if(pmdbs->addr==0)return;
  7617  0D50  0020               	movlb	0	; select bank0
  7618  0D51  0837               	movf	modbus_response_write_single_register@pmdbs,w
  7619  0D52  0086               	movwf	6
  7620  0D53  3001               	movlw	1	; select bank2/3
  7621  0D54  0087               	movwf	7
  7622  0D55  0801               	movf	1,w
  7623  0D56  1903               	btfsc	3,2
  7624  0D57  0008               	return
  7625                           
  7626                           ;modbus.c: 157: rbuf[0]=sysData.id;
  7627  0D58  305C               	movlw	92
  7628  0D59  0086               	movwf	6
  7629  0D5A  3023               	movlw	35
  7630  0D5B  0087               	movwf	7
  7631  0D5C  3142               	addfsr 1,2
  7632  0D5D  0801               	movf	1,w
  7633  0D5E  00AF               	movwf	??_modbus_response_write_single_register
  7634  0D5F  0838               	movf	modbus_response_write_single_register@rbuf,w
  7635  0D60  0086               	movwf	6
  7636  0D61  3001               	movlw	1	; select bank2/3
  7637  0D62  0087               	movwf	7
  7638  0D63  082F               	movf	??_modbus_response_write_single_register,w
  7639  0D64  0081               	movwf	1
  7640                           
  7641                           ;modbus.c: 158: crc_append(rbuf,6);
  7642  0D65  0838               	movf	modbus_response_write_single_register@rbuf,w
  7643  0D66  00A6               	movwf	crc_append@message
  7644  0D67  3001               	movlw	1
  7645  0D68  00A7               	movwf	crc_append@message+1
  7646  0D69  3006               	movlw	6
  7647  0D6A  00A8               	movwf	crc_append@n
  7648  0D6B  3000               	movlw	0
  7649  0D6C  00A9               	movwf	crc_append@n+1
  7650  0D6D  319E  26CF  318C   	fcall	_crc_append
  7651                           
  7652                           ;modbus.c: 159: uart_send_len(rbuf,8);
  7653  0D70  3008               	movlw	8
  7654  0D71  0020               	movlb	0	; select bank0
  7655  0D72  00AF               	movwf	??_modbus_response_write_single_register
  7656  0D73  082F               	movf	??_modbus_response_write_single_register,w
  7657  0D74  00F2               	movwf	uart_send_len@len
  7658  0D75  0838               	movf	modbus_response_write_single_register@rbuf,w
  7659  0D76  319E  2689         	fcall	_uart_send_len
  7660  0D78  0008               	return
  7661  0D79                     __end_of_modbus_response_write_single_register:	
  7662                           
  7663                           	psect	text15
  7664  139E                     __ptext15:	
  7665 ;; *************** function _modbus_response_write_mult_register *****************
  7666 ;; Defined at:
  7667 ;;		line 162 in file "src/api/modbus.c"
  7668 ;; Parameters:    Size  Location     Type
  7669 ;;  rbuf            1    wreg     PTR unsigned char 
  7670 ;;		 -> modbusBuf(32), 
  7671 ;; Auto vars:     Size  Location     Type
  7672 ;;  rbuf            1   18[BANK0 ] PTR unsigned char 
  7673 ;;		 -> modbusBuf(32), 
  7674 ;;  stb             1   19[BANK0 ] PTR struct .
  7675 ;;		 -> modbusBuf(32), 
  7676 ;;  len             1   17[BANK0 ] unsigned char 
  7677 ;;  startAddr       1   16[BANK0 ] unsigned char 
  7678 ;; Return value:  Size  Location     Type
  7679 ;;                  1    wreg      void 
  7680 ;; Registers used:
  7681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7682 ;; Tracked objects:
  7683 ;;		On entry : 0/0
  7684 ;;		On exit  : 0/0
  7685 ;;		Unchanged: 0/0
  7686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7688 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7689 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7690 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7691 ;;Total ram usage:        5 bytes
  7692 ;; Hardware stack levels used:    1
  7693 ;; Hardware stack levels required when called:    4
  7694 ;; This function calls:
  7695 ;;		_crc_append
  7696 ;;		_sys_data_save
  7697 ;;		_uart_send_len
  7698 ;; This function is called by:
  7699 ;;		_modbus_response_process
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           
  7703                           
  7704                           ;psect for function _modbus_response_write_mult_register
  7705  139E                     _modbus_response_write_mult_register:	
  7706                           
  7707                           ;incstack = 0
  7708                           ; Regs used in _modbus_response_write_mult_register: [wreg-fsr1h+status,2+status,0+pclat
      +                          h+cstack]
  7709                           ;modbus_response_write_mult_register@rbuf stored from wreg
  7710  139E  0020               	movlb	0	; select bank0
  7711  139F  00B2               	movwf	modbus_response_write_mult_register@rbuf
  7712                           
  7713                           ;modbus.c: 164: uint8_t startAddr,len;
  7714                           ;modbus.c: 166: st_modbusWriteMultReg_t* stb=(st_modbusWriteMultReg_t*)rbuf;
  7715  13A0  0832               	movf	modbus_response_write_mult_register@rbuf,w
  7716  13A1  00AF               	movwf	??_modbus_response_write_mult_register
  7717  13A2  082F               	movf	??_modbus_response_write_mult_register,w
  7718  13A3  00B3               	movwf	modbus_response_write_mult_register@stb
  7719                           
  7720                           ;modbus.c: 167: if(stb->addr!=sysData.id || stb->addr==0)return;
  7721  13A4  305C               	movlw	92
  7722  13A5  0086               	movwf	6
  7723  13A6  3023               	movlw	35
  7724  13A7  0087               	movwf	7
  7725  13A8  3142               	addfsr 1,2
  7726  13A9  0833               	movf	modbus_response_write_mult_register@stb,w
  7727  13AA  0084               	movwf	4
  7728  13AB  3001               	movlw	1	; select bank2/3
  7729  13AC  0085               	movwf	5
  7730  13AD  0800               	movf	0,w
  7731  13AE  0601               	xorwf	1,w
  7732  13AF  1D03               	skipz
  7733  13B0  0008               	return
  7734  13B1  0833               	movf	modbus_response_write_mult_register@stb,w
  7735  13B2  0086               	movwf	6
  7736  13B3  3001               	movlw	1	; select bank2/3
  7737  13B4  0087               	movwf	7
  7738  13B5  0801               	movf	1,w
  7739  13B6  1903               	btfsc	3,2
  7740  13B7  0008               	return
  7741                           
  7742                           ;modbus.c: 168: startAddr=stb->addr_lo;
  7743  13B8  0833               	movf	modbus_response_write_mult_register@stb,w
  7744  13B9  0086               	movwf	6
  7745  13BA  3001               	movlw	1	; select bank2/3
  7746  13BB  0087               	movwf	7
  7747  13BC  3001               	movlw	1	; select bank2/3
  7748  13BD  3F43               	moviw [3]fsr1
  7749  13BE  00B0               	movwf	modbus_response_write_mult_register@startAddr
  7750                           
  7751                           ;modbus.c: 169: len=stb->len_lo;
  7752  13BF  0833               	movf	modbus_response_write_mult_register@stb,w
  7753  13C0  0086               	movwf	6
  7754  13C1  3001               	movlw	1	; select bank2/3
  7755  13C2  0087               	movwf	7
  7756  13C3  3001               	movlw	1	; select bank2/3
  7757  13C4  3F45               	moviw [5]fsr1
  7758  13C5  00B1               	movwf	modbus_response_write_mult_register@len
  7759                           
  7760                           ;modbus.c: 170: if(len!=3)return ;
  7761  13C6  3003               	movlw	3
  7762  13C7  0631               	xorwf	modbus_response_write_mult_register@len,w
  7763  13C8  1D03               	btfss	3,2
  7764  13C9  0008               	return
  7765                           
  7766                           ;modbus.c: 171: if(startAddr!=4)return;
  7767  13CA  3004               	movlw	4
  7768  13CB  0630               	xorwf	modbus_response_write_mult_register@startAddr,w
  7769  13CC  1D03               	btfss	3,2
  7770  13CD  0008               	return
  7771                           
  7772                           ;modbus.c: 173: sysData.pidKp=(stb->data[0]<<8)|(stb->data[1]);
  7773  13CE  0833               	movf	modbus_response_write_mult_register@stb,w
  7774  13CF  3E06               	addlw	6
  7775  13D0  0084               	movwf	4
  7776  13D1  3001               	movlw	1	; select bank2/3
  7777  13D2  0085               	movwf	5
  7778  13D3  0800               	movf	0,w
  7779  13D4  00AF               	movwf	??_modbus_response_write_mult_register
  7780  13D5  0833               	movf	modbus_response_write_mult_register@stb,w
  7781  13D6  3E07               	addlw	7
  7782  13D7  0084               	movwf	4
  7783  13D8  3001               	movlw	1	; select bank2/3
  7784  13D9  0085               	movwf	5
  7785  13DA  305C               	movlw	92
  7786  13DB  0086               	movwf	6
  7787  13DC  3023               	movlw	35
  7788  13DD  0087               	movwf	7
  7789  13DE  3144               	addfsr 1,4
  7790  13DF  0800               	movf	0,w
  7791  13E0  3FC0               	movwi [0]fsr1
  7792  13E1  082F               	movf	??_modbus_response_write_mult_register,w
  7793  13E2  3FC1               	movwi [1]fsr1
  7794                           
  7795                           ;modbus.c: 174: sysData.pidTi=(stb->data[2]<<8)|(stb->data[3]);
  7796  13E3  0833               	movf	modbus_response_write_mult_register@stb,w
  7797  13E4  3E08               	addlw	8
  7798  13E5  0084               	movwf	4
  7799  13E6  3001               	movlw	1	; select bank2/3
  7800  13E7  0085               	movwf	5
  7801  13E8  0800               	movf	0,w
  7802  13E9  00AF               	movwf	??_modbus_response_write_mult_register
  7803  13EA  0833               	movf	modbus_response_write_mult_register@stb,w
  7804  13EB  3E09               	addlw	9
  7805  13EC  0084               	movwf	4
  7806  13ED  3001               	movlw	1	; select bank2/3
  7807  13EE  0085               	movwf	5
  7808  13EF  305C               	movlw	92
  7809  13F0  0086               	movwf	6
  7810  13F1  3023               	movlw	35
  7811  13F2  0087               	movwf	7
  7812  13F3  3146               	addfsr 1,6
  7813  13F4  0800               	movf	0,w
  7814  13F5  3FC0               	movwi [0]fsr1
  7815  13F6  082F               	movf	??_modbus_response_write_mult_register,w
  7816  13F7  3FC1               	movwi [1]fsr1
  7817                           
  7818                           ;modbus.c: 176: sys_data_save();
  7819  13F8  3190  2066  3193   	fcall	_sys_data_save
  7820                           
  7821                           ;modbus.c: 177: crc_append(rbuf,sizeof(st_modbusWriteMultReg_t)-2);
  7822  13FB  0020               	movlb	0	; select bank0
  7823  13FC  0832               	movf	modbus_response_write_mult_register@rbuf,w
  7824  13FD  00A6               	movwf	crc_append@message
  7825  13FE  3001               	movlw	1
  7826  13FF  00A7               	movwf	crc_append@message+1
  7827  1400  3006               	movlw	6
  7828  1401  00A8               	movwf	crc_append@n
  7829  1402  3000               	movlw	0
  7830  1403  00A9               	movwf	crc_append@n+1
  7831  1404  319E  26CF  3193   	fcall	_crc_append
  7832                           
  7833                           ;modbus.c: 178: uart_send_len(rbuf,sizeof(st_modbusWriteMultReg_t));
  7834  1407  3008               	movlw	8
  7835  1408  0020               	movlb	0	; select bank0
  7836  1409  00AF               	movwf	??_modbus_response_write_mult_register
  7837  140A  082F               	movf	??_modbus_response_write_mult_register,w
  7838  140B  00F2               	movwf	uart_send_len@len
  7839  140C  0832               	movf	modbus_response_write_mult_register@rbuf,w
  7840  140D  319E  2689         	fcall	_uart_send_len
  7841  140F  0008               	return
  7842  1410                     __end_of_modbus_response_write_mult_register:	
  7843                           
  7844                           	psect	text16
  7845  1066                     __ptext16:	
  7846 ;; *************** function _sys_data_save *****************
  7847 ;; Defined at:
  7848 ;;		line 95 in file "src/api/sysData.c"
  7849 ;; Parameters:    Size  Location     Type
  7850 ;;		None
  7851 ;; Auto vars:     Size  Location     Type
  7852 ;;		None
  7853 ;; Return value:  Size  Location     Type
  7854 ;;                  1    wreg      void 
  7855 ;; Registers used:
  7856 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7857 ;; Tracked objects:
  7858 ;;		On entry : 0/0
  7859 ;;		On exit  : 0/0
  7860 ;;		Unchanged: 0/0
  7861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7866 ;;Total ram usage:        0 bytes
  7867 ;; Hardware stack levels used:    1
  7868 ;; Hardware stack levels required when called:    3
  7869 ;; This function calls:
  7870 ;;		_crc_append
  7871 ;;		_my_flash_read_system_erase
  7872 ;;		_my_flash_system_write
  7873 ;; This function is called by:
  7874 ;;		_sys_data_init
  7875 ;;		_modbus_response_write_single_register
  7876 ;;		_modbus_response_write_mult_register
  7877 ;; This function uses a non-reentrant model
  7878 ;;
  7879                           
  7880                           
  7881                           ;psect for function _sys_data_save
  7882  1066                     _sys_data_save:	
  7883                           
  7884                           ;sysData.c: 97: crc_append((uint8_t*)&sysData,sizeof(sysData_t)-2);
  7885                           
  7886                           ;incstack = 0
  7887                           ; Regs used in _sys_data_save: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7888  1066  305C               	movlw	92
  7889  1067  0020               	movlb	0	; select bank0
  7890  1068  00A6               	movwf	crc_append@message
  7891  1069  3023               	movlw	35
  7892  106A  00A7               	movwf	crc_append@message+1
  7893  106B  3082               	movlw	130
  7894  106C  00A8               	movwf	crc_append@n
  7895  106D  3000               	movlw	0
  7896  106E  00A9               	movwf	crc_append@n+1
  7897  106F  319E  26CF  3190   	fcall	_crc_append
  7898                           
  7899                           ;sysData.c: 98: my_flash_read_system_erase();
  7900  1072  319E  26AC  3190   	fcall	_my_flash_read_system_erase
  7901                           
  7902                           ;sysData.c: 99: my_flash_system_write((uint8_t*)&sysData,sizeof(sysData_t));
  7903  1075  305C               	movlw	92
  7904  1076  00F2               	movwf	my_flash_system_write@buf
  7905  1077  3023               	movlw	35
  7906  1078  00F3               	movwf	my_flash_system_write@buf+1
  7907  1079  3084               	movlw	132
  7908  107A  00F4               	movwf	my_flash_system_write@len
  7909  107B  3000               	movlw	0
  7910  107C  00F5               	movwf	my_flash_system_write@len+1
  7911  107D  3194  2492         	fcall	_my_flash_system_write
  7912                           
  7913                           ;sysData.c: 100: PidKp=sysData.pidKp;
  7914  107F  305C               	movlw	92
  7915  1080  0086               	movwf	6
  7916  1081  3023               	movlw	35
  7917  1082  0087               	movwf	7
  7918  1083  3144               	addfsr 1,4
  7919  1084  3F40               	moviw [0]fsr1
  7920  1085  0021               	movlb	1	; select bank1
  7921  1086  00CC               	movwf	_PidKp^(0+128)
  7922  1087  3F41               	moviw [1]fsr1
  7923  1088  00CD               	movwf	(_PidKp+1)^(0+128)
  7924                           
  7925                           ;sysData.c: 101: PidTi=sysData.pidTi;
  7926  1089  305C               	movlw	92
  7927  108A  0086               	movwf	6
  7928  108B  3023               	movlw	35
  7929  108C  0087               	movwf	7
  7930  108D  3146               	addfsr 1,6
  7931  108E  3F40               	moviw [0]fsr1
  7932  108F  00CA               	movwf	_PidTi^(0+128)
  7933  1090  3F41               	moviw [1]fsr1
  7934  1091  00CB               	movwf	(_PidTi+1)^(0+128)
  7935                           
  7936                           ;sysData.c: 102: PidTd=sysData.pidTd;;
  7937  1092  305C               	movlw	92
  7938  1093  0086               	movwf	6
  7939  1094  3023               	movlw	35
  7940  1095  0087               	movwf	7
  7941  1096  3148               	addfsr 1,8
  7942  1097  3F40               	moviw [0]fsr1
  7943  1098  00C8               	movwf	_PidTd^(0+128)
  7944  1099  3F41               	moviw [1]fsr1
  7945  109A  00C9               	movwf	(_PidTd+1)^(0+128)
  7946  109B  0008               	return
  7947  109C                     __end_of_sys_data_save:	
  7948                           
  7949                           	psect	text17
  7950  1492                     __ptext17:	
  7951 ;; *************** function _my_flash_system_write *****************
  7952 ;; Defined at:
  7953 ;;		line 47 in file "src/api/sysData.c"
  7954 ;; Parameters:    Size  Location     Type
  7955 ;;  buf             2    2[COMMON] PTR unsigned char 
  7956 ;;		 -> sysData(132), 
  7957 ;;  len             2    4[COMMON] unsigned int 
  7958 ;; Auto vars:     Size  Location     Type
  7959 ;;  flashAddr       2    7[BANK0 ] unsigned int 
  7960 ;;  loc             2    5[BANK0 ] unsigned int 
  7961 ;;  blocNum         2    3[BANK0 ] unsigned int 
  7962 ;;  j               2    0[BANK0 ] unsigned int 
  7963 ;;  i               1    9[BANK0 ] unsigned char 
  7964 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
  7965 ;; Return value:  Size  Location     Type
  7966 ;;                  2    2[COMMON] unsigned int 
  7967 ;; Registers used:
  7968 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7969 ;; Tracked objects:
  7970 ;;		On entry : 0/0
  7971 ;;		On exit  : 0/0
  7972 ;;		Unchanged: 0/0
  7973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7974 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7975 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7976 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7977 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7978 ;;Total ram usage:       16 bytes
  7979 ;; Hardware stack levels used:    1
  7980 ;; Hardware stack levels required when called:    1
  7981 ;; This function calls:
  7982 ;;		Nothing
  7983 ;; This function is called by:
  7984 ;;		_sys_data_save
  7985 ;; This function uses a non-reentrant model
  7986 ;;
  7987                           
  7988                           
  7989                           ;psect for function _my_flash_system_write
  7990  1492                     _my_flash_system_write:	
  7991                           
  7992                           ;sysData.c: 49: uint16_t blocNum=0;
  7993                           
  7994                           ;incstack = 0
  7995                           ; Regs used in _my_flash_system_write: [wreg+fsr1l+fsr1h+status,2+status,0]
  7996  1492  0020               	movlb	0	; select bank0
  7997  1493  01A3               	clrf	my_flash_system_write@blocNum
  7998  1494  01A4               	clrf	my_flash_system_write@blocNum+1
  7999                           
  8000                           ;sysData.c: 50: uint16_t loc,j;
  8001                           ;sysData.c: 51: uint16_t flashAddr=0x1f00;
  8002  1495  3000               	movlw	0
  8003  1496  00A7               	movwf	my_flash_system_write@flashAddr
  8004  1497  301F               	movlw	31
  8005  1498  00A8               	movwf	my_flash_system_write@flashAddr+1
  8006                           
  8007                           ;sysData.c: 52: uint8_t GIEBitValue=INTCONbits.GIE;
  8008  1499  3000               	movlw	0
  8009  149A  1B8B               	btfsc	11,7	;volatile
  8010  149B  3001               	movlw	1
  8011  149C  00A2               	movwf	my_flash_system_write@GIEBitValue
  8012                           
  8013                           ;sysData.c: 53: uint8_t i=0;
  8014  149D  01A9               	clrf	my_flash_system_write@i
  8015                           
  8016                           ;sysData.c: 54: blocNum=len/32;
  8017  149E  0875               	movf	my_flash_system_write@len+1,w
  8018  149F  00F7               	movwf	??_my_flash_system_write+1
  8019  14A0  0874               	movf	my_flash_system_write@len,w
  8020  14A1  00F6               	movwf	??_my_flash_system_write
  8021  14A2  3005               	movlw	5
  8022  14A3                     u2115:	
  8023  14A3  36F7               	lsrf	??_my_flash_system_write+1,f
  8024  14A4  0CF6               	rrf	??_my_flash_system_write,f
  8025  14A5  0B89               	decfsz	9,f
  8026  14A6  2CA3               	goto	u2115
  8027  14A7  0876               	movf	??_my_flash_system_write,w
  8028  14A8  00A3               	movwf	my_flash_system_write@blocNum
  8029  14A9  0877               	movf	??_my_flash_system_write+1,w
  8030  14AA  00A4               	movwf	my_flash_system_write@blocNum+1
  8031                           
  8032                           ;sysData.c: 55: if(len%32)blocNum++;
  8033  14AB  301F               	movlw	31
  8034  14AC  0574               	andwf	my_flash_system_write@len,w
  8035  14AD  00F6               	movwf	??_my_flash_system_write
  8036  14AE  3000               	movlw	0
  8037  14AF  0575               	andwf	my_flash_system_write@len+1,w
  8038  14B0  00F7               	movwf	??_my_flash_system_write+1
  8039  14B1  0876               	movf	??_my_flash_system_write,w
  8040  14B2  0477               	iorwf	??_my_flash_system_write+1,w
  8041  14B3  1903               	btfsc	3,2
  8042  14B4  2CB9               	goto	l3196
  8043  14B5  3001               	movlw	1
  8044  14B6  07A3               	addwf	my_flash_system_write@blocNum,f
  8045  14B7  3000               	movlw	0
  8046  14B8  3DA4               	addwfc	my_flash_system_write@blocNum+1,f
  8047  14B9                     l3196:	
  8048                           
  8049                           ;sysData.c: 57: INTCONbits.GIE = 0;
  8050  14B9  138B               	bcf	11,7	;volatile
  8051                           
  8052                           ;sysData.c: 58: loc=0;
  8053  14BA  01A5               	clrf	my_flash_system_write@loc
  8054  14BB  01A6               	clrf	my_flash_system_write@loc+1
  8055                           
  8056                           ;sysData.c: 59: for(j=0;j<blocNum;j++){
  8057  14BC  01A0               	clrf	my_flash_system_write@j
  8058  14BD  01A1               	clrf	my_flash_system_write@j+1
  8059  14BE                     l714:	
  8060  14BE  0824               	movf	my_flash_system_write@blocNum+1,w
  8061  14BF  0221               	subwf	my_flash_system_write@j+1,w
  8062  14C0  1D03               	skipz
  8063  14C1  2CC4               	goto	u2175
  8064  14C2  0823               	movf	my_flash_system_write@blocNum,w
  8065  14C3  0220               	subwf	my_flash_system_write@j,w
  8066  14C4                     u2175:	
  8067  14C4  1803               	btfsc	3,0
  8068  14C5  2D1A               	goto	l3240
  8069                           
  8070                           ;sysData.c: 60: PMCON1bits.CFGS = 0;
  8071  14C6  0023               	movlb	3	; select bank3
  8072  14C7  1315               	bcf	21,6	;volatile
  8073                           
  8074                           ;sysData.c: 61: PMCON1bits.WREN = 1;
  8075  14C8  1515               	bsf	21,2	;volatile
  8076                           
  8077                           ;sysData.c: 62: PMCON1bits.LWLO = 1;
  8078  14C9  1695               	bsf	21,5	;volatile
  8079                           
  8080                           ;sysData.c: 64: for(i=0;i<32;i++){
  8081  14CA  0020               	movlb	0	; select bank0
  8082  14CB  01A9               	clrf	my_flash_system_write@i
  8083  14CC  3020               	movlw	32
  8084  14CD  0229               	subwf	my_flash_system_write@i,w
  8085  14CE  1803               	btfsc	3,0
  8086  14CF  2D12               	goto	l717
  8087  14D0                     l3208:	
  8088                           
  8089                           ;sysData.c: 66: PMADRL = (flashAddr & 0xFF);
  8090  14D0  0827               	movf	my_flash_system_write@flashAddr,w
  8091  14D1  0023               	movlb	3	; select bank3
  8092  14D2  0091               	movwf	17	;volatile
  8093                           
  8094                           ;sysData.c: 68: PMADRH = ((flashAddr & 0xFF00) >> 8);
  8095  14D3  0020               	movlb	0	; select bank0
  8096  14D4  0828               	movf	my_flash_system_write@flashAddr+1,w
  8097  14D5  0023               	movlb	3	; select bank3
  8098  14D6  0092               	movwf	18	;volatile
  8099                           
  8100                           ;sysData.c: 71: if(loc<len){
  8101  14D7  0875               	movf	my_flash_system_write@len+1,w
  8102  14D8  0020               	movlb	0	; select bank0
  8103  14D9  0226               	subwf	my_flash_system_write@loc+1,w
  8104  14DA  1D03               	skipz
  8105  14DB  2CDE               	goto	u2145
  8106  14DC  0874               	movf	my_flash_system_write@len,w
  8107  14DD  0225               	subwf	my_flash_system_write@loc,w
  8108  14DE                     u2145:	
  8109  14DE  1803               	skipnc
  8110  14DF  2CEA               	goto	l3216
  8111                           
  8112                           ;sysData.c: 72: PMDATL = buf[loc];
  8113  14E0  0825               	movf	my_flash_system_write@loc,w
  8114  14E1  0772               	addwf	my_flash_system_write@buf,w
  8115  14E2  0086               	movwf	6
  8116  14E3  0826               	movf	my_flash_system_write@loc+1,w
  8117  14E4  3D73               	addwfc	my_flash_system_write@buf+1,w
  8118  14E5  0087               	movwf	7
  8119  14E6  0801               	movf	1,w
  8120  14E7  0023               	movlb	3	; select bank3
  8121  14E8  0093               	movwf	19	;volatile
  8122                           
  8123                           ;sysData.c: 73: }else{
  8124  14E9  2CEC               	goto	l3218
  8125  14EA                     l3216:	
  8126                           
  8127                           ;sysData.c: 74: PMDATL = 0x00;
  8128  14EA  0023               	movlb	3	; select bank3
  8129  14EB  0193               	clrf	19	;volatile
  8130  14EC                     l3218:	
  8131                           
  8132                           ;sysData.c: 75: }
  8133                           ;sysData.c: 76: loc++;
  8134  14EC  3001               	movlw	1
  8135  14ED  0020               	movlb	0	; select bank0
  8136  14EE  07A5               	addwf	my_flash_system_write@loc,f
  8137  14EF  3000               	movlw	0
  8138  14F0  3DA6               	addwfc	my_flash_system_write@loc+1,f
  8139                           
  8140                           ;sysData.c: 77: PMDATH = 0x00;
  8141  14F1  0023               	movlb	3	; select bank3
  8142  14F2  0194               	clrf	20	;volatile
  8143                           
  8144                           ;sysData.c: 78: if((i%32) == 32 -1 ){
  8145  14F3  301F               	movlw	31
  8146  14F4  0020               	movlb	0	; select bank0
  8147  14F5  0529               	andwf	my_flash_system_write@i,w
  8148  14F6  00F6               	movwf	??_my_flash_system_write
  8149  14F7  301F               	movlw	31
  8150  14F8  0676               	xorwf	??_my_flash_system_write,w
  8151  14F9  1D03               	btfss	3,2
  8152  14FA  2CFD               	goto	l3226
  8153                           
  8154                           ;sysData.c: 79: PMCON1bits.LWLO = 0;
  8155  14FB  0023               	movlb	3	; select bank3
  8156  14FC  1295               	bcf	21,5	;volatile
  8157  14FD                     l3226:	
  8158                           
  8159                           ;sysData.c: 80: }
  8160                           ;sysData.c: 82: PMCON2 = 0x55;
  8161  14FD  3055               	movlw	85
  8162  14FE  0023               	movlb	3	; select bank3
  8163  14FF  0096               	movwf	22	;volsfr
  8164                           
  8165                           ;sysData.c: 83: PMCON2 = 0xAA;
  8166  1500  30AA               	movlw	170
  8167  1501  0096               	movwf	22	;volsfr
  8168                           
  8169                           ;sysData.c: 84: PMCON1bits.WR = 1;
  8170  1502  1495               	bsf	21,1	;volatile
  8171                           
  8172                           ;sysData.c: 85: __nop();
  8173  1503  0000               	nop
  8174                           
  8175                           ;sysData.c: 86: __nop();
  8176  1504  0000               	nop
  8177                           
  8178                           ;sysData.c: 87: flashAddr++;
  8179  1505  3001               	movlw	1
  8180  1506  0020               	movlb	0	; select bank0
  8181  1507  07A7               	addwf	my_flash_system_write@flashAddr,f
  8182  1508  3000               	movlw	0
  8183  1509  3DA8               	addwfc	my_flash_system_write@flashAddr+1,f
  8184  150A  3001               	movlw	1
  8185  150B  00F6               	movwf	??_my_flash_system_write
  8186  150C  0876               	movf	??_my_flash_system_write,w
  8187  150D  07A9               	addwf	my_flash_system_write@i,f
  8188  150E  3020               	movlw	32
  8189  150F  0229               	subwf	my_flash_system_write@i,w
  8190  1510  1C03               	skipc
  8191  1511  2CD0               	goto	l3208
  8192  1512                     l717:	
  8193                           
  8194                           ;sysData.c: 88: }
  8195                           ;sysData.c: 89: PMCON1bits.WREN = 0;
  8196  1512  0023               	movlb	3	; select bank3
  8197  1513  1115               	bcf	21,2	;volatile
  8198  1514  3001               	movlw	1
  8199  1515  0020               	movlb	0	; select bank0
  8200  1516  07A0               	addwf	my_flash_system_write@j,f
  8201  1517  3000               	movlw	0
  8202  1518  3DA1               	addwfc	my_flash_system_write@j+1,f
  8203  1519  2CBE               	goto	l714
  8204  151A                     l3240:	
  8205                           
  8206                           ;sysData.c: 90: }
  8207                           ;sysData.c: 91: INTCONbits.GIE = GIEBitValue;
  8208  151A  0C22               	rrf	my_flash_system_write@GIEBitValue,w
  8209  151B  1C03               	skipc
  8210  151C  138B               	bcf	11,7	;volatile
  8211  151D  1803               	skipnc
  8212  151E  178B               	bsf	11,7	;volatile
  8213  151F  0008               	return
  8214  1520                     __end_of_my_flash_system_write:	
  8215                           ;sysData.c: 93: return 0;
  8216                           ;	Return value of _my_flash_system_write is never used
  8217                           
  8218                           
  8219                           	psect	text18
  8220  1EAC                     __ptext18:	
  8221 ;; *************** function _my_flash_read_system_erase *****************
  8222 ;; Defined at:
  8223 ;;		line 9 in file "src/api/sysData.c"
  8224 ;; Parameters:    Size  Location     Type
  8225 ;;		None
  8226 ;; Auto vars:     Size  Location     Type
  8227 ;;		None
  8228 ;; Return value:  Size  Location     Type
  8229 ;;                  1    wreg      void 
  8230 ;; Registers used:
  8231 ;;		wreg, status,2, status,0, pclath, cstack
  8232 ;; Tracked objects:
  8233 ;;		On entry : 0/0
  8234 ;;		On exit  : 0/0
  8235 ;;		Unchanged: 0/0
  8236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8241 ;;Total ram usage:        0 bytes
  8242 ;; Hardware stack levels used:    1
  8243 ;; Hardware stack levels required when called:    2
  8244 ;; This function calls:
  8245 ;;		_FLASH_EraseBlock
  8246 ;; This function is called by:
  8247 ;;		_sys_data_save
  8248 ;; This function uses a non-reentrant model
  8249 ;;
  8250                           
  8251                           
  8252                           ;psect for function _my_flash_read_system_erase
  8253  1EAC                     _my_flash_read_system_erase:	
  8254                           
  8255                           ;sysData.c: 16: FLASH_EraseBlock(0x1f00);
  8256                           
  8257                           ;incstack = 0
  8258                           ; Regs used in _my_flash_read_system_erase: [wreg+status,2+status,0+pclath+cstack]
  8259  1EAC  3000               	movlw	0
  8260  1EAD  00F2               	movwf	FLASH_EraseBlock@startAddr
  8261  1EAE  301F               	movlw	31
  8262  1EAF  00F3               	movwf	FLASH_EraseBlock@startAddr+1
  8263  1EB0  319E  2616  319E   	fcall	_FLASH_EraseBlock
  8264                           
  8265                           ;sysData.c: 17: FLASH_EraseBlock(0x1f00+32);
  8266  1EB3  3020               	movlw	32
  8267  1EB4  00F2               	movwf	FLASH_EraseBlock@startAddr
  8268  1EB5  301F               	movlw	31
  8269  1EB6  00F3               	movwf	FLASH_EraseBlock@startAddr+1
  8270  1EB7  319E  2616  319E   	fcall	_FLASH_EraseBlock
  8271                           
  8272                           ;sysData.c: 18: FLASH_EraseBlock(0x1f00+64);
  8273  1EBA  3040               	movlw	64
  8274  1EBB  00F2               	movwf	FLASH_EraseBlock@startAddr
  8275  1EBC  301F               	movlw	31
  8276  1EBD  00F3               	movwf	FLASH_EraseBlock@startAddr+1
  8277  1EBE  319E  2616  319E   	fcall	_FLASH_EraseBlock
  8278                           
  8279                           ;sysData.c: 19: FLASH_EraseBlock(0x1f00+96);
  8280  1EC1  3060               	movlw	96
  8281  1EC2  00F2               	movwf	FLASH_EraseBlock@startAddr
  8282  1EC3  301F               	movlw	31
  8283  1EC4  00F3               	movwf	FLASH_EraseBlock@startAddr+1
  8284  1EC5  319E  2616  319E   	fcall	_FLASH_EraseBlock
  8285                           
  8286                           ;sysData.c: 20: FLASH_EraseBlock(0x1f00+128);
  8287  1EC8  3080               	movlw	128
  8288  1EC9  00F2               	movwf	FLASH_EraseBlock@startAddr
  8289  1ECA  301F               	movlw	31
  8290  1ECB  00F3               	movwf	FLASH_EraseBlock@startAddr+1
  8291  1ECC  319E  2616         	fcall	_FLASH_EraseBlock
  8292  1ECE  0008               	return
  8293  1ECF                     __end_of_my_flash_read_system_erase:	
  8294                           
  8295                           	psect	text19
  8296  1E16                     __ptext19:	
  8297 ;; *************** function _FLASH_EraseBlock *****************
  8298 ;; Defined at:
  8299 ;;		line 147 in file "mcc_generated_files/memory.c"
  8300 ;; Parameters:    Size  Location     Type
  8301 ;;  startAddr       2    2[COMMON] unsigned int 
  8302 ;; Auto vars:     Size  Location     Type
  8303 ;;  GIEBitValue     1    4[COMMON] unsigned char 
  8304 ;; Return value:  Size  Location     Type
  8305 ;;                  1    wreg      void 
  8306 ;; Registers used:
  8307 ;;		wreg, status,2, status,0
  8308 ;; Tracked objects:
  8309 ;;		On entry : 0/0
  8310 ;;		On exit  : 0/0
  8311 ;;		Unchanged: 0/0
  8312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8316 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8317 ;;Total ram usage:        3 bytes
  8318 ;; Hardware stack levels used:    1
  8319 ;; Hardware stack levels required when called:    1
  8320 ;; This function calls:
  8321 ;;		Nothing
  8322 ;; This function is called by:
  8323 ;;		_my_flash_read_system_erase
  8324 ;;		_FLASH_WriteBlock
  8325 ;; This function uses a non-reentrant model
  8326 ;;
  8327                           
  8328                           
  8329                           ;psect for function _FLASH_EraseBlock
  8330  1E16                     _FLASH_EraseBlock:	
  8331                           
  8332                           ;memory.c: 149: uint8_t GIEBitValue = INTCONbits.GIE;
  8333                           
  8334                           ;incstack = 0
  8335                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  8336  1E16  3000               	movlw	0
  8337  1E17  1B8B               	btfsc	11,7	;volatile
  8338  1E18  3001               	movlw	1
  8339  1E19  00F4               	movwf	FLASH_EraseBlock@GIEBitValue
  8340                           
  8341                           ;memory.c: 152: INTCONbits.GIE = 0;
  8342  1E1A  138B               	bcf	11,7	;volatile
  8343                           
  8344                           ;memory.c: 154: PMADRL = (startAddr & 0xFF);
  8345  1E1B  0872               	movf	FLASH_EraseBlock@startAddr,w
  8346  1E1C  0023               	movlb	3	; select bank3
  8347  1E1D  0091               	movwf	17	;volatile
  8348                           
  8349                           ;memory.c: 156: PMADRH = ((startAddr & 0xFF00) >> 8);
  8350  1E1E  0873               	movf	FLASH_EraseBlock@startAddr+1,w
  8351  1E1F  0092               	movwf	18	;volatile
  8352                           
  8353                           ;memory.c: 159: PMCON1bits.CFGS = 0;
  8354  1E20  1315               	bcf	21,6	;volatile
  8355                           
  8356                           ;memory.c: 160: PMCON1bits.FREE = 1;
  8357  1E21  1615               	bsf	21,4	;volatile
  8358                           
  8359                           ;memory.c: 161: PMCON1bits.WREN = 1;
  8360  1E22  1515               	bsf	21,2	;volatile
  8361                           
  8362                           ;memory.c: 164: PMCON2 = 0x55;
  8363  1E23  3055               	movlw	85
  8364  1E24  0096               	movwf	22	;volsfr
  8365                           
  8366                           ;memory.c: 165: PMCON2 = 0xAA;
  8367  1E25  30AA               	movlw	170
  8368  1E26  0096               	movwf	22	;volsfr
  8369                           
  8370                           ;memory.c: 166: PMCON1bits.WR = 1;
  8371  1E27  1495               	bsf	21,1	;volatile
  8372                           
  8373                           ;memory.c: 167: __nop();
  8374  1E28  0000               	nop
  8375                           
  8376                           ;memory.c: 168: __nop();
  8377  1E29  0000               	nop
  8378                           
  8379                           ;memory.c: 170: PMCON1bits.WREN = 0;
  8380  1E2A  0023               	movlb	3	; select bank3
  8381  1E2B  1115               	bcf	21,2	;volatile
  8382                           
  8383                           ;memory.c: 171: INTCONbits.GIE = GIEBitValue;
  8384  1E2C  0C74               	rrf	FLASH_EraseBlock@GIEBitValue,w
  8385  1E2D  1C03               	skipc
  8386  1E2E  138B               	bcf	11,7	;volatile
  8387  1E2F  1803               	skipnc
  8388  1E30  178B               	bsf	11,7	;volatile
  8389  1E31  0008               	return
  8390  1E32                     __end_of_FLASH_EraseBlock:	
  8391                           
  8392                           	psect	text20
  8393  114F                     __ptext20:	
  8394 ;; *************** function _modbus_response_illgeal_function *****************
  8395 ;; Defined at:
  8396 ;;		line 8 in file "src/api/modbus.c"
  8397 ;; Parameters:    Size  Location     Type
  8398 ;;  buf             1    wreg     PTR unsigned char 
  8399 ;;		 -> modbusBuf(32), 
  8400 ;;  errcode         1   15[BANK0 ] unsigned char 
  8401 ;; Auto vars:     Size  Location     Type
  8402 ;;  buf             1   17[BANK0 ] PTR unsigned char 
  8403 ;;		 -> modbusBuf(32), 
  8404 ;;  pmdbs           1   18[BANK0 ] PTR struct .
  8405 ;;		 -> modbusBuf(32), 
  8406 ;; Return value:  Size  Location     Type
  8407 ;;                  1    wreg      void 
  8408 ;; Registers used:
  8409 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8410 ;; Tracked objects:
  8411 ;;		On entry : 0/0
  8412 ;;		On exit  : 0/0
  8413 ;;		Unchanged: 0/0
  8414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8415 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8416 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8417 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8418 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8419 ;;Total ram usage:        4 bytes
  8420 ;; Hardware stack levels used:    1
  8421 ;; Hardware stack levels required when called:    3
  8422 ;; This function calls:
  8423 ;;		_crc_append
  8424 ;;		_uart_send_len
  8425 ;; This function is called by:
  8426 ;;		_modbus_response_process
  8427 ;; This function uses a non-reentrant model
  8428 ;;
  8429                           
  8430                           
  8431                           ;psect for function _modbus_response_illgeal_function
  8432  114F                     _modbus_response_illgeal_function:	
  8433                           
  8434                           ;incstack = 0
  8435                           ; Regs used in _modbus_response_illgeal_function: [wreg+fsr1l+fsr1h+status,2+status,0+pc
      +                          lath+cstack]
  8436                           ;modbus_response_illgeal_function@buf stored from wreg
  8437  114F  0020               	movlb	0	; select bank0
  8438  1150  00B1               	movwf	modbus_response_illgeal_function@buf
  8439                           
  8440                           ;modbus.c: 10: st_modbusErrRespStructDef* pmdbs=(st_modbusErrRespStructDef*)buf;
  8441  1151  0831               	movf	modbus_response_illgeal_function@buf,w
  8442  1152  00B0               	movwf	??_modbus_response_illgeal_function
  8443  1153  0830               	movf	??_modbus_response_illgeal_function,w
  8444  1154  00B2               	movwf	modbus_response_illgeal_function@pmdbs
  8445                           
  8446                           ;modbus.c: 11: if(pmdbs->addr==0x00)return;
  8447  1155  0832               	movf	modbus_response_illgeal_function@pmdbs,w
  8448  1156  0086               	movwf	6
  8449  1157  3001               	movlw	1	; select bank2/3
  8450  1158  0087               	movwf	7
  8451  1159  0801               	movf	1,w
  8452  115A  1903               	btfsc	3,2
  8453  115B  0008               	return
  8454                           
  8455                           ;modbus.c: 12: pmdbs->addr=sysData.id;
  8456  115C  305C               	movlw	92
  8457  115D  0086               	movwf	6
  8458  115E  3023               	movlw	35
  8459  115F  0087               	movwf	7
  8460  1160  3142               	addfsr 1,2
  8461  1161  0801               	movf	1,w
  8462  1162  00B0               	movwf	??_modbus_response_illgeal_function
  8463  1163  0832               	movf	modbus_response_illgeal_function@pmdbs,w
  8464  1164  0086               	movwf	6
  8465  1165  3001               	movlw	1	; select bank2/3
  8466  1166  0087               	movwf	7
  8467  1167  0830               	movf	??_modbus_response_illgeal_function,w
  8468  1168  0081               	movwf	1
  8469                           
  8470                           ;modbus.c: 13: if(errcode){
  8471  1169  082F               	movf	modbus_response_illgeal_function@errcode,w
  8472  116A  1903               	btfsc	3,2
  8473  116B  2974               	goto	l768
  8474                           
  8475                           ;modbus.c: 14: pmdbs->func+=0x80;
  8476  116C  3080               	movlw	128
  8477  116D  00B0               	movwf	??_modbus_response_illgeal_function
  8478  116E  0A32               	incf	modbus_response_illgeal_function@pmdbs,w
  8479  116F  0086               	movwf	6
  8480  1170  3001               	movlw	1	; select bank2/3
  8481  1171  0087               	movwf	7
  8482  1172  0830               	movf	??_modbus_response_illgeal_function,w
  8483  1173  0781               	addwf	1,f
  8484  1174                     l768:	
  8485                           
  8486                           ;modbus.c: 15: }
  8487                           ;modbus.c: 16: pmdbs->errcord=errcode;
  8488  1174  082F               	movf	modbus_response_illgeal_function@errcode,w
  8489  1175  00B0               	movwf	??_modbus_response_illgeal_function
  8490  1176  0832               	movf	modbus_response_illgeal_function@pmdbs,w
  8491  1177  3E02               	addlw	2
  8492  1178  0086               	movwf	6
  8493  1179  3001               	movlw	1	; select bank2/3
  8494  117A  0087               	movwf	7
  8495  117B  0830               	movf	??_modbus_response_illgeal_function,w
  8496  117C  0081               	movwf	1
  8497                           
  8498                           ;modbus.c: 17: crc_append(buf,3);
  8499  117D  0831               	movf	modbus_response_illgeal_function@buf,w
  8500  117E  00A6               	movwf	crc_append@message
  8501  117F  3001               	movlw	1
  8502  1180  00A7               	movwf	crc_append@message+1
  8503  1181  3003               	movlw	3
  8504  1182  00A8               	movwf	crc_append@n
  8505  1183  3000               	movlw	0
  8506  1184  00A9               	movwf	crc_append@n+1
  8507  1185  319E  26CF  3191   	fcall	_crc_append
  8508                           
  8509                           ;modbus.c: 18: uart_send_len(buf,5);
  8510  1188  3005               	movlw	5
  8511  1189  0020               	movlb	0	; select bank0
  8512  118A  00B0               	movwf	??_modbus_response_illgeal_function
  8513  118B  0830               	movf	??_modbus_response_illgeal_function,w
  8514  118C  00F2               	movwf	uart_send_len@len
  8515  118D  0831               	movf	modbus_response_illgeal_function@buf,w
  8516  118E  319E  2689         	fcall	_uart_send_len
  8517  1190  0008               	return
  8518  1191                     __end_of_modbus_response_illgeal_function:	
  8519                           
  8520                           	psect	text21
  8521  1668                     __ptext21:	
  8522 ;; *************** function _modbus_response_command *****************
  8523 ;; Defined at:
  8524 ;;		line 181 in file "src/api/modbus.c"
  8525 ;; Parameters:    Size  Location     Type
  8526 ;;  rbuf            1    wreg     PTR unsigned char 
  8527 ;;		 -> modbusBuf(32), 
  8528 ;; Auto vars:     Size  Location     Type
  8529 ;;  rbuf            1   24[BANK0 ] PTR unsigned char 
  8530 ;;		 -> modbusBuf(32), 
  8531 ;;  tempData        2   25[BANK0 ] unsigned int 
  8532 ;;  startAddr       2   19[BANK0 ] unsigned int 
  8533 ;;  tmpAddr         2   17[BANK0 ] unsigned int 
  8534 ;;  len             1   23[BANK0 ] unsigned char 
  8535 ;;  pmdbs           1   22[BANK0 ] PTR struct .
  8536 ;;		 -> modbusBuf(32), 
  8537 ;;  i               1   21[BANK0 ] unsigned char 
  8538 ;; Return value:  Size  Location     Type
  8539 ;;                  1    wreg      void 
  8540 ;; Registers used:
  8541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8542 ;; Tracked objects:
  8543 ;;		On entry : 0/0
  8544 ;;		On exit  : 0/0
  8545 ;;		Unchanged: 0/0
  8546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8548 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8549 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8550 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8551 ;;Total ram usage:       12 bytes
  8552 ;; Hardware stack levels used:    1
  8553 ;; Hardware stack levels required when called:    3
  8554 ;; This function calls:
  8555 ;;		_crc_append
  8556 ;;		_getRegisterVal
  8557 ;;		_uart_send_len
  8558 ;; This function is called by:
  8559 ;;		_modbus_response_process
  8560 ;; This function uses a non-reentrant model
  8561 ;;
  8562                           
  8563                           
  8564                           ;psect for function _modbus_response_command
  8565  1668                     _modbus_response_command:	
  8566                           
  8567                           ;incstack = 0
  8568                           ; Regs used in _modbus_response_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8569                           ;modbus_response_command@rbuf stored from wreg
  8570  1668  0020               	movlb	0	; select bank0
  8571  1669  00B8               	movwf	modbus_response_command@rbuf
  8572                           
  8573                           ;modbus.c: 182: uint8_t i;
  8574                           ;modbus.c: 183: uint16_t startAddr=0;
  8575  166A  01B3               	clrf	modbus_response_command@startAddr
  8576  166B  01B4               	clrf	modbus_response_command@startAddr+1
  8577                           
  8578                           ;modbus.c: 184: uint16_t tempData,tmpAddr;
  8579                           ;modbus.c: 185: uint8_t len=0;
  8580  166C  01B7               	clrf	modbus_response_command@len
  8581                           
  8582                           ;modbus.c: 186: st_modbusComReqStructDef* pmdbs=(st_modbusComReqStructDef*)rbuf;
  8583  166D  0838               	movf	modbus_response_command@rbuf,w
  8584  166E  00AF               	movwf	??_modbus_response_command
  8585  166F  082F               	movf	??_modbus_response_command,w
  8586  1670  00B6               	movwf	modbus_response_command@pmdbs
  8587                           
  8588                           ;modbus.c: 187: if(pmdbs->addr!=sysData.id || pmdbs->addr==0)return;
  8589  1671  305C               	movlw	92
  8590  1672  0086               	movwf	6
  8591  1673  3023               	movlw	35
  8592  1674  0087               	movwf	7
  8593  1675  3142               	addfsr 1,2
  8594  1676  0836               	movf	modbus_response_command@pmdbs,w
  8595  1677  0084               	movwf	4
  8596  1678  3001               	movlw	1	; select bank2/3
  8597  1679  0085               	movwf	5
  8598  167A  0800               	movf	0,w
  8599  167B  0601               	xorwf	1,w
  8600  167C  1D03               	skipz
  8601  167D  0008               	return
  8602  167E  0836               	movf	modbus_response_command@pmdbs,w
  8603  167F  0086               	movwf	6
  8604  1680  3001               	movlw	1	; select bank2/3
  8605  1681  0087               	movwf	7
  8606  1682  0801               	movf	1,w
  8607  1683  1903               	btfsc	3,2
  8608  1684  0008               	return
  8609                           
  8610                           ;modbus.c: 188: startAddr=pmdbs->addr_hi;
  8611  1685  0836               	movf	modbus_response_command@pmdbs,w
  8612  1686  3E02               	addlw	2
  8613  1687  0086               	movwf	6
  8614  1688  3001               	movlw	1	; select bank2/3
  8615  1689  0087               	movwf	7
  8616  168A  0801               	movf	1,w
  8617  168B  00AF               	movwf	??_modbus_response_command
  8618  168C  01B0               	clrf	??_modbus_response_command+1
  8619  168D  082F               	movf	??_modbus_response_command,w
  8620  168E  00B3               	movwf	modbus_response_command@startAddr
  8621  168F  0830               	movf	??_modbus_response_command+1,w
  8622  1690  00B4               	movwf	modbus_response_command@startAddr+1
  8623                           
  8624                           ;modbus.c: 189: startAddr<<=8;
  8625  1691  3008               	movlw	8
  8626  1692                     u4185:	
  8627  1692  35B3               	lslf	modbus_response_command@startAddr,f
  8628  1693  0DB4               	rlf	modbus_response_command@startAddr+1,f
  8629  1694  0B89               	decfsz	9,f
  8630  1695  2E92               	goto	u4185
  8631                           
  8632                           ;modbus.c: 190: startAddr |= pmdbs->addr_lo;
  8633  1696  0836               	movf	modbus_response_command@pmdbs,w
  8634  1697  3E03               	addlw	3
  8635  1698  0086               	movwf	6
  8636  1699  3001               	movlw	1	; select bank2/3
  8637  169A  0087               	movwf	7
  8638  169B  0801               	movf	1,w
  8639  169C  00AF               	movwf	??_modbus_response_command
  8640  169D  01B0               	clrf	??_modbus_response_command+1
  8641  169E  082F               	movf	??_modbus_response_command,w
  8642  169F  04B3               	iorwf	modbus_response_command@startAddr,f
  8643  16A0  0830               	movf	??_modbus_response_command+1,w
  8644  16A1  04B4               	iorwf	modbus_response_command@startAddr+1,f
  8645                           
  8646                           ;modbus.c: 191: tmpAddr=startAddr;
  8647  16A2  0834               	movf	modbus_response_command@startAddr+1,w
  8648  16A3  00B2               	movwf	modbus_response_command@tmpAddr+1
  8649  16A4  0833               	movf	modbus_response_command@startAddr,w
  8650  16A5  00B1               	movwf	modbus_response_command@tmpAddr
  8651                           
  8652                           ;modbus.c: 192: len = pmdbs->len_lo;
  8653  16A6  0836               	movf	modbus_response_command@pmdbs,w
  8654  16A7  0086               	movwf	6
  8655  16A8  3001               	movlw	1	; select bank2/3
  8656  16A9  0087               	movwf	7
  8657  16AA  3001               	movlw	1	; select bank2/3
  8658  16AB  3F45               	moviw [5]fsr1
  8659  16AC  00B7               	movwf	modbus_response_command@len
  8660                           
  8661                           ;modbus.c: 193: len<<=1;
  8662  16AD  1003               	clrc
  8663  16AE  0DB7               	rlf	modbus_response_command@len,f
  8664                           
  8665                           ;modbus.c: 194: if(len>32)len=32;
  8666  16AF  3021               	movlw	33
  8667  16B0  0237               	subwf	modbus_response_command@len,w
  8668  16B1  1C03               	skipc
  8669  16B2  2EB7               	goto	l4774
  8670  16B3  3020               	movlw	32
  8671  16B4  00AF               	movwf	??_modbus_response_command
  8672  16B5  082F               	movf	??_modbus_response_command,w
  8673  16B6  00B7               	movwf	modbus_response_command@len
  8674  16B7                     l4774:	
  8675                           
  8676                           ;modbus.c: 195: for(i=0;i<len;i=i+2,tmpAddr++){
  8677  16B7  01B5               	clrf	modbus_response_command@i
  8678  16B8                     l4786:	
  8679  16B8  0837               	movf	modbus_response_command@len,w
  8680  16B9  0235               	subwf	modbus_response_command@i,w
  8681  16BA  1803               	btfsc	3,0
  8682  16BB  2EEA               	goto	l4788
  8683                           
  8684                           ;modbus.c: 196: getRegisterVal(tmpAddr,&tempData);
  8685  16BC  0832               	movf	modbus_response_command@tmpAddr+1,w
  8686  16BD  00F3               	movwf	getRegisterVal@addr+1
  8687  16BE  0831               	movf	modbus_response_command@tmpAddr,w
  8688  16BF  00F2               	movwf	getRegisterVal@addr
  8689  16C0  3039               	movlw	(low (modbus_response_command@tempData| 0))& (0+255)
  8690  16C1  00AF               	movwf	??_modbus_response_command
  8691  16C2  082F               	movf	??_modbus_response_command,w
  8692  16C3  00F4               	movwf	getRegisterVal@tempData
  8693  16C4  318E  267A  3196   	fcall	_getRegisterVal
  8694                           
  8695                           ;modbus.c: 197: rbuf[i+3] = (uint8_t)(tempData >> 8);
  8696  16C7  0020               	movlb	0	; select bank0
  8697  16C8  083A               	movf	modbus_response_command@tempData+1,w
  8698  16C9  00AF               	movwf	??_modbus_response_command
  8699  16CA  0835               	movf	modbus_response_command@i,w
  8700  16CB  3E03               	addlw	3
  8701  16CC  0738               	addwf	modbus_response_command@rbuf,w
  8702  16CD  00B0               	movwf	??_modbus_response_command+1
  8703  16CE  0830               	movf	??_modbus_response_command+1,w
  8704  16CF  0086               	movwf	6
  8705  16D0  3001               	movlw	1	; select bank2/3
  8706  16D1  0087               	movwf	7
  8707  16D2  082F               	movf	??_modbus_response_command,w
  8708  16D3  0081               	movwf	1
  8709                           
  8710                           ;modbus.c: 198: rbuf[i+4] = (uint8_t)(tempData & 0xff);
  8711  16D4  0839               	movf	modbus_response_command@tempData,w
  8712  16D5  00AF               	movwf	??_modbus_response_command
  8713  16D6  0835               	movf	modbus_response_command@i,w
  8714  16D7  3E04               	addlw	4
  8715  16D8  0738               	addwf	modbus_response_command@rbuf,w
  8716  16D9  00B0               	movwf	??_modbus_response_command+1
  8717  16DA  0830               	movf	??_modbus_response_command+1,w
  8718  16DB  0086               	movwf	6
  8719  16DC  3001               	movlw	1	; select bank2/3
  8720  16DD  0087               	movwf	7
  8721  16DE  082F               	movf	??_modbus_response_command,w
  8722  16DF  0081               	movwf	1
  8723  16E0  0835               	movf	modbus_response_command@i,w
  8724  16E1  3E02               	addlw	2
  8725  16E2  00AF               	movwf	??_modbus_response_command
  8726  16E3  082F               	movf	??_modbus_response_command,w
  8727  16E4  00B5               	movwf	modbus_response_command@i
  8728  16E5  3001               	movlw	1
  8729  16E6  07B1               	addwf	modbus_response_command@tmpAddr,f
  8730  16E7  3000               	movlw	0
  8731  16E8  3DB2               	addwfc	modbus_response_command@tmpAddr+1,f
  8732  16E9  2EB8               	goto	l4786
  8733  16EA                     l4788:	
  8734                           
  8735                           ;modbus.c: 200: }
  8736                           ;modbus.c: 201: rbuf[0] = sysData.id;
  8737  16EA  305C               	movlw	92
  8738  16EB  0086               	movwf	6
  8739  16EC  3023               	movlw	35
  8740  16ED  0087               	movwf	7
  8741  16EE  3142               	addfsr 1,2
  8742  16EF  0801               	movf	1,w
  8743  16F0  00AF               	movwf	??_modbus_response_command
  8744  16F1  0838               	movf	modbus_response_command@rbuf,w
  8745  16F2  0086               	movwf	6
  8746  16F3  3001               	movlw	1	; select bank2/3
  8747  16F4  0087               	movwf	7
  8748  16F5  082F               	movf	??_modbus_response_command,w
  8749  16F6  0081               	movwf	1
  8750                           
  8751                           ;modbus.c: 202: rbuf[1] = 3;
  8752  16F7  3003               	movlw	3
  8753  16F8  00AF               	movwf	??_modbus_response_command
  8754  16F9  0A38               	incf	modbus_response_command@rbuf,w
  8755  16FA  0086               	movwf	6
  8756  16FB  3001               	movlw	1	; select bank2/3
  8757  16FC  0087               	movwf	7
  8758  16FD  082F               	movf	??_modbus_response_command,w
  8759  16FE  0081               	movwf	1
  8760                           
  8761                           ;modbus.c: 203: rbuf[2] = len;
  8762  16FF  0837               	movf	modbus_response_command@len,w
  8763  1700  00AF               	movwf	??_modbus_response_command
  8764  1701  0838               	movf	modbus_response_command@rbuf,w
  8765  1702  3E02               	addlw	2
  8766  1703  0086               	movwf	6
  8767  1704  3001               	movlw	1	; select bank2/3
  8768  1705  0087               	movwf	7
  8769  1706  082F               	movf	??_modbus_response_command,w
  8770  1707  0081               	movwf	1
  8771                           
  8772                           ;modbus.c: 204: len += 3;
  8773  1708  3003               	movlw	3
  8774  1709  00AF               	movwf	??_modbus_response_command
  8775  170A  082F               	movf	??_modbus_response_command,w
  8776  170B  07B7               	addwf	modbus_response_command@len,f
  8777                           
  8778                           ;modbus.c: 205: crc_append(rbuf,len);
  8779  170C  0838               	movf	modbus_response_command@rbuf,w
  8780  170D  00A6               	movwf	crc_append@message
  8781  170E  3001               	movlw	1
  8782  170F  00A7               	movwf	crc_append@message+1
  8783  1710  0837               	movf	modbus_response_command@len,w
  8784  1711  00AF               	movwf	??_modbus_response_command
  8785  1712  01B0               	clrf	??_modbus_response_command+1
  8786  1713  082F               	movf	??_modbus_response_command,w
  8787  1714  00A8               	movwf	crc_append@n
  8788  1715  0830               	movf	??_modbus_response_command+1,w
  8789  1716  00A9               	movwf	crc_append@n+1
  8790  1717  319E  26CF  3196   	fcall	_crc_append
  8791                           
  8792                           ;modbus.c: 206: len += 2;
  8793  171A  3002               	movlw	2
  8794  171B  0020               	movlb	0	; select bank0
  8795  171C  00AF               	movwf	??_modbus_response_command
  8796  171D  082F               	movf	??_modbus_response_command,w
  8797  171E  07B7               	addwf	modbus_response_command@len,f
  8798                           
  8799                           ;modbus.c: 207: uart_send_len(rbuf,len);
  8800  171F  0837               	movf	modbus_response_command@len,w
  8801  1720  00AF               	movwf	??_modbus_response_command
  8802  1721  082F               	movf	??_modbus_response_command,w
  8803  1722  00F2               	movwf	uart_send_len@len
  8804  1723  0838               	movf	modbus_response_command@rbuf,w
  8805  1724  319E  2689         	fcall	_uart_send_len
  8806  1726  0008               	return
  8807  1727                     __end_of_modbus_response_command:	
  8808                           
  8809                           	psect	text22
  8810  1E89                     __ptext22:	
  8811 ;; *************** function _uart_send_len *****************
  8812 ;; Defined at:
  8813 ;;		line 37 in file "src/api/my_uart.c"
  8814 ;; Parameters:    Size  Location     Type
  8815 ;;  buf             1    wreg     PTR unsigned char 
  8816 ;;		 -> modbusBuf(32), 
  8817 ;;  len             1    2[COMMON] unsigned char 
  8818 ;; Auto vars:     Size  Location     Type
  8819 ;;  buf             1    5[COMMON] PTR unsigned char 
  8820 ;;		 -> modbusBuf(32), 
  8821 ;;  i               1    4[COMMON] unsigned char 
  8822 ;; Return value:  Size  Location     Type
  8823 ;;                  1    wreg      void 
  8824 ;; Registers used:
  8825 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8826 ;; Tracked objects:
  8827 ;;		On entry : 0/0
  8828 ;;		On exit  : 0/0
  8829 ;;		Unchanged: 0/0
  8830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8831 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8832 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8833 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8834 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8835 ;;Total ram usage:        4 bytes
  8836 ;; Hardware stack levels used:    1
  8837 ;; Hardware stack levels required when called:    1
  8838 ;; This function calls:
  8839 ;;		Nothing
  8840 ;; This function is called by:
  8841 ;;		_modbus_response_illgeal_function
  8842 ;;		_modbus_response_write_single_register
  8843 ;;		_modbus_response_write_mult_register
  8844 ;;		_modbus_response_command
  8845 ;;		_main
  8846 ;; This function uses a non-reentrant model
  8847 ;;
  8848                           
  8849                           
  8850                           ;psect for function _uart_send_len
  8851  1E89                     _uart_send_len:	
  8852                           
  8853                           ;incstack = 0
  8854                           ; Regs used in _uart_send_len: [wreg+fsr1l+fsr1h+status,2+status,0]
  8855                           ;uart_send_len@buf stored from wreg
  8856  1E89  00F5               	movwf	uart_send_len@buf
  8857                           
  8858                           ;my_uart.c: 39: uint8_t i;
  8859                           ;my_uart.c: 40: xlen=len;
  8860  1E8A  0872               	movf	uart_send_len@len,w
  8861  1E8B  00F3               	movwf	??_uart_send_len
  8862  1E8C  0873               	movf	??_uart_send_len,w
  8863  1E8D  0020               	movlb	0	; select bank0
  8864  1E8E  00E7               	movwf	_xlen
  8865                           
  8866                           ;my_uart.c: 41: if(!TXSTAbits.TXEN)TXSTAbits.TXEN=1;
  8867  1E8F  0023               	movlb	3	; select bank3
  8868  1E90  1E9E               	btfss	30,5	;volatile
  8869  1E91  169E               	bsf	30,5	;volatile
  8870                           
  8871                           ;my_uart.c: 43: for(i=0;i<xlen;i++){
  8872  1E92  01F4               	clrf	uart_send_len@i
  8873  1E93                     l3270:	
  8874  1E93  0020               	movlb	0	; select bank0
  8875  1E94  0867               	movf	_xlen,w
  8876  1E95  0274               	subwf	uart_send_len@i,w
  8877  1E96  1803               	btfsc	3,0
  8878  1E97  0008               	return
  8879  1E98                     l490:	
  8880                           ;my_uart.c: 44: while(0 == PIR1bits.TXIF);
  8881                           
  8882  1E98  0020               	movlb	0	; select bank0
  8883  1E99  1E11               	btfss	17,4	;volatile
  8884  1E9A  2E98               	goto	l490
  8885                           
  8886                           ;my_uart.c: 46: TXREG = buf[i];
  8887  1E9B  0874               	movf	uart_send_len@i,w
  8888  1E9C  0775               	addwf	uart_send_len@buf,w
  8889  1E9D  00F3               	movwf	??_uart_send_len
  8890  1E9E  0873               	movf	??_uart_send_len,w
  8891  1E9F  0086               	movwf	6
  8892  1EA0  3001               	movlw	1	; select bank2/3
  8893  1EA1  0087               	movwf	7
  8894  1EA2  0801               	movf	1,w
  8895  1EA3  0023               	movlb	3	; select bank3
  8896  1EA4  009A               	movwf	26	;volatile
  8897                           
  8898                           ;my_uart.c: 47: do{__nop();__nop();}while(0);;
  8899  1EA5  0000               	nop
  8900  1EA6  0000               	nop
  8901  1EA7  3001               	movlw	1
  8902  1EA8  00F3               	movwf	??_uart_send_len
  8903  1EA9  0873               	movf	??_uart_send_len,w
  8904  1EAA  07F4               	addwf	uart_send_len@i,f
  8905  1EAB  2E93               	goto	l3270
  8906  1EAC                     __end_of_uart_send_len:	
  8907                           
  8908                           	psect	text23
  8909  0E7A                     __ptext23:	
  8910 ;; *************** function _getRegisterVal *****************
  8911 ;; Defined at:
  8912 ;;		line 80 in file "src/api/modbus.c"
  8913 ;; Parameters:    Size  Location     Type
  8914 ;;  addr            2    2[COMMON] unsigned int 
  8915 ;;  tempData        1    4[COMMON] PTR unsigned int 
  8916 ;;		 -> modbus_response_command@tempData(2), 
  8917 ;; Auto vars:     Size  Location     Type
  8918 ;;  t16             2    0[BANK0 ] unsigned int 
  8919 ;;  tempAddr        1    2[BANK0 ] unsigned char 
  8920 ;; Return value:  Size  Location     Type
  8921 ;;                  2    2[COMMON] unsigned int 
  8922 ;; Registers used:
  8923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8924 ;; Tracked objects:
  8925 ;;		On entry : 0/0
  8926 ;;		On exit  : 0/0
  8927 ;;		Unchanged: 0/0
  8928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8929 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8930 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8931 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8932 ;;      Totals:         7       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8933 ;;Total ram usage:       10 bytes
  8934 ;; Hardware stack levels used:    1
  8935 ;; Hardware stack levels required when called:    1
  8936 ;; This function calls:
  8937 ;;		Nothing
  8938 ;; This function is called by:
  8939 ;;		_modbus_response_command
  8940 ;; This function uses a non-reentrant model
  8941 ;;
  8942                           
  8943                           
  8944                           ;psect for function _getRegisterVal
  8945  0E7A                     _getRegisterVal:	
  8946                           
  8947                           ;modbus.c: 82: uint16_t t16 = 0;
  8948                           
  8949                           ;incstack = 0
  8950                           ; Regs used in _getRegisterVal: [wreg-fsr1h+status,2+status,0]
  8951  0E7A  0020               	movlb	0	; select bank0
  8952  0E7B  01A0               	clrf	getRegisterVal@t16
  8953  0E7C  01A1               	clrf	getRegisterVal@t16+1
  8954                           
  8955                           ;modbus.c: 83: uint8_t tempAddr;
  8956                           ;modbus.c: 85: tempAddr = addr & 0xff;
  8957  0E7D  0872               	movf	getRegisterVal@addr,w
  8958  0E7E  00F5               	movwf	??_getRegisterVal
  8959  0E7F  0875               	movf	??_getRegisterVal,w
  8960  0E80  00A2               	movwf	getRegisterVal@tempAddr
  8961                           
  8962                           ;modbus.c: 86: switch(tempAddr){
  8963  0E81  2F26               	goto	l4568
  8964  0E82                     l4534:	
  8965                           ;modbus.c: 87: case 0x01:*tempData = 0100; break;
  8966                           
  8967  0E82  0874               	movf	getRegisterVal@tempData,w
  8968  0E83  0086               	movwf	6
  8969  0E84  0187               	clrf	7
  8970  0E85  3040               	movlw	64
  8971  0E86  3FC0               	movwi [0]fsr1
  8972  0E87  3000               	movlw	0
  8973  0E88  3FC1               	movwi [1]fsr1
  8974  0E89  2F33               	goto	l4570
  8975  0E8A                     l4536:	
  8976                           ;modbus.c: 88: case 0x02:*tempData=sysData.id;break;
  8977                           
  8978  0E8A  305C               	movlw	92
  8979  0E8B  0086               	movwf	6
  8980  0E8C  3023               	movlw	35
  8981  0E8D  0087               	movwf	7
  8982  0E8E  3142               	addfsr 1,2
  8983  0E8F  0801               	movf	1,w
  8984  0E90  00F5               	movwf	??_getRegisterVal
  8985  0E91  01F6               	clrf	??_getRegisterVal+1
  8986  0E92  0874               	movf	getRegisterVal@tempData,w
  8987  0E93  0086               	movwf	6
  8988  0E94  0187               	clrf	7
  8989  0E95  0875               	movf	??_getRegisterVal,w
  8990  0E96  3FC0               	movwi [0]fsr1
  8991  0E97  0876               	movf	??_getRegisterVal+1,w
  8992  0E98  3FC1               	movwi [1]fsr1
  8993  0E99  2F33               	goto	l4570
  8994  0E9A                     l4538:	
  8995                           ;modbus.c: 89: case 0x03:*tempData=(sysData.pidSetFlg1<<8 | sysData.pidSetFlg0);break;
  8996                           
  8997  0E9A  305C               	movlw	92
  8998  0E9B  0084               	movwf	4
  8999  0E9C  3023               	movlw	35
  9000  0E9D  0085               	movwf	5
  9001  0E9E  3101               	addfsr 0,1
  9002  0E9F  0800               	movf	0,w
  9003  0EA0  00F5               	movwf	??_getRegisterVal
  9004  0EA1  305C               	movlw	92
  9005  0EA2  0084               	movwf	4
  9006  0EA3  3023               	movlw	35
  9007  0EA4  0085               	movwf	5
  9008  0EA5  0874               	movf	getRegisterVal@tempData,w
  9009  0EA6  0086               	movwf	6
  9010  0EA7  0187               	clrf	7
  9011  0EA8  0800               	movf	0,w
  9012  0EA9  3FC0               	movwi [0]fsr1
  9013  0EAA  0875               	movf	??_getRegisterVal,w
  9014  0EAB  3FC1               	movwi [1]fsr1
  9015  0EAC  2F33               	goto	l4570
  9016  0EAD                     l4540:	
  9017                           ;modbus.c: 90: case 0x04:*tempData=sysData.pidKp;break;
  9018                           
  9019  0EAD  305C               	movlw	92
  9020  0EAE  0086               	movwf	6
  9021  0EAF  3023               	movlw	35
  9022  0EB0  0087               	movwf	7
  9023  0EB1  3144               	addfsr 1,4
  9024  0EB2  0874               	movf	getRegisterVal@tempData,w
  9025  0EB3  0084               	movwf	4
  9026  0EB4  0185               	clrf	5
  9027  0EB5  3F40               	moviw [0]fsr1
  9028  0EB6  3F80               	movwi [0]fsr0
  9029  0EB7  3F41               	moviw [1]fsr1
  9030  0EB8  3F81               	movwi [1]fsr0
  9031  0EB9  2F33               	goto	l4570
  9032  0EBA                     l4542:	
  9033                           ;modbus.c: 91: case 0x05:*tempData=sysData.pidTi;break;
  9034                           
  9035  0EBA  305C               	movlw	92
  9036  0EBB  0086               	movwf	6
  9037  0EBC  3023               	movlw	35
  9038  0EBD  0087               	movwf	7
  9039  0EBE  3146               	addfsr 1,6
  9040  0EBF  0874               	movf	getRegisterVal@tempData,w
  9041  0EC0  0084               	movwf	4
  9042  0EC1  0185               	clrf	5
  9043  0EC2  3F40               	moviw [0]fsr1
  9044  0EC3  3F80               	movwi [0]fsr0
  9045  0EC4  3F41               	moviw [1]fsr1
  9046  0EC5  3F81               	movwi [1]fsr0
  9047  0EC6  2F33               	goto	l4570
  9048  0EC7                     l4544:	
  9049                           ;modbus.c: 92: case 0x06:*tempData=sysData.pidTd;break;
  9050                           
  9051  0EC7  305C               	movlw	92
  9052  0EC8  0086               	movwf	6
  9053  0EC9  3023               	movlw	35
  9054  0ECA  0087               	movwf	7
  9055  0ECB  3148               	addfsr 1,8
  9056  0ECC  0874               	movf	getRegisterVal@tempData,w
  9057  0ECD  0084               	movwf	4
  9058  0ECE  0185               	clrf	5
  9059  0ECF  3F40               	moviw [0]fsr1
  9060  0ED0  3F80               	movwi [0]fsr0
  9061  0ED1  3F41               	moviw [1]fsr1
  9062  0ED2  3F81               	movwi [1]fsr0
  9063  0ED3  2F33               	goto	l4570
  9064  0ED4                     l4546:	
  9065                           ;modbus.c: 93: case 0x07:*tempData=rtAdcValueRsLo; break;
  9066                           
  9067  0ED4  0874               	movf	getRegisterVal@tempData,w
  9068  0ED5  0086               	movwf	6
  9069  0ED6  0187               	clrf	7
  9070  0ED7  0862               	movf	_rtAdcValueRsLo,w
  9071  0ED8  3FC0               	movwi [0]fsr1
  9072  0ED9  0863               	movf	_rtAdcValueRsLo+1,w
  9073  0EDA  3FC1               	movwi [1]fsr1
  9074  0EDB  2F33               	goto	l4570
  9075  0EDC                     l4548:	
  9076                           ;modbus.c: 94: case 0x08:*tempData=rtAdcValueRsHi;break;
  9077                           
  9078  0EDC  0874               	movf	getRegisterVal@tempData,w
  9079  0EDD  0086               	movwf	6
  9080  0EDE  0187               	clrf	7
  9081  0EDF  0860               	movf	_rtAdcValueRsHi,w
  9082  0EE0  3FC0               	movwi [0]fsr1
  9083  0EE1  0861               	movf	_rtAdcValueRsHi+1,w
  9084  0EE2  3FC1               	movwi [1]fsr1
  9085  0EE3  2F33               	goto	l4570
  9086  0EE4                     l4550:	
  9087                           ;modbus.c: 95: case 0x09:*tempData=rtAdcValueRcLo;break;
  9088                           
  9089  0EE4  0874               	movf	getRegisterVal@tempData,w
  9090  0EE5  0086               	movwf	6
  9091  0EE6  0187               	clrf	7
  9092  0EE7  085E               	movf	_rtAdcValueRcLo,w
  9093  0EE8  3FC0               	movwi [0]fsr1
  9094  0EE9  085F               	movf	_rtAdcValueRcLo+1,w
  9095  0EEA  3FC1               	movwi [1]fsr1
  9096  0EEB  2F33               	goto	l4570
  9097  0EEC                     l4552:	
  9098                           ;modbus.c: 96: case 0x0a:*tempData=rtAdcValueRcHi;break;
  9099                           
  9100  0EEC  0874               	movf	getRegisterVal@tempData,w
  9101  0EED  0086               	movwf	6
  9102  0EEE  0187               	clrf	7
  9103  0EEF  085C               	movf	_rtAdcValueRcHi,w
  9104  0EF0  3FC0               	movwi [0]fsr1
  9105  0EF1  085D               	movf	_rtAdcValueRcHi+1,w
  9106  0EF2  3FC1               	movwi [1]fsr1
  9107  0EF3  2F33               	goto	l4570
  9108  0EF4                     l4554:	
  9109                           ;modbus.c: 97: case 0x0b:*tempData=resRc;break;
  9110                           
  9111  0EF4  0874               	movf	getRegisterVal@tempData,w
  9112  0EF5  0086               	movwf	6
  9113  0EF6  0187               	clrf	7
  9114  0EF7  086E               	movf	_resRc,w
  9115  0EF8  3FC0               	movwi [0]fsr1
  9116  0EF9  086F               	movf	_resRc+1,w
  9117  0EFA  3FC1               	movwi [1]fsr1
  9118  0EFB  2F33               	goto	l4570
  9119  0EFC                     l4556:	
  9120                           ;modbus.c: 98: case 0x0c:*tempData=resRs;break;
  9121                           
  9122  0EFC  0874               	movf	getRegisterVal@tempData,w
  9123  0EFD  0086               	movwf	6
  9124  0EFE  0187               	clrf	7
  9125  0EFF  086C               	movf	_resRs,w
  9126  0F00  3FC0               	movwi [0]fsr1
  9127  0F01  086D               	movf	_resRs+1,w
  9128  0F02  3FC1               	movwi [1]fsr1
  9129  0F03  2F33               	goto	l4570
  9130  0F04                     l4558:	
  9131                           ;modbus.c: 99: case 0x0d:*tempData=rtAdcValueVoFb;break;
  9132                           
  9133  0F04  0874               	movf	getRegisterVal@tempData,w
  9134  0F05  0086               	movwf	6
  9135  0F06  0187               	clrf	7
  9136  0F07  085A               	movf	_rtAdcValueVoFb,w
  9137  0F08  3FC0               	movwi [0]fsr1
  9138  0F09  085B               	movf	_rtAdcValueVoFb+1,w
  9139  0F0A  3FC1               	movwi [1]fsr1
  9140  0F0B  2F33               	goto	l4570
  9141  0F0C                     l4560:	
  9142                           ;modbus.c: 100: case 0x0e:*tempData=voExpectMv;break;
  9143                           
  9144  0F0C  0874               	movf	getRegisterVal@tempData,w
  9145  0F0D  0086               	movwf	6
  9146  0F0E  0187               	clrf	7
  9147  0F0F  0021               	movlb	1	; select bank1
  9148  0F10  0846               	movf	_voExpectMv^(0+128),w
  9149  0F11  3FC0               	movwi [0]fsr1
  9150  0F12  0847               	movf	(_voExpectMv+1)^(0+128),w
  9151  0F13  3FC1               	movwi [1]fsr1
  9152  0F14  2F33               	goto	l4570
  9153  0F15                     l4562:	
  9154                           ;modbus.c: 101: case 0x0f:*tempData=voExpectAdcValue;break;
  9155                           
  9156  0F15  0874               	movf	getRegisterVal@tempData,w
  9157  0F16  0086               	movwf	6
  9158  0F17  0187               	clrf	7
  9159  0F18  0020               	movlb	0	; select bank0
  9160  0F19  0858               	movf	_voExpectAdcValue,w
  9161  0F1A  3FC0               	movwi [0]fsr1
  9162  0F1B  0859               	movf	_voExpectAdcValue+1,w
  9163  0F1C  3FC1               	movwi [1]fsr1
  9164  0F1D  2F33               	goto	l4570
  9165  0F1E                     l4564:	
  9166                           ;modbus.c: 102: default: *tempData=0x55aa;break;
  9167                           
  9168  0F1E  0874               	movf	getRegisterVal@tempData,w
  9169  0F1F  0086               	movwf	6
  9170  0F20  0187               	clrf	7
  9171  0F21  30AA               	movlw	170
  9172  0F22  3FC0               	movwi [0]fsr1
  9173  0F23  3055               	movlw	85
  9174  0F24  3FC1               	movwi [1]fsr1
  9175                           
  9176                           ;modbus.c: 103: }
  9177  0F25  2F33               	goto	l4570
  9178  0F26                     l4568:	
  9179  0F26  0822               	movf	getRegisterVal@tempAddr,w
  9180                           
  9181                           ; Switch size 1, requested type "space"
  9182                           ; Number of cases is 15, Range of values is 1 to 15
  9183                           ; switch strategies available:
  9184                           ; Name         Instructions Cycles
  9185                           ; direct_byte           39     9 (fixed)
  9186                           ; simple_byte           46    24 (average)
  9187                           ; jumptable            263     9 (fixed)
  9188                           ;	Chosen strategy is direct_byte
  9189  0F27  3EFF               	addlw	-1
  9190  0F28  1C03               	skipc
  9191  0F29  2F1E               	goto	l4564
  9192  0F2A  0084               	movwf	4
  9193  0F2B  300F               	movlw	15
  9194  0F2C  0204               	subwf	4,w
  9195  0F2D  1803               	skipnc
  9196  0F2E  2F1E               	goto	l4564
  9197  0F2F  3198               	movlp	high S5274
  9198  0F30  3504               	lslf	4,w
  9199  0F31  3E00               	addlw	low S5274
  9200  0F32  0082               	movwf	2
  9201  0F33                     l4570:	
  9202                           
  9203                           ;modbus.c: 104: if(tempAddr>0x0f && tempAddr < 0x10+30*2){
  9204  0F33  3010               	movlw	16
  9205  0F34  0020               	movlb	0	; select bank0
  9206  0F35  0222               	subwf	getRegisterVal@tempAddr,w
  9207  0F36  1C03               	skipc
  9208  0F37  0008               	return
  9209  0F38  304C               	movlw	76
  9210  0F39  0222               	subwf	getRegisterVal@tempAddr,w
  9211  0F3A  1803               	skipnc
  9212  0F3B  0008               	return
  9213                           
  9214                           ;modbus.c: 105: tempAddr-=0x10;
  9215  0F3C  3010               	movlw	16
  9216  0F3D  02A2               	subwf	getRegisterVal@tempAddr,f
  9217                           
  9218                           ;modbus.c: 106: if(tempAddr & 0x01){
  9219  0F3E  1C22               	btfss	getRegisterVal@tempAddr,0
  9220  0F3F  2F57               	goto	l4580
  9221                           
  9222                           ;modbus.c: 107: *tempData=sysData.calibVoMV[tempAddr>>1];
  9223  0F40  3622               	lsrf	getRegisterVal@tempAddr,w
  9224  0F41  00F5               	movwf	??_getRegisterVal
  9225  0F42  01F6               	clrf	??_getRegisterVal+1
  9226  0F43  35F5               	lslf	??_getRegisterVal,f
  9227  0F44  0DF6               	rlf	??_getRegisterVal+1,f
  9228  0F45  30A2               	movlw	162
  9229  0F46  00F7               	movwf	??_getRegisterVal+2
  9230  0F47  3023               	movlw	35
  9231  0F48  00F8               	movwf	??_getRegisterVal+3
  9232  0F49  0875               	movf	??_getRegisterVal,w
  9233  0F4A  0777               	addwf	??_getRegisterVal+2,w
  9234  0F4B  0086               	movwf	6
  9235  0F4C  0876               	movf	??_getRegisterVal+1,w
  9236  0F4D  3D78               	addwfc	??_getRegisterVal+3,w
  9237  0F4E  0087               	movwf	7
  9238  0F4F  0874               	movf	getRegisterVal@tempData,w
  9239  0F50  0084               	movwf	4
  9240  0F51  0185               	clrf	5
  9241  0F52  3F40               	moviw [0]fsr1
  9242  0F53  3F80               	movwi [0]fsr0
  9243  0F54  3F41               	moviw [1]fsr1
  9244  0F55  3F81               	movwi [1]fsr0
  9245                           
  9246                           ;modbus.c: 108: }else{
  9247  0F56  0008               	return
  9248  0F57                     l4580:	
  9249                           
  9250                           ;modbus.c: 109: *tempData=sysData.calibRsAdc[tempAddr>>1];
  9251  0F57  3622               	lsrf	getRegisterVal@tempAddr,w
  9252  0F58  00F5               	movwf	??_getRegisterVal
  9253  0F59  01F6               	clrf	??_getRegisterVal+1
  9254  0F5A  35F5               	lslf	??_getRegisterVal,f
  9255  0F5B  0DF6               	rlf	??_getRegisterVal+1,f
  9256  0F5C  3066               	movlw	102
  9257  0F5D  00F7               	movwf	??_getRegisterVal+2
  9258  0F5E  3023               	movlw	35
  9259  0F5F  00F8               	movwf	??_getRegisterVal+3
  9260  0F60  0875               	movf	??_getRegisterVal,w
  9261  0F61  0777               	addwf	??_getRegisterVal+2,w
  9262  0F62  0086               	movwf	6
  9263  0F63  0876               	movf	??_getRegisterVal+1,w
  9264  0F64  3D78               	addwfc	??_getRegisterVal+3,w
  9265  0F65  0087               	movwf	7
  9266  0F66  0874               	movf	getRegisterVal@tempData,w
  9267  0F67  0084               	movwf	4
  9268  0F68  0185               	clrf	5
  9269  0F69  3F40               	moviw [0]fsr1
  9270  0F6A  3F80               	movwi [0]fsr0
  9271  0F6B  3F41               	moviw [1]fsr1
  9272  0F6C  3F81               	movwi [1]fsr0
  9273  0F6D  0008               	return
  9274  0F6E                     __end_of_getRegisterVal:	
  9275                           ;modbus.c: 110: }
  9276                           ;modbus.c: 111: }
  9277                           ;modbus.c: 112: return t16;
  9278                           ;	Return value of _getRegisterVal is never used
  9279                           
  9280                           
  9281                           	psect	swtext1
  9282  1800                     __pswtext1:	
  9283  1800                     S5274:	
  9284  1800  318E  2E82         	ljmp	l4534
  9285  1802  318E  2E8A         	ljmp	l4536
  9286  1804  318E  2E9A         	ljmp	l4538
  9287  1806  318E  2EAD         	ljmp	l4540
  9288  1808  318E  2EBA         	ljmp	l4542
  9289  180A  318E  2EC7         	ljmp	l4544
  9290  180C  318E  2ED4         	ljmp	l4546
  9291  180E  318E  2EDC         	ljmp	l4548
  9292  1810  318E  2EE4         	ljmp	l4550
  9293  1812  318E  2EEC         	ljmp	l4552
  9294  1814  318E  2EF4         	ljmp	l4554
  9295  1816  318E  2EFC         	ljmp	l4556
  9296  1818  318F  2F04         	ljmp	l4558
  9297  181A  318F  2F0C         	ljmp	l4560
  9298  181C  318F  2F15         	ljmp	l4562
  9299                           
  9300                           	psect	text24
  9301  1ECF                     __ptext24:	
  9302 ;; *************** function _crc_append *****************
  9303 ;; Defined at:
  9304 ;;		line 143 in file "src/depend/crc16.c"
  9305 ;; Parameters:    Size  Location     Type
  9306 ;;  message         2    6[BANK0 ] PTR unsigned char 
  9307 ;;		 -> modbusBuf(32), sysData(132), 
  9308 ;;  n               2    8[BANK0 ] unsigned int 
  9309 ;; Auto vars:     Size  Location     Type
  9310 ;;  crc             2    8[COMMON] unsigned int 
  9311 ;; Return value:  Size  Location     Type
  9312 ;;                  1    wreg      void 
  9313 ;; Registers used:
  9314 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9315 ;; Tracked objects:
  9316 ;;		On entry : 0/0
  9317 ;;		On exit  : 0/0
  9318 ;;		Unchanged: 0/0
  9319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9320 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9321 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9322 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9323 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9324 ;;Total ram usage:       11 bytes
  9325 ;; Hardware stack levels used:    1
  9326 ;; Hardware stack levels required when called:    2
  9327 ;; This function calls:
  9328 ;;		_crc_sum
  9329 ;; This function is called by:
  9330 ;;		_sys_data_save
  9331 ;;		_modbus_response_illgeal_function
  9332 ;;		_modbus_response_write_single_register
  9333 ;;		_modbus_response_write_mult_register
  9334 ;;		_modbus_response_command
  9335 ;; This function uses a non-reentrant model
  9336 ;;
  9337                           
  9338                           
  9339                           ;psect for function _crc_append
  9340  1ECF                     _crc_append:	
  9341                           
  9342                           ;crc16.c: 145: uint16_t crc;
  9343                           ;crc16.c: 146: crc = crc_sum(message, n);
  9344                           
  9345                           ;incstack = 0
  9346                           ; Regs used in _crc_append: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9347  1ECF  0020               	movlb	0	; select bank0
  9348  1ED0  0827               	movf	crc_append@message+1,w
  9349  1ED1  00F3               	movwf	crc_sum@buf+1
  9350  1ED2  0826               	movf	crc_append@message,w
  9351  1ED3  00F2               	movwf	crc_sum@buf
  9352  1ED4  0829               	movf	crc_append@n+1,w
  9353  1ED5  00F5               	movwf	crc_sum@len+1
  9354  1ED6  0828               	movf	crc_append@n,w
  9355  1ED7  00F4               	movwf	crc_sum@len
  9356  1ED8  3192  228A         	fcall	_crc_sum
  9357  1EDA  0873               	movf	?_crc_sum+1,w
  9358  1EDB  00F9               	movwf	crc_append@crc+1
  9359  1EDC  0872               	movf	?_crc_sum,w
  9360  1EDD  00F8               	movwf	crc_append@crc
  9361                           
  9362                           ;crc16.c: 147: message[n] = (uint8_t)(crc & 0xff);
  9363  1EDE  0020               	movlb	0	; select bank0
  9364  1EDF  0828               	movf	crc_append@n,w
  9365  1EE0  0726               	addwf	crc_append@message,w
  9366  1EE1  00AA               	movwf	??_crc_append
  9367  1EE2  0829               	movf	crc_append@n+1,w
  9368  1EE3  3D27               	addwfc	crc_append@message+1,w
  9369  1EE4  00AB               	movwf	??_crc_append+1
  9370  1EE5  082A               	movf	??_crc_append,w
  9371  1EE6  0086               	movwf	6
  9372  1EE7  082B               	movf	??_crc_append+1,w
  9373  1EE8  0087               	movwf	7
  9374  1EE9  0878               	movf	crc_append@crc,w
  9375  1EEA  0081               	movwf	1
  9376                           
  9377                           ;crc16.c: 148: message[n+1] = (uint8_t)((crc >> 8) & 0xff);
  9378  1EEB  0879               	movf	crc_append@crc+1,w
  9379  1EEC  00AA               	movwf	??_crc_append
  9380  1EED  0828               	movf	crc_append@n,w
  9381  1EEE  3E01               	addlw	1
  9382  1EEF  00AB               	movwf	??_crc_append+1
  9383  1EF0  3000               	movlw	0
  9384  1EF1  3D29               	addwfc	crc_append@n+1,w
  9385  1EF2  00AC               	movwf	??_crc_append+2
  9386  1EF3  082B               	movf	??_crc_append+1,w
  9387  1EF4  0726               	addwf	crc_append@message,w
  9388  1EF5  00AD               	movwf	??_crc_append+3
  9389  1EF6  082C               	movf	??_crc_append+2,w
  9390  1EF7  3D27               	addwfc	crc_append@message+1,w
  9391  1EF8  00AE               	movwf	??_crc_append+4
  9392  1EF9  082D               	movf	??_crc_append+3,w
  9393  1EFA  0086               	movwf	6
  9394  1EFB  082E               	movf	??_crc_append+4,w
  9395  1EFC  0087               	movwf	7
  9396  1EFD  082A               	movf	??_crc_append,w
  9397  1EFE  0081               	movwf	1
  9398  1EFF  0008               	return
  9399  1F00                     __end_of_crc_append:	
  9400                           
  9401                           	psect	text25
  9402  109C                     __ptext25:	
  9403 ;; *************** function _crc_verify *****************
  9404 ;; Defined at:
  9405 ;;		line 135 in file "src/depend/crc16.c"
  9406 ;; Parameters:    Size  Location     Type
  9407 ;;  message         2    6[BANK0 ] PTR unsigned char 
  9408 ;;		 -> modbusBuf(32), sysData(132), 
  9409 ;;  n               2    8[BANK0 ] unsigned int 
  9410 ;; Auto vars:     Size  Location     Type
  9411 ;;  expected        2   14[BANK0 ] unsigned int 
  9412 ;;  crccal          2   12[BANK0 ] unsigned int 
  9413 ;; Return value:  Size  Location     Type
  9414 ;;                  1    wreg      unsigned char 
  9415 ;; Registers used:
  9416 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9417 ;; Tracked objects:
  9418 ;;		On entry : 0/0
  9419 ;;		On exit  : 0/0
  9420 ;;		Unchanged: 0/0
  9421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9422 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9423 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9424 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9425 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9426 ;;Total ram usage:       10 bytes
  9427 ;; Hardware stack levels used:    1
  9428 ;; Hardware stack levels required when called:    2
  9429 ;; This function calls:
  9430 ;;		_crc_sum
  9431 ;;		_m_mem_cpy_len
  9432 ;; This function is called by:
  9433 ;;		_sys_data_init
  9434 ;;		_modbus_response_process
  9435 ;; This function uses a non-reentrant model
  9436 ;;
  9437                           
  9438                           
  9439                           ;psect for function _crc_verify
  9440  109C                     _crc_verify:	
  9441                           
  9442                           ;crc16.c: 137: uint16_t expected,crccal;
  9443                           ;crc16.c: 138: m_mem_cpy_len((uint8_t*)(&expected),(message+n-2),2);
  9444                           
  9445                           ;incstack = 0
  9446                           ; Regs used in _crc_verify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9447  109C  302E               	movlw	low crc_verify@expected
  9448  109D  00F2               	movwf	m_mem_cpy_len@d
  9449  109E  3000               	movlw	high crc_verify@expected
  9450  109F  00F3               	movwf	m_mem_cpy_len@d+1
  9451  10A0  0020               	movlb	0	; select bank0
  9452  10A1  0828               	movf	crc_verify@n,w
  9453  10A2  0726               	addwf	crc_verify@message,w
  9454  10A3  00AA               	movwf	??_crc_verify
  9455  10A4  0829               	movf	crc_verify@n+1,w
  9456  10A5  3D27               	addwfc	crc_verify@message+1,w
  9457  10A6  00AB               	movwf	??_crc_verify+1
  9458  10A7  082A               	movf	??_crc_verify,w
  9459  10A8  3EFE               	addlw	254
  9460  10A9  00F4               	movwf	m_mem_cpy_len@s
  9461  10AA  30FF               	movlw	255
  9462  10AB  3D2B               	addwfc	??_crc_verify+1,w
  9463  10AC  00F5               	movwf	m_mem_cpy_len@s+1
  9464  10AD  3002               	movlw	2
  9465  10AE  00F6               	movwf	m_mem_cpy_len@len
  9466  10AF  3000               	movlw	0
  9467  10B0  00F7               	movwf	m_mem_cpy_len@len+1
  9468  10B1  319E  2632  3190   	fcall	_m_mem_cpy_len
  9469                           
  9470                           ;crc16.c: 139: crccal=crc_sum(message,n - 2);
  9471  10B4  0020               	movlb	0	; select bank0
  9472  10B5  0827               	movf	crc_verify@message+1,w
  9473  10B6  00F3               	movwf	crc_sum@buf+1
  9474  10B7  0826               	movf	crc_verify@message,w
  9475  10B8  00F2               	movwf	crc_sum@buf
  9476  10B9  0828               	movf	crc_verify@n,w
  9477  10BA  3EFE               	addlw	254
  9478  10BB  00F4               	movwf	crc_sum@len
  9479  10BC  30FF               	movlw	255
  9480  10BD  3D29               	addwfc	crc_verify@n+1,w
  9481  10BE  00F5               	movwf	crc_sum@len+1
  9482  10BF  3192  228A  3190   	fcall	_crc_sum
  9483  10C2  0873               	movf	?_crc_sum+1,w
  9484  10C3  0020               	movlb	0	; select bank0
  9485  10C4  00AD               	movwf	crc_verify@crccal+1
  9486  10C5  0872               	movf	?_crc_sum,w
  9487  10C6  00AC               	movwf	crc_verify@crccal
  9488                           
  9489                           ;crc16.c: 140: if(expected!=crccal)return 0;
  9490  10C7  082D               	movf	crc_verify@crccal+1,w
  9491  10C8  062F               	xorwf	crc_verify@expected+1,w
  9492  10C9  1D03               	skipz
  9493  10CA  28CD               	goto	u3935
  9494  10CB  082C               	movf	crc_verify@crccal,w
  9495  10CC  062E               	xorwf	crc_verify@expected,w
  9496  10CD                     u3935:	
  9497  10CD  1903               	skipnz
  9498  10CE  28D1               	goto	l4626
  9499  10CF  3000               	movlw	0
  9500  10D0  0008               	return
  9501  10D1                     l4626:	
  9502                           
  9503                           ;crc16.c: 141: return 1;
  9504  10D1  3001               	movlw	1
  9505  10D2  0008               	return
  9506  10D3                     __end_of_crc_verify:	
  9507                           
  9508                           	psect	text26
  9509  1E32                     __ptext26:	
  9510 ;; *************** function _m_mem_cpy_len *****************
  9511 ;; Defined at:
  9512 ;;		line 47 in file "src/depend/m_string.c"
  9513 ;; Parameters:    Size  Location     Type
  9514 ;;  d               2    2[COMMON] PTR unsigned char 
  9515 ;;		 -> crc_verify@expected(2), modbusBuf(32), 
  9516 ;;  s               2    4[COMMON] PTR unsigned char 
  9517 ;;		 -> modbusBuf(32), sysData(132), eusartRxBuffer(32), 
  9518 ;;  len             2    6[COMMON] unsigned int 
  9519 ;; Auto vars:     Size  Location     Type
  9520 ;;		None
  9521 ;; Return value:  Size  Location     Type
  9522 ;;                  1    wreg      void 
  9523 ;; Registers used:
  9524 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9525 ;; Tracked objects:
  9526 ;;		On entry : 0/0
  9527 ;;		On exit  : 0/0
  9528 ;;		Unchanged: 0/0
  9529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9530 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9532 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9533 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9534 ;;Total ram usage:        7 bytes
  9535 ;; Hardware stack levels used:    1
  9536 ;; Hardware stack levels required when called:    1
  9537 ;; This function calls:
  9538 ;;		Nothing
  9539 ;; This function is called by:
  9540 ;;		_main
  9541 ;;		_crc_verify
  9542 ;; This function uses a non-reentrant model
  9543 ;;
  9544                           
  9545                           
  9546                           ;psect for function _m_mem_cpy_len
  9547  1E32                     _m_mem_cpy_len:	
  9548  1E32                     l3360:	
  9549                           ;m_string.c: 50: while(len)
  9550                           
  9551                           ;incstack = 0
  9552                           ; Regs used in _m_mem_cpy_len: [wreg+fsr1l+fsr1h+status,2+status,0]
  9553                           
  9554  1E32  0876               	movf	m_mem_cpy_len@len,w
  9555  1E33  0477               	iorwf	m_mem_cpy_len@len+1,w
  9556  1E34  1903               	btfsc	3,2
  9557  1E35  0008               	return
  9558                           
  9559                           ;m_string.c: 51: {
  9560                           ;m_string.c: 52: *d++=*s++;
  9561  1E36  0874               	movf	m_mem_cpy_len@s,w
  9562  1E37  0086               	movwf	6
  9563  1E38  0875               	movf	m_mem_cpy_len@s+1,w
  9564  1E39  0087               	movwf	7
  9565  1E3A  0801               	movf	1,w
  9566  1E3B  00F8               	movwf	??_m_mem_cpy_len
  9567  1E3C  0872               	movf	m_mem_cpy_len@d,w
  9568  1E3D  0086               	movwf	6
  9569  1E3E  0873               	movf	m_mem_cpy_len@d+1,w
  9570  1E3F  0087               	movwf	7
  9571  1E40  0878               	movf	??_m_mem_cpy_len,w
  9572  1E41  0081               	movwf	1
  9573  1E42  3001               	movlw	1
  9574  1E43  07F4               	addwf	m_mem_cpy_len@s,f
  9575  1E44  3000               	movlw	0
  9576  1E45  3DF5               	addwfc	m_mem_cpy_len@s+1,f
  9577  1E46  3001               	movlw	1
  9578  1E47  07F2               	addwf	m_mem_cpy_len@d,f
  9579  1E48  3000               	movlw	0
  9580  1E49  3DF3               	addwfc	m_mem_cpy_len@d+1,f
  9581                           
  9582                           ;m_string.c: 53: len--;
  9583  1E4A  3001               	movlw	1
  9584  1E4B  02F6               	subwf	m_mem_cpy_len@len,f
  9585  1E4C  3000               	movlw	0
  9586  1E4D  3BF7               	subwfb	m_mem_cpy_len@len+1,f
  9587  1E4E  2E32               	goto	l3360
  9588  1E4F                     __end_of_m_mem_cpy_len:	
  9589                           
  9590                           	psect	text27
  9591  128A                     __ptext27:	
  9592 ;; *************** function _crc_sum *****************
  9593 ;; Defined at:
  9594 ;;		line 116 in file "src/depend/crc16.c"
  9595 ;; Parameters:    Size  Location     Type
  9596 ;;  buf             2    2[COMMON] PTR unsigned char 
  9597 ;;		 -> modbusBuf(32), sysData(132), 
  9598 ;;  len             2    4[COMMON] unsigned int 
  9599 ;; Auto vars:     Size  Location     Type
  9600 ;;  crc             2    4[BANK0 ] unsigned int 
  9601 ;;  i               2    2[BANK0 ] unsigned int 
  9602 ;;  j               2    0[BANK0 ] unsigned int 
  9603 ;; Return value:  Size  Location     Type
  9604 ;;                  2    2[COMMON] unsigned int 
  9605 ;; Registers used:
  9606 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9607 ;; Tracked objects:
  9608 ;;		On entry : 0/0
  9609 ;;		On exit  : 0/0
  9610 ;;		Unchanged: 0/0
  9611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9612 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9613 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9614 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9615 ;;      Totals:         6       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9616 ;;Total ram usage:       12 bytes
  9617 ;; Hardware stack levels used:    1
  9618 ;; Hardware stack levels required when called:    1
  9619 ;; This function calls:
  9620 ;;		Nothing
  9621 ;; This function is called by:
  9622 ;;		_crc_verify
  9623 ;;		_crc_append
  9624 ;; This function uses a non-reentrant model
  9625 ;;
  9626                           
  9627                           
  9628                           ;psect for function _crc_sum
  9629  128A                     _crc_sum:	
  9630                           
  9631                           ;crc16.c: 118: uint16_t crc=0xFFFF;
  9632                           
  9633                           ;incstack = 0
  9634                           ; Regs used in _crc_sum: [wreg+fsr1l+fsr1h+status,2+status,0]
  9635  128A  30FF               	movlw	255
  9636  128B  0020               	movlb	0	; select bank0
  9637  128C  00A4               	movwf	crc_sum@crc
  9638  128D  30FF               	movlw	255
  9639  128E  00A5               	movwf	crc_sum@crc+1
  9640                           
  9641                           ;crc16.c: 119: uint16_t i, j;
  9642                           ;crc16.c: 120: for ( j=0; j<len;j++){
  9643  128F  01A0               	clrf	crc_sum@j
  9644  1290  01A1               	clrf	crc_sum@j+1
  9645  1291                     l1044:	
  9646  1291  0875               	movf	crc_sum@len+1,w
  9647  1292  0221               	subwf	crc_sum@j+1,w
  9648  1293  1D03               	skipz
  9649  1294  2A97               	goto	u3855
  9650  1295  0874               	movf	crc_sum@len,w
  9651  1296  0220               	subwf	crc_sum@j,w
  9652  1297                     u3855:	
  9653  1297  1803               	btfsc	3,0
  9654  1298  2ADB               	goto	l4500
  9655                           
  9656                           ;crc16.c: 121: crc=crc ^*buf++;
  9657  1299  0872               	movf	crc_sum@buf,w
  9658  129A  0086               	movwf	6
  9659  129B  0873               	movf	crc_sum@buf+1,w
  9660  129C  0087               	movwf	7
  9661  129D  0824               	movf	crc_sum@crc,w
  9662  129E  0601               	xorwf	1,w
  9663  129F  00A4               	movwf	crc_sum@crc
  9664  12A0  0825               	movf	crc_sum@crc+1,w
  9665  12A1  00A5               	movwf	crc_sum@crc+1
  9666  12A2  3001               	movlw	1
  9667  12A3  07F2               	addwf	crc_sum@buf,f
  9668  12A4  3000               	movlw	0
  9669  12A5  3DF3               	addwfc	crc_sum@buf+1,f
  9670                           
  9671                           ;crc16.c: 122: for ( i=0; i<8; i++){
  9672  12A6  01A2               	clrf	crc_sum@i
  9673  12A7  01A3               	clrf	crc_sum@i+1
  9674  12A8  3000               	movlw	0
  9675  12A9  0223               	subwf	crc_sum@i+1,w
  9676  12AA  3008               	movlw	8
  9677  12AB  1903               	skipnz
  9678  12AC  0222               	subwf	crc_sum@i,w
  9679  12AD  1803               	btfsc	3,0
  9680  12AE  2AD6               	goto	l4498
  9681  12AF                     l1046:	
  9682                           
  9683                           ;crc16.c: 124: if(crc&0x0001){
  9684  12AF  1C24               	btfss	crc_sum@crc,0
  9685  12B0  2AC1               	goto	l4492
  9686                           
  9687                           ;crc16.c: 125: crc=crc>>1;
  9688  12B1  0825               	movf	crc_sum@crc+1,w
  9689  12B2  00F7               	movwf	??_crc_sum+1
  9690  12B3  0824               	movf	crc_sum@crc,w
  9691  12B4  00F6               	movwf	??_crc_sum
  9692  12B5  36F7               	lsrf	??_crc_sum+1,f
  9693  12B6  0CF6               	rrf	??_crc_sum,f
  9694  12B7  0876               	movf	??_crc_sum,w
  9695  12B8  00A4               	movwf	crc_sum@crc
  9696  12B9  0877               	movf	??_crc_sum+1,w
  9697  12BA  00A5               	movwf	crc_sum@crc+1
  9698                           
  9699                           ;crc16.c: 126: crc=crc^ 0xa001;
  9700  12BB  3001               	movlw	1
  9701  12BC  0624               	xorwf	crc_sum@crc,w
  9702  12BD  00A4               	movwf	crc_sum@crc
  9703  12BE  30A0               	movlw	160
  9704  12BF  0625               	xorwf	crc_sum@crc+1,w
  9705  12C0  2ACA               	goto	L1
  9706  12C1                     l4492:	
  9707                           ;crc16.c: 127: }else{
  9708                           
  9709                           
  9710                           ;crc16.c: 128: crc=crc>>1;
  9711  12C1  0825               	movf	crc_sum@crc+1,w
  9712  12C2  00F7               	movwf	??_crc_sum+1
  9713  12C3  0824               	movf	crc_sum@crc,w
  9714  12C4  00F6               	movwf	??_crc_sum
  9715  12C5  36F7               	lsrf	??_crc_sum+1,f
  9716  12C6  0CF6               	rrf	??_crc_sum,f
  9717  12C7  0876               	movf	??_crc_sum,w
  9718  12C8  00A4               	movwf	crc_sum@crc
  9719  12C9  0877               	movf	??_crc_sum+1,w
  9720  12CA                     L1:	
  9721  12CA  00A5               	movwf	crc_sum@crc+1
  9722  12CB  3001               	movlw	1
  9723  12CC  07A2               	addwf	crc_sum@i,f
  9724  12CD  3000               	movlw	0
  9725  12CE  3DA3               	addwfc	crc_sum@i+1,f
  9726  12CF  3000               	movlw	0
  9727  12D0  0223               	subwf	crc_sum@i+1,w
  9728  12D1  3008               	movlw	8
  9729  12D2  1903               	skipnz
  9730  12D3  0222               	subwf	crc_sum@i,w
  9731  12D4  1C03               	skipc
  9732  12D5  2AAF               	goto	l1046
  9733  12D6                     l4498:	
  9734  12D6  3001               	movlw	1
  9735  12D7  07A0               	addwf	crc_sum@j,f
  9736  12D8  3000               	movlw	0
  9737  12D9  3DA1               	addwfc	crc_sum@j+1,f
  9738  12DA  2A91               	goto	l1044
  9739  12DB                     l4500:	
  9740                           
  9741                           ;crc16.c: 129: }
  9742                           ;crc16.c: 130: }
  9743                           ;crc16.c: 132: }
  9744                           ;crc16.c: 133: return ( crc);
  9745  12DB  0825               	movf	crc_sum@crc+1,w
  9746  12DC  00F3               	movwf	?_crc_sum+1
  9747  12DD  0824               	movf	crc_sum@crc,w
  9748  12DE  00F2               	movwf	?_crc_sum
  9749  12DF  0008               	return
  9750  12E0                     __end_of_crc_sum:	
  9751                           
  9752                           	psect	text28
  9753  1520                     __ptext28:	
  9754 ;; *************** function _calc_temp_rs *****************
  9755 ;; Defined at:
  9756 ;;		line 216 in file "src/api/sample.c"
  9757 ;; Parameters:    Size  Location     Type
  9758 ;;		None
  9759 ;; Auto vars:     Size  Location     Type
  9760 ;;		None
  9761 ;; Return value:  Size  Location     Type
  9762 ;;                  4    6[BANK0 ] unsigned long 
  9763 ;; Registers used:
  9764 ;;		wreg, status,2, status,0, pclath, cstack
  9765 ;; Tracked objects:
  9766 ;;		On entry : 0/0
  9767 ;;		On exit  : 0/0
  9768 ;;		Unchanged: 0/0
  9769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9770 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9772 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9773 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9774 ;;Total ram usage:        8 bytes
  9775 ;; Hardware stack levels used:    1
  9776 ;; Hardware stack levels required when called:    2
  9777 ;; This function calls:
  9778 ;;		___lldiv
  9779 ;;		___lmul
  9780 ;; This function is called by:
  9781 ;;		_main
  9782 ;; This function uses a non-reentrant model
  9783 ;;
  9784                           
  9785                           
  9786                           ;psect for function _calc_temp_rs
  9787  1520                     _calc_temp_rs:	
  9788                           
  9789                           ;sample.c: 230: y32=12000UL;
  9790                           
  9791                           ;incstack = 0
  9792                           ; Regs used in _calc_temp_rs: [wreg+status,2+status,0+pclath+cstack]
  9793  1520  3000               	movlw	0
  9794  1521  0020               	movlb	0	; select bank0
  9795  1522  00CD               	movwf	_y32+3
  9796  1523  3000               	movlw	0
  9797  1524  00CC               	movwf	_y32+2
  9798  1525  302E               	movlw	46
  9799  1526  00CB               	movwf	_y32+1
  9800  1527  30E0               	movlw	224
  9801  1528  00CA               	movwf	_y32
  9802                           
  9803                           ;sample.c: 231: y32=y32*rtAdcValueRsHi;
  9804  1529  0860               	movf	_rtAdcValueRsHi,w
  9805  152A  00F2               	movwf	___lmul@multiplier
  9806  152B  0861               	movf	_rtAdcValueRsHi+1,w
  9807  152C  00F3               	movwf	___lmul@multiplier+1
  9808  152D  01F4               	clrf	___lmul@multiplier+2
  9809  152E  01F5               	clrf	___lmul@multiplier+3
  9810  152F  084D               	movf	_y32+3,w
  9811  1530  00F9               	movwf	___lmul@multiplicand+3
  9812  1531  084C               	movf	_y32+2,w
  9813  1532  00F8               	movwf	___lmul@multiplicand+2
  9814  1533  084B               	movf	_y32+1,w
  9815  1534  00F7               	movwf	___lmul@multiplicand+1
  9816  1535  084A               	movf	_y32,w
  9817  1536  00F6               	movwf	___lmul@multiplicand
  9818  1537  3190  2000  3195   	fcall	___lmul
  9819  153A  0875               	movf	?___lmul+3,w
  9820  153B  0020               	movlb	0	; select bank0
  9821  153C  00CD               	movwf	_y32+3
  9822  153D  0874               	movf	?___lmul+2,w
  9823  153E  00CC               	movwf	_y32+2
  9824  153F  0873               	movf	?___lmul+1,w
  9825  1540  00CB               	movwf	_y32+1
  9826  1541  0872               	movf	?___lmul,w
  9827  1542  00CA               	movwf	_y32
  9828                           
  9829                           ;sample.c: 232: x32=rtAdcValueRsLo;
  9830  1543  0862               	movf	_rtAdcValueRsLo,w
  9831  1544  0021               	movlb	1	; select bank1
  9832  1545  00B8               	movwf	_x32^(0+128)
  9833  1546  0020               	movlb	0	; select bank0
  9834  1547  0863               	movf	_rtAdcValueRsLo+1,w
  9835  1548  0021               	movlb	1	; select bank1
  9836  1549  00B9               	movwf	(_x32^(0+128)+1)
  9837  154A  01BA               	clrf	(_x32^(0+128)+2)
  9838  154B  01BB               	clrf	(_x32^(0+128)+3)
  9839                           
  9840                           ;sample.c: 233: y32=y32/x32;
  9841  154C  083B               	movf	(_x32+3)^(0+128),w
  9842  154D  00F5               	movwf	___lldiv@divisor+3
  9843  154E  083A               	movf	(_x32+2)^(0+128),w
  9844  154F  00F4               	movwf	___lldiv@divisor+2
  9845  1550  0839               	movf	(_x32+1)^(0+128),w
  9846  1551  00F3               	movwf	___lldiv@divisor+1
  9847  1552  0838               	movf	_x32^(0+128),w
  9848  1553  00F2               	movwf	___lldiv@divisor
  9849  1554  0020               	movlb	0	; select bank0
  9850  1555  084D               	movf	_y32+3,w
  9851  1556  00F9               	movwf	___lldiv@dividend+3
  9852  1557  084C               	movf	_y32+2,w
  9853  1558  00F8               	movwf	___lldiv@dividend+2
  9854  1559  084B               	movf	_y32+1,w
  9855  155A  00F7               	movwf	___lldiv@dividend+1
  9856  155B  084A               	movf	_y32,w
  9857  155C  00F6               	movwf	___lldiv@dividend
  9858  155D  3191  21E3  3195   	fcall	___lldiv
  9859  1560  0875               	movf	?___lldiv+3,w
  9860  1561  0020               	movlb	0	; select bank0
  9861  1562  00CD               	movwf	_y32+3
  9862  1563  0874               	movf	?___lldiv+2,w
  9863  1564  00CC               	movwf	_y32+2
  9864  1565  0873               	movf	?___lldiv+1,w
  9865  1566  00CB               	movwf	_y32+1
  9866  1567  0872               	movf	?___lldiv,w
  9867  1568  00CA               	movwf	_y32
  9868                           
  9869                           ;sample.c: 234: if(y32<2000)y32=2000;
  9870  1569  084D               	movf	_y32+3,w
  9871  156A  1D03               	btfss	3,2
  9872  156B  2D7D               	goto	l4918
  9873  156C  084C               	movf	_y32+2,w
  9874  156D  1D03               	btfss	3,2
  9875  156E  2D7D               	goto	l4918
  9876  156F  30D0               	movlw	208
  9877  1570  024A               	subwf	_y32,w
  9878  1571  3007               	movlw	7
  9879  1572  3B4B               	subwfb	_y32+1,w
  9880  1573  1803               	btfsc	3,0
  9881  1574  2D7D               	goto	l4918
  9882  1575  3000               	movlw	0
  9883  1576  00CD               	movwf	_y32+3
  9884  1577  3000               	movlw	0
  9885  1578  00CC               	movwf	_y32+2
  9886  1579  3007               	movlw	7
  9887  157A  00CB               	movwf	_y32+1
  9888  157B  30D0               	movlw	208
  9889  157C  00CA               	movwf	_y32
  9890  157D                     l4918:	
  9891                           
  9892                           ;sample.c: 235: if(y32>25000)y32=25000;
  9893  157D  084D               	movf	_y32+3,w
  9894  157E  1D03               	btfss	3,2
  9895  157F  2D89               	goto	l4920
  9896  1580  084C               	movf	_y32+2,w
  9897  1581  1D03               	btfss	3,2
  9898  1582  2D89               	goto	l4920
  9899  1583  30A9               	movlw	169
  9900  1584  024A               	subwf	_y32,w
  9901  1585  3061               	movlw	97
  9902  1586  3B4B               	subwfb	_y32+1,w
  9903  1587  1C03               	btfss	3,0
  9904  1588  2D91               	goto	l629
  9905  1589                     l4920:	
  9906  1589  3000               	movlw	0
  9907  158A  00CD               	movwf	_y32+3
  9908  158B  3000               	movlw	0
  9909  158C  00CC               	movwf	_y32+2
  9910  158D  3061               	movlw	97
  9911  158E  00CB               	movwf	_y32+1
  9912  158F  30A8               	movlw	168
  9913  1590  00CA               	movwf	_y32
  9914  1591                     l629:	
  9915                           
  9916                           ;sample.c: 236: y32=y32-1000;
  9917  1591  3018               	movlw	24
  9918  1592  00AA               	movwf	??_calc_temp_rs
  9919  1593  30FC               	movlw	252
  9920  1594  00AB               	movwf	??_calc_temp_rs+1
  9921  1595  30FF               	movlw	255
  9922  1596  00AC               	movwf	??_calc_temp_rs+2
  9923  1597  30FF               	movlw	255
  9924  1598  00AD               	movwf	??_calc_temp_rs+3
  9925  1599  084A               	movf	_y32,w
  9926  159A  07AA               	addwf	??_calc_temp_rs,f
  9927  159B  084B               	movf	_y32+1,w
  9928  159C  3DAB               	addwfc	??_calc_temp_rs+1,f
  9929  159D  084C               	movf	_y32+2,w
  9930  159E  3DAC               	addwfc	??_calc_temp_rs+2,f
  9931  159F  084D               	movf	_y32+3,w
  9932  15A0  3DAD               	addwfc	??_calc_temp_rs+3,f
  9933  15A1  082D               	movf	??_calc_temp_rs+3,w
  9934  15A2  00CD               	movwf	_y32+3
  9935  15A3  082C               	movf	??_calc_temp_rs+2,w
  9936  15A4  00CC               	movwf	_y32+2
  9937  15A5  082B               	movf	??_calc_temp_rs+1,w
  9938  15A6  00CB               	movwf	_y32+1
  9939  15A7  082A               	movf	??_calc_temp_rs,w
  9940  15A8  00CA               	movwf	_y32
  9941                           
  9942                           ;sample.c: 237: return (uint16_t)y32;
  9943  15A9  084A               	movf	_y32,w
  9944  15AA  00A6               	movwf	?_calc_temp_rs
  9945  15AB  084B               	movf	_y32+1,w
  9946  15AC  00A7               	movwf	?_calc_temp_rs+1
  9947  15AD  01A8               	clrf	?_calc_temp_rs+2
  9948  15AE  01A9               	clrf	?_calc_temp_rs+3
  9949  15AF  0008               	return
  9950  15B0                     __end_of_calc_temp_rs:	
  9951                           
  9952                           	psect	text29
  9953  1727                     __ptext29:	
  9954 ;; *************** function _calc_temp_rc *****************
  9955 ;; Defined at:
  9956 ;;		line 240 in file "src/api/sample.c"
  9957 ;; Parameters:    Size  Location     Type
  9958 ;;		None
  9959 ;; Auto vars:     Size  Location     Type
  9960 ;;		None
  9961 ;; Return value:  Size  Location     Type
  9962 ;;                  4    6[BANK0 ] unsigned long 
  9963 ;; Registers used:
  9964 ;;		wreg, status,2, status,0, pclath, cstack
  9965 ;; Tracked objects:
  9966 ;;		On entry : 0/0
  9967 ;;		On exit  : 0/0
  9968 ;;		Unchanged: 0/0
  9969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9970 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9972 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9973 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9974 ;;Total ram usage:       12 bytes
  9975 ;; Hardware stack levels used:    1
  9976 ;; Hardware stack levels required when called:    2
  9977 ;; This function calls:
  9978 ;;		___lldiv
  9979 ;;		___lmul
  9980 ;; This function is called by:
  9981 ;;		_main
  9982 ;; This function uses a non-reentrant model
  9983 ;;
  9984                           
  9985                           
  9986                           ;psect for function _calc_temp_rc
  9987  1727                     _calc_temp_rc:	
  9988                           
  9989                           ;sample.c: 244: x32=300000UL;
  9990                           
  9991                           ;incstack = 0
  9992                           ; Regs used in _calc_temp_rc: [wreg+status,2+status,0+pclath+cstack]
  9993  1727  3000               	movlw	0
  9994  1728  0021               	movlb	1	; select bank1
  9995  1729  00BB               	movwf	(_x32+3)^(0+128)
  9996  172A  3004               	movlw	4
  9997  172B  00BA               	movwf	(_x32+2)^(0+128)
  9998  172C  3093               	movlw	147
  9999  172D  00B9               	movwf	(_x32+1)^(0+128)
 10000  172E  30E0               	movlw	224
 10001  172F  00B8               	movwf	_x32^(0+128)
 10002                           
 10003                           ;sample.c: 245: x32=x32*rtAdcValueRcLo;
 10004  1730  0020               	movlb	0	; select bank0
 10005  1731  085E               	movf	_rtAdcValueRcLo,w
 10006  1732  00F2               	movwf	___lmul@multiplier
 10007  1733  085F               	movf	_rtAdcValueRcLo+1,w
 10008  1734  00F3               	movwf	___lmul@multiplier+1
 10009  1735  01F4               	clrf	___lmul@multiplier+2
 10010  1736  01F5               	clrf	___lmul@multiplier+3
 10011  1737  0021               	movlb	1	; select bank1
 10012  1738  083B               	movf	(_x32+3)^(0+128),w
 10013  1739  00F9               	movwf	___lmul@multiplicand+3
 10014  173A  083A               	movf	(_x32+2)^(0+128),w
 10015  173B  00F8               	movwf	___lmul@multiplicand+2
 10016  173C  0839               	movf	(_x32+1)^(0+128),w
 10017  173D  00F7               	movwf	___lmul@multiplicand+1
 10018  173E  0838               	movf	_x32^(0+128),w
 10019  173F  00F6               	movwf	___lmul@multiplicand
 10020  1740  3190  2000  3197   	fcall	___lmul
 10021  1743  0875               	movf	?___lmul+3,w
 10022  1744  0021               	movlb	1	; select bank1
 10023  1745  00BB               	movwf	(_x32+3)^(0+128)
 10024  1746  0874               	movf	?___lmul+2,w
 10025  1747  00BA               	movwf	(_x32+2)^(0+128)
 10026  1748  0873               	movf	?___lmul+1,w
 10027  1749  00B9               	movwf	(_x32+1)^(0+128)
 10028  174A  0872               	movf	?___lmul,w
 10029  174B  00B8               	movwf	_x32^(0+128)
 10030                           
 10031                           ;sample.c: 248: y32=rtAdcValueRcHi;
 10032  174C  0020               	movlb	0	; select bank0
 10033  174D  085C               	movf	_rtAdcValueRcHi,w
 10034  174E  00CA               	movwf	_y32
 10035  174F  085D               	movf	_rtAdcValueRcHi+1,w
 10036  1750  00CB               	movwf	_y32+1
 10037  1751  01CC               	clrf	_y32+2
 10038  1752  01CD               	clrf	_y32+3
 10039                           
 10040                           ;sample.c: 249: y32=y32*3100;
 10041  1753  084D               	movf	_y32+3,w
 10042  1754  00F5               	movwf	___lmul@multiplier+3
 10043  1755  084C               	movf	_y32+2,w
 10044  1756  00F4               	movwf	___lmul@multiplier+2
 10045  1757  084B               	movf	_y32+1,w
 10046  1758  00F3               	movwf	___lmul@multiplier+1
 10047  1759  084A               	movf	_y32,w
 10048  175A  00F2               	movwf	___lmul@multiplier
 10049  175B  3000               	movlw	0
 10050  175C  00F9               	movwf	___lmul@multiplicand+3
 10051  175D  3000               	movlw	0
 10052  175E  00F8               	movwf	___lmul@multiplicand+2
 10053  175F  300C               	movlw	12
 10054  1760  00F7               	movwf	___lmul@multiplicand+1
 10055  1761  301C               	movlw	28
 10056  1762  00F6               	movwf	___lmul@multiplicand
 10057  1763  3190  2000  3197   	fcall	___lmul
 10058  1766  0875               	movf	?___lmul+3,w
 10059  1767  0020               	movlb	0	; select bank0
 10060  1768  00CD               	movwf	_y32+3
 10061  1769  0874               	movf	?___lmul+2,w
 10062  176A  00CC               	movwf	_y32+2
 10063  176B  0873               	movf	?___lmul+1,w
 10064  176C  00CB               	movwf	_y32+1
 10065  176D  0872               	movf	?___lmul,w
 10066  176E  00CA               	movwf	_y32
 10067                           
 10068                           ;sample.c: 250: y32=y32/100;
 10069  176F  3000               	movlw	0
 10070  1770  00F5               	movwf	___lldiv@divisor+3
 10071  1771  3000               	movlw	0
 10072  1772  00F4               	movwf	___lldiv@divisor+2
 10073  1773  3000               	movlw	0
 10074  1774  00F3               	movwf	___lldiv@divisor+1
 10075  1775  3064               	movlw	100
 10076  1776  00F2               	movwf	___lldiv@divisor
 10077  1777  084D               	movf	_y32+3,w
 10078  1778  00F9               	movwf	___lldiv@dividend+3
 10079  1779  084C               	movf	_y32+2,w
 10080  177A  00F8               	movwf	___lldiv@dividend+2
 10081  177B  084B               	movf	_y32+1,w
 10082  177C  00F7               	movwf	___lldiv@dividend+1
 10083  177D  084A               	movf	_y32,w
 10084  177E  00F6               	movwf	___lldiv@dividend
 10085  177F  3191  21E3  3197   	fcall	___lldiv
 10086  1782  0875               	movf	?___lldiv+3,w
 10087  1783  0020               	movlb	0	; select bank0
 10088  1784  00CD               	movwf	_y32+3
 10089  1785  0874               	movf	?___lldiv+2,w
 10090  1786  00CC               	movwf	_y32+2
 10091  1787  0873               	movf	?___lldiv+1,w
 10092  1788  00CB               	movwf	_y32+1
 10093  1789  0872               	movf	?___lldiv,w
 10094  178A  00CA               	movwf	_y32
 10095                           
 10096                           ;sample.c: 251: y32=y32-rtAdcValueRcLo;
 10097  178B  084A               	movf	_y32,w
 10098  178C  00AA               	movwf	??_calc_temp_rc
 10099  178D  084B               	movf	_y32+1,w
 10100  178E  00AB               	movwf	??_calc_temp_rc+1
 10101  178F  084C               	movf	_y32+2,w
 10102  1790  00AC               	movwf	??_calc_temp_rc+2
 10103  1791  084D               	movf	_y32+3,w
 10104  1792  00AD               	movwf	??_calc_temp_rc+3
 10105  1793  085E               	movf	_rtAdcValueRcLo,w
 10106  1794  00AE               	movwf	??_calc_temp_rc+4
 10107  1795  085F               	movf	_rtAdcValueRcLo+1,w
 10108  1796  00AF               	movwf	??_calc_temp_rc+5
 10109  1797  01B0               	clrf	??_calc_temp_rc+6
 10110  1798  01B1               	clrf	??_calc_temp_rc+7
 10111  1799  09AE               	comf	??_calc_temp_rc+4,f
 10112  179A  09AF               	comf	??_calc_temp_rc+5,f
 10113  179B  09B0               	comf	??_calc_temp_rc+6,f
 10114  179C  09B1               	comf	??_calc_temp_rc+7,f
 10115  179D  0AAE               	incf	??_calc_temp_rc+4,f
 10116  179E  1903               	skipnz
 10117  179F  0AAF               	incf	??_calc_temp_rc+5,f
 10118  17A0  1903               	skipnz
 10119  17A1  0AB0               	incf	??_calc_temp_rc+6,f
 10120  17A2  1903               	skipnz
 10121  17A3  0AB1               	incf	??_calc_temp_rc+7,f
 10122  17A4  082E               	movf	??_calc_temp_rc+4,w
 10123  17A5  07AA               	addwf	??_calc_temp_rc,f
 10124  17A6  082F               	movf	??_calc_temp_rc+5,w
 10125  17A7  3DAB               	addwfc	??_calc_temp_rc+1,f
 10126  17A8  0830               	movf	??_calc_temp_rc+6,w
 10127  17A9  3DAC               	addwfc	??_calc_temp_rc+2,f
 10128  17AA  0831               	movf	??_calc_temp_rc+7,w
 10129  17AB  3DAD               	addwfc	??_calc_temp_rc+3,f
 10130  17AC  082D               	movf	??_calc_temp_rc+3,w
 10131  17AD  00CD               	movwf	_y32+3
 10132  17AE  082C               	movf	??_calc_temp_rc+2,w
 10133  17AF  00CC               	movwf	_y32+2
 10134  17B0  082B               	movf	??_calc_temp_rc+1,w
 10135  17B1  00CB               	movwf	_y32+1
 10136  17B2  082A               	movf	??_calc_temp_rc,w
 10137  17B3  00CA               	movwf	_y32
 10138                           
 10139                           ;sample.c: 254: y32=x32/y32;
 10140  17B4  084D               	movf	_y32+3,w
 10141  17B5  00F5               	movwf	___lldiv@divisor+3
 10142  17B6  084C               	movf	_y32+2,w
 10143  17B7  00F4               	movwf	___lldiv@divisor+2
 10144  17B8  084B               	movf	_y32+1,w
 10145  17B9  00F3               	movwf	___lldiv@divisor+1
 10146  17BA  084A               	movf	_y32,w
 10147  17BB  00F2               	movwf	___lldiv@divisor
 10148  17BC  0021               	movlb	1	; select bank1
 10149  17BD  083B               	movf	(_x32+3)^(0+128),w
 10150  17BE  00F9               	movwf	___lldiv@dividend+3
 10151  17BF  083A               	movf	(_x32+2)^(0+128),w
 10152  17C0  00F8               	movwf	___lldiv@dividend+2
 10153  17C1  0839               	movf	(_x32+1)^(0+128),w
 10154  17C2  00F7               	movwf	___lldiv@dividend+1
 10155  17C3  0838               	movf	_x32^(0+128),w
 10156  17C4  00F6               	movwf	___lldiv@dividend
 10157  17C5  3191  21E3  3197   	fcall	___lldiv
 10158  17C8  0875               	movf	?___lldiv+3,w
 10159  17C9  0020               	movlb	0	; select bank0
 10160  17CA  00CD               	movwf	_y32+3
 10161  17CB  0874               	movf	?___lldiv+2,w
 10162  17CC  00CC               	movwf	_y32+2
 10163  17CD  0873               	movf	?___lldiv+1,w
 10164  17CE  00CB               	movwf	_y32+1
 10165  17CF  0872               	movf	?___lldiv,w
 10166  17D0  00CA               	movwf	_y32
 10167                           
 10168                           ;sample.c: 255: if(y32<2000)y32=2000;
 10169  17D1  084D               	movf	_y32+3,w
 10170  17D2  1D03               	btfss	3,2
 10171  17D3  2FE5               	goto	l4936
 10172  17D4  084C               	movf	_y32+2,w
 10173  17D5  1D03               	btfss	3,2
 10174  17D6  2FE5               	goto	l4936
 10175  17D7  30D0               	movlw	208
 10176  17D8  024A               	subwf	_y32,w
 10177  17D9  3007               	movlw	7
 10178  17DA  3B4B               	subwfb	_y32+1,w
 10179  17DB  1803               	btfsc	3,0
 10180  17DC  2FE5               	goto	l4936
 10181  17DD  3000               	movlw	0
 10182  17DE  00CD               	movwf	_y32+3
 10183  17DF  3000               	movlw	0
 10184  17E0  00CC               	movwf	_y32+2
 10185  17E1  3007               	movlw	7
 10186  17E2  00CB               	movwf	_y32+1
 10187  17E3  30D0               	movlw	208
 10188  17E4  00CA               	movwf	_y32
 10189  17E5                     l4936:	
 10190                           
 10191                           ;sample.c: 256: if(y32>25000)y32=25000;
 10192  17E5  084D               	movf	_y32+3,w
 10193  17E6  1D03               	btfss	3,2
 10194  17E7  2FF1               	goto	l4938
 10195  17E8  084C               	movf	_y32+2,w
 10196  17E9  1D03               	btfss	3,2
 10197  17EA  2FF1               	goto	l4938
 10198  17EB  30A9               	movlw	169
 10199  17EC  024A               	subwf	_y32,w
 10200  17ED  3061               	movlw	97
 10201  17EE  3B4B               	subwfb	_y32+1,w
 10202  17EF  1C03               	btfss	3,0
 10203  17F0  2FF9               	goto	l634
 10204  17F1                     l4938:	
 10205  17F1  3000               	movlw	0
 10206  17F2  00CD               	movwf	_y32+3
 10207  17F3  3000               	movlw	0
 10208  17F4  00CC               	movwf	_y32+2
 10209  17F5  3061               	movlw	97
 10210  17F6  00CB               	movwf	_y32+1
 10211  17F7  30A8               	movlw	168
 10212  17F8  00CA               	movwf	_y32
 10213  17F9                     l634:	
 10214                           
 10215                           ;sample.c: 258: return (uint16_t)y32;
 10216  17F9  084A               	movf	_y32,w
 10217  17FA  00A6               	movwf	?_calc_temp_rc
 10218  17FB  084B               	movf	_y32+1,w
 10219  17FC  00A7               	movwf	?_calc_temp_rc+1
 10220  17FD  01A8               	clrf	?_calc_temp_rc+2
 10221  17FE  01A9               	clrf	?_calc_temp_rc+3
 10222  17FF  0008               	return
 10223  1800                     __end_of_calc_temp_rc:	
 10224                           
 10225                           	psect	text30
 10226  133D                     __ptext30:	
 10227 ;; *************** function _calc_rs_lo_avg *****************
 10228 ;; Defined at:
 10229 ;;		line 435 in file "src/api/sample.c"
 10230 ;; Parameters:    Size  Location     Type
 10231 ;;  x               2    6[BANK0 ] unsigned int 
 10232 ;; Auto vars:     Size  Location     Type
 10233 ;;  t32             4   10[BANK0 ] unsigned long 
 10234 ;;  i               1   14[BANK0 ] unsigned char 
 10235 ;; Return value:  Size  Location     Type
 10236 ;;                  2    6[BANK0 ] unsigned int 
 10237 ;; Registers used:
 10238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10239 ;; Tracked objects:
 10240 ;;		On entry : 0/0
 10241 ;;		On exit  : 0/0
 10242 ;;		Unchanged: 0/0
 10243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10244 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10245 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10246 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10247 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10248 ;;Total ram usage:        9 bytes
 10249 ;; Hardware stack levels used:    1
 10250 ;; Hardware stack levels required when called:    2
 10251 ;; This function calls:
 10252 ;;		___lldiv
 10253 ;; This function is called by:
 10254 ;;		_main
 10255 ;; This function uses a non-reentrant model
 10256 ;;
 10257                           
 10258                           
 10259                           ;psect for function _calc_rs_lo_avg
 10260  133D                     _calc_rs_lo_avg:	
 10261                           
 10262                           ;sample.c: 437: uint8_t i;
 10263                           ;sample.c: 438: uint32_t t32=0;
 10264                           
 10265                           ;incstack = 0
 10266                           ; Regs used in _calc_rs_lo_avg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10267  133D  3000               	movlw	0
 10268  133E  0020               	movlb	0	; select bank0
 10269  133F  00AD               	movwf	calc_rs_lo_avg@t32+3
 10270  1340  3000               	movlw	0
 10271  1341  00AC               	movwf	calc_rs_lo_avg@t32+2
 10272  1342  3000               	movlw	0
 10273  1343  00AB               	movwf	calc_rs_lo_avg@t32+1
 10274  1344  3000               	movlw	0
 10275  1345  00AA               	movwf	calc_rs_lo_avg@t32
 10276                           
 10277                           ;sample.c: 440: for(i=0;i<6-1;i++){
 10278  1346  01AE               	clrf	calc_rs_lo_avg@i
 10279  1347  3005               	movlw	5
 10280  1348  022E               	subwf	calc_rs_lo_avg@i,w
 10281  1349  1803               	btfsc	3,0
 10282  134A  2B6F               	goto	l5014
 10283  134B                     l5006:	
 10284                           
 10285                           ;sample.c: 441: rsLoAvgBuf[i]=rsLoAvgBuf[i+1];
 10286  134B  352E               	lslf	calc_rs_lo_avg@i,w
 10287  134C  3E02               	addlw	2
 10288  134D  3EAC               	addlw	(low (_rsLoAvgBuf| 0))& (0+255)
 10289  134E  0086               	movwf	6
 10290  134F  0187               	clrf	7
 10291  1350  352E               	lslf	calc_rs_lo_avg@i,w
 10292  1351  3EAC               	addlw	(low (_rsLoAvgBuf| 0))& (0+255)
 10293  1352  0084               	movwf	4
 10294  1353  0185               	clrf	5
 10295  1354  3F40               	moviw [0]fsr1
 10296  1355  3F80               	movwi [0]fsr0
 10297  1356  3F41               	moviw [1]fsr1
 10298  1357  3F81               	movwi [1]fsr0
 10299                           
 10300                           ;sample.c: 442: t32+=((uint32_t)rsLoAvgBuf[i]);
 10301  1358  352E               	lslf	calc_rs_lo_avg@i,w
 10302  1359  3EAC               	addlw	(low (_rsLoAvgBuf| 0))& (0+255)
 10303  135A  0086               	movwf	6
 10304  135B  0187               	clrf	7
 10305  135C  3F40               	moviw [0]fsr1
 10306  135D  00A8               	movwf	??_calc_rs_lo_avg
 10307  135E  3F41               	moviw [1]fsr1
 10308  135F  00A9               	movwf	??_calc_rs_lo_avg+1
 10309  1360  0828               	movf	??_calc_rs_lo_avg,w
 10310  1361  07AA               	addwf	calc_rs_lo_avg@t32,f
 10311  1362  0829               	movf	??_calc_rs_lo_avg+1,w
 10312  1363  3DAB               	addwfc	calc_rs_lo_avg@t32+1,f
 10313  1364  3000               	movlw	0
 10314  1365  3DAC               	addwfc	calc_rs_lo_avg@t32+2,f
 10315  1366  3DAD               	addwfc	calc_rs_lo_avg@t32+3,f
 10316  1367  3001               	movlw	1
 10317  1368  00A8               	movwf	??_calc_rs_lo_avg
 10318  1369  0828               	movf	??_calc_rs_lo_avg,w
 10319  136A  07AE               	addwf	calc_rs_lo_avg@i,f
 10320  136B  3005               	movlw	5
 10321  136C  022E               	subwf	calc_rs_lo_avg@i,w
 10322  136D  1C03               	skipc
 10323  136E  2B4B               	goto	l5006
 10324  136F                     l5014:	
 10325                           
 10326                           ;sample.c: 443: }
 10327                           ;sample.c: 444: rsLoAvgBuf[i]=x;
 10328  136F  352E               	lslf	calc_rs_lo_avg@i,w
 10329  1370  3EAC               	addlw	(low (_rsLoAvgBuf| 0))& (0+255)
 10330  1371  0086               	movwf	6
 10331  1372  0187               	clrf	7
 10332  1373  0826               	movf	calc_rs_lo_avg@x,w
 10333  1374  3FC0               	movwi [0]fsr1
 10334  1375  0827               	movf	calc_rs_lo_avg@x+1,w
 10335  1376  3FC1               	movwi [1]fsr1
 10336                           
 10337                           ;sample.c: 445: t32+=x;
 10338  1377  0826               	movf	calc_rs_lo_avg@x,w
 10339  1378  07AA               	addwf	calc_rs_lo_avg@t32,f
 10340  1379  0827               	movf	calc_rs_lo_avg@x+1,w
 10341  137A  3DAB               	addwfc	calc_rs_lo_avg@t32+1,f
 10342  137B  3000               	movlw	0
 10343  137C  3DAC               	addwfc	calc_rs_lo_avg@t32+2,f
 10344  137D  3DAD               	addwfc	calc_rs_lo_avg@t32+3,f
 10345                           
 10346                           ;sample.c: 446: t32/=6;
 10347  137E  3000               	movlw	0
 10348  137F  00F5               	movwf	___lldiv@divisor+3
 10349  1380  3000               	movlw	0
 10350  1381  00F4               	movwf	___lldiv@divisor+2
 10351  1382  3000               	movlw	0
 10352  1383  00F3               	movwf	___lldiv@divisor+1
 10353  1384  3006               	movlw	6
 10354  1385  00F2               	movwf	___lldiv@divisor
 10355  1386  082D               	movf	calc_rs_lo_avg@t32+3,w
 10356  1387  00F9               	movwf	___lldiv@dividend+3
 10357  1388  082C               	movf	calc_rs_lo_avg@t32+2,w
 10358  1389  00F8               	movwf	___lldiv@dividend+2
 10359  138A  082B               	movf	calc_rs_lo_avg@t32+1,w
 10360  138B  00F7               	movwf	___lldiv@dividend+1
 10361  138C  082A               	movf	calc_rs_lo_avg@t32,w
 10362  138D  00F6               	movwf	___lldiv@dividend
 10363  138E  3191  21E3         	fcall	___lldiv
 10364  1390  0875               	movf	?___lldiv+3,w
 10365  1391  0020               	movlb	0	; select bank0
 10366  1392  00AD               	movwf	calc_rs_lo_avg@t32+3
 10367  1393  0874               	movf	?___lldiv+2,w
 10368  1394  00AC               	movwf	calc_rs_lo_avg@t32+2
 10369  1395  0873               	movf	?___lldiv+1,w
 10370  1396  00AB               	movwf	calc_rs_lo_avg@t32+1
 10371  1397  0872               	movf	?___lldiv,w
 10372  1398  00AA               	movwf	calc_rs_lo_avg@t32
 10373                           
 10374                           ;sample.c: 447: return (uint16_t)t32;
 10375  1399  082B               	movf	calc_rs_lo_avg@t32+1,w
 10376  139A  00A7               	movwf	?_calc_rs_lo_avg+1
 10377  139B  082A               	movf	calc_rs_lo_avg@t32,w
 10378  139C  00A6               	movwf	?_calc_rs_lo_avg
 10379  139D  0008               	return
 10380  139E                     __end_of_calc_rs_lo_avg:	
 10381                           
 10382                           	psect	text31
 10383  11E3                     __ptext31:	
 10384 ;; *************** function ___lldiv *****************
 10385 ;; Defined at:
 10386 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lldiv.c"
 10387 ;; Parameters:    Size  Location     Type
 10388 ;;  divisor         4    2[COMMON] unsigned long 
 10389 ;;  dividend        4    6[COMMON] unsigned long 
 10390 ;; Auto vars:     Size  Location     Type
 10391 ;;  quotient        4    1[BANK0 ] unsigned long 
 10392 ;;  counter         1    5[BANK0 ] unsigned char 
 10393 ;; Return value:  Size  Location     Type
 10394 ;;                  4    2[COMMON] unsigned long 
 10395 ;; Registers used:
 10396 ;;		wreg, status,2, status,0
 10397 ;; Tracked objects:
 10398 ;;		On entry : 0/0
 10399 ;;		On exit  : 0/0
 10400 ;;		Unchanged: 0/0
 10401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10402 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10403 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10404 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10405 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10406 ;;Total ram usage:       14 bytes
 10407 ;; Hardware stack levels used:    1
 10408 ;; Hardware stack levels required when called:    1
 10409 ;; This function calls:
 10410 ;;		Nothing
 10411 ;; This function is called by:
 10412 ;;		_calc_temp_rs
 10413 ;;		_calc_temp_rc
 10414 ;;		_calc_rs_lo_avg
 10415 ;; This function uses a non-reentrant model
 10416 ;;
 10417                           
 10418                           
 10419                           ;psect for function ___lldiv
 10420  11E3                     ___lldiv:	
 10421                           
 10422                           ;incstack = 0
 10423                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10424  11E3  3000               	movlw	0
 10425  11E4  0020               	movlb	0	; select bank0
 10426  11E5  00A4               	movwf	___lldiv@quotient+3
 10427  11E6  3000               	movlw	0
 10428  11E7  00A3               	movwf	___lldiv@quotient+2
 10429  11E8  3000               	movlw	0
 10430  11E9  00A2               	movwf	___lldiv@quotient+1
 10431  11EA  3000               	movlw	0
 10432  11EB  00A1               	movwf	___lldiv@quotient
 10433  11EC  0875               	movf	___lldiv@divisor+3,w
 10434  11ED  0474               	iorwf	___lldiv@divisor+2,w
 10435  11EE  0473               	iorwf	___lldiv@divisor+1,w
 10436  11EF  0472               	iorwf	___lldiv@divisor,w
 10437  11F0  1903               	skipnz
 10438  11F1  2A2D               	goto	l4904
 10439  11F2  01A5               	clrf	___lldiv@counter
 10440  11F3  0AA5               	incf	___lldiv@counter,f
 10441  11F4                     l4890:	
 10442  11F4  1BF5               	btfsc	___lldiv@divisor+3,7
 10443  11F5  2A02               	goto	l4892
 10444  11F6  3001               	movlw	1
 10445  11F7                     u4425:	
 10446  11F7  35F2               	lslf	___lldiv@divisor,f
 10447  11F8  0DF3               	rlf	___lldiv@divisor+1,f
 10448  11F9  0DF4               	rlf	___lldiv@divisor+2,f
 10449  11FA  0DF5               	rlf	___lldiv@divisor+3,f
 10450  11FB  0B89               	decfsz	9,f
 10451  11FC  29F7               	goto	u4425
 10452  11FD  3001               	movlw	1
 10453  11FE  00A0               	movwf	??___lldiv
 10454  11FF  0820               	movf	??___lldiv,w
 10455  1200  07A5               	addwf	___lldiv@counter,f
 10456  1201  29F4               	goto	l4890
 10457  1202                     l4892:	
 10458  1202  3001               	movlw	1
 10459  1203                     u4445:	
 10460  1203  35A1               	lslf	___lldiv@quotient,f
 10461  1204  0DA2               	rlf	___lldiv@quotient+1,f
 10462  1205  0DA3               	rlf	___lldiv@quotient+2,f
 10463  1206  0DA4               	rlf	___lldiv@quotient+3,f
 10464  1207  0B89               	decfsz	9,f
 10465  1208  2A03               	goto	u4445
 10466  1209  0875               	movf	___lldiv@divisor+3,w
 10467  120A  0279               	subwf	___lldiv@dividend+3,w
 10468  120B  1D03               	skipz
 10469  120C  2A17               	goto	u4455
 10470  120D  0874               	movf	___lldiv@divisor+2,w
 10471  120E  0278               	subwf	___lldiv@dividend+2,w
 10472  120F  1D03               	skipz
 10473  1210  2A17               	goto	u4455
 10474  1211  0873               	movf	___lldiv@divisor+1,w
 10475  1212  0277               	subwf	___lldiv@dividend+1,w
 10476  1213  1D03               	skipz
 10477  1214  2A17               	goto	u4455
 10478  1215  0872               	movf	___lldiv@divisor,w
 10479  1216  0276               	subwf	___lldiv@dividend,w
 10480  1217                     u4455:	
 10481  1217  1C03               	skipc
 10482  1218  2A22               	goto	l4900
 10483  1219  0872               	movf	___lldiv@divisor,w
 10484  121A  02F6               	subwf	___lldiv@dividend,f
 10485  121B  0873               	movf	___lldiv@divisor+1,w
 10486  121C  3BF7               	subwfb	___lldiv@dividend+1,f
 10487  121D  0874               	movf	___lldiv@divisor+2,w
 10488  121E  3BF8               	subwfb	___lldiv@dividend+2,f
 10489  121F  0875               	movf	___lldiv@divisor+3,w
 10490  1220  3BF9               	subwfb	___lldiv@dividend+3,f
 10491  1221  1421               	bsf	___lldiv@quotient,0
 10492  1222                     l4900:	
 10493  1222  3001               	movlw	1
 10494  1223                     u4465:	
 10495  1223  36F5               	lsrf	___lldiv@divisor+3,f
 10496  1224  0CF4               	rrf	___lldiv@divisor+2,f
 10497  1225  0CF3               	rrf	___lldiv@divisor+1,f
 10498  1226  0CF2               	rrf	___lldiv@divisor,f
 10499  1227  0B89               	decfsz	9,f
 10500  1228  2A23               	goto	u4465
 10501  1229  3001               	movlw	1
 10502  122A  02A5               	subwf	___lldiv@counter,f
 10503  122B  1D03               	btfss	3,2
 10504  122C  2A02               	goto	l4892
 10505  122D                     l4904:	
 10506  122D  0824               	movf	___lldiv@quotient+3,w
 10507  122E  00F5               	movwf	?___lldiv+3
 10508  122F  0823               	movf	___lldiv@quotient+2,w
 10509  1230  00F4               	movwf	?___lldiv+2
 10510  1231  0822               	movf	___lldiv@quotient+1,w
 10511  1232  00F3               	movwf	?___lldiv+1
 10512  1233  0821               	movf	___lldiv@quotient,w
 10513  1234  00F2               	movwf	?___lldiv
 10514  1235  0008               	return
 10515  1236                     __end_of___lldiv:	
 10516                           
 10517                           	psect	text32
 10518  08BB                     __ptext32:	
 10519 ;; *************** function _calc_expect_vout_adc_value *****************
 10520 ;; Defined at:
 10521 ;;		line 452 in file "src/api/sample.c"
 10522 ;; Parameters:    Size  Location     Type
 10523 ;;  x               2   19[BANK0 ] unsigned int 
 10524 ;; Auto vars:     Size  Location     Type
 10525 ;;  t32             4   35[BANK0 ] long 
 10526 ;;  i               1   39[BANK0 ] unsigned char 
 10527 ;; Return value:  Size  Location     Type
 10528 ;;                  2   19[BANK0 ] unsigned int 
 10529 ;; Registers used:
 10530 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10531 ;; Tracked objects:
 10532 ;;		On entry : 0/0
 10533 ;;		On exit  : 0/0
 10534 ;;		Unchanged: 0/0
 10535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10536 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10537 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10538 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10539 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10540 ;;Total ram usage:       21 bytes
 10541 ;; Hardware stack levels used:    1
 10542 ;; Hardware stack levels required when called:    2
 10543 ;; This function calls:
 10544 ;;		___aldiv
 10545 ;;		___lmul
 10546 ;; This function is called by:
 10547 ;;		_main
 10548 ;; This function uses a non-reentrant model
 10549 ;;
 10550                           
 10551                           
 10552                           ;psect for function _calc_expect_vout_adc_value
 10553  08BB                     _calc_expect_vout_adc_value:	
 10554                           
 10555                           ;sample.c: 455: uint8_t i;
 10556                           ;sample.c: 456: int32_t t32;
 10557                           ;sample.c: 459: for (i = 0; i < 30-1; i++) {
 10558                           
 10559                           ;incstack = 0
 10560                           ; Regs used in _calc_expect_vout_adc_value: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 10561  08BB  0020               	movlb	0	; select bank0
 10562  08BC  01C7               	clrf	calc_expect_vout_adc_value@i
 10563  08BD  301D               	movlw	29
 10564  08BE  0247               	subwf	calc_expect_vout_adc_value@i,w
 10565  08BF  1803               	btfsc	3,0
 10566  08C0  291E               	goto	l5040
 10567  08C1                     l5030:	
 10568                           
 10569                           ;sample.c: 460: if(sysData.calibRsAdc[i]<sysData.calibRsAdc[i+1]){
 10570  08C1  0847               	movf	calc_expect_vout_adc_value@i,w
 10571  08C2  00B5               	movwf	??_calc_expect_vout_adc_value
 10572  08C3  01B6               	clrf	??_calc_expect_vout_adc_value+1
 10573  08C4  35B5               	lslf	??_calc_expect_vout_adc_value,f
 10574  08C5  0DB6               	rlf	??_calc_expect_vout_adc_value+1,f
 10575  08C6  0835               	movf	??_calc_expect_vout_adc_value,w
 10576  08C7  3E02               	addlw	2
 10577  08C8  00B7               	movwf	??_calc_expect_vout_adc_value+2
 10578  08C9  3000               	movlw	0
 10579  08CA  3D36               	addwfc	??_calc_expect_vout_adc_value+1,w
 10580  08CB  00B8               	movwf	??_calc_expect_vout_adc_value+3
 10581  08CC  3066               	movlw	102
 10582  08CD  00B9               	movwf	??_calc_expect_vout_adc_value+4
 10583  08CE  3023               	movlw	35
 10584  08CF  00BA               	movwf	??_calc_expect_vout_adc_value+5
 10585  08D0  0837               	movf	??_calc_expect_vout_adc_value+2,w
 10586  08D1  0739               	addwf	??_calc_expect_vout_adc_value+4,w
 10587  08D2  0086               	movwf	6
 10588  08D3  0838               	movf	??_calc_expect_vout_adc_value+3,w
 10589  08D4  3D3A               	addwfc	??_calc_expect_vout_adc_value+5,w
 10590  08D5  0087               	movwf	7
 10591  08D6  3F40               	moviw [0]fsr1
 10592  08D7  00BB               	movwf	??_calc_expect_vout_adc_value+6
 10593  08D8  3F41               	moviw [1]fsr1
 10594  08D9  00BC               	movwf	??_calc_expect_vout_adc_value+7
 10595  08DA  0847               	movf	calc_expect_vout_adc_value@i,w
 10596  08DB  00BD               	movwf	??_calc_expect_vout_adc_value+8
 10597  08DC  01BE               	clrf	??_calc_expect_vout_adc_value+9
 10598  08DD  35BD               	lslf	??_calc_expect_vout_adc_value+8,f
 10599  08DE  0DBE               	rlf	??_calc_expect_vout_adc_value+9,f
 10600  08DF  3066               	movlw	102
 10601  08E0  00BF               	movwf	??_calc_expect_vout_adc_value+10
 10602  08E1  3023               	movlw	35
 10603  08E2  00C0               	movwf	??_calc_expect_vout_adc_value+11
 10604  08E3  083D               	movf	??_calc_expect_vout_adc_value+8,w
 10605  08E4  073F               	addwf	??_calc_expect_vout_adc_value+10,w
 10606  08E5  0086               	movwf	6
 10607  08E6  083E               	movf	??_calc_expect_vout_adc_value+9,w
 10608  08E7  3D40               	addwfc	??_calc_expect_vout_adc_value+11,w
 10609  08E8  0087               	movwf	7
 10610  08E9  3F40               	moviw [0]fsr1
 10611  08EA  00C1               	movwf	??_calc_expect_vout_adc_value+12
 10612  08EB  3F41               	moviw [1]fsr1
 10613  08EC  00C2               	movwf	??_calc_expect_vout_adc_value+13
 10614  08ED  083C               	movf	??_calc_expect_vout_adc_value+7,w
 10615  08EE  0242               	subwf	??_calc_expect_vout_adc_value+13,w
 10616  08EF  1D03               	skipz
 10617  08F0  28F3               	goto	u4625
 10618  08F1  083B               	movf	??_calc_expect_vout_adc_value+6,w
 10619  08F2  0241               	subwf	??_calc_expect_vout_adc_value+12,w
 10620  08F3                     u4625:	
 10621  08F3  1803               	skipnc
 10622  08F4  291E               	goto	l5040
 10623                           
 10624                           ;sample.c: 461: if (x <= sysData.calibRsAdc[i+1])break;
 10625  08F5  0847               	movf	calc_expect_vout_adc_value@i,w
 10626  08F6  00B5               	movwf	??_calc_expect_vout_adc_value
 10627  08F7  01B6               	clrf	??_calc_expect_vout_adc_value+1
 10628  08F8  35B5               	lslf	??_calc_expect_vout_adc_value,f
 10629  08F9  0DB6               	rlf	??_calc_expect_vout_adc_value+1,f
 10630  08FA  0835               	movf	??_calc_expect_vout_adc_value,w
 10631  08FB  3E02               	addlw	2
 10632  08FC  00B7               	movwf	??_calc_expect_vout_adc_value+2
 10633  08FD  3000               	movlw	0
 10634  08FE  3D36               	addwfc	??_calc_expect_vout_adc_value+1,w
 10635  08FF  00B8               	movwf	??_calc_expect_vout_adc_value+3
 10636  0900  3066               	movlw	102
 10637  0901  00B9               	movwf	??_calc_expect_vout_adc_value+4
 10638  0902  3023               	movlw	35
 10639  0903  00BA               	movwf	??_calc_expect_vout_adc_value+5
 10640  0904  0837               	movf	??_calc_expect_vout_adc_value+2,w
 10641  0905  0739               	addwf	??_calc_expect_vout_adc_value+4,w
 10642  0906  0086               	movwf	6
 10643  0907  0838               	movf	??_calc_expect_vout_adc_value+3,w
 10644  0908  3D3A               	addwfc	??_calc_expect_vout_adc_value+5,w
 10645  0909  0087               	movwf	7
 10646  090A  3F40               	moviw [0]fsr1
 10647  090B  00BB               	movwf	??_calc_expect_vout_adc_value+6
 10648  090C  3F41               	moviw [1]fsr1
 10649  090D  00BC               	movwf	??_calc_expect_vout_adc_value+7
 10650  090E  0834               	movf	calc_expect_vout_adc_value@x+1,w
 10651  090F  023C               	subwf	??_calc_expect_vout_adc_value+7,w
 10652  0910  1D03               	skipz
 10653  0911  2914               	goto	u4635
 10654  0912  0833               	movf	calc_expect_vout_adc_value@x,w
 10655  0913  023B               	subwf	??_calc_expect_vout_adc_value+6,w
 10656  0914                     u4635:	
 10657  0914  1803               	btfsc	3,0
 10658  0915  291E               	goto	l5040
 10659                           
 10660                           ;sample.c: 464: break;
 10661                           
 10662                           ;sample.c: 462: }else{
 10663  0916  3001               	movlw	1
 10664  0917  00B5               	movwf	??_calc_expect_vout_adc_value
 10665  0918  0835               	movf	??_calc_expect_vout_adc_value,w
 10666  0919  07C7               	addwf	calc_expect_vout_adc_value@i,f
 10667  091A  301D               	movlw	29
 10668  091B  0247               	subwf	calc_expect_vout_adc_value@i,w
 10669  091C  1C03               	skipc
 10670  091D  28C1               	goto	l5030
 10671  091E                     l5040:	
 10672                           
 10673                           ;sample.c: 465: }
 10674                           ;sample.c: 466: }
 10675                           ;sample.c: 468: if (i > 30-2)i=30-2;
 10676  091E  301D               	movlw	29
 10677  091F  0247               	subwf	calc_expect_vout_adc_value@i,w
 10678  0920  1C03               	skipc
 10679  0921  2926               	goto	l5044
 10680  0922  301C               	movlw	28
 10681  0923  00B5               	movwf	??_calc_expect_vout_adc_value
 10682  0924  0835               	movf	??_calc_expect_vout_adc_value,w
 10683  0925  00C7               	movwf	calc_expect_vout_adc_value@i
 10684  0926                     l5044:	
 10685                           
 10686                           ;sample.c: 469: y1=sysData.calibVoMV[i+1];
 10687  0926  0847               	movf	calc_expect_vout_adc_value@i,w
 10688  0927  00B5               	movwf	??_calc_expect_vout_adc_value
 10689  0928  01B6               	clrf	??_calc_expect_vout_adc_value+1
 10690  0929  35B5               	lslf	??_calc_expect_vout_adc_value,f
 10691  092A  0DB6               	rlf	??_calc_expect_vout_adc_value+1,f
 10692  092B  0835               	movf	??_calc_expect_vout_adc_value,w
 10693  092C  3E02               	addlw	2
 10694  092D  00B7               	movwf	??_calc_expect_vout_adc_value+2
 10695  092E  3000               	movlw	0
 10696  092F  3D36               	addwfc	??_calc_expect_vout_adc_value+1,w
 10697  0930  00B8               	movwf	??_calc_expect_vout_adc_value+3
 10698  0931  30A2               	movlw	162
 10699  0932  00B9               	movwf	??_calc_expect_vout_adc_value+4
 10700  0933  3023               	movlw	35
 10701  0934  00BA               	movwf	??_calc_expect_vout_adc_value+5
 10702  0935  0837               	movf	??_calc_expect_vout_adc_value+2,w
 10703  0936  0739               	addwf	??_calc_expect_vout_adc_value+4,w
 10704  0937  0086               	movwf	6
 10705  0938  0838               	movf	??_calc_expect_vout_adc_value+3,w
 10706  0939  3D3A               	addwfc	??_calc_expect_vout_adc_value+5,w
 10707  093A  0087               	movwf	7
 10708  093B  3F40               	moviw [0]fsr1
 10709  093C  00BB               	movwf	??_calc_expect_vout_adc_value+6
 10710  093D  3F41               	moviw [1]fsr1
 10711  093E  00BC               	movwf	??_calc_expect_vout_adc_value+7
 10712  093F  083B               	movf	??_calc_expect_vout_adc_value+6,w
 10713  0940  0021               	movlb	1	; select bank1
 10714  0941  00C0               	movwf	_y1^(0+128)
 10715  0942  0020               	movlb	0	; select bank0
 10716  0943  083C               	movf	??_calc_expect_vout_adc_value+7,w
 10717  0944  0021               	movlb	1	; select bank1
 10718  0945  00C1               	movwf	(_y1^(0+128)+1)
 10719  0946  01C2               	clrf	(_y1^(0+128)+2)
 10720  0947  01C3               	clrf	(_y1^(0+128)+3)
 10721                           
 10722                           ;sample.c: 470: y0=sysData.calibVoMV[i];
 10723  0948  0020               	movlb	0	; select bank0
 10724  0949  0847               	movf	calc_expect_vout_adc_value@i,w
 10725  094A  00B5               	movwf	??_calc_expect_vout_adc_value
 10726  094B  01B6               	clrf	??_calc_expect_vout_adc_value+1
 10727  094C  35B5               	lslf	??_calc_expect_vout_adc_value,f
 10728  094D  0DB6               	rlf	??_calc_expect_vout_adc_value+1,f
 10729  094E  30A2               	movlw	162
 10730  094F  00B7               	movwf	??_calc_expect_vout_adc_value+2
 10731  0950  3023               	movlw	35
 10732  0951  00B8               	movwf	??_calc_expect_vout_adc_value+3
 10733  0952  0835               	movf	??_calc_expect_vout_adc_value,w
 10734  0953  0737               	addwf	??_calc_expect_vout_adc_value+2,w
 10735  0954  0086               	movwf	6
 10736  0955  0836               	movf	??_calc_expect_vout_adc_value+1,w
 10737  0956  3D38               	addwfc	??_calc_expect_vout_adc_value+3,w
 10738  0957  0087               	movwf	7
 10739  0958  3F40               	moviw [0]fsr1
 10740  0959  00B9               	movwf	??_calc_expect_vout_adc_value+4
 10741  095A  3F41               	moviw [1]fsr1
 10742  095B  00BA               	movwf	??_calc_expect_vout_adc_value+5
 10743  095C  0839               	movf	??_calc_expect_vout_adc_value+4,w
 10744  095D  00D2               	movwf	_y0
 10745  095E  083A               	movf	??_calc_expect_vout_adc_value+5,w
 10746  095F  00D3               	movwf	_y0+1
 10747  0960  01D4               	clrf	_y0+2
 10748  0961  01D5               	clrf	_y0+3
 10749                           
 10750                           ;sample.c: 473: x1=sysData.calibRsAdc[i+1];
 10751  0962  0847               	movf	calc_expect_vout_adc_value@i,w
 10752  0963  00B5               	movwf	??_calc_expect_vout_adc_value
 10753  0964  01B6               	clrf	??_calc_expect_vout_adc_value+1
 10754  0965  35B5               	lslf	??_calc_expect_vout_adc_value,f
 10755  0966  0DB6               	rlf	??_calc_expect_vout_adc_value+1,f
 10756  0967  0835               	movf	??_calc_expect_vout_adc_value,w
 10757  0968  3E02               	addlw	2
 10758  0969  00B7               	movwf	??_calc_expect_vout_adc_value+2
 10759  096A  3000               	movlw	0
 10760  096B  3D36               	addwfc	??_calc_expect_vout_adc_value+1,w
 10761  096C  00B8               	movwf	??_calc_expect_vout_adc_value+3
 10762  096D  3066               	movlw	102
 10763  096E  00B9               	movwf	??_calc_expect_vout_adc_value+4
 10764  096F  3023               	movlw	35
 10765  0970  00BA               	movwf	??_calc_expect_vout_adc_value+5
 10766  0971  0837               	movf	??_calc_expect_vout_adc_value+2,w
 10767  0972  0739               	addwf	??_calc_expect_vout_adc_value+4,w
 10768  0973  0086               	movwf	6
 10769  0974  0838               	movf	??_calc_expect_vout_adc_value+3,w
 10770  0975  3D3A               	addwfc	??_calc_expect_vout_adc_value+5,w
 10771  0976  0087               	movwf	7
 10772  0977  3F40               	moviw [0]fsr1
 10773  0978  00BB               	movwf	??_calc_expect_vout_adc_value+6
 10774  0979  3F41               	moviw [1]fsr1
 10775  097A  00BC               	movwf	??_calc_expect_vout_adc_value+7
 10776  097B  083B               	movf	??_calc_expect_vout_adc_value+6,w
 10777  097C  0021               	movlb	1	; select bank1
 10778  097D  00BC               	movwf	_x1^(0+128)
 10779  097E  0020               	movlb	0	; select bank0
 10780  097F  083C               	movf	??_calc_expect_vout_adc_value+7,w
 10781  0980  0021               	movlb	1	; select bank1
 10782  0981  00BD               	movwf	(_x1^(0+128)+1)
 10783  0982  01BE               	clrf	(_x1^(0+128)+2)
 10784  0983  01BF               	clrf	(_x1^(0+128)+3)
 10785                           
 10786                           ;sample.c: 474: x0=sysData.calibRsAdc[i];
 10787  0984  0020               	movlb	0	; select bank0
 10788  0985  0847               	movf	calc_expect_vout_adc_value@i,w
 10789  0986  00B5               	movwf	??_calc_expect_vout_adc_value
 10790  0987  01B6               	clrf	??_calc_expect_vout_adc_value+1
 10791  0988  35B5               	lslf	??_calc_expect_vout_adc_value,f
 10792  0989  0DB6               	rlf	??_calc_expect_vout_adc_value+1,f
 10793  098A  3066               	movlw	102
 10794  098B  00B7               	movwf	??_calc_expect_vout_adc_value+2
 10795  098C  3023               	movlw	35
 10796  098D  00B8               	movwf	??_calc_expect_vout_adc_value+3
 10797  098E  0835               	movf	??_calc_expect_vout_adc_value,w
 10798  098F  0737               	addwf	??_calc_expect_vout_adc_value+2,w
 10799  0990  0086               	movwf	6
 10800  0991  0836               	movf	??_calc_expect_vout_adc_value+1,w
 10801  0992  3D38               	addwfc	??_calc_expect_vout_adc_value+3,w
 10802  0993  0087               	movwf	7
 10803  0994  3F40               	moviw [0]fsr1
 10804  0995  00B9               	movwf	??_calc_expect_vout_adc_value+4
 10805  0996  3F41               	moviw [1]fsr1
 10806  0997  00BA               	movwf	??_calc_expect_vout_adc_value+5
 10807  0998  0839               	movf	??_calc_expect_vout_adc_value+4,w
 10808  0999  00CE               	movwf	_x0
 10809  099A  083A               	movf	??_calc_expect_vout_adc_value+5,w
 10810  099B  00CF               	movwf	_x0+1
 10811  099C  01D0               	clrf	_x0+2
 10812  099D  01D1               	clrf	_x0+3
 10813                           
 10814                           ;sample.c: 476: if(x<=x0 && i==0)return (uint16_t)y0;
 10815  099E  0833               	movf	calc_expect_vout_adc_value@x,w
 10816  099F  00B5               	movwf	??_calc_expect_vout_adc_value
 10817  09A0  0834               	movf	calc_expect_vout_adc_value@x+1,w
 10818  09A1  00B6               	movwf	??_calc_expect_vout_adc_value+1
 10819  09A2  01B7               	clrf	??_calc_expect_vout_adc_value+2
 10820  09A3  01B8               	clrf	??_calc_expect_vout_adc_value+3
 10821  09A4  0851               	movf	_x0+3,w
 10822  09A5  3A80               	xorlw	128
 10823  09A6  00B9               	movwf	??_calc_expect_vout_adc_value+4
 10824  09A7  0838               	movf	??_calc_expect_vout_adc_value+3,w
 10825  09A8  3A80               	xorlw	128
 10826  09A9  0239               	subwf	??_calc_expect_vout_adc_value+4,w
 10827  09AA  1D03               	skipz
 10828  09AB  29B6               	goto	u4663
 10829  09AC  0837               	movf	??_calc_expect_vout_adc_value+2,w
 10830  09AD  0250               	subwf	_x0+2,w
 10831  09AE  1D03               	skipz
 10832  09AF  29B6               	goto	u4663
 10833  09B0  0836               	movf	??_calc_expect_vout_adc_value+1,w
 10834  09B1  024F               	subwf	_x0+1,w
 10835  09B2  1D03               	skipz
 10836  09B3  29B6               	goto	u4663
 10837  09B4  0835               	movf	??_calc_expect_vout_adc_value,w
 10838  09B5  024E               	subwf	_x0,w
 10839  09B6                     u4663:	
 10840  09B6  1C03               	skipc
 10841  09B7  29C0               	goto	l5058
 10842  09B8  0847               	movf	calc_expect_vout_adc_value@i,w
 10843  09B9  1D03               	btfss	3,2
 10844  09BA  29C0               	goto	l5058
 10845  09BB  0853               	movf	_y0+1,w
 10846  09BC  00B4               	movwf	?_calc_expect_vout_adc_value+1
 10847  09BD  0852               	movf	_y0,w
 10848  09BE  00B3               	movwf	?_calc_expect_vout_adc_value
 10849  09BF  0008               	return
 10850  09C0                     l5058:	
 10851                           
 10852                           ;sample.c: 477: if(x1<=x0)return (uint16_t)y0;
 10853  09C0  0851               	movf	_x0+3,w
 10854  09C1  3A80               	xorlw	128
 10855  09C2  00B5               	movwf	??_calc_expect_vout_adc_value
 10856  09C3  0021               	movlb	1	; select bank1
 10857  09C4  083F               	movf	(_x1+3)^(0+128),w
 10858  09C5  3A80               	xorlw	128
 10859  09C6  0020               	movlb	0	; select bank0
 10860  09C7  0235               	subwf	??_calc_expect_vout_adc_value,w
 10861  09C8  1D03               	skipz
 10862  09C9  29DA               	goto	u4683
 10863  09CA  0021               	movlb	1	; select bank1
 10864  09CB  083E               	movf	(_x1+2)^(0+128),w
 10865  09CC  0020               	movlb	0	; select bank0
 10866  09CD  0250               	subwf	_x0+2,w
 10867  09CE  1D03               	skipz
 10868  09CF  29DA               	goto	u4683
 10869  09D0  0021               	movlb	1	; select bank1
 10870  09D1  083D               	movf	(_x1+1)^(0+128),w
 10871  09D2  0020               	movlb	0	; select bank0
 10872  09D3  024F               	subwf	_x0+1,w
 10873  09D4  1D03               	skipz
 10874  09D5  29DA               	goto	u4683
 10875  09D6  0021               	movlb	1	; select bank1
 10876  09D7  083C               	movf	_x1^(0+128),w
 10877  09D8  0020               	movlb	0	; select bank0
 10878  09D9  024E               	subwf	_x0,w
 10879  09DA                     u4683:	
 10880  09DA  1C03               	skipc
 10881  09DB  29E1               	goto	l5064
 10882  09DC  0853               	movf	_y0+1,w
 10883  09DD  00B4               	movwf	?_calc_expect_vout_adc_value+1
 10884  09DE  0852               	movf	_y0,w
 10885  09DF  00B3               	movwf	?_calc_expect_vout_adc_value
 10886  09E0  0008               	return
 10887  09E1                     l5064:	
 10888                           
 10889                           ;sample.c: 480: t32=(x-x0);
 10890  09E1  094E               	comf	_x0,w
 10891  09E2  00B5               	movwf	??_calc_expect_vout_adc_value
 10892  09E3  094F               	comf	_x0+1,w
 10893  09E4  00B6               	movwf	??_calc_expect_vout_adc_value+1
 10894  09E5  0950               	comf	_x0+2,w
 10895  09E6  00B7               	movwf	??_calc_expect_vout_adc_value+2
 10896  09E7  0951               	comf	_x0+3,w
 10897  09E8  00B8               	movwf	??_calc_expect_vout_adc_value+3
 10898  09E9  0AB5               	incf	??_calc_expect_vout_adc_value,f
 10899  09EA  1903               	skipnz
 10900  09EB  0AB6               	incf	??_calc_expect_vout_adc_value+1,f
 10901  09EC  1903               	skipnz
 10902  09ED  0AB7               	incf	??_calc_expect_vout_adc_value+2,f
 10903  09EE  1903               	skipnz
 10904  09EF  0AB8               	incf	??_calc_expect_vout_adc_value+3,f
 10905  09F0  0833               	movf	calc_expect_vout_adc_value@x,w
 10906  09F1  00B9               	movwf	??_calc_expect_vout_adc_value+4
 10907  09F2  0834               	movf	calc_expect_vout_adc_value@x+1,w
 10908  09F3  00BA               	movwf	??_calc_expect_vout_adc_value+5
 10909  09F4  01BB               	clrf	??_calc_expect_vout_adc_value+6
 10910  09F5  01BC               	clrf	??_calc_expect_vout_adc_value+7
 10911  09F6  0839               	movf	??_calc_expect_vout_adc_value+4,w
 10912  09F7  07B5               	addwf	??_calc_expect_vout_adc_value,f
 10913  09F8  083A               	movf	??_calc_expect_vout_adc_value+5,w
 10914  09F9  3DB6               	addwfc	??_calc_expect_vout_adc_value+1,f
 10915  09FA  083B               	movf	??_calc_expect_vout_adc_value+6,w
 10916  09FB  3DB7               	addwfc	??_calc_expect_vout_adc_value+2,f
 10917  09FC  083C               	movf	??_calc_expect_vout_adc_value+7,w
 10918  09FD  3DB8               	addwfc	??_calc_expect_vout_adc_value+3,f
 10919  09FE  0838               	movf	??_calc_expect_vout_adc_value+3,w
 10920  09FF  00C6               	movwf	calc_expect_vout_adc_value@t32+3
 10921  0A00  0837               	movf	??_calc_expect_vout_adc_value+2,w
 10922  0A01  00C5               	movwf	calc_expect_vout_adc_value@t32+2
 10923  0A02  0836               	movf	??_calc_expect_vout_adc_value+1,w
 10924  0A03  00C4               	movwf	calc_expect_vout_adc_value@t32+1
 10925  0A04  0835               	movf	??_calc_expect_vout_adc_value,w
 10926  0A05  00C3               	movwf	calc_expect_vout_adc_value@t32
 10927                           
 10928                           ;sample.c: 481: t32=t32*(y1-y0);
 10929  0A06  0021               	movlb	1	; select bank1
 10930  0A07  0840               	movf	_y1^(0+128),w
 10931  0A08  0020               	movlb	0	; select bank0
 10932  0A09  00B5               	movwf	??_calc_expect_vout_adc_value
 10933  0A0A  0021               	movlb	1	; select bank1
 10934  0A0B  0841               	movf	(_y1+1)^(0+128),w
 10935  0A0C  0020               	movlb	0	; select bank0
 10936  0A0D  00B6               	movwf	??_calc_expect_vout_adc_value+1
 10937  0A0E  0021               	movlb	1	; select bank1
 10938  0A0F  0842               	movf	(_y1+2)^(0+128),w
 10939  0A10  0020               	movlb	0	; select bank0
 10940  0A11  00B7               	movwf	??_calc_expect_vout_adc_value+2
 10941  0A12  0021               	movlb	1	; select bank1
 10942  0A13  0843               	movf	(_y1+3)^(0+128),w
 10943  0A14  0020               	movlb	0	; select bank0
 10944  0A15  00B8               	movwf	??_calc_expect_vout_adc_value+3
 10945  0A16  0952               	comf	_y0,w
 10946  0A17  00B9               	movwf	??_calc_expect_vout_adc_value+4
 10947  0A18  0953               	comf	_y0+1,w
 10948  0A19  00BA               	movwf	??_calc_expect_vout_adc_value+5
 10949  0A1A  0954               	comf	_y0+2,w
 10950  0A1B  00BB               	movwf	??_calc_expect_vout_adc_value+6
 10951  0A1C  0955               	comf	_y0+3,w
 10952  0A1D  00BC               	movwf	??_calc_expect_vout_adc_value+7
 10953  0A1E  0AB9               	incf	??_calc_expect_vout_adc_value+4,f
 10954  0A1F  1903               	skipnz
 10955  0A20  0ABA               	incf	??_calc_expect_vout_adc_value+5,f
 10956  0A21  1903               	skipnz
 10957  0A22  0ABB               	incf	??_calc_expect_vout_adc_value+6,f
 10958  0A23  1903               	skipnz
 10959  0A24  0ABC               	incf	??_calc_expect_vout_adc_value+7,f
 10960  0A25  0839               	movf	??_calc_expect_vout_adc_value+4,w
 10961  0A26  07B5               	addwf	??_calc_expect_vout_adc_value,f
 10962  0A27  083A               	movf	??_calc_expect_vout_adc_value+5,w
 10963  0A28  3DB6               	addwfc	??_calc_expect_vout_adc_value+1,f
 10964  0A29  083B               	movf	??_calc_expect_vout_adc_value+6,w
 10965  0A2A  3DB7               	addwfc	??_calc_expect_vout_adc_value+2,f
 10966  0A2B  083C               	movf	??_calc_expect_vout_adc_value+7,w
 10967  0A2C  3DB8               	addwfc	??_calc_expect_vout_adc_value+3,f
 10968  0A2D  0838               	movf	??_calc_expect_vout_adc_value+3,w
 10969  0A2E  00F5               	movwf	___lmul@multiplier+3
 10970  0A2F  0837               	movf	??_calc_expect_vout_adc_value+2,w
 10971  0A30  00F4               	movwf	___lmul@multiplier+2
 10972  0A31  0836               	movf	??_calc_expect_vout_adc_value+1,w
 10973  0A32  00F3               	movwf	___lmul@multiplier+1
 10974  0A33  0835               	movf	??_calc_expect_vout_adc_value,w
 10975  0A34  00F2               	movwf	___lmul@multiplier
 10976  0A35  0846               	movf	calc_expect_vout_adc_value@t32+3,w
 10977  0A36  00F9               	movwf	___lmul@multiplicand+3
 10978  0A37  0845               	movf	calc_expect_vout_adc_value@t32+2,w
 10979  0A38  00F8               	movwf	___lmul@multiplicand+2
 10980  0A39  0844               	movf	calc_expect_vout_adc_value@t32+1,w
 10981  0A3A  00F7               	movwf	___lmul@multiplicand+1
 10982  0A3B  0843               	movf	calc_expect_vout_adc_value@t32,w
 10983  0A3C  00F6               	movwf	___lmul@multiplicand
 10984  0A3D  3190  2000  3188   	fcall	___lmul
 10985  0A40  0875               	movf	?___lmul+3,w
 10986  0A41  0020               	movlb	0	; select bank0
 10987  0A42  00C6               	movwf	calc_expect_vout_adc_value@t32+3
 10988  0A43  0874               	movf	?___lmul+2,w
 10989  0A44  00C5               	movwf	calc_expect_vout_adc_value@t32+2
 10990  0A45  0873               	movf	?___lmul+1,w
 10991  0A46  00C4               	movwf	calc_expect_vout_adc_value@t32+1
 10992  0A47  0872               	movf	?___lmul,w
 10993  0A48  00C3               	movwf	calc_expect_vout_adc_value@t32
 10994                           
 10995                           ;sample.c: 482: t32=t32/(x1-x0);
 10996  0A49  0021               	movlb	1	; select bank1
 10997  0A4A  083C               	movf	_x1^(0+128),w
 10998  0A4B  0020               	movlb	0	; select bank0
 10999  0A4C  00B5               	movwf	??_calc_expect_vout_adc_value
 11000  0A4D  0021               	movlb	1	; select bank1
 11001  0A4E  083D               	movf	(_x1+1)^(0+128),w
 11002  0A4F  0020               	movlb	0	; select bank0
 11003  0A50  00B6               	movwf	??_calc_expect_vout_adc_value+1
 11004  0A51  0021               	movlb	1	; select bank1
 11005  0A52  083E               	movf	(_x1+2)^(0+128),w
 11006  0A53  0020               	movlb	0	; select bank0
 11007  0A54  00B7               	movwf	??_calc_expect_vout_adc_value+2
 11008  0A55  0021               	movlb	1	; select bank1
 11009  0A56  083F               	movf	(_x1+3)^(0+128),w
 11010  0A57  0020               	movlb	0	; select bank0
 11011  0A58  00B8               	movwf	??_calc_expect_vout_adc_value+3
 11012  0A59  094E               	comf	_x0,w
 11013  0A5A  00B9               	movwf	??_calc_expect_vout_adc_value+4
 11014  0A5B  094F               	comf	_x0+1,w
 11015  0A5C  00BA               	movwf	??_calc_expect_vout_adc_value+5
 11016  0A5D  0950               	comf	_x0+2,w
 11017  0A5E  00BB               	movwf	??_calc_expect_vout_adc_value+6
 11018  0A5F  0951               	comf	_x0+3,w
 11019  0A60  00BC               	movwf	??_calc_expect_vout_adc_value+7
 11020  0A61  0AB9               	incf	??_calc_expect_vout_adc_value+4,f
 11021  0A62  1903               	skipnz
 11022  0A63  0ABA               	incf	??_calc_expect_vout_adc_value+5,f
 11023  0A64  1903               	skipnz
 11024  0A65  0ABB               	incf	??_calc_expect_vout_adc_value+6,f
 11025  0A66  1903               	skipnz
 11026  0A67  0ABC               	incf	??_calc_expect_vout_adc_value+7,f
 11027  0A68  0839               	movf	??_calc_expect_vout_adc_value+4,w
 11028  0A69  07B5               	addwf	??_calc_expect_vout_adc_value,f
 11029  0A6A  083A               	movf	??_calc_expect_vout_adc_value+5,w
 11030  0A6B  3DB6               	addwfc	??_calc_expect_vout_adc_value+1,f
 11031  0A6C  083B               	movf	??_calc_expect_vout_adc_value+6,w
 11032  0A6D  3DB7               	addwfc	??_calc_expect_vout_adc_value+2,f
 11033  0A6E  083C               	movf	??_calc_expect_vout_adc_value+7,w
 11034  0A6F  3DB8               	addwfc	??_calc_expect_vout_adc_value+3,f
 11035  0A70  0838               	movf	??_calc_expect_vout_adc_value+3,w
 11036  0A71  00A7               	movwf	___aldiv@divisor+3
 11037  0A72  0837               	movf	??_calc_expect_vout_adc_value+2,w
 11038  0A73  00A6               	movwf	___aldiv@divisor+2
 11039  0A74  0836               	movf	??_calc_expect_vout_adc_value+1,w
 11040  0A75  00A5               	movwf	___aldiv@divisor+1
 11041  0A76  0835               	movf	??_calc_expect_vout_adc_value,w
 11042  0A77  00A4               	movwf	___aldiv@divisor
 11043  0A78  0846               	movf	calc_expect_vout_adc_value@t32+3,w
 11044  0A79  00AB               	movwf	___aldiv@dividend+3
 11045  0A7A  0845               	movf	calc_expect_vout_adc_value@t32+2,w
 11046  0A7B  00AA               	movwf	___aldiv@dividend+2
 11047  0A7C  0844               	movf	calc_expect_vout_adc_value@t32+1,w
 11048  0A7D  00A9               	movwf	___aldiv@dividend+1
 11049  0A7E  0843               	movf	calc_expect_vout_adc_value@t32,w
 11050  0A7F  00A8               	movwf	___aldiv@dividend
 11051  0A80  3194  2410  3188   	fcall	___aldiv
 11052  0A83  0020               	movlb	0	; select bank0
 11053  0A84  0827               	movf	?___aldiv+3,w
 11054  0A85  00C6               	movwf	calc_expect_vout_adc_value@t32+3
 11055  0A86  0826               	movf	?___aldiv+2,w
 11056  0A87  00C5               	movwf	calc_expect_vout_adc_value@t32+2
 11057  0A88  0825               	movf	?___aldiv+1,w
 11058  0A89  00C4               	movwf	calc_expect_vout_adc_value@t32+1
 11059  0A8A  0824               	movf	?___aldiv,w
 11060  0A8B  00C3               	movwf	calc_expect_vout_adc_value@t32
 11061                           
 11062                           ;sample.c: 483: t32=t32+y0;
 11063  0A8C  0843               	movf	calc_expect_vout_adc_value@t32,w
 11064  0A8D  0752               	addwf	_y0,w
 11065  0A8E  00B5               	movwf	??_calc_expect_vout_adc_value
 11066  0A8F  0844               	movf	calc_expect_vout_adc_value@t32+1,w
 11067  0A90  3D53               	addwfc	_y0+1,w
 11068  0A91  00B6               	movwf	??_calc_expect_vout_adc_value+1
 11069  0A92  0845               	movf	calc_expect_vout_adc_value@t32+2,w
 11070  0A93  3D54               	addwfc	_y0+2,w
 11071  0A94  00B7               	movwf	??_calc_expect_vout_adc_value+2
 11072  0A95  0846               	movf	calc_expect_vout_adc_value@t32+3,w
 11073  0A96  3D55               	addwfc	_y0+3,w
 11074  0A97  00B8               	movwf	??_calc_expect_vout_adc_value+3
 11075  0A98  0838               	movf	??_calc_expect_vout_adc_value+3,w
 11076  0A99  00C6               	movwf	calc_expect_vout_adc_value@t32+3
 11077  0A9A  0837               	movf	??_calc_expect_vout_adc_value+2,w
 11078  0A9B  00C5               	movwf	calc_expect_vout_adc_value@t32+2
 11079  0A9C  0836               	movf	??_calc_expect_vout_adc_value+1,w
 11080  0A9D  00C4               	movwf	calc_expect_vout_adc_value@t32+1
 11081  0A9E  0835               	movf	??_calc_expect_vout_adc_value,w
 11082  0A9F  00C3               	movwf	calc_expect_vout_adc_value@t32
 11083                           
 11084                           ;sample.c: 484: if(t32<0)t32=0;
 11085  0AA0  1FC6               	btfss	calc_expect_vout_adc_value@t32+3,7
 11086  0AA1  2AAA               	goto	l665
 11087  0AA2  3000               	movlw	0
 11088  0AA3  00C6               	movwf	calc_expect_vout_adc_value@t32+3
 11089  0AA4  3000               	movlw	0
 11090  0AA5  00C5               	movwf	calc_expect_vout_adc_value@t32+2
 11091  0AA6  3000               	movlw	0
 11092  0AA7  00C4               	movwf	calc_expect_vout_adc_value@t32+1
 11093  0AA8  3000               	movlw	0
 11094  0AA9  00C3               	movwf	calc_expect_vout_adc_value@t32
 11095  0AAA                     l665:	
 11096                           
 11097                           ;sample.c: 485: return (uint16_t)t32;
 11098  0AAA  0844               	movf	calc_expect_vout_adc_value@t32+1,w
 11099  0AAB  00B4               	movwf	?_calc_expect_vout_adc_value+1
 11100  0AAC  0843               	movf	calc_expect_vout_adc_value@t32,w
 11101  0AAD  00B3               	movwf	?_calc_expect_vout_adc_value
 11102  0AAE  0008               	return
 11103  0AAF                     __end_of_calc_expect_vout_adc_value:	
 11104                           
 11105                           	psect	text33
 11106  1000                     __ptext33:	
 11107 ;; *************** function ___lmul *****************
 11108 ;; Defined at:
 11109 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul32.c"
 11110 ;; Parameters:    Size  Location     Type
 11111 ;;  multiplier      4    2[COMMON] unsigned long 
 11112 ;;  multiplicand    4    6[COMMON] unsigned long 
 11113 ;; Auto vars:     Size  Location     Type
 11114 ;;  product         4    0[BANK0 ] unsigned long 
 11115 ;; Return value:  Size  Location     Type
 11116 ;;                  4    2[COMMON] unsigned long 
 11117 ;; Registers used:
 11118 ;;		wreg, status,2, status,0
 11119 ;; Tracked objects:
 11120 ;;		On entry : 0/0
 11121 ;;		On exit  : 0/0
 11122 ;;		Unchanged: 0/0
 11123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11124 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11125 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11127 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11128 ;;Total ram usage:       12 bytes
 11129 ;; Hardware stack levels used:    1
 11130 ;; Hardware stack levels required when called:    1
 11131 ;; This function calls:
 11132 ;;		Nothing
 11133 ;; This function is called by:
 11134 ;;		_calc_temp_rs
 11135 ;;		_calc_temp_rc
 11136 ;;		_pid_pwm1_idrv_run
 11137 ;;		_calc_expect_vout_adc_value
 11138 ;;		_cal_rs_simulate_power
 11139 ;;		_m_math_pow
 11140 ;; This function uses a non-reentrant model
 11141 ;;
 11142                           
 11143                           
 11144                           ;psect for function ___lmul
 11145  1000                     ___lmul:	
 11146                           
 11147                           ;incstack = 0
 11148                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 11149  1000  3000               	movlw	0
 11150  1001  0020               	movlb	0	; select bank0
 11151  1002  00A3               	movwf	___lmul@product+3
 11152  1003  3000               	movlw	0
 11153  1004  00A2               	movwf	___lmul@product+2
 11154  1005  3000               	movlw	0
 11155  1006  00A1               	movwf	___lmul@product+1
 11156  1007  3000               	movlw	0
 11157  1008  00A0               	movwf	___lmul@product
 11158  1009                     l3756:	
 11159  1009  1C72               	btfss	___lmul@multiplier,0
 11160  100A  2814               	goto	l3760
 11161  100B  0876               	movf	___lmul@multiplicand,w
 11162  100C  0020               	movlb	0	; select bank0
 11163  100D  07A0               	addwf	___lmul@product,f
 11164  100E  0877               	movf	___lmul@multiplicand+1,w
 11165  100F  3DA1               	addwfc	___lmul@product+1,f
 11166  1010  0878               	movf	___lmul@multiplicand+2,w
 11167  1011  3DA2               	addwfc	___lmul@product+2,f
 11168  1012  0879               	movf	___lmul@multiplicand+3,w
 11169  1013  3DA3               	addwfc	___lmul@product+3,f
 11170  1014                     l3760:	
 11171  1014  3001               	movlw	1
 11172  1015                     u2685:	
 11173  1015  35F6               	lslf	___lmul@multiplicand,f
 11174  1016  0DF7               	rlf	___lmul@multiplicand+1,f
 11175  1017  0DF8               	rlf	___lmul@multiplicand+2,f
 11176  1018  0DF9               	rlf	___lmul@multiplicand+3,f
 11177  1019  0B89               	decfsz	9,f
 11178  101A  2815               	goto	u2685
 11179  101B  3001               	movlw	1
 11180  101C                     u2695:	
 11181  101C  36F5               	lsrf	___lmul@multiplier+3,f
 11182  101D  0CF4               	rrf	___lmul@multiplier+2,f
 11183  101E  0CF3               	rrf	___lmul@multiplier+1,f
 11184  101F  0CF2               	rrf	___lmul@multiplier,f
 11185  1020  0B89               	decfsz	9,f
 11186  1021  281C               	goto	u2695
 11187  1022  0875               	movf	___lmul@multiplier+3,w
 11188  1023  0474               	iorwf	___lmul@multiplier+2,w
 11189  1024  0473               	iorwf	___lmul@multiplier+1,w
 11190  1025  0472               	iorwf	___lmul@multiplier,w
 11191  1026  1D03               	skipz
 11192  1027  2809               	goto	l3756
 11193  1028  0020               	movlb	0	; select bank0
 11194  1029  0823               	movf	___lmul@product+3,w
 11195  102A  00F5               	movwf	?___lmul+3
 11196  102B  0822               	movf	___lmul@product+2,w
 11197  102C  00F4               	movwf	?___lmul+2
 11198  102D  0821               	movf	___lmul@product+1,w
 11199  102E  00F3               	movwf	?___lmul+1
 11200  102F  0820               	movf	___lmul@product,w
 11201  1030  00F2               	movwf	?___lmul
 11202  1031  0008               	return
 11203  1032                     __end_of___lmul:	
 11204                           
 11205                           	psect	text34
 11206  1410                     __ptext34:	
 11207 ;; *************** function ___aldiv *****************
 11208 ;; Defined at:
 11209 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\aldiv.c"
 11210 ;; Parameters:    Size  Location     Type
 11211 ;;  divisor         4    4[BANK0 ] long 
 11212 ;;  dividend        4    8[BANK0 ] long 
 11213 ;; Auto vars:     Size  Location     Type
 11214 ;;  quotient        4   15[BANK0 ] long 
 11215 ;;  sign            1   14[BANK0 ] unsigned char 
 11216 ;;  counter         1   13[BANK0 ] unsigned char 
 11217 ;; Return value:  Size  Location     Type
 11218 ;;                  4    4[BANK0 ] long 
 11219 ;; Registers used:
 11220 ;;		wreg, status,2, status,0
 11221 ;; Tracked objects:
 11222 ;;		On entry : 0/0
 11223 ;;		On exit  : 0/0
 11224 ;;		Unchanged: 0/0
 11225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11226 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11227 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11228 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11229 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11230 ;;Total ram usage:       15 bytes
 11231 ;; Hardware stack levels used:    1
 11232 ;; Hardware stack levels required when called:    1
 11233 ;; This function calls:
 11234 ;;		Nothing
 11235 ;; This function is called by:
 11236 ;;		_pid_pwm1_idrv_run
 11237 ;;		_calc_expect_vout_adc_value
 11238 ;;		_m_int_2_str
 11239 ;;		_m_int_2_str_ex
 11240 ;; This function uses a non-reentrant model
 11241 ;;
 11242                           
 11243                           
 11244                           ;psect for function ___aldiv
 11245  1410                     ___aldiv:	
 11246                           
 11247                           ;incstack = 0
 11248                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 11249  1410  0020               	movlb	0	; select bank0
 11250  1411  01AE               	clrf	___aldiv@sign
 11251  1412  1FA7               	btfss	___aldiv@divisor+3,7
 11252  1413  2C21               	goto	l1123
 11253  1414  09A4               	comf	___aldiv@divisor,f
 11254  1415  09A5               	comf	___aldiv@divisor+1,f
 11255  1416  09A6               	comf	___aldiv@divisor+2,f
 11256  1417  09A7               	comf	___aldiv@divisor+3,f
 11257  1418  0AA4               	incf	___aldiv@divisor,f
 11258  1419  1903               	skipnz
 11259  141A  0AA5               	incf	___aldiv@divisor+1,f
 11260  141B  1903               	skipnz
 11261  141C  0AA6               	incf	___aldiv@divisor+2,f
 11262  141D  1903               	skipnz
 11263  141E  0AA7               	incf	___aldiv@divisor+3,f
 11264  141F  01AE               	clrf	___aldiv@sign
 11265  1420  0AAE               	incf	___aldiv@sign,f
 11266  1421                     l1123:	
 11267  1421  1FAB               	btfss	___aldiv@dividend+3,7
 11268  1422  2C32               	goto	l4810
 11269  1423  09A8               	comf	___aldiv@dividend,f
 11270  1424  09A9               	comf	___aldiv@dividend+1,f
 11271  1425  09AA               	comf	___aldiv@dividend+2,f
 11272  1426  09AB               	comf	___aldiv@dividend+3,f
 11273  1427  0AA8               	incf	___aldiv@dividend,f
 11274  1428  1903               	skipnz
 11275  1429  0AA9               	incf	___aldiv@dividend+1,f
 11276  142A  1903               	skipnz
 11277  142B  0AAA               	incf	___aldiv@dividend+2,f
 11278  142C  1903               	skipnz
 11279  142D  0AAB               	incf	___aldiv@dividend+3,f
 11280  142E  3001               	movlw	1
 11281  142F  00AC               	movwf	??___aldiv
 11282  1430  082C               	movf	??___aldiv,w
 11283  1431  06AE               	xorwf	___aldiv@sign,f
 11284  1432                     l4810:	
 11285  1432  3000               	movlw	0
 11286  1433  00B2               	movwf	___aldiv@quotient+3
 11287  1434  3000               	movlw	0
 11288  1435  00B1               	movwf	___aldiv@quotient+2
 11289  1436  3000               	movlw	0
 11290  1437  00B0               	movwf	___aldiv@quotient+1
 11291  1438  3000               	movlw	0
 11292  1439  00AF               	movwf	___aldiv@quotient
 11293  143A  0827               	movf	___aldiv@divisor+3,w
 11294  143B  0426               	iorwf	___aldiv@divisor+2,w
 11295  143C  0425               	iorwf	___aldiv@divisor+1,w
 11296  143D  0424               	iorwf	___aldiv@divisor,w
 11297  143E  1903               	skipnz
 11298  143F  2C7B               	goto	l4832
 11299  1440  01AD               	clrf	___aldiv@counter
 11300  1441  0AAD               	incf	___aldiv@counter,f
 11301  1442                     l4818:	
 11302  1442  1BA7               	btfsc	___aldiv@divisor+3,7
 11303  1443  2C50               	goto	l4820
 11304  1444  3001               	movlw	1
 11305  1445                     u4245:	
 11306  1445  35A4               	lslf	___aldiv@divisor,f
 11307  1446  0DA5               	rlf	___aldiv@divisor+1,f
 11308  1447  0DA6               	rlf	___aldiv@divisor+2,f
 11309  1448  0DA7               	rlf	___aldiv@divisor+3,f
 11310  1449  0B89               	decfsz	9,f
 11311  144A  2C45               	goto	u4245
 11312  144B  3001               	movlw	1
 11313  144C  00AC               	movwf	??___aldiv
 11314  144D  082C               	movf	??___aldiv,w
 11315  144E  07AD               	addwf	___aldiv@counter,f
 11316  144F  2C42               	goto	l4818
 11317  1450                     l4820:	
 11318  1450  3001               	movlw	1
 11319  1451                     u4265:	
 11320  1451  35AF               	lslf	___aldiv@quotient,f
 11321  1452  0DB0               	rlf	___aldiv@quotient+1,f
 11322  1453  0DB1               	rlf	___aldiv@quotient+2,f
 11323  1454  0DB2               	rlf	___aldiv@quotient+3,f
 11324  1455  0B89               	decfsz	9,f
 11325  1456  2C51               	goto	u4265
 11326  1457  0827               	movf	___aldiv@divisor+3,w
 11327  1458  022B               	subwf	___aldiv@dividend+3,w
 11328  1459  1D03               	skipz
 11329  145A  2C65               	goto	u4275
 11330  145B  0826               	movf	___aldiv@divisor+2,w
 11331  145C  022A               	subwf	___aldiv@dividend+2,w
 11332  145D  1D03               	skipz
 11333  145E  2C65               	goto	u4275
 11334  145F  0825               	movf	___aldiv@divisor+1,w
 11335  1460  0229               	subwf	___aldiv@dividend+1,w
 11336  1461  1D03               	skipz
 11337  1462  2C65               	goto	u4275
 11338  1463  0824               	movf	___aldiv@divisor,w
 11339  1464  0228               	subwf	___aldiv@dividend,w
 11340  1465                     u4275:	
 11341  1465  1C03               	skipc
 11342  1466  2C70               	goto	l4828
 11343  1467  0824               	movf	___aldiv@divisor,w
 11344  1468  02A8               	subwf	___aldiv@dividend,f
 11345  1469  0825               	movf	___aldiv@divisor+1,w
 11346  146A  3BA9               	subwfb	___aldiv@dividend+1,f
 11347  146B  0826               	movf	___aldiv@divisor+2,w
 11348  146C  3BAA               	subwfb	___aldiv@dividend+2,f
 11349  146D  0827               	movf	___aldiv@divisor+3,w
 11350  146E  3BAB               	subwfb	___aldiv@dividend+3,f
 11351  146F  142F               	bsf	___aldiv@quotient,0
 11352  1470                     l4828:	
 11353  1470  3001               	movlw	1
 11354  1471                     u4285:	
 11355  1471  36A7               	lsrf	___aldiv@divisor+3,f
 11356  1472  0CA6               	rrf	___aldiv@divisor+2,f
 11357  1473  0CA5               	rrf	___aldiv@divisor+1,f
 11358  1474  0CA4               	rrf	___aldiv@divisor,f
 11359  1475  0B89               	decfsz	9,f
 11360  1476  2C71               	goto	u4285
 11361  1477  3001               	movlw	1
 11362  1478  02AD               	subwf	___aldiv@counter,f
 11363  1479  1D03               	btfss	3,2
 11364  147A  2C50               	goto	l4820
 11365  147B                     l4832:	
 11366  147B  082E               	movf	___aldiv@sign,w
 11367  147C  1903               	btfsc	3,2
 11368  147D  2C89               	goto	l4836
 11369  147E  09AF               	comf	___aldiv@quotient,f
 11370  147F  09B0               	comf	___aldiv@quotient+1,f
 11371  1480  09B1               	comf	___aldiv@quotient+2,f
 11372  1481  09B2               	comf	___aldiv@quotient+3,f
 11373  1482  0AAF               	incf	___aldiv@quotient,f
 11374  1483  1903               	skipnz
 11375  1484  0AB0               	incf	___aldiv@quotient+1,f
 11376  1485  1903               	skipnz
 11377  1486  0AB1               	incf	___aldiv@quotient+2,f
 11378  1487  1903               	skipnz
 11379  1488  0AB2               	incf	___aldiv@quotient+3,f
 11380  1489                     l4836:	
 11381  1489  0832               	movf	___aldiv@quotient+3,w
 11382  148A  00A7               	movwf	?___aldiv+3
 11383  148B  0831               	movf	___aldiv@quotient+2,w
 11384  148C  00A6               	movwf	?___aldiv+2
 11385  148D  0830               	movf	___aldiv@quotient+1,w
 11386  148E  00A5               	movwf	?___aldiv+1
 11387  148F  082F               	movf	___aldiv@quotient,w
 11388  1490  00A4               	movwf	?___aldiv
 11389  1491  0008               	return
 11390  1492                     __end_of___aldiv:	
 11391                           
 11392                           	psect	text35
 11393  12E0                     __ptext35:	
 11394 ;; *************** function _adc_sample *****************
 11395 ;; Defined at:
 11396 ;;		line 187 in file "src/api/sample.c"
 11397 ;; Parameters:    Size  Location     Type
 11398 ;;  ch              1    wreg     unsigned char 
 11399 ;;  gfvr            1    5[COMMON] unsigned char 
 11400 ;;  num             1    6[COMMON] unsigned char 
 11401 ;; Auto vars:     Size  Location     Type
 11402 ;;  ch              1    0[BANK0 ] unsigned char 
 11403 ;;  t16             2    5[BANK0 ] unsigned int 
 11404 ;;  ret             2    3[BANK0 ] unsigned int 
 11405 ;;  i               2    1[BANK0 ] unsigned int 
 11406 ;; Return value:  Size  Location     Type
 11407 ;;                  2    5[COMMON] unsigned int 
 11408 ;; Registers used:
 11409 ;;		wreg, status,2, status,0, pclath, cstack
 11410 ;; Tracked objects:
 11411 ;;		On entry : 0/0
 11412 ;;		On exit  : 0/0
 11413 ;;		Unchanged: 0/0
 11414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11416 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11417 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11418 ;;      Totals:         5       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11419 ;;Total ram usage:       12 bytes
 11420 ;; Hardware stack levels used:    1
 11421 ;; Hardware stack levels required when called:    2
 11422 ;; This function calls:
 11423 ;;		_adc_init
 11424 ;;		_fvr_set_gain
 11425 ;; This function is called by:
 11426 ;;		_main
 11427 ;; This function uses a non-reentrant model
 11428 ;;
 11429                           
 11430                           
 11431                           ;psect for function _adc_sample
 11432  12E0                     _adc_sample:	
 11433                           
 11434                           ;incstack = 0
 11435                           ; Regs used in _adc_sample: [wreg+status,2+status,0+pclath+cstack]
 11436                           ;adc_sample@ch stored from wreg
 11437  12E0  0020               	movlb	0	; select bank0
 11438  12E1  00A0               	movwf	adc_sample@ch
 11439                           
 11440                           ;sample.c: 189: uint16_t i;
 11441                           ;sample.c: 190: uint16_t ret=0;
 11442  12E2  01A3               	clrf	adc_sample@ret
 11443  12E3  01A4               	clrf	adc_sample@ret+1
 11444                           
 11445                           ;sample.c: 191: uint16_t t16=0;
 11446  12E4  01A5               	clrf	adc_sample@t16
 11447  12E5  01A6               	clrf	adc_sample@t16+1
 11448                           
 11449                           ;sample.c: 193: fvr_set_gain(gfvr);
 11450  12E6  0875               	movf	adc_sample@gfvr,w
 11451  12E7  319D  2565  3192   	fcall	_fvr_set_gain
 11452                           
 11453                           ;sample.c: 194: adc_init((adc_channel_t)ch);
 11454  12EA  0020               	movlb	0	; select bank0
 11455  12EB  0820               	movf	adc_sample@ch,w
 11456  12EC  319D  2551  3192   	fcall	_adc_init
 11457                           
 11458                           ;sample.c: 195: _delay((unsigned long)((50)*(16000000/4000000.0)));
 11459  12EF  3042               	movlw	66
 11460  12F0                     u4917:	
 11461  12F0  0B89               	decfsz	9,f
 11462  12F1  2AF0               	goto	u4917
 11463  12F2  3200               	nop2
 11464                           
 11465                           ;sample.c: 196: ADCON0bits.GO_nDONE = 1;
 11466  12F3  0021               	movlb	1	; select bank1
 11467  12F4  149D               	bsf	29,1	;volatile
 11468  12F5                     l615:	
 11469                           ;sample.c: 197: while (ADCON0bits.GO_nDONE);
 11470                           
 11471  12F5  189D               	btfsc	29,1	;volatile
 11472  12F6  2AF5               	goto	l615
 11473                           
 11474                           ;sample.c: 198: if(num>64)num=64;
 11475  12F7  3041               	movlw	65
 11476  12F8  0276               	subwf	adc_sample@num,w
 11477  12F9  1C03               	skipc
 11478  12FA  2AFF               	goto	l3936
 11479  12FB  3040               	movlw	64
 11480  12FC  00F7               	movwf	??_adc_sample
 11481  12FD  0877               	movf	??_adc_sample,w
 11482  12FE  00F6               	movwf	adc_sample@num
 11483  12FF                     l3936:	
 11484                           
 11485                           ;sample.c: 199: for(i=0;i<num;i++){
 11486  12FF  0020               	movlb	0	; select bank0
 11487  1300  01A1               	clrf	adc_sample@i
 11488  1301  01A2               	clrf	adc_sample@i+1
 11489  1302                     l3946:	
 11490  1302  0876               	movf	adc_sample@num,w
 11491  1303  00F7               	movwf	??_adc_sample
 11492  1304  01F8               	clrf	??_adc_sample+1
 11493  1305  0878               	movf	??_adc_sample+1,w
 11494  1306  0222               	subwf	adc_sample@i+1,w
 11495  1307  1D03               	skipz
 11496  1308  2B0B               	goto	u3105
 11497  1309  0877               	movf	??_adc_sample,w
 11498  130A  0221               	subwf	adc_sample@i,w
 11499  130B                     u3105:	
 11500  130B  1803               	btfsc	3,0
 11501  130C  2B38               	goto	l3948
 11502                           
 11503                           ;sample.c: 200: ADCON0bits.GO_nDONE = 1;
 11504  130D  0021               	movlb	1	; select bank1
 11505  130E  149D               	bsf	29,1	;volatile
 11506  130F                     l621:	
 11507                           ;sample.c: 201: while (ADCON0bits.GO_nDONE);
 11508                           
 11509  130F  189D               	btfsc	29,1	;volatile
 11510  1310  2B0F               	goto	l621
 11511                           
 11512                           ;sample.c: 202: __nop();
 11513  1311  0000               	nop
 11514                           
 11515                           ;sample.c: 203: t16=ADRESH;
 11516  1312  0021               	movlb	1	; select bank1
 11517  1313  081C               	movf	28,w	;volatile
 11518  1314  00F7               	movwf	??_adc_sample
 11519  1315  01F8               	clrf	??_adc_sample+1
 11520  1316  0877               	movf	??_adc_sample,w
 11521  1317  0020               	movlb	0	; select bank0
 11522  1318  00A5               	movwf	adc_sample@t16
 11523  1319  0878               	movf	??_adc_sample+1,w
 11524  131A  00A6               	movwf	adc_sample@t16+1
 11525                           
 11526                           ;sample.c: 204: t16<<=2;
 11527  131B  3002               	movlw	2
 11528  131C                     u3085:	
 11529  131C  35A5               	lslf	adc_sample@t16,f
 11530  131D  0DA6               	rlf	adc_sample@t16+1,f
 11531  131E  0B89               	decfsz	9,f
 11532  131F  2B1C               	goto	u3085
 11533                           
 11534                           ;sample.c: 205: t16|=(uint16_t)(ADRESL>>6);
 11535  1320  0021               	movlb	1	; select bank1
 11536  1321  081B               	movf	27,w	;volatile
 11537  1322  00F7               	movwf	??_adc_sample
 11538  1323  3006               	movlw	6
 11539  1324                     u3095:	
 11540  1324  36F7               	lsrf	??_adc_sample,f
 11541  1325  0B89               	decfsz	9,f
 11542  1326  2B24               	goto	u3095
 11543  1327  0877               	movf	??_adc_sample,w
 11544  1328  00F8               	movwf	??_adc_sample+1
 11545  1329  01F9               	clrf	??_adc_sample+2
 11546  132A  0878               	movf	??_adc_sample+1,w
 11547  132B  0020               	movlb	0	; select bank0
 11548  132C  04A5               	iorwf	adc_sample@t16,f
 11549  132D  0879               	movf	??_adc_sample+2,w
 11550  132E  04A6               	iorwf	adc_sample@t16+1,f
 11551                           
 11552                           ;sample.c: 207: ret+=t16;
 11553  132F  0825               	movf	adc_sample@t16,w
 11554  1330  07A3               	addwf	adc_sample@ret,f
 11555  1331  0826               	movf	adc_sample@t16+1,w
 11556  1332  3DA4               	addwfc	adc_sample@ret+1,f
 11557  1333  3001               	movlw	1
 11558  1334  07A1               	addwf	adc_sample@i,f
 11559  1335  3000               	movlw	0
 11560  1336  3DA2               	addwfc	adc_sample@i+1,f
 11561  1337  2B02               	goto	l3946
 11562  1338                     l3948:	
 11563                           
 11564                           ;sample.c: 212: return ret;
 11565  1338  0824               	movf	adc_sample@ret+1,w
 11566  1339  00F6               	movwf	?_adc_sample+1
 11567  133A  0823               	movf	adc_sample@ret,w
 11568  133B  00F5               	movwf	?_adc_sample
 11569  133C  0008               	return
 11570  133D                     __end_of_adc_sample:	
 11571                           
 11572                           	psect	text36
 11573  1D65                     __ptext36:	
 11574 ;; *************** function _fvr_set_gain *****************
 11575 ;; Defined at:
 11576 ;;		line 134 in file "src/api/sample.c"
 11577 ;; Parameters:    Size  Location     Type
 11578 ;;  g               1    wreg     unsigned char 
 11579 ;; Auto vars:     Size  Location     Type
 11580 ;;  g               1    4[COMMON] unsigned char 
 11581 ;;  t8              1    3[COMMON] unsigned char 
 11582 ;; Return value:  Size  Location     Type
 11583 ;;                  1    wreg      void 
 11584 ;; Registers used:
 11585 ;;		wreg, status,2, status,0
 11586 ;; Tracked objects:
 11587 ;;		On entry : 0/0
 11588 ;;		On exit  : 0/0
 11589 ;;		Unchanged: 0/0
 11590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11592 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11593 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11594 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11595 ;;Total ram usage:        3 bytes
 11596 ;; Hardware stack levels used:    1
 11597 ;; Hardware stack levels required when called:    1
 11598 ;; This function calls:
 11599 ;;		Nothing
 11600 ;; This function is called by:
 11601 ;;		_adc_sample
 11602 ;; This function uses a non-reentrant model
 11603 ;;
 11604                           
 11605                           
 11606                           ;psect for function _fvr_set_gain
 11607  1D65                     _fvr_set_gain:	
 11608                           
 11609                           ;incstack = 0
 11610                           ; Regs used in _fvr_set_gain: [wreg+status,2+status,0]
 11611                           ;fvr_set_gain@g stored from wreg
 11612  1D65  00F4               	movwf	fvr_set_gain@g
 11613                           
 11614                           ;sample.c: 136: uint8_t t8=0x80;
 11615  1D66  3080               	movlw	128
 11616  1D67  00F2               	movwf	??_fvr_set_gain
 11617  1D68  0872               	movf	??_fvr_set_gain,w
 11618  1D69  00F3               	movwf	fvr_set_gain@t8
 11619                           
 11620                           ;sample.c: 137: if(g>3)g=3;
 11621  1D6A  3004               	movlw	4
 11622  1D6B  0274               	subwf	fvr_set_gain@g,w
 11623  1D6C  1C03               	skipc
 11624  1D6D  2D72               	goto	l3512
 11625  1D6E  3003               	movlw	3
 11626  1D6F  00F2               	movwf	??_fvr_set_gain
 11627  1D70  0872               	movf	??_fvr_set_gain,w
 11628  1D71  00F4               	movwf	fvr_set_gain@g
 11629  1D72                     l3512:	
 11630                           
 11631                           ;sample.c: 138: t8|=g;
 11632  1D72  0874               	movf	fvr_set_gain@g,w
 11633  1D73  00F2               	movwf	??_fvr_set_gain
 11634  1D74  0872               	movf	??_fvr_set_gain,w
 11635  1D75  04F3               	iorwf	fvr_set_gain@t8,f
 11636                           
 11637                           ;sample.c: 139: FVRCON = t8;
 11638  1D76  0873               	movf	fvr_set_gain@t8,w
 11639  1D77  0022               	movlb	2	; select bank2
 11640  1D78  0097               	movwf	23	;volatile
 11641  1D79                     l603:	
 11642                           ;sample.c: 140: while(!(FVRCONbits.FVRRDY));
 11643                           
 11644  1D79  1B17               	btfsc	23,6	;volatile
 11645  1D7A  0008               	return
 11646  1D7B  2D79               	goto	l603
 11647  1D7C                     __end_of_fvr_set_gain:	
 11648                           
 11649                           	psect	text37
 11650  1D51                     __ptext37:	
 11651 ;; *************** function _adc_init *****************
 11652 ;; Defined at:
 11653 ;;		line 143 in file "src/api/sample.c"
 11654 ;; Parameters:    Size  Location     Type
 11655 ;;  ch              1    wreg     enum E4992
 11656 ;; Auto vars:     Size  Location     Type
 11657 ;;  ch              1    3[COMMON] enum E4992
 11658 ;; Return value:  Size  Location     Type
 11659 ;;                  1    wreg      void 
 11660 ;; Registers used:
 11661 ;;		wreg, status,2, status,0
 11662 ;; Tracked objects:
 11663 ;;		On entry : 0/0
 11664 ;;		On exit  : 0/0
 11665 ;;		Unchanged: 0/0
 11666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11668 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11669 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11670 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11671 ;;Total ram usage:        2 bytes
 11672 ;; Hardware stack levels used:    1
 11673 ;; Hardware stack levels required when called:    1
 11674 ;; This function calls:
 11675 ;;		Nothing
 11676 ;; This function is called by:
 11677 ;;		_adc_sample
 11678 ;; This function uses a non-reentrant model
 11679 ;;
 11680                           
 11681                           
 11682                           ;psect for function _adc_init
 11683  1D51                     _adc_init:	
 11684                           
 11685                           ;incstack = 0
 11686                           ; Regs used in _adc_init: [wreg+status,2+status,0]
 11687                           ;adc_init@ch stored from wreg
 11688  1D51  00F3               	movwf	adc_init@ch
 11689  1D52                     l609:	
 11690                           ;sample.c: 145: while (ADCON0bits.GO_nDONE);
 11691                           
 11692  1D52  0021               	movlb	1	; select bank1
 11693  1D53  189D               	btfsc	29,1	;volatile
 11694  1D54  2D52               	goto	l609
 11695                           
 11696                           ;sample.c: 146: ADCON0bits.CHS = ch;
 11697  1D55  0873               	movf	adc_init@ch,w
 11698  1D56  00F2               	movwf	??_adc_init
 11699  1D57  0DF2               	rlf	??_adc_init,f
 11700  1D58  0DF2               	rlf	??_adc_init,f
 11701  1D59  081D               	movf	29,w	;volatile
 11702  1D5A  0672               	xorwf	??_adc_init,w
 11703  1D5B  3983               	andlw	-125
 11704  1D5C  0672               	xorwf	??_adc_init,w
 11705  1D5D  009D               	movwf	29	;volatile
 11706                           
 11707                           ;sample.c: 147: ADCON0bits.ADON = 1;
 11708  1D5E  141D               	bsf	29,0	;volatile
 11709                           
 11710                           ;sample.c: 148: ADCON1 = 0x63;
 11711  1D5F  3063               	movlw	99
 11712  1D60  009E               	movwf	30	;volatile
 11713                           
 11714                           ;sample.c: 149: ADCON2 = 0x00;
 11715  1D61  019F               	clrf	31	;volatile
 11716                           
 11717                           ;sample.c: 150: ADRESL = 0x00;
 11718  1D62  019B               	clrf	27	;volatile
 11719                           
 11720                           ;sample.c: 151: ADRESH = 0x00;
 11721  1D63  019C               	clrf	28	;volatile
 11722  1D64  0008               	return
 11723  1D65                     __end_of_adc_init:	
 11724                           
 11725                           	psect	text38
 11726  1DE0                     __ptext38:	
 11727 ;; *************** function _SYSTEM_Initialize *****************
 11728 ;; Defined at:
 11729 ;;		line 70 in file "mcc_generated_files/mcc.c"
 11730 ;; Parameters:    Size  Location     Type
 11731 ;;		None
 11732 ;; Auto vars:     Size  Location     Type
 11733 ;;		None
 11734 ;; Return value:  Size  Location     Type
 11735 ;;                  1    wreg      void 
 11736 ;; Registers used:
 11737 ;;		wreg, status,2, status,0, pclath, cstack
 11738 ;; Tracked objects:
 11739 ;;		On entry : 0/0
 11740 ;;		On exit  : 0/0
 11741 ;;		Unchanged: 0/0
 11742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11747 ;;Total ram usage:        0 bytes
 11748 ;; Hardware stack levels used:    1
 11749 ;; Hardware stack levels required when called:    3
 11750 ;; This function calls:
 11751 ;;		_ADC1_Initialize
 11752 ;;		_EUSART_Initialize
 11753 ;;		_FVR_Initialize
 11754 ;;		_OSCILLATOR_Initialize
 11755 ;;		_PIN_MANAGER_Initialize
 11756 ;;		_PWM1_Initialize
 11757 ;;		_PWM2_Initialize
 11758 ;;		_TMR2_Initialize
 11759 ;;		_WDT_Initialize
 11760 ;; This function is called by:
 11761 ;;		_main
 11762 ;; This function uses a non-reentrant model
 11763 ;;
 11764                           
 11765                           
 11766                           ;psect for function _SYSTEM_Initialize
 11767  1DE0                     _SYSTEM_Initialize:	
 11768                           
 11769                           ;mcc.c: 73: PIN_MANAGER_Initialize();
 11770                           
 11771                           ;incstack = 0
 11772                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11773  1DE0  3191  2110  319D   	fcall	_PIN_MANAGER_Initialize
 11774                           
 11775                           ;mcc.c: 74: OSCILLATOR_Initialize();
 11776  1DE3  318F  27FF  319D   	fcall	_OSCILLATOR_Initialize
 11777                           
 11778                           ;mcc.c: 75: WDT_Initialize();
 11779  1DE6  319C  24F0  319D   	fcall	_WDT_Initialize
 11780                           
 11781                           ;mcc.c: 76: FVR_Initialize();
 11782  1DE9  319C  24EC  319D   	fcall	_FVR_Initialize
 11783                           
 11784                           ;mcc.c: 77: PWM1_Initialize();
 11785  1DEC  319D  257C  319D   	fcall	_PWM1_Initialize
 11786                           
 11787                           ;mcc.c: 78: PWM2_Initialize();
 11788  1DEF  319D  2595  319D   	fcall	_PWM2_Initialize
 11789                           
 11790                           ;mcc.c: 79: ADC1_Initialize();
 11791  1DF2  319D  250A  319D   	fcall	_ADC1_Initialize
 11792                           
 11793                           ;mcc.c: 80: TMR2_Initialize();
 11794  1DF5  319D  253E  319D   	fcall	_TMR2_Initialize
 11795                           
 11796                           ;mcc.c: 81: EUSART_Initialize();
 11797  1DF8  319D  252B         	fcall	_EUSART_Initialize
 11798  1DFA  0008               	return
 11799  1DFB                     __end_of_SYSTEM_Initialize:	
 11800                           
 11801                           	psect	text39
 11802  1CF0                     __ptext39:	
 11803 ;; *************** function _WDT_Initialize *****************
 11804 ;; Defined at:
 11805 ;;		line 94 in file "mcc_generated_files/mcc.c"
 11806 ;; Parameters:    Size  Location     Type
 11807 ;;		None
 11808 ;; Auto vars:     Size  Location     Type
 11809 ;;		None
 11810 ;; Return value:  Size  Location     Type
 11811 ;;                  1    wreg      void 
 11812 ;; Registers used:
 11813 ;;		wreg
 11814 ;; Tracked objects:
 11815 ;;		On entry : 0/0
 11816 ;;		On exit  : 0/0
 11817 ;;		Unchanged: 0/0
 11818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11823 ;;Total ram usage:        0 bytes
 11824 ;; Hardware stack levels used:    1
 11825 ;; Hardware stack levels required when called:    1
 11826 ;; This function calls:
 11827 ;;		Nothing
 11828 ;; This function is called by:
 11829 ;;		_SYSTEM_Initialize
 11830 ;; This function uses a non-reentrant model
 11831 ;;
 11832                           
 11833                           
 11834                           ;psect for function _WDT_Initialize
 11835  1CF0                     _WDT_Initialize:	
 11836                           
 11837                           ;mcc.c: 97: WDTCON = 0x16;
 11838                           
 11839                           ;incstack = 0
 11840                           ; Regs used in _WDT_Initialize: [wreg]
 11841  1CF0  3016               	movlw	22
 11842  1CF1  0021               	movlb	1	; select bank1
 11843  1CF2  0097               	movwf	23	;volatile
 11844  1CF3  0008               	return
 11845  1CF4                     __end_of_WDT_Initialize:	
 11846                           
 11847                           	psect	text40
 11848  1D3E                     __ptext40:	
 11849 ;; *************** function _TMR2_Initialize *****************
 11850 ;; Defined at:
 11851 ;;		line 63 in file "mcc_generated_files/tmr2.c"
 11852 ;; Parameters:    Size  Location     Type
 11853 ;;		None
 11854 ;; Auto vars:     Size  Location     Type
 11855 ;;		None
 11856 ;; Return value:  Size  Location     Type
 11857 ;;                  1    wreg      void 
 11858 ;; Registers used:
 11859 ;;		wreg, status,2, status,0, pclath, cstack
 11860 ;; Tracked objects:
 11861 ;;		On entry : 0/0
 11862 ;;		On exit  : 0/0
 11863 ;;		Unchanged: 0/0
 11864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11869 ;;Total ram usage:        0 bytes
 11870 ;; Hardware stack levels used:    1
 11871 ;; Hardware stack levels required when called:    2
 11872 ;; This function calls:
 11873 ;;		_TMR2_SetInterruptHandler
 11874 ;;		_TMR2_StartTimer
 11875 ;; This function is called by:
 11876 ;;		_SYSTEM_Initialize
 11877 ;; This function uses a non-reentrant model
 11878 ;;
 11879                           
 11880                           
 11881                           ;psect for function _TMR2_Initialize
 11882  1D3E                     _TMR2_Initialize:	
 11883                           
 11884                           ;tmr2.c: 68: T2CON = 0x4B;
 11885                           
 11886                           ;incstack = 0
 11887                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11888  1D3E  304B               	movlw	75
 11889  1D3F  0020               	movlb	0	; select bank0
 11890  1D40  009C               	movwf	28	;volatile
 11891                           
 11892                           ;tmr2.c: 71: PR2 = 0x7C;
 11893  1D41  307C               	movlw	124
 11894  1D42  009B               	movwf	27	;volatile
 11895                           
 11896                           ;tmr2.c: 74: TMR2 = 0x00;
 11897  1D43  019A               	clrf	26	;volatile
 11898                           
 11899                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
 11900  1D44  1091               	bcf	17,1	;volatile
 11901                           
 11902                           ;tmr2.c: 80: PIE1bits.TMR2IE = 1;
 11903  1D45  0021               	movlb	1	; select bank1
 11904  1D46  1491               	bsf	17,1	;volatile
 11905                           
 11906                           ;tmr2.c: 83: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
 11907  1D47  3000               	movlw	0
 11908  1D48  00F2               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 11909  1D49  3000               	movlw	0
 11910  1D4A  00F3               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 11911  1D4B  319C  24FC  319D   	fcall	_TMR2_SetInterruptHandler
 11912                           
 11913                           ;tmr2.c: 86: TMR2_StartTimer();
 11914  1D4E  319C  24E9         	fcall	_TMR2_StartTimer
 11915  1D50  0008               	return
 11916  1D51                     __end_of_TMR2_Initialize:	
 11917                           
 11918                           	psect	text41
 11919  1CE9                     __ptext41:	
 11920 ;; *************** function _TMR2_StartTimer *****************
 11921 ;; Defined at:
 11922 ;;		line 89 in file "mcc_generated_files/tmr2.c"
 11923 ;; Parameters:    Size  Location     Type
 11924 ;;		None
 11925 ;; Auto vars:     Size  Location     Type
 11926 ;;		None
 11927 ;; Return value:  Size  Location     Type
 11928 ;;                  1    wreg      void 
 11929 ;; Registers used:
 11930 ;;		None
 11931 ;; Tracked objects:
 11932 ;;		On entry : 0/0
 11933 ;;		On exit  : 0/0
 11934 ;;		Unchanged: 0/0
 11935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11940 ;;Total ram usage:        0 bytes
 11941 ;; Hardware stack levels used:    1
 11942 ;; Hardware stack levels required when called:    1
 11943 ;; This function calls:
 11944 ;;		Nothing
 11945 ;; This function is called by:
 11946 ;;		_TMR2_Initialize
 11947 ;; This function uses a non-reentrant model
 11948 ;;
 11949                           
 11950                           
 11951                           ;psect for function _TMR2_StartTimer
 11952  1CE9                     _TMR2_StartTimer:	
 11953                           
 11954                           ;tmr2.c: 92: T2CONbits.TMR2ON = 1;
 11955                           
 11956                           ;incstack = 0
 11957                           ; Regs used in _TMR2_StartTimer: []
 11958  1CE9  0020               	movlb	0	; select bank0
 11959  1CEA  151C               	bsf	28,2	;volatile
 11960  1CEB  0008               	return
 11961  1CEC                     __end_of_TMR2_StartTimer:	
 11962                           
 11963                           	psect	text42
 11964  1CFC                     __ptext42:	
 11965 ;; *************** function _TMR2_SetInterruptHandler *****************
 11966 ;; Defined at:
 11967 ;;		line 142 in file "mcc_generated_files/tmr2.c"
 11968 ;; Parameters:    Size  Location     Type
 11969 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
 11970 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 11971 ;; Auto vars:     Size  Location     Type
 11972 ;;		None
 11973 ;; Return value:  Size  Location     Type
 11974 ;;                  1    wreg      void 
 11975 ;; Registers used:
 11976 ;;		wreg
 11977 ;; Tracked objects:
 11978 ;;		On entry : 0/0
 11979 ;;		On exit  : 0/0
 11980 ;;		Unchanged: 0/0
 11981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11982 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11985 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11986 ;;Total ram usage:        2 bytes
 11987 ;; Hardware stack levels used:    1
 11988 ;; Hardware stack levels required when called:    1
 11989 ;; This function calls:
 11990 ;;		Nothing
 11991 ;; This function is called by:
 11992 ;;		_TMR2_Initialize
 11993 ;; This function uses a non-reentrant model
 11994 ;;
 11995                           
 11996                           
 11997                           ;psect for function _TMR2_SetInterruptHandler
 11998  1CFC                     _TMR2_SetInterruptHandler:	
 11999                           
 12000                           ;tmr2.c: 143: TMR2_InterruptHandler = InterruptHandler;
 12001                           
 12002                           ;incstack = 0
 12003                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 12004  1CFC  0873               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 12005  1CFD  0020               	movlb	0	; select bank0
 12006  1CFE  00E5               	movwf	_TMR2_InterruptHandler+1
 12007  1CFF  0872               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 12008  1D00  00E4               	movwf	_TMR2_InterruptHandler
 12009  1D01  0008               	return
 12010  1D02                     __end_of_TMR2_SetInterruptHandler:	
 12011                           
 12012                           	psect	text43
 12013  1D95                     __ptext43:	
 12014 ;; *************** function _PWM2_Initialize *****************
 12015 ;; Defined at:
 12016 ;;		line 58 in file "mcc_generated_files/pwm2.c"
 12017 ;; Parameters:    Size  Location     Type
 12018 ;;		None
 12019 ;; Auto vars:     Size  Location     Type
 12020 ;;		None
 12021 ;; Return value:  Size  Location     Type
 12022 ;;                  1    wreg      void 
 12023 ;; Registers used:
 12024 ;;		wreg, status,2
 12025 ;; Tracked objects:
 12026 ;;		On entry : 0/0
 12027 ;;		On exit  : 0/0
 12028 ;;		Unchanged: 0/0
 12029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12034 ;;Total ram usage:        0 bytes
 12035 ;; Hardware stack levels used:    1
 12036 ;; Hardware stack levels required when called:    1
 12037 ;; This function calls:
 12038 ;;		Nothing
 12039 ;; This function is called by:
 12040 ;;		_SYSTEM_Initialize
 12041 ;; This function uses a non-reentrant model
 12042 ;;
 12043                           
 12044                           
 12045                           ;psect for function _PWM2_Initialize
 12046  1D95                     _PWM2_Initialize:	
 12047                           
 12048                           ;pwm2.c: 63: PWM2INTE = 0x01;
 12049                           
 12050                           ;incstack = 0
 12051                           ; Regs used in _PWM2_Initialize: [wreg+status,2]
 12052  1D95  3001               	movlw	1
 12053  1D96  003B               	movlb	27	; select bank27
 12054  1D97  00AC               	movwf	44	;volatile
 12055                           
 12056                           ;pwm2.c: 66: PWM2INTF = 0x00;
 12057  1D98  01AD               	clrf	45	;volatile
 12058                           
 12059                           ;pwm2.c: 69: PWM2CLKCON = 0x00;
 12060  1D99  01AE               	clrf	46	;volatile
 12061                           
 12062                           ;pwm2.c: 72: PWM2LDCON = 0x00;
 12063  1D9A  01AF               	clrf	47	;volatile
 12064                           
 12065                           ;pwm2.c: 75: PWM2OFCON = 0x00;
 12066  1D9B  01B0               	clrf	48	;volatile
 12067                           
 12068                           ;pwm2.c: 78: PWM2PHH = 0x00;
 12069  1D9C  01A2               	clrf	34	;volatile
 12070                           
 12071                           ;pwm2.c: 81: PWM2PHL = 0x02;
 12072  1D9D  3002               	movlw	2
 12073  1D9E  00A1               	movwf	33	;volatile
 12074                           
 12075                           ;pwm2.c: 84: PWM2DCH = 0x00;
 12076  1D9F  01A4               	clrf	36	;volatile
 12077                           
 12078                           ;pwm2.c: 87: PWM2DCL = 0xA0;
 12079  1DA0  30A0               	movlw	160
 12080  1DA1  00A3               	movwf	35	;volatile
 12081                           
 12082                           ;pwm2.c: 90: PWM2PRH = 0x06;
 12083  1DA2  3006               	movlw	6
 12084  1DA3  00A6               	movwf	38	;volatile
 12085                           
 12086                           ;pwm2.c: 93: PWM2PRL = 0x3F;
 12087  1DA4  303F               	movlw	63
 12088  1DA5  00A5               	movwf	37	;volatile
 12089                           
 12090                           ;pwm2.c: 96: PWM2OFH = 0x00;
 12091  1DA6  01A8               	clrf	40	;volatile
 12092                           
 12093                           ;pwm2.c: 99: PWM2OFL = 0x01;
 12094  1DA7  3001               	movlw	1
 12095  1DA8  00A7               	movwf	39	;volatile
 12096                           
 12097                           ;pwm2.c: 102: PWM2TMRH = 0x00;
 12098  1DA9  01AA               	clrf	42	;volatile
 12099                           
 12100                           ;pwm2.c: 105: PWM2TMRL = 0x00;
 12101  1DAA  01A9               	clrf	41	;volatile
 12102                           
 12103                           ;pwm2.c: 108: PWM2CON = 0x90;
 12104  1DAB  3090               	movlw	144
 12105  1DAC  00AB               	movwf	43	;volatile
 12106  1DAD  0008               	return
 12107  1DAE                     __end_of_PWM2_Initialize:	
 12108                           
 12109                           	psect	text44
 12110  1D7C                     __ptext44:	
 12111 ;; *************** function _PWM1_Initialize *****************
 12112 ;; Defined at:
 12113 ;;		line 58 in file "mcc_generated_files/pwm1.c"
 12114 ;; Parameters:    Size  Location     Type
 12115 ;;		None
 12116 ;; Auto vars:     Size  Location     Type
 12117 ;;		None
 12118 ;; Return value:  Size  Location     Type
 12119 ;;                  1    wreg      void 
 12120 ;; Registers used:
 12121 ;;		wreg, status,2
 12122 ;; Tracked objects:
 12123 ;;		On entry : 0/0
 12124 ;;		On exit  : 0/0
 12125 ;;		Unchanged: 0/0
 12126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12131 ;;Total ram usage:        0 bytes
 12132 ;; Hardware stack levels used:    1
 12133 ;; Hardware stack levels required when called:    1
 12134 ;; This function calls:
 12135 ;;		Nothing
 12136 ;; This function is called by:
 12137 ;;		_SYSTEM_Initialize
 12138 ;; This function uses a non-reentrant model
 12139 ;;
 12140                           
 12141                           
 12142                           ;psect for function _PWM1_Initialize
 12143  1D7C                     _PWM1_Initialize:	
 12144                           
 12145                           ;pwm1.c: 63: PWM1INTE = 0x01;
 12146                           
 12147                           ;incstack = 0
 12148                           ; Regs used in _PWM1_Initialize: [wreg+status,2]
 12149  1D7C  3001               	movlw	1
 12150  1D7D  003B               	movlb	27	; select bank27
 12151  1D7E  009C               	movwf	28	;volatile
 12152                           
 12153                           ;pwm1.c: 66: PWM1INTF = 0x00;
 12154  1D7F  019D               	clrf	29	;volatile
 12155                           
 12156                           ;pwm1.c: 69: PWM1CLKCON = 0x00;
 12157  1D80  019E               	clrf	30	;volatile
 12158                           
 12159                           ;pwm1.c: 72: PWM1LDCON = 0x00;
 12160  1D81  019F               	clrf	31	;volatile
 12161                           
 12162                           ;pwm1.c: 75: PWM1OFCON = 0x00;
 12163  1D82  01A0               	clrf	32	;volatile
 12164                           
 12165                           ;pwm1.c: 78: PWM1PHH = 0x00;
 12166  1D83  0192               	clrf	18	;volatile
 12167                           
 12168                           ;pwm1.c: 81: PWM1PHL = 0x02;
 12169  1D84  3002               	movlw	2
 12170  1D85  0091               	movwf	17	;volatile
 12171                           
 12172                           ;pwm1.c: 84: PWM1DCH = 0x00;
 12173  1D86  0194               	clrf	20	;volatile
 12174                           
 12175                           ;pwm1.c: 87: PWM1DCL = 0xa0;
 12176  1D87  30A0               	movlw	160
 12177  1D88  0093               	movwf	19	;volatile
 12178                           
 12179                           ;pwm1.c: 90: PWM1PRH = 0x06;
 12180  1D89  3006               	movlw	6
 12181  1D8A  0096               	movwf	22	;volatile
 12182                           
 12183                           ;pwm1.c: 93: PWM1PRL = 0x3F;
 12184  1D8B  303F               	movlw	63
 12185  1D8C  0095               	movwf	21	;volatile
 12186                           
 12187                           ;pwm1.c: 96: PWM1OFH = 0x00;
 12188  1D8D  0198               	clrf	24	;volatile
 12189                           
 12190                           ;pwm1.c: 99: PWM1OFL = 0x01;
 12191  1D8E  3001               	movlw	1
 12192  1D8F  0097               	movwf	23	;volatile
 12193                           
 12194                           ;pwm1.c: 102: PWM1TMRH = 0x00;
 12195  1D90  019A               	clrf	26	;volatile
 12196                           
 12197                           ;pwm1.c: 105: PWM1TMRL = 0x00;
 12198  1D91  0199               	clrf	25	;volatile
 12199                           
 12200                           ;pwm1.c: 108: PWM1CON = 0x90;
 12201  1D92  3090               	movlw	144
 12202  1D93  009B               	movwf	27	;volatile
 12203  1D94  0008               	return
 12204  1D95                     __end_of_PWM1_Initialize:	
 12205                           
 12206                           	psect	text45
 12207  1110                     __ptext45:	
 12208 ;; *************** function _PIN_MANAGER_Initialize *****************
 12209 ;; Defined at:
 12210 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 12211 ;; Parameters:    Size  Location     Type
 12212 ;;		None
 12213 ;; Auto vars:     Size  Location     Type
 12214 ;;  state           1    2[COMMON] unsigned char 
 12215 ;; Return value:  Size  Location     Type
 12216 ;;                  1    wreg      void 
 12217 ;; Registers used:
 12218 ;;		wreg, status,2, status,0
 12219 ;; Tracked objects:
 12220 ;;		On entry : 0/0
 12221 ;;		On exit  : 0/0
 12222 ;;		Unchanged: 0/0
 12223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12225 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12227 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12228 ;;Total ram usage:        1 bytes
 12229 ;; Hardware stack levels used:    1
 12230 ;; Hardware stack levels required when called:    1
 12231 ;; This function calls:
 12232 ;;		Nothing
 12233 ;; This function is called by:
 12234 ;;		_SYSTEM_Initialize
 12235 ;; This function uses a non-reentrant model
 12236 ;;
 12237                           
 12238                           
 12239                           ;psect for function _PIN_MANAGER_Initialize
 12240  1110                     _PIN_MANAGER_Initialize:	
 12241                           
 12242                           ;pin_manager.c: 57: LATA = 0x00;
 12243                           
 12244                           ;incstack = 0
 12245                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 12246  1110  0022               	movlb	2	; select bank2
 12247  1111  018C               	clrf	12	;volatile
 12248                           
 12249                           ;pin_manager.c: 58: LATC = 0x00;
 12250  1112  018E               	clrf	14	;volatile
 12251                           
 12252                           ;pin_manager.c: 63: TRISA = 0x0F;
 12253  1113  300F               	movlw	15
 12254  1114  0021               	movlb	1	; select bank1
 12255  1115  008C               	movwf	12	;volatile
 12256                           
 12257                           ;pin_manager.c: 64: TRISC = 0x1f;
 12258  1116  301F               	movlw	31
 12259  1117  008E               	movwf	14	;volatile
 12260                           
 12261                           ;pin_manager.c: 69: ANSELC = 0x0F;
 12262  1118  300F               	movlw	15
 12263  1119  0023               	movlb	3	; select bank3
 12264  111A  008E               	movwf	14	;volatile
 12265                           
 12266                           ;pin_manager.c: 70: ANSELA = 0x17;
 12267  111B  3017               	movlw	23
 12268  111C  008C               	movwf	12	;volatile
 12269                           
 12270                           ;pin_manager.c: 75: WPUA = 0x3B;
 12271  111D  303B               	movlw	59
 12272  111E  0024               	movlb	4	; select bank4
 12273  111F  008C               	movwf	12	;volatile
 12274                           
 12275                           ;pin_manager.c: 76: WPUC = 0x30;
 12276  1120  3030               	movlw	48
 12277  1121  008E               	movwf	14	;volatile
 12278                           
 12279                           ;pin_manager.c: 77: OPTION_REGbits.nWPUEN = 0;
 12280  1122  0021               	movlb	1	; select bank1
 12281  1123  1395               	bcf	21,7	;volatile
 12282                           
 12283                           ;pin_manager.c: 82: ODCONA = 0x00;
 12284  1124  0025               	movlb	5	; select bank5
 12285  1125  018C               	clrf	12	;volatile
 12286                           
 12287                           ;pin_manager.c: 83: ODCONC = 0x00;
 12288  1126  018E               	clrf	14	;volatile
 12289                           
 12290                           ;pin_manager.c: 85: bool state = (unsigned char)GIE;
 12291  1127  3000               	movlw	0
 12292  1128  1B8B               	btfsc	11,7	;volatile
 12293  1129  3001               	movlw	1
 12294  112A  00F2               	movwf	PIN_MANAGER_Initialize@state
 12295                           
 12296                           ;pin_manager.c: 86: GIE = 0;
 12297  112B  138B               	bcf	11,7	;volatile
 12298                           
 12299                           ;pin_manager.c: 87: PPSLOCK = 0x55;
 12300  112C  3055               	movlw	85
 12301  112D  003C               	movlb	28	; select bank28
 12302  112E  008F               	movwf	15	;volatile
 12303                           
 12304                           ;pin_manager.c: 88: PPSLOCK = 0xAA;
 12305  112F  30AA               	movlw	170
 12306  1130  008F               	movwf	15	;volatile
 12307                           
 12308                           ;pin_manager.c: 89: PPSLOCKbits.PPSLOCKED = 0x00;
 12309  1131  100F               	bcf	15,0	;volatile
 12310                           
 12311                           ;pin_manager.c: 91: RXPPSbits.RXPPS = 0x14;
 12312  1132  0815               	movf	21,w	;volatile
 12313  1133  39E0               	andlw	-32
 12314  1134  3814               	iorlw	20
 12315  1135  0095               	movwf	21	;volatile
 12316                           
 12317                           ;pin_manager.c: 92: RA4PPSbits.RA4PPS = 0x04;
 12318  1136  003D               	movlb	29	; select bank29
 12319  1137  0814               	movf	20,w	;volatile
 12320  1138  39F0               	andlw	-16
 12321  1139  3804               	iorlw	4
 12322  113A  0094               	movwf	20	;volatile
 12323                           
 12324                           ;pin_manager.c: 93: RA5PPSbits.RA5PPS = 0x03;
 12325  113B  0815               	movf	21,w	;volatile
 12326  113C  39F0               	andlw	-16
 12327  113D  3803               	iorlw	3
 12328  113E  0095               	movwf	21	;volatile
 12329                           
 12330                           ;pin_manager.c: 94: RC5PPSbits.RC5PPS = 0x09;
 12331  113F  0825               	movf	37,w	;volatile
 12332  1140  39F0               	andlw	-16
 12333  1141  3809               	iorlw	9
 12334  1142  00A5               	movwf	37	;volatile
 12335                           
 12336                           ;pin_manager.c: 96: PPSLOCK = 0x55;
 12337  1143  3055               	movlw	85
 12338  1144  003C               	movlb	28	; select bank28
 12339  1145  008F               	movwf	15	;volatile
 12340                           
 12341                           ;pin_manager.c: 97: PPSLOCK = 0xAA;
 12342  1146  30AA               	movlw	170
 12343  1147  008F               	movwf	15	;volatile
 12344                           
 12345                           ;pin_manager.c: 98: PPSLOCKbits.PPSLOCKED = 0x01;
 12346  1148  140F               	bsf	15,0	;volatile
 12347                           
 12348                           ;pin_manager.c: 100: GIE = state;
 12349  1149  1C72               	btfss	PIN_MANAGER_Initialize@state,0
 12350  114A  294D               	goto	u2270
 12351  114B  178B               	bsf	11,7	;volatile
 12352  114C  0008               	return
 12353  114D                     u2270:	
 12354  114D  138B               	bcf	11,7	;volatile
 12355  114E  0008               	return
 12356  114F                     __end_of_PIN_MANAGER_Initialize:	
 12357                           
 12358                           	psect	text46
 12359  0FFF                     __ptext46:	
 12360 ;; *************** function _OSCILLATOR_Initialize *****************
 12361 ;; Defined at:
 12362 ;;		line 84 in file "mcc_generated_files/mcc.c"
 12363 ;; Parameters:    Size  Location     Type
 12364 ;;		None
 12365 ;; Auto vars:     Size  Location     Type
 12366 ;;		None
 12367 ;; Return value:  Size  Location     Type
 12368 ;;                  1    wreg      void 
 12369 ;; Registers used:
 12370 ;;		None
 12371 ;; Tracked objects:
 12372 ;;		On entry : 0/0
 12373 ;;		On exit  : 0/0
 12374 ;;		Unchanged: 0/0
 12375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12380 ;;Total ram usage:        0 bytes
 12381 ;; Hardware stack levels used:    1
 12382 ;; Hardware stack levels required when called:    1
 12383 ;; This function calls:
 12384 ;;		Nothing
 12385 ;; This function is called by:
 12386 ;;		_SYSTEM_Initialize
 12387 ;; This function uses a non-reentrant model
 12388 ;;
 12389                           
 12390                           
 12391                           ;psect for function _OSCILLATOR_Initialize
 12392  0FFF                     _OSCILLATOR_Initialize:	
 12393                           
 12394                           ;incstack = 0
 12395                           ; Regs used in _OSCILLATOR_Initialize: []
 12396  0FFF  0008               	return
 12397  1000                     __end_of_OSCILLATOR_Initialize:	
 12398                           
 12399                           	psect	text47
 12400  1CEC                     __ptext47:	
 12401 ;; *************** function _FVR_Initialize *****************
 12402 ;; Defined at:
 12403 ;;		line 57 in file "mcc_generated_files/fvr.c"
 12404 ;; Parameters:    Size  Location     Type
 12405 ;;		None
 12406 ;; Auto vars:     Size  Location     Type
 12407 ;;		None
 12408 ;; Return value:  Size  Location     Type
 12409 ;;                  1    wreg      void 
 12410 ;; Registers used:
 12411 ;;		wreg
 12412 ;; Tracked objects:
 12413 ;;		On entry : 0/0
 12414 ;;		On exit  : 0/0
 12415 ;;		Unchanged: 0/0
 12416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12421 ;;Total ram usage:        0 bytes
 12422 ;; Hardware stack levels used:    1
 12423 ;; Hardware stack levels required when called:    1
 12424 ;; This function calls:
 12425 ;;		Nothing
 12426 ;; This function is called by:
 12427 ;;		_SYSTEM_Initialize
 12428 ;; This function uses a non-reentrant model
 12429 ;;
 12430                           
 12431                           
 12432                           ;psect for function _FVR_Initialize
 12433  1CEC                     _FVR_Initialize:	
 12434                           
 12435                           ;fvr.c: 60: FVRCON = 0x81;
 12436                           
 12437                           ;incstack = 0
 12438                           ; Regs used in _FVR_Initialize: [wreg]
 12439  1CEC  3081               	movlw	129
 12440  1CED  0022               	movlb	2	; select bank2
 12441  1CEE  0097               	movwf	23	;volatile
 12442  1CEF  0008               	return
 12443  1CF0                     __end_of_FVR_Initialize:	
 12444                           
 12445                           	psect	text48
 12446  1D2B                     __ptext48:	
 12447 ;; *************** function _EUSART_Initialize *****************
 12448 ;; Defined at:
 12449 ;;		line 55 in file "mcc_generated_files/eusart.c"
 12450 ;; Parameters:    Size  Location     Type
 12451 ;;		None
 12452 ;; Auto vars:     Size  Location     Type
 12453 ;;		None
 12454 ;; Return value:  Size  Location     Type
 12455 ;;                  1    wreg      void 
 12456 ;; Registers used:
 12457 ;;		wreg
 12458 ;; Tracked objects:
 12459 ;;		On entry : 0/0
 12460 ;;		On exit  : 0/0
 12461 ;;		Unchanged: 0/0
 12462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12467 ;;Total ram usage:        0 bytes
 12468 ;; Hardware stack levels used:    1
 12469 ;; Hardware stack levels required when called:    1
 12470 ;; This function calls:
 12471 ;;		Nothing
 12472 ;; This function is called by:
 12473 ;;		_SYSTEM_Initialize
 12474 ;; This function uses a non-reentrant model
 12475 ;;
 12476                           
 12477                           
 12478                           ;psect for function _EUSART_Initialize
 12479  1D2B                     _EUSART_Initialize:	
 12480                           
 12481                           ;eusart.c: 58: PIE1bits.RCIE = 0;
 12482                           
 12483                           ;incstack = 0
 12484                           ; Regs used in _EUSART_Initialize: [wreg]
 12485  1D2B  0021               	movlb	1	; select bank1
 12486  1D2C  1291               	bcf	17,5	;volatile
 12487                           
 12488                           ;eusart.c: 59: PIE1bits.TXIE = 0;
 12489  1D2D  1211               	bcf	17,4	;volatile
 12490                           
 12491                           ;eusart.c: 61: BAUDCON = 0x08;
 12492  1D2E  3008               	movlw	8
 12493  1D2F  0023               	movlb	3	; select bank3
 12494  1D30  009F               	movwf	31	;volatile
 12495                           
 12496                           ;eusart.c: 64: RCSTA = 0x90;
 12497  1D31  3090               	movlw	144
 12498  1D32  009D               	movwf	29	;volatile
 12499                           
 12500                           ;eusart.c: 67: TXSTA = 0x24;
 12501  1D33  3024               	movlw	36
 12502  1D34  009E               	movwf	30	;volatile
 12503                           
 12504                           ;eusart.c: 71: SPBRGL = 0xA0;
 12505  1D35  30A0               	movlw	160
 12506  1D36  009B               	movwf	27	;volatile
 12507                           
 12508                           ;eusart.c: 76: SPBRGH = 0x01;
 12509  1D37  3001               	movlw	1
 12510  1D38  009C               	movwf	28	;volatile
 12511                           
 12512                           ;eusart.c: 77: PIE1bits.RCIE = 1;
 12513  1D39  0021               	movlb	1	; select bank1
 12514  1D3A  1691               	bsf	17,5	;volatile
 12515                           
 12516                           ;eusart.c: 78: PIR1bits.TXIF=0;
 12517  1D3B  0020               	movlb	0	; select bank0
 12518  1D3C  1211               	bcf	17,4	;volatile
 12519  1D3D  0008               	return
 12520  1D3E                     __end_of_EUSART_Initialize:	
 12521                           
 12522                           	psect	text49
 12523  1D0A                     __ptext49:	
 12524 ;; *************** function _ADC1_Initialize *****************
 12525 ;; Defined at:
 12526 ;;		line 64 in file "mcc_generated_files/adc1.c"
 12527 ;; Parameters:    Size  Location     Type
 12528 ;;		None
 12529 ;; Auto vars:     Size  Location     Type
 12530 ;;		None
 12531 ;; Return value:  Size  Location     Type
 12532 ;;                  1    wreg      void 
 12533 ;; Registers used:
 12534 ;;		wreg, status,2
 12535 ;; Tracked objects:
 12536 ;;		On entry : 0/0
 12537 ;;		On exit  : 0/0
 12538 ;;		Unchanged: 0/0
 12539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12544 ;;Total ram usage:        0 bytes
 12545 ;; Hardware stack levels used:    1
 12546 ;; Hardware stack levels required when called:    1
 12547 ;; This function calls:
 12548 ;;		Nothing
 12549 ;; This function is called by:
 12550 ;;		_SYSTEM_Initialize
 12551 ;; This function uses a non-reentrant model
 12552 ;;
 12553                           
 12554                           
 12555                           ;psect for function _ADC1_Initialize
 12556  1D0A                     _ADC1_Initialize:	
 12557                           
 12558                           ;adc1.c: 69: ADCON0 = 0x01;
 12559                           
 12560                           ;incstack = 0
 12561                           ; Regs used in _ADC1_Initialize: [wreg+status,2]
 12562  1D0A  3001               	movlw	1
 12563  1D0B  0021               	movlb	1	; select bank1
 12564  1D0C  009D               	movwf	29	;volatile
 12565                           
 12566                           ;adc1.c: 72: ADCON1 = 0x63;
 12567  1D0D  3063               	movlw	99
 12568  1D0E  009E               	movwf	30	;volatile
 12569                           
 12570                           ;adc1.c: 75: ADCON2 = 0x00;
 12571  1D0F  019F               	clrf	31	;volatile
 12572                           
 12573                           ;adc1.c: 78: ADRESL = 0x00;
 12574  1D10  019B               	clrf	27	;volatile
 12575                           
 12576                           ;adc1.c: 81: ADRESH = 0x00;
 12577  1D11  019C               	clrf	28	;volatile
 12578  1D12  0008               	return
 12579  1D13                     __end_of_ADC1_Initialize:	
 12580                           
 12581                           	psect	intentry
 12582  0804                     __pintentry:	
 12583 ;; *************** function _INTERRUPT_InterruptManager *****************
 12584 ;; Defined at:
 12585 ;;		line 56 in file "mcc_generated_files/interrupt_manager.c"
 12586 ;; Parameters:    Size  Location     Type
 12587 ;;		None
 12588 ;; Auto vars:     Size  Location     Type
 12589 ;;		None
 12590 ;; Return value:  Size  Location     Type
 12591 ;;                  1    wreg      void 
 12592 ;; Registers used:
 12593 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12594 ;; Tracked objects:
 12595 ;;		On entry : 0/0
 12596 ;;		On exit  : 0/0
 12597 ;;		Unchanged: 0/0
 12598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12601 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12602 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12603 ;;Total ram usage:        2 bytes
 12604 ;; Hardware stack levels used:    1
 12605 ;; This function calls:
 12606 ;;		Nothing
 12607 ;; This function is called by:
 12608 ;;		Interrupt level 1
 12609 ;; This function uses a non-reentrant model
 12610 ;;
 12611                           
 12612  0804                     _INTERRUPT_InterruptManager:	
 12613                           
 12614                           ;incstack = 0
 12615  0804  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 12616                           
 12617                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0]
 12618  0805  3188               	pagesel	$
 12619  0806  0020               	movlb	0	; select bank0
 12620  0807  087F               	movf	127,w
 12621  0808  00F1               	movwf	??_INTERRUPT_InterruptManager+1
 12622                           
 12623                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bits.TM
      +                          R2IF == 1)
 12624  0809  1F0B               	btfss	11,6	;volatile
 12625  080A  2839               	goto	i1l4294
 12626  080B  0021               	movlb	1	; select bank1
 12627  080C  1C91               	btfss	17,1	;volatile
 12628  080D  2839               	goto	i1l4294
 12629  080E  0020               	movlb	0	; select bank0
 12630  080F  1C91               	btfss	17,1	;volatile
 12631  0810  2839               	goto	i1l4294
 12632                           
 12633                           ;interrupt_manager.c: 61: {
 12634                           ;interrupt_manager.c: 63: PIR1bits.TMR2IF = 0;
 12635  0811  1091               	bcf	17,1	;volatile
 12636                           
 12637                           ;interrupt_manager.c: 64: Event |= (1<<1);
 12638  0812  14EB               	bsf	_Event,1	;volatile
 12639                           
 12640                           ;interrupt_manager.c: 65: subTickerX++;
 12641  0813  3001               	movlw	1
 12642  0814  00F0               	movwf	??_INTERRUPT_InterruptManager
 12643  0815  0870               	movf	??_INTERRUPT_InterruptManager,w
 12644  0816  07FA               	addwf	_subTickerX,f
 12645                           
 12646                           ;interrupt_manager.c: 66: subTickerX_1s++;
 12647  0817  3001               	movlw	1
 12648  0818  00F0               	movwf	??_INTERRUPT_InterruptManager
 12649  0819  0870               	movf	??_INTERRUPT_InterruptManager,w
 12650  081A  07E9               	addwf	_subTickerX_1s,f
 12651                           
 12652                           ;interrupt_manager.c: 67: if(subTickerX>=5){
 12653  081B  3005               	movlw	5
 12654  081C  027A               	subwf	_subTickerX,w
 12655  081D  1C03               	skipc
 12656  081E  2821               	goto	i1l4276
 12657                           
 12658                           ;interrupt_manager.c: 68: subTickerX=0;
 12659  081F  01FA               	clrf	_subTickerX
 12660                           
 12661                           ;interrupt_manager.c: 69: Event |= (1<<2);
 12662  0820  156B               	bsf	_Event,2	;volatile
 12663  0821                     i1l4276:	
 12664                           
 12665                           ;interrupt_manager.c: 70: }
 12666                           ;interrupt_manager.c: 71: if(subTickerX_1s>=50){
 12667  0821  3032               	movlw	50
 12668  0822  0269               	subwf	_subTickerX_1s,w
 12669  0823  1C03               	skipc
 12670  0824  2827               	goto	i1l4282
 12671                           
 12672                           ;interrupt_manager.c: 72: subTickerX_1s=0;
 12673  0825  01E9               	clrf	_subTickerX_1s
 12674                           
 12675                           ;interrupt_manager.c: 73: Event |= (1<<3);
 12676  0826  15EB               	bsf	_Event,3	;volatile
 12677  0827                     i1l4282:	
 12678                           
 12679                           ;interrupt_manager.c: 74: }
 12680                           ;interrupt_manager.c: 76: if(eusartRxIdleTime_ms){
 12681  0827  087B               	movf	_eusartRxIdleTime_ms,w	;volatile
 12682  0828  1903               	btfsc	3,2
 12683  0829  2834               	goto	i1l4292
 12684                           
 12685                           ;interrupt_manager.c: 77: eusartRxIdleTime_ms++;
 12686  082A  3001               	movlw	1
 12687  082B  00F0               	movwf	??_INTERRUPT_InterruptManager
 12688  082C  0870               	movf	??_INTERRUPT_InterruptManager,w
 12689  082D  07FB               	addwf	_eusartRxIdleTime_ms,f	;volatile
 12690                           
 12691                           ;interrupt_manager.c: 78: if(eusartRxIdleTime_ms>5){
 12692  082E  3006               	movlw	6
 12693  082F  027B               	subwf	_eusartRxIdleTime_ms,w	;volatile
 12694  0830  1C03               	skipc
 12695  0831  2834               	goto	i1l4292
 12696                           
 12697                           ;interrupt_manager.c: 79: Event|=(1<<0);
 12698  0832  146B               	bsf	_Event,0	;volatile
 12699                           
 12700                           ;interrupt_manager.c: 80: eusartRxIdleTime_ms=0;
 12701  0833  01FB               	clrf	_eusartRxIdleTime_ms	;volatile
 12702  0834                     i1l4292:	
 12703                           
 12704                           ;interrupt_manager.c: 81: }
 12705                           ;interrupt_manager.c: 82: }
 12706                           ;interrupt_manager.c: 83: globalTicker++;
 12707  0834  3001               	movlw	1
 12708  0835  0021               	movlb	1	; select bank1
 12709  0836  07CE               	addwf	_globalTicker^(0+128),f	;volatile
 12710  0837  3000               	movlw	0
 12711  0838  3DCF               	addwfc	(_globalTicker+1)^(0+128),f	;volatile
 12712  0839                     i1l4294:	
 12713                           
 12714                           ;interrupt_manager.c: 84: }
 12715                           ;interrupt_manager.c: 85: if(INTCONbits.PEIE == 1 && PIE1bits.RCIE == 1 && PIR1bits.RCIF
      +                           == 1)
 12716  0839  1F0B               	btfss	11,6	;volatile
 12717  083A  2861               	goto	i1l4312
 12718  083B  0021               	movlb	1	; select bank1
 12719  083C  1E91               	btfss	17,5	;volatile
 12720  083D  2861               	goto	i1l4312
 12721  083E  0020               	movlb	0	; select bank0
 12722  083F  1E91               	btfss	17,5	;volatile
 12723  0840  2861               	goto	i1l4312
 12724                           
 12725                           ;interrupt_manager.c: 86: {
 12726                           ;interrupt_manager.c: 88: PIR1bits.RCIF=0;
 12727  0841  1291               	bcf	17,5	;volatile
 12728                           
 12729                           ;interrupt_manager.c: 89: if(1 == RCSTAbits.OERR){
 12730  0842  0023               	movlb	3	; select bank3
 12731  0843  1C9D               	btfss	29,1	;volatile
 12732  0844  2847               	goto	i1l4304
 12733                           
 12734                           ;interrupt_manager.c: 90: RCSTAbits.CREN = 0;
 12735  0845  121D               	bcf	29,4	;volatile
 12736                           
 12737                           ;interrupt_manager.c: 91: RCSTAbits.CREN = 1;
 12738  0846  161D               	bsf	29,4	;volatile
 12739  0847                     i1l4304:	
 12740                           
 12741                           ;interrupt_manager.c: 92: }
 12742                           ;interrupt_manager.c: 93: rxtemp=RCREG;
 12743  0847  0819               	movf	25,w	;volatile
 12744  0848  00F0               	movwf	??_INTERRUPT_InterruptManager
 12745  0849  0870               	movf	??_INTERRUPT_InterruptManager,w
 12746  084A  0020               	movlb	0	; select bank0
 12747  084B  00E8               	movwf	_rxtemp
 12748                           
 12749                           ;interrupt_manager.c: 94: if(eusartRxCount<32){
 12750  084C  3020               	movlw	32
 12751  084D  026A               	subwf	_eusartRxCount,w	;volatile
 12752  084E  1803               	skipnc
 12753  084F  285D               	goto	i1l4310
 12754                           
 12755                           ;interrupt_manager.c: 95: eusartRxBuffer[eusartRxCount]=rxtemp;
 12756  0850  0868               	movf	_rxtemp,w
 12757  0851  00F0               	movwf	??_INTERRUPT_InterruptManager
 12758  0852  086A               	movf	_eusartRxCount,w
 12759  0853  3E40               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 12760  0854  0086               	movwf	6
 12761  0855  3001               	movlw	1	; select bank2/3
 12762  0856  0087               	movwf	7
 12763  0857  0870               	movf	??_INTERRUPT_InterruptManager,w
 12764  0858  0081               	movwf	1
 12765                           
 12766                           ;interrupt_manager.c: 96: eusartRxCount++;
 12767  0859  3001               	movlw	1
 12768  085A  00F0               	movwf	??_INTERRUPT_InterruptManager
 12769  085B  0870               	movf	??_INTERRUPT_InterruptManager,w
 12770  085C  07EA               	addwf	_eusartRxCount,f	;volatile
 12771  085D                     i1l4310:	
 12772                           
 12773                           ;interrupt_manager.c: 98: }
 12774                           ;interrupt_manager.c: 99: eusartRxIdleTime_ms=1;
 12775  085D  3001               	movlw	1
 12776  085E  00F0               	movwf	??_INTERRUPT_InterruptManager
 12777  085F  0870               	movf	??_INTERRUPT_InterruptManager,w
 12778  0860  00FB               	movwf	_eusartRxIdleTime_ms	;volatile
 12779  0861                     i1l4312:	
 12780                           
 12781                           ;interrupt_manager.c: 100: }
 12782                           ;interrupt_manager.c: 102: if( PIR1bits.TXIF == 1)
 12783  0861  0020               	movlb	0	; select bank0
 12784  0862  1A11               	btfsc	17,4	;volatile
 12785                           
 12786                           ;interrupt_manager.c: 103: {
 12787                           ;interrupt_manager.c: 104: PIR1bits.TXIF=0;
 12788  0863  1211               	bcf	17,4	;volatile
 12789                           
 12790                           ;interrupt_manager.c: 105: }
 12791                           ;interrupt_manager.c: 107: if(PIR3bits.PWM2IF){
 12792  0864  1A93               	btfsc	19,5	;volatile
 12793                           
 12794                           ;interrupt_manager.c: 108: PIR3bits.PWM2IF = 0;
 12795  0865  1293               	bcf	19,5	;volatile
 12796                           
 12797                           ;interrupt_manager.c: 109: }
 12798                           ;interrupt_manager.c: 111: if(PIR3bits.PWM1IF){
 12799  0866  1A13               	btfsc	19,4	;volatile
 12800                           
 12801                           ;interrupt_manager.c: 112: PIR3bits.PWM1IF=0;
 12802  0867  1213               	bcf	19,4	;volatile
 12803  0868  0871               	movf	??_INTERRUPT_InterruptManager+1,w
 12804  0869  00FF               	movwf	127
 12805  086A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 12806  086B  0009               	retfie
 12807  086C                     __end_of_INTERRUPT_InterruptManager:	
 12808  007E                     btemp	set	126	;btemp
 12809  007E                     int$flags	set	126
 12810  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    17
    Data        12
    BSS         148
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     42      80
    BANK1            80      0      56
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           60      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    crc_append@message	PTR unsigned char  size(2) Largest target is 132
		 -> modbusBuf(BANK2[32]), sysData(BIGRAM[132]), 

    crc_verify@message	PTR unsigned char  size(2) Largest target is 132
		 -> modbusBuf(BANK2[32]), sysData(BIGRAM[132]), 

    crc_sum@buf	PTR unsigned char  size(2) Largest target is 132
		 -> modbusBuf(BANK2[32]), sysData(BIGRAM[132]), 

    m_mem_cpy_len@s	PTR unsigned char  size(2) Largest target is 132
		 -> modbusBuf(BANK2[32]), sysData(BIGRAM[132]), eusartRxBuffer(BANK2[32]), 

    m_mem_cpy_len@d	PTR unsigned char  size(2) Largest target is 32
		 -> crc_verify@expected(BANK0[2]), modbusBuf(BANK2[32]), 

    modbus_response_process@rbuf	PTR unsigned char  size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_process@pmdbs	PTR struct . size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_command@rbuf	PTR unsigned char  size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_command@pmdbs	PTR struct . size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_write_mult_register@rbuf	PTR unsigned char  size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_write_mult_register@stb	PTR struct . size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_write_single_register@rbuf	PTR unsigned char  size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_write_single_register@pmdbs	PTR struct . size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    getRegisterVal@tempData	PTR unsigned int  size(1) Largest target is 2
		 -> modbus_response_command@tempData(BANK0[2]), 

    modbus_response_illgeal_function@buf	PTR unsigned char  size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    modbus_response_illgeal_function@pmdbs	PTR struct . size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    my_flash_system_write@buf	PTR unsigned char  size(2) Largest target is 132
		 -> sysData(BIGRAM[132]), 

    my_flash_system_read@buf	PTR unsigned char  size(2) Largest target is 132
		 -> sysData(BIGRAM[132]), 

    uart_send_len@buf	PTR unsigned char  size(1) Largest target is 32
		 -> modbusBuf(BANK2[32]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_adc_sample
    _pid_pwm2_vout_run->___lwdiv
    _pid_pwm2_vout_run->_set_vout_pwm2_duty
    _set_vout_pwm2_duty->_get_vout_pwm2_duty
    _pid_pwm1_idrv_run->___lmul
    _pid_pwm1_idrv_run->_set_idrv_pwm1_duty
    _set_idrv_pwm1_duty->_get_idrv_pwm1_duty
    _modbus_response_write_single_register->_crc_append
    _modbus_response_write_mult_register->_crc_append
    _sys_data_save->_crc_append
    _my_flash_read_system_erase->_FLASH_EraseBlock
    _modbus_response_illgeal_function->_crc_append
    _modbus_response_command->_crc_append
    _crc_append->_crc_sum
    _crc_verify->_m_mem_cpy_len
    _calc_temp_rs->___lldiv
    _calc_temp_rs->___lmul
    _calc_temp_rc->___lldiv
    _calc_temp_rc->___lmul
    _calc_rs_lo_avg->___lldiv
    _calc_expect_vout_adc_value->___lmul
    ___aldiv->___lmul
    _adc_sample->_fvr_set_gain
    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_calc_expect_vout_adc_value
    _sys_data_init->_crc_verify
    _pid_pwm2_vout_run->___awdiv
    _pid_pwm1_idrv_run->___aldiv
    _modbus_response_process->_modbus_response_command
    _modbus_response_process->_modbus_response_write_single_register
    _modbus_response_write_single_register->_crc_append
    _modbus_response_write_mult_register->_crc_append
    _sys_data_save->_crc_append
    _modbus_response_illgeal_function->_crc_append
    _modbus_response_command->_crc_append
    _crc_append->_crc_sum
    _crc_verify->_crc_sum
    _calc_temp_rs->___lldiv
    _calc_temp_rc->___lldiv
    _calc_rs_lo_avg->___lldiv
    _calc_expect_vout_adc_value->___aldiv
    ___aldiv->___lmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   39671
                                             40 BANK0      2     2      0
                  _SYSTEM_Initialize
                         _adc_sample
         _calc_expect_vout_adc_value
                     _calc_rs_lo_avg
                       _calc_temp_rc
                       _calc_temp_rs
                      _m_mem_cpy_len
            _modbus_response_process
                  _pid_pwm1_idrv_run
                  _pid_pwm2_vout_run
                      _sys_data_init
                _uart_received_start
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (1) _uart_received_start                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sys_data_init                                       10    10      0    5068
                                             16 BANK0     10    10      0
                             ___wmul
                         _crc_verify
               _my_flash_system_read
                      _sys_data_save
 ---------------------------------------------------------------------------------
 (2) _my_flash_system_read                                11     7      4     287
                                              2 COMMON     6     2      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     348
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _pid_pwm2_vout_run                                    6     6      0    1467
                                              4 BANK0      6     6      0
                            ___awdiv
                            ___lwdiv
                 _set_vout_pwm2_duty
 ---------------------------------------------------------------------------------
 (2) _set_vout_pwm2_duty                                   4     2      2     275
                                              8 COMMON     2     0      2
                                              0 BANK0      2     2      0
                 _get_vout_pwm2_duty
 ---------------------------------------------------------------------------------
 (3) _get_vout_pwm2_duty                                   6     4      2      40
                                              2 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     599
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _pid_pwm1_idrv_run                                   12    12      0    2813
                                             19 BANK0     12    12      0
                            ___aldiv
                             ___lmul
                 _set_idrv_pwm1_duty
 ---------------------------------------------------------------------------------
 (2) _set_idrv_pwm1_duty                                   4     2      2     275
                                              8 COMMON     2     0      2
                                              0 BANK0      2     2      0
                 _get_idrv_pwm1_duty
 ---------------------------------------------------------------------------------
 (3) _get_idrv_pwm1_duty                                   6     4      2      40
                                              2 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _modbus_response_process                              6     4      2   20144
                                             27 BANK0      6     4      2
                         _crc_verify
            _modbus_response_command
   _modbus_response_illgeal_function
_modbus_response_write_mult_register
_modbus_response_write_single_regist
 ---------------------------------------------------------------------------------
 (2) _modbus_response_write_single_register               12    12      0    5933
                                             15 BANK0     12    12      0
                         _crc_append
                      _sys_data_save
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (2) _modbus_response_write_mult_register                  5     5      0    5305
                                             15 BANK0      5     5      0
                         _crc_append
                      _sys_data_save
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (2) _sys_data_save                                        0     0      0    2600
                         _crc_append
         _my_flash_read_system_erase
              _my_flash_system_write
 ---------------------------------------------------------------------------------
 (3) _my_flash_system_write                               16    12      4     449
                                              2 COMMON     6     2      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) _my_flash_read_system_erase                           0     0      0     451
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (4) _FLASH_EraseBlock                                     3     1      2     451
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _modbus_response_illgeal_function                     4     3      1    2652
                                             15 BANK0      4     3      1
                         _crc_append
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (2) _modbus_response_command                             12    12      0    4228
                                             15 BANK0     12    12      0
                         _crc_append
                     _getRegisterVal
                      _uart_send_len
 ---------------------------------------------------------------------------------
 (1) _uart_send_len                                        4     3      1     560
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _getRegisterVal                                      10     7      3     945
                                              2 COMMON     7     4      3
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _crc_append                                          11     7      4    1700
                                              8 COMMON     2     2      0
                                              6 BANK0      9     5      4
                            _crc_sum
 ---------------------------------------------------------------------------------
 (2) _crc_verify                                          10     6      4    1600
                                              6 BANK0     10     6      4
                            _crc_sum
                      _m_mem_cpy_len
 ---------------------------------------------------------------------------------
 (3) _m_mem_cpy_len                                        7     1      6     387
                                              2 COMMON     7     1      6
 ---------------------------------------------------------------------------------
 (4) _crc_sum                                             12     8      4     679
                                              2 COMMON     6     2      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _calc_temp_rs                                         8     4      4    1973
                                              6 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _calc_temp_rc                                        12     8      4    1973
                                              6 BANK0     12     8      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _calc_rs_lo_avg                                       9     7      2    1262
                                              6 BANK0      9     7      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     857
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _calc_expect_vout_adc_value                          21    19      2    3021
                                             19 BANK0     21    19      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1116
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8    1215
                                              4 BANK0     15     7      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _adc_sample                                          12    10      2     894
                                              5 COMMON     5     3      2
                                              0 BANK0      7     7      0
                           _adc_init
                       _fvr_set_gain
 ---------------------------------------------------------------------------------
 (2) _fvr_set_gain                                         3     3      0      69
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     109
                    _ADC1_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC1_Initialize
     _EUSART_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _WDT_Initialize
   _adc_sample
     _adc_init
     _fvr_set_gain
   _calc_expect_vout_adc_value
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _calc_rs_lo_avg
     ___lldiv
   _calc_temp_rc
     ___lldiv
     ___lmul
   _calc_temp_rs
     ___lldiv
     ___lmul
   _m_mem_cpy_len
   _modbus_response_process
     _crc_verify
       _crc_sum
       _m_mem_cpy_len
     _modbus_response_command
       _crc_append
         _crc_sum
       _getRegisterVal
       _uart_send_len
     _modbus_response_illgeal_function
       _crc_append
         _crc_sum
       _uart_send_len
     _modbus_response_write_mult_register
       _crc_append
         _crc_sum
       _sys_data_save
         _crc_append
           _crc_sum
         _my_flash_read_system_erase
           _FLASH_EraseBlock
         _my_flash_system_write
       _uart_send_len
     _modbus_response_write_single_register
       _crc_append
         _crc_sum
       _sys_data_save
         _crc_append
           _crc_sum
         _my_flash_read_system_erase
           _FLASH_EraseBlock
         _my_flash_system_write
       _uart_send_len
   _pid_pwm1_idrv_run
     ___aldiv
       ___lmul (ARG)
     ___lmul
     _set_idrv_pwm1_duty
       _get_idrv_pwm1_duty
   _pid_pwm2_vout_run
     ___awdiv
     ___lwdiv
     _set_vout_pwm2_duty
       _get_vout_pwm2_duty
   _sys_data_init
     ___wmul
     _crc_verify
       _crc_sum
       _m_mem_cpy_len
     _my_flash_system_read
     _sys_data_save
       _crc_append
         _crc_sum
       _my_flash_read_system_erase
         _FLASH_EraseBlock
       _my_flash_system_write
   _uart_received_start
   _uart_send_len

 _INTERRUPT_InterruptManager (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      38       7       70.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      D4      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              3C      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           20      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      D4      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Wed Nov 28 21:29:31 2018

              __end_of_TMR2_SetInterruptHandler 1D02                                               pc 0002  
                  ??_my_flash_read_system_erase 0075                                    ___awdiv@sign 0021  
                                            _x0 004E                                              _x1 00BC  
                                            _y0 0052                                              _y1 00C0  
                        __end_of_FVR_Initialize 1CF0                             ___wmul@multiplicand 0074  
                                           l603 1D79                                             l621 130F  
                                           l615 12F5                                             l609 1D52  
                                           l634 17F9                                             l490 1E98  
                                           l714 14BE                                             l804 0D48  
                                           l644 0FA0                                             l629 1591  
                                           l717 1512                                             l646 0FE6  
                                           l639 0C17                                             l665 0AAA  
                                           l768 1174                                             _GIE 005F  
                                           _PR2 001B                                 _pwm1DutyForIdrv 00D4  
                                           _x32 00B8                                             _y32 004A  
                                           _err 00A0                                 _TMR2_Initialize 1D3E  
                                           wreg 0009                            ??_get_vout_pwm2_duty 0074  
                          ??_set_vout_pwm2_duty 007A                                 ??_uart_send_len 0073  
                                          S5274 1800                                            l1123 1421  
                                          l1044 1291                                            l1046 12AF  
                                          l1068 1E03                                            l3240 151A  
                                          l3216 14EA                                            l3208 14D0  
                                          l3226 14FD                                            l3218 14EC  
                                          l5030 08C1                                            l5014 136F  
                                          l5006 134B                                            l3270 1E93  
                                          l3512 1D72                                            l5040 091E  
                                          l3360 1E32                                            l5120 126A  
                                          l5112 1251                                            l5122 126F  
                                          l5044 0926                                            l4500 12DB  
                                          l3196 14B9                                            l5116 1260  
                                          l5118 1265                                            l5126 1276  
                                          l5064 09E1                                            l5058 09C0  
                                          l3554 10DF                                            l5090 15ED  
                                          l4540 0EAD                                            l3556 110A  
                                          l5148 0DA5                                            l4550 0EE4  
                                          l4542 0EBA                                            l4534 0E82  
                                          l3742 1DFD                                            l5190 0E75  
                                          l5182 0E4E                                            l3760 1014  
                                          l4560 0F0C                                            l4552 0EEC  
                                          l4544 0EC7                                            l4536 0E8A  
                                          l5096 163E                                            l5192 0E78  
                                          l4810 1432                                            l4626 10D1  
                                          l4562 0F15                                            l4554 0EF4  
                                          l4546 0ED4                                            l4538 0E9A  
                                          l4570 0F33                                            l4714 0D4A  
                                          l5178 0E47                                            l4820 1450  
                                          l3756 1009                                            l4900 1222  
                                          l4492 12C1                                            l4580 0F57  
                                          l4564 0F1E                                            l4556 0EFC  
                                          l4548 0EDC                                            l4708 0D1A  
                                          l4558 0F04                                            l4718 0D50  
                                          l4662 0C52                                            l3936 12FF  
                                          l4832 147B                                            l4904 122D  
                                          l4920 1589                                            l4568 0F26  
                                          l4656 0C42                                            l3946 1302  
                                          l4818 1442                                            l4498 12D6  
                                          l4682 0CA6                                            l4674 0C88  
                                          l3948 1338                                            l4836 1489  
                                          l4828 1470                                            l4918 157D  
                                          l4774 16B7                                            l4854 11A7  
                                          l3894 1058                                            l3886 103A  
                                          l4936 17E5                                            l4880 11DE  
                                          l4872 11CD                                            l4864 11AF  
                                          l4848 119C                                            l3888 1046  
                                          l4890 11F4                                            l4938 17F1  
                                          l4786 16B8                                            l4866 11BB  
                                          l3898 1061                                            l4892 1202  
                                          l4788 16EA                                            l4964 0BF8  
                                          l4876 11D6                                            l4966 0C00  
                                          l4968 0C0F                                            l4984 0FB1  
                                          l4996 0FF7                         __end_of_PWM1_Initialize 1D95  
                                          u2115 14A3                                            _LATA 010C  
                                          u3015 1047                                            _LATC 010E  
                                          u3105 130B                                            u2145 14DE  
                                          u3025 1051                                            u3035 1059  
                                          u4005 0C5F                                            u2270 114D  
                                          u2175 14C4                                            u2345 10E5  
                                          u3085 131C                                            u3095 1324  
                                          u4065 0CC7                                            u4245 1445  
                                          u2645 1E04                                            u2655 1E09  
                                          u4265 1451                                            u4425 11F7  
                                          u4185 1692                                            u4345 11B2  
                                          u4275 1465                                            u4285 1471  
                                          u2685 1015                                            u4445 1203  
                                          u4365 11BC                                            u2695 101C  
                                          u4455 1217                                            u4375 11C6  
                                          u4625 08F3                                            u4465 1223  
                                          u4385 11CE                                            u4635 0914  
                                          u3915 1E62                                            u4555 0F99  
                                          u3925 1E7F                                            u4565 0FAA  
                                          u4663 09B6                                            u3855 1297  
                                          u3935 10CD                                            u4575 0FDF  
                                          u3865 1DB7                                            u4585 0FF0  
                                          u4683 09DA                                            u2995 103D  
                                          u3875 1DD0                                            u4917 12F0  
                                          u4775 0DDE                                            u4785 0DF4  
                                          u4795 0E0A                                   _m_mem_cpy_len 1E32  
                                          _TMR2 001A                                            _WPUA 020C  
                                          _WPUC 020E                                            _main 0D79  
modbus_response_write_single_register@startAddr 0039                                            _pidU 00D0  
           __size_of_my_flash_read_system_erase 0023                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            _xlen 0067  
                                          btemp 007E                                            start 086C  
                               _pwm2DutyForVout 00D6                       ??_modbus_response_command 002F  
                       __end_of_PWM2_Initialize 1DAE                       ??_modbus_response_process 003D  
                               ?_FVR_Initialize 0070                  __size_of_OSCILLATOR_Initialize 0001  
                 __end_of_OSCILLATOR_Initialize 1000                                 __end_of___aldiv 1492  
                                         ?_main 0070                                 __end_of___awdiv 11E3  
                               __end_of___lldiv 1236                                 ___awdiv@divisor 0072  
                                         _T2CON 001C                                 __end_of___lwdiv 1066  
                               ___awdiv@counter 0020                                           _RCREG 0199  
                                         _RCSTA 019D                                           _TRISA 008C  
                                         _TRISC 008E                                           _TXREG 019A  
                                         _TXSTA 019E                modbus_response_command@startAddr 0033  
                           ___lmul@multiplicand 0076                                           _PidKp 00CC  
                                         _PidTd 00C8                                           _Event 006B  
                                         _PidTi 00CA                                 __end_of_crc_sum 12E0  
                                _WDT_Initialize 1CF0                                           _resRc 006E  
                                         _resRs 006C          modbus_response_write_mult_register@len 0031  
                                ?_m_mem_cpy_len 0072          modbus_response_write_mult_register@stb 0033  
                    __end_of_get_idrv_pwm1_duty 1DC7                      __end_of_set_idrv_pwm1_duty 1E6C  
                            crc_verify@expected 002E                                           status 0003  
                                         wtemp0 007E                                 _TMR2_StartTimer 1CE9  
                                 fvr_set_gain@g 0074     __end_of_modbus_response_write_mult_register 1410  
  __size_of_modbus_response_write_mult_register 0072           ??_modbus_response_write_mult_register 002F  
          ?_modbus_response_write_mult_register 0070             _modbus_response_write_mult_register 139E  
            __end_of_calc_expect_vout_adc_value 0AAF                      _calc_expect_vout_adc_value 08BB  
                              __end_of_HexTable 182F                            pid_pwm1_idrv_run@t32 003B  
                               __initialization 086E                                    __end_of_main 0E7A  
                         __size_of_calc_temp_rc 00D9                           __size_of_calc_temp_rs 0090  
                       __end_of_TMR2_Initialize 1D51                     ?_INTERRUPT_InterruptManager 0070  
           modbus_response_illgeal_function@buf 0031                        _TMR2_SetInterruptHandler 1CFC  
                                        ??_main 0048                                ??_calc_rs_lo_avg 0028  
                   modbus_response_process@rbuf 0040                   __size_of_my_flash_system_read 003D  
                   modbus_response_process@rlen 003B                     modbus_response_process@resp 003E  
               __end_of_modbus_response_command 1727                          __end_of_WDT_Initialize 1CF4  
                  my_flash_system_write@blocNum 0023                                          _ADCON0 009D  
                                        _ADCON1 009E                                          _ADCON2 009F  
                                        _ADRESH 009C                                          _ADRESL 009B  
                              ___awdiv@dividend 0074                                          _ANSELA 018C  
                                        _ANSELC 018E                 __end_of_modbus_response_process 128A  
                              __end_of_adc_init 1D65                                ?_PWM1_Initialize 0070  
                                        _ODCONA 028C                                          _ODCONC 028E  
                                        i1l4310 085D                                          i1l4304 0847  
                                        i1l4312 0861                                          i1l4282 0827  
                                        i1l4292 0834                                          i1l4276 0821  
                                        i1l4294 0839                                          _FVRCON 0117  
                                        _PMADRH 0192                                          _PMADRL 0191  
                                        _PMDATH 0194                                          _PMDATL 0193  
                                        _PMCON2 0196                       __size_of_FLASH_EraseBlock 001C  
                   __end_of_uart_received_start 1CF8                                          _SPBRGH 019C  
                                        _SPBRGL 019B                                          _WDTCON 0097  
                                  _calc_temp_rc 1727                                    _calc_temp_rs 1520  
                               calc_rs_lo_avg@i 002E                                 calc_rs_lo_avg@x 0026  
            __end_of_my_flash_read_system_erase 1ECF                      _my_flash_read_system_erase 1EAC  
    modbus_response_write_single_register@pmdbs 0037                                          ___lmul 1000  
                                     ??___aldiv 002C                                          ___wmul 1DFB  
                                     ??___awdiv 0076                                       ??___lldiv 0020  
                                     ??___lwdiv 0076                                ?_PWM2_Initialize 0070  
                                        _pwm2Ei 00C4                                ___awdiv@quotient 0022  
                      my_flash_system_write@buf 0072                        my_flash_system_write@len 0074  
                      my_flash_system_write@loc 0025                                       ??_crc_sum 0076  
                      __size_of_ADC1_Initialize 0009                                          _rxtemp 0068  
                               ?_WDT_Initialize 0070                                 ??_m_mem_cpy_len 0078  
              my_flash_system_write@GIEBitValue 0022                         __end_of_TMR2_StartTimer 1CEC  
      TMR2_SetInterruptHandler@InterruptHandler 0072                 modbus_response_command@tempData 0039  
      __end_of_modbus_response_illgeal_function 1191       __size_of_modbus_response_illgeal_function 0042  
            ??_modbus_response_illgeal_function 0030               ?_modbus_response_illgeal_function 002F  
              _modbus_response_illgeal_function 114F                                   ?_fvr_set_gain 0070  
                                fvr_set_gain@t8 0073                               _SYSTEM_Initialize 1DE0  
                       __end_of__initialization 08B7                          __size_of_sys_data_init 00B8  
                         _my_flash_system_write 1492                              ?_SYSTEM_Initialize 0070  
                        __size_of_sys_data_save 0036                              getRegisterVal@addr 0072  
                                __pcstackCOMMON 0070                                    __pidataBANK0 1CF8  
                                  __pidataBANK1 1D02                             ??_SYSTEM_Initialize 0074  
                                    _adc_sample 12E0          modbus_response_write_single_register@i 0036  
                              ?_TMR2_Initialize 0070                                  _OPTION_REGbits 0095  
      modbus_response_write_single_register@t16 0034                               crc_append@message 0026  
                        getRegisterVal@tempAddr 0022                          my_flash_system_write@i 0029  
                        my_flash_system_write@j 0020                          getRegisterVal@tempData 0074  
                     __end_of_SYSTEM_Initialize 1DFB                                  ??_fvr_set_gain 0072  
                                    __pbssBANK0 004A                                      __pbssBANK1 00A0  
                                    __pbssBANK2 0120                  modbus_response_command@tmpAddr 0031  
               my_flash_system_read@GIEBitValue 0020                                      adc_init@ch 0073  
                              ??_FVR_Initialize 0072                                      __pmaintext 0D79  
                    modbus_response_command@len 0037                                         ?___lmul 0072  
                                       ?___wmul 0072                                      __pintentry 0804  
                  ??_calc_expect_vout_adc_value 0035                                         _BAUDCON 019F  
                                ___lmul@product 0020                                      _crc_append 1ECF  
                                     ?_adc_init 0070                                    adc_sample@ch 0020  
                                 _sys_data_init 15B0                                   _sys_data_save 1066  
                                    _crc_verify 109C                                   _eusartRxCount 006A  
                   __size_of_get_vout_pwm2_duty 0019                     __size_of_set_vout_pwm2_duty 001D  
                                       _PWM1DCH 0D94                                         _PWM1DCL 0D93  
                                       _PWM2DCH 0DA4                                         _PWM2DCL 0DA3  
                                       _PWM1CON 0D9B                                         _PWM2CON 0DAB  
                                       _PWM1OFH 0D98                                         _PWM1OFL 0D97  
                                       _PWM2OFH 0DA8                                         _PWM1PHH 0D92  
                                       _PWM2OFL 0DA7                                         _PWM1PHL 0D91  
                                       _PWM2PHH 0DA2                                         _PWM2PHL 0DA1  
                                       _PWM1PRH 0D96                                         _PWM1PRL 0D95  
                                       _PWM2PRH 0DA6                                         _PWM2PRL 0DA5  
         modbus_response_illgeal_function@pmdbs 0032                                         _PPSLOCK 0E0F  
                             ??_ADC1_Initialize 0072                                ?_TMR2_StartTimer 0070  
                        set_idrv_pwm1_duty@duty 0078                           __end_of_uart_send_len 1EAC  
                              _FLASH_EraseBlock 1E16                          ?_my_flash_system_write 0072  
                       __size_of_getRegisterVal 00F4                     ?_calc_expect_vout_adc_value 0033  
   modbus_response_write_single_register@fiSave 0033                      ??_TMR2_SetInterruptHandler 0074  
                                       ___aldiv 1410                                         ___awdiv 1191  
                               __size_of___lmul 0032                                         ___lldiv 11E3  
                               __size_of___wmul 001B                              _get_idrv_pwm1_duty 1DAE  
                            _set_idrv_pwm1_duty 1E4F                                         ___lwdiv 1032  
                                   ?_adc_sample 0075                                  adc_sample@gfvr 0075  
                                ?_sys_data_init 0070                                  ?_sys_data_save 0070  
                                    ??_adc_init 0072                                         __ptext1 1CF4  
                                       __ptext2 15B0                                         __ptext3 10D3  
                                       __ptext4 1DFB                                         __ptext5 0F6E  
                                       __ptext6 1E6C                                         __ptext7 1DC7  
                                       __ptext8 1032                                         __ptext9 1191  
                                       _crc_sum 128A                                         _pidBbSm 0066  
                           ?_get_idrv_pwm1_duty 0072                             ?_set_idrv_pwm1_duty 0078  
                         _OSCILLATOR_Initialize 0FFF                                       _T2CONbits 001C  
                                    _rsLoAvgBuf 00AC                                         _rsLoAvg 0056  
                              ___aldiv@dividend 0028                        ??_PIN_MANAGER_Initialize 0072  
                                       _sysData 235C                      __size_of_SYSTEM_Initialize 001B  
                                       clrloop0 1D14                            end_of_initialization 08B7  
                                       init_ram 1D1F                        ?_modbus_response_command 0070  
                                       initloop 1D20                    __end_of_my_flash_system_read 1110  
                          ??_get_idrv_pwm1_duty 0074                            ??_set_idrv_pwm1_duty 007A  
                             _EUSART_Initialize 1D2B                                 ___lldiv@divisor 0072  
                                    _voExpectMv 00C6                                 ___lldiv@counter 0025  
                            ?_EUSART_Initialize 0070                        ?_modbus_response_process 003B  
                                     _RCSTAbits 019D                     ?_my_flash_read_system_erase 0070  
                              ___aldiv@quotient 002F                                       _PWM1LDCON 0D9F  
                                     _PWM2LDCON 0DAF                                       _PWM1OFCON 0DA0  
                                     _PWM2OFCON 0DB0                            __end_of_fvr_set_gain 1D7C  
                                   ?_crc_append 0026                                      _subTickerX 007A  
                           ??_EUSART_Initialize 0072                                ??_WDT_Initialize 0072  
                                   ?_crc_verify 0026                                      crc_sum@crc 0024  
                                    crc_sum@buf 0072                                      crc_sum@len 0074  
                                     _RXPPSbits 0E15                             __size_of_adc_sample 005D  
                     __end_of_EUSART_Initialize 1D3E                                    _globalTicker 00CE  
                                     _TXSTAbits 019E                        __size_of_PWM1_Initialize 0019  
                  __size_of_uart_received_start 0004                    _TMR2_DefaultInterruptHandler 0000  
                               ??_sys_data_init 0030                                 ??_sys_data_save 007A  
                                __end_of___lmul 1032                                  __end_of___wmul 1E16  
                              _voExpectAdcValue 0058                                  _rtAdcValueRcHi 005C  
                                _rtAdcValueRcLo 005E                                  _rtAdcValueRsHi 0060  
                                _rtAdcValueVoFb 005A                                  _rtAdcValueRsLo 0062  
                        ?_OSCILLATOR_Initialize 0070                               crc_verify@message 0026  
                           start_initialization 086E                        __size_of_PWM2_Initialize 0019  
               __size_of_PIN_MANAGER_Initialize 003F                                   _PWM1LDCONbits 0D9F  
                       my_flash_system_read@buf 0072                         my_flash_system_read@len 0074  
                         __end_of_m_mem_cpy_len 1E4F                                   _PWM2LDCONbits 0DAF  
                                _getRegisterVal 0E7A                         __size_of_calc_rs_lo_avg 0061  
                           __size_of_crc_append 0031                             __size_of_crc_verify 0037  
     modbus_response_write_single_register@rbuf 0038                                        ??___lmul 007A  
                                      ??___wmul 0076                                     __pdataBANK0 006C  
                                   __pdataBANK1 00D0                     FLASH_EraseBlock@GIEBitValue 0074  
                               _ADC1_Initialize 1D0A                        __end_of_FLASH_EraseBlock 1E32  
                          _my_flash_system_read 10D3                                     __pbssBIGRAM 235C  
                             __size_of_adc_init 0014                                     __pbssCOMMON 007A  
                                     ___latbits 0002                               getRegisterVal@t16 0020  
                                 __pcstackBANK0 0020                        __size_of_TMR2_Initialize 0013  
                       ??_my_flash_system_write 0076                          __end_of_getRegisterVal 0F6E  
                         my_flash_system_read@i 0023                      __size_of_EUSART_Initialize 0013  
       modbus_response_illgeal_function@errcode 002F                           __size_of_fvr_set_gain 0017  
                              ___lwdiv@dividend 0074                          _PIN_MANAGER_Initialize 1110  
                   modbus_response_command@rbuf 0038                                        ?___aldiv 0024  
                         get_idrv_pwm1_duty@t16 0076                                        ?___awdiv 0072  
                                      ?___lldiv 0072                                    ??_adc_sample 0077  
                                   adc_sample@i 0021                                        ?___lwdiv 0072  
                             ??_PWM1_Initialize 0072                    ??_INTERRUPT_InterruptManager 0070  
                         set_idrv_pwm1_duty@t16 0020                                       __pswtext1 1800  
                                      ?_crc_sum 0072                   my_flash_system_read@flashAddr 0021  
                    __end_of_get_vout_pwm2_duty 1DE0                           ?_my_flash_system_read 0072  
                    __end_of_set_vout_pwm2_duty 1E89                                uart_send_len@buf 0075  
                              uart_send_len@len 0072                                   adc_sample@t16 0025  
                              ___lwdiv@quotient 0077                                   adc_sample@ret 0023  
                                 adc_sample@num 0076                                 ?_getRegisterVal 0072  
                                  _fvr_set_gain 1D65                                  _eusartRxBuffer 0140  
                                     _modbusBuf 0120                                 ___aldiv@divisor 0024  
                             ??_PWM2_Initialize 0072                              __end_of_adc_sample 133D  
                               ___aldiv@counter 002D                                  ___wmul@product 0076  
                                     _pidpwm2_U 00D2                               _pid_pwm1_idrv_run 0AAF  
                                     clear_ram0 1D13                                  m_mem_cpy_len@d 0072  
                                m_mem_cpy_len@s 0074                                   ?_calc_temp_rc 0026  
                                 ?_calc_temp_rs 0026                                        _PIE1bits 0091  
                      __size_of_TMR2_StartTimer 0003                          set_vout_pwm2_duty@duty 0078  
           __size_of_INTERRUPT_InterruptManager 0068                              ?_pid_pwm1_idrv_run 0070  
                       __end_of_ADC1_Initialize 1D13                                        _PIR1bits 0011  
                                      _PIR3bits 0013                       FLASH_EraseBlock@startAddr 0072  
                                      _PWM1INTE 0D9C                                        _PWM1INTF 0D9D  
                                      _PWM2INTE 0DAC                                        _PWM2INTF 0DAD  
                                      _PWM1TMRH 0D9A                                        _PWM1TMRL 0D99  
                                      _PWM2TMRH 0DAA                                        _PWM2TMRL 0DA9  
                                  ??_crc_append 002A                __size_of_modbus_response_command 00BF  
                           ??_pid_pwm1_idrv_run 0033                          __size_of_uart_send_len 0023  
                                    _ADCON0bits 009D                               ___wmul@multiplier 0072  
                                  ??_crc_verify 002A                         __size_of_FVR_Initialize 0004  
              __size_of_modbus_response_process 0054               __size_of_TMR2_SetInterruptHandler 0006  
                     ?_TMR2_SetInterruptHandler 0072                                     _isRunInBoot 0FFF  
                           _uart_received_start 1CF4                               _pid_pwm2_vout_run 0F6E  
                                      _HexTable 181E                               ___lmul@multiplier 0072  
                              crc_verify@crccal 002C                                  _calc_rs_lo_avg 133D  
                            ?_pid_pwm2_vout_run 0070                       __end_of_pid_pwm1_idrv_run 0C25  
                             ??_TMR2_Initialize 0074                                  ??_calc_temp_rc 002A  
                                ??_calc_temp_rs 002A                              __end_of_crc_append 1F00  
                             calc_rs_lo_avg@t32 002A                     __size_of_get_idrv_pwm1_duty 0019  
                   __size_of_set_idrv_pwm1_duty 001D                             ??_pid_pwm2_vout_run 0024  
                            __end_of_crc_verify 10D3                                    _PWM1INTFbits 0D9D  
                          ?_uart_received_start 0070                                    _PWM2INTFbits 0DAD  
                       ??_OSCILLATOR_Initialize 0072         modbus_response_write_mult_register@rbuf 0032  
                              __size_of___aldiv 0082                                __size_of___awdiv 0052  
                              __size_of___lldiv 0053                                __size_of___lwdiv 0034  
                        ??_my_flash_system_read 0076                                        _adc_init 1D51  
                              __size_of_crc_sum 0056                           pid_pwm2_vout_run@__ei 0026  
                           _eusartRxIdleTime_ms 007B                       __end_of_pid_pwm2_vout_run 0FFF  
                                 crc_append@crc 0078                                sys_data_init@ret 0036  
                               ___lwdiv@divisor 0072                                 ___lwdiv@counter 0079  
                                      __ptext10 0AAF                                        __ptext11 1E4F  
                                      __ptext20 114F                                        __ptext12 1DAE  
                                      __ptext21 1668                                        __ptext13 1236  
                                      __ptext30 133D                                        __ptext22 1E89  
                                      __ptext14 0C25                                        __ptext31 11E3  
                                      __ptext23 0E7A                                        __ptext15 139E  
                                      __ptext40 1D3E                                        __ptext32 08BB  
                                      __ptext24 1ECF                                        __ptext16 1066  
                                      __ptext41 1CE9                                        __ptext33 1000  
                                      __ptext25 109C                                        __ptext17 1492  
                                      __ptext42 1CFC                                        __ptext34 1410  
                                      __ptext26 1E32                                        __ptext18 1EAC  
                                      __ptext43 1D95                                        __ptext35 12E0  
                                      __ptext27 128A                                        __ptext19 1E16  
                                      __ptext44 1D7C                                        __ptext36 1D65  
                                      __ptext28 1520                                        __ptext45 1110  
                                      __ptext37 1D51                                        __ptext29 1727  
                                      __ptext46 0FFF                                        __ptext38 1DE0  
                                      __ptext47 1CEC                                        __ptext39 1CF0  
                                      __ptext48 1D2B                                        __ptext49 1D0A  
                        __end_of_calc_rs_lo_avg 139E                                   _uart_send_len 1E89  
                         get_vout_pwm2_duty@t16 0076                                   __size_of_main 0101  
                                 _subTickerX_1s 0069                           set_vout_pwm2_duty@t16 0020  
                                    _RA4PPSbits 0E94                           ??_uart_received_start 0072  
                                    _RA5PPSbits 0E95                                ?_ADC1_Initialize 0070  
                my_flash_system_write@flashAddr 0027                                        int$flags 007E  
                                      crc_sum@i 0022                                        crc_sum@j 0020  
                                    _RC5PPSbits 0EA5   __end_of_modbus_response_write_single_register 0D79  
__size_of_modbus_response_write_single_register 0154         ??_modbus_response_write_single_register 002F  
        ?_modbus_response_write_single_register 0070           _modbus_response_write_single_register 0C25  
                             ??_TMR2_StartTimer 0072              __end_of_INTERRUPT_InterruptManager 086C  
                    _INTERRUPT_InterruptManager 0804                           __end_of_sys_data_init 1668  
                         __end_of_sys_data_save 109C                               ?_FLASH_EraseBlock 0072  
                 calc_expect_vout_adc_value@t32 0043                     PIN_MANAGER_Initialize@state 0072  
                      modbus_response_command@i 0035                              ??_FLASH_EraseBlock 0074  
                                    _INTCONbits 000B                                     _PWM1CONbits 0D9B  
                              m_mem_cpy_len@len 0076                                      _FVRCONbits 0117  
                                   _PWM2CONbits 0DAB                                 ?_calc_rs_lo_avg 0026  
                  modbus_response_process@pmdbs 003F                         __size_of_WDT_Initialize 0004  
                                ?_uart_send_len 0072                                        intlevel1 0000  
                __size_of_my_flash_system_write 008E                            pid_pwm2_vout_run@t16 0028  
                 __end_of_my_flash_system_write 1520                      __size_of_pid_pwm1_idrv_run 0176  
                                    _PMCON1bits 0195                                ___lldiv@dividend 0076  
                       ?_PIN_MANAGER_Initialize 0070    modbus_response_write_mult_register@startAddr 0030  
                                uart_send_len@i 0074                                     _PPSLOCKbits 0E0F  
                               _PWM1_Initialize 1D7C                    modbus_response_command@pmdbs 0036  
                       _modbus_response_command 1668                                      _PWM1CLKCON 0D9E  
                                    _PWM2CLKCON 0DAE                          __size_of_m_mem_cpy_len 001D  
                                 __pstringtext1 181E                                  _FVR_Initialize 1CEC  
                       _modbus_response_process 1236                                  sys_data_init@i 0038  
                                   crc_append@n 0028                            __end_of_calc_temp_rc 1800  
                          __end_of_calc_temp_rs 15B0                                ___lldiv@quotient 0021  
                              ??_getRegisterVal 0075                                 _PWM2_Initialize 1D95  
                    __size_of_pid_pwm2_vout_run 0091                                    ___aldiv@sign 002E  
                   calc_expect_vout_adc_value@i 0047                     calc_expect_vout_adc_value@x 0033  
           __size_of_calc_expect_vout_adc_value 01F4                  __end_of_PIN_MANAGER_Initialize 114F  
                            _get_vout_pwm2_duty 1DC7                              _set_vout_pwm2_duty 1E6C  
                         _TMR2_InterruptHandler 0064                                     crc_verify@n 0028  
                           ?_get_vout_pwm2_duty 0072                             ?_set_vout_pwm2_duty 0078  
